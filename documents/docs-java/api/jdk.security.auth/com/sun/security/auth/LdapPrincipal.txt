LdapPrincipal (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
jdk.security.auth
Package
com.sun.security.auth
Class LdapPrincipal
java.lang.Object
com.sun.security.auth.LdapPrincipal
All Implemented Interfaces:
Serializable
,
Principal
public final class
LdapPrincipal
extends
Object
implements
Principal
,
Serializable
A principal identified by a distinguished name as specified by
RFC 2253
.
After successful authentication, a user
Principal
can be associated with a particular
Subject
to augment that
Subject
with an additional identity.
 Authorization decisions can then be based upon the
Principal
s that are associated with a
Subject
.
This class is immutable.
Since:
1.6
See Also:
Serialized Form
Constructor Summary
Constructors
Constructor
Description
LdapPrincipal
(
String
name)
Creates an LDAP principal.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
boolean
equals
(
Object
object)
Compares this principal to the specified object.
String
getName
()
Returns the name originally used to create this principal.
int
hashCode
()
Computes the hash code for this principal.
String
toString
()
Creates a string representation of this principal's name in the format
 defined by
RFC 2253
.
Methods declared in class java.lang.
Object
clone
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Methods declared in interface java.security.
Principal
implies
Constructor Details
LdapPrincipal
public
LdapPrincipal
(
String
name)
throws
InvalidNameException
Creates an LDAP principal.
Parameters:
name
- The principal's string distinguished name.
Throws:
InvalidNameException
- If a syntax violation is detected.
NullPointerException
- If the
name
is
null
.
Method Details
equals
public
boolean
equals
(
Object
object)
Compares this principal to the specified object.
Specified by:
equals
in interface
Principal
Overrides:
equals
in class
Object
Parameters:
object
- The object to compare this principal against.
Returns:
true if they are equal; false otherwise.
See Also:
Object.hashCode()
HashMap
hashCode
public
int
hashCode
()
Computes the hash code for this principal.
Specified by:
hashCode
in interface
Principal
Overrides:
hashCode
in class
Object
Returns:
The principal's hash code.
See Also:
Object.equals(java.lang.Object)
System.identityHashCode(java.lang.Object)
getName
public
String
getName
()
Returns the name originally used to create this principal.
Specified by:
getName
in interface
Principal
Returns:
The principal's string name.
toString
public
String
toString
()
Creates a string representation of this principal's name in the format
 defined by
RFC 2253
.
 If the name has zero components an empty string is returned.
Specified by:
toString
in interface
Principal
Overrides:
toString
in class
Object
Returns:
The principal's string name.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.