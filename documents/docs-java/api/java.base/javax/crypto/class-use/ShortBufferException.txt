Uses of Class javax.crypto.ShortBufferException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.crypto.ShortBufferException
Packages that use
ShortBufferException
Package
Description
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
Uses of
ShortBufferException
in
javax.crypto
Methods in
javax.crypto
that throw
ShortBufferException
Modifier and Type
Method
Description
final int
Cipher.
doFinal
(byte[] output,
 int outputOffset)
Finishes a multiple-part encryption or decryption operation, depending
 on how this
Cipher
object was initialized.
final int
Cipher.
doFinal
(byte[] input,
 int inputOffset,
 int inputLen,
 byte[] output)
Encrypts or decrypts data in a single-part operation, or finishes a
 multiple-part operation.
final int
Cipher.
doFinal
(byte[] input,
 int inputOffset,
 int inputLen,
 byte[] output,
 int outputOffset)
Encrypts or decrypts data in a single-part operation, or finishes a
 multiple-part operation.
final int
Cipher.
doFinal
(
ByteBuffer
input,
ByteBuffer
output)
Encrypts or decrypts data in a single-part operation, or finishes a
 multiple-part operation.
final void
Mac.
doFinal
(byte[] output,
 int outOffset)
Finishes the MAC operation.
protected abstract int
CipherSpi.
engineDoFinal
(byte[] input,
 int inputOffset,
 int inputLen,
 byte[] output,
 int outputOffset)
Encrypts or decrypts data in a single-part operation,
 or finishes a multiple-part operation.
protected int
CipherSpi.
engineDoFinal
(
ByteBuffer
input,
ByteBuffer
output)
Encrypts or decrypts data in a single-part operation,
 or finishes a multiple-part operation.
protected abstract int
KeyAgreementSpi.
engineGenerateSecret
(byte[] sharedSecret,
 int offset)
Generates the shared secret, and places it into the buffer
sharedSecret
, beginning at
offset
inclusive.
protected abstract int
ExemptionMechanismSpi.
engineGenExemptionBlob
(byte[] output,
 int outputOffset)
Generates the exemption mechanism key blob, and stores the result in
 the
output
buffer, starting at
outputOffset
inclusive.
protected abstract int
CipherSpi.
engineUpdate
(byte[] input,
 int inputOffset,
 int inputLen,
 byte[] output,
 int outputOffset)
Continues a multiple-part encryption or decryption operation
 (depending on how this
CipherSpi
object was initialized),
 processing another data part.
protected int
CipherSpi.
engineUpdate
(
ByteBuffer
input,
ByteBuffer
output)
Continues a multiple-part encryption or decryption operation
 (depending on how this
CipherSpi
object was initialized),
 processing another data part.
final int
KeyAgreement.
generateSecret
(byte[] sharedSecret,
 int offset)
Generates the shared secret, and places it into the buffer
sharedSecret
, beginning at
offset
inclusive.
final int
ExemptionMechanism.
genExemptionBlob
(byte[] output)
Generates the exemption mechanism key blob, and stores the result in
 the
output
buffer.
final int
ExemptionMechanism.
genExemptionBlob
(byte[] output,
 int outputOffset)
Generates the exemption mechanism key blob, and stores the result in
 the
output
buffer, starting at
outputOffset
inclusive.
final int
Cipher.
update
(byte[] input,
 int inputOffset,
 int inputLen,
 byte[] output)
Continues a multiple-part encryption or decryption operation
 (depending on how this
Cipher
object was initialized),
 processing another data part.
final int
Cipher.
update
(byte[] input,
 int inputOffset,
 int inputLen,
 byte[] output,
 int outputOffset)
Continues a multiple-part encryption or decryption operation
 (depending on how this
Cipher
object was initialized),
 processing another data part.
final int
Cipher.
update
(
ByteBuffer
input,
ByteBuffer
output)
Continues a multiple-part encryption or decryption operation
 (depending on how this
Cipher
object was initialized),
 processing another data part.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.