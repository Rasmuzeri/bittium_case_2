javax.crypto.spec (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Package:
Description
Related Packages
Classes and Interfaces
Package:
Description
|
Related Packages
|
Classes and Interfaces
SEARCH
Module
java.base
Package javax.crypto.spec
package
javax.crypto.spec
Provides classes and interfaces for key specifications and
 algorithm parameter specifications.
A key specification is a transparent representation of the key
 material that constitutes a key. A key may be specified in an
 algorithm-specific way, or in an algorithm-independent encoding
 format (such as ASN.1).  This package contains key specifications
 for Diffie-Hellman public and private keys, as well as key
 specifications for DES, Triple DES, and PBE secret keys.
An algorithm parameter specification is a transparent
 representation of the sets of parameters used with an
 algorithm. This package contains algorithm parameter specifications
 for parameters used with the Diffie-Hellman, DES, Triple DES, PBE,
 RC2 and RC5 algorithms.
PKCS #1: RSA Cryptography Specifications, Version 2.2 (RFC 8017)
PKCS #3: Diffie-Hellman Key-Agreement Standard, Version 1.4,
 November 1993.
PKCS #5: Password-Based Encryption Standard, Version 1.5,
 November 1993.
Federal Information Processing Standards Publication (FIPS PUB) 46-2:
 Data Encryption Standard (DES)
Related Documentation
For documentation that includes information about algorithm
 parameter and key specifications, please see:
Java Cryptography Architecture (JCA) Reference Guide
How to Implement a Provider in the Java Cryptography Architecture
Since:
1.4
Related Packages
Package
Description
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
javax.crypto.interfaces
Provides interfaces for Diffie-Hellman keys as defined in RSA
 Laboratories' PKCS #3.
Classes
Class
Description
ChaCha20ParameterSpec
This class specifies the parameters used with the
ChaCha20
algorithm.
DESedeKeySpec
This class specifies a DES-EDE ("triple-DES") key.
DESKeySpec
This class specifies a DES key.
DHGenParameterSpec
This class specifies the set of parameters used for generating
 Diffie-Hellman (system) parameters for use in Diffie-Hellman key
 agreement.
DHParameterSpec
This class specifies the set of parameters used with the Diffie-Hellman
 algorithm, as specified in PKCS #3:
Diffie-Hellman Key-Agreement
 Standard
.
DHPrivateKeySpec
This class specifies a Diffie-Hellman private key with its associated
 parameters.
DHPublicKeySpec
This class specifies a Diffie-Hellman public key with its associated
 parameters.
GCMParameterSpec
Specifies the set of parameters required by a
Cipher
using the Galois/Counter Mode (GCM) mode.
IvParameterSpec
This class specifies an
initialization vector
(IV).
OAEPParameterSpec
This class specifies the set of parameters used with OAEP Padding,
 as defined in the
PKCS#1 v2.2
standard.
PBEKeySpec
A user-chosen password that can be used with password-based encryption
 (
PBE
).
PBEParameterSpec
This class specifies the set of parameters used with password-based
 encryption (PBE), as defined in the
PKCS #5
standard.
PSource
This class specifies the source for encoding input P in OAEP Padding,
 as defined in the
PKCS#1 v2.2
standard.
PSource.PSpecified
This class is used to explicitly specify the value for
 encoding input P in OAEP Padding.
RC2ParameterSpec
This class specifies the parameters used with the
RC2
algorithm.
RC5ParameterSpec
This class specifies the parameters used with the
RC5
algorithm.
SecretKeySpec
This class specifies a secret key in a provider-independent fashion.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.