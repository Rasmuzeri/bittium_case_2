AppConfigurationEntry (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.base
Package
javax.security.auth.login
Class AppConfigurationEntry
java.lang.Object
javax.security.auth.login.AppConfigurationEntry
public class
AppConfigurationEntry
extends
Object
This class represents a single
LoginModule
entry
 configured for the application specified in the
getAppConfigurationEntry(String appName)
method in the
Configuration
class.  Each respective
AppConfigurationEntry
contains a
LoginModule
name,
 a control flag (specifying whether this
LoginModule
is
 REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL), and LoginModule-specific
 options.  Please refer to the
Configuration
class for
 more information on the different control flags and their semantics.
Since:
1.4
See Also:
Configuration
Nested Class Summary
Nested Classes
Modifier and Type
Class
Description
static class
AppConfigurationEntry.LoginModuleControlFlag
This class represents whether a
LoginModule
is REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL.
Constructor Summary
Constructors
Constructor
Description
AppConfigurationEntry
(
String
loginModuleName,
AppConfigurationEntry.LoginModuleControlFlag
controlFlag,
Map
<
String
,
?> options)
Default constructor for this class.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
AppConfigurationEntry.LoginModuleControlFlag
getControlFlag
()
Return the controlFlag
 (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)
 for this
LoginModule
.
String
getLoginModuleName
()
Get the class name of the configured
LoginModule
.
Map
<
String
,
?>
getOptions
()
Get the options configured for this
LoginModule
.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
AppConfigurationEntry
public
AppConfigurationEntry
(
String
loginModuleName,
AppConfigurationEntry.LoginModuleControlFlag
controlFlag,
Map
<
String
,
?> options)
Default constructor for this class.
This entry represents a single
LoginModule
entry configured for the application specified in the
getAppConfigurationEntry(String appName)
method from the
Configuration
class.
Parameters:
loginModuleName
- String representing the class name of the
LoginModule
configured for the
                  specified application.
controlFlag
- either REQUIRED, REQUISITE, SUFFICIENT,
                  or OPTIONAL.
options
- the options configured for this
LoginModule
.
Throws:
IllegalArgumentException
- if
loginModuleName
is null, if
LoginModuleName
has a length of 0, if
controlFlag
is not either REQUIRED, REQUISITE, SUFFICIENT
                  or OPTIONAL, or if
options
is null.
Method Details
getLoginModuleName
public
String
getLoginModuleName
()
Get the class name of the configured
LoginModule
.
Returns:
the class name of the configured
LoginModule
as
          a String.
getControlFlag
public
AppConfigurationEntry.LoginModuleControlFlag
getControlFlag
()
Return the controlFlag
 (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)
 for this
LoginModule
.
Returns:
the controlFlag
          (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)
          for this
LoginModule
.
getOptions
public
Map
<
String
,
?>
getOptions
()
Get the options configured for this
LoginModule
.
Returns:
the options configured for this
LoginModule
as an unmodifiable
Map
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.