Uses of Interface javax.security.auth.callback.CallbackHandler (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
javax.security.auth.callback.CallbackHandler
Packages that use
CallbackHandler
Package
Description
com.sun.security.auth.callback
Provides an implementation of
CallbackHandler
.
com.sun.security.auth.module
Provides implementations of
LoginModule
.
java.security
Provides the classes and interfaces for the security framework.
javax.security.auth.login
This package provides a pluggable authentication framework.
javax.security.auth.spi
This package provides the interface to be used for
 implementing pluggable authentication modules.
javax.security.sasl
Contains class and interfaces for supporting SASL.
Uses of
CallbackHandler
in
com.sun.security.auth.callback
Classes in
com.sun.security.auth.callback
that implement
CallbackHandler
Modifier and Type
Class
Description
class
TextCallbackHandler
Prompts and reads from the command line for answers to authentication
 questions.
Uses of
CallbackHandler
in
com.sun.security.auth.module
Methods in
com.sun.security.auth.module
with parameters of type
CallbackHandler
Modifier and Type
Method
Description
void
JndiLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
KeyStoreLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
Krb5LoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
LdapLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
NTLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
UnixLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
Uses of
CallbackHandler
in
java.security
Methods in
java.security
that return
CallbackHandler
Modifier and Type
Method
Description
CallbackHandler
KeyStore.CallbackHandlerProtection.
getCallbackHandler
()
Returns the CallbackHandler.
Methods in
java.security
with parameters of type
CallbackHandler
Modifier and Type
Method
Description
abstract void
AuthProvider.
login
(
Subject
subject,
CallbackHandler
handler)
Log in to this provider.
abstract void
AuthProvider.
setCallbackHandler
(
CallbackHandler
handler)
Set a
CallbackHandler
.
Constructors in
java.security
with parameters of type
CallbackHandler
Modifier
Constructor
Description
CallbackHandlerProtection
(
CallbackHandler
handler)
Constructs a new CallbackHandlerProtection from a
 CallbackHandler.
Uses of
CallbackHandler
in
javax.security.auth.login
Constructors in
javax.security.auth.login
with parameters of type
CallbackHandler
Modifier
Constructor
Description
LoginContext
(
String
name,
CallbackHandler
callbackHandler)
Instantiate a new
LoginContext
object with a name
 and a
CallbackHandler
object.
LoginContext
(
String
name,
Subject
subject,
CallbackHandler
callbackHandler)
Instantiate a new
LoginContext
object with a name,
 a
Subject
to be authenticated, and a
CallbackHandler
object.
LoginContext
(
String
name,
Subject
subject,
CallbackHandler
callbackHandler,
Configuration
config)
Instantiate a new
LoginContext
object with a name,
 a
Subject
to be authenticated,
 a
CallbackHandler
object, and a login
Configuration
.
Uses of
CallbackHandler
in
javax.security.auth.spi
Methods in
javax.security.auth.spi
with parameters of type
CallbackHandler
Modifier and Type
Method
Description
void
LoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
Uses of
CallbackHandler
in
javax.security.sasl
Methods in
javax.security.sasl
with parameters of type
CallbackHandler
Modifier and Type
Method
Description
static
SaslClient
Sasl.
createSaslClient
(
String
[] mechanisms,
String
authorizationId,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslClient
using the parameters supplied.
SaslClient
SaslClientFactory.
createSaslClient
(
String
[] mechanisms,
String
authorizationId,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a SaslClient using the parameters supplied.
static
SaslServer
Sasl.
createSaslServer
(
String
mechanism,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslServer
for the specified mechanism.
SaslServer
SaslServerFactory.
createSaslServer
(
String
mechanism,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslServer
using the parameters supplied.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.