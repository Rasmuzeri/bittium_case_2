X509TrustManager (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.base
Package
javax.net.ssl
Interface X509TrustManager
All Superinterfaces:
TrustManager
All Known Implementing Classes:
X509ExtendedTrustManager
public interface
X509TrustManager
extends
TrustManager
Instance of this interface manage which X509 certificates
 may be used to authenticate the remote side of a secure
 socket. Decisions may be based on trusted certificate
 authorities, certificate revocation lists, online
 status checking or other means.
Since:
1.4
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
void
checkClientTrusted
(
X509Certificate
[] chain,
String
authType)
Given the partial or complete certificate chain provided by the
 peer, build a certificate path to a trusted root and return if
 it can be validated and is trusted for client SSL
 authentication based on the authentication type.
void
checkServerTrusted
(
X509Certificate
[] chain,
String
authType)
Given the partial or complete certificate chain provided by the
 peer, build a certificate path to a trusted root and return if
 it can be validated and is trusted for server SSL
 authentication based on the authentication type.
X509Certificate
[]
getAcceptedIssuers
()
Return an array of certificate authority certificates
 which are trusted for authenticating peers.
Method Details
checkClientTrusted
void
checkClientTrusted
(
X509Certificate
[] chain,
String
authType)
throws
CertificateException
Given the partial or complete certificate chain provided by the
 peer, build a certificate path to a trusted root and return if
 it can be validated and is trusted for client SSL
 authentication based on the authentication type.
The authentication type is determined by the actual certificate
 used. For instance, if RSAPublicKey is used, the authType
 should be "RSA". Checking is case-sensitive.
Parameters:
chain
- the peer certificate chain
authType
- the authentication type based on the client certificate
Throws:
IllegalArgumentException
- if null or zero-length chain
         is passed in for the chain parameter or if null or zero-length
         string is passed in for the  authType parameter
CertificateException
- if the certificate chain is not trusted
         by this TrustManager.
checkServerTrusted
void
checkServerTrusted
(
X509Certificate
[] chain,
String
authType)
throws
CertificateException
Given the partial or complete certificate chain provided by the
 peer, build a certificate path to a trusted root and return if
 it can be validated and is trusted for server SSL
 authentication based on the authentication type.
The authentication type is the key exchange algorithm portion
 of the cipher suites represented as a String, such as "RSA",
 "DHE_DSS". Note: for some exportable cipher suites, the key
 exchange algorithm is determined at run time during the
 handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5,
 the authType should be RSA_EXPORT when an ephemeral RSA key is
 used for the key exchange, and RSA when the key from the server
 certificate is used. Checking is case-sensitive.
Parameters:
chain
- the peer certificate chain
authType
- the key exchange algorithm used
Throws:
IllegalArgumentException
- if null or zero-length chain
         is passed in for the chain parameter or if null or zero-length
         string is passed in for the  authType parameter
CertificateException
- if the certificate chain is not trusted
         by this TrustManager.
getAcceptedIssuers
X509Certificate
[]
getAcceptedIssuers
()
Return an array of certificate authority certificates
 which are trusted for authenticating peers.
Returns:
a non-null (possibly empty) array of acceptable
          CA issuer certificates.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.