ExtendedSSLSession (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.base
Package
javax.net.ssl
Class ExtendedSSLSession
java.lang.Object
javax.net.ssl.ExtendedSSLSession
All Implemented Interfaces:
SSLSession
public abstract class
ExtendedSSLSession
extends
Object
implements
SSLSession
Extends the
SSLSession
interface to support additional
 session attributes.
Since:
1.7
Constructor Summary
Constructors
Constructor
Description
ExtendedSSLSession
()
Constructor for subclasses to call.
Method Summary
All Methods
Instance Methods
Abstract Methods
Concrete Methods
Modifier and Type
Method
Description
abstract
String
[]
getLocalSupportedSignatureAlgorithms
()
Obtains an array of supported signature algorithms that the local side
 is willing to use.
abstract
String
[]
getPeerSupportedSignatureAlgorithms
()
Obtains an array of supported signature algorithms that the peer is
 able to use.
List
<
SNIServerName
>
getRequestedServerNames
()
Obtains a
List
containing all
SNIServerName
s
 of the requested Server Name Indication (SNI) extension.
List
<byte[]>
getStatusResponses
()
Returns a
List
containing DER-encoded OCSP responses
 (using the ASN.1 type OCSPResponse defined in RFC 6960) for
 the client to verify status of the server's certificate during
 handshaking.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Methods declared in interface javax.net.ssl.
SSLSession
getApplicationBufferSize
,
getCipherSuite
,
getCreationTime
,
getId
,
getLastAccessedTime
,
getLocalCertificates
,
getLocalPrincipal
,
getPacketBufferSize
,
getPeerCertificateChain
,
getPeerCertificates
,
getPeerHost
,
getPeerPort
,
getPeerPrincipal
,
getProtocol
,
getSessionContext
,
getValue
,
getValueNames
,
invalidate
,
isValid
,
putValue
,
removeValue
Constructor Details
ExtendedSSLSession
public
ExtendedSSLSession
()
Constructor for subclasses to call.
Method Details
getLocalSupportedSignatureAlgorithms
public abstract
String
[]
getLocalSupportedSignatureAlgorithms
()
Obtains an array of supported signature algorithms that the local side
 is willing to use.
Note: this method is used to indicate to the peer which signature
 algorithms may be used for digital signatures in TLS/DTLS 1.2. It is
 not meaningful for TLS/DTLS versions prior to 1.2.
The signature algorithm name must be a standard Java Security
 name (such as "SHA1withRSA", "SHA256withECDSA", and so on).
 See the
Java Security Standard Algorithm Names
document
 for information about standard algorithm names.
Note: the local supported signature algorithms should conform to
 the algorithm constraints specified by
getAlgorithmConstraints()
method in
SSLParameters
.
Returns:
An array of supported signature algorithms, in descending
     order of preference.  The return value is an empty array if
     no signature algorithm is supported.
See Also:
SSLParameters.getAlgorithmConstraints()
getPeerSupportedSignatureAlgorithms
public abstract
String
[]
getPeerSupportedSignatureAlgorithms
()
Obtains an array of supported signature algorithms that the peer is
 able to use.
Note: this method is used to indicate to the local side which signature
 algorithms may be used for digital signatures in TLS/DTLS 1.2. It is
 not meaningful for TLS/DTLS versions prior to 1.2.
The signature algorithm name must be a standard Java Security
 name (such as "SHA1withRSA", "SHA256withECDSA", and so on).
 See the
Java Security Standard Algorithm Names
document
 for information about standard algorithm names.
Returns:
An array of supported signature algorithms, in descending
     order of preference.  The return value is an empty array if
     the peer has not sent the supported signature algorithms.
See Also:
X509KeyManager
X509ExtendedKeyManager
getRequestedServerNames
public
List
<
SNIServerName
>
getRequestedServerNames
()
Obtains a
List
containing all
SNIServerName
s
 of the requested Server Name Indication (SNI) extension.
In server mode, unless the return
List
is empty,
 the server should use the requested server names to guide its
 selection of an appropriate authentication certificate, and/or
 other aspects of security policy.
In client mode, unless the return
List
is empty,
 the client should use the requested server names to guide its
 endpoint identification of the peer's identity, and/or
 other aspects of security policy.
Returns:
a non-null immutable list of
SNIServerName
s of the
         requested server name indications. The returned list may be
         empty if no server name indications were requested.
Throws:
UnsupportedOperationException
- if the underlying provider
         does not implement the operation
Since:
1.8
See Also:
SNIServerName
X509ExtendedTrustManager
X509ExtendedKeyManager
getStatusResponses
public
List
<byte[]>
getStatusResponses
()
Returns a
List
containing DER-encoded OCSP responses
 (using the ASN.1 type OCSPResponse defined in RFC 6960) for
 the client to verify status of the server's certificate during
 handshaking.
This method only applies to certificate-based server
 authentication.  An
X509ExtendedTrustManager
will use the
 returned value for server certificate validation.
Implementation Requirements:
This method throws UnsupportedOperationException by default.
         Classes derived from ExtendedSSLSession must implement
         this method.
Returns:
a non-null unmodifiable list of byte arrays, each entry
         containing a DER-encoded OCSP response (using the
         ASN.1 type OCSPResponse defined in RFC 6960).  The order
         of the responses must match the order of the certificates
         presented by the server in its Certificate message (See
SSLSession.getLocalCertificates()
for server mode,
         and
SSLSession.getPeerCertificates()
for client mode).
         It is possible that fewer response entries may be returned than
         the number of presented certificates.  If an entry in the list
         is a zero-length byte array, it should be treated by the
         caller as if the OCSP entry for the corresponding certificate
         is missing.  The returned list may be empty if no OCSP responses
         were presented during handshaking or if OCSP stapling is not
         supported by either endpoint for this handshake.
Throws:
UnsupportedOperationException
- if the underlying provider
         does not implement the operation
Since:
9
See Also:
X509ExtendedTrustManager
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.