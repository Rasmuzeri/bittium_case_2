Uses of Class java.time.chrono.JapaneseDate (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.time.chrono.JapaneseDate
Packages that use
JapaneseDate
Package
Description
java.time.chrono
Generic API for calendar systems other than the default ISO.
Uses of
JapaneseDate
in
java.time.chrono
Methods in
java.time.chrono
that return
JapaneseDate
Modifier and Type
Method
Description
JapaneseDate
JapaneseChronology.
date
(int prolepticYear,
 int month,
 int dayOfMonth)
Obtains a local date in Japanese calendar system from the
 proleptic-year, month-of-year and day-of-month fields.
JapaneseDate
JapaneseChronology.
date
(
Era
era,
 int yearOfEra,
 int month,
 int dayOfMonth)
Obtains a local date in Japanese calendar system from the
 era, year-of-era, month-of-year and day-of-month fields.
JapaneseDate
JapaneseChronology.
date
(
TemporalAccessor
temporal)
JapaneseDate
JapaneseChronology.
dateEpochDay
(long epochDay)
Obtains a local date in the Japanese calendar system from the epoch-day.
JapaneseDate
JapaneseChronology.
dateNow
()
JapaneseDate
JapaneseChronology.
dateNow
(
Clock
clock)
JapaneseDate
JapaneseChronology.
dateNow
(
ZoneId
zone)
JapaneseDate
JapaneseChronology.
dateYearDay
(int prolepticYear,
 int dayOfYear)
Obtains a local date in Japanese calendar system from the
 proleptic-year and day-of-year fields.
JapaneseDate
JapaneseChronology.
dateYearDay
(
Era
era,
 int yearOfEra,
 int dayOfYear)
Obtains a local date in Japanese calendar system from the
 era, year-of-era and day-of-year fields.
static
JapaneseDate
JapaneseDate.
from
(
TemporalAccessor
temporal)
Obtains a
JapaneseDate
from a temporal object.
JapaneseDate
JapaneseDate.
minus
(long amountToSubtract,
TemporalUnit
unit)
JapaneseDate
JapaneseDate.
minus
(
TemporalAmount
amount)
Returns an object of the same type as this object with an amount subtracted.
static
JapaneseDate
JapaneseDate.
now
()
Obtains the current
JapaneseDate
from the system clock in the default time-zone.
static
JapaneseDate
JapaneseDate.
now
(
Clock
clock)
Obtains the current
JapaneseDate
from the specified clock.
static
JapaneseDate
JapaneseDate.
now
(
ZoneId
zone)
Obtains the current
JapaneseDate
from the system clock in the specified time-zone.
static
JapaneseDate
JapaneseDate.
of
(int prolepticYear,
 int month,
 int dayOfMonth)
Obtains a
JapaneseDate
representing a date in the Japanese calendar
 system from the proleptic-year, month-of-year and day-of-month fields.
static
JapaneseDate
JapaneseDate.
of
(
JapaneseEra
era,
 int yearOfEra,
 int month,
 int dayOfMonth)
Obtains a
JapaneseDate
representing a date in the Japanese calendar
 system from the era, year-of-era, month-of-year and day-of-month fields.
JapaneseDate
JapaneseDate.
plus
(long amountToAdd,
TemporalUnit
unit)
JapaneseDate
JapaneseDate.
plus
(
TemporalAmount
amount)
Returns an object of the same type as this object with an amount added.
JapaneseDate
JapaneseChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
JapaneseDate
JapaneseDate.
with
(
TemporalAdjuster
adjuster)
Returns an adjusted object of the same type as this object with the adjustment made.
JapaneseDate
JapaneseDate.
with
(
TemporalField
field,
 long newValue)
Methods in
java.time.chrono
that return types with arguments of type
JapaneseDate
Modifier and Type
Method
Description
final
ChronoLocalDateTime
<
JapaneseDate
>
JapaneseDate.
atTime
(
LocalTime
localTime)
ChronoLocalDateTime
<
JapaneseDate
>
JapaneseChronology.
localDateTime
(
TemporalAccessor
temporal)
ChronoZonedDateTime
<
JapaneseDate
>
JapaneseChronology.
zonedDateTime
(
Instant
instant,
ZoneId
zone)
ChronoZonedDateTime
<
JapaneseDate
>
JapaneseChronology.
zonedDateTime
(
TemporalAccessor
temporal)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.