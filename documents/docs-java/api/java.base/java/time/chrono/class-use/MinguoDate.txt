Uses of Class java.time.chrono.MinguoDate (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.time.chrono.MinguoDate
Packages that use
MinguoDate
Package
Description
java.time.chrono
Generic API for calendar systems other than the default ISO.
Uses of
MinguoDate
in
java.time.chrono
Methods in
java.time.chrono
that return
MinguoDate
Modifier and Type
Method
Description
MinguoDate
MinguoChronology.
date
(int prolepticYear,
 int month,
 int dayOfMonth)
Obtains a local date in Minguo calendar system from the
 proleptic-year, month-of-year and day-of-month fields.
MinguoDate
MinguoChronology.
date
(
Era
era,
 int yearOfEra,
 int month,
 int dayOfMonth)
Obtains a local date in Minguo calendar system from the
 era, year-of-era, month-of-year and day-of-month fields.
MinguoDate
MinguoChronology.
date
(
TemporalAccessor
temporal)
MinguoDate
MinguoChronology.
dateEpochDay
(long epochDay)
Obtains a local date in the Minguo calendar system from the epoch-day.
MinguoDate
MinguoChronology.
dateNow
()
MinguoDate
MinguoChronology.
dateNow
(
Clock
clock)
MinguoDate
MinguoChronology.
dateNow
(
ZoneId
zone)
MinguoDate
MinguoChronology.
dateYearDay
(int prolepticYear,
 int dayOfYear)
Obtains a local date in Minguo calendar system from the
 proleptic-year and day-of-year fields.
MinguoDate
MinguoChronology.
dateYearDay
(
Era
era,
 int yearOfEra,
 int dayOfYear)
Obtains a local date in Minguo calendar system from the
 era, year-of-era and day-of-year fields.
static
MinguoDate
MinguoDate.
from
(
TemporalAccessor
temporal)
Obtains a
MinguoDate
from a temporal object.
MinguoDate
MinguoDate.
minus
(long amountToSubtract,
TemporalUnit
unit)
MinguoDate
MinguoDate.
minus
(
TemporalAmount
amount)
Returns an object of the same type as this object with an amount subtracted.
static
MinguoDate
MinguoDate.
now
()
Obtains the current
MinguoDate
from the system clock in the default time-zone.
static
MinguoDate
MinguoDate.
now
(
Clock
clock)
Obtains the current
MinguoDate
from the specified clock.
static
MinguoDate
MinguoDate.
now
(
ZoneId
zone)
Obtains the current
MinguoDate
from the system clock in the specified time-zone.
static
MinguoDate
MinguoDate.
of
(int prolepticYear,
 int month,
 int dayOfMonth)
Obtains a
MinguoDate
representing a date in the Minguo calendar
 system from the proleptic-year, month-of-year and day-of-month fields.
MinguoDate
MinguoDate.
plus
(long amountToAdd,
TemporalUnit
unit)
MinguoDate
MinguoDate.
plus
(
TemporalAmount
amount)
Returns an object of the same type as this object with an amount added.
MinguoDate
MinguoChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
MinguoDate
MinguoDate.
with
(
TemporalAdjuster
adjuster)
Returns an adjusted object of the same type as this object with the adjustment made.
MinguoDate
MinguoDate.
with
(
TemporalField
field,
 long newValue)
Methods in
java.time.chrono
that return types with arguments of type
MinguoDate
Modifier and Type
Method
Description
final
ChronoLocalDateTime
<
MinguoDate
>
MinguoDate.
atTime
(
LocalTime
localTime)
ChronoLocalDateTime
<
MinguoDate
>
MinguoChronology.
localDateTime
(
TemporalAccessor
temporal)
ChronoZonedDateTime
<
MinguoDate
>
MinguoChronology.
zonedDateTime
(
Instant
instant,
ZoneId
zone)
ChronoZonedDateTime
<
MinguoDate
>
MinguoChronology.
zonedDateTime
(
TemporalAccessor
temporal)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.