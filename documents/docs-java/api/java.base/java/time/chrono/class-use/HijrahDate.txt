Uses of Class java.time.chrono.HijrahDate (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.time.chrono.HijrahDate
Packages that use
HijrahDate
Package
Description
java.time.chrono
Generic API for calendar systems other than the default ISO.
Uses of
HijrahDate
in
java.time.chrono
Methods in
java.time.chrono
that return
HijrahDate
Modifier and Type
Method
Description
HijrahDate
HijrahChronology.
date
(int prolepticYear,
 int month,
 int dayOfMonth)
Obtains a local date in Hijrah calendar system from the
 proleptic-year, month-of-year and day-of-month fields.
HijrahDate
HijrahChronology.
date
(
Era
era,
 int yearOfEra,
 int month,
 int dayOfMonth)
Obtains a local date in Hijrah calendar system from the
 era, year-of-era, month-of-year and day-of-month fields.
HijrahDate
HijrahChronology.
date
(
TemporalAccessor
temporal)
HijrahDate
HijrahChronology.
dateEpochDay
(long epochDay)
Obtains a local date in the Hijrah calendar system from the epoch-day.
HijrahDate
HijrahChronology.
dateNow
()
HijrahDate
HijrahChronology.
dateNow
(
Clock
clock)
HijrahDate
HijrahChronology.
dateNow
(
ZoneId
zone)
HijrahDate
HijrahChronology.
dateYearDay
(int prolepticYear,
 int dayOfYear)
Obtains a local date in Hijrah calendar system from the
 proleptic-year and day-of-year fields.
HijrahDate
HijrahChronology.
dateYearDay
(
Era
era,
 int yearOfEra,
 int dayOfYear)
Obtains a local date in Hijrah calendar system from the
 era, year-of-era and day-of-year fields.
static
HijrahDate
HijrahDate.
from
(
TemporalAccessor
temporal)
Obtains a
HijrahDate
of the Islamic Umm Al-Qura calendar from a temporal object.
HijrahDate
HijrahDate.
minus
(long amountToSubtract,
TemporalUnit
unit)
HijrahDate
HijrahDate.
minus
(
TemporalAmount
amount)
Returns an object of the same type as this object with an amount subtracted.
static
HijrahDate
HijrahDate.
now
()
Obtains the current
HijrahDate
of the Islamic Umm Al-Qura calendar
 in the default time-zone.
static
HijrahDate
HijrahDate.
now
(
Clock
clock)
Obtains the current
HijrahDate
of the Islamic Umm Al-Qura calendar
 from the specified clock.
static
HijrahDate
HijrahDate.
now
(
ZoneId
zone)
Obtains the current
HijrahDate
of the Islamic Umm Al-Qura calendar
 in the specified time-zone.
static
HijrahDate
HijrahDate.
of
(int prolepticYear,
 int month,
 int dayOfMonth)
Obtains a
HijrahDate
of the Islamic Umm Al-Qura calendar
 from the proleptic-year, month-of-year and day-of-month fields.
HijrahDate
HijrahDate.
plus
(long amountToAdd,
TemporalUnit
unit)
HijrahDate
HijrahDate.
plus
(
TemporalAmount
amount)
Returns an object of the same type as this object with an amount added.
HijrahDate
HijrahChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
HijrahDate
HijrahDate.
with
(
TemporalAdjuster
adjuster)
Returns an adjusted object of the same type as this object with the adjustment made.
HijrahDate
HijrahDate.
with
(
TemporalField
field,
 long newValue)
HijrahDate
HijrahDate.
withVariant
(
HijrahChronology
chronology)
Returns a
HijrahDate
with the Chronology requested.
Methods in
java.time.chrono
that return types with arguments of type
HijrahDate
Modifier and Type
Method
Description
final
ChronoLocalDateTime
<
HijrahDate
>
HijrahDate.
atTime
(
LocalTime
localTime)
ChronoLocalDateTime
<
HijrahDate
>
HijrahChronology.
localDateTime
(
TemporalAccessor
temporal)
ChronoZonedDateTime
<
HijrahDate
>
HijrahChronology.
zonedDateTime
(
Instant
instant,
ZoneId
zone)
ChronoZonedDateTime
<
HijrahDate
>
HijrahChronology.
zonedDateTime
(
TemporalAccessor
temporal)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.