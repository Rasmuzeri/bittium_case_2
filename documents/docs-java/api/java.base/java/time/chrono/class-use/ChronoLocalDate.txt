Uses of Interface java.time.chrono.ChronoLocalDate (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.time.chrono.ChronoLocalDate
Packages that use
ChronoLocalDate
Package
Description
java.time
The main API for dates, times, instants, and durations.
java.time.chrono
Generic API for calendar systems other than the default ISO.
java.time.format
Provides classes to print and parse dates and times.
Uses of
ChronoLocalDate
in
java.time
Classes in
java.time
that implement
ChronoLocalDate
Modifier and Type
Class
Description
final class
LocalDate
A date without a time-zone in the ISO-8601 calendar system,
 such as
2007-12-03
.
Methods in
java.time
with parameters of type
ChronoLocalDate
Modifier and Type
Method
Description
int
LocalDate.
compareTo
(
ChronoLocalDate
other)
Compares this date to another date.
boolean
LocalDate.
isAfter
(
ChronoLocalDate
other)
Checks if this date is after the specified date.
boolean
LocalDate.
isBefore
(
ChronoLocalDate
other)
Checks if this date is before the specified date.
boolean
LocalDate.
isEqual
(
ChronoLocalDate
other)
Checks if this date is equal to the specified date.
Period
LocalDate.
until
(
ChronoLocalDate
endDateExclusive)
Calculates the period between this date and another date as a
Period
.
Uses of
ChronoLocalDate
in
java.time.chrono
Classes in
java.time.chrono
with type parameters of type
ChronoLocalDate
Modifier and Type
Interface
Description
interface
ChronoLocalDateTime
<D extends
ChronoLocalDate
>
A date-time without a time-zone in an arbitrary chronology, intended
 for advanced globalization use cases.
interface
ChronoZonedDateTime
<D extends
ChronoLocalDate
>
A date-time with a time-zone in an arbitrary chronology,
 intended for advanced globalization use cases.
Classes in
java.time.chrono
that implement
ChronoLocalDate
Modifier and Type
Class
Description
final class
HijrahDate
A date in the Hijrah calendar system.
final class
JapaneseDate
A date in the Japanese Imperial calendar system.
final class
MinguoDate
A date in the Minguo calendar system.
final class
ThaiBuddhistDate
A date in the Thai Buddhist calendar system.
Methods in
java.time.chrono
that return
ChronoLocalDate
Modifier and Type
Method
Description
ChronoLocalDate
Chronology.
date
(int prolepticYear,
 int month,
 int dayOfMonth)
Obtains a local date in this chronology from the proleptic-year,
 month-of-year and day-of-month fields.
default
ChronoLocalDate
Chronology.
date
(
Era
era,
 int yearOfEra,
 int month,
 int dayOfMonth)
Obtains a local date in this chronology from the era, year-of-era,
 month-of-year and day-of-month fields.
ChronoLocalDate
Chronology.
date
(
TemporalAccessor
temporal)
Obtains a local date in this chronology from another temporal object.
ChronoLocalDate
Chronology.
dateEpochDay
(long epochDay)
Obtains a local date in this chronology from the epoch-day.
default
ChronoLocalDate
Chronology.
dateNow
()
Obtains the current local date in this chronology from the system clock in the default time-zone.
default
ChronoLocalDate
Chronology.
dateNow
(
Clock
clock)
Obtains the current local date in this chronology from the specified clock.
default
ChronoLocalDate
Chronology.
dateNow
(
ZoneId
zone)
Obtains the current local date in this chronology from the system clock in the specified time-zone.
ChronoLocalDate
Chronology.
dateYearDay
(int prolepticYear,
 int dayOfYear)
Obtains a local date in this chronology from the proleptic-year and
 day-of-year fields.
default
ChronoLocalDate
Chronology.
dateYearDay
(
Era
era,
 int yearOfEra,
 int dayOfYear)
Obtains a local date in this chronology from the era, year-of-era and
 day-of-year fields.
static
ChronoLocalDate
ChronoLocalDate.
from
(
TemporalAccessor
temporal)
Obtains an instance of
ChronoLocalDate
from a temporal object.
default
ChronoLocalDate
ChronoLocalDate.
minus
(long amountToSubtract,
TemporalUnit
unit)
Returns an object of the same type as this object with the specified period subtracted.
default
ChronoLocalDate
ChronoLocalDate.
minus
(
TemporalAmount
amount)
Returns an object of the same type as this object with an amount subtracted.
default
ChronoLocalDate
ChronoLocalDate.
plus
(long amountToAdd,
TemporalUnit
unit)
Returns an object of the same type as this object with the specified period added.
default
ChronoLocalDate
ChronoLocalDate.
plus
(
TemporalAmount
amount)
Returns an object of the same type as this object with an amount added.
ChronoLocalDate
AbstractChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
Resolves parsed
ChronoField
values into a date during parsing.
ChronoLocalDate
Chronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
Resolves parsed
ChronoField
values into a date during parsing.
default
ChronoLocalDate
ChronoLocalDate.
with
(
TemporalAdjuster
adjuster)
Returns an adjusted object of the same type as this object with the adjustment made.
default
ChronoLocalDate
ChronoLocalDate.
with
(
TemporalField
field,
 long newValue)
Returns an object of the same type as this object with the specified field altered.
Methods in
java.time.chrono
that return types with arguments of type
ChronoLocalDate
Modifier and Type
Method
Description
default
ChronoLocalDateTime
<? extends
ChronoLocalDate
>
Chronology.
localDateTime
(
TemporalAccessor
temporal)
Obtains a local date-time in this chronology from another temporal object.
static
Comparator
<
ChronoLocalDate
>
ChronoLocalDate.
timeLineOrder
()
Gets a comparator that compares
ChronoLocalDate
in
 time-line order ignoring the chronology.
default
ChronoZonedDateTime
<? extends
ChronoLocalDate
>
Chronology.
zonedDateTime
(
Instant
instant,
ZoneId
zone)
Obtains a
ChronoZonedDateTime
in this chronology from an
Instant
.
default
ChronoZonedDateTime
<? extends
ChronoLocalDate
>
Chronology.
zonedDateTime
(
TemporalAccessor
temporal)
Obtains a
ChronoZonedDateTime
in this chronology from another temporal object.
Methods in
java.time.chrono
with parameters of type
ChronoLocalDate
Modifier and Type
Method
Description
static
ChronoPeriod
ChronoPeriod.
between
(
ChronoLocalDate
startDateInclusive,
ChronoLocalDate
endDateExclusive)
Obtains a
ChronoPeriod
consisting of amount of time between two dates.
default int
ChronoLocalDate.
compareTo
(
ChronoLocalDate
other)
Compares this date to another date, including the chronology.
default boolean
ChronoLocalDate.
isAfter
(
ChronoLocalDate
other)
Checks if this date is after the specified date ignoring the chronology.
default boolean
ChronoLocalDate.
isBefore
(
ChronoLocalDate
other)
Checks if this date is before the specified date ignoring the chronology.
default boolean
ChronoLocalDate.
isEqual
(
ChronoLocalDate
other)
Checks if this date is equal to the specified date ignoring the chronology.
ChronoPeriod
ChronoLocalDate.
until
(
ChronoLocalDate
endDateExclusive)
Calculates the period between this date and another date as a
ChronoPeriod
.
ChronoPeriod
HijrahDate.
until
(
ChronoLocalDate
endDate)
ChronoPeriod
JapaneseDate.
until
(
ChronoLocalDate
endDate)
ChronoPeriod
MinguoDate.
until
(
ChronoLocalDate
endDate)
ChronoPeriod
ThaiBuddhistDate.
until
(
ChronoLocalDate
endDate)
Uses of
ChronoLocalDate
in
java.time.format
Methods in
java.time.format
with parameters of type
ChronoLocalDate
Modifier and Type
Method
Description
DateTimeFormatterBuilder
DateTimeFormatterBuilder.
appendValueReduced
(
TemporalField
field,
 int width,
 int maxWidth,
ChronoLocalDate
baseDate)
Appends the reduced value of a date-time field to the formatter.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.