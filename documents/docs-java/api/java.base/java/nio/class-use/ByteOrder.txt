Uses of Class java.nio.ByteOrder (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.nio.ByteOrder
Packages that use
ByteOrder
Package
Description
java.lang.foreign
Provides low-level access to memory and functions outside the Java runtime.
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.nio
Defines buffers, which are containers for data, and provides an
 overview of the other NIO packages.
javax.imageio.stream
A package of the Java Image I/O API dealing with low-level I/O from files and
 streams.
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
Uses of
ByteOrder
in
java.lang.foreign
Methods in
java.lang.foreign
that return
ByteOrder
Modifier and Type
Method
Description
ByteOrder
ValueLayout.
order
()
Returns the value's byte order.
Methods in
java.lang.foreign
with parameters of type
ByteOrder
Modifier and Type
Method
Description
AddressLayout
PREVIEW
AddressLayout.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfBoolean
PREVIEW
ValueLayout.OfBoolean.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfByte
PREVIEW
ValueLayout.OfByte.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfChar
PREVIEW
ValueLayout.OfChar.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfDouble
PREVIEW
ValueLayout.OfDouble.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfFloat
PREVIEW
ValueLayout.OfFloat.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfInt
PREVIEW
ValueLayout.OfInt.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfLong
PREVIEW
ValueLayout.OfLong.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfShort
PREVIEW
ValueLayout.OfShort.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout
PREVIEW
ValueLayout.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
Uses of
ByteOrder
in
java.lang.invoke
Methods in
java.lang.invoke
with parameters of type
ByteOrder
Modifier and Type
Method
Description
static
VarHandle
MethodHandles.
byteArrayViewVarHandle
(
Class
<?> viewArrayClass,
ByteOrder
byteOrder)
Produces a VarHandle giving access to elements of a
byte[]
array
 viewed as if it were a different primitive array type, such as
int[]
or
long[]
.
static
VarHandle
MethodHandles.
byteBufferViewVarHandle
(
Class
<?> viewArrayClass,
ByteOrder
byteOrder)
Produces a VarHandle giving access to elements of a
ByteBuffer
viewed as if it were an array of elements of a different primitive
 component type to that of
byte
, such as
int[]
or
long[]
.
Uses of
ByteOrder
in
java.nio
Fields in
java.nio
declared as
ByteOrder
Modifier and Type
Field
Description
static final
ByteOrder
ByteOrder.
BIG_ENDIAN
Constant denoting big-endian byte order.
static final
ByteOrder
ByteOrder.
LITTLE_ENDIAN
Constant denoting little-endian byte order.
Methods in
java.nio
that return
ByteOrder
Modifier and Type
Method
Description
static
ByteOrder
ByteOrder.
nativeOrder
()
Retrieves the native byte order of the underlying platform.
final
ByteOrder
ByteBuffer.
order
()
Retrieves this buffer's byte order.
abstract
ByteOrder
CharBuffer.
order
()
Retrieves this buffer's byte order.
abstract
ByteOrder
DoubleBuffer.
order
()
Retrieves this buffer's byte order.
abstract
ByteOrder
FloatBuffer.
order
()
Retrieves this buffer's byte order.
abstract
ByteOrder
IntBuffer.
order
()
Retrieves this buffer's byte order.
abstract
ByteOrder
LongBuffer.
order
()
Retrieves this buffer's byte order.
abstract
ByteOrder
ShortBuffer.
order
()
Retrieves this buffer's byte order.
Methods in
java.nio
with parameters of type
ByteOrder
Modifier and Type
Method
Description
final
ByteBuffer
ByteBuffer.
order
(
ByteOrder
bo)
Modifies this buffer's byte order.
Uses of
ByteOrder
in
javax.imageio.stream
Fields in
javax.imageio.stream
declared as
ByteOrder
Modifier and Type
Field
Description
protected
ByteOrder
ImageInputStreamImpl.
byteOrder
The byte order of the stream as an instance of the enumeration
 class
java.nio.ByteOrder
, where
ByteOrder.BIG_ENDIAN
indicates network byte order
 and
ByteOrder.LITTLE_ENDIAN
indicates the reverse
 order.
Methods in
javax.imageio.stream
that return
ByteOrder
Modifier and Type
Method
Description
ByteOrder
ImageInputStream.
getByteOrder
()
Returns the byte order with which data values will be read from
 this stream as an instance of the
java.nio.ByteOrder
enumeration.
ByteOrder
ImageInputStreamImpl.
getByteOrder
()
Methods in
javax.imageio.stream
with parameters of type
ByteOrder
Modifier and Type
Method
Description
void
ImageInputStream.
setByteOrder
(
ByteOrder
byteOrder)
Sets the desired byte order for future reads of data values
 from this stream.
void
ImageInputStreamImpl.
setByteOrder
(
ByteOrder
byteOrder)
Uses of
ByteOrder
in
jdk.incubator.vector
Methods in
jdk.incubator.vector
with parameters of type
ByteOrder
Modifier and Type
Method
Description
static
ByteVector
ByteVector.
fromMemorySegment
(
VectorSpecies
<
Byte
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
ByteVector
ByteVector.
fromMemorySegment
(
VectorSpecies
<
Byte
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Byte
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
DoubleVector
DoubleVector.
fromMemorySegment
(
VectorSpecies
<
Double
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
DoubleVector
DoubleVector.
fromMemorySegment
(
VectorSpecies
<
Double
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Double
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
FloatVector
FloatVector.
fromMemorySegment
(
VectorSpecies
<
Float
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
FloatVector
FloatVector.
fromMemorySegment
(
VectorSpecies
<
Float
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Float
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
IntVector
IntVector.
fromMemorySegment
(
VectorSpecies
<
Integer
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
IntVector
IntVector.
fromMemorySegment
(
VectorSpecies
<
Integer
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Integer
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
LongVector
LongVector.
fromMemorySegment
(
VectorSpecies
<
Long
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
LongVector
LongVector.
fromMemorySegment
(
VectorSpecies
<
Long
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Long
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
ShortVector
ShortVector.
fromMemorySegment
(
VectorSpecies
<
Short
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
ShortVector
ShortVector.
fromMemorySegment
(
VectorSpecies
<
Short
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Short
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
Vector
<
E
>
VectorSpecies.
fromMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector of this species from a
memory segment
PREVIEW
starting at an offset into the memory segment.
final void
ByteVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
ByteVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Byte
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
DoubleVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
DoubleVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Double
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
FloatVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
FloatVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Float
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
IntVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
IntVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Integer
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
LongVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
LongVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Long
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
ShortVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
ShortVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Short
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
abstract void
Vector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
abstract void
Vector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
E
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.