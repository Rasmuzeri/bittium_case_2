CharsetProvider (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.base
Package
java.nio.charset.spi
Class CharsetProvider
java.lang.Object
java.nio.charset.spi.CharsetProvider
public abstract class
CharsetProvider
extends
Object
Charset service-provider class.
A charset provider is a concrete subclass of this class that has a
 zero-argument constructor and some number of associated charset
 implementation classes.  Charset providers may be installed in an instance
 of the Java platform as extensions.  Providers may also be made available by
 adding them to the applet or application class path or by some other
 platform-specific means.  Charset providers are looked up via the current
 thread's
context class
 loader
.
A charset provider identifies itself with a provider-configuration file
 named
java.nio.charset.spi.CharsetProvider
in the resource
 directory
META-INF/services
.  The file should contain a list of
 fully-qualified concrete charset-provider class names, one per line.  A line
 is terminated by any one of a line feed (
'\n'
), a carriage return
 (
'\r'
), or a carriage return followed immediately by a line feed.
 Space and tab characters surrounding each name, as well as blank lines, are
 ignored.  The comment character is
'#'
(
'\u0023'
); on
 each line all characters following the first comment character are ignored.
 The file must be encoded in UTF-8.
If a particular concrete charset provider class is named in more than
 one configuration file, or is named in the same configuration file more than
 once, then the duplicates will be ignored.  The configuration file naming a
 particular provider need not be in the same jar file or other distribution
 unit as the provider itself.  The provider must be accessible from the same
 class loader that was initially queried to locate the configuration file;
 this is not necessarily the class loader that loaded the file.
Since:
1.4
See Also:
Charset
Constructor Summary
Constructors
Modifier
Constructor
Description
protected
CharsetProvider
()
Initializes a new charset provider.
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
abstract
Charset
charsetForName
(
String
charsetName)
Retrieves a charset for the given charset name.
abstract
Iterator
<
Charset
>
charsets
()
Creates an iterator that iterates over the charsets supported by this
 provider.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
CharsetProvider
protected
CharsetProvider
()
Initializes a new charset provider.
Throws:
SecurityException
- If a security manager has been installed and it denies
RuntimePermission
("charsetProvider")
Method Details
charsets
public abstract
Iterator
<
Charset
>
charsets
()
Creates an iterator that iterates over the charsets supported by this
 provider.  This method is used in the implementation of the
Charset.availableCharsets
method.
Returns:
The new iterator
charsetForName
public abstract
Charset
charsetForName
(
String
charsetName)
Retrieves a charset for the given charset name.
Parameters:
charsetName
- The name of the requested charset; may be either
         a canonical name or an alias
Returns:
A charset object for the named charset,
          or
null
if the named charset
          is not supported by this provider
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.