Uses of Class java.net.UnknownHostException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.net.UnknownHostException
Packages that use
UnknownHostException
Package
Description
java.net
Provides the classes for implementing networking applications.
java.net.spi
Service-provider classes for the
java.net
package.
javax.net
Provides classes for networking applications.
javax.net.ssl
Provides classes for the secure socket package.
Uses of
UnknownHostException
in
java.net
Methods in
java.net
that throw
UnknownHostException
Modifier and Type
Method
Description
static
InetAddress
[]
InetAddress.
getAllByName
(
String
host)
Given the name of a host, returns an array of its IP addresses,
 based on the configured system
resolver
.
static
Inet6Address
Inet6Address.
getByAddress
(
String
host,
 byte[] addr,
 int scope_id)
Create an Inet6Address in the exact manner of
InetAddress.getByAddress(String,byte[])
except that the IPv6 scope_id is
 set to the given numeric value.
static
Inet6Address
Inet6Address.
getByAddress
(
String
host,
 byte[] addr,
NetworkInterface
nif)
Create an Inet6Address in the exact manner of
InetAddress.getByAddress(String,byte[])
except that the IPv6 scope_id is
 set to the value corresponding to the given interface for the address
 type specified in
addr
.
static
InetAddress
InetAddress.
getByAddress
(byte[] addr)
Returns an
InetAddress
object given the raw IP address .
static
InetAddress
InetAddress.
getByAddress
(
String
host,
 byte[] addr)
Creates an InetAddress based on the provided host name and IP address.
static
InetAddress
InetAddress.
getByName
(
String
host)
Determines the IP address of a host, given the host's name.
static
InetAddress
InetAddress.
getLocalHost
()
Returns the address of the local host.
Constructors in
java.net
that throw
UnknownHostException
Modifier
Constructor
Description
Socket
(
String
host,
 int port)
Creates a stream socket and connects it to the specified port
 number on the named host.
Uses of
UnknownHostException
in
java.net.spi
Methods in
java.net.spi
that throw
UnknownHostException
Modifier and Type
Method
Description
String
InetAddressResolver.
lookupByAddress
(byte[] addr)
Lookup the host name corresponding to the raw IP address provided.
Stream
<
InetAddress
>
InetAddressResolver.
lookupByName
(
String
host,
InetAddressResolver.LookupPolicy
lookupPolicy)
Given the name of a host, returns a stream of IP addresses of the requested
 address family associated with a provided hostname.
Uses of
UnknownHostException
in
javax.net
Methods in
javax.net
that throw
UnknownHostException
Modifier and Type
Method
Description
abstract
Socket
SocketFactory.
createSocket
(
String
host,
 int port)
Creates a socket and connects it to the specified remote host
 at the specified remote port.
abstract
Socket
SocketFactory.
createSocket
(
String
host,
 int port,
InetAddress
localHost,
 int localPort)
Creates a socket and connects it to the specified remote host
 on the specified remote port.
Uses of
UnknownHostException
in
javax.net.ssl
Constructors in
javax.net.ssl
that throw
UnknownHostException
Modifier
Constructor
Description
protected
SSLSocket
(
String
host,
 int port)
Used only by subclasses.
protected
SSLSocket
(
String
host,
 int port,
InetAddress
clientAddress,
 int clientPort)
Used only by subclasses.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.