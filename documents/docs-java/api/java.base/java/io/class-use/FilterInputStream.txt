Uses of Class java.io.FilterInputStream (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.io.FilterInputStream
Packages that use
FilterInputStream
Package
Description
java.io
Provides for system input and output through data streams,
 serialization and the file system.
java.security
Provides the classes and interfaces for the security framework.
java.util.jar
Provides classes for reading and writing the JAR (Java ARchive)
 file format, which is based on the standard ZIP file format with an
 optional manifest file.
java.util.zip
Provides classes for reading and writing the standard ZIP and GZIP file
 formats.
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
Uses of
FilterInputStream
in
java.io
Subclasses of
FilterInputStream
in
java.io
Modifier and Type
Class
Description
class
BufferedInputStream
A
BufferedInputStream
adds
 functionality to another input stream-namely,
 the ability to buffer the input and to
 support the
mark
and
reset
methods.
class
DataInputStream
A data input stream lets an application read primitive Java data
 types from an underlying input stream in a machine-independent
 way.
class
LineNumberInputStream
Deprecated.
This class incorrectly assumes that bytes adequately represent
             characters.
class
PushbackInputStream
A
PushbackInputStream
adds
 functionality to another input stream, namely
 the  ability to "push back" or "unread" bytes,
 by storing pushed-back bytes in an internal buffer.
Uses of
FilterInputStream
in
java.security
Subclasses of
FilterInputStream
in
java.security
Modifier and Type
Class
Description
class
DigestInputStream
A transparent stream that updates the associated message digest using
 the bits going through the stream.
Uses of
FilterInputStream
in
java.util.jar
Subclasses of
FilterInputStream
in
java.util.jar
Modifier and Type
Class
Description
class
JarInputStream
The
JarInputStream
class, which extends
ZipInputStream
,
 is used to read the contents of a JAR file from an input stream.
Uses of
FilterInputStream
in
java.util.zip
Subclasses of
FilterInputStream
in
java.util.zip
Modifier and Type
Class
Description
class
CheckedInputStream
An input stream that also maintains a checksum of the data being read.
class
DeflaterInputStream
Implements an input stream filter for compressing data in the "deflate"
 compression format.
class
GZIPInputStream
This class implements a stream filter for reading compressed data in
 the GZIP file format.
class
InflaterInputStream
This class implements a stream filter for uncompressing data in the
 "deflate" compression format.
class
ZipInputStream
An input stream for reading compressed and uncompressed
ZIP file entries
from a stream of bytes in the ZIP file
 format.
Uses of
FilterInputStream
in
javax.crypto
Subclasses of
FilterInputStream
in
javax.crypto
Modifier and Type
Class
Description
class
CipherInputStream
A
CipherInputStream
is composed of an
InputStream
and a
Cipher
object so that read() methods return data that are
 read in from the underlying
InputStream
but have been
 additionally processed by the
Cipher
object.
Uses of
FilterInputStream
in
javax.swing
Subclasses of
FilterInputStream
in
javax.swing
Modifier and Type
Class
Description
class
ProgressMonitorInputStream
Monitors the progress of reading from some InputStream.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.