Uses of Interface java.io.Serializable (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.io.Serializable
Packages that use
Serializable
Package
Description
com.sun.jdi
This is the core package of the Java Debug
 Interface (JDI), it defines mirrors for values, types, and the target
 VirtualMachine itself - as well bootstrapping facilities.
com.sun.jdi.connect
This package defines connections between the virtual machine
 using the JDI and the target virtual machine.
com.sun.jdi.connect.spi
This package comprises the interfaces and classes used to
 develop new
TransportService
implementations.
com.sun.jdi.request
This package is used to request that a JDI
 event be sent under specified conditions.
com.sun.management
This package contains the JDK's extension to
 the standard implementation of the
java.lang.management
API and also defines the management
 interface for some other components of the platform.
com.sun.net.httpserver
Provides a simple high-level Http server API, which can be used to build
   embedded HTTP servers.
com.sun.nio.sctp
A Java API for Stream Control Transport Protocol.
com.sun.security.auth
Provides implementations of
Principal
.
com.sun.security.jgss
This package defines classes and interfaces for the JDK extensions
 to the GSS-API.
com.sun.source.doctree
Provides interfaces to represent documentation comments as abstract syntax
 trees (AST).
com.sun.source.tree
Provides interfaces to represent source code as abstract syntax
 trees (AST).
com.sun.source.util
Provides utilities for operations on abstract syntax trees (AST).
com.sun.tools.attach
Provides the API to attach to a Java virtual machine.
com.sun.tools.jconsole
This package contains the JConsole API.
java.applet
Provides the classes necessary to create an applet and the classes an applet
 uses to communicate with its applet context.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.color
Provides classes for color spaces.
java.awt.datatransfer
Provides interfaces and classes for transferring data between and within
 applications.
java.awt.desktop
Provides interfaces and classes for interaction with various desktop
 capabilities.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
java.awt.font
Provides classes and interface relating to fonts.
java.awt.geom
Provides the Java 2D classes for defining and performing operations on
 objects related to two-dimensional geometry.
java.awt.image
Provides classes for creating and modifying images.
java.awt.image.renderable
Provides classes and interfaces for producing rendering-independent images.
java.awt.print
Provides classes and interfaces for a general printing API.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.beans.beancontext
Provides classes and interfaces relating to bean context.
java.io
Provides for system input and output through data streams,
 serialization and the file system.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.annotation
Provides library support for the Java programming language
 annotation facility.
java.lang.constant
Classes and interfaces to represent
nominal descriptors
for run-time
 entities such as classes or method handles, and classfile entities such as
 constant pool entries or
invokedynamic
call sites.
java.lang.instrument
Provides services that allow Java programming language agents to instrument
 programs running on the Java Virtual Machine (JVM).
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.lang.management
Provides the management interfaces for monitoring and management of the
Java virtual machine and other components in the Java runtime.
java.lang.module
Classes to support module descriptors and creating configurations of modules
 by means of resolution and service binding.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.math
Provides classes for performing arbitrary-precision integer
 arithmetic (
BigInteger
) and arbitrary-precision decimal
 arithmetic (
BigDecimal
).
java.net
Provides the classes for implementing networking applications.
java.net.http
HTTP Client and WebSocket APIs
java.nio
Defines buffers, which are containers for data, and provides an
 overview of the other NIO packages.
java.nio.channels
Defines channels, which represent connections to entities that are capable of
 performing I/O operations, such as files and sockets; defines selectors, for
 multiplexed, non-blocking I/O operations.
java.nio.charset
Defines charsets, decoders, and encoders, for translating between
 bytes and Unicode characters.
java.nio.file
Defines interfaces and classes for the Java virtual machine to access files,
 file attributes, and file systems.
java.nio.file.attribute
Interfaces and classes providing access to file and file system attributes.
java.rmi
Provides the RMI package.
java.rmi.dgc
Provides classes and interface for RMI distributed
 garbage-collection (DGC).
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
java.security.interfaces
Provides interfaces for generating RSA (Rivest, Shamir and
 Adleman AsymmetricCipher algorithm)
 keys as defined in the RSA Laboratory Technical Note
 PKCS#1, and DSA (Digital Signature
 Algorithm) keys as defined in NIST's FIPS-186.
java.security.spec
Provides classes and interfaces for key specifications and algorithm
 parameter specifications.
java.sql
Provides the API for accessing and processing data stored in a
 data source (usually a relational database) using the
 Java programming language.
java.text
Provides classes and interfaces for handling text, dates, numbers,
 and messages in a manner independent of natural languages.
java.time
The main API for dates, times, instants, and durations.
java.time.chrono
Generic API for calendar systems other than the default ISO.
java.time.format
Provides classes to print and parse dates and times.
java.time.temporal
Access to date and time using fields and units, and date time adjusters.
java.time.zone
Support for time-zones and their rules.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.concurrent.atomic
A small toolkit of classes that support lock-free thread-safe
 programming on single variables.
java.util.concurrent.locks
Interfaces and classes providing a framework for locking and waiting
 for conditions that is distinct from built-in synchronization and
 monitors.
java.util.jar
Provides classes for reading and writing the JAR (Java ARchive)
 file format, which is based on the standard ZIP file format with an
 optional manifest file.
java.util.logging
Provides the classes and interfaces of
 the Java 2 platform's core logging facilities.
java.util.prefs
This package allows applications to store and retrieve user and system
 preference and configuration data.
java.util.regex
Classes for matching character sequences against patterns specified
 by regular expressions.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
java.util.zip
Provides classes for reading and writing the standard ZIP and GZIP file
 formats.
javax.annotation.processing
Facilities for declaring annotation processors and for
 allowing annotation processors to communicate with an annotation processing
 tool environment.
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
javax.crypto.interfaces
Provides interfaces for Diffie-Hellman keys as defined in RSA
 Laboratories' PKCS #3.
javax.crypto.spec
Provides classes and interfaces for key specifications and
 algorithm parameter specifications.
javax.imageio
The main package of the Java Image I/O API.
javax.imageio.metadata
A package of the Java Image I/O API dealing with reading and writing
 metadata.
javax.lang.model
Types and hierarchies of packages comprising a Java language model, a model of the declarations and types of the Java
 programming language.
javax.lang.model.element
Interfaces used to model elements of the Java programming language.
javax.lang.model.type
Interfaces used to model Java programming language types.
javax.lang.model.util
Utilities to assist in the processing of
program elements
and
types
.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.loading
Provides the classes which implement advanced dynamic
        loading.
javax.management.modelmbean
Provides the definition of the ModelMBean classes.
javax.management.monitor
Provides the definition of the monitor classes.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.remote
Interfaces for remote access to
        JMX MBean servers.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
javax.management.timer
Provides the definition of the Timer MBean.
javax.naming
Provides the classes and interfaces for accessing naming services.
javax.naming.directory
Extends the
javax.naming
package to provide functionality
for accessing directory services.
javax.naming.event
Provides support for event notification when accessing naming and
directory services.
javax.naming.ldap
Provides support for LDAPv3 extended operations and controls.
javax.naming.spi
Provides the means for dynamically plugging in support for accessing
naming and directory services through the
javax.naming
and related packages.
javax.net.ssl
Provides classes for the secure socket package.
javax.print
Provides the principal classes and interfaces for the Java Print
 Service API.
javax.print.attribute
Provides classes and interfaces that describe the types of Java Print
 Service attributes and how they can be collected into attribute sets.
javax.print.attribute.standard
Package
javax.print.attribute.standard
contains classes for specific
 printing attributes.
javax.print.event
Package
javax.print.event
contains event classes and listener
 interfaces.
javax.rmi.ssl
Provides implementations of
RMIClientSocketFactory
and
RMIServerSocketFactory
over
 the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.
javax.script
The scripting API consists of interfaces and classes that define
Java Scripting Engines and provides
a framework for their use in Java applications.
javax.security.auth
This package provides a framework for authentication and
 authorization.
javax.security.auth.callback
This package provides the classes necessary for services
 to interact with applications in order to retrieve
 information (authentication data including usernames
 or passwords, for example) or to display information
 (error and warning messages, for example).
javax.security.auth.kerberos
This package contains utility classes related to the Kerberos network
 authentication protocol.
javax.security.auth.login
This package provides a pluggable authentication framework.
javax.security.auth.x500
This package contains the classes that should be used to store
 X500 Principal and X500 Private Credentials in a
Subject
.
javax.security.cert
Provides classes for public key certificates.
javax.security.sasl
Contains class and interfaces for supporting SASL.
javax.smartcardio
Java™ Smart Card I/O API.
javax.sound.midi
Provides interfaces and classes for I/O, sequencing, and synthesis of MIDI
 (Musical Instrument Digital Interface) data.
javax.sound.sampled
Provides interfaces and classes for capture, processing, and playback of
 sampled audio data.
javax.sql
Provides the API for server side data source access and processing from
 the Java programming language.
javax.sql.rowset
Standard interfaces and base classes for JDBC
RowSet
implementations.
javax.sql.rowset.serial
Provides utility classes to allow serializable mappings between SQL types
 and data types in the Java programming language.
javax.sql.rowset.spi
The standard classes and interfaces that a third party vendor has to
 use in its implementation of a synchronization provider.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.border
Provides classes and interface for drawing specialized borders around a Swing
 component.
javax.swing.colorchooser
Contains classes and interfaces used by the
JColorChooser
component.
javax.swing.event
Provides for events fired by Swing components.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.nimbus
Provides user interface objects built according to the cross-platform Nimbus
 look and feel.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
javax.swing.text.html.parser
Provides the default HTML parser, along with support classes.
javax.swing.text.rtf
Provides a class (
RTFEditorKit
) for creating Rich-Text-Format text
 editors.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
javax.swing.undo
Allows developers to provide support for undo/redo in applications such as
 text editors.
javax.tools
Provides interfaces for tools which can be invoked from a program,
 for example, compilers.
javax.transaction.xa
Provides the API that defines the contract between the transaction manager
 and the resource manager, which allows the transaction manager to enlist
 and delist resource objects (supplied by the resource manager driver) in
 JTA transactions.
javax.xml.catalog
Provides the classes for implementing
XML Catalogs OASIS Standard V1.1, 7 October 2005
.
javax.xml.crypto
Common classes for XML cryptography.
javax.xml.crypto.dsig
Classes for generating and validating XML digital
 signatures.
javax.xml.datatype
Defines XML/Java Type Mappings.
javax.xml.namespace
Defines XML Namespace processing.
javax.xml.parsers
Provides the classes for processing XML documents with a SAX (Simple API for XML)
 parser or a DOM (Document Object Model) Document builder.
javax.xml.stream
Defines interfaces and classes for the Streaming API for XML (StAX).
javax.xml.transform
Defines the generic APIs for processing transformation instructions,
 and performing a transformation from source to result.
javax.xml.validation
Provides an API for validation of XML documents.
javax.xml.xpath
Provides an
object-model neutral
API for the
 evaluation of XPath expressions and access to the evaluation
 environment.
jdk.dynalink
Contains interfaces and classes that are used to link an
invokedynamic
call site.
jdk.dynalink.beans
Contains the linker for ordinary Java objects.
jdk.dynalink.linker
Contains interfaces and classes needed by language runtimes to implement
 their own language-specific object models and type conversions.
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
jdk.javadoc.doclet
The Doclet API provides an environment which, in conjunction with
 the Language Model API and Compiler Tree API, allows clients
 to inspect the source-level structures of programs and
 libraries, including API comments embedded in the source.
jdk.jfr
This package provides classes to create events and control Flight Recorder.
jdk.jshell
Provides interfaces for creating tools, such as a Read-Eval-Print Loop (REPL),
 which interactively evaluate "snippets" of Java programming language code.
jdk.jshell.spi
Defines the Service Provider Interface for pluggable JShell execution engines.
jdk.net
Platform specific socket options for the
java.net
and
java.nio.channels
socket classes.
jdk.security.jarsigner
This package defines APIs for signing jar files.
netscape.javascript
Provides Java code the ability to access the JavaScript engine and the
 HTML DOM in the web browser.
org.ietf.jgss
This package presents a framework that allows application developers to
 make use of security services like authentication, data integrity and
 data confidentiality from a variety of underlying security mechanisms
 like Kerberos, using a unified API.
org.w3c.dom
Provides the interfaces for the Document Object Model (DOM).
org.w3c.dom.events
Provides interfaces for DOM Level 2 Events.
org.w3c.dom.ls
Provides interfaces for DOM Level 3 Load and Save.
org.w3c.dom.ranges
Provides interfaces for DOM Level 2 Range.
org.w3c.dom.xpath
Provides interfaces for DOM Level 3 XPath Specification.
org.xml.sax
Provides the interfaces for the Simple API for XML (SAX).
Uses of
Serializable
in
com.sun.jdi
Classes in
com.sun.jdi
that implement
Serializable
Modifier and Type
Class
Description
class
AbsentInformationException
Thrown to indicate line number or variable information is not available.
class
ClassNotLoadedException
Thrown to indicate that the requested class has
 not yet been loaded through the appropriate class loader.
class
ClassNotPreparedException
Thrown to indicate that the requested operation cannot be
 completed because the specified class has not yet been prepared.
class
IncompatibleThreadStateException
Thrown to indicate that the requested operation cannot be
 completed while the specified thread is in its current state.
class
InconsistentDebugInfoException
Thrown to indicate that there is an inconistency in the debug
 information provided by the target VM.
class
InternalException
Thrown to indicate that an unexpected internal error has
 occurred.
class
InvalidCodeIndexException
Deprecated.
This exception is no longer thrown
class
InvalidLineNumberException
Deprecated.
This exception is no longer thrown
class
InvalidModuleException
Thrown to indicate that the requested module is invalid
 or became invalid after the module was unloaded.
class
InvalidStackFrameException
Thrown to indicate that the requested operation cannot be
 completed because the specified stack frame is no longer valid.
class
InvalidTypeException
Thrown to indicate a type mismatch in setting the value of a field
 or variable, or in specifying the return value of a method.
class
InvocationException
Thrown to indicate an exception occurred in an invoked method within
 the target VM.
final class
JDIPermission
The
JDIPermission
class represents access rights to
 the
VirtualMachineManager
.
class
NativeMethodException
Thrown to indicate an operation cannot be completed because
 it is not valid for a native method.
class
ObjectCollectedException
Thrown to indicate that the requested operation cannot be
 completed because the specified object has been garbage collected.
class
OpaqueFrameException
Thrown to indicate an operation could not be performed on a frame.
class
VMCannotBeModifiedException
Thrown to indicate that the operation is invalid because it would
 modify the VM and the VM is read-only.
class
VMDisconnectedException
Unchecked exception thrown to indicate that the
 requested operation cannot be
 completed because there is no longer a connection to the target VM.
class
VMMismatchException
Thrown to indicate that the requested operation cannot be
 completed because the mirror from one target VM is being
 combined with a mirror from another target VM.
class
VMOutOfMemoryException
Thrown to indicate that the requested operation cannot be
 completed because the target VM has run out of memory.
Uses of
Serializable
in
com.sun.jdi.connect
Subinterfaces of
Serializable
in
com.sun.jdi.connect
Modifier and Type
Interface
Description
static interface
Connector.Argument
Specification for and value of a Connector argument.
static interface
Connector.BooleanArgument
Specification for and value of a Connector argument,
 whose value is Boolean.
static interface
Connector.IntegerArgument
Specification for and value of a Connector argument,
 whose value is an integer.
static interface
Connector.SelectedArgument
Specification for and value of a Connector argument,
 whose value is a String selected from a list of choices.
static interface
Connector.StringArgument
Specification for and value of a Connector argument,
 whose value is a String.
Classes in
com.sun.jdi.connect
that implement
Serializable
Modifier and Type
Class
Description
class
IllegalConnectorArgumentsException
Thrown to indicate an invalid argument or
 inconsistent passed to a
Connector
.
class
TransportTimeoutException
This exception may be thrown as a result of a timeout
 when attaching to a target VM, or waiting to accept a
 connection from a target VM.
class
VMStartException
A target VM was successfully launched, but terminated with an
 error before a connection could be established.
Uses of
Serializable
in
com.sun.jdi.connect.spi
Classes in
com.sun.jdi.connect.spi
that implement
Serializable
Modifier and Type
Class
Description
class
ClosedConnectionException
This exception may be thrown as a result of an asynchronous
 close of a
Connection
while an I/O operation is
 in progress.
Uses of
Serializable
in
com.sun.jdi.request
Classes in
com.sun.jdi.request
that implement
Serializable
Modifier and Type
Class
Description
class
DuplicateRequestException
Thrown to indicate a duplicate event request.
class
InvalidRequestStateException
Thrown to indicate that the requested event cannot be modified
 because it is enabled.
Uses of
Serializable
in
com.sun.management
Classes in
com.sun.management
that implement
Serializable
Modifier and Type
Class
Description
static enum
HotSpotDiagnosticMXBean.ThreadDumpFormat
Thread dump format.
static enum
VMOption.Origin
Origin of the value of a VM option.
Uses of
Serializable
in
com.sun.net.httpserver
Classes in
com.sun.net.httpserver
that implement
Serializable
Modifier and Type
Class
Description
static enum
SimpleFileServer.OutputLevel
Describes the log message output level produced by the server when
 processing exchanges.
Uses of
Serializable
in
com.sun.nio.sctp
Classes in
com.sun.nio.sctp
that implement
Serializable
Modifier and Type
Class
Description
static enum
AssociationChangeNotification.AssocChangeEvent
Defines the type of change event that happened to the association.
enum
HandlerResult
Defines notification handler results.
class
IllegalReceiveException
Unchecked exception thrown when an attempt is made to invoke the
receive
method of
SctpChannel
or
SctpMultiChannel
from a notification handler.
class
IllegalUnbindException
Unchecked exception thrown when an attempt is made to remove an
 address that is not bound to the channel, or remove an address from a
 channel that has only one address bound to it.
class
InvalidStreamException
Unchecked exception thrown when an attempt is made to send a
 message to an invalid stream.
static enum
PeerAddressChangeNotification.AddressChangeEvent
Defines the type of address change event that occurred to the destination
 address on a multi-homed peer when it encounters a change of interface
 details.
Uses of
Serializable
in
com.sun.security.auth
Classes in
com.sun.security.auth
that implement
Serializable
Modifier and Type
Class
Description
final class
LdapPrincipal
A principal identified by a distinguished name as specified by
RFC 2253
.
class
NTDomainPrincipal
This class implements the
Principal
interface
 and represents the name of the Windows NT domain into which the
 user authenticated.
class
NTSid
This class implements the
Principal
interface
 and represents information about a Windows NT user, group or realm.
class
NTSidDomainPrincipal
This class extends
NTSid
and represents a Windows NT user's domain SID.
class
NTSidGroupPrincipal
This class extends
NTSid
and represents one of the groups to which a Windows NT user belongs.
class
NTSidPrimaryGroupPrincipal
This class extends
NTSid
and represents a Windows NT user's primary group SID.
class
NTSidUserPrincipal
This class extends
NTSid
and represents a Windows NT user's SID.
class
NTUserPrincipal
This class implements the
Principal
interface
 and represents a Windows NT user.
class
UnixNumericGroupPrincipal
This class implements the
Principal
interface
 and represents a user's Unix group identification number (GID).
class
UnixNumericUserPrincipal
This class implements the
Principal
interface
 and represents a user's Unix identification number (UID).
class
UnixPrincipal
This class implements the
Principal
interface
 and represents a Unix user.
final class
UserPrincipal
A user principal identified by a username or account name.
Uses of
Serializable
in
com.sun.security.jgss
Classes in
com.sun.security.jgss
that implement
Serializable
Modifier and Type
Class
Description
final class
InquireSecContextPermission
This class is used to protect various attributes of an established
 GSS security context that can be accessed using the
ExtendedGSSContext.inquireSecContext(com.sun.security.jgss.InquireType)
method.
enum
InquireType
Attribute types that can be specified as an argument of
ExtendedGSSContext.inquireSecContext(com.sun.security.jgss.InquireType)
Uses of
Serializable
in
com.sun.source.doctree
Classes in
com.sun.source.doctree
that implement
Serializable
Modifier and Type
Class
Description
static enum
AttributeTree.ValueKind
The kind of an attribute value.
static enum
DocTree.Kind
Enumerates all kinds of trees.
Uses of
Serializable
in
com.sun.source.tree
Classes in
com.sun.source.tree
that implement
Serializable
Modifier and Type
Class
Description
static enum
CaseTree.CaseKind
The syntactic form of this case:
 
     STATEMENT:
case <expression>: <statements>
RULE:
case <expression> -> <expression>/<statement>
static enum
LambdaExpressionTree.BodyKind
Lambda expressions come in two forms:
 
  expression lambdas, whose body is an expression, and
  statement lambdas, whose body is a block
static enum
MemberReferenceTree.ReferenceMode
There are two kinds of member references: (i) method references and
 (ii) constructor references
static enum
ModuleTree.ModuleKind
The kind of the module.
static enum
Tree.Kind
Enumerates all kinds of trees.
Uses of
Serializable
in
com.sun.source.util
Classes in
com.sun.source.util
that implement
Serializable
Modifier and Type
Class
Description
static enum
TaskEvent.Kind
Kind of task event.
Uses of
Serializable
in
com.sun.tools.attach
Classes in
com.sun.tools.attach
that implement
Serializable
Modifier and Type
Class
Description
class
AgentInitializationException
The exception thrown when an agent fails to initialize in the target
 Java virtual machine.
class
AgentLoadException
The exception thrown when an agent cannot be loaded into the target
 Java virtual machine.
class
AttachNotSupportedException
Thrown by
VirtualMachine.attach
when attempting to attach to a Java virtual machine
 for which a compatible
AttachProvider
does not exist.
class
AttachOperationFailedException
Exception type to signal that an attach operation failed in the target VM.
final class
AttachPermission
When a
SecurityManager
set, this
 is the permission which will be checked when code invokes
VirtualMachine.attach
to attach to a target virtual
 machine.
Uses of
Serializable
in
com.sun.tools.jconsole
Classes in
com.sun.tools.jconsole
that implement
Serializable
Modifier and Type
Class
Description
static enum
JConsoleContext.ConnectionState
Values for the
ConnectionState
bound property.
Uses of
Serializable
in
java.applet
Classes in
java.applet
that implement
Serializable
Modifier and Type
Class
Description
class
Applet
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated, no replacement.
protected class
Applet.AccessibleApplet
Deprecated, for removal: This API element is subject to removal in a future version.
This class implements accessibility support for the
Applet
class.
Uses of
Serializable
in
java.awt
Classes in
java.awt
that implement
Serializable
Modifier and Type
Class
Description
class
AWTError
Thrown when a serious Abstract Window Toolkit error has occurred.
class
AWTEvent
The root event class for all AWT events.
class
AWTException
Signals that an Abstract Window Toolkit exception has occurred.
class
AWTKeyStroke
An
AWTKeyStroke
represents a key action on the
 keyboard, or equivalent input device.
final class
AWTPermission
This class is for AWT permissions.
class
BorderLayout
A border layout lays out a container, arranging and resizing
 its components to fit in five regions:
 north, south, east, west, and center.
class
Button
This class creates a labeled button.
protected class
Button.AccessibleAWTButton
This class implements accessibility support for the
Button
class.
class
Canvas
A
Canvas
component represents a blank rectangular
 area of the screen onto which the application can draw or from
 which the application can trap input events from the user.
protected class
Canvas.AccessibleAWTCanvas
This class implements accessibility support for the
Canvas
class.
class
CardLayout
A
CardLayout
object is a layout manager for a
 container.
class
Checkbox
A check box is a graphical component that can be in either an
 "on" (
true
) or "off" (
false
) state.
protected class
Checkbox.AccessibleAWTCheckbox
This class implements accessibility support for the
Checkbox
class.
class
CheckboxGroup
The
CheckboxGroup
class is used to group together
 a set of
Checkbox
buttons.
class
CheckboxMenuItem
This class represents a check box that can be included in a menu.
protected class
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Inner class of CheckboxMenuItem used to provide default support for
 accessibility.
class
Choice
The
Choice
class presents a pop-up menu of choices.
protected class
Choice.AccessibleAWTChoice
This class implements accessibility support for the
Choice
class.
class
Color
The
Color
class is used to encapsulate colors in the default
 sRGB color space or colors in arbitrary color spaces identified by a
ColorSpace
.
class
Component
A
component
is an object having a graphical representation
 that can be displayed on the screen and that can interact with the
 user.
protected class
Component.AccessibleAWTComponent
Inner class of Component used to provide default support for
 accessibility.
protected class
Component.AccessibleAWTComponent.AccessibleAWTComponentHandler
Fire PropertyChange listener, if one is registered,
 when shown/hidden..
protected class
Component.AccessibleAWTComponent.AccessibleAWTFocusHandler
Fire PropertyChange listener, if one is registered,
 when focus events happen
static enum
Component.BaselineResizeBehavior
Enumeration of the common ways the baseline of a component can
 change as the size changes.
final class
ComponentOrientation
The ComponentOrientation class encapsulates the language-sensitive
 orientation that is to be used to order the elements of a component
 or of text.
class
Container
A generic Abstract Window Toolkit(AWT) container object is a component
 that can contain other AWT components.
protected class
Container.AccessibleAWTContainer
Inner class of Container used to provide default support for
 accessibility.
protected class
Container.AccessibleAWTContainer.AccessibleContainerHandler
Fire
PropertyChange
listener, if one is registered,
 when children are added or removed.
class
ContainerOrderFocusTraversalPolicy
A FocusTraversalPolicy that determines traversal order based on the order
 of child Components in a Container.
class
Cursor
A class to encapsulate the bitmap representation of the mouse cursor.
class
DefaultFocusTraversalPolicy
A FocusTraversalPolicy that determines traversal order based on the order
 of child Components in a Container.
static enum
Desktop.Action
Represents an action type.
class
Dialog
A Dialog is a top-level window with a title and a border
 that is typically used to take some form of input from the user.
protected class
Dialog.AccessibleAWTDialog
This class implements accessibility support for the
Dialog
class.
static enum
Dialog.ModalExclusionType
Any top-level window can be marked not to be blocked by modal
 dialogs.
static enum
Dialog.ModalityType
Modal dialogs block all input to some top-level windows.
class
Dimension
The
Dimension
class encapsulates the width and
 height of a component (in integer precision) in a single object.
class
Event
Deprecated.
It is recommended that
AWTEvent
and its subclasses be
             used instead
class
FileDialog
The
FileDialog
class displays a dialog window
 from which the user can select a file.
class
FlowLayout
A flow layout arranges components in a directional flow, much
 like lines of text in a paragraph.
class
Font
The
Font
class represents fonts, which are used to
 render text in a visible way.
class
FontFormatException
Thrown by method createFont in the
Font
class to indicate
 that the specified font is bad.
class
FontMetrics
The
FontMetrics
class defines a font metrics object, which
 encapsulates information about the rendering of a particular font on a
 particular screen.
class
Frame
A
Frame
is a top-level window with a title and a border.
protected class
Frame.AccessibleAWTFrame
This class implements accessibility support for the
Frame
class.
class
GraphicsConfigTemplate
The
GraphicsConfigTemplate
class is used to obtain a valid
GraphicsConfiguration
.
static enum
GraphicsDevice.WindowTranslucency
Kinds of translucency supported by the underlying system.
class
GridBagConstraints
The
GridBagConstraints
class specifies constraints
 for components that are laid out using the
GridBagLayout
class.
class
GridBagLayout
The
GridBagLayout
class is a flexible layout
 manager that aligns components vertically, horizontally or along their
 baseline without requiring that the components be of the same size.
final class
GridBagLayoutInfo
The
GridBagLayoutInfo
is an utility class for
GridBagLayout
layout manager.
class
GridLayout
The
GridLayout
class is a layout manager that
 lays out a container's components in a rectangular grid.
class
HeadlessException
Thrown when code that is dependent on a keyboard, display, or mouse
 is called in an environment that does not support a keyboard, display,
 or mouse.
class
IllegalComponentStateException
Signals that an AWT component is not in an appropriate state for
 the requested operation.
class
Insets
An
Insets
object is a representation of the borders
 of a container.
class
Label
A
Label
object is a component for placing text in a
 container.
protected class
Label.AccessibleAWTLabel
This class implements accessibility support for the
Label
class.
class
List
The
List
component presents the user with a
 scrolling list of text items.
protected class
List.AccessibleAWTList
This class implements accessibility support for the
List
class.
protected class
List.AccessibleAWTList.AccessibleAWTListChild
This class implements accessibility support for
 List children.
class
MediaTracker
The
MediaTracker
class is a utility class to track
 the status of a number of media objects.
class
Menu
A
Menu
object is a pull-down menu component
 that is deployed from a menu bar.
protected class
Menu.AccessibleAWTMenu
Inner class of Menu used to provide default support for
 accessibility.
class
MenuBar
The
MenuBar
class encapsulates the platform's
 concept of a menu bar bound to a frame.
protected class
MenuBar.AccessibleAWTMenuBar
Inner class of MenuBar used to provide default support for
 accessibility.
class
MenuComponent
The abstract class
MenuComponent
is the superclass
 of all menu-related components.
protected class
MenuComponent.AccessibleAWTMenuComponent
Inner class of
MenuComponent
used to provide
 default support for accessibility.
class
MenuItem
All items in a menu must belong to the class
MenuItem
, or one of its subclasses.
protected class
MenuItem.AccessibleAWTMenuItem
Inner class of MenuItem used to provide default support for
 accessibility.
class
MenuShortcut
The
MenuShortcut
class represents a keyboard accelerator
 for a MenuItem.
static enum
MultipleGradientPaint.ColorSpaceType
The color space in which to perform the gradient interpolation.
static enum
MultipleGradientPaint.CycleMethod
The method to use when painting outside the gradient bounds.
class
Panel
Panel
is the simplest container class.
protected class
Panel.AccessibleAWTPanel
This class implements accessibility support for the
Panel
class.
class
Point
A point representing a location in
(x,y)
coordinate space,
 specified in integer precision.
class
Polygon
The
Polygon
class encapsulates a description of a
 closed, two-dimensional region within a coordinate space.
class
PopupMenu
A class that implements a menu which can be dynamically popped up
 at a specified position within a component.
protected class
PopupMenu.AccessibleAWTPopupMenu
Inner class of PopupMenu used to provide default support for
 accessibility.
class
Rectangle
A
Rectangle
specifies an area in a coordinate space that is
 enclosed by the
Rectangle
object's upper-left point
(x,y)
in the coordinate space, its width, and its height.
class
Scrollbar
The
Scrollbar
class embodies a scroll bar, a
 familiar user-interface object.
protected class
Scrollbar.AccessibleAWTScrollBar
This class implements accessibility support for the
Scrollbar
class.
class
ScrollPane
A container class which implements automatic horizontal and/or
 vertical scrolling for a single child component.
protected class
ScrollPane.AccessibleAWTScrollPane
This class implements accessibility support for the
ScrollPane
class.
final class
ScrollPaneAdjustable
This class represents the state of a horizontal or vertical
 scrollbar of a
ScrollPane
.
final class
SystemColor
A class to encapsulate symbolic colors representing the color of
 native GUI objects on a system.
static enum
Taskbar.Feature
List of provided features.
static enum
Taskbar.State
Kinds of available window progress states.
class
TextArea
A
TextArea
object is a multi-line region
 that displays text.
protected class
TextArea.AccessibleAWTTextArea
This class implements accessibility support for the
TextArea
class.
class
TextComponent
The
TextComponent
class is the superclass of
 any component that allows the editing of some text.
protected class
TextComponent.AccessibleAWTTextComponent
This class implements accessibility support for the
TextComponent
class.
class
TextField
A
TextField
object is a text component
 that allows for the editing of a single line of text.
protected class
TextField.AccessibleAWTTextField
This class implements accessibility support for the
TextField
class.
static enum
TrayIcon.MessageType
The message type determines which icon will be displayed in the
 caption of the message, and a possible system sound a message
 may generate upon showing.
class
Window
A
Window
object is a top-level window with no borders and no
 menubar.
protected class
Window.AccessibleAWTWindow
This class implements accessibility support for the
Window
class.
static enum
Window.Type
Enumeration of available
window types
.
Uses of
Serializable
in
java.awt.color
Classes in
java.awt.color
that implement
Serializable
Modifier and Type
Class
Description
class
CMMException
This exception is thrown if the native CMM returns an error.
class
ColorSpace
This abstract class is used to serve as a color space tag to identify the
 specific color space of a
Color
object or, via a
ColorModel
object, of an
Image
, a
BufferedImage
, or a
GraphicsDevice
.
class
ICC_ColorSpace
The
ICC_ColorSpace
class is an implementation of the abstract
ColorSpace
class.
class
ICC_Profile
A representation of color profile data for device independent and device
 dependent color spaces based on the International Color Consortium
 Specification ICC.1:2001-12, File Format for Color Profiles, (see
http://www.color.org
).
final class
ICC_ProfileGray
The
ICC_ProfileGray
class is a subclass of the
ICC_Profile
class that represents profiles which meet the following criteria: the color
 space type of the profile is
TYPE_GRAY
and the profile includes the
grayTRCTag
and
mediaWhitePointTag
tags.
final class
ICC_ProfileRGB
The
ICC_ProfileRGB
class is a subclass of the
ICC_Profile
class that represents profiles which meet the following criteria: the
 profile's color space type is RGB, and the profile includes the
redColorantTag
,
greenColorantTag
,
blueColorantTag
,
redTRCTag
,
greenTRCTag
,
blueTRCTag
,
mediaWhitePointTag
tags.
class
ProfileDataException
This exception is thrown when an error occurs in accessing or processing an
ICC_Profile
object.
Uses of
Serializable
in
java.awt.datatransfer
Classes in
java.awt.datatransfer
that implement
Serializable
Modifier and Type
Class
Description
class
DataFlavor
A
DataFlavor
provides meta information about data.
class
FlavorEvent
FlavorEvent
is used to notify interested parties that available
DataFlavor
s have changed in the
Clipboard
(the event source).
class
MimeTypeParseException
A class to encapsulate MimeType parsing related exceptions.
class
UnsupportedFlavorException
Signals that the requested data is not supported in this flavor.
Uses of
Serializable
in
java.awt.desktop
Classes in
java.awt.desktop
that implement
Serializable
Modifier and Type
Class
Description
final class
AboutEvent
Event sent when the application is asked to open its about window.
class
AppEvent
AppEvents are sent to listeners and handlers installed on the
Desktop
instance of the current desktop context.
final class
AppForegroundEvent
Event sent when the application has become the foreground app, and when it is
 no longer the foreground app.
final class
AppHiddenEvent
Event sent when the application has been hidden or shown.
final class
AppReopenedEvent
Event sent when the application is asked to re-open itself.
class
FilesEvent
Auxiliary event containing a list of files.
final class
OpenFilesEvent
Event sent when the app is asked to open a list of files.
final class
OpenURIEvent
Event sent when the app is asked to open a
URI
.
final class
PreferencesEvent
Event sent when the application is asked to open its preferences window.
final class
PrintFilesEvent
Event sent when the app is asked to print a list of files.
final class
QuitEvent
Event sent when the application is asked to quit.
enum
QuitStrategy
The strategy used to shut down the application, if Sudden Termination is not
 enabled.
final class
ScreenSleepEvent
Event sent when the displays attached to the system enter and exit power save
 sleep.
final class
SystemSleepEvent
Event sent when the system enters and exits power save sleep.
final class
UserSessionEvent
Event sent when the user session has been changed.
static enum
UserSessionEvent.Reason
Kinds of available reasons of user session change.
Uses of
Serializable
in
java.awt.dnd
Classes in
java.awt.dnd
that implement
Serializable
Modifier and Type
Class
Description
class
DragGestureEvent
A
DragGestureEvent
is passed
 to
DragGestureListener
's
 dragGestureRecognized() method
 when a particular
DragGestureRecognizer
detects that a
 platform dependent drag initiating gesture has occurred
 on the
Component
that it is tracking.
class
DragGestureRecognizer
The
DragGestureRecognizer
is an
 abstract base class for the specification
 of a platform-dependent listener that can be associated with a particular
Component
in order to
 identify platform-dependent drag initiating gestures.
class
DragSource
The
DragSource
is the entity responsible
 for the initiation of the Drag
 and Drop operation, and may be used in a number of scenarios:
 
 1 default instance per JVM for the lifetime of that JVM.
class
DragSourceContext
The
DragSourceContext
class is responsible for managing the
 initiator side of the Drag and Drop protocol.
class
DragSourceDragEvent
The
DragSourceDragEvent
is
 delivered from the
DragSourceContextPeer
,
 via the
DragSourceContext
, to the
DragSourceListener
registered with that
DragSourceContext
and with its associated
DragSource
.
class
DragSourceDropEvent
The
DragSourceDropEvent
is delivered
 from the
DragSourceContextPeer
,
 via the
DragSourceContext
, to the
dragDropEnd
method of
DragSourceListener
s registered with that
DragSourceContext
and with its associated
DragSource
.
class
DragSourceEvent
This class is the base class for
DragSourceDragEvent
and
DragSourceDropEvent
.
class
DropTarget
The
DropTarget
is associated
 with a
Component
when that
Component
wishes
 to accept drops during Drag and Drop operations.
final class
DropTargetContext
A
DropTargetContext
is created
 whenever the logical cursor associated
 with a Drag and Drop operation coincides with the visible geometry of
 a
Component
associated with a
DropTarget
.
class
DropTargetDragEvent
The
DropTargetDragEvent
is delivered to a
DropTargetListener
via its
 dragEnter() and dragOver() methods.
class
DropTargetDropEvent
The
DropTargetDropEvent
is delivered
 via the
DropTargetListener
drop() method.
class
DropTargetEvent
The
DropTargetEvent
is the base
 class for both the
DropTargetDragEvent
and the
DropTargetDropEvent
.
class
InvalidDnDOperationException
This exception is thrown by various methods in the java.awt.dnd package.
class
MouseDragGestureRecognizer
This abstract subclass of
DragGestureRecognizer
defines a
DragGestureRecognizer
for mouse-based gestures.
Uses of
Serializable
in
java.awt.event
Classes in
java.awt.event
that implement
Serializable
Modifier and Type
Class
Description
class
ActionEvent
A semantic event which indicates that a component-defined action occurred.
class
AdjustmentEvent
The adjustment event emitted by Adjustable objects like
Scrollbar
and
ScrollPane
.
class
ComponentEvent
A low-level event which indicates that a component moved, changed
 size, or changed visibility (also, the root class for the other
 component-level events).
class
ContainerEvent
A low-level event which indicates that a container's contents
 changed because a component was added or removed.
class
FocusEvent
A low-level event which indicates that a Component has gained or lost the
 input focus.
static enum
FocusEvent.Cause
This enum represents the cause of a
FocusEvent
- the reason why it
 occurred.
class
HierarchyEvent
An event which indicates a change to the
Component
hierarchy to which
Component
belongs.
class
InputEvent
The root event class for all component-level input events.
class
InputMethodEvent
Input method events contain information about text that is being
 composed using an input method.
class
InvocationEvent
An event which executes the
run()
method on a
Runnable
when dispatched by the AWT event dispatcher thread.
class
ItemEvent
A semantic event which indicates that an item was selected or deselected.
class
KeyEvent
An event which indicates that a keystroke occurred in a component.
class
MouseEvent
An event which indicates that a mouse action occurred in a component.
class
MouseWheelEvent
An event which indicates that the mouse wheel was rotated in a component.
class
PaintEvent
The component-level paint event.
class
TextEvent
A semantic event which indicates that an object's text changed.
class
WindowEvent
A low-level event that indicates that a window has changed its status.
Uses of
Serializable
in
java.awt.font
Classes in
java.awt.font
that implement
Serializable
Modifier and Type
Class
Description
final class
NumericShaper
The
NumericShaper
class is used to convert Latin-1 (European)
 digits to other Unicode decimal digits.
static enum
NumericShaper.Range
A
NumericShaper.Range
represents a Unicode range of a
 script having its own decimal digits.
final class
TextAttribute
The
TextAttribute
class defines attribute keys and
 attribute values used for text rendering.
final class
TransformAttribute
The
TransformAttribute
class provides an immutable
 wrapper for a transform so that it is safe to use as an attribute.
Uses of
Serializable
in
java.awt.geom
Classes in
java.awt.geom
that implement
Serializable
Modifier and Type
Class
Description
class
AffineTransform
The
AffineTransform
class represents a 2D affine transform
 that performs a linear mapping from 2D coordinates to other 2D
 coordinates that preserves the "straightness" and
 "parallelness" of lines.
static class
Arc2D.Double
This class defines an arc specified in
double
precision.
static class
Arc2D.Float
This class defines an arc specified in
float
precision.
static class
CubicCurve2D.Double
A cubic parametric curve segment specified with
double
coordinates.
static class
CubicCurve2D.Float
A cubic parametric curve segment specified with
float
coordinates.
static class
Ellipse2D.Double
The
Double
class defines an ellipse specified
 in
double
precision.
static class
Ellipse2D.Float
The
Float
class defines an ellipse specified
 in
float
precision.
final class
GeneralPath
The
GeneralPath
class represents a geometric path
 constructed from straight lines, and quadratic and cubic
 (Bézier) curves.
class
IllegalPathStateException
The
IllegalPathStateException
represents an
 exception that is thrown if an operation is performed on a path
 that is in an illegal state with respect to the particular
 operation being performed, such as appending a path segment
 to a
GeneralPath
without an initial moveto.
static class
Line2D.Double
A line segment specified with double coordinates.
static class
Line2D.Float
A line segment specified with float coordinates.
class
NoninvertibleTransformException
The
NoninvertibleTransformException
class represents
 an exception that is thrown if an operation is performed requiring
 the inverse of an
AffineTransform
object but the
AffineTransform
is in a non-invertible state.
static class
Path2D.Double
The
Double
class defines a geometric path with
 coordinates stored in double precision floating point.
static class
Path2D.Float
The
Float
class defines a geometric path with
 coordinates stored in single precision floating point.
static class
Point2D.Double
The
Double
class defines a point specified in
double
precision.
static class
Point2D.Float
The
Float
class defines a point specified in float
 precision.
static class
QuadCurve2D.Double
A quadratic parametric curve segment specified with
double
coordinates.
static class
QuadCurve2D.Float
A quadratic parametric curve segment specified with
float
coordinates.
static class
Rectangle2D.Double
The
Double
class defines a rectangle specified in
 double coordinates.
static class
Rectangle2D.Float
The
Float
class defines a rectangle specified in float
 coordinates.
static class
RoundRectangle2D.Double
The
Double
class defines a rectangle with rounded
 corners all specified in
double
coordinates.
static class
RoundRectangle2D.Float
The
Float
class defines a rectangle with rounded
 corners all specified in
float
coordinates.
Uses of
Serializable
in
java.awt.image
Classes in
java.awt.image
that implement
Serializable
Modifier and Type
Class
Description
class
ImagingOpException
The
ImagingOpException
is thrown if one of the
BufferedImageOp
or
RasterOp
filter methods cannot
 process the image.
class
RasterFormatException
The
RasterFormatException
is thrown if there is
 invalid layout information in the
Raster
.
Uses of
Serializable
in
java.awt.image.renderable
Classes in
java.awt.image.renderable
that implement
Serializable
Modifier and Type
Class
Description
class
ParameterBlock
A
ParameterBlock
encapsulates all the information about sources and
 parameters (Objects) required by a RenderableImageOp, or other
 classes that process images.
Uses of
Serializable
in
java.awt.print
Classes in
java.awt.print
that implement
Serializable
Modifier and Type
Class
Description
class
PrinterAbortException
The
PrinterAbortException
class is a subclass of
PrinterException
and is used to indicate that a user
 or application has terminated the print job while it was in
 the process of printing.
class
PrinterException
The
PrinterException
class and its subclasses are used
 to indicate that an exceptional condition has occurred in the print
 system.
class
PrinterIOException
The
PrinterIOException
class is a subclass of
PrinterException
and is used to indicate that an IO error
 of some sort has occurred while printing.
Uses of
Serializable
in
java.beans
Classes in
java.beans
that implement
Serializable
Modifier and Type
Class
Description
class
IndexedPropertyChangeEvent
An "IndexedPropertyChange" event gets delivered whenever a component that
 conforms to the JavaBeans specification (a "bean") changes a bound
 indexed property.
class
IntrospectionException
Thrown when an exception happens during Introspection.
class
PropertyChangeEvent
A "PropertyChange" event gets delivered whenever a bean changes a "bound"
 or "constrained" property.
class
PropertyChangeSupport
This is a utility class that can be used by beans that support bound
 properties.
class
PropertyVetoException
A PropertyVetoException is thrown when a proposed change to a
 property represents an unacceptable value.
class
VetoableChangeSupport
This is a utility class that can be used by beans that support constrained
 properties.
Uses of
Serializable
in
java.beans.beancontext
Classes in
java.beans.beancontext
that implement
Serializable
Modifier and Type
Class
Description
class
BeanContextChildSupport
This is a general support class to provide support for implementing the
 BeanContextChild protocol.
class
BeanContextEvent
BeanContextEvent
is the abstract root event class
 for all events emitted
 from, and pertaining to the semantics of, a
BeanContext
.
class
BeanContextMembershipEvent
A
BeanContextMembershipEvent
encapsulates
 the list of children added to, or removed from,
 the membership of a particular
BeanContext
.
class
BeanContextServiceAvailableEvent
This event type is used by the BeanContextServicesListener in order to
 identify the service being registered.
class
BeanContextServiceRevokedEvent
This event type is used by the
BeanContextServiceRevokedListener
in order to
 identify the service being revoked.
class
BeanContextServicesSupport
This helper class provides a utility implementation of the
 java.beans.beancontext.BeanContextServices interface.
protected class
BeanContextServicesSupport.BCSSChild
A protected nested class containing per-child information
 in the
children
hashtable.
protected static class
BeanContextServicesSupport.BCSSServiceProvider
subclasses may subclass this nested class to add behaviors for
 each BeanContextServicesProvider.
class
BeanContextSupport
This helper class provides a utility implementation of the
 java.beans.beancontext.BeanContext interface.
protected class
BeanContextSupport.BCSChild
A protected nested class containing per-child information
 in the
children
hashtable.
Methods in
java.beans.beancontext
that return
Serializable
Modifier and Type
Method
Description
protected static final
Serializable
BeanContextSupport.
getChildSerializable
(
Object
child)
Gets the Serializable (if any) associated with the specified Child
Uses of
Serializable
in
java.io
Subinterfaces of
Serializable
in
java.io
Modifier and Type
Interface
Description
interface
Externalizable
Only the identity of the class of an Externalizable instance is
 written in the serialization stream and it is the responsibility
 of the class to save and restore the contents of its instances.
Classes in
java.io
that implement
Serializable
Modifier and Type
Class
Description
class
CharConversionException
Base class for character conversion exceptions.
class
EOFException
Signals that an end of file or end of stream has been reached
 unexpectedly during input.
class
File
An abstract representation of file and directory pathnames.
class
FileNotFoundException
Signals that an attempt to open the file denoted by a specified pathname
 has failed.
final class
FilePermission
This class represents access to a file or directory.
class
InterruptedIOException
Signals that an I/O operation has been interrupted.
class
InvalidClassException
Thrown when the Serialization runtime detects one of the following
 problems with a Class.
class
InvalidObjectException
Indicates that one or more deserialized objects failed validation
 tests.
class
IOError
Thrown when a serious I/O error has occurred.
class
IOException
Signals that an I/O exception of some sort has occurred.
class
NotActiveException
Thrown when serialization or deserialization is not active.
class
NotSerializableException
Thrown when an instance is required to have a Serializable interface.
static enum
ObjectInputFilter.Status
The status of a check on the class, array length, number of references,
 depth, and stream size.
final class
ObjectStreamClass
Serialization's descriptor for classes.
class
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
class
OptionalDataException
Exception indicating the failure of an object read operation due to
 unread primitive data, or the end of data belonging to a serialized
 object in the stream.
final class
SerializablePermission
This class is for Serializable permissions.
class
StreamCorruptedException
Thrown when control information that was read from an object stream
 violates internal consistency checks.
class
SyncFailedException
Signals that a sync operation has failed.
class
UncheckedIOException
Wraps an
IOException
with an unchecked exception.
class
UnsupportedEncodingException
The Character Encoding is not supported.
class
UTFDataFormatException
Signals that a malformed string in
modified UTF-8
format has been read in a data
 input stream or by any class that implements the data input
 interface.
class
WriteAbortedException
Signals that one of the ObjectStreamExceptions was thrown during a
 write operation.
Uses of
Serializable
in
java.lang
Classes in
java.lang
that implement
Serializable
Modifier and Type
Class
Description
class
AbstractMethodError
Thrown when an application tries to call an abstract method.
class
ArithmeticException
Thrown when an exceptional arithmetic condition has occurred.
class
ArrayIndexOutOfBoundsException
Thrown to indicate that an array has been accessed with an illegal index.
class
ArrayStoreException
Thrown to indicate that an attempt has been made to store the
 wrong type of object into an array of objects.
class
AssertionError
Thrown to indicate that an assertion has failed.
final class
Boolean
The Boolean class wraps a value of the primitive type
boolean
in an object.
class
BootstrapMethodError
Thrown to indicate that an
invokedynamic
instruction or a dynamic
 constant failed to resolve its bootstrap method and arguments,
 or for
invokedynamic
instruction the bootstrap method has failed to
 provide a
call site
with a
target
of the correct
method type
,
 or for a dynamic constant the bootstrap method has failed to provide a
 constant value of the required type.
final class
Byte
The
Byte
class wraps a value of primitive type
byte
in an object.
final class
Character
The
Character
class wraps a value of the primitive
 type
char
in an object.
static enum
Character.UnicodeScript
A family of character subsets representing the character scripts
 defined in the
Unicode Standard Annex #24: Script Names
.
final class
Class
<T>
Instances of the class
Class
represent classes and
 interfaces in a running Java application.
class
ClassCastException
Thrown to indicate that the code has attempted to cast an object
 to a subclass of which it is not an instance.
class
ClassCircularityError
Thrown when the Java Virtual Machine detects a circularity in the
 superclass hierarchy of a class being loaded.
class
ClassFormatError
Thrown when the Java Virtual Machine attempts to read a class
 file and determines that the file is malformed or otherwise cannot
 be interpreted as a class file.
class
ClassNotFoundException
Thrown when an application tries to load in a class through its
 string name using:
 
 The
forName
method in class
Class
.
class
CloneNotSupportedException
Thrown to indicate that the
clone
method in class
Object
has been called to clone an object, but that
 the object's class does not implement the
Cloneable
interface.
final class
Double
The
Double
class wraps a value of the primitive type
double
in an object.
class
Enum
<E extends
Enum
<E>>
This is the common base class of all Java language enumeration classes.
class
EnumConstantNotPresentException
Thrown when an application tries to access an enum constant by name
 and the enum type contains no constant with the specified name.
class
Error
An
Error
is a subclass of
Throwable
that indicates serious problems that a reasonable application
 should not try to catch.
class
Exception
The class
Exception
and its subclasses are a form of
Throwable
that indicates conditions that a reasonable
 application might want to catch.
class
ExceptionInInitializerError
Signals that an unexpected exception has occurred in a static initializer.
final class
Float
The
Float
class wraps a value of primitive type
float
in an object.
class
IllegalAccessError
Thrown if an application attempts to access or modify a field, or
 to call a method that it does not have access to.
class
IllegalAccessException
An IllegalAccessException is thrown when an application tries
 to reflectively create an instance (other than an array),
 set or get a field, or invoke a method, but the currently
 executing method does not have access to the definition of
 the specified class, field, method or constructor.
class
IllegalArgumentException
Thrown to indicate that a method has been passed an illegal or
 inappropriate argument.
class
IllegalCallerException
Thrown to indicate that a method has been called by an inappropriate caller.
class
IllegalMonitorStateException
Thrown to indicate that a thread has attempted to wait on an
 object's monitor or to notify other threads waiting on an object's
 monitor without owning the specified monitor.
class
IllegalStateException
Signals that a method has been invoked at an illegal or
 inappropriate time.
class
IllegalThreadStateException
Thrown to indicate that a thread is not in an appropriate state
 for the requested operation.
class
IncompatibleClassChangeError
Thrown when an incompatible class change has occurred to some class
 definition.
class
IndexOutOfBoundsException
Thrown to indicate that an index of some sort (such as to an array, to a
 string, or to a vector) is out of range.
class
InstantiationError
Thrown when an application tries to use the Java
new
construct to instantiate an abstract class or an interface.
class
InstantiationException
Thrown when an application tries to create an instance of a class
 using the
newInstance
method in class
Class
, but the specified class object cannot be
 instantiated.
final class
Integer
The
Integer
class wraps a value of the primitive type
int
in an object.
class
InternalError
Thrown to indicate some unexpected internal error has occurred in
 the Java Virtual Machine.
class
InterruptedException
Thrown when a thread is waiting, sleeping, or otherwise occupied,
 and the thread is interrupted, either before or during the activity.
class
LayerInstantiationException
Thrown when creating a
module layer
fails.
class
LinkageError
Subclasses of
LinkageError
indicate that a class has
 some dependency on another class; however, the latter class has
 incompatibly changed after the compilation of the former class.
final class
Long
The
Long
class wraps a value of the primitive type
long
in an object.
final class
MatchException
Thrown to indicate an unexpected failure in pattern matching.
class
NegativeArraySizeException
Thrown if an application tries to create an array with negative size.
class
NoClassDefFoundError
Thrown if the Java Virtual Machine or a
ClassLoader
instance
 tries to load in the definition of a class (as part of a normal method call
 or as part of creating a new instance using the
new
expression)
 and no definition of the class could be found.
class
NoSuchFieldError
Thrown if an application tries to access or modify a specified
 field of an object, and that object no longer has that field.
class
NoSuchFieldException
Signals that the class doesn't have a field of a specified name.
class
NoSuchMethodError
Thrown if an application tries to call a specified method of a
 class (either static or instance), and that class no longer has a
 definition of that method.
class
NoSuchMethodException
Thrown when a particular method cannot be found.
class
NullPointerException
Thrown when an application attempts to use
null
in a
 case where an object is required.
class
Number
The abstract class
Number
is the superclass of platform
 classes representing numeric values that are convertible to the
 primitive types
byte
,
double
,
float
,
int
,
long
, and
short
.
class
NumberFormatException
Thrown to indicate that the application has attempted to convert
 a string to one of the numeric types, but that the string does not
 have the appropriate format.
class
OutOfMemoryError
Thrown when the Java Virtual Machine cannot allocate an object
 because it is out of memory, and no more memory could be made
 available by the garbage collector.
static enum
ProcessBuilder.Redirect.Type
The type of a
ProcessBuilder.Redirect
.
class
ReflectiveOperationException
Common superclass of exceptions thrown by reflective operations in
 core reflection.
class
RuntimeException
RuntimeException
is the superclass of those
 exceptions that can be thrown during the normal operation of the
 Java Virtual Machine.
final class
RuntimePermission
This class is for runtime permissions.
class
SecurityException
Thrown by the security manager to indicate a security violation.
final class
Short
The
Short
class wraps a value of primitive type
short
in an object.
class
StackOverflowError
Thrown when a stack overflow occurs because an application
 recurses too deeply.
final class
StackTraceElement
An element in a stack trace, as returned by
Throwable.getStackTrace()
.
static enum
StackWalker.Option
Stack walker option to configure the
stack frame
information obtained by a
StackWalker
.
final class
String
The
String
class represents character strings.
final class
StringBuffer
A thread-safe, mutable sequence of characters.
final class
StringBuilder
A mutable sequence of characters.
class
StringIndexOutOfBoundsException
Thrown by
String
methods to indicate that an index is either negative
 or greater than the size of the string.
static enum
System.Logger.Level
System
loggers
levels.
static enum
Thread.State
A thread state.
class
ThreadDeath
Deprecated, for removal: This API element is subject to removal in a future version.
Thread.stop()
was originally specified to "stop" a victim
      thread by causing the victim thread to throw a
ThreadDeath
.
class
Throwable
The
Throwable
class is the superclass of all errors and
 exceptions in the Java language.
class
TypeNotPresentException
Thrown when an application tries to access a type using a string
 representing the type's name, but no definition for the type with
 the specified name can be found.
class
UnknownError
Thrown when an unknown but serious exception has occurred in the
 Java Virtual Machine.
class
UnsatisfiedLinkError
Thrown if the Java Virtual Machine cannot find an appropriate
 native-language definition of a method declared
native
.
class
UnsupportedClassVersionError
Thrown when the Java Virtual Machine attempts to read a class
 file and determines that the major and minor version numbers
 in the file are not supported.
class
UnsupportedOperationException
Thrown to indicate that the requested operation is not supported.
class
VerifyError
Thrown when the "verifier" detects that a class file,
 though well formed, contains some sort of internal inconsistency
 or security problem.
class
VirtualMachineError
Thrown to indicate that the Java Virtual Machine is broken or has
 run out of resources necessary for it to continue operating.
final class
WrongThreadException
Thrown to indicate that a method has been called on the wrong thread.
Uses of
Serializable
in
java.lang.annotation
Classes in
java.lang.annotation
that implement
Serializable
Modifier and Type
Class
Description
class
AnnotationFormatError
Thrown when the annotation parser attempts to read an annotation
 from a class file and determines that the annotation is malformed.
class
AnnotationTypeMismatchException
Thrown to indicate that a program has attempted to access an element of
 an annotation whose type has changed after the annotation was compiled
 (or serialized).
enum
ElementType
The constants of this enumerated class provide a simple classification of the
 syntactic locations where annotations may appear in a Java program.
class
IncompleteAnnotationException
Thrown to indicate that a program has attempted to access an element of
 an annotation interface that was added to the annotation interface definition
 after the annotation was compiled (or serialized).
enum
RetentionPolicy
Annotation retention policy.
Uses of
Serializable
in
java.lang.constant
Classes in
java.lang.constant
that implement
Serializable
Modifier and Type
Class
Description
static enum
DirectMethodHandleDesc.Kind
Kinds of method handles that can be described with
DirectMethodHandleDesc
.
Uses of
Serializable
in
java.lang.instrument
Classes in
java.lang.instrument
that implement
Serializable
Modifier and Type
Class
Description
class
IllegalClassFormatException
Thrown by an implementation of
ClassFileTransformer.transform
when its input parameters are invalid.
class
UnmodifiableClassException
Thrown by an implementation of
Instrumentation.redefineClasses
when one of the specified classes cannot be modified.
class
UnmodifiableModuleException
Thrown to indicate that a module cannot be modified.
Uses of
Serializable
in
java.lang.invoke
Classes in
java.lang.invoke
that implement
Serializable
Modifier and Type
Class
Description
class
LambdaConversionException
LambdaConversionException
static enum
MethodHandles.Lookup.ClassOption
The set of class options that specify whether a hidden class created by
Lookup::defineHiddenClass
method is dynamically added as a new member
 to the nest of a lookup class and/or whether a hidden class has
 a strong relationship with the class loader marked as its defining loader.
final class
MethodType
A method type represents the arguments and return type accepted and
 returned by a method handle, or the arguments and return type passed
 and expected  by a method handle caller.
final class
SerializedLambda
Serialized form of a lambda expression.
class
StringConcatException
StringConcatException is thrown by
StringConcatFactory
when linkage
 invariants are violated.
static enum
VarHandle.AccessMode
The set of access modes that specify how a variable, referenced by a
 VarHandle, is accessed.
class
WrongMethodTypeException
Thrown to indicate that code has attempted to call a method handle
 via the wrong method type.
Uses of
Serializable
in
java.lang.management
Classes in
java.lang.management
that implement
Serializable
Modifier and Type
Class
Description
final class
ManagementPermission
The permission which the SecurityManager will check when code
 that is running with a SecurityManager calls methods defined
 in the management interface for the Java platform.
enum
MemoryType
Types of
memory pools
.
Uses of
Serializable
in
java.lang.module
Classes in
java.lang.module
that implement
Serializable
Modifier and Type
Class
Description
class
FindException
Thrown by a
ModuleFinder
when an error occurs finding
 a module.
class
InvalidModuleDescriptorException
Thrown when reading a module descriptor and the module descriptor is found
 to be malformed or otherwise cannot be interpreted as a module descriptor.
static enum
ModuleDescriptor.Exports.Modifier
A modifier on an exported package.
static enum
ModuleDescriptor.Modifier
A modifier on a module.
static enum
ModuleDescriptor.Opens.Modifier
A modifier on an open package.
static enum
ModuleDescriptor.Requires.Modifier
A modifier on a module dependence.
class
ResolutionException
Thrown when resolving a set of modules, or resolving a set of modules with
 service binding, fails.
Uses of
Serializable
in
java.lang.reflect
Classes in
java.lang.reflect
that implement
Serializable
Modifier and Type
Class
Description
enum
AccessFlag
Represents a JVM access or module-related flag on a runtime member,
 such as a
class
,
field
, or
method
.
static enum
AccessFlag.Location
A location within a class file where flags can be applied.
enum
ClassFileFormatVersion
Class file format versions of the Java virtual machine.
class
GenericSignatureFormatError
Thrown when a syntactically malformed signature attribute is
 encountered by a reflective method that needs to interpret the generic
 signature information for a class or interface, method or constructor.
class
InaccessibleObjectException
Thrown when Java language access checks cannot be suppressed.
class
InvocationTargetException
InvocationTargetException is a checked exception that wraps
 an exception thrown by an invoked method or constructor.
class
MalformedParameterizedTypeException
Thrown when a semantically malformed parameterized type is
 encountered by a reflective method that needs to instantiate it.
class
MalformedParametersException
Thrown when
the
 java.lang.reflect package
attempts to read method parameters from
 a class file and determines that one or more parameters are
 malformed.
class
Proxy
Proxy
provides static methods for creating objects that act like instances
 of interfaces but allow for customized method invocation.
final class
ReflectPermission
The Permission class for reflective operations.
class
UndeclaredThrowableException
Thrown by a method invocation on a proxy instance if its invocation
 handler's
invoke
method throws a
 checked exception (a
Throwable
that is not assignable
 to
RuntimeException
or
Error
) that
 is not assignable to any of the exception types declared in the
throws
clause of the method that was invoked on the
 proxy instance and dispatched to the invocation handler.
Uses of
Serializable
in
java.math
Classes in
java.math
that implement
Serializable
Modifier and Type
Class
Description
class
BigDecimal
Immutable, arbitrary-precision signed decimal numbers.
class
BigInteger
Immutable arbitrary-precision integers.
final class
MathContext
Immutable objects which encapsulate the context settings which
 describe certain rules for numerical operators, such as those
 implemented by the
BigDecimal
class.
enum
RoundingMode
Specifies a
rounding policy
for numerical operations capable
 of discarding precision.
Uses of
Serializable
in
java.net
Classes in
java.net
that implement
Serializable
Modifier and Type
Class
Description
static enum
Authenticator.RequestorType
The type of the entity requesting authentication.
class
BindException
Signals that an error occurred while attempting to bind a
 socket to a local address and port.
class
ConnectException
Signals that an error occurred while attempting to connect a
 socket to a remote address and port.
class
HttpRetryException
Thrown to indicate that a HTTP request needs to be retried
 but cannot be retried automatically, due to streaming mode
 being enabled.
final class
Inet4Address
This class represents an Internet Protocol version 4 (IPv4) address.
final class
Inet6Address
This class represents an Internet Protocol version 6 (IPv6) address.
class
InetAddress
This class represents an Internet Protocol (IP) address.
class
InetSocketAddress
This class implements an IP Socket Address (IP address + port number)
 It can also be a pair (hostname + port number), in which case an attempt
 will be made to resolve the hostname.
class
MalformedURLException
Thrown to indicate that a malformed URL has occurred.
final class
NetPermission
This class is for various network permissions.
class
NoRouteToHostException
Signals that an error occurred while attempting to connect a
 socket to a remote address and port.
class
PortUnreachableException
Signals that an ICMP Port Unreachable message has been
 received on a connected datagram.
class
ProtocolException
Thrown to indicate that there is an error in the underlying
 protocol, such as a TCP error.
static enum
Proxy.Type
Represents the proxy type.
class
SocketAddress
This class represents a Socket Address with no protocol attachment.
class
SocketException
Thrown to indicate that there is an error creating or accessing a Socket.
final class
SocketPermission
This class represents access to a network via sockets.
class
SocketTimeoutException
Signals that a timeout has occurred on a socket read or accept.
enum
StandardProtocolFamily
Defines the standard families of communication protocols.
final class
UnixDomainSocketAddress
A Unix domain socket address.
class
UnknownHostException
Thrown to indicate that the IP address of a host could not be determined.
class
UnknownServiceException
Thrown to indicate that an unknown service exception has
 occurred.
final class
URI
Represents a Uniform Resource Identifier (URI) reference.
class
URISyntaxException
Checked exception thrown to indicate that a string could not be parsed as a
 URI reference.
final class
URL
Class
URL
represents a Uniform Resource
 Locator, a pointer to a "resource" on the World
 Wide Web.
final class
URLPermission
Represents permission to access a resource or set of resources defined by a
 given url, and for a given set of user-settable request methods
 and request headers.
Uses of
Serializable
in
java.net.http
Classes in
java.net.http
that implement
Serializable
Modifier and Type
Class
Description
static enum
HttpClient.Redirect
Defines the automatic redirection policy.
static enum
HttpClient.Version
The HTTP protocol version.
class
HttpConnectTimeoutException
Thrown when a connection, over which an
HttpRequest
is intended to be
 sent, is not successfully established within a specified time period.
class
HttpTimeoutException
Thrown when a response is not received within a specified time period.
final class
WebSocketHandshakeException
Thrown when the opening handshake has failed.
Uses of
Serializable
in
java.nio
Classes in
java.nio
that implement
Serializable
Modifier and Type
Class
Description
class
BufferOverflowException
Unchecked exception thrown when a relative
put
operation reaches
 the target buffer's limit.
class
BufferUnderflowException
Unchecked exception thrown when a relative
get
operation reaches
 the source buffer's limit.
class
InvalidMarkException
Unchecked exception thrown when an attempt is made to reset a buffer
 when its mark is not defined.
class
ReadOnlyBufferException
Unchecked exception thrown when a content-mutation method such as
put
or
compact
is invoked upon a read-only buffer.
Uses of
Serializable
in
java.nio.channels
Classes in
java.nio.channels
that implement
Serializable
Modifier and Type
Class
Description
class
AcceptPendingException
Unchecked exception thrown when an attempt is made to initiate an accept
 operation on a channel and a previous accept operation has not completed.
class
AlreadyBoundException
Unchecked exception thrown when an attempt is made to bind the socket a
 network oriented channel that is already bound.
class
AlreadyConnectedException
Unchecked exception thrown when an attempt is made to connect a
SocketChannel
that is already connected.
class
AsynchronousCloseException
Checked exception received by a thread when another thread closes the
 channel or the part of the channel upon which it is blocked in an I/O
 operation.
class
CancelledKeyException
Unchecked exception thrown when an attempt is made to use
 a selection key that is no longer valid.
class
ClosedByInterruptException
Checked exception received by a thread when another thread interrupts it
 while it is blocked in an I/O operation upon a channel.
class
ClosedChannelException
Checked exception thrown when an attempt is made to invoke or complete an
 I/O operation upon channel that is closed, or at least closed to that
 operation.
class
ClosedSelectorException
Unchecked exception thrown when an attempt is made to invoke an I/O
 operation upon a closed selector.
class
ConnectionPendingException
Unchecked exception thrown when an attempt is made to connect a
SocketChannel
for which a non-blocking connection operation is already in
 progress.
class
FileLockInterruptionException
Checked exception received by a thread when another thread interrupts it
 while it is waiting to acquire a file lock.
class
IllegalBlockingModeException
Unchecked exception thrown when a blocking-mode-specific operation
 is invoked upon a channel in the incorrect blocking mode.
class
IllegalChannelGroupException
Unchecked exception thrown when an attempt is made to open a channel
 in a group that was not created by the same provider.
class
IllegalSelectorException
Unchecked exception thrown when an attempt is made to register a channel
 with a selector that was not created by the provider that created the
 channel.
class
InterruptedByTimeoutException
Checked exception received by a thread when a timeout elapses before an
 asynchronous operation completes.
class
NoConnectionPendingException
Unchecked exception thrown when the
finishConnect
method of a
SocketChannel
is invoked without first
 successfully invoking its
connect
method.
class
NonReadableChannelException
Unchecked exception thrown when an attempt is made to read
 from a channel that was not originally opened for reading.
class
NonWritableChannelException
Unchecked exception thrown when an attempt is made to write
 to a channel that was not originally opened for writing.
class
NotYetBoundException
Unchecked exception thrown when an attempt is made to invoke an I/O
 operation upon a server socket channel that is not yet bound.
class
NotYetConnectedException
Unchecked exception thrown when an attempt is made to invoke an I/O
 operation upon a socket channel that is not yet connected.
class
OverlappingFileLockException
Unchecked exception thrown when an attempt is made to acquire a lock on a
 region of a file that overlaps a region already locked by the same Java
 virtual machine, or when another thread is already waiting to lock an
 overlapping region of the same file.
class
ReadPendingException
Unchecked exception thrown when an attempt is made to read from an
 asynchronous socket channel and a previous read has not completed.
class
ShutdownChannelGroupException
Unchecked exception thrown when an attempt is made to construct a channel in 
 a group that is shutdown or the completion handler for an I/O operation 
 cannot be invoked because the channel group has terminated.
class
UnresolvedAddressException
Unchecked exception thrown when an attempt is made to invoke a network
 operation upon an unresolved socket address.
class
UnsupportedAddressTypeException
Unchecked exception thrown when an attempt is made to bind or connect
 to a socket address of a type that is not supported.
class
WritePendingException
Unchecked exception thrown when an attempt is made to write to an
 asynchronous socket channel and a previous write has not completed.
Uses of
Serializable
in
java.nio.charset
Classes in
java.nio.charset
that implement
Serializable
Modifier and Type
Class
Description
class
CharacterCodingException
Checked exception thrown when a character encoding
 or decoding error occurs.
class
CoderMalfunctionError
Error thrown when the
decodeLoop
method of
 a
CharsetDecoder
, or the
encodeLoop
method of a
CharsetEncoder
, throws an unexpected
 exception.
class
IllegalCharsetNameException
Unchecked exception thrown when a string that is not a
legal charset name
is used as such.
class
MalformedInputException
Checked exception thrown when an input byte sequence is not legal for given
 charset, or an input character sequence is not a legal sixteen-bit Unicode
 sequence.
class
UnmappableCharacterException
Checked exception thrown when an input character (or byte) sequence
 is valid but cannot be mapped to an output byte (or character)
 sequence.
class
UnsupportedCharsetException
Unchecked exception thrown when no support is available
 for a requested charset.
Uses of
Serializable
in
java.nio.file
Classes in
java.nio.file
that implement
Serializable
Modifier and Type
Class
Description
class
AccessDeniedException
Checked exception thrown when a file system operation is denied, typically
 due to a file permission or other access check.
enum
AccessMode
Defines access modes used to test the accessibility of a file.
class
AtomicMoveNotSupportedException
Checked exception thrown when a file cannot be moved as an atomic file system
 operation.
class
ClosedDirectoryStreamException
Unchecked exception thrown when an attempt is made to invoke an operation on
 a directory stream that is closed.
class
ClosedFileSystemException
Unchecked exception thrown when an attempt is made to invoke an operation on
 a file and the file system is closed.
class
ClosedWatchServiceException
Unchecked exception thrown when an attempt is made to invoke an operation on
 a watch service that is closed.
final class
DirectoryIteratorException
Runtime exception thrown if an I/O error is encountered when iterating over
 the entries in a directory.
class
DirectoryNotEmptyException
Checked exception thrown when a file system operation fails because a
 directory is not empty.
class
FileAlreadyExistsException
Checked exception thrown when an attempt is made to create a file or
 directory and a file of that name already exists.
class
FileSystemAlreadyExistsException
Runtime exception thrown when an attempt is made to create a file system that
 already exists.
class
FileSystemException
Thrown when a file system operation fails on one or two files.
class
FileSystemLoopException
Checked exception thrown when a file system loop, or cycle, is encountered.
class
FileSystemNotFoundException
Runtime exception thrown when a file system cannot be found.
enum
FileVisitOption
Defines the file tree traversal options.
enum
FileVisitResult
The result type of a
FileVisitor
.
class
InvalidPathException
Unchecked exception thrown when path string cannot be converted into a
Path
because the path string contains invalid characters, or
 the path string is invalid for other file system specific reasons.
enum
LinkOption
Defines the options as to how symbolic links are handled.
final class
LinkPermission
The
Permission
class for link creation operations.
class
NoSuchFileException
Checked exception thrown when an attempt is made to access a file that does
 not exist.
class
NotDirectoryException
Checked exception thrown when a file system operation, intended for a
 directory, fails because the file is not a directory.
class
NotLinkException
Checked exception thrown when a file system operation fails because a file
 is not a symbolic link.
class
ProviderMismatchException
Unchecked exception thrown when an attempt is made to invoke a method on an
 object created by one file system provider with a parameter created by a
 different file system provider.
class
ProviderNotFoundException
Runtime exception thrown when a provider of the required type cannot be found.
class
ReadOnlyFileSystemException
Unchecked exception thrown when an attempt is made to update an object
 associated with a
read-only
FileSystem
.
enum
StandardCopyOption
Defines the standard copy options.
enum
StandardOpenOption
Defines the standard open options.
Uses of
Serializable
in
java.nio.file.attribute
Classes in
java.nio.file.attribute
that implement
Serializable
Modifier and Type
Class
Description
enum
AclEntryFlag
Defines the flags for used by the flags component of an ACL
entry
.
enum
AclEntryPermission
Defines the permissions for use with the permissions component of an ACL
entry
.
enum
AclEntryType
A typesafe enumeration of the access control entry types.
enum
PosixFilePermission
Defines the bits for use with the
permissions
attribute.
class
UserPrincipalNotFoundException
Checked exception thrown when a lookup of
UserPrincipal
fails because
 the principal does not exist.
Uses of
Serializable
in
java.rmi
Classes in
java.rmi
that implement
Serializable
Modifier and Type
Class
Description
class
AccessException
An
AccessException
is thrown by certain methods of the
java.rmi.Naming
class (specifically
bind
,
rebind
, and
unbind
) to
 indicate that the caller does not have permission to perform the action
 requested by the method call.
class
AlreadyBoundException
An
AlreadyBoundException
is thrown if an attempt
 is made to bind an object to a name that already
 has an associated binding in the registry.
class
ConnectException
A
ConnectException
is thrown if a connection is refused
 to the remote host for a remote method call.
class
ConnectIOException
A
ConnectIOException
is thrown if an
IOException
occurs while making a connection
 to the remote host for a remote method call.
class
MarshalException
A
MarshalException
is thrown if a
java.io.IOException
occurs while marshalling the remote call
 header, arguments or return value for a remote method call.
final class
MarshalledObject
<T>
A
MarshalledObject
contains a byte stream with the serialized
 representation of an object given to its constructor.
class
NoSuchObjectException
A
NoSuchObjectException
is thrown if an attempt is made to
 invoke a method on an object that no longer exists in the remote virtual
 machine.
class
NotBoundException
A
NotBoundException
is thrown if an attempt
 is made to lookup or unbind in the registry a name that has
 no associated binding.
class
RemoteException
A
RemoteException
is the common superclass for a number of
 communication-related exceptions that may occur during the execution of a
 remote method call.
class
RMISecurityException
Deprecated.
Use
SecurityException
instead.
class
ServerError
A
ServerError
is thrown as a result of a remote method
 invocation when an
Error
is thrown while processing
 the invocation on the server, either while unmarshalling the arguments,
 executing the remote method itself, or marshalling the return value.
class
ServerException
A
ServerException
is thrown as a result of a remote method
 invocation when a
RemoteException
is thrown while processing
 the invocation on the server, either while unmarshalling the arguments or
 executing the remote method itself.
class
ServerRuntimeException
Deprecated.
no replacement
class
StubNotFoundException
A
StubNotFoundException
is thrown if a valid stub class
 could not be found for a remote object when it is exported.
class
UnexpectedException
An
UnexpectedException
is thrown if the client of a
 remote method call receives, as a result of the call, a checked
 exception that is not among the checked exception types declared in the
throws
clause of the method in the remote interface.
class
UnknownHostException
An
UnknownHostException
is thrown if a
java.net.UnknownHostException
occurs while creating
 a connection to the remote host for a remote method call.
class
UnmarshalException
An
UnmarshalException
can be thrown while unmarshalling the
 parameters or results of a remote method call if any of the following
 conditions occur:
 
  if an exception occurs while unmarshalling the call header
  if the protocol for the return value is invalid
  if a
java.io.IOException
occurs unmarshalling
 parameters (on the server side) or the return value (on the client side).
Uses of
Serializable
in
java.rmi.dgc
Classes in
java.rmi.dgc
that implement
Serializable
Modifier and Type
Class
Description
final class
Lease
A lease contains a unique VM identifier and a lease duration.
final class
VMID
A VMID is a identifier that is unique across all Java virtual
 machines.
Uses of
Serializable
in
java.rmi.server
Subinterfaces of
Serializable
in
java.rmi.server
Modifier and Type
Interface
Description
interface
RemoteRef
RemoteRef
represents the handle for a remote object.
interface
ServerRef
Deprecated.
No replacement.
Classes in
java.rmi.server
that implement
Serializable
Modifier and Type
Class
Description
class
ExportException
An
ExportException
is a
RemoteException
thrown if an attempt to export a remote object fails.
final class
ObjID
An
ObjID
is used to identify a remote object exported
 to an RMI runtime.
class
RemoteObject
The
RemoteObject
class implements the
java.lang.Object
behavior for remote objects.
class
RemoteObjectInvocationHandler
An implementation of the
InvocationHandler
interface for
 use with Java Remote Method Invocation (Java RMI).
class
RemoteServer
The
RemoteServer
class is the common superclass to server
 implementations and provides the framework to support a wide range
 of remote reference semantics.
class
RemoteStub
Deprecated.
Statically generated stubs are deprecated, since
 stubs are generated dynamically.
class
ServerCloneException
A
ServerCloneException
is thrown if a remote exception occurs
 during the cloning of a
UnicastRemoteObject
.
class
ServerNotActiveException
An
ServerNotActiveException
is an
Exception
thrown during a call to
RemoteServer.getClientHost
if
 the getClientHost method is called outside of servicing a remote
 method call.
class
SkeletonMismatchException
Deprecated.
no replacement.
class
SkeletonNotFoundException
Deprecated.
no replacement.
class
SocketSecurityException
Deprecated.
This class is obsolete.
final class
UID
A
UID
represents an identifier that is unique over time
 with respect to the host it is generated on, or one of 2
16
"well-known" identifiers.
class
UnicastRemoteObject
Used for exporting a remote object with JRMP and obtaining a stub
 that communicates to the remote object.
Uses of
Serializable
in
java.security
Subinterfaces of
Serializable
in
java.security
Modifier and Type
Interface
Description
interface
Key
The
Key
interface is the top-level interface for all keys.
interface
PrivateKey
A private key.
interface
PublicKey
A public key.
Classes in
java.security
that implement
Serializable
Modifier and Type
Class
Description
class
AccessControlException
Deprecated, for removal: This API element is subject to removal in a future version.
This class is only useful in conjunction with
the Security Manager
, which is deprecated
       and subject to removal in a future release.
final class
AllPermission
The
AllPermission
is a permission that implies all other permissions.
class
AuthProvider
This class defines login and logout methods for a provider.
class
BasicPermission
The
BasicPermission
class extends the
Permission
class, and
 can be used as the base class for permissions that want to
 follow the same naming convention as
BasicPermission
.
final class
CodeSigner
This class encapsulates information about a code signer.
class
CodeSource
This class extends the concept of a codebase to
 encapsulate not only the location (URL) but also the certificate chains
 that were used to verify signed code originating from that location.
enum
CryptoPrimitive
An enumeration of cryptographic primitives.
class
DigestException
This is the generic Message Digest exception.
static enum
DrbgParameters.Capability
The reseedable and prediction resistance capabilities of a DRBG.
class
GeneralSecurityException
The
GeneralSecurityException
class is a generic
 security exception class that provides type safety for all the
 security-related exception classes that extend from it.
class
GuardedObject
A GuardedObject is an object that is used to protect access to
 another object.
class
Identity
Deprecated, for removal: This API element is subject to removal in a future version.
This class is deprecated and subject to removal in a future
     version of Java SE.
class
IdentityScope
Deprecated, for removal: This API element is subject to removal in a future version.
This class is deprecated and subject to removal in a future
     version of Java SE.
class
InvalidAlgorithmParameterException
This is the exception for invalid or inappropriate algorithm parameters.
class
InvalidKeyException
This is the exception for invalid Keys (invalid encoding, wrong
 length, uninitialized, etc.).
class
InvalidParameterException
This exception, designed for use by the JCA/JCE engine classes,
 is thrown when an invalid parameter is passed
 to a method.
class
KeyException
This is the basic key exception.
class
KeyManagementException
This is the general key management exception for all operations
 dealing with key management.
final class
KeyPair
This class is a simple holder for a key pair (a public key and a
 private key).
class
KeyRep
Standardized representation for serialized Key objects.
static enum
KeyRep.Type
Key type.
class
KeyStoreException
This is the generic KeyStore exception.
class
NoSuchAlgorithmException
This exception is thrown when a particular cryptographic algorithm is
 requested but is not available in the environment.
class
NoSuchProviderException
This exception is thrown when a particular security provider is
 requested but is not available in the environment.
class
Permission
Abstract class for representing access to a system resource.
class
PermissionCollection
Abstract class representing a collection of Permission objects.
final class
Permissions
This class represents a heterogeneous collection of permissions.
class
PrivilegedActionException
This exception is thrown by
doPrivileged(PrivilegedExceptionAction)
and
doPrivileged(PrivilegedExceptionAction,
 AccessControlContext context)
to indicate
 that the action being performed threw a checked exception.
class
Provider
This class represents a "provider" for the
 Java Security API, where a provider implements some or all parts of
 Java Security.
class
ProviderException
A runtime exception for
Provider
exceptions (such as
 misconfiguration errors or unrecoverable internal errors),
 which may be subclassed by Providers to
 throw specialized, provider-specific runtime errors.
class
SecureRandom
This class provides a cryptographically strong random number
 generator (RNG).
class
SecureRandomSpi
This class defines the
Service Provider Interface
(
SPI
)
 for the
SecureRandom
class.
final class
SecurityPermission
This class is for security permissions.
class
SignatureException
This is the generic Signature exception.
final class
SignedObject
SignedObject
is a class for the purpose of creating authentic
 runtime objects whose integrity cannot be compromised without being
 detected.
class
Signer
Deprecated, for removal: This API element is subject to removal in a future version.
This class is deprecated and subject to removal in a future
     version of Java SE.
final class
Timestamp
This class encapsulates information about a signed timestamp.
class
UnrecoverableEntryException
This exception is thrown if an entry in the keystore cannot be recovered.
class
UnrecoverableKeyException
This exception is thrown if a key in the keystore cannot be recovered.
final class
UnresolvedPermission
The
UnresolvedPermission
class is used to hold Permissions that
 were "unresolved" when the Policy was initialized.
Constructors in
java.security
with parameters of type
Serializable
Modifier
Constructor
Description
SignedObject
(
Serializable
object,
PrivateKey
signingKey,
Signature
signingEngine)
Constructs a
SignedObject
from any Serializable object.
Uses of
Serializable
in
java.security.cert
Subinterfaces of
Serializable
in
java.security.cert
Modifier and Type
Interface
Description
static interface
CertPathValidatorException.Reason
The reason the validation algorithm failed.
Classes in
java.security.cert
that implement
Serializable
Modifier and Type
Class
Description
class
Certificate
Abstract class for managing a variety of identity certificates.
protected static class
Certificate.CertificateRep
Alternate
Certificate
class for serialization.
class
CertificateEncodingException
Certificate Encoding Exception.
class
CertificateException
This exception indicates one of a variety of certificate problems.
class
CertificateExpiredException
Certificate Expired Exception.
class
CertificateNotYetValidException
Certificate is not yet valid exception.
class
CertificateParsingException
Certificate Parsing Exception.
class
CertificateRevokedException
An exception that indicates an X.509 certificate is revoked.
class
CertPath
An immutable sequence of certificates (a certification path).
protected static class
CertPath.CertPathRep
Alternate
CertPath
class for serialization.
class
CertPathBuilderException
An exception indicating one of a variety of problems encountered when
 building a certification path with a
CertPathBuilder
.
class
CertPathValidatorException
An exception indicating one of a variety of problems encountered when
 validating a certification path.
static enum
CertPathValidatorException.BasicReason
The BasicReason enumerates the potential reasons that a certification
 path of any type may be invalid.
class
CertStoreException
An exception indicating one of a variety of problems retrieving
 certificates and CRLs from a
CertStore
.
class
CRLException
CRL (Certificate Revocation List) Exception.
enum
CRLReason
The CRLReason enumeration specifies the reason that a certificate
 is revoked, as defined in
RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL
 Profile
.
enum
PKIXReason
The
PKIXReason
enumerates the potential PKIX-specific reasons
 that an X.509 certification path may be invalid according to the PKIX
 (RFC 5280) standard.
static enum
PKIXRevocationChecker.Option
Various revocation options that can be specified for the revocation
 checking mechanism.
class
X509Certificate
Abstract class for X.509 certificates.
Uses of
Serializable
in
java.security.interfaces
Subinterfaces of
Serializable
in
java.security.interfaces
Modifier and Type
Interface
Description
interface
DSAPrivateKey
The standard interface to a DSA private key.
interface
DSAPublicKey
The interface to a DSA public key.
interface
ECPrivateKey
The interface to an elliptic curve (EC) private key.
interface
ECPublicKey
The interface to an elliptic curve (EC) public key.
interface
EdECPrivateKey
An interface for an elliptic curve private key as defined by
RFC 8032: Edwards-Curve
 Digital Signature Algorithm (EdDSA)
.
interface
EdECPublicKey
An interface for an elliptic curve public key as defined by
RFC 8032: Edwards-Curve
 Digital Signature Algorithm (EdDSA)
.
interface
RSAMultiPrimePrivateCrtKey
The interface to an RSA multi-prime private key, as defined in the
PKCS#1 v2.2
standard,
 using the
Chinese Remainder Theorem
(CRT) information values.
interface
RSAPrivateCrtKey
The interface to an RSA private key, as defined in the
PKCS#1 v2.2
standard,
 using the
Chinese Remainder Theorem
(CRT) information values.
interface
RSAPrivateKey
The interface to an RSA private key.
interface
RSAPublicKey
The interface to an RSA public key.
interface
XECPrivateKey
An interface for an elliptic curve private key as defined by RFC 7748.
interface
XECPublicKey
An interface for an elliptic curve public key as defined by RFC 7748.
Uses of
Serializable
in
java.security.spec
Classes in
java.security.spec
that implement
Serializable
Modifier and Type
Class
Description
class
InvalidKeySpecException
This is the exception for invalid key specifications.
class
InvalidParameterSpecException
This is the exception for invalid parameter specifications.
Uses of
Serializable
in
java.sql
Classes in
java.sql
that implement
Serializable
Modifier and Type
Class
Description
class
BatchUpdateException
The subclass of
SQLException
thrown when an error
 occurs during a batch update operation.
enum
ClientInfoStatus
Enumeration for status of the reason that a property could not be set
 via a call to
Connection.setClientInfo
class
DataTruncation
An exception  thrown as a
DataTruncation
exception
 (on writes) or reported as a
DataTruncation
warning (on reads)
  when a data values is unexpectedly truncated for reasons other than its having
  exceeded
MaxFieldSize
.
class
Date
A thin wrapper around a millisecond value that allows
 JDBC to identify this as an SQL
DATE
value.
enum
JDBCType
Defines the constants that are used to identify generic
 SQL types, called JDBC types.
enum
PseudoColumnUsage
Enumeration for pseudo/hidden column usage.
enum
RowIdLifetime
Enumeration for RowId life-time values.
class
SQLClientInfoException
The subclass of
SQLException
is thrown when one or more client info properties
 could not be set on a
Connection
.
class
SQLDataException
The subclass of
SQLException
thrown when the SQLState class value
 is '
22
', or under vendor-specified conditions.
class
SQLException
An exception that provides information on a database access
 error or other errors.
class
SQLFeatureNotSupportedException
The subclass of
SQLException
thrown when the SQLState class value is '
0A
'
 ( the value is 'zero' A).
class
SQLIntegrityConstraintViolationException
The subclass of
SQLException
thrown when the SQLState class value
 is '
23
', or under vendor-specified conditions.
class
SQLInvalidAuthorizationSpecException
The subclass of
SQLException
thrown when the SQLState class value
 is '
28
', or under vendor-specified conditions.
class
SQLNonTransientConnectionException
The subclass of
SQLException
thrown for the SQLState
 class value '
08
', or under vendor-specified conditions.
class
SQLNonTransientException
The subclass of
SQLException
thrown when an instance where a retry
 of the same operation would fail unless the cause of the
SQLException
is corrected.
final class
SQLPermission
The permission for which the
SecurityManager
will check
 when code that is running an application with a
SecurityManager
enabled, calls the
DriverManager.deregisterDriver
method,
DriverManager.setLogWriter
method,
DriverManager.setLogStream
(deprecated) method,
SyncFactory.setJNDIContext
method,
SyncFactory.setLogger
method,
Connection.setNetworkTimeout
method,
 or the
Connection.abort
method.
class
SQLRecoverableException
The subclass of
SQLException
thrown in situations where a
 previously failed operation might be able to succeed if the application performs
  some recovery steps and retries the entire transaction or in the case of a
 distributed transaction, the transaction branch.
class
SQLSyntaxErrorException
The subclass of
SQLException
thrown when the SQLState class value
 is '
42
', or under vendor-specified conditions.
class
SQLTimeoutException
The subclass of
SQLException
thrown when the timeout specified by
Statement.setQueryTimeout
,
DriverManager.setLoginTimeout
,
DataSource.setLoginTimeout
,
XADataSource.setLoginTimeout
has expired.
class
SQLTransactionRollbackException
The subclass of
SQLException
thrown when the SQLState class value
 is '
40
', or under vendor-specified conditions.
class
SQLTransientConnectionException
The subclass of
SQLException
for the SQLState class
 value '
08
', or under vendor-specified conditions.
class
SQLTransientException
The subclass of
SQLException
is thrown in situations where a
 previously failed operation might be able to succeed when the operation is
 retried without any intervention by application-level functionality.
class
SQLWarning
An exception that provides information on  database access
 warnings.
class
Time
A thin wrapper around the
java.util.Date
class that allows the JDBC
 API to identify this as an SQL
TIME
value.
class
Timestamp
A thin wrapper around
java.util.Date
that allows
 the JDBC API to identify this as an SQL
TIMESTAMP
value.
Uses of
Serializable
in
java.text
Classes in
java.text
that implement
Serializable
Modifier and Type
Class
Description
static class
AttributedCharacterIterator.Attribute
Defines attribute keys that are used to identify text attributes.
class
ChoiceFormat
A
ChoiceFormat
allows you to attach a format to a range of numbers.
final class
CompactNumberFormat
CompactNumberFormat
is a concrete subclass of
NumberFormat
that formats a decimal number in its compact form.
class
DateFormat
DateFormat
is an abstract class for date/time formatting subclasses which
 formats and parses dates or time in a language-independent manner.
static class
DateFormat.Field
Defines constants that are used as attribute keys in the
AttributedCharacterIterator
returned
 from
DateFormat.formatToCharacterIterator
and as
 field identifiers in
FieldPosition
.
class
DateFormatSymbols
DateFormatSymbols
is a public class for encapsulating
 localizable date-time formatting data, such as the names of the
 months, the names of the days of the week, and the time zone data.
class
DecimalFormat
DecimalFormat
is a concrete subclass of
NumberFormat
that formats decimal numbers.
class
DecimalFormatSymbols
This class represents the set of symbols (such as the decimal separator,
 the grouping separator, and so on) needed by
DecimalFormat
to format numbers.
class
Format
Format
is an abstract base class for formatting locale-sensitive
 information such as dates, messages, and numbers.
static class
Format.Field
Defines constants that are used as attribute keys in the
AttributedCharacterIterator
returned
 from
Format.formatToCharacterIterator
and as
 field identifiers in
FieldPosition
.
class
MessageFormat
MessageFormat
provides a means to produce concatenated
 messages in a language-neutral way.
static class
MessageFormat.Field
Defines constants that are used as attribute keys in the
AttributedCharacterIterator
returned
 from
MessageFormat.formatToCharacterIterator
.
static enum
Normalizer.Form
This enum provides constants of the four Unicode normalization forms
 that are described in
Unicode Standard Annex #15 — Unicode Normalization Forms
and two methods to access them.
class
NumberFormat
NumberFormat
is the abstract base class for all number
 formats.
static class
NumberFormat.Field
Defines constants that are used as attribute keys in the
AttributedCharacterIterator
returned
 from
NumberFormat.formatToCharacterIterator
and as
 field identifiers in
FieldPosition
.
static enum
NumberFormat.Style
A number format style.
class
ParseException
Signals that an error has been reached unexpectedly
 while parsing.
class
SimpleDateFormat
SimpleDateFormat
is a concrete class for formatting and
 parsing dates in a locale-sensitive manner.
Uses of
Serializable
in
java.time
Classes in
java.time
that implement
Serializable
Modifier and Type
Class
Description
class
DateTimeException
Exception used to indicate a problem while calculating a date-time.
enum
DayOfWeek
A day-of-week, such as 'Tuesday'.
final class
Duration
A time-based amount of time, such as '34.5 seconds'.
final class
Instant
An instantaneous point on the time-line.
final class
LocalDate
A date without a time-zone in the ISO-8601 calendar system,
 such as
2007-12-03
.
final class
LocalDateTime
A date-time without a time-zone in the ISO-8601 calendar system,
 such as
2007-12-03T10:15:30
.
final class
LocalTime
A time without a time-zone in the ISO-8601 calendar system,
 such as
10:15:30
.
enum
Month
A month-of-year, such as 'July'.
final class
MonthDay
A month-day in the ISO-8601 calendar system, such as
--12-03
.
final class
OffsetDateTime
A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system,
 such as
2007-12-03T10:15:30+01:00
.
final class
OffsetTime
A time with an offset from UTC/Greenwich in the ISO-8601 calendar system,
 such as
10:15:30+01:00
.
final class
Period
A date-based amount of time in the ISO-8601 calendar system,
 such as '2 years, 3 months and 4 days'.
final class
Year
A year in the ISO-8601 calendar system, such as
2007
.
final class
YearMonth
A year-month in the ISO-8601 calendar system, such as
2007-12
.
final class
ZonedDateTime
A date-time with a time-zone in the ISO-8601 calendar system,
 such as
2007-12-03T10:15:30+01:00 Europe/Paris
.
class
ZoneId
A time-zone ID, such as
Europe/Paris
.
final class
ZoneOffset
A time-zone offset from Greenwich/UTC, such as
+02:00
.
Uses of
Serializable
in
java.time.chrono
Classes in
java.time.chrono
that implement
Serializable
Modifier and Type
Class
Description
final class
HijrahChronology
The Hijrah calendar is a lunar calendar supporting Islamic calendars.
final class
HijrahDate
A date in the Hijrah calendar system.
enum
HijrahEra
An era in the Hijrah calendar system.
final class
IsoChronology
The ISO calendar system.
enum
IsoEra
An era in the ISO calendar system.
final class
JapaneseChronology
The Japanese Imperial calendar system.
final class
JapaneseDate
A date in the Japanese Imperial calendar system.
final class
JapaneseEra
An era in the Japanese Imperial calendar system.
final class
MinguoChronology
The Minguo calendar system.
final class
MinguoDate
A date in the Minguo calendar system.
enum
MinguoEra
An era in the Minguo calendar system.
final class
ThaiBuddhistChronology
The Thai Buddhist calendar system.
final class
ThaiBuddhistDate
A date in the Thai Buddhist calendar system.
enum
ThaiBuddhistEra
An era in the Thai Buddhist calendar system.
Uses of
Serializable
in
java.time.format
Classes in
java.time.format
that implement
Serializable
Modifier and Type
Class
Description
class
DateTimeParseException
An exception thrown when an error occurs during parsing.
enum
FormatStyle
Enumeration of the style of a localized date, time or date-time formatter.
enum
ResolverStyle
Enumeration of different ways to resolve dates and times.
enum
SignStyle
Enumeration of ways to handle the positive/negative sign.
enum
TextStyle
Enumeration of the style of text formatting and parsing.
Uses of
Serializable
in
java.time.temporal
Classes in
java.time.temporal
that implement
Serializable
Modifier and Type
Class
Description
enum
ChronoField
A standard set of fields.
enum
ChronoUnit
A standard set of date periods units.
class
UnsupportedTemporalTypeException
UnsupportedTemporalTypeException indicates that a ChronoField or ChronoUnit is
 not supported for a Temporal class.
final class
ValueRange
The range of valid values for a date-time field.
final class
WeekFields
Localized definitions of the day-of-week, week-of-month and week-of-year fields.
Uses of
Serializable
in
java.time.zone
Classes in
java.time.zone
that implement
Serializable
Modifier and Type
Class
Description
final class
ZoneOffsetTransition
A transition between two offsets caused by a discontinuity in the local time-line.
final class
ZoneOffsetTransitionRule
A rule expressing how to create a transition.
static enum
ZoneOffsetTransitionRule.TimeDefinition
A definition of the way a local time can be converted to the actual
 transition date-time.
final class
ZoneRules
The rules defining how the zone offset varies for a single time-zone.
class
ZoneRulesException
Thrown to indicate a problem with time-zone configuration.
Uses of
Serializable
in
java.util
Classes in
java.util
that implement
Serializable
Modifier and Type
Class
Description
static class
AbstractMap.SimpleEntry
<K,
V>
An Entry maintaining a key and a value.
static class
AbstractMap.SimpleImmutableEntry
<K,
V>
An unmodifiable Entry maintaining a key and a value.
class
ArrayDeque
<E>
Resizable-array implementation of the
Deque
interface.
class
ArrayList
<E>
Resizable-array implementation of the
List
interface.
class
BitSet
This class implements a vector of bits that grows as needed.
class
Calendar
The
Calendar
class is an abstract class that provides methods
 for converting between a specific instant in time and a set of
calendar fields
such as
YEAR
,
MONTH
,
DAY_OF_MONTH
,
HOUR
, and so on, and for
 manipulating the calendar fields, such as getting the date of the next
 week.
class
ConcurrentModificationException
This exception may be thrown by methods that have detected concurrent
 modification of an object when such modification is not permissible.
final class
Currency
Represents a currency.
class
Date
The class
Date
represents a specific instant
 in time, with millisecond precision.
class
DuplicateFormatFlagsException
Unchecked exception thrown when duplicate flags are provided in the format
 specifier.
class
EmptyStackException
Thrown by methods in the
Stack
class to indicate
 that the stack is empty.
class
EnumMap
<K extends
Enum
<K>,
V>
A specialized
Map
implementation for use with enum type keys.
class
EnumSet
<E extends
Enum
<E>>
A specialized
Set
implementation for use with enum types.
class
EventObject
The root class from which all event state objects shall be derived.
class
FormatFlagsConversionMismatchException
Unchecked exception thrown when a conversion and flag are incompatible.
static enum
Formatter.BigDecimalLayoutForm
Enum for
BigDecimal
formatting.
class
FormatterClosedException
Unchecked exception thrown when the formatter has been closed.
class
GregorianCalendar
GregorianCalendar
is a concrete subclass of
Calendar
and provides the standard calendar system
 used by most of the world.
class
HashMap
<K,
V>
Hash table based implementation of the
Map
interface.
class
HashSet
<E>
This class implements the
Set
interface, backed by a hash table
 (actually a
HashMap
instance).
class
Hashtable
<K,
V>
This class implements a hash table, which maps keys to values.
class
IdentityHashMap
<K,
V>
This class implements the
Map
interface with a hash table, using
 reference-equality in place of object-equality when comparing keys (and
 values).
class
IllegalFormatCodePointException
Unchecked exception thrown when a character with an invalid Unicode code
 point as defined by
Character.isValidCodePoint(int)
is passed to the
Formatter
.
class
IllegalFormatConversionException
Unchecked exception thrown when the argument corresponding to the format
 specifier is of an incompatible type.
class
IllegalFormatException
Unchecked exception thrown when a format string contains an illegal syntax
 or a format specifier that is incompatible with the given arguments.
class
IllegalFormatFlagsException
Unchecked exception thrown when an illegal combination flags is given.
class
IllegalFormatPrecisionException
Unchecked exception thrown when the precision is a negative value other than
-1
, the conversion does not support a precision, or the value is
 otherwise unsupported.
class
IllegalFormatWidthException
Unchecked exception thrown when the format width is a negative value other
 than
-1
or is otherwise unsupported.
class
IllformedLocaleException
Thrown by methods in
Locale
and
Locale.Builder
to
 indicate that an argument is not a well-formed BCP 47 tag.
class
InputMismatchException
Thrown by a
Scanner
to indicate that the token
 retrieved does not match the pattern for the expected type, or
 that the token is out of range for the expected type.
class
InvalidPropertiesFormatException
Thrown to indicate that an operation could not complete because
 the input did not conform to the appropriate XML document type
 for a collection of properties, as per the
Properties
specification.
class
LinkedHashMap
<K,
V>
Hash table and linked list implementation of the
Map
interface,
 with well-defined encounter order.
class
LinkedHashSet
<E>
Hash table and linked list implementation of the
Set
interface,
 with well-defined encounter order.
class
LinkedList
<E>
Doubly-linked list implementation of the
List
and
Deque
interfaces.
final class
Locale
A
Locale
object represents a specific geographical, political,
 or cultural region.
static enum
Locale.Category
Enum for locale categories.
static enum
Locale.FilteringMode
This enum provides constants to select a filtering mode for locale
 matching.
static enum
Locale.IsoCountryCode
Enum for specifying the type defined in ISO 3166.
class
MissingFormatArgumentException
Unchecked exception thrown when there is a format specifier which does not
 have a corresponding argument or if an argument index refers to an argument
 that does not exist.
class
MissingFormatWidthException
Unchecked exception thrown when the format width is required.
class
MissingResourceException
Signals that a resource is missing.
class
NoSuchElementException
Thrown by various accessor methods to indicate that the element being requested
 does not exist.
class
PriorityQueue
<E>
An unbounded priority
queue
based on a priority heap.
class
Properties
The
Properties
class represents a persistent set of
 properties.
final class
PropertyPermission
This class is for property permissions.
class
Random
An instance of this class is used to generate a stream of
 pseudorandom numbers; its period is only 2
48
.
class
ServiceConfigurationError
Error thrown when something goes wrong while locating, loading, or
 instantiating a service provider.
class
SimpleTimeZone
SimpleTimeZone
is a concrete subclass of
TimeZone
that represents a time zone for use with a Gregorian calendar.
class
Stack
<E>
The
Stack
class represents a last-in-first-out
 (LIFO) stack of objects.
class
TimeZone
TimeZone
represents a time zone offset, and also figures out daylight
 savings.
class
TooManyListenersException
The
TooManyListenersException
Exception is used as part of
 the Java Event model to annotate and implement a unicast special case of
 a multicast Event Source.
class
TreeMap
<K,
V>
A Red-Black tree based
NavigableMap
implementation.
class
TreeSet
<E>
A
NavigableSet
implementation based on a
TreeMap
.
class
UnknownFormatConversionException
Unchecked exception thrown when an unknown conversion is given.
class
UnknownFormatFlagsException
Unchecked exception thrown when an unknown flag is given.
final class
UUID
A class that represents an immutable universally unique identifier (UUID).
class
Vector
<E>
The
Vector
class implements a growable array of
 objects.
Uses of
Serializable
in
java.util.concurrent
Classes in
java.util.concurrent
that implement
Serializable
Modifier and Type
Class
Description
class
ArrayBlockingQueue
<E>
A bounded
blocking queue
backed by an
 array.
class
BrokenBarrierException
Exception thrown when a thread tries to wait upon a barrier that is
 in a broken state, or which enters the broken state while the thread
 is waiting.
class
CancellationException
Exception indicating that the result of a value-producing task,
 such as a
FutureTask
, cannot be retrieved because the task
 was cancelled.
class
CompletionException
Exception thrown when an error or other exception is encountered
 in the course of completing a result or task.
class
ConcurrentHashMap
<K,
V>
A hash table supporting full concurrency of retrievals and
 high expected concurrency for updates.
static final class
ConcurrentHashMap.KeySetView
<K,
V>
A view of a ConcurrentHashMap as a
Set
of keys, in
 which additions may optionally be enabled by mapping to a
 common value.
class
ConcurrentLinkedDeque
<E>
An unbounded concurrent
deque
based on linked nodes.
class
ConcurrentLinkedQueue
<E>
An unbounded thread-safe
queue
based on linked nodes.
class
ConcurrentSkipListMap
<K,
V>
A scalable concurrent
ConcurrentNavigableMap
implementation.
class
ConcurrentSkipListSet
<E>
A scalable concurrent
NavigableSet
implementation based on
 a
ConcurrentSkipListMap
.
class
CopyOnWriteArrayList
<E>
A thread-safe variant of
ArrayList
in which all mutative
 operations (
add
,
set
, and so on) are implemented by
 making a fresh copy of the underlying array.
class
CopyOnWriteArraySet
<E>
A
Set
that uses an internal
CopyOnWriteArrayList
for all of its operations.
class
CountedCompleter
<T>
A
ForkJoinTask
with a completion action performed when
 triggered and there are no remaining pending actions.
class
ExecutionException
Exception thrown when attempting to retrieve the result of a task
 that aborted by throwing an exception.
class
ForkJoinTask
<V>
Abstract base class for tasks that run within a
ForkJoinPool
.
static enum
Future.State
Represents the computation state.
class
LinkedBlockingDeque
<E>
An optionally-bounded
blocking deque
based on
 linked nodes.
class
LinkedBlockingQueue
<E>
An optionally-bounded
blocking queue
based on
 linked nodes.
class
LinkedTransferQueue
<E>
An unbounded
TransferQueue
based on linked nodes.
class
PriorityBlockingQueue
<E>
An unbounded
blocking queue
that uses
 the same ordering rules as class
PriorityQueue
and supplies
 blocking retrieval operations.
class
RecursiveAction
A recursive resultless
ForkJoinTask
.
class
RecursiveTask
<V>
A recursive result-bearing
ForkJoinTask
.
class
RejectedExecutionException
Exception thrown by an
Executor
when a task cannot be
 accepted for execution.
class
Semaphore
A counting semaphore.
static enum
StructuredTaskScope.Subtask.State
PREVIEW
Preview.
Represents the state of a subtask.
final class
StructureViolationException
PREVIEW
Preview.
Thrown when a structure violation is detected.
class
SynchronousQueue
<E>
A
blocking queue
in which each insert
 operation must wait for a corresponding remove operation by another
 thread, and vice versa.
final class
ThreadLocalRandom
A random number generator (with period 2
64
) isolated
 to the current thread.
class
TimeoutException
Exception thrown when a blocking operation times out.
enum
TimeUnit
A
TimeUnit
represents time durations at a given unit of
 granularity and provides utility methods to convert across units,
 and to perform timing and delay operations in these units.
Uses of
Serializable
in
java.util.concurrent.atomic
Classes in
java.util.concurrent.atomic
that implement
Serializable
Modifier and Type
Class
Description
class
AtomicBoolean
A
boolean
value that may be updated atomically.
class
AtomicInteger
An
int
value that may be updated atomically.
class
AtomicIntegerArray
An
int
array in which elements may be updated atomically.
class
AtomicLong
A
long
value that may be updated atomically.
class
AtomicLongArray
A
long
array in which elements may be updated atomically.
class
AtomicReference
<V>
An object reference that may be updated atomically.
class
AtomicReferenceArray
<E>
An array of object references in which elements may be updated
 atomically.
class
DoubleAccumulator
One or more variables that together maintain a running
double
value updated using a supplied function.
class
DoubleAdder
One or more variables that together maintain an initially zero
double
sum.
class
LongAccumulator
One or more variables that together maintain a running
long
value updated using a supplied function.
class
LongAdder
One or more variables that together maintain an initially zero
long
sum.
Uses of
Serializable
in
java.util.concurrent.locks
Classes in
java.util.concurrent.locks
that implement
Serializable
Modifier and Type
Class
Description
class
AbstractOwnableSynchronizer
A synchronizer that may be exclusively owned by a thread.
class
AbstractQueuedLongSynchronizer
A version of
AbstractQueuedSynchronizer
in
 which synchronization state is maintained as a
long
.
class
AbstractQueuedLongSynchronizer.ConditionObject
Condition implementation for a
AbstractQueuedLongSynchronizer
serving as the basis of a
Lock
implementation.
class
AbstractQueuedSynchronizer
Provides a framework for implementing blocking locks and related
 synchronizers (semaphores, events, etc) that rely on
 first-in-first-out (FIFO) wait queues.
class
AbstractQueuedSynchronizer.ConditionObject
Condition implementation for a
AbstractQueuedSynchronizer
serving as the basis of a
Lock
implementation.
class
ReentrantLock
A reentrant mutual exclusion
Lock
with the same basic
 behavior and semantics as the implicit monitor lock accessed using
synchronized
methods and statements, but with extended
 capabilities.
class
ReentrantReadWriteLock
An implementation of
ReadWriteLock
supporting similar
 semantics to
ReentrantLock
.
static class
ReentrantReadWriteLock.ReadLock
The lock returned by method
ReentrantReadWriteLock.readLock()
.
static class
ReentrantReadWriteLock.WriteLock
The lock returned by method
ReentrantReadWriteLock.writeLock()
.
class
StampedLock
A capability-based lock with three modes for controlling read/write
 access.
Uses of
Serializable
in
java.util.jar
Classes in
java.util.jar
that implement
Serializable
Modifier and Type
Class
Description
class
JarException
Signals that an error of some sort has occurred while reading from
 or writing to a JAR file.
Uses of
Serializable
in
java.util.logging
Classes in
java.util.logging
that implement
Serializable
Modifier and Type
Class
Description
class
Level
The Level class defines a set of standard logging levels that
 can be used to control logging output.
final class
LoggingPermission
The permission which the SecurityManager will check when code
 that is running with a SecurityManager calls one of the logging
 control methods (such as Logger.setLevel).
class
LogRecord
LogRecord objects are used to pass logging requests between
 the logging framework and individual log Handlers.
Uses of
Serializable
in
java.util.prefs
Classes in
java.util.prefs
that implement
Serializable
Modifier and Type
Class
Description
class
BackingStoreException
Thrown to indicate that a preferences operation could not complete because
 of a failure in the backing store, or a failure to contact the backing
 store.
class
InvalidPreferencesFormatException
Thrown to indicate that an operation could not complete because
 the input did not conform to the appropriate XML document type
 for a collection of preferences, as per the
Preferences
specification.
class
NodeChangeEvent
An event emitted by a
Preferences
node to indicate that
 a child of that node has been added or removed.
class
PreferenceChangeEvent
An event emitted by a
Preferences
node to indicate that
 a preference has been added, removed or has had its value changed.
Uses of
Serializable
in
java.util.regex
Classes in
java.util.regex
that implement
Serializable
Modifier and Type
Class
Description
final class
Pattern
A compiled representation of a regular expression.
class
PatternSyntaxException
Unchecked exception thrown to indicate a syntax error in a
 regular-expression pattern.
Uses of
Serializable
in
java.util.stream
Classes in
java.util.stream
that implement
Serializable
Modifier and Type
Class
Description
static enum
Collector.Characteristics
Characteristics indicating properties of a
Collector
, which can
 be used to optimize reduction implementations.
Uses of
Serializable
in
java.util.zip
Classes in
java.util.zip
that implement
Serializable
Modifier and Type
Class
Description
class
DataFormatException
Signals that a data format error has occurred.
class
ZipError
Signals that an unrecoverable error has occurred.
class
ZipException
Signals that a Zip exception of some sort has occurred.
Uses of
Serializable
in
javax.annotation.processing
Classes in
javax.annotation.processing
that implement
Serializable
Modifier and Type
Class
Description
class
FilerException
Indicates a
Filer
detected an attempt to open a file that
 would violate the guarantees provided by the
Filer
.
Uses of
Serializable
in
javax.crypto
Subinterfaces of
Serializable
in
javax.crypto
Modifier and Type
Interface
Description
interface
SecretKey
A secret (symmetric) key.
Classes in
javax.crypto
that implement
Serializable
Modifier and Type
Class
Description
class
AEADBadTagException
This exception is thrown when a
Cipher
operating in
 an AEAD mode (such as GCM/CCM) is unable to verify the supplied
 authentication tag.
class
BadPaddingException
This exception is thrown when a particular padding mechanism is
 expected for the input data but the data is not padded properly.
class
DecapsulateException
An exception that is thrown by the
KEM.Decapsulator.decapsulate(byte[])
method to denote an
 error during decapsulation.
class
ExemptionMechanismException
This is the generic ExemptionMechanism exception.
class
IllegalBlockSizeException
This exception is thrown when the length of data provided to a block
 cipher is incorrect, i.e., does not match the block size of the cipher.
class
NoSuchPaddingException
This exception is thrown when a particular padding mechanism is
 requested but is not available in the environment.
class
SealedObject
This class enables a programmer to create an object and protect its
 confidentiality with a cryptographic algorithm.
class
ShortBufferException
This exception is thrown when an output buffer provided by the user
 is too short to hold the operation result.
Constructors in
javax.crypto
with parameters of type
Serializable
Modifier
Constructor
Description
SealedObject
(
Serializable
object,
Cipher
c)
Constructs a
SealedObject
from any
Serializable
object.
Uses of
Serializable
in
javax.crypto.interfaces
Subinterfaces of
Serializable
in
javax.crypto.interfaces
Modifier and Type
Interface
Description
interface
DHPrivateKey
The interface to a Diffie-Hellman private key.
interface
DHPublicKey
The interface to a Diffie-Hellman public key.
interface
PBEKey
The interface to a PBE key.
Uses of
Serializable
in
javax.crypto.spec
Classes in
javax.crypto.spec
that implement
Serializable
Modifier and Type
Class
Description
class
SecretKeySpec
This class specifies a secret key in a provider-independent fashion.
Uses of
Serializable
in
javax.imageio
Classes in
javax.imageio
that implement
Serializable
Modifier and Type
Class
Description
class
IIOException
An exception class used for signaling run-time failure of reading
 and writing operations.
Uses of
Serializable
in
javax.imageio.metadata
Classes in
javax.imageio.metadata
that implement
Serializable
Modifier and Type
Class
Description
class
IIOInvalidTreeException
An
IIOInvalidTreeException
is thrown when an attempt
 by an
IIOMetadata
object to parse a tree of
IIOMetadataNode
s fails.
Uses of
Serializable
in
javax.lang.model
Classes in
javax.lang.model
that implement
Serializable
Modifier and Type
Class
Description
enum
SourceVersion
Source versions of the Java programming language.
class
UnknownEntityException
Superclass of exceptions which indicate that an unknown kind of
 entity was encountered.
Uses of
Serializable
in
javax.lang.model.element
Classes in
javax.lang.model.element
that implement
Serializable
Modifier and Type
Class
Description
enum
ElementKind
The
kind
of an element.
enum
Modifier
Represents a modifier on a program element such
 as a class, method, or field.
static enum
ModuleElement.DirectiveKind
The
kind
of a directive.
enum
NestingKind
The
nesting kind
of a type element.
class
UnknownAnnotationValueException
Indicates that an unknown kind of annotation value was encountered.
class
UnknownDirectiveException
Indicates that an unknown kind of module directive was encountered.
class
UnknownElementException
Indicates that an unknown kind of element was encountered.
Uses of
Serializable
in
javax.lang.model.type
Classes in
javax.lang.model.type
that implement
Serializable
Modifier and Type
Class
Description
class
MirroredTypeException
Thrown when an application attempts to access the
Class
object
 corresponding to a
TypeMirror
.
class
MirroredTypesException
Thrown when an application attempts to access a sequence of
Class
objects each corresponding to a
TypeMirror
.
enum
TypeKind
The kind of a type mirror.
class
UnknownTypeException
Indicates that an unknown kind of type was encountered.
Uses of
Serializable
in
javax.lang.model.util
Classes in
javax.lang.model.util
that implement
Serializable
Modifier and Type
Class
Description
static enum
Elements.Origin
The
origin
of an element or other language model
 item.
Uses of
Serializable
in
javax.management
Subinterfaces of
Serializable
in
javax.management
Modifier and Type
Interface
Description
interface
Descriptor
Additional metadata for a JMX element.
interface
NotificationFilter
To be implemented by a any class acting as a notification filter.
interface
QueryExp
Represents relational constraints similar to database query "where
 clauses".
interface
ValueExp
Represents values that can be passed as arguments to
 relational expressions.
Classes in
javax.management
that implement
Serializable
Modifier and Type
Class
Description
class
Attribute
Represents an MBean attribute by associating its name with its value.
class
AttributeChangeNotification
Provides definitions of the attribute change notifications sent by MBeans.
class
AttributeChangeNotificationFilter
This class implements of the
NotificationFilter
interface for the
attribute change notification
.
class
AttributeList
Represents a list of values for attributes of an MBean.
class
AttributeNotFoundException
The specified attribute does not exist or cannot be retrieved.
class
AttributeValueExp
Represents attributes used as arguments to relational constraints.
class
BadAttributeValueExpException
Thrown when an invalid MBean attribute is passed to a query
 constructing method.
class
BadBinaryOpValueExpException
Thrown when an invalid expression is passed to a method for
 constructing a query.
class
BadStringOperationException
Thrown when an invalid string operation is passed
 to a method for constructing a query.
class
ImmutableDescriptor
An immutable descriptor.
class
InstanceAlreadyExistsException
The MBean is already registered in the repository.
class
InstanceNotFoundException
The specified MBean does not exist in the repository.
class
IntrospectionException
An exception occurred during the introspection of an MBean.
class
InvalidApplicationException
Thrown when an attempt is made to apply either of the following: A
 subquery expression to an MBean or a qualified attribute expression
 to an MBean of the wrong class.
class
InvalidAttributeValueException
The value specified is not valid for the attribute.
class
JMException
Exceptions thrown by JMX implementations.
class
JMRuntimeException
Runtime exceptions emitted by JMX implementations.
class
ListenerNotFoundException
The specified MBean listener does not exist in the repository.
class
MalformedObjectNameException
The format of the string does not correspond to a valid ObjectName.
class
MBeanAttributeInfo
Describes an MBean attribute exposed for management.
class
MBeanConstructorInfo
Describes a constructor exposed by an MBean.
class
MBeanException
Represents "user defined" exceptions thrown by MBean methods
 in the agent.
class
MBeanFeatureInfo
Provides general information for an MBean descriptor object.
class
MBeanInfo
Describes the management interface exposed by an MBean; that is,
 the set of attributes and operations which are available for
 management operations.
class
MBeanNotificationInfo
The
MBeanNotificationInfo
class is used to describe the
 characteristics of the different notification instances
 emitted by an MBean, for a given Java class of notification.
class
MBeanOperationInfo
Describes a management operation exposed by an MBean.
class
MBeanParameterInfo
Describes an argument of an operation exposed by an MBean.
class
MBeanPermission
Permission controlling access to MBeanServer operations.
class
MBeanRegistrationException
Wraps exceptions thrown by the preRegister(), preDeregister() methods
 of the
MBeanRegistration
interface.
class
MBeanServerNotification
Represents a notification emitted by the MBean Server through the MBeanServerDelegate MBean.
class
MBeanServerPermission
A Permission to perform actions related to MBeanServers.
class
MBeanTrustPermission
This permission represents "trust" in a signer or codebase.
class
NotCompliantMBeanException
Exception which occurs when trying to register an  object in the MBean server that is not a JMX compliant MBean.
class
Notification
The Notification class represents a notification emitted by an
 MBean.
class
NotificationFilterSupport
Provides an implementation of the
NotificationFilter
interface.
class
ObjectInstance
Used to represent the object name of an MBean and its class name.
class
ObjectName
Represents the object name of an MBean, or a pattern that can
 match the names of several MBeans.
class
OperationsException
Represents exceptions thrown in the MBean server when performing operations
 on MBeans.
class
QueryEval
Allows a query to be performed in the context of a specific MBean server.
class
ReflectionException
Represents exceptions thrown in the MBean server when using the
 java.lang.reflect classes to invoke methods on MBeans.
class
RuntimeErrorException
When a
java.lang.Error
occurs in the agent it should be caught and
 re-thrown as a
RuntimeErrorException
.
class
RuntimeMBeanException
Represents runtime exceptions thrown by MBean methods in
 the agent.
class
RuntimeOperationsException
Represents runtime exceptions thrown in the agent when performing operations on MBeans.
class
ServiceNotFoundException
Represents exceptions raised when a requested service is not supported.
class
StringValueExp
Represents strings that are arguments to relational constraints.
Uses of
Serializable
in
javax.management.loading
Classes in
javax.management.loading
that implement
Serializable
Modifier and Type
Class
Description
class
MLet
Deprecated, for removal: This API element is subject to removal in a future version.
This API is part of Management Applets (m-lets), which is a legacy feature that allows loading
 of remote MBeans.
class
PrivateMLet
Deprecated, for removal: This API element is subject to removal in a future version.
This API is part of Management Applets (m-lets), which is a legacy feature that allows loading
 of remote MBeans.
Uses of
Serializable
in
javax.management.modelmbean
Classes in
javax.management.modelmbean
that implement
Serializable
Modifier and Type
Class
Description
class
DescriptorSupport
This class represents the metadata set for a ModelMBean element.
class
InvalidTargetObjectTypeException
Exception thrown when an invalid target object type is specified.
class
ModelMBeanAttributeInfo
The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.
class
ModelMBeanConstructorInfo
The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.
class
ModelMBeanInfoSupport
This class represents the meta data for ModelMBeans.
class
ModelMBeanNotificationInfo
The ModelMBeanNotificationInfo object describes a notification emitted
 by a ModelMBean.
class
ModelMBeanOperationInfo
The ModelMBeanOperationInfo object describes a management operation of
 the ModelMBean.
class
XMLParseException
This exception is thrown when an XML formatted string is being parsed into ModelMBean objects
 or when XML formatted strings are being created from ModelMBean objects.
Uses of
Serializable
in
javax.management.monitor
Classes in
javax.management.monitor
that implement
Serializable
Modifier and Type
Class
Description
class
MonitorNotification
Provides definitions of the notifications sent by monitor MBeans.
class
MonitorSettingException
Exception thrown by the monitor when a monitor setting becomes invalid while the monitor is running.
Uses of
Serializable
in
javax.management.openmbean
Classes in
javax.management.openmbean
that implement
Serializable
Modifier and Type
Class
Description
class
ArrayType
<T>
The
ArrayType
class is the
open type
class whose instances describe
 all
open data
values which are n-dimensional arrays of
open data
values.
class
CompositeDataSupport
The
CompositeDataSupport
class is the
open data
class which
 implements the
CompositeData
interface.
class
CompositeType
The
CompositeType
class is the
open type
class
 whose instances describe the types of
CompositeData
values.
class
InvalidKeyException
This runtime exception is thrown to indicate that a method parameter which was expected to be
 an item name of a
composite data
or a row index of a
tabular data
is not valid.
class
InvalidOpenTypeException
This runtime exception is thrown to indicate that the
open type
of an
open data
value
 is not the one expected.
class
KeyAlreadyExistsException
This runtime exception is thrown to indicate that the index of a row to be added to a
tabular data
instance
 is already used to refer to another row in this
tabular data
instance.
class
OpenDataException
This checked exception is thrown when an
open type
, an
open data
or an
open MBean metadata info
instance
 could not be constructed because one or more validity constraints were not met.
class
OpenMBeanAttributeInfoSupport
Describes an attribute of an open MBean.
class
OpenMBeanConstructorInfoSupport
Describes a constructor of an Open MBean.
class
OpenMBeanInfoSupport
The
OpenMBeanInfoSupport
class describes the management
 information of an
open MBean
: it is a subclass of
MBeanInfo
, and it implements the
OpenMBeanInfo
interface.
class
OpenMBeanOperationInfoSupport
Describes an operation of an Open MBean.
class
OpenMBeanParameterInfoSupport
Describes a parameter used in one or more operations or
 constructors of an open MBean.
class
OpenType
<T>
The
OpenType
class is the parent abstract class of all classes which describe the actual
open type
of open data values.
final class
SimpleType
<T>
The
SimpleType
class is the
open type
class whose instances describe
 all
open data
values which are neither arrays,
 nor
CompositeData
values,
 nor
TabularData
values.
class
TabularDataSupport
The
TabularDataSupport
class is the
open data
class which implements the
TabularData
and the
Map
interfaces, and which is internally based on a hash map data structure.
class
TabularType
The
TabularType
class is the
open type
class
 whose instances describe the types of
TabularData
values.
Uses of
Serializable
in
javax.management.relation
Subinterfaces of
Serializable
in
javax.management.relation
Modifier and Type
Interface
Description
interface
RelationType
The RelationType interface has to be implemented by any class expected to
 represent a relation type.
Classes in
javax.management.relation
that implement
Serializable
Modifier and Type
Class
Description
class
InvalidRelationIdException
This exception is raised when relation id provided for a relation is already
 used.
class
InvalidRelationServiceException
This exception is raised when an invalid Relation Service is provided.
class
InvalidRelationTypeException
Invalid relation type.
class
InvalidRoleInfoException
This exception is raised when, in a role info, its minimum degree is greater
 than its maximum degree.
class
InvalidRoleValueException
Role value is invalid.
class
MBeanServerNotificationFilter
Filter for
MBeanServerNotification
.
class
RelationException
This class is the superclass of any exception which can be raised during
 relation management.
class
RelationNotFoundException
This exception is raised when there is no relation for a given relation id
 in a Relation Service.
class
RelationNotification
A notification of a change in the Relation Service.
class
RelationServiceNotRegisteredException
This exception is raised when an access is done to the Relation Service and
 that one is not registered.
class
RelationTypeNotFoundException
This exception is raised when there is no relation type with given name in
 Relation Service.
class
RelationTypeSupport
A RelationTypeSupport object implements the RelationType interface.
class
Role
Represents a role: includes a role name and referenced MBeans (via their
 ObjectNames).
class
RoleInfo
A RoleInfo object summarises a role in a relation type.
class
RoleInfoNotFoundException
This exception is raised when there is no role info with given name in a
 given relation type.
class
RoleList
A RoleList represents a list of roles (Role objects).
class
RoleNotFoundException
This exception is raised when a role in a relation does not exist, or is not
 readable, or is not settable.
class
RoleResult
Represents the result of a multiple access to several roles of a relation
 (either for reading or writing).
class
RoleUnresolved
Represents an unresolved role: a role not retrieved from a relation due
 to a problem.
class
RoleUnresolvedList
A RoleUnresolvedList represents a list of RoleUnresolved objects,
 representing roles not retrieved from a relation due to a problem
 encountered when trying to access (read or write) the roles.
Uses of
Serializable
in
javax.management.remote
Classes in
javax.management.remote
that implement
Serializable
Modifier and Type
Class
Description
class
JMXConnectionNotification
Notification emitted when a client connection is opened or
 closed or when notifications are lost.
class
JMXPrincipal
The identity of a remote client of the JMX Remote API.
class
JMXProviderException
Exception thrown by
JMXConnectorFactory
and
JMXConnectorServerFactory
when a provider exists for
 the required protocol but cannot be used for some reason.
class
JMXServerErrorException
Exception thrown as the result of a remote
MBeanServer
method invocation when an
Error
is thrown while
 processing the invocation in the remote MBean server.
class
JMXServiceURL
The address of a JMX API connector server.
class
NotificationResult
Result of a query for buffered notifications.
final class
SubjectDelegationPermission
Permission required by an authentication identity to perform
 operations on behalf of an authorization identity.
class
TargetedNotification
A (Notification, Listener ID) pair.
Uses of
Serializable
in
javax.management.remote.rmi
Classes in
javax.management.remote.rmi
that implement
Serializable
Modifier and Type
Class
Description
final class
RMIConnectionImpl_Stub
RMIConnectionImpl remote stub.
class
RMIConnector
A connection to a remote RMI connector.
final class
RMIServerImpl_Stub
RMIServerImpl remote stub.
Uses of
Serializable
in
javax.management.timer
Classes in
javax.management.timer
that implement
Serializable
Modifier and Type
Class
Description
class
TimerNotification
This class provides definitions of the notifications sent by timer MBeans.
Uses of
Serializable
in
javax.naming
Subinterfaces of
Serializable
in
javax.naming
Modifier and Type
Interface
Description
interface
Name
The
Name
interface represents a generic name -- an ordered
 sequence of components.
Classes in
javax.naming
that implement
Serializable
Modifier and Type
Class
Description
class
AuthenticationException
This exception is thrown when an authentication error occurs while
 accessing the naming or directory service.
class
AuthenticationNotSupportedException
This exception is thrown when
 the particular flavor of authentication requested is not supported.
class
BinaryRefAddr
This class represents the binary form of the address of
 a communications end-point.
class
Binding
This class represents a name-to-object binding found in a context.
class
CannotProceedException
This exception is thrown to indicate that the operation reached
 a point in the name where the operation cannot proceed any further.
class
CommunicationException
This exception is thrown when the client is
 unable to communicate with the directory or naming service.
class
CompositeName
This class represents a composite name -- a sequence of
 component names spanning multiple namespaces.
class
CompoundName
This class represents a compound name -- a name from
 a hierarchical name space.
class
ConfigurationException
This exception is thrown when there is a configuration problem.
class
ContextNotEmptyException
This exception is thrown when attempting to destroy a context that
 is not empty.
class
InsufficientResourcesException
This exception is thrown when resources are not available to complete
 the requested operation.
class
InterruptedNamingException
This exception is thrown when the naming operation
 being invoked has been interrupted.
class
InvalidNameException
This exception indicates that the name being specified does
 not conform to the naming syntax of a naming system.
class
LimitExceededException
This exception is thrown when a method
 terminates abnormally due to a user or system specified limit.
class
LinkException
This exception is used to describe problems encountered while resolving links.
class
LinkLoopException
This exception is thrown when
 a loop was detected while attempting to resolve a link, or an implementation
 specific limit on link counts has been reached.
class
LinkRef
This class represents a Reference whose contents is a name, called the link name,
 that is bound to an atomic name in a context.
class
MalformedLinkException
This exception is thrown when a malformed link was encountered while
 resolving or constructing a link.
class
NameAlreadyBoundException
This exception is thrown by methods to indicate that
 a binding cannot be added because the name is already bound to
 another object.
class
NameClassPair
This class represents the object name and class name pair of a binding
 found in a context.
class
NameNotFoundException
This exception is thrown when a component of the name cannot be resolved
 because it is not bound.
class
NamingException
This is the superclass of all exceptions thrown by
 operations in the Context and DirContext interfaces.
class
NamingSecurityException
This is the superclass of security-related exceptions
 thrown by operations in the Context and DirContext interfaces.
class
NoInitialContextException
This exception is thrown when no initial context implementation
 can be created.
class
NoPermissionException
This exception is thrown when attempting to perform an operation
 for which the client has no permission.
class
NotContextException
This exception is thrown when a naming operation proceeds to a point
 where a context is required to continue the operation, but the
 resolved object is not a context.
class
OperationNotSupportedException
This exception is thrown when a context implementation does not support
 the operation being invoked.
class
PartialResultException
This exception is thrown to indicate that the result being returned
 or returned so far is partial, and that the operation cannot
 be completed.
class
RefAddr
This class represents the address of a communications end-point.
class
Reference
This class represents a reference to an object that is found outside of
 the naming/directory system.
class
ReferralException
This abstract class is used to represent a referral exception,
 which is generated in response to a
referral
such as that returned by LDAP v3 servers.
class
ServiceUnavailableException
This exception is thrown when attempting to communicate with a
 directory or naming service and that service is not available.
class
SizeLimitExceededException
This exception is thrown when a method
 produces a result that exceeds a size-related limit.
class
StringRefAddr
This class represents the string form of the address of
 a communications end-point.
class
TimeLimitExceededException
This exception is thrown when a method
 does not terminate within the specified time limit.
Uses of
Serializable
in
javax.naming.directory
Subinterfaces of
Serializable
in
javax.naming.directory
Modifier and Type
Interface
Description
interface
Attribute
This interface represents an attribute associated with a named object.
interface
Attributes
This interface represents a collection of attributes.
Classes in
javax.naming.directory
that implement
Serializable
Modifier and Type
Class
Description
class
AttributeInUseException
This exception is thrown when an operation attempts
 to add an attribute that already exists.
class
AttributeModificationException
This exception is thrown when an attempt is
 made to add, or remove, or modify an attribute, its identifier,
 or its values that conflicts with the attribute's (schema) definition
 or the attribute's state.
class
BasicAttribute
This class provides a basic implementation of the
Attribute
interface.
class
BasicAttributes
This class provides a basic implementation
 of the Attributes interface.
class
InvalidAttributeIdentifierException
This exception is thrown when an attempt is
 made to add to create an attribute with an invalid attribute identifier.
class
InvalidAttributesException
This exception is thrown when an attempt is
 made to add or modify an attribute set that has been specified
 incompletely or incorrectly.
class
InvalidAttributeValueException
This class is thrown when an attempt is
 made to add to an attribute a value that conflicts with the attribute's
 schema definition.
class
InvalidSearchControlsException
This exception is thrown when the specification of
 the SearchControls for a search operation is invalid.
class
InvalidSearchFilterException
This exception is thrown when the specification of
 a search filter is invalid.
class
ModificationItem
This class represents a modification item.
class
NoSuchAttributeException
This exception is thrown when attempting to access
 an attribute that does not exist.
class
SchemaViolationException
This exception is thrown when a method
 in some ways violates the schema.
class
SearchControls
This class encapsulates
 factors that determine scope of search and what gets returned
 as a result of the search.
class
SearchResult
This class represents an item in the NamingEnumeration returned as a
 result of the DirContext.search() methods.
Uses of
Serializable
in
javax.naming.event
Classes in
javax.naming.event
that implement
Serializable
Modifier and Type
Class
Description
class
NamingEvent
This class represents an event fired by a naming/directory service.
class
NamingExceptionEvent
This class represents an event fired when the procedures/processes
 used to collect information for notifying listeners of
NamingEvent
s threw a
NamingException
.
Uses of
Serializable
in
javax.naming.ldap
Subinterfaces of
Serializable
in
javax.naming.ldap
Modifier and Type
Interface
Description
interface
Control
This interface represents an LDAPv3 control as defined in
RFC 2251
.
interface
ExtendedRequest
This interface represents an LDAPv3 extended operation request as defined in
RFC 2251
.
interface
ExtendedResponse
This interface represents an LDAP extended operation response as defined in
RFC 2251
.
interface
UnsolicitedNotification
This interface represents an unsolicited notification as defined in
RFC 2251
.
Classes in
javax.naming.ldap
that implement
Serializable
Modifier and Type
Class
Description
class
BasicControl
This class provides a basic implementation of the
Control
interface.
class
LdapName
This class represents a distinguished name as specified by
RFC 2253
.
class
LdapReferralException
This abstract class is used to represent an LDAP referral exception.
final class
ManageReferralControl
Requests that referral and other special LDAP objects be manipulated
 as normal LDAP objects.
final class
PagedResultsControl
Requests that the results of a search operation be returned by the LDAP
 server in batches of a specified size.
final class
PagedResultsResponseControl
Indicates the end of a batch of search results.
class
Rdn
This class represents a relative distinguished name, or RDN, which is a
 component of a distinguished name as specified by
RFC 2253
.
final class
SortControl
Requests that the results of a search operation be sorted by the LDAP server
 before being returned.
final class
SortResponseControl
Indicates whether the requested sort of search results was successful or not.
class
StartTlsRequest
This class implements the LDAPv3 Extended Request for StartTLS as
 defined in
Lightweight Directory
 Access Protocol (v3): Extension for Transport Layer Security
The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037
 and no extended request value is defined.
class
StartTlsResponse
This class implements the LDAPv3 Extended Response for StartTLS as
 defined in
Lightweight Directory
 Access Protocol (v3): Extension for Transport Layer Security
The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037
 and no extended response value is defined.
class
UnsolicitedNotificationEvent
This class represents an event fired in response to an unsolicited
 notification sent by the LDAP server.
Uses of
Serializable
in
javax.naming.spi
Classes in
javax.naming.spi
that implement
Serializable
Modifier and Type
Class
Description
class
ResolveResult
This class represents the result of resolution of a name.
Uses of
Serializable
in
javax.net.ssl
Classes in
javax.net.ssl
that implement
Serializable
Modifier and Type
Class
Description
class
HandshakeCompletedEvent
This event indicates that an SSL handshake completed on a given
 SSL connection.
static enum
SSLEngineResult.HandshakeStatus
An
SSLEngineResult
enum describing the current
 handshaking state of this
SSLEngine
.
static enum
SSLEngineResult.Status
An
SSLEngineResult
enum describing the overall result
 of the
SSLEngine
operation.
class
SSLException
Indicates some kind of error detected by an SSL subsystem.
class
SSLHandshakeException
Indicates that the client and server could not negotiate the
 desired level of security.
class
SSLKeyException
Reports a bad SSL key.
class
SSLPeerUnverifiedException
Indicates that the peer's identity has not been verified.
final class
SSLPermission
This class is for various network permissions.
class
SSLProtocolException
Reports an error in the operation of the SSL protocol.
class
SSLSessionBindingEvent
This event is propagated to a SSLSessionBindingListener.
Uses of
Serializable
in
javax.print
Classes in
javax.print
that implement
Serializable
Modifier and Type
Class
Description
class
DocFlavor
Class
DocFlavor
encapsulates an object that specifies the format in
 which print data is supplied to a
DocPrintJob
.
static class
DocFlavor.BYTE_ARRAY
Class
DocFlavor.BYTE_ARRAY
provides predefined static constant
DocFlavor
objects for example doc flavors using a byte array
 (
byte[]
) as the print data representation class.
static class
DocFlavor.CHAR_ARRAY
Class
DocFlavor.CHAR_ARRAY
provides predefined static constant
DocFlavor
objects for example doc flavors using a character array
 (
char[]
) as the print data representation class.
static class
DocFlavor.INPUT_STREAM
Class
DocFlavor.INPUT_STREAM
provides predefined static constant
DocFlavor
objects for example doc flavors using a byte stream
 (
java.io.InputStream
) as the print data
 representation class.
static class
DocFlavor.READER
Class
DocFlavor.READER
provides predefined static constant
DocFlavor
objects for example doc flavors using a character
 stream (
java.io.Reader
) as the print data
 representation class.
static class
DocFlavor.SERVICE_FORMATTED
Class
DocFlavor.SERVICE_FORMATTED
provides predefined static
 constant
DocFlavor
objects for example doc flavors for service
 formatted print data.
static class
DocFlavor.STRING
Class
DocFlavor.STRING
provides predefined static constant
DocFlavor
objects for example doc flavors using a string
 (
java.lang.String
) as the print data representation class.
static class
DocFlavor.URL
Class
DocFlavor.URL
provides predefined static constant
DocFlavor
objects.
class
PrintException
Class
PrintException
encapsulates a printing-related error condition
 that occurred while using a Print Service instance.
Uses of
Serializable
in
javax.print.attribute
Subinterfaces of
Serializable
in
javax.print.attribute
Modifier and Type
Interface
Description
interface
Attribute
Interface
Attribute
is the base interface implemented by any and
 every printing attribute class to indicate that the class represents a
 printing attribute.
interface
DocAttribute
Interface
DocAttribute
is a tagging interface which a printing
 attribute class implements to indicate the attribute denotes a setting for a
 doc.
interface
PrintJobAttribute
PrintJobAttribute
is a tagging interface which a printing attribute
 class implements to indicate the attribute describes the status of a Print
 Job or some other characteristic of a Print Job.
interface
PrintRequestAttribute
Interface
PrintRequestAttribute
is a tagging interface which a
 printing attribute class implements to indicate the attribute denotes a
 requested setting for a print job.
interface
PrintServiceAttribute
Interface
PrintServiceAttribute
is a tagging interface which a
 printing attribute class implements to indicate the attribute describes the
 status of a Print Service or some other characteristic of a Print Service.
interface
SupportedValuesAttribute
Interface
SupportedValuesAttribute
is a tagging interface which a
 printing attribute class implements to indicate the attribute describes the
 supported values for another attribute.
Classes in
javax.print.attribute
that implement
Serializable
Modifier and Type
Class
Description
class
DateTimeSyntax
Class
DateTimeSyntax
is an abstract base class providing the common
 implementation of all attributes whose value is a date and time.
class
EnumSyntax
Class
EnumSyntax
is an abstract base class providing the common
 implementation of all "type safe enumeration" objects.
class
HashAttributeSet
Class
HashAttributeSet
provides an
AttributeSet
implementation with characteristics of a hash map.
class
HashDocAttributeSet
Class
HashDocAttributeSet
provides an attribute set which inherits
 its implementation from class
HashAttributeSet
and
 enforces the semantic restrictions of interface
DocAttributeSet
.
class
HashPrintJobAttributeSet
Class
HashPrintJobAttributeSet
provides an attribute set which
 inherits its implementation from class
HashAttributeSet
and enforces the semantic
 restrictions of interface
PrintJobAttributeSet
.
class
HashPrintRequestAttributeSet
Class
HashPrintRequestAttributeSet
inherits its implementation from
 class
HashAttributeSet
and enforces the semantic
 restrictions of interface
PrintRequestAttributeSet
.
class
HashPrintServiceAttributeSet
Class
HashPrintServiceAttributeSet
provides an attribute set which
 inherits its implementation from class
HashAttributeSet
and enforces the semantic
 restrictions of interface
PrintServiceAttributeSet
.
class
IntegerSyntax
Class
IntegerSyntax
is an abstract base class providing the common
 implementation of all attributes with integer values.
class
ResolutionSyntax
Class
ResolutionSyntax
is an abstract base class providing the common
 implementation of all attributes denoting a printer resolution.
class
SetOfIntegerSyntax
Class
SetOfIntegerSyntax
is an abstract base class providing the
 common implementation of all attributes whose value is a set of nonnegative
 integers.
class
Size2DSyntax
Class
Size2DSyntax
is an abstract base class providing the common
 implementation of all attributes denoting a size in two dimensions.
class
TextSyntax
Class
TextSyntax
is an abstract base class providing the common
 implementation of all attributes whose value is a string.
class
UnmodifiableSetException
Thrown to indicate that the requested operation cannot be performed because
 the set is unmodifiable.
class
URISyntax
Class
URISyntax
is an abstract base class providing the common
 implementation of all attributes whose value is a Uniform Resource Identifier
 (URI).
Uses of
Serializable
in
javax.print.attribute.standard
Classes in
javax.print.attribute.standard
that implement
Serializable
Modifier and Type
Class
Description
final class
Chromaticity
Class
Chromaticity
is a printing attribute class, an enumeration,
 that specifies monochrome or color printing.
final class
ColorSupported
Class
ColorSupported
is a printing attribute class, an enumeration,
 that identifies whether the device is capable of any type of color printing
 at all, including highlight color as well as full process color.
class
Compression
Class
Compression
is a printing attribute class, an enumeration, that
 specifies how print data is compressed.
final class
Copies
Class
Copies
is an integer valued printing attribute class that
 specifies the number of copies to be printed.
final class
CopiesSupported
Class
CopiesSupported
is a printing attribute class, a set of
 integers, that gives the supported values for a
Copies
attribute.
final class
DateTimeAtCompleted
Class
DateTimeAtCompleted
is a printing attribute class, a date-time
 attribute, that indicates the date and time at which the Print Job completed
 (or was canceled or aborted).
final class
DateTimeAtCreation
Class
DateTimeAtCreation
is a printing attribute class, a date-time
 attribute, that indicates the date and time at which the Print Job was
 created.
final class
DateTimeAtProcessing
Class
DateTimeAtProcessing
is a printing attribute class, a date-time
 attribute, that indicates the date and time at which the Print Job first
 began processing.
final class
Destination
Class
Destination
is a printing attribute class, a
URI
, that
 is used to indicate an alternate destination for the spooled printer
 formatted data.
final class
DialogOwner
An attribute class used to support requesting a print or page setup dialog
 be kept displayed on top of all windows or some specific window.
final class
DialogTypeSelection
Class
DialogTypeSelection
is a printing attribute class, an
 enumeration, that indicates the user dialog type to be used for specifying
 printing options.
final class
DocumentName
Class
DocumentName
is a printing attribute class, a text attribute,
 that specifies the name of a document.
final class
Fidelity
Class
Fidelity
is a printing attribute class, an enumeration, that
 indicates whether total fidelity to client supplied print request attributes
 is required.
class
Finishings
Class
Finishings
is a printing attribute class, an enumeration, that
 identifies whether the printer applies a finishing operation of some kind of
 binding to each copy of each printed document in the job.
final class
JobHoldUntil
Class
JobHoldUntil
is a printing attribute class, a date-time
 attribute, that specifies the exact date and time at which the job must
 become a candidate for printing.
final class
JobImpressions
Class
JobImpressions
is an integer valued printing attribute class
 that specifies the total size in number of impressions of the document(s)
 being submitted.
final class
JobImpressionsCompleted
Class
JobImpressionsCompleted
is an integer valued printing attribute
 class that specifies the number of impressions completed for the job so far.
final class
JobImpressionsSupported
Class
JobImpressionsSupported
is a printing attribute class, a set of
 integers, that gives the supported values for a
JobImpressions
attribute.
final class
JobKOctets
Class
JobKOctets
is an integer valued printing attribute class that
 specifies the total size of the document(s) in K octets, i.e., in units of
 1024 octets requested to be processed in the job.
final class
JobKOctetsProcessed
Class
JobKOctetsProcessed
is an integer valued printing attribute
 class that specifies the total number of print data octets processed so far
 in K octets, i.e., in units of 1024 octets.
final class
JobKOctetsSupported
Class
JobKOctetsSupported
is a printing attribute class, a set of
 integers, that gives the supported values for a
JobKOctets
attribute.
class
JobMediaSheets
Class
JobMediaSheets
is an integer valued printing attribute class
 that specifies the total number of media sheets to be produced for this job.
final class
JobMediaSheetsCompleted
Class
JobMediaSheetsCompleted
is an integer valued printing attribute
 class that specifies the number of media sheets which have completed marking
 and stacking for the entire job so far, whether those sheets have been
 processed on one side or on both.
final class
JobMediaSheetsSupported
Class
JobMediaSheetsSupported
is a printing attribute class, a set of
 integers, that gives the supported values for a
JobMediaSheets
attribute.
final class
JobMessageFromOperator
Class
JobMessageFromOperator
is a printing attribute class, a text
 attribute, that provides a message from an operator, system administrator, or
 "intelligent" process to indicate to the end user the reasons for
 modification or other management action taken on a job.
final class
JobName
Class
JobName
is a printing attribute class, a text attribute, that
 specifies the name of a print job.
final class
JobOriginatingUserName
Class
JobOriginatingUserName
is a printing attribute class, a text
 attribute, that contains the name of the end user that submitted the print
 job.
final class
JobPriority
Class
JobPriority
is an integer valued printing attribute class that
 specifies a print job's priority.
final class
JobPrioritySupported
Class
JobPrioritySupported
is an integer valued printing attribute
 class that specifies whether a Print Service instance supports the
JobPriority
attribute and the number of different job
 priority levels supported.
class
JobSheets
Class
JobSheets
is a printing attribute class, an enumeration, that
 determines which job start and end sheets, if any, must be printed with a
 job.
class
JobState
JobState
is a printing attribute class, an enumeration, that
 identifies the current state of a print job.
class
JobStateReason
Class
JobStateReason
is a printing attribute class, an enumeration,
 that provides additional information about the job's current state, i.e.,
 information that augments the value of the job's
JobState
attribute.
final class
JobStateReasons
Class
JobStateReasons
is a printing attribute class, a set of
 enumeration values, that provides additional information about the job's
 current state, i.e., information that augments the value of the job's
JobState
attribute.
class
Media
Class
Media
is a printing attribute class that specifies the medium
 on which to print.
class
MediaName
Class
MediaName
is a subclass of
Media
, a printing attribute
 class (an enumeration) that specifies the media for a print job as a name.
final class
MediaPrintableArea
Class
MediaPrintableArea
is a printing attribute used to distinguish
 the printable and non-printable areas of media.
class
MediaSize
Class
MediaSize
is a two-dimensional size valued printing attribute
 class that indicates the dimensions of the medium in a portrait orientation,
 with the
X
dimension running along the bottom edge and the
Y
dimension running along the left edge.
class
MediaSizeName
Class
MediaSizeName
is a subclass of
Media
.
class
MediaTray
Class
MediaTray
is a subclass of
Media
.
class
MultipleDocumentHandling
Class
MultipleDocumentHandling
is a printing attribute class, an
 enumeration, that controls finishing operations and the placement of one or
 more print-stream pages into impressions and onto media sheets.
final class
NumberOfDocuments
Class
NumberOfDocuments
is an integer valued printing attribute that
 indicates the number of individual docs the printer has accepted for this
 job, regardless of whether the docs' print data has reached the printer or
 not.
final class
NumberOfInterveningJobs
Class
NumberOfInterveningJobs
is an integer valued printing attribute
 that indicates the number of jobs that are ahead of this job in the relative
 chronological order of expected time to complete (i.e., the current scheduled
 order).
final class
NumberUp
Class
NumberUp
is an integer valued printing attribute class that
 specifies the number of print-stream pages to impose upon a single side of an
 instance of a selected medium.
final class
NumberUpSupported
Class
NumberUpSupported
is a printing attribute class, a set of
 integers, that gives the supported values for a
NumberUp
attribute.
final class
OrientationRequested
Class
OrientationRequested
is a printing attribute class, an
 enumeration, that indicates the desired orientation for printed print-stream
 pages; it does not describe the orientation of the client-supplied
 print-stream pages.
final class
OutputDeviceAssigned
Class
OutputDeviceAssigned
is a printing attribute class, a text
 attribute, that identifies the output device to which the service has
 assigned this job.
final class
PageRanges
Class
PageRanges
is a printing attribute class, a set of integers,
 that identifies the range(s) of print-stream pages that the Printer object
 uses for each copy of each document which are to be printed.
final class
PagesPerMinute
Class
PagesPerMinute
is an integer valued printing attribute that
 indicates the nominal number of pages per minute to the nearest whole number
 which may be generated by this printer (e.g., simplex, black-and-white).
final class
PagesPerMinuteColor
Class
PagesPerMinuteColor
is an integer valued printing attribute
 that indicates the nominal number of pages per minute to the nearest whole
 number which may be generated by this printer when printing color (e.g.,
 simplex, color).
class
PDLOverrideSupported
Class
PDLOverrideSupported
is a printing attribute class, an
 enumeration, that expresses the printer's ability to attempt to override
 processing instructions embedded in documents' print data with processing
 instructions specified as attributes outside the print data.
final class
PresentationDirection
Class
PresentationDirection
is a printing attribute class, an
 enumeration, that is used in conjunction with the
NumberUp
attribute to indicate the layout of multiple print-stream pages to impose
 upon a single side of an instance of a selected medium.
final class
PrinterInfo
Class
PrinterInfo
is a printing attribute class, a text attribute,
 that provides descriptive information about a printer.
final class
PrinterIsAcceptingJobs
Class
PrinterIsAcceptingJobs
is a printing attribute class, an
 enumeration, that indicates whether the printer is currently able to accept
 jobs.
final class
PrinterLocation
Class
PrinterLocation
is a printing attribute class, a text
 attribute, that identifies the location of the device.
final class
PrinterMakeAndModel
Class
PrinterMakeAndModel
is a printing attribute class, a text
 attribute, that the make and model of the printer.
final class
PrinterMessageFromOperator
Class
PrinterMessageFromOperator
is a printing attribute class, a
 text attribute, that provides a message from an operator, system
 administrator, or "intelligent" process to indicate to the end user
 information about or status of the printer, such as why it is unavailable or
 when it is expected to be available.
final class
PrinterMoreInfo
Class
PrinterMoreInfo
is a printing attribute class, a
URI
,
 that is used to obtain more information about this specific printer.
final class
PrinterMoreInfoManufacturer
Class
PrinterMoreInfoManufacturer
is a printing attribute class, a
URI
, that is used to obtain more information about this type of
 device.
final class
PrinterName
Class
PrinterName
is a printing attribute class, a text attribute,
 that specifies the name of a printer.
final class
PrinterResolution
Class
PrinterResolution
is a printing attribute class that specifies
 an exact resolution supported by a printer or to be used for a print job.
final class
PrinterState
Class
PrinterState
is a printing attribute class, an enumeration,
 that identifies the current state of a printer.
class
PrinterStateReason
Class
PrinterStateReason
is a printing attribute class, an
 enumeration, that provides additional information about the printer's current
 state, i.e., information that augments the value of the printer's
PrinterState
attribute.
final class
PrinterStateReasons
Class
PrinterStateReasons
is a printing attribute class, a set of
 enumeration values, that provides additional information about the printer's
 current state, i.e., information that augments the value of the printer's
PrinterState
attribute.
final class
PrinterURI
Class
PrinterURI
is a printing attribute class, a
URI
, that
 specifies the globally unique name of a printer.
class
PrintQuality
Class
PrintQuality
is a printing attribute class, an enumeration,
 that specifies the print quality that the printer uses for the job.
final class
QueuedJobCount
Class
QueuedJobCount
is an integer valued printing attribute that
 indicates the number of jobs in the printer whose
JobState
is either
PENDING
,
PENDING_HELD
,
PROCESSING
, or
PROCESSING_STOPPED
.
class
ReferenceUriSchemesSupported
Class
ReferenceUriSchemesSupported
is a printing attribute class an
 enumeration, that indicates a "URI scheme," such as "http:" or "ftp:", that a
 printer can use to retrieve print data stored at a
URI
location.
final class
RequestingUserName
Class
RequestingUserName
is a printing attribute class, a text
 attribute, that specifies the name of the end user that submitted the print
 job.
final class
Severity
Class
Severity
is a printing attribute class, an enumeration, that
 denotes the severity of a
PrinterStateReason
attribute.
final class
SheetCollate
Class
SheetCollate
is a printing attribute class, an enumeration,
 that specifies whether or not the media sheets of each copy of each printed
 document in a job are to be in sequence, when multiple copies of the document
 are specified by the
Copies
attribute.
final class
Sides
Class
Sides
is a printing attribute class, an enumeration, that
 specifies how print-stream pages are to be imposed upon the sides of an
 instance of a selected medium, i.e., an impression.
Uses of
Serializable
in
javax.print.event
Classes in
javax.print.event
that implement
Serializable
Modifier and Type
Class
Description
class
PrintEvent
Class
PrintEvent
is the super class of all Print Service API events.
class
PrintJobAttributeEvent
Class
PrintJobAttributeEvent
encapsulates an event a
PrintService
reports to let the client know that one or more printing
 attributes for a
PrintJob
have changed.
class
PrintJobEvent
Class
PrintJobEvent
encapsulates common events a print job reports to
 let a listener know of progress in the processing of the
DocPrintJob
.
class
PrintServiceAttributeEvent
Class
PrintServiceAttributeEvent
encapsulates an event a Print
 Service instance reports to let the client know of changes in the print
 service state.
Uses of
Serializable
in
javax.rmi.ssl
Classes in
javax.rmi.ssl
that implement
Serializable
Modifier and Type
Class
Description
class
SslRMIClientSocketFactory
An
SslRMIClientSocketFactory
instance is used by the RMI
 runtime in order to obtain client sockets for RMI calls via SSL.
Uses of
Serializable
in
javax.script
Classes in
javax.script
that implement
Serializable
Modifier and Type
Class
Description
class
ScriptException
The generic
Exception
class for the Scripting APIs.
Uses of
Serializable
in
javax.security.auth
Classes in
javax.security.auth
that implement
Serializable
Modifier and Type
Class
Description
final class
AuthPermission
This class is for authentication permissions.
class
DestroyFailedException
Signals that a
destroy
operation failed.
final class
PrivateCredentialPermission
This class is used to protect access to private Credentials
 belonging to a particular
Subject
.
class
RefreshFailedException
Signals that a
refresh
operation failed.
final class
Subject
A
Subject
represents a grouping of related information
 for a single entity, such as a person.
Uses of
Serializable
in
javax.security.auth.callback
Classes in
javax.security.auth.callback
that implement
Serializable
Modifier and Type
Class
Description
class
ChoiceCallback
Underlying security services instantiate and pass a
ChoiceCallback
to the
handle
method of a
CallbackHandler
to display a list of choices
 and to retrieve the selected choice(s).
class
ConfirmationCallback
Underlying security services instantiate and pass a
ConfirmationCallback
to the
handle
method of a
CallbackHandler
to ask for YES/NO,
 OK/CANCEL, YES/NO/CANCEL or other similar confirmations.
class
LanguageCallback
Underlying security services instantiate and pass a
LanguageCallback
to the
handle
method of a
CallbackHandler
to retrieve the
Locale
used for localizing text.
class
NameCallback
Underlying security services instantiate and pass a
NameCallback
to the
handle
method of a
CallbackHandler
to retrieve name information.
class
PasswordCallback
Underlying security services instantiate and pass a
PasswordCallback
to the
handle
method of a
CallbackHandler
to retrieve password information.
class
TextInputCallback
Underlying security services instantiate and pass a
TextInputCallback
to the
handle
method of a
CallbackHandler
to retrieve generic text
 information.
class
TextOutputCallback
Underlying security services instantiate and pass a
TextOutputCallback
to the
handle
method of a
CallbackHandler
to display information messages,
 warning messages and error messages.
class
UnsupportedCallbackException
Signals that a
CallbackHandler
does not
 recognize a particular
Callback
.
Uses of
Serializable
in
javax.security.auth.kerberos
Classes in
javax.security.auth.kerberos
that implement
Serializable
Modifier and Type
Class
Description
final class
DelegationPermission
This class is used to restrict the usage of the Kerberos
 delegation model, ie: forwardable and proxiable tickets.
final class
EncryptionKey
This class encapsulates an EncryptionKey used in Kerberos.
class
KerberosKey
This class encapsulates a long term secret key for a Kerberos
 principal.
final class
KerberosPrincipal
This class encapsulates a Kerberos principal.
class
KerberosTicket
This class encapsulates a Kerberos ticket and associated
 information as viewed from the client's point of view.
final class
ServicePermission
This class is used to protect Kerberos services and the
 credentials necessary to access those services.
Uses of
Serializable
in
javax.security.auth.login
Classes in
javax.security.auth.login
that implement
Serializable
Modifier and Type
Class
Description
class
AccountException
A generic account exception.
class
AccountExpiredException
Signals that a user account has expired.
class
AccountLockedException
Signals that an account was locked.
class
AccountNotFoundException
Signals that an account was not found.
class
CredentialException
A generic credential exception.
class
CredentialExpiredException
Signals that a
Credential
has expired.
class
CredentialNotFoundException
Signals that a credential was not found.
class
FailedLoginException
Signals that user authentication failed.
class
LoginException
This is the basic login exception.
Uses of
Serializable
in
javax.security.auth.x500
Classes in
javax.security.auth.x500
that implement
Serializable
Modifier and Type
Class
Description
final class
X500Principal
This class represents an X.500
Principal
.
Uses of
Serializable
in
javax.security.cert
Classes in
javax.security.cert
that implement
Serializable
Modifier and Type
Class
Description
class
CertificateEncodingException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateExpiredException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateNotYetValidException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateParsingException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
Uses of
Serializable
in
javax.security.sasl
Classes in
javax.security.sasl
that implement
Serializable
Modifier and Type
Class
Description
class
AuthenticationException
This exception is thrown by a SASL mechanism implementation
 to indicate that the SASL
 exchange has failed due to reasons related to authentication, such as
 an invalid identity, passphrase, or key.
class
AuthorizeCallback
This callback is used by
SaslServer
to determine whether
 one entity (identified by an authenticated authentication id)
 can act on
 behalf of another entity (identified by an authorization id).
class
RealmCallback
This callback is used by
SaslClient
and
SaslServer
to retrieve realm information.
class
RealmChoiceCallback
This callback is used by
SaslClient
and
SaslServer
to obtain a realm given a list of realm choices.
class
SaslException
This class represents an error that has occurred when using SASL.
Uses of
Serializable
in
javax.smartcardio
Classes in
javax.smartcardio
that implement
Serializable
Modifier and Type
Class
Description
final class
ATR
A Smart Card's answer-to-reset bytes.
class
CardException
Exception for errors that occur during communication with the
 Smart Card stack or the card itself.
class
CardNotPresentException
Exception thrown when an application tries to establish a connection with a
 terminal that has no card present.
class
CardPermission
A permission for Smart Card operations.
static enum
CardTerminals.State
Enumeration of attributes of a CardTerminal.
final class
CommandAPDU
A command APDU following the structure defined in ISO/IEC 7816-4.
final class
ResponseAPDU
A response APDU as defined in ISO/IEC 7816-4.
Uses of
Serializable
in
javax.sound.midi
Classes in
javax.sound.midi
that implement
Serializable
Modifier and Type
Class
Description
class
InvalidMidiDataException
An
InvalidMidiDataException
indicates that inappropriate MIDI data
 was encountered.
class
MidiUnavailableException
A
MidiUnavailableException
is thrown when a requested MIDI component
 cannot be opened or created because it is unavailable.
Uses of
Serializable
in
javax.sound.sampled
Classes in
javax.sound.sampled
that implement
Serializable
Modifier and Type
Class
Description
class
AudioPermission
The
AudioPermission
class represents access rights to the audio
 system resources.
class
LineEvent
The
LineEvent
class encapsulates information that a line sends its
 listeners whenever the line opens, closes, starts, or stops.
class
LineUnavailableException
A
LineUnavailableException
is an exception indicating that a line
 cannot be opened because it is unavailable.
class
UnsupportedAudioFileException
An
UnsupportedAudioFileException
is an exception indicating that an
 operation failed because a file did not contain valid data of a recognized
 file type and format.
Uses of
Serializable
in
javax.sql
Classes in
javax.sql
that implement
Serializable
Modifier and Type
Class
Description
class
ConnectionEvent
An
Event
object that provides information about the
 source of a connection-related event.
class
RowSetEvent
An
Event
object generated when an event occurs to a
RowSet
object.
class
StatementEvent
A
StatementEvent
is sent to all
StatementEventListener
s which were
 registered with a
PooledConnection
.
Uses of
Serializable
in
javax.sql.rowset
Classes in
javax.sql.rowset
that implement
Serializable
Modifier and Type
Class
Description
class
BaseRowSet
An abstract class providing a
RowSet
object with its basic functionality.
class
RowSetMetaDataImpl
Provides implementations for the methods that set and get
 metadata information about a
RowSet
object's columns.
class
RowSetWarning
An extension of
SQLException
that provides information
 about database warnings set on
RowSet
objects.
Uses of
Serializable
in
javax.sql.rowset.serial
Classes in
javax.sql.rowset.serial
that implement
Serializable
Modifier and Type
Class
Description
class
SerialArray
A serialized version of an
Array
object, which is the mapping in the Java programming language of an SQL
ARRAY
value.
class
SerialBlob
A serialized mapping in the Java programming language of an SQL
BLOB
value.
class
SerialClob
A serialized mapping in the Java programming language of an SQL
CLOB
value.
class
SerialDatalink
A serialized mapping in the Java programming language of an SQL
DATALINK
value.
class
SerialException
Indicates and an error with the serialization or de-serialization of
 SQL types such as
BLOB, CLOB, STRUCT or ARRAY
in
 addition to SQL types such as
DATALINK and JAVAOBJECT
class
SerialJavaObject
A serializable mapping in the Java programming language of an SQL
JAVA_OBJECT
value.
class
SerialRef
A serialized mapping of a
Ref
object, which is the mapping in the
 Java programming language of an SQL
REF
value.
class
SerialStruct
A serialized mapping in the Java programming language of an SQL
 structured type.
Uses of
Serializable
in
javax.sql.rowset.spi
Classes in
javax.sql.rowset.spi
that implement
Serializable
Modifier and Type
Class
Description
class
SyncFactoryException
Indicates an error with
SyncFactory
mechanism.
class
SyncProviderException
Indicates an error with the
SyncProvider
mechanism.
Uses of
Serializable
in
javax.swing
Classes in
javax.swing
that implement
Serializable
Modifier and Type
Class
Description
class
AbstractAction
This class provides default implementations for the JFC
Action
interface.
class
AbstractButton
Defines common behaviors for buttons and menu items.
protected class
AbstractButton.AccessibleAbstractButton
This class implements accessibility support for the
AbstractButton
class.
protected class
AbstractButton.ButtonChangeListener
Extends
ChangeListener
to be serializable.
class
AbstractCellEditor
A base class for
CellEditors
, providing default
 implementations for the methods in the
CellEditor
interface except
getCellEditorValue()
.
class
AbstractListModel
<E>
The abstract definition for the data model that provides
 a
List
with its contents.
class
AbstractSpinnerModel
This class provides the ChangeListener part of the
 SpinnerModel interface that should be suitable for most concrete SpinnerModel
 implementations.
class
ActionMap
ActionMap
provides mappings from
Object
s
 (called
keys
or
Action
names
)
 to
Action
s.
class
Box
A lightweight container
 that uses a BoxLayout object as its layout manager.
protected class
Box.AccessibleBox
This class implements accessibility support for the
Box
class.
static class
Box.Filler
An implementation of a lightweight component that participates in
 layout but has no view.
protected class
Box.Filler.AccessibleBoxFiller
This class implements accessibility support for the
Box.Filler
class.
class
BoxLayout
A layout manager that allows multiple components to be laid out either
 vertically or horizontally.
class
ButtonGroup
This class is used to create a multiple-exclusion scope for
 a set of buttons.
class
CellRendererPane
This class is inserted in between cell renderers and the components that
 use them.
protected class
CellRendererPane.AccessibleCellRendererPane
This class implements accessibility support for the
CellRendererPane
class.
class
ComponentInputMap
A
ComponentInputMap
is an
InputMap
associated with a particular
JComponent
.
class
DefaultBoundedRangeModel
A generic implementation of BoundedRangeModel.
class
DefaultButtonModel
The default implementation of a
Button
component's data model.
class
DefaultCellEditor
The default editor for table and tree cells.
protected class
DefaultCellEditor.EditorDelegate
The protected
EditorDelegate
class.
class
DefaultComboBoxModel
<E>
The default model for combo boxes.
class
DefaultDesktopManager
This is an implementation of the
DesktopManager
.
class
DefaultListCellRenderer
Renders an item in a list.
static class
DefaultListCellRenderer.UIResource
A subclass of DefaultListCellRenderer that implements UIResource.
class
DefaultListModel
<E>
This class loosely implements the
java.util.Vector
API, in that it implements the 1.1.x version of
java.util.Vector
, has no collection class support,
 and notifies the
ListDataListener
s when changes occur.
class
DefaultListSelectionModel
Default data model for list selections.
class
DefaultSingleSelectionModel
A generic implementation of SingleSelectionModel.
enum
DropMode
Drop modes, used to determine the method by which a component
 tracks and indicates a drop location during drag and drop.
static enum
GroupLayout.Alignment
Enumeration of the possible ways
ParallelGroup
can align
 its children.
class
ImageIcon
An implementation of the Icon interface that paints Icons
 from Images.
protected class
ImageIcon.AccessibleImageIcon
This class implements accessibility support for the
ImageIcon
class.
class
InputMap
InputMap
provides a binding between an input event (currently only
KeyStroke
s are used) and an
Object
.
class
JApplet
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated, no replacement.
protected class
JApplet.AccessibleJApplet
Deprecated, for removal: This API element is subject to removal in a future version.
This class implements accessibility support for the
JApplet
class.
class
JButton
An implementation of a "push" button.
protected class
JButton.AccessibleJButton
This class implements accessibility support for the
JButton
class.
class
JCheckBox
An implementation of a check box -- an item that can be selected or
 deselected, and which displays its state to the user.
protected class
JCheckBox.AccessibleJCheckBox
This class implements accessibility support for the
JCheckBox
class.
class
JCheckBoxMenuItem
A menu item that can be selected or deselected.
protected class
JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem
This class implements accessibility support for the
JCheckBoxMenuItem
class.
class
JColorChooser
JColorChooser
provides a pane of controls designed to allow
 a user to manipulate and select a color.
protected class
JColorChooser.AccessibleJColorChooser
This class implements accessibility support for the
JColorChooser
class.
class
JComboBox
<E>
A component that combines a button or editable field and a drop-down list.
protected class
JComboBox.AccessibleJComboBox
This class implements accessibility support for the
JComboBox
class.
class
JComponent
The base class for all Swing components except top-level containers.
class
JComponent.AccessibleJComponent
Inner class of JComponent used to provide default support for
 accessibility.
class
JDesktopPane
A container used to create a multiple-document interface or a virtual desktop.
protected class
JDesktopPane.AccessibleJDesktopPane
This class implements accessibility support for the
JDesktopPane
class.
class
JDialog
The main class for creating a dialog window.
protected class
JDialog.AccessibleJDialog
This class implements accessibility support for the
JDialog
class.
class
JEditorPane
A text component to edit various kinds of content.
protected class
JEditorPane.AccessibleJEditorPane
This class implements accessibility support for the
JEditorPane
class.
protected class
JEditorPane.AccessibleJEditorPaneHTML
This class provides support for
AccessibleHypertext
,
 and is used in instances where the
EditorKit
installed in this
JEditorPane
is an instance of
HTMLEditorKit
.
protected class
JEditorPane.JEditorPaneAccessibleHypertextSupport
What's returned by
AccessibleJEditorPaneHTML.getAccessibleText
.
class
JFileChooser
JFileChooser
provides a simple mechanism for the user to
 choose a file.
protected class
JFileChooser.AccessibleJFileChooser
This class implements accessibility support for the
JFileChooser
class.
class
JFormattedTextField
JFormattedTextField
extends
JTextField
adding
 support for formatting arbitrary values, as well as retrieving a particular
 object once the user has edited the text.
static class
JFormattedTextField.AbstractFormatter
Instances of
AbstractFormatter
are used by
JFormattedTextField
to handle the conversion both
 from an Object to a String, and back from a String to an Object.
class
JFrame
An extended version of
java.awt.Frame
that adds support for
 the JFC/Swing component architecture.
protected class
JFrame.AccessibleJFrame
This class implements accessibility support for the
JFrame
class.
class
JInternalFrame
A lightweight object that provides many of the features of
 a native frame, including dragging, closing, becoming an icon,
 resizing, title display, and support for a menu bar.
protected class
JInternalFrame.AccessibleJInternalFrame
This class implements accessibility support for the
JInternalFrame
class.
static class
JInternalFrame.JDesktopIcon
This component represents an iconified version of a
JInternalFrame
.
protected class
JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon
This class implements accessibility support for the
JInternalFrame.JDesktopIcon
class.
class
JLabel
A display area for a short text string or an image,
 or both.
protected class
JLabel.AccessibleJLabel
The class used to obtain the accessible role for this object.
final class
JLayer
<V extends
Component
>
JLayer
is a universal decorator for Swing components
 which enables you to implement various advanced painting effects as well as
 receive notifications of all
AWTEvent
s generated within its borders.
class
JLayeredPane
JLayeredPane
adds depth to a JFC/Swing container,
 allowing components to overlap each other when needed.
protected class
JLayeredPane.AccessibleJLayeredPane
This class implements accessibility support for the
JLayeredPane
class.
class
JList
<E>
A component that displays a list of objects and allows the user to select
 one or more items.
protected class
JList.AccessibleJList
This class implements accessibility support for the
JList
class.
class
JMenu
An implementation of a menu -- a popup window containing
JMenuItem
s that
 is displayed when the user selects an item on the
JMenuBar
.
protected class
JMenu.AccessibleJMenu
This class implements accessibility support for the
JMenu
class.
protected class
JMenu.WinListener
A listener class that watches for a popup window closing.
class
JMenuBar
An implementation of a menu bar.
protected class
JMenuBar.AccessibleJMenuBar
This class implements accessibility support for the
JMenuBar
class.
class
JMenuItem
An implementation of an item in a menu.
protected class
JMenuItem.AccessibleJMenuItem
This class implements accessibility support for the
JMenuItem
class.
class
JOptionPane
JOptionPane
makes it easy to pop up a standard dialog box that
 prompts users for a value or informs them of something.
protected class
JOptionPane.AccessibleJOptionPane
This class implements accessibility support for the
JOptionPane
class.
class
JPanel
JPanel
is a generic lightweight container.
protected class
JPanel.AccessibleJPanel
This class implements accessibility support for the
JPanel
class.
class
JPasswordField
JPasswordField
is a lightweight component that allows
 the editing of a single line of text where the view indicates
 something was typed, but does not show the original characters.
protected class
JPasswordField.AccessibleJPasswordField
This class implements accessibility support for the
JPasswordField
class.
class
JPopupMenu
An implementation of a popup menu -- a small window that pops up
 and displays a series of choices.
protected class
JPopupMenu.AccessibleJPopupMenu
This class implements accessibility support for the
JPopupMenu
class.
static class
JPopupMenu.Separator
A popup menu-specific separator.
class
JProgressBar
A component that visually displays the progress of some task.
protected class
JProgressBar.AccessibleJProgressBar
This class implements accessibility support for the
JProgressBar
class.
class
JRadioButton
An implementation of a radio button -- an item that can be selected or
 deselected, and which displays its state to the user.
protected class
JRadioButton.AccessibleJRadioButton
This class implements accessibility support for the
JRadioButton
class.
class
JRadioButtonMenuItem
An implementation of a radio button menu item.
protected class
JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem
This class implements accessibility support for the
JRadioButtonMenuItem
class.
class
JRootPane
A lightweight container used behind the scenes by
JFrame
,
JDialog
,
JWindow
,
JApplet
, and
JInternalFrame
.
protected class
JRootPane.AccessibleJRootPane
This class implements accessibility support for the
JRootPane
class.
protected class
JRootPane.RootLayout
A custom layout manager that is responsible for the layout of
 layeredPane, glassPane, and menuBar.
class
JScrollBar
An implementation of a scrollbar.
protected class
JScrollBar.AccessibleJScrollBar
This class implements accessibility support for the
JScrollBar
class.
class
JScrollPane
Provides a scrollable view of a lightweight component.
protected class
JScrollPane.AccessibleJScrollPane
This class implements accessibility support for the
JScrollPane
class.
protected class
JScrollPane.ScrollBar
By default
JScrollPane
creates scrollbars
 that are instances
 of this class.
class
JSeparator
JSeparator
provides a general purpose component for
 implementing divider lines - most commonly used as a divider
 between menu items that breaks them up into logical groupings.
protected class
JSeparator.AccessibleJSeparator
This class implements accessibility support for the
JSeparator
class.
class
JSlider
A component that lets the user graphically select a value by sliding
 a knob within a bounded interval.
protected class
JSlider.AccessibleJSlider
This class implements accessibility support for the
JSlider
class.
class
JSpinner
A single line input field that lets the user select a
 number or an object value from an ordered sequence.
protected class
JSpinner.AccessibleJSpinner
AccessibleJSpinner
implements accessibility
 support for the
JSpinner
class.
static class
JSpinner.DateEditor
An editor for a
JSpinner
whose model is a
SpinnerDateModel
.
static class
JSpinner.DefaultEditor
A simple base class for more specialized editors
 that displays a read-only view of the model's current
 value with a
JFormattedTextField
.
static class
JSpinner.ListEditor
An editor for a
JSpinner
whose model is a
SpinnerListModel
.
static class
JSpinner.NumberEditor
An editor for a
JSpinner
whose model is a
SpinnerNumberModel
.
class
JSplitPane
JSplitPane
is used to divide two (and only two)
Component
s.
protected class
JSplitPane.AccessibleJSplitPane
This class implements accessibility support for the
JSplitPane
class.
class
JTabbedPane
A component that lets the user switch between a group of components by
 clicking on a tab with a given title and/or icon.
protected class
JTabbedPane.AccessibleJTabbedPane
This class implements accessibility support for the
JTabbedPane
class.
protected class
JTabbedPane.ModelListener
We pass
ModelChanged
events along to the listeners with
 the tabbedpane (instead of the model itself) as the event source.
class
JTable
The
JTable
is used to display and edit regular two-dimensional tables
 of cells.
protected class
JTable.AccessibleJTable
This class implements accessibility support for the
JTable
class.
static enum
JTable.PrintMode
Printing modes, used in printing
JTable
s.
class
JTextArea
A
JTextArea
is a multi-line area that displays plain text.
protected class
JTextArea.AccessibleJTextArea
This class implements accessibility support for the
JTextArea
class.
class
JTextField
JTextField
is a lightweight component that allows the editing
 of a single line of text.
protected class
JTextField.AccessibleJTextField
This class implements accessibility support for the
JTextField
class.
class
JTextPane
A text component that can be marked up with attributes that are
 represented graphically.
class
JToggleButton
An implementation of a two-state button.
protected class
JToggleButton.AccessibleJToggleButton
This class implements accessibility support for the
JToggleButton
class.
static class
JToggleButton.ToggleButtonModel
The ToggleButton model
class
JToolBar
JToolBar
provides a component that is useful for
 displaying commonly used
Action
s or controls.
protected class
JToolBar.AccessibleJToolBar
This class implements accessibility support for the
JToolBar
class.
static class
JToolBar.Separator
A toolbar-specific separator.
class
JToolTip
Used to display a "Tip" for a Component.
protected class
JToolTip.AccessibleJToolTip
This class implements accessibility support for the
JToolTip
class.
class
JTree
A control that displays a set of hierarchical data as an outline.
protected class
JTree.AccessibleJTree
This class implements accessibility support for the
JTree
class.
static class
JTree.DynamicUtilTreeNode
DynamicUtilTreeNode
can wrap
 vectors/hashtables/arrays/strings and
 create the appropriate children tree nodes as necessary.
protected static class
JTree.EmptySelectionModel
EmptySelectionModel
is a
TreeSelectionModel
that does not allow anything to be selected.
protected class
JTree.TreeSelectionRedirector
Handles creating a new
TreeSelectionEvent
with the
JTree
as the
 source and passing it off to all the listeners.
class
JViewport
The "viewport" or "porthole" through which you see the underlying
 information.
protected class
JViewport.AccessibleJViewport
This class implements accessibility support for the
JViewport
class.
protected class
JViewport.ViewListener
A listener for the view.
class
JWindow
A
JWindow
is a container that can be displayed anywhere on the
 user's desktop.
protected class
JWindow.AccessibleJWindow
This class implements accessibility support for the
JWindow
class.
class
KeyStroke
A KeyStroke represents a key action on the keyboard, or equivalent input
 device.
class
LayoutFocusTraversalPolicy
A SortingFocusTraversalPolicy which sorts Components based on their size,
 position, and orientation.
static enum
LayoutStyle.ComponentPlacement
ComponentPlacement
is an enumeration of the
 possible ways two components can be placed relative to each
 other.
class
OverlayLayout
A layout manager to arrange components over the top
 of each other.
static enum
RowFilter.ComparisonType
Enumeration of the possible comparison values supported by
 some of the default
RowFilter
s.
class
ScrollPaneLayout
The layout manager used by
JScrollPane
.
static class
ScrollPaneLayout.UIResource
The UI resource version of
ScrollPaneLayout
.
class
SizeRequirements
For the convenience of layout managers,
 calculates information about the size and position of components.
enum
SortOrder
SortOrder is an enumeration of the possible sort orderings.
class
SpinnerDateModel
A
SpinnerModel
for sequences of
Date
s.
class
SpinnerListModel
A simple implementation of
SpinnerModel
whose
 values are defined by an array or a
List
.
class
SpinnerNumberModel
A
SpinnerModel
for sequences of numbers.
static enum
SwingWorker.StateValue
Values for the
state
bound property.
class
Timer
Fires one or more
ActionEvent
s at specified
 intervals.
class
TransferHandler
This class is used to handle the transfer of a
Transferable
to and from Swing components.
class
UIDefaults
A table of defaults for Swing components.
class
UIManager
UIManager
manages the current look and feel, the set of
 available look and feels,
PropertyChangeListeners
that
 are notified when the look and feel changes, look and feel defaults, and
 convenience methods for obtaining various default values.
class
UnsupportedLookAndFeelException
An exception that indicates the requested look & feel
 management classes are not present on the user's system.
class
ViewportLayout
The default layout manager for
JViewport
.
Uses of
Serializable
in
javax.swing.border
Classes in
javax.swing.border
that implement
Serializable
Modifier and Type
Class
Description
class
AbstractBorder
A class that implements an empty border with no size.
class
BevelBorder
A class which implements a simple two-line bevel border.
class
CompoundBorder
A composite Border class used to compose two Border objects
 into a single border by nesting an inside Border object within
 the insets of an outside Border object.
class
EmptyBorder
A class which provides an empty, transparent border which
 takes up space but does no drawing.
class
EtchedBorder
A class which implements a simple etched border which can
 either be etched-in or etched-out.
class
LineBorder
A class which implements a line border of arbitrary thickness
 and of a single color.
class
MatteBorder
A class which provides a matte-like border of either a solid color
 or a tiled icon.
class
SoftBevelBorder
A class which implements a raised or lowered bevel with
 softened corners.
class
StrokeBorder
A class which implements a border of an arbitrary stroke.
class
TitledBorder
A class which implements an arbitrary border
 with the addition of a String title in a
 specified position and justification.
Uses of
Serializable
in
javax.swing.colorchooser
Classes in
javax.swing.colorchooser
that implement
Serializable
Modifier and Type
Class
Description
class
AbstractColorChooserPanel
This is the abstract superclass for color choosers.
class
DefaultColorSelectionModel
A generic implementation of
ColorSelectionModel
.
Uses of
Serializable
in
javax.swing.event
Classes in
javax.swing.event
that implement
Serializable
Modifier and Type
Class
Description
class
AncestorEvent
An event reported to a child component that originated from an
 ancestor in the component hierarchy.
class
CaretEvent
CaretEvent is used to notify interested parties that
 the text caret has changed in the event source.
class
ChangeEvent
ChangeEvent is used to notify interested parties that
 state has changed in the event source.
class
EventListenerList
A class that holds a list of EventListeners.
class
HyperlinkEvent
HyperlinkEvent is used to notify interested parties that
 something has happened with respect to a hypertext link.
class
InternalFrameEvent
An
AWTEvent
that adds support for
JInternalFrame
objects as the event source.
class
ListDataEvent
Defines an event that encapsulates changes to a list.
class
ListSelectionEvent
An event that characterizes a change in selection.
class
MenuDragMouseEvent
MenuDragMouseEvent is used to notify interested parties that
 the menu element has received a MouseEvent forwarded to it
 under drag conditions.
class
MenuEvent
MenuEvent is used to notify interested parties that
 the menu which is the event source has been posted,
 selected, or canceled.
class
MenuKeyEvent
MenuKeyEvent is used to notify interested parties that
 the menu element has received a KeyEvent forwarded to it
 in a menu tree.
class
PopupMenuEvent
PopupMenuEvent only contains the source of the event which is the JPopupMenu
 sending the event
class
RowSorterEvent
RowSorterEvent
provides notification of changes to
 a
RowSorter
.
static enum
RowSorterEvent.Type
Enumeration of the types of
RowSorterEvent
s.
final class
SwingPropertyChangeSupport
This subclass of
java.beans.PropertyChangeSupport
is almost
 identical in functionality.
class
TableColumnModelEvent
TableColumnModelEvent
is used to notify listeners that a table
 column model has changed, such as a column was added, removed, or
 moved.
class
TableModelEvent
TableModelEvent is used to notify listeners that a table model
 has changed.
class
TreeExpansionEvent
An event used to identify a single path in a tree.
class
TreeModelEvent
Encapsulates information describing changes to a tree model, and
 used to notify tree model listeners of the change.
class
TreeSelectionEvent
An event that characterizes a change in the current
 selection.
class
UndoableEditEvent
An event indicating that an operation which can be undone has occurred.
Uses of
Serializable
in
javax.swing.plaf
Classes in
javax.swing.plaf
that implement
Serializable
Modifier and Type
Class
Description
class
ActionMapUIResource
A subclass of javax.swing.ActionMap that implements UIResource.
class
BorderUIResource
A Border wrapper class which implements UIResource.
static class
BorderUIResource.BevelBorderUIResource
A bevel border UI resource.
static class
BorderUIResource.CompoundBorderUIResource
A compound border UI resource.
static class
BorderUIResource.EmptyBorderUIResource
An empty border UI resource.
static class
BorderUIResource.EtchedBorderUIResource
An etched border UI resource.
static class
BorderUIResource.LineBorderUIResource
A line border UI resource.
static class
BorderUIResource.MatteBorderUIResource
A matte border UI resource.
static class
BorderUIResource.TitledBorderUIResource
A titled border UI resource.
class
ColorUIResource
A subclass of Color that implements UIResource.
class
ComponentInputMapUIResource
A subclass of javax.swing.ComponentInputMap that implements UIResource.
class
DimensionUIResource
A subclass of
Dimension
that implements
UIResource
.
class
FontUIResource
A subclass of java.awt.Font that implements UIResource.
class
IconUIResource
An Icon wrapper class which implements UIResource.
class
InputMapUIResource
A subclass of javax.swing.InputMap that implements UIResource.
class
InsetsUIResource
A subclass of Insets that implements UIResource.
class
LayerUI
<V extends
Component
>
The base class for all
JLayer
's UI delegates.
Uses of
Serializable
in
javax.swing.plaf.basic
Classes in
javax.swing.plaf.basic
that implement
Serializable
Modifier and Type
Class
Description
class
BasicArrowButton
JButton object that draws a scaled Arrow in one of the cardinal directions.
static class
BasicBorders.ButtonBorder
Draws a border around a button.
static class
BasicBorders.FieldBorder
Draws the border around a field.
static class
BasicBorders.MarginBorder
Draws the border around components which support margins.
static class
BasicBorders.MenuBarBorder
Draws the border around a menu bar.
static class
BasicBorders.RadioButtonBorder
Draws the border around a radio button.
static class
BasicBorders.RolloverButtonBorder
Special thin border for rollover toolbar buttons.
static class
BasicBorders.ToggleButtonBorder
Draws the border around a toggle button.
class
BasicComboBoxRenderer
ComboBox renderer
static class
BasicComboBoxRenderer.UIResource
A subclass of BasicComboBoxRenderer that implements UIResource.
class
BasicComboPopup
This is a basic implementation of the
ComboPopup
interface.
protected class
BasicDesktopPaneUI.CloseAction
Handles closing an internal frame.
protected class
BasicDesktopPaneUI.MaximizeAction
Handles maximizing an internal frame.
protected class
BasicDesktopPaneUI.MinimizeAction
Handles minimizing an internal frame.
protected class
BasicDesktopPaneUI.NavigateAction
Handles navigating to the next internal frame.
protected class
BasicDesktopPaneUI.OpenAction
Handles restoring a minimized or maximized internal frame.
class
BasicDirectoryModel
Basic implementation of a file list.
protected class
BasicFileChooserUI.ApproveSelectionAction
Responds to an Open or Save request
protected class
BasicFileChooserUI.CancelSelectionAction
Responds to a cancel request.
protected class
BasicFileChooserUI.ChangeToParentDirectoryAction
Change to parent directory action.
protected class
BasicFileChooserUI.GoHomeAction
Acts on the "home" key event or equivalent event.
protected class
BasicFileChooserUI.NewFolderAction
Creates a new folder.
protected class
BasicFileChooserUI.UpdateAction
Rescans the files in the current directory
class
BasicIconFactory
Factory object that can vend Icons appropriate for the basic L & F.
class
BasicInternalFrameTitlePane
The class that manages a basic title bar
class
BasicInternalFrameTitlePane.CloseAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.IconifyAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.MaximizeAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.MoveAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.RestoreAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.SizeAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.SystemMenuBar
This class should be treated as a "protected" inner class.
class
BasicLookAndFeel
A base class to use in creating a look and feel for Swing.
class
BasicSliderUI.ActionScroller
As of Java 2 platform v1.3 this undocumented class is no longer used.
class
BasicSplitPaneDivider
Divider used by BasicSplitPaneUI.
static class
BasicTextUI.BasicCaret
Default implementation of the interface
Caret
.
protected class
BasicToolBarUI.DragWindow
The window which appears during dragging the
JToolBar
.
class
BasicTreeUI.TreeCancelEditingAction
ActionListener that invokes cancelEditing when action performed.
class
BasicTreeUI.TreeHomeAction
TreeHomeAction is used to handle end/home actions.
class
BasicTreeUI.TreeIncrementAction
TreeIncrementAction is used to handle up/down actions.
class
BasicTreeUI.TreePageAction
TreePageAction handles page up and page down events.
class
BasicTreeUI.TreeToggleAction
For the first selected row expandedness will be toggled.
class
BasicTreeUI.TreeTraverseAction
TreeTraverseAction
is the action used for left/right keys.
class
DefaultMenuLayout
The default layout manager for Popup menus and menubars.
Uses of
Serializable
in
javax.swing.plaf.metal
Classes in
javax.swing.plaf.metal
that implement
Serializable
Modifier and Type
Class
Description
static class
MetalBorders.ButtonBorder
The class represents the border of a
JButton
.
static class
MetalBorders.Flush3DBorder
The class represents the 3D border.
static class
MetalBorders.InternalFrameBorder
The class represents the border of a
JInternalFrame
.
static class
MetalBorders.MenuBarBorder
The class represents the border of a
JMenuBar
.
static class
MetalBorders.MenuItemBorder
The class represents the border of a
JMenuItem
.
static class
MetalBorders.OptionDialogBorder
The class represents the border of an option dialog.
static class
MetalBorders.PaletteBorder
Border for a Palette.
static class
MetalBorders.PopupMenuBorder
The class represents the border of a
JPopupMenu
.
static class
MetalBorders.RolloverButtonBorder
The class represents the border of a rollover
Button
.
static class
MetalBorders.ScrollPaneBorder
The class represents the border of a
JScrollPane
.
static class
MetalBorders.TableHeaderBorder
Border for a Table Header
static class
MetalBorders.TextFieldBorder
Border for a
JTextField
.
static class
MetalBorders.ToggleButtonBorder
Border for a
JToggleButton
.
static class
MetalBorders.ToolBarBorder
The class represents the border of a
JToolBar
.
class
MetalCheckBoxIcon
CheckboxIcon implementation for OrganicCheckBoxUI
class
MetalComboBoxButton
JButton subclass to help out MetalComboBoxUI
class
MetalComboBoxIcon
This utility class draws the horizontal bars which indicate a MetalComboBox
class
MetalComboBoxUI.MetalComboPopup
Deprecated.
As of Java 2 platform v1.4.
protected class
MetalFileChooserUI.DirectoryComboBoxAction
Acts when DirectoryComboBox has changed the selected item.
protected class
MetalFileChooserUI.DirectoryComboBoxModel
Data model for a type-face selection combo-box.
protected class
MetalFileChooserUI.FileRenderer
Deprecated.
As of JDK version 9.
protected class
MetalFileChooserUI.FilterComboBoxModel
Data model for a type-face selection combo-box.
class
MetalFileChooserUI.FilterComboBoxRenderer
Render different type sizes and styles.
class
MetalIconFactory
Factory object that vends
Icon
s for
 the Java look and feel (Metal).
static class
MetalIconFactory.FileIcon16
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
static class
MetalIconFactory.FolderIcon16
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
static class
MetalIconFactory.PaletteCloseIcon
Defines an icon for Palette close
static class
MetalIconFactory.TreeControlIcon
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
static class
MetalIconFactory.TreeFolderIcon
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
static class
MetalIconFactory.TreeLeafIcon
The class represents a tree leaf icon.
class
MetalInternalFrameTitlePane
Class that manages a JLF title bar
class
MetalLookAndFeel
The Java Look and Feel, otherwise known as Metal.
class
MetalScrollButton
JButton object for Metal scrollbar arrows.
Uses of
Serializable
in
javax.swing.plaf.nimbus
Classes in
javax.swing.plaf.nimbus
that implement
Serializable
Modifier and Type
Class
Description
protected static enum
AbstractRegionPainter.PaintContext.CacheMode
Cache mode.
class
NimbusLookAndFeel
The NimbusLookAndFeel class.
Uses of
Serializable
in
javax.swing.plaf.synth
Classes in
javax.swing.plaf.synth
that implement
Serializable
Modifier and Type
Class
Description
class
SynthLookAndFeel
SynthLookAndFeel provides the basis for creating a customized look and
 feel.
Uses of
Serializable
in
javax.swing.table
Classes in
javax.swing.table
that implement
Serializable
Modifier and Type
Class
Description
class
AbstractTableModel
This abstract class provides default implementations for most of
  the methods in the
TableModel
interface.
class
DefaultTableCellRenderer
The standard class for rendering (displaying) individual cells
 in a
JTable
.
static class
DefaultTableCellRenderer.UIResource
A subclass of
DefaultTableCellRenderer
that
 implements
UIResource
.
class
DefaultTableColumnModel
The standard column-handler for a
JTable
.
class
DefaultTableModel
This is an implementation of
TableModel
that
 uses a
Vector
of
Vectors
to store the
 cell value objects.
class
JTableHeader
This is the object which manages the header of the
JTable
.
protected class
JTableHeader.AccessibleJTableHeader
This class implements accessibility support for the
JTableHeader
class.
class
TableColumn
A
TableColumn
represents all the attributes of a column in a
JTable
, such as width, resizability, minimum and maximum width.
Uses of
Serializable
in
javax.swing.text
Classes in
javax.swing.text
that implement
Serializable
Modifier and Type
Class
Description
class
AbstractDocument
An implementation of the document interface to serve as a
 basis for implementing various kinds of documents.
class
AbstractDocument.AbstractElement
Implements the abstract part of an element.
class
AbstractDocument.BranchElement
Implements a composite element that contains other elements.
class
AbstractDocument.DefaultDocumentEvent
Stores document changes as the document is being
 modified.
static class
AbstractDocument.ElementEdit
An implementation of ElementChange that can be added to the document
 event.
class
AbstractDocument.LeafElement
Implements an element that directly represents content of
 some kind.
class
BadLocationException
This exception is to report bad locations within a document model
 (that is, attempts to reference a location that doesn't exist).
class
ChangedCharSetException
ChangedCharSetException as the name indicates is an exception
 thrown when the charset is changed.
class
DateFormatter
DateFormatter is an
InternationalFormatter
that does its
 formatting by way of an instance of
java.text.DateFormat
.
class
DefaultCaret
A default implementation of Caret.
class
DefaultEditorKit
This is the set of things needed by a text component
 to be a reasonably functioning editor for some
type
of text document.
static class
DefaultEditorKit.BeepAction
Creates a beep.
static class
DefaultEditorKit.CopyAction
Copies the selected region and place its contents
 into the system clipboard.
static class
DefaultEditorKit.CutAction
Cuts the selected region and place its contents
 into the system clipboard.
static class
DefaultEditorKit.DefaultKeyTypedAction
The action that is executed by default if
 a
key typed event
is received and there
 is no keymap entry.
static class
DefaultEditorKit.InsertBreakAction
Places a line/paragraph break into the document.
static class
DefaultEditorKit.InsertContentAction
Places content into the associated document.
static class
DefaultEditorKit.InsertTabAction
Places a tab character into the document.
static class
DefaultEditorKit.PasteAction
Pastes the contents of the system clipboard into the
 selected region, or before the caret if nothing is
 selected.
class
DefaultFormatter
DefaultFormatter
formats arbitrary objects.
class
DefaultFormatterFactory
An implementation of
JFormattedTextField.AbstractFormatterFactory
.
class
DefaultStyledDocument
A document that can be marked up with character and paragraph
 styles in a manner similar to the Rich Text Format.
static class
DefaultStyledDocument.AttributeUndoableEdit
An UndoableEdit used to remember AttributeSet changes to an
 Element.
class
DefaultStyledDocument.ElementBuffer
Class to manage changes to the element
 hierarchy.
protected class
DefaultStyledDocument.SectionElement
Default root element for a document... maps out the
 paragraphs/lines contained.
class
EditorKit
Establishes the set of things needed by a text component
 to be a reasonably functioning editor for some
type
of text content.
class
GapContent
An implementation of the AbstractDocument.Content interface
 implemented using a gapped buffer similar to that used by emacs.
class
InternationalFormatter
InternationalFormatter
extends
DefaultFormatter
,
 using an instance of
java.text.Format
to handle the
 conversion to a String, and the conversion from a String.
class
JTextComponent
JTextComponent
is the base class for swing text
 components.
class
JTextComponent.AccessibleJTextComponent
This class implements accessibility support for the
JTextComponent
class.
class
MaskFormatter
MaskFormatter
is used to format and edit strings.
class
NumberFormatter
NumberFormatter
subclasses
InternationalFormatter
adding special behavior for numbers.
class
PlainDocument
A plain document that maintains no character attributes.
class
SimpleAttributeSet
A straightforward implementation of MutableAttributeSet using a
 hash table.
final class
StringContent
An implementation of the AbstractDocument.Content interface that is
 a brute force implementation that is useful for relatively small
 documents and/or debugging.
class
StyleContext
A pool of styles and their associated resources.
class
StyleContext.NamedStyle
A collection of attributes, typically used to represent
 character and paragraph styles.
class
StyledEditorKit
This is the set of things needed by a text component
 to be a reasonably functioning editor for some
type
of text document.
static class
StyledEditorKit.AlignmentAction
An action to set paragraph alignment.
static class
StyledEditorKit.BoldAction
An action to toggle the bold attribute.
static class
StyledEditorKit.FontFamilyAction
An action to set the font family in the associated
 JEditorPane.
static class
StyledEditorKit.FontSizeAction
An action to set the font size in the associated
 JEditorPane.
static class
StyledEditorKit.ForegroundAction
An action to set foreground color.
static class
StyledEditorKit.ItalicAction
An action to toggle the italic attribute.
static class
StyledEditorKit.StyledTextAction
An action that assumes it's being fired on a JEditorPane
 with a StyledEditorKit (or subclass) installed.
static class
StyledEditorKit.UnderlineAction
An action to toggle the underline attribute.
class
TabSet
A TabSet is comprised of many TabStops.
class
TabStop
This class encapsulates a single tab stop (basically as tab stops
 are thought of by RTF).
class
TextAction
An Action implementation useful for key bindings that are
 shared across a number of different text components.
Uses of
Serializable
in
javax.swing.text.html
Classes in
javax.swing.text.html
that implement
Serializable
Modifier and Type
Class
Description
class
CSS
Defines a set of
CSS attributes
as a typesafe enumeration.
final class
FormSubmitEvent
FormSubmitEvent is used to notify interested
 parties that a form was submitted.
static enum
FormSubmitEvent.MethodType
Represents an HTML form method type.
static class
HTML.UnknownTag
Class represents unknown HTML tag.
class
HTMLDocument
A document that models HTML.
class
HTMLDocument.BlockElement
An element that represents a structural
block
of
 HTML.
class
HTMLDocument.RunElement
An element that represents a chunk of text that has
 a set of HTML character level attributes assigned to
 it.
class
HTMLEditorKit
The Swing JEditorPane text component supports different kinds
 of content via a plug-in mechanism called an EditorKit.
static class
HTMLEditorKit.HTMLTextAction
An abstract Action providing some convenience methods that may
 be useful in inserting HTML into an existing document.
static class
HTMLEditorKit.InsertHTMLTextAction
InsertHTMLTextAction can be used to insert an arbitrary string of HTML
 into an existing HTML document.
static class
HTMLEditorKit.LinkController
Class to watch the associated component and fire
 hyperlink events on it when appropriate.
class
HTMLFrameHyperlinkEvent
HTMLFrameHyperlinkEvent is used to notify interested
 parties that link was activated in a frame.
class
Option
Value for the ListModel used to represent
 <option> elements.
class
StyleSheet
Support for defining the visual characteristics of
 HTML views being rendered.
static final class
StyleSheet.BoxPainter
Class to carry out some of the duties of
 CSS formatting.
static final class
StyleSheet.ListPainter
Class to carry out some of the duties of CSS list
 formatting.
Uses of
Serializable
in
javax.swing.text.html.parser
Classes in
javax.swing.text.html.parser
that implement
Serializable
Modifier and Type
Class
Description
final class
AttributeList
This class defines the attributes of an SGML element
 as described in a DTD using the ATTLIST construct.
final class
ContentModel
A representation of a content model.
final class
Element
An element as described in a DTD using the ELEMENT construct.
class
ParserDelegator
Responsible for starting up a new DocumentParser
 each time its parse method is invoked.
Uses of
Serializable
in
javax.swing.text.rtf
Classes in
javax.swing.text.rtf
that implement
Serializable
Modifier and Type
Class
Description
class
RTFEditorKit
This is the default implementation of RTF editing
 functionality.
Uses of
Serializable
in
javax.swing.tree
Classes in
javax.swing.tree
that implement
Serializable
Modifier and Type
Class
Description
class
DefaultMutableTreeNode
A
DefaultMutableTreeNode
is a general-purpose node in a tree data
 structure.
class
DefaultTreeCellEditor.DefaultTextField
TextField
used when no editor is supplied.
class
DefaultTreeCellEditor.EditorContainer
Container responsible for placing the
editingComponent
.
class
DefaultTreeCellRenderer
Displays an entry in a tree.
class
DefaultTreeModel
A simple tree data model that uses TreeNodes.
class
DefaultTreeSelectionModel
Default implementation of TreeSelectionModel.
class
ExpandVetoException
Exception used to stop an expand/collapse from happening.
class
TreePath
TreePath
represents an array of objects that uniquely
 identify the path to a node in a tree.
Uses of
Serializable
in
javax.swing.undo
Classes in
javax.swing.undo
that implement
Serializable
Modifier and Type
Class
Description
class
AbstractUndoableEdit
An abstract implementation of
UndoableEdit
,
 implementing simple responses to all boolean methods in
 that interface.
class
CannotRedoException
Thrown when an UndoableEdit is told to
redo()
and can't.
class
CannotUndoException
Thrown when an UndoableEdit is told to
undo()
and can't.
class
CompoundEdit
A concrete subclass of AbstractUndoableEdit, used to assemble little
 UndoableEdits into great big ones.
class
StateEdit
StateEdit is a general edit for objects that change state.
class
UndoManager
UndoManager
manages a list of
UndoableEdits
,
 providing a way to undo or redo the appropriate edits.
Uses of
Serializable
in
javax.tools
Classes in
javax.tools
that implement
Serializable
Modifier and Type
Class
Description
static enum
Diagnostic.Kind
Kinds of diagnostics, for example, error or warning.
static enum
DocumentationTool.Location
Locations specific to
DocumentationTool
.
static enum
JavaFileObject.Kind
Kinds of JavaFileObjects.
enum
StandardLocation
Standard locations of file objects.
Uses of
Serializable
in
javax.transaction.xa
Classes in
javax.transaction.xa
that implement
Serializable
Modifier and Type
Class
Description
class
XAException
The XAException is thrown by the Resource Manager (RM) to inform the
 Transaction Manager of an error encountered by the involved transaction.
Uses of
Serializable
in
javax.xml.catalog
Classes in
javax.xml.catalog
that implement
Serializable
Modifier and Type
Class
Description
class
CatalogException
The exception class handles errors that may happen while processing or using
 a catalog.
static enum
CatalogFeatures.Feature
A Feature type as defined in the
Catalog Features table
.
Uses of
Serializable
in
javax.xml.crypto
Classes in
javax.xml.crypto
that implement
Serializable
Modifier and Type
Class
Description
class
KeySelectorException
Indicates an exceptional condition thrown by a
KeySelector
.
class
MarshalException
Indicates an exceptional condition that occurred during the XML
 marshalling or unmarshalling process.
class
NoSuchMechanismException
This exception is thrown when a particular XML mechanism is requested but
 is not available in the environment.
class
URIReferenceException
Indicates an exceptional condition thrown while dereferencing a
URIReference
.
Uses of
Serializable
in
javax.xml.crypto.dsig
Classes in
javax.xml.crypto.dsig
that implement
Serializable
Modifier and Type
Class
Description
class
TransformException
Indicates an exceptional condition that occurred while executing a
 transform algorithm.
class
XMLSignatureException
Indicates an exceptional condition that occurred during the XML
 signature generation or validation process.
Uses of
Serializable
in
javax.xml.datatype
Classes in
javax.xml.datatype
that implement
Serializable
Modifier and Type
Class
Description
class
DatatypeConfigurationException
Indicates a serious configuration error.
Uses of
Serializable
in
javax.xml.namespace
Classes in
javax.xml.namespace
that implement
Serializable
Modifier and Type
Class
Description
class
QName
QName
represents a
qualified name
as defined in the XML specifications:
XML Schema Part2:
 Datatypes specification
,
Namespaces
 in XML
.
Uses of
Serializable
in
javax.xml.parsers
Classes in
javax.xml.parsers
that implement
Serializable
Modifier and Type
Class
Description
class
FactoryConfigurationError
Thrown when a problem with configuration with the Parser Factories
 exists.
class
ParserConfigurationException
Indicates a serious configuration error.
Uses of
Serializable
in
javax.xml.stream
Classes in
javax.xml.stream
that implement
Serializable
Modifier and Type
Class
Description
class
FactoryConfigurationError
An error class for reporting factory configuration errors.
class
XMLStreamException
The base exception for unexpected processing errors.
Uses of
Serializable
in
javax.xml.transform
Classes in
javax.xml.transform
that implement
Serializable
Modifier and Type
Class
Description
class
TransformerConfigurationException
Indicates a serious configuration error.
class
TransformerException
This class specifies an exceptional condition that occurred
 during the transformation process.
class
TransformerFactoryConfigurationError
Thrown when a problem with configuration with the Transformer Factories
 exists.
Uses of
Serializable
in
javax.xml.validation
Classes in
javax.xml.validation
that implement
Serializable
Modifier and Type
Class
Description
final class
SchemaFactoryConfigurationError
Thrown when a problem with configuration with the Schema Factories
 exists.
Uses of
Serializable
in
javax.xml.xpath
Classes in
javax.xml.xpath
that implement
Serializable
Modifier and Type
Class
Description
static enum
XPathEvaluationResult.XPathResultType
XPathResultType represents possible return types of an XPath evaluation.
class
XPathException
XPathException
represents a generic XPath exception.
class
XPathExpressionException
XPathExpressionException
represents an error in an XPath expression.
class
XPathFactoryConfigurationException
XPathFactoryConfigurationException
represents
 a configuration error in a
XPathFactory
environment.
class
XPathFunctionException
XPathFunctionException
represents an error with an XPath function.
Uses of
Serializable
in
jdk.dynalink
Classes in
jdk.dynalink
that implement
Serializable
Modifier and Type
Class
Description
class
NoSuchDynamicMethodException
Thrown at the invocation if the call site can not be linked by any available
GuardingDynamicLinker
.
enum
StandardNamespace
An enumeration of standard namespaces defined by Dynalink.
enum
StandardOperation
Defines the standard dynamic operations.
Uses of
Serializable
in
jdk.dynalink.beans
Classes in
jdk.dynalink.beans
that implement
Serializable
Modifier and Type
Class
Description
final class
StaticClass
Object that allows access to the static members of a class (its static
 methods, properties, and fields), as well as construction of instances using
StandardOperation.NEW
operation.
Uses of
Serializable
in
jdk.dynalink.linker
Classes in
jdk.dynalink.linker
that implement
Serializable
Modifier and Type
Class
Description
static enum
ConversionComparator.Comparison
Enumeration of possible outcomes of comparing one conversion to another.
Uses of
Serializable
in
jdk.incubator.vector
Classes in
jdk.incubator.vector
that implement
Serializable
Modifier and Type
Class
Description
enum
VectorShape
A
VectorShape
selects a particular implementation of
Vector
s.
Uses of
Serializable
in
jdk.javadoc.doclet
Classes in
jdk.javadoc.doclet
that implement
Serializable
Modifier and Type
Class
Description
static enum
Doclet.Option.Kind
The kind of an option.
static enum
DocletEnvironment.ModuleMode
The mode specifying the level of detail of module documentation.
static enum
Taglet.Location
The kind of location in which a tag may be used.
Uses of
Serializable
in
jdk.jfr
Classes in
jdk.jfr
that implement
Serializable
Modifier and Type
Class
Description
final class
FlightRecorderPermission
Permission for controlling access to Flight Recorder.
enum
RecordingState
Indicates a state in the life cycle of a recording.
Uses of
Serializable
in
jdk.jshell
Classes in
jdk.jshell
that implement
Serializable
Modifier and Type
Class
Description
class
EvalException
Wraps an throwable thrown in the executing client.
class
JShellException
The superclass of JShell generated exceptions
static enum
Snippet.Kind
Describes the general kind of snippet.
static enum
Snippet.Status
Describes the current state of a Snippet.
static enum
Snippet.SubKind
The detailed variety of a snippet.
static enum
SourceCodeAnalysis.Attribute
A span attribute which can be used to derive a coloring.
static enum
SourceCodeAnalysis.Completeness
Describes the completeness of the given input.
class
UnresolvedReferenceException
Exception reported on attempting to execute a
RECOVERABLE_DEFINED
snippet.
Uses of
Serializable
in
jdk.jshell.spi
Classes in
jdk.jshell.spi
that implement
Serializable
Modifier and Type
Class
Description
static final class
ExecutionControl.ClassBytecodes
Bundles class name with class bytecodes.
static class
ExecutionControl.ClassInstallException
A class install (load or redefine) encountered a problem.
static class
ExecutionControl.EngineTerminationException
Unbidden execution engine termination has occurred.
static class
ExecutionControl.ExecutionControlException
The abstract base of all
ExecutionControl
exceptions.
static class
ExecutionControl.InternalException
An internal problem has occurred.
static class
ExecutionControl.NotImplementedException
The command is not implemented.
static class
ExecutionControl.ResolutionException
An exception indicating that a
DeclarationSnippet
with unresolved
 references has been encountered.
static class
ExecutionControl.RunException
The abstract base of of exceptions specific to running user code.
static class
ExecutionControl.StoppedException
An exception indicating that an
ExecutionControl.invoke(java.lang.String, java.lang.String)
(or theoretically a
ExecutionControl.varValue(java.lang.String, java.lang.String)
)
 has been interrupted by a
ExecutionControl.stop()
.
static class
ExecutionControl.UserException
A 'normal' user exception occurred.
class
SPIResolutionException
The construction and throw of this exception is embedded in code generated by
 the JShell core implementation in such a way that, upon executing a
RECOVERABLE_DEFINED
user method, this exception is thrown.
Uses of
Serializable
in
jdk.net
Classes in
jdk.net
that implement
Serializable
Modifier and Type
Class
Description
final class
NetworkPermission
Represents permission to access the extended networking capabilities
 defined in the jdk.net package.
Uses of
Serializable
in
jdk.security.jarsigner
Classes in
jdk.security.jarsigner
that implement
Serializable
Modifier and Type
Class
Description
class
JarSignerException
This exception is thrown when
JarSigner.sign(java.util.zip.ZipFile, java.io.OutputStream)
fails.
Uses of
Serializable
in
netscape.javascript
Classes in
netscape.javascript
that implement
Serializable
Modifier and Type
Class
Description
class
JSException
Thrown when an exception is raised in the JavaScript engine.
Uses of
Serializable
in
org.ietf.jgss
Classes in
org.ietf.jgss
that implement
Serializable
Modifier and Type
Class
Description
class
GSSException
This exception is thrown whenever a GSS-API error occurs, including
 any mechanism specific error.
Uses of
Serializable
in
org.w3c.dom
Classes in
org.w3c.dom
that implement
Serializable
Modifier and Type
Class
Description
class
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Uses of
Serializable
in
org.w3c.dom.events
Classes in
org.w3c.dom.events
that implement
Serializable
Modifier and Type
Class
Description
class
EventException
Event operations may throw an
EventException
as specified in
 their method descriptions.
Uses of
Serializable
in
org.w3c.dom.ls
Classes in
org.w3c.dom.ls
that implement
Serializable
Modifier and Type
Class
Description
class
LSException
Parser or write operations may throw an
LSException
if the
 processing is stopped.
Uses of
Serializable
in
org.w3c.dom.ranges
Classes in
org.w3c.dom.ranges
that implement
Serializable
Modifier and Type
Class
Description
class
RangeException
Range operations may throw a
RangeException
as specified in
 their method descriptions.
Uses of
Serializable
in
org.w3c.dom.xpath
Classes in
org.w3c.dom.xpath
that implement
Serializable
Modifier and Type
Class
Description
class
XPathException
A new exception has been created for exceptions specific to these XPath
 interfaces.
Uses of
Serializable
in
org.xml.sax
Classes in
org.xml.sax
that implement
Serializable
Modifier and Type
Class
Description
class
SAXException
Encapsulate a general SAX error or warning.
class
SAXNotRecognizedException
Exception class for an unrecognized identifier.
class
SAXNotSupportedException
Exception class for an unsupported operation.
class
SAXParseException
Encapsulate an XML parse error or warning.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.