InputStreamReader (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.base
Package
java.io
Class InputStreamReader
java.lang.Object
java.io.Reader
java.io.InputStreamReader
All Implemented Interfaces:
Closeable
,
AutoCloseable
,
Readable
Direct Known Subclasses:
FileReader
public class
InputStreamReader
extends
Reader
An InputStreamReader is a bridge from byte streams to character streams: It
 reads bytes and decodes them into characters using a specified
charset
.  The charset that it uses
 may be specified by name or may be given explicitly, or the
default charset
may be used.
Each invocation of one of an InputStreamReader's read() methods may
 cause one or more bytes to be read from the underlying byte-input stream.
 To enable the efficient conversion of bytes to characters, more bytes may
 be read ahead from the underlying stream than are necessary to satisfy the
 current read operation.
For top efficiency, consider wrapping an InputStreamReader within a
 BufferedReader.  For example:
Copy
BufferedReader in = new BufferedReader(new InputStreamReader(anInputStream));
Since:
1.1
See Also:
BufferedReader
InputStream
Charset
Field Summary
Fields declared in class java.io.
Reader
lock
Constructor Summary
Constructors
Constructor
Description
InputStreamReader
(
InputStream
in)
Creates an InputStreamReader that uses the
default charset
.
InputStreamReader
(
InputStream
in,
String
charsetName)
Creates an InputStreamReader that uses the named charset.
InputStreamReader
(
InputStream
in,
Charset
cs)
Creates an InputStreamReader that uses the given charset.
InputStreamReader
(
InputStream
in,
CharsetDecoder
dec)
Creates an InputStreamReader that uses the given charset decoder.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
close
()
Closes the stream and releases any system resources associated with
 it.
String
getEncoding
()
Returns the name of the character encoding being used by this stream.
int
read
()
Reads a single character.
int
read
(char[] cbuf,
 int off,
 int len)
Reads characters into a portion of an array.
boolean
ready
()
Tells whether this stream is ready to be read.
Methods declared in class java.io.
Reader
mark
,
markSupported
,
nullReader
,
read
,
read
,
reset
,
skip
,
transferTo
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
InputStreamReader
public
InputStreamReader
(
InputStream
in)
Creates an InputStreamReader that uses the
default charset
.
Parameters:
in
- An InputStream
See Also:
Charset.defaultCharset()
InputStreamReader
public
InputStreamReader
(
InputStream
in,
String
charsetName)
throws
UnsupportedEncodingException
Creates an InputStreamReader that uses the named charset.
Parameters:
in
- An InputStream
charsetName
- The name of a supported
charset
Throws:
UnsupportedEncodingException
- If the named charset is not supported
InputStreamReader
public
InputStreamReader
(
InputStream
in,
Charset
cs)
Creates an InputStreamReader that uses the given charset.
Parameters:
in
- An InputStream
cs
- A charset
Since:
1.4
InputStreamReader
public
InputStreamReader
(
InputStream
in,
CharsetDecoder
dec)
Creates an InputStreamReader that uses the given charset decoder.
Parameters:
in
- An InputStream
dec
- A charset decoder
Since:
1.4
Method Details
getEncoding
public
String
getEncoding
()
Returns the name of the character encoding being used by this stream.
If the encoding has an historical name then that name is returned;
 otherwise the encoding's canonical name is returned.
If this instance was created with the
InputStreamReader(InputStream, String)
constructor then the returned
 name, being unique for the encoding, may differ from the name passed to
 the constructor. This method will return
null
if the
 stream has been closed.
Returns:
The historical name of this encoding, or
null
if the stream has been closed
See Also:
Charset
read
public
int
read
()
         throws
IOException
Reads a single character.
Overrides:
read
in class
Reader
Returns:
The character read, or -1 if the end of the stream has been
         reached
Throws:
IOException
- If an I/O error occurs
read
public
int
read
(char[] cbuf,
 int off,
 int len)
throws
IOException
Reads characters into a portion of an array.  This method will block
 until some input is available, an I/O error occurs, or the end of the
 stream is reached.
If
len
is zero, then no characters are read and
0
is
 returned; otherwise, there is an attempt to read at least one character.
 If no character is available because the stream is at its end, the value
-1
is returned; otherwise, at least one character is read and
 stored into
cbuf
.
Specified by:
read
in class
Reader
Parameters:
cbuf
- Destination buffer
off
- Offset at which to start storing characters
len
- Maximum number of characters to read
Returns:
The number of characters read, or -1 if the end of the
             stream has been reached
Throws:
IndexOutOfBoundsException
- If
off
is negative, or
len
is negative,
             or
len
is greater than
cbuf.length - off
IOException
- If an I/O error occurs
ready
public
boolean
ready
()
              throws
IOException
Tells whether this stream is ready to be read.  An InputStreamReader is
 ready if its input buffer is not empty, or if bytes are available to be
 read from the underlying byte stream.
Overrides:
ready
in class
Reader
Returns:
True if the next read() is guaranteed not to block for input,
 false otherwise.  Note that returning false does not guarantee that the
 next read will block.
Throws:
IOException
- If an I/O error occurs
close
public
void
close
()
           throws
IOException
Description copied from class:
Reader
Closes the stream and releases any system resources associated with
 it.  Once the stream has been closed, further read(), ready(),
 mark(), reset(), or skip() invocations will throw an IOException.
 Closing a previously closed stream has no effect.
Specified by:
close
in interface
AutoCloseable
Specified by:
close
in interface
Closeable
Specified by:
close
in class
Reader
Throws:
IOException
- If an I/O error occurs
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.