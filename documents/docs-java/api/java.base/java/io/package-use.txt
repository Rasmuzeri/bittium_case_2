Uses of Package java.io (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Package
java.io
Packages that use
java.io
Package
Description
com.sun.jdi
This is the core package of the Java Debug
 Interface (JDI), it defines mirrors for values, types, and the target
 VirtualMachine itself - as well bootstrapping facilities.
com.sun.jdi.connect
This package defines connections between the virtual machine
 using the JDI and the target virtual machine.
com.sun.jdi.connect.spi
This package comprises the interfaces and classes used to
 develop new
TransportService
implementations.
com.sun.jdi.request
This package is used to request that a JDI
 event be sent under specified conditions.
com.sun.management
This package contains the JDK's extension to
 the standard implementation of the
java.lang.management
API and also defines the management
 interface for some other components of the platform.
com.sun.net.httpserver
Provides a simple high-level Http server API, which can be used to build
   embedded HTTP servers.
com.sun.net.httpserver.spi
Provides a pluggable service provider interface, which allows the HTTP server
 implementation to be replaced with other implementations.
com.sun.nio.sctp
A Java API for Stream Control Transport Protocol.
com.sun.security.auth
Provides implementations of
Principal
.
com.sun.security.auth.callback
Provides an implementation of
CallbackHandler
.
com.sun.security.jgss
This package defines classes and interfaces for the JDK extensions
 to the GSS-API.
com.sun.source.doctree
Provides interfaces to represent documentation comments as abstract syntax
 trees (AST).
com.sun.source.tree
Provides interfaces to represent source code as abstract syntax
 trees (AST).
com.sun.source.util
Provides utilities for operations on abstract syntax trees (AST).
com.sun.tools.attach
Provides the API to attach to a Java virtual machine.
com.sun.tools.attach.spi
Only developers who are defining new attach providers should need to make
 direct use of this package.
com.sun.tools.javac
This package provides a legacy entry point for the
javac
tool.
com.sun.tools.jconsole
This package contains the JConsole API.
java.applet
Provides the classes necessary to create an applet and the classes an applet
 uses to communicate with its applet context.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.color
Provides classes for color spaces.
java.awt.datatransfer
Provides interfaces and classes for transferring data between and within
 applications.
java.awt.desktop
Provides interfaces and classes for interaction with various desktop
 capabilities.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
java.awt.font
Provides classes and interface relating to fonts.
java.awt.geom
Provides the Java 2D classes for defining and performing operations on
 objects related to two-dimensional geometry.
java.awt.image
Provides classes for creating and modifying images.
java.awt.image.renderable
Provides classes and interfaces for producing rendering-independent images.
java.awt.print
Provides classes and interfaces for a general printing API.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.beans.beancontext
Provides classes and interfaces relating to bean context.
java.io
Provides for system input and output through data streams,
 serialization and the file system.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.annotation
Provides library support for the Java programming language
 annotation facility.
java.lang.constant
Classes and interfaces to represent
nominal descriptors
for run-time
 entities such as classes or method handles, and classfile entities such as
 constant pool entries or
invokedynamic
call sites.
java.lang.instrument
Provides services that allow Java programming language agents to instrument
 programs running on the Java Virtual Machine (JVM).
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.lang.management
Provides the management interfaces for monitoring and management of the
Java virtual machine and other components in the Java runtime.
java.lang.module
Classes to support module descriptors and creating configurations of modules
 by means of resolution and service binding.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.math
Provides classes for performing arbitrary-precision integer
 arithmetic (
BigInteger
) and arbitrary-precision decimal
 arithmetic (
BigDecimal
).
java.net
Provides the classes for implementing networking applications.
java.net.http
HTTP Client and WebSocket APIs
java.nio
Defines buffers, which are containers for data, and provides an
 overview of the other NIO packages.
java.nio.channels
Defines channels, which represent connections to entities that are capable of
 performing I/O operations, such as files and sockets; defines selectors, for
 multiplexed, non-blocking I/O operations.
java.nio.channels.spi
Service-provider classes for the
java.nio.channels
package.
java.nio.charset
Defines charsets, decoders, and encoders, for translating between
 bytes and Unicode characters.
java.nio.file
Defines interfaces and classes for the Java virtual machine to access files,
 file attributes, and file systems.
java.nio.file.attribute
Interfaces and classes providing access to file and file system attributes.
java.nio.file.spi
Service-provider classes for the
java.nio.file
package.
java.rmi
Provides the RMI package.
java.rmi.dgc
Provides classes and interface for RMI distributed
 garbage-collection (DGC).
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
java.security.interfaces
Provides interfaces for generating RSA (Rivest, Shamir and
 Adleman AsymmetricCipher algorithm)
 keys as defined in the RSA Laboratory Technical Note
 PKCS#1, and DSA (Digital Signature
 Algorithm) keys as defined in NIST's FIPS-186.
java.security.spec
Provides classes and interfaces for key specifications and algorithm
 parameter specifications.
java.sql
Provides the API for accessing and processing data stored in a
 data source (usually a relational database) using the
 Java programming language.
java.text
Provides classes and interfaces for handling text, dates, numbers,
 and messages in a manner independent of natural languages.
java.time
The main API for dates, times, instants, and durations.
java.time.chrono
Generic API for calendar systems other than the default ISO.
java.time.format
Provides classes to print and parse dates and times.
java.time.temporal
Access to date and time using fields and units, and date time adjusters.
java.time.zone
Support for time-zones and their rules.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.concurrent.atomic
A small toolkit of classes that support lock-free thread-safe
 programming on single variables.
java.util.concurrent.locks
Interfaces and classes providing a framework for locking and waiting
 for conditions that is distinct from built-in synchronization and
 monitors.
java.util.jar
Provides classes for reading and writing the JAR (Java ARchive)
 file format, which is based on the standard ZIP file format with an
 optional manifest file.
java.util.logging
Provides the classes and interfaces of
 the Java 2 platform's core logging facilities.
java.util.prefs
This package allows applications to store and retrieve user and system
 preference and configuration data.
java.util.regex
Classes for matching character sequences against patterns specified
 by regular expressions.
java.util.spi
Service provider classes for the classes in the java.util package.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
java.util.zip
Provides classes for reading and writing the standard ZIP and GZIP file
 formats.
javax.accessibility
Defines a contract between user-interface components and an assistive
 technology that provides access to those components.
javax.annotation.processing
Facilities for declaring annotation processors and for
 allowing annotation processors to communicate with an annotation processing
 tool environment.
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
javax.crypto.interfaces
Provides interfaces for Diffie-Hellman keys as defined in RSA
 Laboratories' PKCS #3.
javax.crypto.spec
Provides classes and interfaces for key specifications and
 algorithm parameter specifications.
javax.imageio
The main package of the Java Image I/O API.
javax.imageio.metadata
A package of the Java Image I/O API dealing with reading and writing
 metadata.
javax.imageio.spi
A package of the Java Image I/O API containing the plug-in interfaces for
 readers, writers, transcoders, and streams, and a runtime registry.
javax.imageio.stream
A package of the Java Image I/O API dealing with low-level I/O from files and
 streams.
javax.lang.model
Types and hierarchies of packages comprising a Java language model, a model of the declarations and types of the Java
 programming language.
javax.lang.model.element
Interfaces used to model elements of the Java programming language.
javax.lang.model.type
Interfaces used to model Java programming language types.
javax.lang.model.util
Utilities to assist in the processing of
program elements
and
types
.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.loading
Provides the classes which implement advanced dynamic
        loading.
javax.management.modelmbean
Provides the definition of the ModelMBean classes.
javax.management.monitor
Provides the definition of the monitor classes.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.remote
Interfaces for remote access to
        JMX MBean servers.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
javax.management.timer
Provides the definition of the Timer MBean.
javax.naming
Provides the classes and interfaces for accessing naming services.
javax.naming.directory
Extends the
javax.naming
package to provide functionality
for accessing directory services.
javax.naming.event
Provides support for event notification when accessing naming and
directory services.
javax.naming.ldap
Provides support for LDAPv3 extended operations and controls.
javax.naming.spi
Provides the means for dynamically plugging in support for accessing
naming and directory services through the
javax.naming
and related packages.
javax.net
Provides classes for networking applications.
javax.net.ssl
Provides classes for the secure socket package.
javax.print
Provides the principal classes and interfaces for the Java Print
 Service API.
javax.print.attribute
Provides classes and interfaces that describe the types of Java Print
 Service attributes and how they can be collected into attribute sets.
javax.print.attribute.standard
Package
javax.print.attribute.standard
contains classes for specific
 printing attributes.
javax.print.event
Package
javax.print.event
contains event classes and listener
 interfaces.
javax.rmi.ssl
Provides implementations of
RMIClientSocketFactory
and
RMIServerSocketFactory
over
 the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.
javax.script
The scripting API consists of interfaces and classes that define
Java Scripting Engines and provides
a framework for their use in Java applications.
javax.security.auth
This package provides a framework for authentication and
 authorization.
javax.security.auth.callback
This package provides the classes necessary for services
 to interact with applications in order to retrieve
 information (authentication data including usernames
 or passwords, for example) or to display information
 (error and warning messages, for example).
javax.security.auth.kerberos
This package contains utility classes related to the Kerberos network
 authentication protocol.
javax.security.auth.login
This package provides a pluggable authentication framework.
javax.security.auth.x500
This package contains the classes that should be used to store
 X500 Principal and X500 Private Credentials in a
Subject
.
javax.security.cert
Provides classes for public key certificates.
javax.security.sasl
Contains class and interfaces for supporting SASL.
javax.smartcardio
Java™ Smart Card I/O API.
javax.sound.midi
Provides interfaces and classes for I/O, sequencing, and synthesis of MIDI
 (Musical Instrument Digital Interface) data.
javax.sound.midi.spi
Supplies interfaces for service providers to implement when offering new MIDI
 devices, MIDI file readers and writers, or sound bank readers.
javax.sound.sampled
Provides interfaces and classes for capture, processing, and playback of
 sampled audio data.
javax.sound.sampled.spi
Supplies abstract classes for service providers to subclass when offering new
 audio devices, sound file readers and writers, or audio format converters.
javax.sql
Provides the API for server side data source access and processing from
 the Java programming language.
javax.sql.rowset
Standard interfaces and base classes for JDBC
RowSet
implementations.
javax.sql.rowset.serial
Provides utility classes to allow serializable mappings between SQL types
 and data types in the Java programming language.
javax.sql.rowset.spi
The standard classes and interfaces that a third party vendor has to
 use in its implementation of a synchronization provider.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.border
Provides classes and interface for drawing specialized borders around a Swing
 component.
javax.swing.colorchooser
Contains classes and interfaces used by the
JColorChooser
component.
javax.swing.event
Provides for events fired by Swing components.
javax.swing.filechooser
Contains classes and interfaces used by the
JFileChooser
component.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.plaf.nimbus
Provides user interface objects built according to the cross-platform Nimbus
 look and feel.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
javax.swing.text.html.parser
Provides the default HTML parser, along with support classes.
javax.swing.text.rtf
Provides a class (
RTFEditorKit
) for creating Rich-Text-Format text
 editors.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
javax.swing.undo
Allows developers to provide support for undo/redo in applications such as
 text editors.
javax.tools
Provides interfaces for tools which can be invoked from a program,
 for example, compilers.
javax.transaction.xa
Provides the API that defines the contract between the transaction manager
 and the resource manager, which allows the transaction manager to enlist
 and delist resource objects (supplied by the resource manager driver) in
 JTA transactions.
javax.xml.catalog
Provides the classes for implementing
XML Catalogs OASIS Standard V1.1, 7 October 2005
.
javax.xml.crypto
Common classes for XML cryptography.
javax.xml.crypto.dsig
Classes for generating and validating XML digital
 signatures.
javax.xml.datatype
Defines XML/Java Type Mappings.
javax.xml.namespace
Defines XML Namespace processing.
javax.xml.parsers
Provides the classes for processing XML documents with a SAX (Simple API for XML)
 parser or a DOM (Document Object Model) Document builder.
javax.xml.stream
Defines interfaces and classes for the Streaming API for XML (StAX).
javax.xml.stream.events
Defines event interfaces for the Streaming API for XML (StAX).
javax.xml.transform
Defines the generic APIs for processing transformation instructions,
 and performing a transformation from source to result.
javax.xml.transform.stream
Provides stream and URI specific transformation classes.
javax.xml.validation
Provides an API for validation of XML documents.
javax.xml.xpath
Provides an
object-model neutral
API for the
 evaluation of XPath expressions and access to the evaluation
 environment.
jdk.dynalink
Contains interfaces and classes that are used to link an
invokedynamic
call site.
jdk.dynalink.beans
Contains the linker for ordinary Java objects.
jdk.dynalink.linker
Contains interfaces and classes needed by language runtimes to implement
 their own language-specific object models and type conversions.
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
jdk.javadoc.doclet
The Doclet API provides an environment which, in conjunction with
 the Language Model API and Compiler Tree API, allows clients
 to inspect the source-level structures of programs and
 libraries, including API comments embedded in the source.
jdk.jfr
This package provides classes to create events and control Flight Recorder.
jdk.jfr.consumer
This package contains classes for consuming Flight Recorder data.
jdk.jshell
Provides interfaces for creating tools, such as a Read-Eval-Print Loop (REPL),
 which interactively evaluate "snippets" of Java programming language code.
jdk.jshell.execution
Provides implementation support for building JShell execution engines.
jdk.jshell.spi
Defines the Service Provider Interface for pluggable JShell execution engines.
jdk.jshell.tool
Provides a mechanism to launch an instance of a Java shell tool.
jdk.management.jfr
This package contains classes to control and monitor Flight Recorder over Java Management Extensions (JMX).
jdk.net
Platform specific socket options for the
java.net
and
java.nio.channels
socket classes.
jdk.nio
Defines JDK-specific
channel
APIs.
jdk.security.jarsigner
This package defines APIs for signing jar files.
netscape.javascript
Provides Java code the ability to access the JavaScript engine and the
 HTML DOM in the web browser.
org.ietf.jgss
This package presents a framework that allows application developers to
 make use of security services like authentication, data integrity and
 data confidentiality from a variety of underlying security mechanisms
 like Kerberos, using a unified API.
org.w3c.dom
Provides the interfaces for the Document Object Model (DOM).
org.w3c.dom.events
Provides interfaces for DOM Level 2 Events.
org.w3c.dom.ls
Provides interfaces for DOM Level 3 Load and Save.
org.w3c.dom.ranges
Provides interfaces for DOM Level 2 Range.
org.w3c.dom.xpath
Provides interfaces for DOM Level 3 XPath Specification.
org.xml.sax
Provides the interfaces for the Simple API for XML (SAX).
org.xml.sax.ext
Provides interfaces to SAX2 facilities that
 conformant SAX drivers won't necessarily support.
org.xml.sax.helpers
Provides helper classes, including
 support for bootstrapping SAX-based applications.
Classes in
java.io
used by
com.sun.jdi
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.jdi.connect
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.jdi.connect.spi
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.jdi.request
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.management
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.net.httpserver
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.net.httpserver.spi
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
com.sun.nio.sctp
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.security.auth
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.security.auth.callback
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
com.sun.security.jgss
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.source.doctree
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.source.tree
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.source.util
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.tools.attach
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
com.sun.tools.attach.spi
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
com.sun.tools.javac
Class
Description
PrintWriter
Prints formatted representations of objects to a text-output stream.
Classes in
java.io
used by
com.sun.tools.jconsole
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.applet
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt
Class
Description
File
An abstract representation of file and directory pathnames.
FilenameFilter
Instances of classes that implement this interface are used to
 filter filenames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectOutputStream
An ObjectOutputStream writes primitive data types and graphs of Java objects
 to an OutputStream.
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.color
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.datatransfer
Class
Description
Externalizable
Only the identity of the class of an Externalizable instance is
 written in the serialization stream and it is the responsibility
 of the class to save and restore the contents of its instances.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectInput
ObjectInput extends the DataInput interface to include the reading of
 objects.
ObjectOutput
ObjectOutput extends the DataOutput interface to include writing of objects.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.desktop
Class
Description
File
An abstract representation of file and directory pathnames.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.dnd
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.event
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.font
Class
Description
InvalidObjectException
Indicates that one or more deserialized objects failed validation
 tests.
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.geom
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.image
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.image.renderable
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.awt.print
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.beans
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.beans.beancontext
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectInputStream
An ObjectInputStream deserializes primitive data and objects previously
 written using an ObjectOutputStream.
ObjectOutputStream
An ObjectOutputStream writes primitive data types and graphs of Java objects
 to an OutputStream.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.io
Class
Description
BufferedReader
Reads text from a character-input stream, buffering characters so as to
 provide for the efficient reading of characters, arrays, and lines.
CharArrayWriter
This class implements a character buffer that can be used as a Writer.
Closeable
A
Closeable
is a source or destination of data that can be closed.
Console
Methods to access the character-based console device, if any, associated
 with the current Java virtual machine.
DataInput
The
DataInput
interface provides
 for reading bytes from a binary stream and
 reconstructing from them data in any of
 the Java primitive types.
DataOutput
The
DataOutput
interface provides
 for converting data from any of the Java
 primitive types to a series of bytes and
 writing these bytes to a binary stream.
File
An abstract representation of file and directory pathnames.
FileDescriptor
Instances of the file descriptor class serve as an opaque handle
 to the underlying machine-specific structure representing an open
 file, an open socket, or another source or sink of bytes.
FileFilter
A filter for abstract pathnames.
FilenameFilter
Instances of classes that implement this interface are used to
 filter filenames.
FileNotFoundException
Signals that an attempt to open the file denoted by a specified pathname
 has failed.
FilterInputStream
A
FilterInputStream
wraps some other input stream, which it uses as
 its basic source of data, possibly transforming the data along the way or
 providing additional functionality.
FilterOutputStream
This class is the superclass of all classes that filter output
 streams.
FilterReader
Abstract class for reading filtered character streams.
Flushable
A
Flushable
is a destination of data that can be flushed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
InputStreamReader
An InputStreamReader is a bridge from byte streams to character streams: It
 reads bytes and decodes them into characters using a specified
charset
.
InvalidObjectException
Indicates that one or more deserialized objects failed validation
 tests.
IOException
Signals that an I/O exception of some sort has occurred.
NotActiveException
Thrown when serialization or deserialization is not active.
ObjectInput
ObjectInput extends the DataInput interface to include the reading of
 objects.
ObjectInputFilter
Filter classes, array lengths, and graph metrics during deserialization.
ObjectInputFilter.FilterInfo
FilterInfo provides access to information about the current object
 being deserialized and the status of the
ObjectInputStream
.
ObjectInputFilter.Status
The status of a check on the class, array length, number of references,
 depth, and stream size.
ObjectInputStream.GetField
Provide access to the persistent fields read from the input stream.
ObjectInputValidation
Callback interface to allow validation of objects within a graph.
ObjectOutput
ObjectOutput extends the DataOutput interface to include writing of objects.
ObjectOutputStream.PutField
Provide programmatic access to the persistent fields to be written
 to ObjectOutput.
ObjectStreamClass
Serialization's descriptor for classes.
ObjectStreamConstants
Constants written into the Object Serialization Stream.
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
ObjectStreamField
A description of a Serializable field from a Serializable class.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
OutputStreamWriter
An OutputStreamWriter is a bridge from character streams to byte streams:
 Characters written to it are encoded into bytes using a specified
charset
.
PipedInputStream
A piped input stream should be connected
 to a piped output stream; the piped  input
 stream then provides whatever data bytes
 are written to the piped output  stream.
PipedOutputStream
A piped output stream can be connected to a piped input stream
 to create a communications pipe.
PipedReader
Piped character-input streams.
PipedWriter
Piped character-output streams.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
SerializablePermission
This class is for Serializable permissions.
StreamCorruptedException
Thrown when control information that was read from an object stream
 violates internal consistency checks.
StringWriter
A character stream that collects its output in a string buffer, which can
 then be used to construct a string.
SyncFailedException
Signals that a sync operation has failed.
UnsupportedEncodingException
The Character Encoding is not supported.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
java.lang
Class
Description
BufferedReader
Reads text from a character-input stream, buffering characters so as to
 provide for the efficient reading of characters, arrays, and lines.
BufferedWriter
Writes text to a character-output stream, buffering characters so as to
 provide for the efficient writing of single characters, arrays, and strings.
Console
Methods to access the character-based console device, if any, associated
 with the current Java virtual machine.
File
An abstract representation of file and directory pathnames.
FileDescriptor
Instances of the file descriptor class serve as an opaque handle
 to the underlying machine-specific structure representing an open
 file, an open socket, or another source or sink of bytes.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
UnsupportedEncodingException
The Character Encoding is not supported.
Classes in
java.io
used by
java.lang.annotation
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.lang.constant
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.lang.instrument
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.lang.invoke
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.lang.management
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.lang.module
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.lang.reflect
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.math
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.net
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
FileDescriptor
Instances of the file descriptor class serve as an opaque handle
 to the underlying machine-specific structure representing an open
 file, an open socket, or another source or sink of bytes.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
InterruptedIOException
Signals that an I/O operation has been interrupted.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
UnsupportedEncodingException
The Character Encoding is not supported.
Classes in
java.io
used by
java.net.http
Class
Description
FileNotFoundException
Signals that an attempt to open the file denoted by a specified pathname
 has failed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.nio
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.nio.channels
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
java.nio.channels.spi
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
java.nio.charset
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.nio.file
Class
Description
BufferedReader
Reads text from a character-input stream, buffering characters so as to
 provide for the efficient reading of characters, arrays, and lines.
BufferedWriter
Writes text to a character-output stream, buffering characters so as to
 provide for the efficient writing of single characters, arrays, and strings.
Closeable
A
Closeable
is a source or destination of data that can be closed.
File
An abstract representation of file and directory pathnames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.nio.file.attribute
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.nio.file.spi
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Classes in
java.io
used by
java.rmi
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.rmi.dgc
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.rmi.server
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
DataInput
The
DataInput
interface provides
 for reading bytes from a binary stream and
 reconstructing from them data in any of
 the Java primitive types.
DataOutput
The
DataOutput
interface provides
 for converting data from any of the Java
 primitive types to a series of bytes and
 writing these bytes to a binary stream.
Externalizable
Only the identity of the class of an Externalizable instance is
 written in the serialization stream and it is the responsibility
 of the class to save and restore the contents of its instances.
FilterOutputStream
This class is the superclass of all classes that filter output
 streams.
Flushable
A
Flushable
is a destination of data that can be flushed.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectInput
ObjectInput extends the DataInput interface to include the reading of
 objects.
ObjectInputFilter
Filter classes, array lengths, and graph metrics during deserialization.
ObjectOutput
ObjectOutput extends the DataOutput interface to include writing of objects.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
StreamCorruptedException
Thrown when control information that was read from an object stream
 violates internal consistency checks.
Classes in
java.io
used by
java.security
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
File
An abstract representation of file and directory pathnames.
FilterInputStream
A
FilterInputStream
wraps some other input stream, which it uses as
 its basic source of data, possibly transforming the data along the way or
 providing additional functionality.
FilterOutputStream
This class is the superclass of all classes that filter output
 streams.
Flushable
A
Flushable
is a destination of data that can be flushed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.security.cert
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.security.interfaces
Class
Description
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.security.spec
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.sql
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
java.text
Class
Description
InvalidObjectException
Indicates that one or more deserialized objects failed validation
 tests.
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.time
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.time.chrono
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.time.format
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.time.temporal
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.time.zone
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.util
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
File
An abstract representation of file and directory pathnames.
FileNotFoundException
Signals that an attempt to open the file denoted by a specified pathname
 has failed.
Flushable
A
Flushable
is a destination of data that can be flushed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
UnsupportedEncodingException
The Character Encoding is not supported.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
java.util.concurrent
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.util.concurrent.atomic
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.util.concurrent.locks
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.util.jar
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
File
An abstract representation of file and directory pathnames.
FilterInputStream
A
FilterInputStream
wraps some other input stream, which it uses as
 its basic source of data, possibly transforming the data along the way or
 providing additional functionality.
FilterOutputStream
This class is the superclass of all classes that filter output
 streams.
Flushable
A
Flushable
is a destination of data that can be flushed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.util.logging
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
UnsupportedEncodingException
The Character Encoding is not supported.
Classes in
java.io
used by
java.util.prefs
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.util.regex
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.util.spi
Class
Description
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Classes in
java.io
used by
java.util.stream
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
java.util.zip
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
File
An abstract representation of file and directory pathnames.
FilterInputStream
A
FilterInputStream
wraps some other input stream, which it uses as
 its basic source of data, possibly transforming the data along the way or
 providing additional functionality.
FilterOutputStream
This class is the superclass of all classes that filter output
 streams.
Flushable
A
Flushable
is a destination of data that can be flushed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.accessibility
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
Classes in
java.io
used by
javax.annotation.processing
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.crypto
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
FilterInputStream
A
FilterInputStream
wraps some other input stream, which it uses as
 its basic source of data, possibly transforming the data along the way or
 providing additional functionality.
FilterOutputStream
This class is the superclass of all classes that filter output
 streams.
Flushable
A
Flushable
is a destination of data that can be flushed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.crypto.interfaces
Class
Description
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.crypto.spec
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.imageio
Class
Description
File
An abstract representation of file and directory pathnames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.imageio.metadata
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.imageio.spi
Class
Description
File
An abstract representation of file and directory pathnames.
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
javax.imageio.stream
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
DataInput
The
DataInput
interface provides
 for reading bytes from a binary stream and
 reconstructing from them data in any of
 the Java primitive types.
DataOutput
The
DataOutput
interface provides
 for converting data from any of the Java
 primitive types to a series of bytes and
 writing these bytes to a binary stream.
File
An abstract representation of file and directory pathnames.
FileNotFoundException
Signals that an attempt to open the file denoted by a specified pathname
 has failed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
RandomAccessFile
Instances of this class support both reading and writing to a
 random access file.
Classes in
java.io
used by
javax.lang.model
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.lang.model.element
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.lang.model.type
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.lang.model.util
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.management
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
ObjectInputStream
An ObjectInputStream deserializes primitive data and objects previously
 written using an ObjectOutputStream.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.management.loading
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
Externalizable
Only the identity of the class of an Externalizable instance is
 written in the serialization stream and it is the responsibility
 of the class to save and restore the contents of its instances.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectInput
ObjectInput extends the DataInput interface to include the reading of
 objects.
ObjectOutput
ObjectOutput extends the DataOutput interface to include writing of objects.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.management.modelmbean
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.management.monitor
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.management.openmbean
Class
Description
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.management.relation
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.management.remote
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.management.remote.rmi
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.management.timer
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.naming
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.naming.directory
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.naming.event
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.naming.ldap
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.naming.spi
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.net
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
javax.net.ssl
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.print
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.print.attribute
Class
Description
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
Serial
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.print.attribute.standard
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.print.event
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.rmi.ssl
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.script
Class
Description
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.security.auth
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.security.auth.callback
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.security.auth.kerberos
Class
Description
File
An abstract representation of file and directory pathnames.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.security.auth.login
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.security.auth.x500
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.security.cert
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.security.sasl
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.smartcardio
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.sound.midi
Class
Description
File
An abstract representation of file and directory pathnames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.sound.midi.spi
Class
Description
File
An abstract representation of file and directory pathnames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Classes in
java.io
used by
javax.sound.sampled
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
File
An abstract representation of file and directory pathnames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.sound.sampled.spi
Class
Description
File
An abstract representation of file and directory pathnames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Classes in
java.io
used by
javax.sql
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.sql.rowset
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.sql.rowset.serial
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.sql.rowset.spi
Class
Description
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.swing
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
File
An abstract representation of file and directory pathnames.
FilterInputStream
A
FilterInputStream
wraps some other input stream, which it uses as
 its basic source of data, possibly transforming the data along the way or
 providing additional functionality.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.border
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.colorchooser
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.event
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.filechooser
Class
Description
File
An abstract representation of file and directory pathnames.
FileNotFoundException
Signals that an attempt to open the file denoted by a specified pathname
 has failed.
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
javax.swing.plaf
Class
Description
File
An abstract representation of file and directory pathnames.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.plaf.basic
Class
Description
File
An abstract representation of file and directory pathnames.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.plaf.metal
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.plaf.multi
Class
Description
File
An abstract representation of file and directory pathnames.
Classes in
java.io
used by
javax.swing.plaf.nimbus
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.plaf.synth
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.table
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.text
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectInputStream
An ObjectInputStream deserializes primitive data and objects previously
 written using an ObjectOutputStream.
ObjectOutputStream
An ObjectOutputStream writes primitive data types and graphs of Java objects
 to an OutputStream.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.swing.text.html
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.swing.text.html.parser
Class
Description
DataInputStream
A data input stream lets an application read primitive Java data
 types from an underlying input stream in a machine-independent
 way.
IOException
Signals that an I/O exception of some sort has occurred.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.text.rtf
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.swing.tree
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.swing.undo
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.tools
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
File
An abstract representation of file and directory pathnames.
Flushable
A
Flushable
is a destination of data that can be flushed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.transaction.xa
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.catalog
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.crypto
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.crypto.dsig
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.datatype
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.namespace
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.parsers
Class
Description
File
An abstract representation of file and directory pathnames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.stream
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.xml.stream.events
Class
Description
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.xml.transform
Class
Description
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.transform.stream
Class
Description
File
An abstract representation of file and directory pathnames.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
javax.xml.validation
Class
Description
File
An abstract representation of file and directory pathnames.
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
javax.xml.xpath
Class
Description
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.dynalink
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.dynalink.beans
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.dynalink.linker
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.incubator.vector
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.javadoc.doclet
Class
Description
PrintWriter
Prints formatted representations of objects to a text-output stream.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.jfr
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.jfr.consumer
Class
Description
Closeable
A
Closeable
is a source or destination of data that can be closed.
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
jdk.jshell
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOError
Thrown when a serious I/O error has occurred.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
PrintWriter
Prints formatted representations of objects to a text-output stream.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.jshell.execution
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
ObjectInput
ObjectInput extends the DataInput interface to include the reading of
 objects.
ObjectOutput
ObjectOutput extends the DataOutput interface to include writing of objects.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Classes in
java.io
used by
jdk.jshell.spi
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.jshell.tool
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
PrintStream
A
PrintStream
adds functionality to another output stream,
 namely the ability to print representations of various data values
 conveniently.
Classes in
java.io
used by
jdk.management.jfr
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
jdk.net
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
jdk.nio
Class
Description
FileDescriptor
Instances of the file descriptor class serve as an opaque handle
 to the underlying machine-specific structure representing an open
 file, an open socket, or another source or sink of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
jdk.security.jarsigner
Class
Description
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
netscape.javascript
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
org.ietf.jgss
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
org.w3c.dom
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
org.w3c.dom.events
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
org.w3c.dom.ls
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
OutputStream
This abstract class is the superclass of all classes representing
 an output stream of bytes.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Writer
Abstract class for writing to character streams.
Classes in
java.io
used by
org.w3c.dom.ranges
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
org.w3c.dom.xpath
Class
Description
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
org.xml.sax
Class
Description
InputStream
This abstract class is the superclass of all classes representing
 an input stream of bytes.
IOException
Signals that an I/O exception of some sort has occurred.
Reader
Abstract class for reading character streams.
Serializable
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
Classes in
java.io
used by
org.xml.sax.ext
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Classes in
java.io
used by
org.xml.sax.helpers
Class
Description
IOException
Signals that an I/O exception of some sort has occurred.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.