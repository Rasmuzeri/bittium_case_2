OutputStreamWriter (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.base
Package
java.io
Class OutputStreamWriter
java.lang.Object
java.io.Writer
java.io.OutputStreamWriter
All Implemented Interfaces:
Closeable
,
Flushable
,
Appendable
,
AutoCloseable
Direct Known Subclasses:
FileWriter
public class
OutputStreamWriter
extends
Writer
An OutputStreamWriter is a bridge from character streams to byte streams:
 Characters written to it are encoded into bytes using a specified
charset
.  The charset that it uses
 may be specified by name or may be given explicitly, or the
 default charset may be accepted.
Each invocation of a write() method causes the encoding converter to be
 invoked on the given character(s).  The resulting bytes are accumulated in a
 buffer before being written to the underlying output stream.  Note that the
 characters passed to the write() methods are not buffered.
For top efficiency, consider wrapping an OutputStreamWriter within a
 BufferedWriter so as to avoid frequent converter invocations.  For example:
Copy
Writer out = new BufferedWriter(new OutputStreamWriter(anOutputStream));
A
surrogate pair
is a character represented by a sequence of two
char
values: A
high
surrogate in the range '\uD800' to
 '\uDBFF' followed by a
low
surrogate in the range '\uDC00' to
 '\uDFFF'.
A
malformed surrogate element
is a high surrogate that is not
 followed by a low surrogate or a low surrogate that is not preceded by a
 high surrogate.
This class always replaces malformed surrogate elements and unmappable
 character sequences with the charset's default
substitution sequence
.
 The
CharsetEncoder
class should be used when more
 control over the encoding process is required.
Since:
1.1
See Also:
BufferedWriter
OutputStream
Charset
Field Summary
Fields declared in class java.io.
Writer
lock
Constructor Summary
Constructors
Constructor
Description
OutputStreamWriter
(
OutputStream
out)
Creates an OutputStreamWriter that uses the default character encoding, or
 where
out
is a
PrintStream
, the charset used by the print
 stream.
OutputStreamWriter
(
OutputStream
out,
String
charsetName)
Creates an OutputStreamWriter that uses the named charset.
OutputStreamWriter
(
OutputStream
out,
Charset
cs)
Creates an OutputStreamWriter that uses the given charset.
OutputStreamWriter
(
OutputStream
out,
CharsetEncoder
enc)
Creates an OutputStreamWriter that uses the given charset encoder.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
close
()
Closes the stream, flushing it first.
void
flush
()
Flushes the stream.
String
getEncoding
()
Returns the name of the character encoding being used by this stream.
void
write
(char[] cbuf,
 int off,
 int len)
Writes a portion of an array of characters.
void
write
(int c)
Writes a single character.
void
write
(
String
str,
 int off,
 int len)
Writes a portion of a string.
Methods declared in class java.io.
Writer
append
,
append
,
append
,
nullWriter
,
write
,
write
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
OutputStreamWriter
public
OutputStreamWriter
(
OutputStream
out,
String
charsetName)
throws
UnsupportedEncodingException
Creates an OutputStreamWriter that uses the named charset.
Parameters:
out
- An OutputStream
charsetName
- The name of a supported
charset
Throws:
UnsupportedEncodingException
- If the named encoding is not supported
OutputStreamWriter
public
OutputStreamWriter
(
OutputStream
out)
Creates an OutputStreamWriter that uses the default character encoding, or
 where
out
is a
PrintStream
, the charset used by the print
 stream.
Parameters:
out
- An OutputStream
See Also:
Charset.defaultCharset()
OutputStreamWriter
public
OutputStreamWriter
(
OutputStream
out,
Charset
cs)
Creates an OutputStreamWriter that uses the given charset.
Parameters:
out
- An OutputStream
cs
- A charset
Since:
1.4
OutputStreamWriter
public
OutputStreamWriter
(
OutputStream
out,
CharsetEncoder
enc)
Creates an OutputStreamWriter that uses the given charset encoder.
Parameters:
out
- An OutputStream
enc
- A charset encoder
Since:
1.4
Method Details
getEncoding
public
String
getEncoding
()
Returns the name of the character encoding being used by this stream.
If the encoding has an historical name then that name is returned;
 otherwise the encoding's canonical name is returned.
If this instance was created with the
OutputStreamWriter(OutputStream, String)
constructor then the returned
 name, being unique for the encoding, may differ from the name passed to
 the constructor.  This method may return
null
if the stream has
 been closed.
Returns:
The historical name of this encoding, or possibly
null
if the stream has been closed
See Also:
Charset
write
public
void
write
(int c)
throws
IOException
Writes a single character.
Overrides:
write
in class
Writer
Parameters:
c
- int specifying a character to be written
Throws:
IOException
- If an I/O error occurs
write
public
void
write
(char[] cbuf,
 int off,
 int len)
throws
IOException
Writes a portion of an array of characters.
Specified by:
write
in class
Writer
Parameters:
cbuf
- Buffer of characters
off
- Offset from which to start writing characters
len
- Number of characters to write
Throws:
IndexOutOfBoundsException
- If
off
is negative, or
len
is negative,
          or
off + len
is negative or greater than the length
          of the given array
IOException
- If an I/O error occurs
write
public
void
write
(
String
str,
 int off,
 int len)
throws
IOException
Writes a portion of a string.
Overrides:
write
in class
Writer
Parameters:
str
- A String
off
- Offset from which to start writing characters
len
- Number of characters to write
Throws:
IndexOutOfBoundsException
- If
off
is negative, or
len
is negative,
          or
off + len
is negative or greater than the length
          of the given string
IOException
- If an I/O error occurs
flush
public
void
flush
()
           throws
IOException
Flushes the stream.
Specified by:
flush
in interface
Flushable
Specified by:
flush
in class
Writer
Throws:
IOException
- If an I/O error occurs
close
public
void
close
()
           throws
IOException
Description copied from class:
Writer
Closes the stream, flushing it first. Once the stream has been closed,
 further write() or flush() invocations will cause an IOException to be
 thrown. Closing a previously closed stream has no effect.
Specified by:
close
in interface
AutoCloseable
Specified by:
close
in interface
Closeable
Specified by:
close
in class
Writer
Throws:
IOException
- If an I/O error occurs
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.