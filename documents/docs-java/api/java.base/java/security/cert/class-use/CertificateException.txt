Uses of Class java.security.cert.CertificateException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.security.cert.CertificateException
Packages that use
CertificateException
Package
Description
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
javax.net.ssl
Provides classes for the secure socket package.
Uses of
CertificateException
in
java.security
Methods in
java.security
that throw
CertificateException
Modifier and Type
Method
Description
abstract void
KeyStoreSpi.
engineLoad
(
InputStream
stream,
 char[] password)
Loads the keystore from the given input stream.
void
KeyStoreSpi.
engineLoad
(
KeyStore.LoadStoreParameter
param)
Loads the keystore using the given
KeyStore.LoadStoreParameter
.
abstract void
KeyStoreSpi.
engineStore
(
OutputStream
stream,
 char[] password)
Stores this keystore to the given output stream, and protects its
 integrity with the given password.
void
KeyStoreSpi.
engineStore
(
KeyStore.LoadStoreParameter
param)
Stores this keystore using the given
KeyStore.LoadStoreParameter
.
static final
KeyStore
KeyStore.
getInstance
(
File
file,
 char[] password)
Returns a loaded keystore object of the appropriate keystore type.
static final
KeyStore
KeyStore.
getInstance
(
File
file,
KeyStore.LoadStoreParameter
param)
Returns a loaded keystore object of the appropriate keystore type.
final void
KeyStore.
load
(
InputStream
stream,
 char[] password)
Loads this keystore from the given input stream.
final void
KeyStore.
load
(
KeyStore.LoadStoreParameter
param)
Loads this keystore using the given
LoadStoreParameter
.
final void
KeyStore.
store
(
OutputStream
stream,
 char[] password)
Stores this keystore to the given output stream, and protects its
 integrity with the given password.
final void
KeyStore.
store
(
KeyStore.LoadStoreParameter
param)
Stores this keystore using the given
LoadStoreParameter
.
Uses of
CertificateException
in
java.security.cert
Subclasses of
CertificateException
in
java.security.cert
Modifier and Type
Class
Description
class
CertificateEncodingException
Certificate Encoding Exception.
class
CertificateExpiredException
Certificate Expired Exception.
class
CertificateNotYetValidException
Certificate is not yet valid exception.
class
CertificateParsingException
Certificate Parsing Exception.
class
CertificateRevokedException
An exception that indicates an X.509 certificate is revoked.
Methods in
java.security.cert
that throw
CertificateException
Modifier and Type
Method
Description
abstract
Certificate
CertificateFactorySpi.
engineGenerateCertificate
(
InputStream
inStream)
Generates a certificate object and initializes it with
 the data read from the input stream
inStream
.
abstract
Collection
<? extends
Certificate
>
CertificateFactorySpi.
engineGenerateCertificates
(
InputStream
inStream)
Returns a (possibly empty) collection view of the certificates read
 from the given input stream
inStream
.
CertPath
CertificateFactorySpi.
engineGenerateCertPath
(
InputStream
inStream)
Generates a
CertPath
object and initializes it with
 the data read from the
InputStream
inStream.
CertPath
CertificateFactorySpi.
engineGenerateCertPath
(
InputStream
inStream,
String
encoding)
Generates a
CertPath
object and initializes it with
 the data read from the
InputStream
inStream.
CertPath
CertificateFactorySpi.
engineGenerateCertPath
(
List
<? extends
Certificate
> certificates)
Generates a
CertPath
object and initializes it with
 a
List
of
Certificate
s.
final
Certificate
CertificateFactory.
generateCertificate
(
InputStream
inStream)
Generates a certificate object and initializes it with
 the data read from the input stream
inStream
.
final
Collection
<? extends
Certificate
>
CertificateFactory.
generateCertificates
(
InputStream
inStream)
Returns a (possibly empty) collection view of the certificates read
 from the given input stream
inStream
.
final
CertPath
CertificateFactory.
generateCertPath
(
InputStream
inStream)
Generates a
CertPath
object and initializes it with
 the data read from the
InputStream
inStream.
final
CertPath
CertificateFactory.
generateCertPath
(
InputStream
inStream,
String
encoding)
Generates a
CertPath
object and initializes it with
 the data read from the
InputStream
inStream.
final
CertPath
CertificateFactory.
generateCertPath
(
List
<? extends
Certificate
> certificates)
Generates a
CertPath
object and initializes it with
 a
List
of
Certificate
s.
static final
CertificateFactory
CertificateFactory.
getInstance
(
String
type)
Returns a certificate factory object that implements the
 specified certificate type.
static final
CertificateFactory
CertificateFactory.
getInstance
(
String
type,
String
provider)
Returns a certificate factory object for the specified
 certificate type.
static final
CertificateFactory
CertificateFactory.
getInstance
(
String
type,
Provider
provider)
Returns a certificate factory object for the specified
 certificate type.
abstract void
Certificate.
verify
(
PublicKey
key)
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
abstract void
Certificate.
verify
(
PublicKey
key,
String
sigProvider)
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
void
Certificate.
verify
(
PublicKey
key,
Provider
sigProvider)
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
void
X509Certificate.
verify
(
PublicKey
key,
Provider
sigProvider)
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
Uses of
CertificateException
in
javax.net.ssl
Methods in
javax.net.ssl
that throw
CertificateException
Modifier and Type
Method
Description
abstract void
X509ExtendedTrustManager.
checkClientTrusted
(
X509Certificate
[] chain,
String
authType,
Socket
socket)
Given the partial or complete certificate chain provided by the
 peer, build and validate the certificate path based on the
 authentication type and ssl parameters.
abstract void
X509ExtendedTrustManager.
checkClientTrusted
(
X509Certificate
[] chain,
String
authType,
SSLEngine
engine)
Given the partial or complete certificate chain provided by the
 peer, build and validate the certificate path based on the
 authentication type and ssl parameters.
void
X509TrustManager.
checkClientTrusted
(
X509Certificate
[] chain,
String
authType)
Given the partial or complete certificate chain provided by the
 peer, build a certificate path to a trusted root and return if
 it can be validated and is trusted for client SSL
 authentication based on the authentication type.
abstract void
X509ExtendedTrustManager.
checkServerTrusted
(
X509Certificate
[] chain,
String
authType,
Socket
socket)
Given the partial or complete certificate chain provided by the
 peer, build and validate the certificate path based on the
 authentication type and ssl parameters.
abstract void
X509ExtendedTrustManager.
checkServerTrusted
(
X509Certificate
[] chain,
String
authType,
SSLEngine
engine)
Given the partial or complete certificate chain provided by the
 peer, build and validate the certificate path based on the
 authentication type and ssl parameters.
void
X509TrustManager.
checkServerTrusted
(
X509Certificate
[] chain,
String
authType)
Given the partial or complete certificate chain provided by the
 peer, build a certificate path to a trusted root and return if
 it can be validated and is trusted for server SSL
 authentication based on the authentication type.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.