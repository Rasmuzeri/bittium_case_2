Uses of Class java.security.SignatureException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.security.SignatureException
Packages that use
SignatureException
Package
Description
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
javax.security.cert
Provides classes for public key certificates.
Uses of
SignatureException
in
java.security
Methods in
java.security
that throw
SignatureException
Modifier and Type
Method
Description
protected abstract byte[]
SignatureSpi.
engineSign
()
Returns the signature bytes of all the data
 updated so far.
protected int
SignatureSpi.
engineSign
(byte[] outbuf,
 int offset,
 int len)
Finishes this signature operation and stores the resulting signature
 bytes in the provided buffer
outbuf
, starting at
offset
.
protected abstract void
SignatureSpi.
engineUpdate
(byte b)
Updates the data to be signed or verified
 using the specified byte.
protected abstract void
SignatureSpi.
engineUpdate
(byte[] b,
 int off,
 int len)
Updates the data to be signed or verified, using the
 specified array of bytes, starting at the specified offset.
protected abstract boolean
SignatureSpi.
engineVerify
(byte[] sigBytes)
Verifies the passed-in signature.
protected boolean
SignatureSpi.
engineVerify
(byte[] sigBytes,
 int offset,
 int length)
Verifies the passed-in signature in the specified array
 of bytes, starting at the specified offset.
final byte[]
Signature.
sign
()
Returns the signature bytes of all the data updated.
final int
Signature.
sign
(byte[] outbuf,
 int offset,
 int len)
Finishes the signature operation and stores the resulting signature
 bytes in the provided buffer
outbuf
, starting at
offset
.
final void
Signature.
update
(byte b)
Updates the data to be signed or verified by a byte.
final void
Signature.
update
(byte[] data)
Updates the data to be signed or verified, using the specified
 array of bytes.
final void
Signature.
update
(byte[] data,
 int off,
 int len)
Updates the data to be signed or verified, using the specified
 array of bytes, starting at the specified offset.
final void
Signature.
update
(
ByteBuffer
data)
Updates the data to be signed or verified using the specified
 ByteBuffer.
final boolean
Signature.
verify
(byte[] signature)
Verifies the passed-in signature.
final boolean
Signature.
verify
(byte[] signature,
 int offset,
 int length)
Verifies the passed-in signature in the specified array
 of bytes, starting at the specified offset.
boolean
SignedObject.
verify
(
PublicKey
verificationKey,
Signature
verificationEngine)
Verifies that the signature in this
SignedObject
is the valid
 signature for the object stored inside, with the given
 verification key, using the designated verification engine.
Constructors in
java.security
that throw
SignatureException
Modifier
Constructor
Description
SignedObject
(
Serializable
object,
PrivateKey
signingKey,
Signature
signingEngine)
Constructs a
SignedObject
from any Serializable object.
Uses of
SignatureException
in
java.security.cert
Methods in
java.security.cert
that throw
SignatureException
Modifier and Type
Method
Description
abstract void
Certificate.
verify
(
PublicKey
key)
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
abstract void
Certificate.
verify
(
PublicKey
key,
String
sigProvider)
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
void
Certificate.
verify
(
PublicKey
key,
Provider
sigProvider)
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
void
X509Certificate.
verify
(
PublicKey
key,
Provider
sigProvider)
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
abstract void
X509CRL.
verify
(
PublicKey
key)
Verifies that this CRL was signed using the
 private key that corresponds to the given public key.
abstract void
X509CRL.
verify
(
PublicKey
key,
String
sigProvider)
Verifies that this CRL was signed using the
 private key that corresponds to the given public key.
void
X509CRL.
verify
(
PublicKey
key,
Provider
sigProvider)
Verifies that this CRL was signed using the
 private key that corresponds to the given public key.
Uses of
SignatureException
in
javax.security.cert
Methods in
javax.security.cert
that throw
SignatureException
Modifier and Type
Method
Description
abstract void
Certificate.
verify
(
PublicKey
key)
Deprecated, for removal: This API element is subject to removal in a future version.
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
abstract void
Certificate.
verify
(
PublicKey
key,
String
sigProvider)
Deprecated, for removal: This API element is subject to removal in a future version.
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.