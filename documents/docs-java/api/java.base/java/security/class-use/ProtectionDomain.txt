Uses of Class java.security.ProtectionDomain (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.security.ProtectionDomain
Packages that use
ProtectionDomain
Package
Description
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.instrument
Provides services that allow Java programming language agents to instrument
 programs running on the Java Virtual Machine (JVM).
java.security
Provides the classes and interfaces for the security framework.
javax.security.auth
This package provides a framework for authentication and
 authorization.
Uses of
ProtectionDomain
in
java.lang
Methods in
java.lang
that return
ProtectionDomain
Modifier and Type
Method
Description
ProtectionDomain
Class.
getProtectionDomain
()
Returns the
ProtectionDomain
of this class.
Methods in
java.lang
with parameters of type
ProtectionDomain
Modifier and Type
Method
Description
protected final
Class
<?>
ClassLoader.
defineClass
(
String
name,
 byte[] b,
 int off,
 int len,
ProtectionDomain
protectionDomain)
Converts an array of bytes into an instance of class
Class
,
 with a given
ProtectionDomain
.
protected final
Class
<?>
ClassLoader.
defineClass
(
String
name,
ByteBuffer
b,
ProtectionDomain
protectionDomain)
Converts a
ByteBuffer
into an instance
 of class
Class
, with the given
ProtectionDomain
.
Uses of
ProtectionDomain
in
java.lang.instrument
Methods in
java.lang.instrument
with parameters of type
ProtectionDomain
Modifier and Type
Method
Description
default byte[]
ClassFileTransformer.
transform
(
ClassLoader
loader,
String
className,
Class
<?> classBeingRedefined,
ProtectionDomain
protectionDomain,
 byte[] classfileBuffer)
Transforms the given class file and returns a new replacement class file.
default byte[]
ClassFileTransformer.
transform
(
Module
module,
ClassLoader
loader,
String
className,
Class
<?> classBeingRedefined,
ProtectionDomain
protectionDomain,
 byte[] classfileBuffer)
Transforms the given class file and returns a new replacement class file.
Uses of
ProtectionDomain
in
java.security
Methods in
java.security
that return
ProtectionDomain
Modifier and Type
Method
Description
ProtectionDomain
[]
DomainCombiner.
combine
(
ProtectionDomain
[] currentDomains,
ProtectionDomain
[] assignedDomains)
Deprecated, for removal: This API element is subject to removal in a future version.
Modify or update the provided ProtectionDomains.
Methods in
java.security
with parameters of type
ProtectionDomain
Modifier and Type
Method
Description
ProtectionDomain
[]
DomainCombiner.
combine
(
ProtectionDomain
[] currentDomains,
ProtectionDomain
[] assignedDomains)
Deprecated, for removal: This API element is subject to removal in a future version.
Modify or update the provided ProtectionDomains.
protected
PermissionCollection
PolicySpi.
engineGetPermissions
(
ProtectionDomain
domain)
Deprecated, for removal: This API element is subject to removal in a future version.
Return a PermissionCollection object containing the set of
 permissions granted to the specified ProtectionDomain.
protected abstract boolean
PolicySpi.
engineImplies
(
ProtectionDomain
domain,
Permission
permission)
Deprecated, for removal: This API element is subject to removal in a future version.
Check whether the policy has granted a Permission to a ProtectionDomain.
PermissionCollection
Policy.
getPermissions
(
ProtectionDomain
domain)
Deprecated, for removal: This API element is subject to removal in a future version.
Return a PermissionCollection object containing the set of
 permissions granted to the specified ProtectionDomain.
boolean
Policy.
implies
(
ProtectionDomain
domain,
Permission
permission)
Deprecated, for removal: This API element is subject to removal in a future version.
Evaluates the global policy for the permissions granted to
 the ProtectionDomain and tests whether the permission is
 granted.
Constructors in
java.security
with parameters of type
ProtectionDomain
Modifier
Constructor
Description
AccessControlContext
(
ProtectionDomain
[] context)
Deprecated, for removal: This API element is subject to removal in a future version.
Create an
AccessControlContext
with the given array of
ProtectionDomain
objects.
Uses of
ProtectionDomain
in
javax.security.auth
Methods in
javax.security.auth
that return
ProtectionDomain
Modifier and Type
Method
Description
ProtectionDomain
[]
SubjectDomainCombiner.
combine
(
ProtectionDomain
[] currentDomains,
ProtectionDomain
[] assignedDomains)
Deprecated, for removal: This API element is subject to removal in a future version.
Update the relevant ProtectionDomains with the Principals
 from the
Subject
associated with this
SubjectDomainCombiner
.
Methods in
javax.security.auth
with parameters of type
ProtectionDomain
Modifier and Type
Method
Description
ProtectionDomain
[]
SubjectDomainCombiner.
combine
(
ProtectionDomain
[] currentDomains,
ProtectionDomain
[] assignedDomains)
Deprecated, for removal: This API element is subject to removal in a future version.
Update the relevant ProtectionDomains with the Principals
 from the
Subject
associated with this
SubjectDomainCombiner
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.