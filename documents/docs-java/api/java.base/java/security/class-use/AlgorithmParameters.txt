Uses of Class java.security.AlgorithmParameters (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.security.AlgorithmParameters
Packages that use
AlgorithmParameters
Package
Description
java.security
Provides the classes and interfaces for the security framework.
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
Uses of
AlgorithmParameters
in
java.security
Methods in
java.security
that return
AlgorithmParameters
Modifier and Type
Method
Description
protected abstract
AlgorithmParameters
AlgorithmParameterGeneratorSpi.
engineGenerateParameters
()
Generates the parameters.
protected
AlgorithmParameters
SignatureSpi.
engineGetParameters
()
Returns the parameters used with this
Signature
object.
final
AlgorithmParameters
AlgorithmParameterGenerator.
generateParameters
()
Generates the parameters.
static
AlgorithmParameters
AlgorithmParameters.
getInstance
(
String
algorithm)
Returns a parameter object for the specified algorithm.
static
AlgorithmParameters
AlgorithmParameters.
getInstance
(
String
algorithm,
String
provider)
Returns a parameter object for the specified algorithm.
static
AlgorithmParameters
AlgorithmParameters.
getInstance
(
String
algorithm,
Provider
provider)
Returns a parameter object for the specified algorithm.
final
AlgorithmParameters
Signature.
getParameters
()
Returns the parameters used with this
Signature
object.
Methods in
java.security
with parameters of type
AlgorithmParameters
Modifier and Type
Method
Description
boolean
AlgorithmConstraints.
permits
(
Set
<
CryptoPrimitive
> primitives,
String
algorithm,
AlgorithmParameters
parameters)
Determines whether an algorithm is granted permission for the
 specified cryptographic primitives.
boolean
AlgorithmConstraints.
permits
(
Set
<
CryptoPrimitive
> primitives,
String
algorithm,
Key
key,
AlgorithmParameters
parameters)
Determines whether an algorithm and the corresponding key are granted
 permission for the specified cryptographic primitives.
Uses of
AlgorithmParameters
in
javax.crypto
Methods in
javax.crypto
that return
AlgorithmParameters
Modifier and Type
Method
Description
protected abstract
AlgorithmParameters
CipherSpi.
engineGetParameters
()
Returns the parameters used with this cipher.
AlgorithmParameters
EncryptedPrivateKeyInfo.
getAlgParameters
()
Returns the algorithm parameters used by the encryption algorithm.
final
AlgorithmParameters
Cipher.
getParameters
()
Returns the parameters used with this
Cipher
object.
Methods in
javax.crypto
with parameters of type
AlgorithmParameters
Modifier and Type
Method
Description
protected abstract void
CipherSpi.
engineInit
(int opmode,
Key
key,
AlgorithmParameters
params,
SecureRandom
random)
Initializes this
CipherSpi
object with a key, a set of
 algorithm parameters, and a source of randomness.
protected abstract void
ExemptionMechanismSpi.
engineInit
(
Key
key,
AlgorithmParameters
params)
Initializes this exemption mechanism with a key and a set of algorithm
 parameters.
final void
Cipher.
init
(int opmode,
Key
key,
AlgorithmParameters
params)
Initializes this
Cipher
object with a key and a set of algorithm
 parameters.
final void
Cipher.
init
(int opmode,
Key
key,
AlgorithmParameters
params,
SecureRandom
random)
Initializes this
Cipher
object with a key, a set of algorithm
 parameters, and a source of randomness.
final void
ExemptionMechanism.
init
(
Key
key,
AlgorithmParameters
params)
Initializes this exemption mechanism with a key and a set of algorithm
 parameters.
Constructors in
javax.crypto
with parameters of type
AlgorithmParameters
Modifier
Constructor
Description
EncryptedPrivateKeyInfo
(
AlgorithmParameters
algParams,
 byte[] encryptedData)
Constructs an
EncryptedPrivateKeyInfo
from the
 encryption algorithm parameters and the encrypted data.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.