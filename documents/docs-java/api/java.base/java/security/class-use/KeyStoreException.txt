Uses of Class java.security.KeyStoreException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.security.KeyStoreException
Packages that use
KeyStoreException
Package
Description
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
javax.net.ssl
Provides classes for the secure socket package.
Uses of
KeyStoreException
in
java.security
Methods in
java.security
that throw
KeyStoreException
Modifier and Type
Method
Description
final
Enumeration
<
String
>
KeyStore.
aliases
()
Lists all the alias names of this keystore.
final boolean
KeyStore.
containsAlias
(
String
alias)
Checks if the given alias exists in this keystore.
final void
KeyStore.
deleteEntry
(
String
alias)
Deletes the entry identified by the given alias from this keystore.
abstract void
KeyStoreSpi.
engineDeleteEntry
(
String
alias)
Deletes the entry identified by the given alias from this keystore.
KeyStore.Entry
KeyStoreSpi.
engineGetEntry
(
String
alias,
KeyStore.ProtectionParameter
protParam)
Gets a
KeyStore.Entry
for the specified alias
 with the specified protection parameter.
abstract void
KeyStoreSpi.
engineSetCertificateEntry
(
String
alias,
Certificate
cert)
Assigns the given certificate to the given alias.
void
KeyStoreSpi.
engineSetEntry
(
String
alias,
KeyStore.Entry
entry,
KeyStore.ProtectionParameter
protParam)
Saves a
KeyStore.Entry
under the specified alias.
abstract void
KeyStoreSpi.
engineSetKeyEntry
(
String
alias,
 byte[] key,
Certificate
[] chain)
Assigns the given key (that has already been protected) to the given
 alias.
abstract void
KeyStoreSpi.
engineSetKeyEntry
(
String
alias,
Key
key,
 char[] password,
Certificate
[] chain)
Assigns the given key to the given alias, protecting it with the given
 password.
final boolean
KeyStore.
entryInstanceOf
(
String
alias,
Class
<? extends
KeyStore.Entry
> entryClass)
Determines if the keystore
Entry
for the specified
alias
is an instance or subclass of the specified
entryClass
.
final
Set
<
KeyStore.Entry.Attribute
>
KeyStore.
getAttributes
(
String
alias)
Retrieves the attributes associated with the given alias.
final
Certificate
KeyStore.
getCertificate
(
String
alias)
Returns the certificate associated with the given alias.
final
String
KeyStore.
getCertificateAlias
(
Certificate
cert)
Returns the (alias) name of the first keystore entry whose certificate
 matches the given certificate.
final
Certificate
[]
KeyStore.
getCertificateChain
(
String
alias)
Returns the certificate chain associated with the given alias.
final
Date
KeyStore.
getCreationDate
(
String
alias)
Returns the creation date of the entry identified by the given alias.
final
KeyStore.Entry
KeyStore.
getEntry
(
String
alias,
KeyStore.ProtectionParameter
protParam)
Gets a keystore
Entry
for the specified alias
 with the specified protection parameter.
static final
KeyStore
KeyStore.
getInstance
(
File
file,
 char[] password)
Returns a loaded keystore object of the appropriate keystore type.
static final
KeyStore
KeyStore.
getInstance
(
File
file,
KeyStore.LoadStoreParameter
param)
Returns a loaded keystore object of the appropriate keystore type.
static
KeyStore
KeyStore.
getInstance
(
String
type)
Returns a
KeyStore
object of the specified type.
static
KeyStore
KeyStore.
getInstance
(
String
type,
String
provider)
Returns a
KeyStore
object of the specified type.
static
KeyStore
KeyStore.
getInstance
(
String
type,
Provider
provider)
Returns a
KeyStore
object of the specified type.
final
Key
KeyStore.
getKey
(
String
alias,
 char[] password)
Returns the key associated with the given alias, using the given
 password to recover it.
abstract
KeyStore
KeyStore.Builder.
getKeyStore
()
Returns the
KeyStore
described by this object.
abstract
KeyStore.ProtectionParameter
KeyStore.Builder.
getProtectionParameter
(
String
alias)
Returns the
ProtectionParameter
that should be used to obtain
 the
Entry
with the given alias.
final boolean
KeyStore.
isCertificateEntry
(
String
alias)
Returns
true
if the entry identified by the given alias
 was created by a call to
setCertificateEntry
,
 or created by a call to
setEntry
with a
TrustedCertificateEntry
.
final boolean
KeyStore.
isKeyEntry
(
String
alias)
Returns
true
if the entry identified by the given alias
 was created by a call to
setKeyEntry
,
 or created by a call to
setEntry
with a
PrivateKeyEntry
or a
SecretKeyEntry
.
final void
KeyStore.
setCertificateEntry
(
String
alias,
Certificate
cert)
Assigns the given trusted certificate to the given alias.
final void
KeyStore.
setEntry
(
String
alias,
KeyStore.Entry
entry,
KeyStore.ProtectionParameter
protParam)
Saves a keystore
Entry
under the specified alias.
final void
KeyStore.
setKeyEntry
(
String
alias,
 byte[] key,
Certificate
[] chain)
Assigns the given key (that has already been protected) to the given
 alias.
final void
KeyStore.
setKeyEntry
(
String
alias,
Key
key,
 char[] password,
Certificate
[] chain)
Assigns the given key to the given alias, protecting it with the given
 password.
final int
KeyStore.
size
()
Retrieves the number of entries in this keystore.
final void
KeyStore.
store
(
OutputStream
stream,
 char[] password)
Stores this keystore to the given output stream, and protects its
 integrity with the given password.
final void
KeyStore.
store
(
KeyStore.LoadStoreParameter
param)
Stores this keystore using the given
LoadStoreParameter
.
Uses of
KeyStoreException
in
java.security.cert
Constructors in
java.security.cert
that throw
KeyStoreException
Modifier
Constructor
Description
PKIXBuilderParameters
(
KeyStore
keystore,
CertSelector
targetConstraints)
Creates an instance of
PKIXBuilderParameters
that
 populates the set of most-trusted CAs from the trusted
 certificate entries contained in the specified
KeyStore
.
PKIXParameters
(
KeyStore
keystore)
Creates an instance of
PKIXParameters
that
 populates the set of most-trusted CAs from the trusted
 certificate entries contained in the specified
KeyStore
.
Uses of
KeyStoreException
in
javax.net.ssl
Methods in
javax.net.ssl
that throw
KeyStoreException
Modifier and Type
Method
Description
protected abstract void
KeyManagerFactorySpi.
engineInit
(
KeyStore
ks,
 char[] password)
Initializes this factory with a source of key material.
protected abstract void
TrustManagerFactorySpi.
engineInit
(
KeyStore
ks)
Initializes this factory with a source of certificate
 authorities and related trust material.
final void
KeyManagerFactory.
init
(
KeyStore
ks,
 char[] password)
Initializes this factory with a source of key material.
final void
TrustManagerFactory.
init
(
KeyStore
ks)
Initializes this factory with a source of certificate
 authorities and related trust material.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.