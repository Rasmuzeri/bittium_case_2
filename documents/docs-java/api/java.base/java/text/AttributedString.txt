AttributedString (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.base
Package
java.text
Class AttributedString
java.lang.Object
java.text.AttributedString
public class
AttributedString
extends
Object
An AttributedString holds text and related attribute information. It
 may be used as the actual data storage in some cases where a text
 reader wants to access attributed text through the AttributedCharacterIterator
 interface.
An attribute is a key/value pair, identified by the key.  No two
 attributes on a given character can have the same key.
The values for an attribute are immutable, or must not be mutated
 by clients or storage.  They are always passed by reference, and not
 cloned.
Since:
1.2
See Also:
AttributedCharacterIterator
Annotation
Constructor Summary
Constructors
Constructor
Description
AttributedString
(
String
text)
Constructs an AttributedString instance with the given text.
AttributedString
(
String
text,
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes)
Constructs an AttributedString instance with the given text and attributes.
AttributedString
(
AttributedCharacterIterator
text)
Constructs an AttributedString instance with the given attributed
 text represented by AttributedCharacterIterator.
AttributedString
(
AttributedCharacterIterator
text,
 int beginIndex,
 int endIndex)
Constructs an AttributedString instance with the subrange of
 the given attributed text represented by
 AttributedCharacterIterator.
AttributedString
(
AttributedCharacterIterator
text,
 int beginIndex,
 int endIndex,
AttributedCharacterIterator.Attribute
[] attributes)
Constructs an AttributedString instance with the subrange of
 the given attributed text represented by
 AttributedCharacterIterator.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
addAttribute
(
AttributedCharacterIterator.Attribute
attribute,
Object
value)
Adds an attribute to the entire string.
void
addAttribute
(
AttributedCharacterIterator.Attribute
attribute,
Object
value,
 int beginIndex,
 int endIndex)
Adds an attribute to a subrange of the string.
void
addAttributes
(
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes,
 int beginIndex,
 int endIndex)
Adds a set of attributes to a subrange of the string.
AttributedCharacterIterator
getIterator
()
Creates an AttributedCharacterIterator instance that provides access to the entire contents of
 this string.
AttributedCharacterIterator
getIterator
(
AttributedCharacterIterator.Attribute
[] attributes)
Creates an AttributedCharacterIterator instance that provides access to
 selected contents of this string.
AttributedCharacterIterator
getIterator
(
AttributedCharacterIterator.Attribute
[] attributes,
 int beginIndex,
 int endIndex)
Creates an AttributedCharacterIterator instance that provides access to
 selected contents of this string.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
AttributedString
public
AttributedString
(
String
text)
Constructs an AttributedString instance with the given text.
Parameters:
text
- The text for this attributed string.
Throws:
NullPointerException
- if
text
is null.
AttributedString
public
AttributedString
(
String
text,
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes)
Constructs an AttributedString instance with the given text and attributes.
Parameters:
text
- The text for this attributed string.
attributes
- The attributes that apply to the entire string.
Throws:
NullPointerException
- if
text
or
attributes
is null.
IllegalArgumentException
- if the text has length 0
 and the attributes parameter is not an empty Map (attributes
 cannot be applied to a 0-length range).
AttributedString
public
AttributedString
(
AttributedCharacterIterator
text)
Constructs an AttributedString instance with the given attributed
 text represented by AttributedCharacterIterator.
Parameters:
text
- The text for this attributed string.
Throws:
NullPointerException
- if
text
is null.
AttributedString
public
AttributedString
(
AttributedCharacterIterator
text,
 int beginIndex,
 int endIndex)
Constructs an AttributedString instance with the subrange of
 the given attributed text represented by
 AttributedCharacterIterator. If the given range produces an
 empty text, all attributes will be discarded.  Note that any
 attributes wrapped by an Annotation object are discarded for a
 subrange of the original attribute range.
Parameters:
text
- The text for this attributed string.
beginIndex
- Index of the first character of the range.
endIndex
- Index of the character following the last character
 of the range.
Throws:
NullPointerException
- if
text
is null.
IllegalArgumentException
- if the subrange given by
 beginIndex and endIndex is out of the text range.
See Also:
Annotation
AttributedString
public
AttributedString
(
AttributedCharacterIterator
text,
 int beginIndex,
 int endIndex,
AttributedCharacterIterator.Attribute
[] attributes)
Constructs an AttributedString instance with the subrange of
 the given attributed text represented by
 AttributedCharacterIterator.  Only attributes that match the
 given attributes will be incorporated into the instance. If the
 given range produces an empty text, all attributes will be
 discarded. Note that any attributes wrapped by an Annotation
 object are discarded for a subrange of the original attribute
 range.
Parameters:
text
- The text for this attributed string.
beginIndex
- Index of the first character of the range.
endIndex
- Index of the character following the last character
 of the range.
attributes
- Specifies attributes to be extracted
 from the text. If null is specified, all available attributes will
 be used.
Throws:
NullPointerException
- if
text
is null.
IllegalArgumentException
- if the subrange given by
 beginIndex and endIndex is out of the text range.
See Also:
Annotation
Method Details
addAttribute
public
void
addAttribute
(
AttributedCharacterIterator.Attribute
attribute,
Object
value)
Adds an attribute to the entire string.
Parameters:
attribute
- the attribute key
value
- the value of the attribute; may be null
Throws:
NullPointerException
- if
attribute
is null.
IllegalArgumentException
- if the AttributedString has length 0
 (attributes cannot be applied to a 0-length range).
addAttribute
public
void
addAttribute
(
AttributedCharacterIterator.Attribute
attribute,
Object
value,
 int beginIndex,
 int endIndex)
Adds an attribute to a subrange of the string.
Parameters:
attribute
- the attribute key
value
- The value of the attribute. May be null.
beginIndex
- Index of the first character of the range.
endIndex
- Index of the character following the last character of the range.
Throws:
NullPointerException
- if
attribute
is null.
IllegalArgumentException
- if beginIndex is less than 0, endIndex is
 greater than the length of the string, or beginIndex and endIndex together don't
 define a non-empty subrange of the string.
addAttributes
public
void
addAttributes
(
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes,
 int beginIndex,
 int endIndex)
Adds a set of attributes to a subrange of the string.
Parameters:
attributes
- The attributes to be added to the string.
beginIndex
- Index of the first character of the range.
endIndex
- Index of the character following the last
 character of the range.
Throws:
NullPointerException
- if
attributes
is null.
IllegalArgumentException
- if beginIndex is less than
 0, endIndex is greater than the length of the string, or
 beginIndex and endIndex together don't define a non-empty
 subrange of the string and the attributes parameter is not an
 empty Map.
getIterator
public
AttributedCharacterIterator
getIterator
()
Creates an AttributedCharacterIterator instance that provides access to the entire contents of
 this string.
Returns:
An iterator providing access to the text and its attributes.
getIterator
public
AttributedCharacterIterator
getIterator
(
AttributedCharacterIterator.Attribute
[] attributes)
Creates an AttributedCharacterIterator instance that provides access to
 selected contents of this string.
 Information about attributes not listed in attributes that the
 implementor may have need not be made accessible through the iterator.
 If the list is null, all available attribute information should be made
 accessible.
Parameters:
attributes
- a list of attributes that the client is interested in
Returns:
an iterator providing access to the entire text and its selected attributes
getIterator
public
AttributedCharacterIterator
getIterator
(
AttributedCharacterIterator.Attribute
[] attributes,
 int beginIndex,
 int endIndex)
Creates an AttributedCharacterIterator instance that provides access to
 selected contents of this string.
 Information about attributes not listed in attributes that the
 implementor may have need not be made accessible through the iterator.
 If the list is null, all available attribute information should be made
 accessible.
Parameters:
attributes
- a list of attributes that the client is interested in
beginIndex
- the index of the first character
endIndex
- the index of the character following the last character
Returns:
an iterator providing access to the text and its attributes
Throws:
IllegalArgumentException
- if beginIndex is less than 0,
 endIndex is greater than the length of the string, or beginIndex is
 greater than endIndex.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.