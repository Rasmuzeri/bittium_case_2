Uses of Interface java.util.Spliterator.OfDouble (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.Spliterator.OfDouble
Packages that use
Spliterator.OfDouble
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
Uses of
Spliterator.OfDouble
in
java.util
Classes in
java.util
that implement
Spliterator.OfDouble
Modifier and Type
Class
Description
static class
Spliterators.AbstractDoubleSpliterator
An abstract
Spliterator.OfDouble
that implements
trySplit
to permit limited parallelism.
Methods in
java.util
that return
Spliterator.OfDouble
Modifier and Type
Method
Description
static
Spliterator.OfDouble
Spliterators.
emptyDoubleSpliterator
()
Creates an empty
Spliterator.OfDouble
static
Spliterator.OfDouble
Arrays.
spliterator
(double[] array)
Returns a
Spliterator.OfDouble
covering all of the specified
 array.
static
Spliterator.OfDouble
Arrays.
spliterator
(double[] array,
 int startInclusive,
 int endExclusive)
Returns a
Spliterator.OfDouble
covering the specified range of
 the specified array.
static
Spliterator.OfDouble
Spliterators.
spliterator
(double[] array,
 int additionalCharacteristics)
Creates a
Spliterator.OfDouble
covering the elements of a given array,
 using a customized set of spliterator characteristics.
static
Spliterator.OfDouble
Spliterators.
spliterator
(double[] array,
 int fromIndex,
 int toIndex,
 int additionalCharacteristics)
Creates a
Spliterator.OfDouble
covering a range of elements of a
 given array, using a customized set of spliterator characteristics.
static
Spliterator.OfDouble
Spliterators.
spliterator
(
PrimitiveIterator.OfDouble
iterator,
 long size,
 int characteristics)
Creates a
Spliterator.OfDouble
using a given
DoubleStream.DoubleIterator
as the source of elements, and with a
 given initially reported size.
static
Spliterator.OfDouble
Spliterators.
spliteratorUnknownSize
(
PrimitiveIterator.OfDouble
iterator,
 int characteristics)
Creates a
Spliterator.OfDouble
using a given
DoubleStream.DoubleIterator
as the source of elements, with no
 initial size estimate.
Spliterator.OfDouble
Spliterators.AbstractDoubleSpliterator.
trySplit
()
If this spliterator can be partitioned, returns a Spliterator
 covering elements, that will, upon return from this method, not
 be covered by this Spliterator.
Methods in
java.util
with parameters of type
Spliterator.OfDouble
Modifier and Type
Method
Description
static
PrimitiveIterator.OfDouble
Spliterators.
iterator
(
Spliterator.OfDouble
spliterator)
Creates an
PrimitiveIterator.OfDouble
from a
Spliterator.OfDouble
.
Uses of
Spliterator.OfDouble
in
java.util.stream
Methods in
java.util.stream
with parameters of type
Spliterator.OfDouble
Modifier and Type
Method
Description
static
DoubleStream
StreamSupport.
doubleStream
(
Spliterator.OfDouble
spliterator,
 boolean parallel)
Creates a new sequential or parallel
DoubleStream
from a
Spliterator.OfDouble
.
Method parameters in
java.util.stream
with type arguments of type
Spliterator.OfDouble
Modifier and Type
Method
Description
static
DoubleStream
StreamSupport.
doubleStream
(
Supplier
<? extends
Spliterator.OfDouble
> supplier,
 int characteristics,
 boolean parallel)
Creates a new sequential or parallel
DoubleStream
from a
Supplier
of
Spliterator.OfDouble
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.