Uses of Class java.util.Hashtable (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.Hashtable
Packages that use
Hashtable
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.image
Provides classes for creating and modifying images.
java.security
Provides the classes and interfaces for the security framework.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
javax.management
Provides the core classes for the Java Management Extensions.
javax.naming
Provides the classes and interfaces for accessing naming services.
javax.naming.directory
Extends the
javax.naming
package to provide functionality
for accessing directory services.
javax.naming.ldap
Provides support for LDAPv3 extended operations and controls.
javax.naming.spi
Provides the means for dynamically plugging in support for accessing
naming and directory services through the
javax.naming
and related packages.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.text.html.parser
Provides the default HTML parser, along with support classes.
javax.swing.undo
Allows developers to provide support for undo/redo in applications such as
 text editors.
Uses of
Hashtable
in
java.awt
Fields in
java.awt
declared as
Hashtable
Modifier and Type
Field
Description
protected
Hashtable
<
Component
,
GridBagConstraints
>
GridBagLayout.
comptable
This hashtable maintains the association between
 a component and its gridbag constraints.
Uses of
Hashtable
in
java.awt.image
Methods in
java.awt.image
with parameters of type
Hashtable
Modifier and Type
Method
Description
void
CropImageFilter.
setProperties
(
Hashtable
<?,
?> props)
Passes along  the properties from the source object after adding a
 property indicating the cropped region.
void
ImageConsumer.
setProperties
(
Hashtable
<?,
?> props)
Sets the extensible list of properties associated with this image.
void
ImageFilter.
setProperties
(
Hashtable
<?,
?> props)
Passes the properties from the source object along after adding a
 property indicating the stream of filters it has been run through.
void
PixelGrabber.
setProperties
(
Hashtable
<?,
?> props)
The setProperties method is part of the ImageConsumer API which
 this class must implement to retrieve the pixels.
void
ReplicateScaleFilter.
setProperties
(
Hashtable
<?,
?> props)
Passes along the properties from the source object after adding a
 property indicating the scale applied.
Constructors in
java.awt.image
with parameters of type
Hashtable
Modifier
Constructor
Description
BufferedImage
(
ColorModel
cm,
WritableRaster
raster,
 boolean isRasterPremultiplied,
Hashtable
<?,
?> properties)
Constructs a new
BufferedImage
with a specified
ColorModel
and
Raster
.
MemoryImageSource
(int w,
 int h,
 int[] pix,
 int off,
 int scan,
Hashtable
<?,
?> props)
Constructs an ImageProducer object which uses an array of integers
 in the default RGB ColorModel to produce data for an Image object.
MemoryImageSource
(int w,
 int h,
ColorModel
cm,
 byte[] pix,
 int off,
 int scan,
Hashtable
<?,
?> props)
Constructs an ImageProducer object which uses an array of bytes
 to produce data for an Image object.
MemoryImageSource
(int w,
 int h,
ColorModel
cm,
 int[] pix,
 int off,
 int scan,
Hashtable
<?,
?> props)
Constructs an ImageProducer object which uses an array of integers
 to produce data for an Image object.
Uses of
Hashtable
in
java.security
Subclasses of
Hashtable
in
java.security
Modifier and Type
Class
Description
class
AuthProvider
This class defines login and logout methods for a provider.
class
Provider
This class represents a "provider" for the
 Java Security API, where a provider implements some or all parts of
 Java Security.
Uses of
Hashtable
in
java.util
Subclasses of
Hashtable
in
java.util
Modifier and Type
Class
Description
class
Properties
The
Properties
class represents a persistent set of
 properties.
Uses of
Hashtable
in
javax.management
Methods in
javax.management
that return
Hashtable
Modifier and Type
Method
Description
Hashtable
<
String
,
String
>
ObjectName.
getKeyPropertyList
()
Returns the key properties as a Hashtable.
Methods in
javax.management
with parameters of type
Hashtable
Modifier and Type
Method
Description
static
ObjectName
ObjectName.
getInstance
(
String
domain,
Hashtable
<
String
,
String
> table)
Return an instance of ObjectName that can be used anywhere
 an object obtained with
new ObjectName(domain, table)
can be used.
Constructors in
javax.management
with parameters of type
Hashtable
Modifier
Constructor
Description
ObjectName
(
String
domain,
Hashtable
<
String
,
String
> table)
Construct an object name with several key properties from a Hashtable.
Uses of
Hashtable
in
javax.naming
Fields in
javax.naming
declared as
Hashtable
Modifier and Type
Field
Description
protected
Hashtable
<?,
?>
CannotProceedException.
environment
Contains the environment
 relevant for the Context or DirContext method that cannot proceed.
protected
Hashtable
<
Object
,
Object
>
InitialContext.
myProps
The environment associated with this InitialContext.
Methods in
javax.naming
that return
Hashtable
Modifier and Type
Method
Description
Hashtable
<?,
?>
CannotProceedException.
getEnvironment
()
Retrieves the environment that was in effect when this exception
 was created.
Hashtable
<?,
?>
Context.
getEnvironment
()
Retrieves the environment in effect for this context.
Hashtable
<?,
?>
InitialContext.
getEnvironment
()
Methods in
javax.naming
with parameters of type
Hashtable
Modifier and Type
Method
Description
abstract
Context
ReferralException.
getReferralContext
(
Hashtable
<?,
?> env)
Retrieves the context at which to continue the method using
 environment properties.
protected void
InitialContext.
init
(
Hashtable
<?,
?> environment)
Initializes the initial context using the supplied environment.
void
CannotProceedException.
setEnvironment
(
Hashtable
<?,
?> environment)
Sets the environment that will be returned when getEnvironment()
 is called.
Constructors in
javax.naming
with parameters of type
Hashtable
Modifier
Constructor
Description
InitialContext
(
Hashtable
<?,
?> environment)
Constructs an initial context using the supplied environment.
Uses of
Hashtable
in
javax.naming.directory
Constructors in
javax.naming.directory
with parameters of type
Hashtable
Modifier
Constructor
Description
InitialDirContext
(
Hashtable
<?,
?> environment)
Constructs an initial DirContext using the supplied environment.
Uses of
Hashtable
in
javax.naming.ldap
Methods in
javax.naming.ldap
with parameters of type
Hashtable
Modifier and Type
Method
Description
static
Control
ControlFactory.
getControlInstance
(
Control
ctl,
Context
ctx,
Hashtable
<?,
?> env)
Creates a control using known control factories.
abstract
Context
LdapReferralException.
getReferralContext
(
Hashtable
<?,
?> env)
Retrieves the context at which to continue the method using
 environment properties and no controls.
abstract
Context
LdapReferralException.
getReferralContext
(
Hashtable
<?,
?> env,
Control
[] reqCtls)
Retrieves the context at which to continue the method using
 request controls and environment properties.
Constructors in
javax.naming.ldap
with parameters of type
Hashtable
Modifier
Constructor
Description
InitialLdapContext
(
Hashtable
<?,
?> environment,
Control
[] connCtls)
Constructs an initial context
 using environment properties and connection request controls.
Uses of
Hashtable
in
javax.naming.spi
Methods in
javax.naming.spi
with parameters of type
Hashtable
Modifier and Type
Method
Description
InitialContextFactory
InitialContextFactoryBuilder.
createInitialContextFactory
(
Hashtable
<?,
?> environment)
Creates an initial context factory using the specified
 environment.
ObjectFactory
ObjectFactoryBuilder.
createObjectFactory
(
Object
obj,
Hashtable
<?,
?> environment)
Creates a new object factory using the environment supplied.
Context
InitialContextFactory.
getInitialContext
(
Hashtable
<?,
?> environment)
Creates an Initial Context for beginning name resolution.
static
Context
NamingManager.
getInitialContext
(
Hashtable
<?,
?> env)
Creates an initial context using the specified environment
 properties.
static
Object
DirectoryManager.
getObjectInstance
(
Object
refInfo,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
attrs)
Creates an instance of an object for the specified object,
 attributes, and environment.
Object
DirObjectFactory.
getObjectInstance
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
attrs)
Creates an object using the location or reference information, and attributes
 specified.
static
Object
NamingManager.
getObjectInstance
(
Object
refInfo,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Creates an instance of an object for the specified object
 and environment.
Object
ObjectFactory.
getObjectInstance
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Creates an object using the location or reference information
 specified.
static
DirStateFactory.Result
DirectoryManager.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
attrs)
Retrieves the state of an object for binding when given the original
 object and its attributes.
DirStateFactory.Result
DirStateFactory.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
inAttrs)
Retrieves the state of an object for binding given the object and attributes
 to be transformed.
static
Object
NamingManager.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Retrieves the state of an object for binding.
Object
StateFactory.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Retrieves the state of an object for binding.
static
Context
NamingManager.
getURLContext
(
String
scheme,
Hashtable
<?,
?> environment)
Creates a context for the given URL scheme id.
Uses of
Hashtable
in
javax.swing
Subclasses of
Hashtable
in
javax.swing
Modifier and Type
Class
Description
class
UIDefaults
A table of defaults for Swing components.
Fields in
javax.swing
declared as
Hashtable
Modifier and Type
Field
Description
protected
Hashtable
<
Object
,
Object
>
JTable.
defaultEditorsByColumnClass
A table of objects that display and edit the contents of a cell,
 indexed by class as declared in
getColumnClass
in the
TableModel
interface.
protected
Hashtable
<
Object
,
Object
>
JTable.
defaultRenderersByColumnClass
A table of objects that display the contents of a cell,
 indexed by class as declared in
getColumnClass
in the
TableModel
interface.
Methods in
javax.swing
that return
Hashtable
Modifier and Type
Method
Description
Hashtable
<
Integer
,
JComponent
>
JSlider.
createStandardLabels
(int increment)
Creates a
Hashtable
of numerical text labels, starting at the
 slider minimum, and using the increment specified.
Hashtable
<
Integer
,
JComponent
>
JSlider.
createStandardLabels
(int increment,
 int start)
Creates a
Hashtable
of numerical text labels, starting at the
 starting point specified, and using the increment specified.
protected
Hashtable
<
Component
,
Integer
>
JLayeredPane.
getComponentToLayer
()
Returns the hashtable that maps components to layers.
Constructors in
javax.swing
with parameters of type
Hashtable
Modifier
Constructor
Description
JTree
(
Hashtable
<?,
?> value)
Returns a
JTree
created from a
Hashtable
which does not display with root.
Uses of
Hashtable
in
javax.swing.plaf.basic
Fields in
javax.swing.plaf.basic
declared as
Hashtable
Modifier and Type
Field
Description
protected
Hashtable
<
TreePath
,
Boolean
>
BasicTreeUI.
drawingCache
Used for minimizing the drawing of vertical lines.
protected
Hashtable
<
File
,
Icon
>
BasicFileChooserUI.BasicFileView.
iconCache
The icon cache
Uses of
Hashtable
in
javax.swing.text.html.parser
Fields in
javax.swing.text.html.parser
declared as
Hashtable
Modifier and Type
Field
Description
Hashtable
<
String
,
Element
>
DTD.
elementHash
The hash table contains the name of element and
 the corresponding element.
Hashtable
<
Object
,
Entity
>
DTD.
entityHash
The hash table contains an
Object
and the corresponding
Entity
Uses of
Hashtable
in
javax.swing.undo
Fields in
javax.swing.undo
declared as
Hashtable
Modifier and Type
Field
Description
protected
Hashtable
<
Object
,
Object
>
StateEdit.
postState
The state information after the edit
protected
Hashtable
<
Object
,
Object
>
StateEdit.
preState
The state information prior to the edit
Methods in
javax.swing.undo
with parameters of type
Hashtable
Modifier and Type
Method
Description
void
StateEditable.
restoreState
(
Hashtable
<?,
?> state)
Upon receiving this message the receiver should extract any relevant
 state out of
state
.
void
StateEditable.
storeState
(
Hashtable
<
Object
,
Object
> state)
Upon receiving this message the receiver should place any relevant
 state into
state
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.