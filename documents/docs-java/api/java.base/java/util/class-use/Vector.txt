Uses of Class java.util.Vector (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.Vector
Packages that use
Vector
Package
Description
java.awt.image
Provides classes for creating and modifying images.
java.awt.image.renderable
Provides classes and interfaces for producing rendering-independent images.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
javax.accessibility
Defines a contract between user-interface components and an assistive
 technology that provides access to those components.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.timer
Provides the definition of the Timer MBean.
javax.naming
Provides the classes and interfaces for accessing naming services.
javax.naming.directory
Extends the
javax.naming
package to provide functionality
for accessing directory services.
javax.sound.midi
Provides interfaces and classes for I/O, sequencing, and synthesis of MIDI
 (Musical Instrument Digital Interface) data.
javax.sql.rowset.serial
Provides utility classes to allow serializable mappings between SQL types
 and data types in the Java programming language.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
javax.swing.text.html.parser
Provides the default HTML parser, along with support classes.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
javax.swing.undo
Allows developers to provide support for undo/redo in applications such as
 text editors.
Uses of
Vector
in
java.awt.image
Methods in
java.awt.image
that return
Vector
Modifier and Type
Method
Description
Vector
<
RenderedImage
>
BufferedImage.
getSources
()
Returns a
Vector
of
RenderedImage
objects that are
 the immediate sources, not the sources of these immediate sources,
 of image data for this
BufferedImage
.
Vector
<
RenderedImage
>
RenderedImage.
getSources
()
Returns a vector of RenderedImages that are the immediate sources of
 image data for this RenderedImage.
Uses of
Vector
in
java.awt.image.renderable
Fields in
java.awt.image.renderable
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
Object
>
ParameterBlock.
parameters
A Vector of non-source parameters, stored as arbitrary Objects.
protected
Vector
<
Object
>
ParameterBlock.
sources
A Vector of sources, stored as arbitrary Objects.
Methods in
java.awt.image.renderable
that return
Vector
Modifier and Type
Method
Description
Vector
<
Object
>
ParameterBlock.
getParameters
()
Returns the entire Vector of parameters.
Vector
<
Object
>
ParameterBlock.
getSources
()
Returns the entire Vector of sources.
Vector
<
RenderableImage
>
RenderableImage.
getSources
()
Returns a vector of RenderableImages that are the sources of
 image data for this RenderableImage.
Vector
<
RenderableImage
>
RenderableImageOp.
getSources
()
Returns a vector of RenderableImages that are the sources of
 image data for this RenderableImage.
Methods in
java.awt.image.renderable
with parameters of type
Vector
Modifier and Type
Method
Description
void
ParameterBlock.
setParameters
(
Vector
<
Object
> parameters)
Sets the entire Vector of parameters to a given Vector.
void
ParameterBlock.
setSources
(
Vector
<
Object
> sources)
Sets the entire Vector of sources to a given Vector.
Constructors in
java.awt.image.renderable
with parameters of type
Vector
Modifier
Constructor
Description
ParameterBlock
(
Vector
<
Object
> sources)
Constructs a
ParameterBlock
with a given Vector
 of sources.
ParameterBlock
(
Vector
<
Object
> sources,
Vector
<
Object
> parameters)
Constructs a
ParameterBlock
with a given Vector of sources and
 Vector of parameters.
Uses of
Vector
in
java.util
Subclasses of
Vector
in
java.util
Modifier and Type
Class
Description
class
Stack
<E>
The
Stack
class represents a last-in-first-out
 (LIFO) stack of objects.
Uses of
Vector
in
javax.accessibility
Fields in
javax.accessibility
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
AccessibleRelation
>
AccessibleRelationSet.
relations
Each entry in the
Vector
represents an
AccessibleRelation
.
protected
Vector
<
AccessibleState
>
AccessibleStateSet.
states
Each entry in the
Vector
represents an
AccessibleState
.
Uses of
Vector
in
javax.management
Methods in
javax.management
that return
Vector
Modifier and Type
Method
Description
Vector
<
String
>
AttributeChangeNotificationFilter.
getEnabledAttributes
()
Gets all the enabled attribute names for this filter.
Vector
<
String
>
NotificationFilterSupport.
getEnabledTypes
()
Gets all the enabled notification types for this filter.
Uses of
Vector
in
javax.management.relation
Methods in
javax.management.relation
that return
Vector
Modifier and Type
Method
Description
Vector
<
ObjectName
>
MBeanServerNotificationFilter.
getDisabledObjectNames
()
Gets all the ObjectNames disabled.
Vector
<
ObjectName
>
MBeanServerNotificationFilter.
getEnabledObjectNames
()
Gets all the ObjectNames enabled.
Uses of
Vector
in
javax.management.timer
Methods in
javax.management.timer
that return
Vector
Modifier and Type
Method
Description
Vector
<
Integer
>
Timer.
getAllNotificationIDs
()
Gets all timer notification identifiers registered into the list of notifications.
Vector
<
Integer
>
TimerMBean.
getAllNotificationIDs
()
Gets all timer notification identifiers registered into the list of notifications.
Vector
<
Integer
>
Timer.
getNotificationIDs
(
String
type)
Gets all the identifiers of timer notifications corresponding to the specified type.
Vector
<
Integer
>
TimerMBean.
getNotificationIDs
(
String
type)
Gets all the identifiers of timer notifications corresponding to the specified type.
Uses of
Vector
in
javax.naming
Fields in
javax.naming
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
RefAddr
>
Reference.
addrs
Contains the addresses contained in this Reference.
Uses of
Vector
in
javax.naming.directory
Fields in
javax.naming.directory
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
Object
>
BasicAttribute.
values
Holds the attribute's values.
Uses of
Vector
in
javax.sound.midi
Fields in
javax.sound.midi
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
Track
>
Sequence.
tracks
The MIDI tracks in this sequence.
Uses of
Vector
in
javax.sql.rowset.serial
Constructors in
javax.sql.rowset.serial
with parameters of type
Vector
Modifier
Constructor
Description
SQLOutputImpl
(
Vector
<?> attributes,
Map
<
String
,
?> map)
Creates a new
SQLOutputImpl
object
 initialized with the given vector of attributes and
 type map.
Uses of
Vector
in
javax.swing
Fields in
javax.swing
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
AbstractButton
>
ButtonGroup.
buttons
The list of buttons participating in this group.
Methods in
javax.swing
with parameters of type
Vector
Modifier and Type
Method
Description
void
JList.
setListData
(
Vector
<? extends
E
> listData)
Constructs a read-only
ListModel
from a
Vector
and calls
setModel
with this model.
Constructors in
javax.swing
with parameters of type
Vector
Modifier
Constructor
Description
DefaultComboBoxModel
(
Vector
<
E
> v)
Constructs a DefaultComboBoxModel object initialized with
 a vector.
JComboBox
(
Vector
<
E
> items)
Creates a
JComboBox
that contains the elements
 in the specified Vector.
JList
(
Vector
<? extends
E
> listData)
Constructs a
JList
that displays the elements in
 the specified
Vector
.
JTable
(
Vector
<? extends
Vector
> rowData,
Vector
<?> columnNames)
Constructs a
JTable
to display the values in the
Vector
of
Vectors
,
rowData
,
 with column names,
columnNames
.
JTree
(
Vector
<?> value)
Returns a
JTree
with each element of the specified
Vector
as the
 child of a new root node which is not displayed.
Constructor parameters in
javax.swing
with type arguments of type
Vector
Modifier
Constructor
Description
JTable
(
Vector
<? extends
Vector
> rowData,
Vector
<?> columnNames)
Constructs a
JTable
to display the values in the
Vector
of
Vectors
,
rowData
,
 with column names,
columnNames
.
Uses of
Vector
in
javax.swing.plaf.basic
Methods in
javax.swing.plaf.basic
that return
Vector
Modifier and Type
Method
Description
Vector
<
File
>
BasicDirectoryModel.
getDirectories
()
Returns a list of directories.
Vector
<
File
>
BasicDirectoryModel.
getFiles
()
Returns a list of files.
Methods in
javax.swing.plaf.basic
with parameters of type
Vector
Modifier and Type
Method
Description
protected void
BasicDirectoryModel.
sort
(
Vector
<? extends
File
> v)
Sorts a list of files.
Uses of
Vector
in
javax.swing.plaf.multi
Fields in
javax.swing.plaf.multi
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
ComponentUI
>
MultiButtonUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiColorChooserUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiComboBoxUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiDesktopIconUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiDesktopPaneUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiFileChooserUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiInternalFrameUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiLabelUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiListUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiMenuBarUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiMenuItemUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiOptionPaneUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiPanelUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiPopupMenuUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiProgressBarUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiRootPaneUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiScrollBarUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiScrollPaneUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiSeparatorUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiSliderUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiSpinnerUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiSplitPaneUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiTabbedPaneUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiTableHeaderUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiTableUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiTextUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiToolBarUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiToolTipUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiTreeUI.
uis
The vector containing the real UIs.
protected
Vector
<
ComponentUI
>
MultiViewportUI.
uis
The vector containing the real UIs.
Methods in
javax.swing.plaf.multi
with parameters of type
Vector
Modifier and Type
Method
Description
static
ComponentUI
MultiLookAndFeel.
createUIs
(
ComponentUI
mui,
Vector
<
ComponentUI
> uis,
JComponent
target)
Creates the
ComponentUI
objects
 required to present
 the
target
component,
 placing the objects in the
uis
vector and
 returning the
ComponentUI
object
 that best represents the component's UI.
protected static
ComponentUI
[]
MultiLookAndFeel.
uisToArray
(
Vector
<? extends
ComponentUI
> uis)
Creates an array,
 populates it with UI objects from the passed-in vector,
 and returns the array.
Uses of
Vector
in
javax.swing.table
Fields in
javax.swing.table
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
DefaultTableModel.
columnIdentifiers
The
Vector
of column identifiers.
protected
Vector
<
Vector
>
DefaultTableModel.
dataVector
The
Vector
of
Vectors
of
Object
values.
protected
Vector
<
TableColumn
>
DefaultTableColumnModel.
tableColumns
Array of TableColumn objects in this model
Fields in
javax.swing.table
with type parameters of type
Vector
Modifier and Type
Field
Description
protected
Vector
<
Vector
>
DefaultTableModel.
dataVector
The
Vector
of
Vectors
of
Object
values.
Methods in
javax.swing.table
that return
Vector
Modifier and Type
Method
Description
protected static
Vector
<
Object
>
DefaultTableModel.
convertToVector
(
Object
[] anArray)
Returns a vector that contains the same objects as the array.
protected static
Vector
<
Vector
<
Object
>>
DefaultTableModel.
convertToVector
(
Object
[][] anArray)
Returns a vector of vectors that contains the same objects as the array.
Vector
<
Vector
>
DefaultTableModel.
getDataVector
()
Returns the
Vector
of
Vectors
that contains the table's
  data values.
Methods in
javax.swing.table
that return types with arguments of type
Vector
Modifier and Type
Method
Description
protected static
Vector
<
Vector
<
Object
>>
DefaultTableModel.
convertToVector
(
Object
[][] anArray)
Returns a vector of vectors that contains the same objects as the array.
Vector
<
Vector
>
DefaultTableModel.
getDataVector
()
Returns the
Vector
of
Vectors
that contains the table's
  data values.
Methods in
javax.swing.table
with parameters of type
Vector
Modifier and Type
Method
Description
void
DefaultTableModel.
addColumn
(
Object
columnName,
Vector
<?> columnData)
Adds a column to the model.
void
DefaultTableModel.
addRow
(
Vector
<?> rowData)
Adds a row to the end of the model.
void
DefaultTableModel.
insertRow
(int row,
Vector
<?> rowData)
Inserts a row at
row
in the model.
void
DefaultTableModel.
setColumnIdentifiers
(
Vector
<?> columnIdentifiers)
Replaces the column identifiers in the model.
void
DefaultTableModel.
setDataVector
(
Vector
<? extends
Vector
> dataVector,
Vector
<?> columnIdentifiers)
Replaces the current
dataVector
instance variable
  with the new
Vector
of rows,
dataVector
.
Method parameters in
javax.swing.table
with type arguments of type
Vector
Modifier and Type
Method
Description
void
DefaultTableModel.
setDataVector
(
Vector
<? extends
Vector
> dataVector,
Vector
<?> columnIdentifiers)
Replaces the current
dataVector
instance variable
  with the new
Vector
of rows,
dataVector
.
Constructors in
javax.swing.table
with parameters of type
Vector
Modifier
Constructor
Description
DefaultTableModel
(
Vector
<?> columnNames,
 int rowCount)
Constructs a
DefaultTableModel
with as many columns
  as there are elements in
columnNames
and
rowCount
of
null
object values.
DefaultTableModel
(
Vector
<? extends
Vector
> data,
Vector
<?> columnNames)
Constructs a
DefaultTableModel
and initializes the table
  by passing
data
and
columnNames
to the
setDataVector
method.
Constructor parameters in
javax.swing.table
with type arguments of type
Vector
Modifier
Constructor
Description
DefaultTableModel
(
Vector
<? extends
Vector
> data,
Vector
<?> columnNames)
Constructs a
DefaultTableModel
and initializes the table
  by passing
data
and
columnNames
to the
setDataVector
method.
Uses of
Vector
in
javax.swing.text
Methods in
javax.swing.text
that return
Vector
Modifier and Type
Method
Description
protected
Vector
GapContent.
getPositionsInRange
(
Vector
v,
 int offset,
 int length)
Returns a Vector containing instances of UndoPosRef for the
 Positions in the range
offset
to
offset
+
length
.
protected
Vector
StringContent.
getPositionsInRange
(
Vector
v,
 int offset,
 int length)
Returns a Vector containing instances of UndoPosRef for the
 Positions in the range
offset
to
offset
+
length
.
Methods in
javax.swing.text
with parameters of type
Vector
Modifier and Type
Method
Description
protected
Vector
GapContent.
getPositionsInRange
(
Vector
v,
 int offset,
 int length)
Returns a Vector containing instances of UndoPosRef for the
 Positions in the range
offset
to
offset
+
length
.
protected
Vector
StringContent.
getPositionsInRange
(
Vector
v,
 int offset,
 int length)
Returns a Vector containing instances of UndoPosRef for the
 Positions in the range
offset
to
offset
+
length
.
protected void
GapContent.
updateUndoPositions
(
Vector
positions,
 int offset,
 int length)
Resets the location for all the UndoPosRef instances
 in
positions
.
protected void
StringContent.
updateUndoPositions
(
Vector
positions)
Resets the location for all the UndoPosRef instances
 in
positions
.
Uses of
Vector
in
javax.swing.text.html
Fields in
javax.swing.text.html
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
DefaultStyledDocument.ElementSpec
>
HTMLDocument.HTMLReader.
parseBuffer
Buffer to keep building elements.
Uses of
Vector
in
javax.swing.text.html.parser
Fields in
javax.swing.text.html.parser
declared as
Vector
Modifier and Type
Field
Description
Vector
<
Element
>
DTD.
elements
The vector of elements
Vector
<?>
AttributeList.
values
The possible attribute values
Methods in
javax.swing.text.html.parser
with parameters of type
Vector
Modifier and Type
Method
Description
void
ContentModel.
getElements
(
Vector
<
Element
> elemVec)
Update elemVec with the list of elements that are
 part of the this contentModel.
Constructors in
javax.swing.text.html.parser
with parameters of type
Vector
Modifier
Constructor
Description
AttributeList
(
String
name,
 int type,
 int modifier,
String
value,
Vector
<?> values,
AttributeList
next)
Create an attribute list element.
Uses of
Vector
in
javax.swing.tree
Fields in
javax.swing.tree
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
TreeNode
>
DefaultMutableTreeNode.
children
array of children, may be null if this node has no children
Methods in
javax.swing.tree
with parameters of type
Vector
Modifier and Type
Method
Description
protected void
DefaultTreeSelectionModel.
notifyPathChange
(
Vector
<?> changedPaths,
TreePath
oldLeadSelection)
Deprecated.
As of JDK version 1.7
Uses of
Vector
in
javax.swing.undo
Fields in
javax.swing.undo
declared as
Vector
Modifier and Type
Field
Description
protected
Vector
<
UndoableEdit
>
CompoundEdit.
edits
The collection of
UndoableEdit
s
 undone/redone en masse by this
CompoundEdit
.
protected
Vector
<
UndoableEditListener
>
UndoableEditSupport.
listeners
The list of listeners.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.