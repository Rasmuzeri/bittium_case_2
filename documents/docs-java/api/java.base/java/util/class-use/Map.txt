Uses of Interface java.util.Map (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.Map
Packages that use
Map
Package
Description
com.sun.jdi
This is the core package of the Java Debug
 Interface (JDI), it defines mirrors for values, types, and the target
 VirtualMachine itself - as well bootstrapping facilities.
com.sun.jdi.connect
This package defines connections between the virtual machine
 using the JDI and the target virtual machine.
com.sun.management
This package contains the JDK's extension to
 the standard implementation of the
java.lang.management
API and also defines the management
 interface for some other components of the platform.
com.sun.net.httpserver
Provides a simple high-level Http server API, which can be used to build
   embedded HTTP servers.
com.sun.security.auth.module
Provides implementations of
LoginModule
.
com.sun.tools.jconsole
This package contains the JConsole API.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.datatransfer
Provides interfaces and classes for transferring data between and within
 applications.
java.awt.font
Provides classes and interface relating to fonts.
java.awt.im
Provides classes and interfaces for the input method framework.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.instrument
Provides services that allow Java programming language agents to instrument
 programs running on the Java Virtual Machine (JVM).
java.lang.management
Provides the management interfaces for monitoring and management of the
Java virtual machine and other components in the Java runtime.
java.net
Provides the classes for implementing networking applications.
java.net.http
HTTP Client and WebSocket APIs
java.nio.file
Defines interfaces and classes for the Java virtual machine to access files,
 file attributes, and file systems.
java.nio.file.spi
Service-provider classes for the
java.nio.file
package.
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
java.sql
Provides the API for accessing and processing data stored in a
 data source (usually a relational database) using the
 Java programming language.
java.text
Provides classes and interfaces for handling text, dates, numbers,
 and messages in a manner independent of natural languages.
java.time
The main API for dates, times, instants, and durations.
java.time.chrono
Generic API for calendar systems other than the default ISO.
java.time.format
Provides classes to print and parse dates and times.
java.time.temporal
Access to date and time using fields and units, and date time adjusters.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.jar
Provides classes for reading and writing the JAR (Java ARchive)
 file format, which is based on the standard ZIP file format with an
 optional manifest file.
java.util.regex
Classes for matching character sequences against patterns specified
 by regular expressions.
java.util.spi
Service provider classes for the classes in the java.util package.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
javax.annotation.processing
Facilities for declaring annotation processors and for
 allowing annotation processors to communicate with an annotation processing
 tool environment.
javax.lang.model.element
Interfaces used to model elements of the Java programming language.
javax.lang.model.util
Utilities to assist in the processing of
program elements
and
types
.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.loading
Provides the classes which implement advanced dynamic
        loading.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.remote
Interfaces for remote access to
        JMX MBean servers.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
javax.naming.ldap.spi
javax.print.attribute.standard
Package
javax.print.attribute.standard
contains classes for specific
 printing attributes.
javax.script
The scripting API consists of interfaces and classes that define
Java Scripting Engines and provides
a framework for their use in Java applications.
javax.security.auth.login
This package provides a pluggable authentication framework.
javax.security.auth.spi
This package provides the interface to be used for
 implementing pluggable authentication modules.
javax.security.auth.x500
This package contains the classes that should be used to store
 X500 Principal and X500 Private Credentials in a
Subject
.
javax.security.sasl
Contains class and interfaces for supporting SASL.
javax.sound.midi
Provides interfaces and classes for I/O, sequencing, and synthesis of MIDI
 (Musical Instrument Digital Interface) data.
javax.sound.sampled
Provides interfaces and classes for capture, processing, and playback of
 sampled audio data.
javax.sql
Provides the API for server side data source access and processing from
 the Java programming language.
javax.sql.rowset
Standard interfaces and base classes for JDBC
RowSet
implementations.
javax.sql.rowset.serial
Provides utility classes to allow serializable mappings between SQL types
 and data types in the Java programming language.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.xml.crypto.dsig.spec
Parameter classes for XML digital signatures.
jdk.jfr
This package provides classes to create events and control Flight Recorder.
jdk.jfr.consumer
This package contains classes for consuming Flight Recorder data.
jdk.jshell
Provides interfaces for creating tools, such as a Read-Eval-Print Loop (REPL),
 which interactively evaluate "snippets" of Java programming language code.
jdk.jshell.execution
Provides implementation support for building JShell execution engines.
jdk.jshell.spi
Defines the Service Provider Interface for pluggable JShell execution engines.
jdk.jshell.tool
Provides a mechanism to launch an instance of a Java shell tool.
jdk.management.jfr
This package contains classes to control and monitor Flight Recorder over Java Management Extensions (JMX).
Uses of
Map
in
com.sun.jdi
Methods in
com.sun.jdi
that return
Map
Modifier and Type
Method
Description
Map
<
Field
,
Value
>
ObjectReference.
getValues
(
List
<? extends
Field
> fields)
Gets the value of multiple instance and/or static fields in this object.
Map
<
Field
,
Value
>
ReferenceType.
getValues
(
List
<? extends
Field
> fields)
Returns a map containing the
Value
of each
 static
Field
in the given list.
Map
<
LocalVariable
,
Value
>
StackFrame.
getValues
(
List
<? extends
LocalVariable
> variables)
Returns the values of multiple local variables in this frame.
Methods in
com.sun.jdi
with parameters of type
Map
Modifier and Type
Method
Description
void
VirtualMachine.
redefineClasses
(
Map
<? extends
ReferenceType
,
byte[]> classToBytes)
All classes given are redefined according to the
 definitions supplied.
Uses of
Map
in
com.sun.jdi.connect
Methods in
com.sun.jdi.connect
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
Connector.Argument
>
Connector.
defaultArguments
()
Returns the arguments accepted by this Connector and their
 default values.
Methods in
com.sun.jdi.connect
with parameters of type
Map
Modifier and Type
Method
Description
VirtualMachine
ListeningConnector.
accept
(
Map
<
String
,
? extends
Connector.Argument
> arguments)
Waits for a target VM to attach to this connector.
VirtualMachine
AttachingConnector.
attach
(
Map
<
String
,
? extends
Connector.Argument
> arguments)
Attaches to a running application and returns a
 mirror of its VM.
VirtualMachine
LaunchingConnector.
launch
(
Map
<
String
,
? extends
Connector.Argument
> arguments)
Launches an application and connects to its VM.
String
ListeningConnector.
startListening
(
Map
<
String
,
? extends
Connector.Argument
> arguments)
Listens for one or more connections initiated by target VMs.
void
ListeningConnector.
stopListening
(
Map
<
String
,
? extends
Connector.Argument
> arguments)
Cancels listening for connections.
Uses of
Map
in
com.sun.management
Methods in
com.sun.management
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
MemoryUsage
>
GcInfo.
getMemoryUsageAfterGc
()
Returns the memory usage of all memory pools
 at the end of this GC.
Map
<
String
,
MemoryUsage
>
GcInfo.
getMemoryUsageBeforeGc
()
Returns the memory usage of all memory pools
 at the beginning of this GC.
Uses of
Map
in
com.sun.net.httpserver
Classes in
com.sun.net.httpserver
that implement
Map
Modifier and Type
Class
Description
class
Headers
HTTP request and response headers are represented by this class which
 implements the interface
Map
<
String
,
List
<
String
>>.
Methods in
com.sun.net.httpserver
that return
Map
Modifier and Type
Method
Description
abstract
Map
<
String
,
Object
>
HttpContext.
getAttributes
()
Returns a mutable
Map
, which can be used to pass configuration
 and other data to
Filter
modules and to the context's exchange
 handler.
Methods in
com.sun.net.httpserver
with parameters of type
Map
Modifier and Type
Method
Description
static
Headers
Headers.
of
(
Map
<
String
,
List
<
String
>> headers)
Returns an immutable
Headers
from the given
headers
with
 the same header names and values.
void
Headers.
putAll
(
Map
<? extends
String
,
? extends
List
<
String
>> t)
Constructors in
com.sun.net.httpserver
with parameters of type
Map
Modifier
Constructor
Description
Headers
(
Map
<
String
,
List
<
String
>> headers)
Creates a mutable
Headers
from the given
headers
with
 the same header names and values.
Uses of
Map
in
com.sun.security.auth.module
Methods in
com.sun.security.auth.module
with parameters of type
Map
Modifier and Type
Method
Description
void
JndiLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
KeyStoreLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
Krb5LoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
LdapLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
NTLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
UnixLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
Uses of
Map
in
com.sun.tools.jconsole
Methods in
com.sun.tools.jconsole
that return
Map
Modifier and Type
Method
Description
abstract
Map
<
String
,
JPanel
>
JConsolePlugin.
getTabs
()
Returns the tabs to be added in JConsole window.
Uses of
Map
in
java.awt
Classes in
java.awt
that implement
Map
Modifier and Type
Class
Description
class
RenderingHints
The
RenderingHints
class defines and manages collections of
 keys and associated values which allow an application to provide input
 into the choice of algorithms used by other classes which perform
 rendering and image manipulation services.
Fields in
java.awt
declared as
Map
Modifier and Type
Field
Description
protected final
Map
<
String
,
Object
>
Toolkit.
desktopProperties
The desktop properties.
Methods in
java.awt
that return
Map
Modifier and Type
Method
Description
Map
<
TextAttribute
,
?>
Font.
getAttributes
()
Returns a map of font attributes available in this
Font
.
abstract
Map
<
TextAttribute
,
?>
Toolkit.
mapInputMethodHighlight
(
InputMethodHighlight
highlight)
Returns a map of visual attributes for the abstract level description
 of the given input method highlight, or null if no mapping is found.
Methods in
java.awt
with parameters of type
Map
Modifier and Type
Method
Description
abstract void
Graphics2D.
addRenderingHints
(
Map
<?,
?> hints)
Sets the values of an arbitrary number of preferences for the
 rendering algorithms.
Font
Font.
deriveFont
(
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes)
Creates a new
Font
object by replicating the current
Font
object and applying a new set of font attributes
 to it.
static
Font
Font.
getFont
(
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes)
Returns a
Font
appropriate to the attributes.
void
RenderingHints.
putAll
(
Map
<?,
?> m)
Copies all of the mappings from the specified
Map
to this
RenderingHints
.
abstract void
Graphics2D.
setRenderingHints
(
Map
<?,
?> hints)
Replaces the values of all preferences for the rendering
 algorithms with the specified
hints
.
Constructors in
java.awt
with parameters of type
Map
Modifier
Constructor
Description
Font
(
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes)
Creates a new
Font
with the specified attributes.
RenderingHints
(
Map
<
RenderingHints.Key
,
?> init)
Constructs a new object with keys and values initialized
 from the specified Map object which may be null.
Uses of
Map
in
java.awt.datatransfer
Methods in
java.awt.datatransfer
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
DataFlavor
>
FlavorMap.
getFlavorsForNatives
(
String
[] natives)
Returns a
Map
of the specified
String
natives to their
 corresponding
DataFlavor
.
Map
<
String
,
DataFlavor
>
SystemFlavorMap.
getFlavorsForNatives
(
String
[] natives)
Returns a
Map
of the specified
String
natives to their
 most preferred
DataFlavor
.
Map
<
DataFlavor
,
String
>
FlavorMap.
getNativesForFlavors
(
DataFlavor
[] flavors)
Returns a
Map
of the specified
DataFlavor
s to their
 corresponding
String
native.
Map
<
DataFlavor
,
String
>
SystemFlavorMap.
getNativesForFlavors
(
DataFlavor
[] flavors)
Returns a
Map
of the specified
DataFlavor
s to their most
 preferred
String
native.
Uses of
Map
in
java.awt.font
Constructors in
java.awt.font
with parameters of type
Map
Modifier
Constructor
Description
TextLayout
(
String
string,
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes,
FontRenderContext
frc)
Constructs a
TextLayout
from a
String
and an attribute set.
Uses of
Map
in
java.awt.im
Methods in
java.awt.im
that return
Map
Modifier and Type
Method
Description
Map
<
TextAttribute
,
?>
InputMethodHighlight.
getStyle
()
Returns the rendering style attributes for the text range, or null.
Constructors in
java.awt.im
with parameters of type
Map
Modifier
Constructor
Description
InputMethodHighlight
(boolean selected,
 int state,
 int variation,
Map
<
TextAttribute
,
?> style)
Constructs an input method highlight record.
Uses of
Map
in
java.lang
Methods in
java.lang
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
String
>
ProcessBuilder.
environment
()
Returns a string map view of this process builder's environment.
static
Map
<
Thread
,
StackTraceElement
[]>
Thread.
getAllStackTraces
()
Returns a map of stack traces for all live platform threads.
static
Map
<
String
,
String
>
System.
getenv
()
Returns an unmodifiable string map view of the current system environment.
Uses of
Map
in
java.lang.instrument
Methods in
java.lang.instrument
with parameters of type
Map
Modifier and Type
Method
Description
void
Instrumentation.
redefineModule
(
Module
module,
Set
<
Module
> extraReads,
Map
<
String
,
Set
<
Module
>> extraExports,
Map
<
String
,
Set
<
Module
>> extraOpens,
Set
<
Class
<?>> extraUses,
Map
<
Class
<?>,
List
<
Class
<?>>> extraProvides)
Redefine a module to expand the set of modules that it reads, the set of
 packages that it exports or opens, or the services that it uses or
 provides.
Uses of
Map
in
java.lang.management
Methods in
java.lang.management
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
String
>
RuntimeMXBean.
getSystemProperties
()
Returns a map of names and values of all system properties.
Uses of
Map
in
java.net
Methods in
java.net
that return
Map
Modifier and Type
Method
Description
abstract
Map
<
String
,
List
<
String
>>
CookieHandler.
get
(
URI
uri,
Map
<
String
,
List
<
String
>> requestHeaders)
Gets all the applicable cookies from a cookie cache for the
 specified uri in the request header.
Map
<
String
,
List
<
String
>>
CookieManager.
get
(
URI
uri,
Map
<
String
,
List
<
String
>> requestHeaders)
Map
<
String
,
List
<
String
>>
URLConnection.
getHeaderFields
()
Returns an unmodifiable Map of the header fields.
abstract
Map
<
String
,
List
<
String
>>
CacheResponse.
getHeaders
()
Returns the response headers as a Map.
Map
<
String
,
List
<
String
>>
URLConnection.
getRequestProperties
()
Returns an unmodifiable Map of general request
 properties for this connection.
Methods in
java.net
with parameters of type
Map
Modifier and Type
Method
Description
abstract
Map
<
String
,
List
<
String
>>
CookieHandler.
get
(
URI
uri,
Map
<
String
,
List
<
String
>> requestHeaders)
Gets all the applicable cookies from a cookie cache for the
 specified uri in the request header.
Map
<
String
,
List
<
String
>>
CookieManager.
get
(
URI
uri,
Map
<
String
,
List
<
String
>> requestHeaders)
abstract
CacheResponse
ResponseCache.
get
(
URI
uri,
String
rqstMethod,
Map
<
String
,
List
<
String
>> rqstHeaders)
Retrieve the cached response based on the requesting uri,
 request method and request headers.
abstract void
CookieHandler.
put
(
URI
uri,
Map
<
String
,
List
<
String
>> responseHeaders)
Sets all the applicable cookies, examples are response header
 fields that are named Set-Cookie2, present in the response
 headers into a cookie cache.
void
CookieManager.
put
(
URI
uri,
Map
<
String
,
List
<
String
>> responseHeaders)
Uses of
Map
in
java.net.http
Methods in
java.net.http
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
List
<
String
>>
HttpHeaders.
map
()
Returns an unmodifiable multi Map view of this HttpHeaders.
Methods in
java.net.http
with parameters of type
Map
Modifier and Type
Method
Description
static
HttpHeaders
HttpHeaders.
of
(
Map
<
String
,
List
<
String
>> headerMap,
BiPredicate
<
String
,
String
> filter)
Returns an HTTP headers from the given map.
Uses of
Map
in
java.nio.file
Methods in
java.nio.file
that return
Map
Modifier and Type
Method
Description
static
Map
<
String
,
Object
>
Files.
readAttributes
(
Path
path,
String
attributes,
LinkOption
... options)
Reads a set of file attributes as a bulk operation.
Methods in
java.nio.file
with parameters of type
Map
Modifier and Type
Method
Description
static
FileSystem
FileSystems.
newFileSystem
(
URI
uri,
Map
<
String
,
?> env)
Constructs a new file system that is identified by a
URI
static
FileSystem
FileSystems.
newFileSystem
(
URI
uri,
Map
<
String
,
?> env,
ClassLoader
loader)
Constructs a new file system that is identified by a
URI
static
FileSystem
FileSystems.
newFileSystem
(
Path
path,
Map
<
String
,
?> env)
Constructs a new
FileSystem
to access the contents of a file as a
 file system.
static
FileSystem
FileSystems.
newFileSystem
(
Path
path,
Map
<
String
,
?> env,
ClassLoader
loader)
Constructs a new
FileSystem
to access the contents of a file as a
 file system.
Uses of
Map
in
java.nio.file.spi
Methods in
java.nio.file.spi
that return
Map
Modifier and Type
Method
Description
abstract
Map
<
String
,
Object
>
FileSystemProvider.
readAttributes
(
Path
path,
String
attributes,
LinkOption
... options)
Reads a set of file attributes as a bulk operation.
Methods in
java.nio.file.spi
with parameters of type
Map
Modifier and Type
Method
Description
abstract
FileSystem
FileSystemProvider.
newFileSystem
(
URI
uri,
Map
<
String
,
?> env)
Constructs a new
FileSystem
object identified by a URI.
FileSystem
FileSystemProvider.
newFileSystem
(
Path
path,
Map
<
String
,
?> env)
Constructs a new
FileSystem
to access the contents of a file as a
 file system.
Uses of
Map
in
java.security
Classes in
java.security
that implement
Map
Modifier and Type
Class
Description
class
AuthProvider
This class defines login and logout methods for a provider.
class
Provider
This class represents a "provider" for the
 Java Security API, where a provider implements some or all parts of
 Java Security.
Methods in
java.security
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
KeyStore.ProtectionParameter
>
DomainLoadStoreParameter.
getProtectionParams
()
Gets the keystore protection parameters for keystores in this
 domain.
Methods in
java.security
with parameters of type
Map
Modifier and Type
Method
Description
static
Provider
[]
Security.
getProviders
(
Map
<
String
,
String
> filter)
Returns an array containing all installed providers that satisfy the
 specified selection criteria, or
null
if no such providers have
 been installed.
void
Provider.
putAll
(
Map
<?,
?> t)
Copies all the mappings from the specified Map to this
Provider
.
Constructors in
java.security
with parameters of type
Map
Modifier
Constructor
Description
DomainLoadStoreParameter
(
URI
configuration,
Map
<
String
,
KeyStore.ProtectionParameter
> protectionParams)
Constructs a
DomainLoadStoreParameter
for a keystore domain with
 the parameters used to protect keystore data.
Service
(
Provider
provider,
String
type,
String
algorithm,
String
className,
List
<
String
> aliases,
Map
<
String
,
String
> attributes)
Construct a new service.
Uses of
Map
in
java.security.cert
Methods in
java.security.cert
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
Extension
>
CertificateRevokedException.
getExtensions
()
Returns a map of X.509 extensions containing additional information
 about the revoked certificate, such as the Invalidity Date
 Extension.
Map
<
X509Certificate
,
byte[]>
PKIXRevocationChecker.
getOcspResponses
()
Gets the OCSP responses.
Methods in
java.security.cert
with parameters of type
Map
Modifier and Type
Method
Description
void
PKIXRevocationChecker.
setOcspResponses
(
Map
<
X509Certificate
,
byte[]> responses)
Sets the OCSP responses.
Constructors in
java.security.cert
with parameters of type
Map
Modifier
Constructor
Description
CertificateRevokedException
(
Date
revocationDate,
CRLReason
reason,
X500Principal
authority,
Map
<
String
,
Extension
> extensions)
Constructs a
CertificateRevokedException
with
 the specified revocation date, reason code, authority name, and map
 of extensions.
Uses of
Map
in
java.sql
Methods in
java.sql
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
ClientInfoStatus
>
SQLClientInfoException.
getFailedProperties
()
Returns the list of client info properties that could not be set.
Map
<
String
,
Class
<?>>
Connection.
getTypeMap
()
Retrieves the
Map
object associated with this
Connection
object.
Methods in
java.sql
with parameters of type
Map
Modifier and Type
Method
Description
Object
Array.
getArray
(long index,
 int count,
Map
<
String
,
Class
<?>> map)
Retrieves a slice of the SQL
ARRAY
value
 designated by this
Array
object, beginning with the specified
index
and containing up to
count
successive elements of the SQL array.
Object
Array.
getArray
(
Map
<
String
,
Class
<?>> map)
Retrieves the contents of the SQL
ARRAY
value designated by this
Array
object.
Object
[]
Struct.
getAttributes
(
Map
<
String
,
Class
<?>> map)
Produces the ordered values of the attributes of the SQL
 structured type that this
Struct
object represents.
Object
CallableStatement.
getObject
(int parameterIndex,
Map
<
String
,
Class
<?>> map)
Returns an object representing the value of OUT parameter
parameterIndex
and uses
map
for the custom
 mapping of the parameter value.
Object
CallableStatement.
getObject
(
String
parameterName,
Map
<
String
,
Class
<?>> map)
Returns an object representing the value of OUT parameter
parameterName
and uses
map
for the custom
 mapping of the parameter value.
Object
Ref.
getObject
(
Map
<
String
,
Class
<?>> map)
Retrieves the referenced object and maps it to a Java type
 using the given type map.
Object
ResultSet.
getObject
(int columnIndex,
Map
<
String
,
Class
<?>> map)
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as an
Object
in the Java programming language.
Object
ResultSet.
getObject
(
String
columnLabel,
Map
<
String
,
Class
<?>> map)
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as an
Object
in the Java programming language.
ResultSet
Array.
getResultSet
(long index,
 int count,
Map
<
String
,
Class
<?>> map)
Retrieves a result set holding the elements of the subarray that
 starts at index
index
and contains up to
count
successive elements.
ResultSet
Array.
getResultSet
(
Map
<
String
,
Class
<?>> map)
Retrieves a result set that contains the elements of the SQL
ARRAY
value designated by this
Array
object.
void
Connection.
setTypeMap
(
Map
<
String
,
Class
<?>> map)
Installs the given
TypeMap
object as the type map for
 this
Connection
object.
Constructors in
java.sql
with parameters of type
Map
Modifier
Constructor
Description
SQLClientInfoException
(
String
reason,
String
SQLState,
 int vendorCode,
Map
<
String
,
ClientInfoStatus
> failedProperties)
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
SQLState
,
vendorCode
and
failedProperties
.
SQLClientInfoException
(
String
reason,
String
SQLState,
 int vendorCode,
Map
<
String
,
ClientInfoStatus
> failedProperties,
Throwable
cause)
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
SQLState
,
cause
,
vendorCode
and
failedProperties
.
SQLClientInfoException
(
String
reason,
String
SQLState,
Map
<
String
,
ClientInfoStatus
> failedProperties)
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
SQLState
and
failedProperties
.
SQLClientInfoException
(
String
reason,
String
SQLState,
Map
<
String
,
ClientInfoStatus
> failedProperties,
Throwable
cause)
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
SQLState
,
cause
and
failedProperties
.
SQLClientInfoException
(
String
reason,
Map
<
String
,
ClientInfoStatus
> failedProperties)
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
and
failedProperties
.
SQLClientInfoException
(
String
reason,
Map
<
String
,
ClientInfoStatus
> failedProperties,
Throwable
cause)
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
cause
and
failedProperties
.
SQLClientInfoException
(
Map
<
String
,
ClientInfoStatus
> failedProperties)
Constructs a
SQLClientInfoException
object initialized with a
 given
failedProperties
.
SQLClientInfoException
(
Map
<
String
,
ClientInfoStatus
> failedProperties,
Throwable
cause)
Constructs a
SQLClientInfoException
object initialized with
 a given
cause
and
failedProperties
.
Uses of
Map
in
java.text
Methods in
java.text
that return
Map
Modifier and Type
Method
Description
Map
<
AttributedCharacterIterator.Attribute
,
Object
>
AttributedCharacterIterator.
getAttributes
()
Returns a map with the attributes defined on the current
 character.
Methods in
java.text
with parameters of type
Map
Modifier and Type
Method
Description
void
AttributedString.
addAttributes
(
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes,
 int beginIndex,
 int endIndex)
Adds a set of attributes to a subrange of the string.
Constructors in
java.text
with parameters of type
Map
Modifier
Constructor
Description
AttributedString
(
String
text,
Map
<? extends
AttributedCharacterIterator.Attribute
,
?> attributes)
Constructs an AttributedString instance with the given text and attributes.
Uses of
Map
in
java.time
Fields in
java.time
declared as
Map
Modifier and Type
Field
Description
static final
Map
<
String
,
String
>
ZoneId.
SHORT_IDS
A map of zone overrides to enable the short time-zone names to be used.
Methods in
java.time
with parameters of type
Map
Modifier and Type
Method
Description
static
ZoneId
ZoneId.
of
(
String
zoneId,
Map
<
String
,
String
> aliasMap)
Obtains an instance of
ZoneId
using its ID using a map
 of aliases to supplement the standard zone IDs.
Uses of
Map
in
java.time.chrono
Methods in
java.time.chrono
with parameters of type
Map
Modifier and Type
Method
Description
ChronoLocalDate
AbstractChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
Resolves parsed
ChronoField
values into a date during parsing.
ChronoLocalDate
Chronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
Resolves parsed
ChronoField
values into a date during parsing.
HijrahDate
HijrahChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
LocalDate
IsoChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
Resolves parsed
ChronoField
values into a date during parsing.
JapaneseDate
JapaneseChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
MinguoDate
MinguoChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
ThaiBuddhistDate
ThaiBuddhistChronology.
resolveDate
(
Map
<
TemporalField
,
Long
> fieldValues,
ResolverStyle
resolverStyle)
Uses of
Map
in
java.time.format
Methods in
java.time.format
with parameters of type
Map
Modifier and Type
Method
Description
DateTimeFormatterBuilder
DateTimeFormatterBuilder.
appendText
(
TemporalField
field,
Map
<
Long
,
String
> textLookup)
Appends the text of a date-time field to the formatter using the specified
 map to supply the text.
Uses of
Map
in
java.time.temporal
Methods in
java.time.temporal
with parameters of type
Map
Modifier and Type
Method
Description
default
TemporalAccessor
TemporalField.
resolve
(
Map
<
TemporalField
,
Long
> fieldValues,
TemporalAccessor
partialTemporal,
ResolverStyle
resolverStyle)
Resolves this field to provide a simpler alternative or a date.
Uses of
Map
in
java.util
Subinterfaces of
Map
in
java.util
Modifier and Type
Interface
Description
interface
NavigableMap
<K,
V>
A
SortedMap
extended with navigation methods returning the
 closest matches for given search targets.
interface
SequencedMap
<K,
V>
A Map that has a well-defined encounter order, that supports operations at both ends, and
 that is reversible.
interface
SortedMap
<K,
V>
A
Map
that further provides a
total ordering
on its keys.
Classes in
java.util
that implement
Map
Modifier and Type
Class
Description
class
AbstractMap
<K,
V>
This class provides a skeletal implementation of the
Map
interface, to minimize the effort required to implement this interface.
class
EnumMap
<K extends
Enum
<K>,
V>
A specialized
Map
implementation for use with enum type keys.
class
HashMap
<K,
V>
Hash table based implementation of the
Map
interface.
class
Hashtable
<K,
V>
This class implements a hash table, which maps keys to values.
class
IdentityHashMap
<K,
V>
This class implements the
Map
interface with a hash table, using
 reference-equality in place of object-equality when comparing keys (and
 values).
class
LinkedHashMap
<K,
V>
Hash table and linked list implementation of the
Map
interface,
 with well-defined encounter order.
class
Properties
The
Properties
class represents a persistent set of
 properties.
class
TreeMap
<K,
V>
A Red-Black tree based
NavigableMap
implementation.
class
WeakHashMap
<K,
V>
Hash table based implementation of the
Map
interface, with
weak keys
.
Fields in
java.util
declared as
Map
Modifier and Type
Field
Description
static final
Map
Collections.
EMPTY_MAP
The empty map (immutable).
Methods in
java.util
that return
Map
Modifier and Type
Method
Description
static <K,
V>
Map
<K,
V>
Collections.
checkedMap
(
Map
<K,
V> m,
Class
<K> keyType,
Class
<V> valueType)
Returns a dynamically typesafe view of the specified map.
static <K,
V>
Map
<K,
V>
Map.
copyOf
(
Map
<? extends K,
? extends V> map)
Returns an
unmodifiable Map
containing the entries
 of the given Map.
static final <K,
V>
Map
<K,
V>
Collections.
emptyMap
()
Returns an empty map (immutable).
Map
<
String
,
Integer
>
Calendar.
getDisplayNames
(int field,
 int style,
Locale
locale)
Returns a
Map
containing all names of the calendar
field
in the given
style
and
locale
and their corresponding field values.
static <K,
V>
Map
<K,
V>
Map.
of
()
Returns an unmodifiable map containing zero mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1)
Returns an unmodifiable map containing a single mapping.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2)
Returns an unmodifiable map containing two mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2,
 K k3,
 V v3)
Returns an unmodifiable map containing three mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2,
 K k3,
 V v3,
 K k4,
 V v4)
Returns an unmodifiable map containing four mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2,
 K k3,
 V v3,
 K k4,
 V v4,
 K k5,
 V v5)
Returns an unmodifiable map containing five mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2,
 K k3,
 V v3,
 K k4,
 V v4,
 K k5,
 V v5,
 K k6,
 V v6)
Returns an unmodifiable map containing six mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2,
 K k3,
 V v3,
 K k4,
 V v4,
 K k5,
 V v5,
 K k6,
 V v6,
 K k7,
 V v7)
Returns an unmodifiable map containing seven mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2,
 K k3,
 V v3,
 K k4,
 V v4,
 K k5,
 V v5,
 K k6,
 V v6,
 K k7,
 V v7,
 K k8,
 V v8)
Returns an unmodifiable map containing eight mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2,
 K k3,
 V v3,
 K k4,
 V v4,
 K k5,
 V v5,
 K k6,
 V v6,
 K k7,
 V v7,
 K k8,
 V v8,
 K k9,
 V v9)
Returns an unmodifiable map containing nine mappings.
static <K,
V>
Map
<K,
V>
Map.
of
(K k1,
 V v1,
 K k2,
 V v2,
 K k3,
 V v3,
 K k4,
 V v4,
 K k5,
 V v5,
 K k6,
 V v6,
 K k7,
 V v7,
 K k8,
 V v8,
 K k9,
 V v9,
 K k10,
 V v10)
Returns an unmodifiable map containing ten mappings.
static <K,
V>
Map
<K,
V>
Map.
ofEntries
(
Map.Entry
<? extends K,
? extends V>... entries)
Returns an unmodifiable map containing keys and values extracted from the given entries.
static <K,
V>
Map
<K,
V>
Collections.
singletonMap
(K key,
 V value)
Returns an immutable map, mapping only the specified key to the
 specified value.
static <K,
V>
Map
<K,
V>
Collections.
synchronizedMap
(
Map
<K,
V> m)
Returns a synchronized (thread-safe) map backed by the specified
 map.
static <K,
V>
Map
<K,
V>
Collections.
unmodifiableMap
(
Map
<? extends K,
? extends V> m)
Returns an
unmodifiable view
of the
 specified map.
Methods in
java.util
with parameters of type
Map
Modifier and Type
Method
Description
static <K,
V>
Map
<K,
V>
Collections.
checkedMap
(
Map
<K,
V> m,
Class
<K> keyType,
Class
<V> valueType)
Returns a dynamically typesafe view of the specified map.
static <K,
V>
Map
<K,
V>
Map.
copyOf
(
Map
<? extends K,
? extends V> map)
Returns an
unmodifiable Map
containing the entries
 of the given Map.
static
List
<
Locale.LanguageRange
>
Locale.LanguageRange.
mapEquivalents
(
List
<
Locale.LanguageRange
> priorityList,
Map
<
String
,
List
<
String
>> map)
Generates a new customized Language Priority List using the given
priorityList
and
map
.
static <E>
Set
<E>
Collections.
newSetFromMap
(
Map
<E,
Boolean
> map)
Returns a set backed by the specified map.
static
List
<
Locale.LanguageRange
>
Locale.LanguageRange.
parse
(
String
ranges,
Map
<
String
,
List
<
String
>> map)
Parses the given
ranges
to generate a Language Priority
 List, and then customizes the list using the given
map
.
void
AbstractMap.
putAll
(
Map
<? extends
K
,
? extends
V
> m)
Copies all of the mappings from the specified map to this map
 (optional operation).
void
EnumMap.
putAll
(
Map
<? extends
K
,
? extends
V
> m)
Copies all of the mappings from the specified map to this map.
void
HashMap.
putAll
(
Map
<? extends
K
,
? extends
V
> m)
Copies all of the mappings from the specified map to this map.
void
Hashtable.
putAll
(
Map
<? extends
K
,
? extends
V
> t)
Copies all of the mappings from the specified map to this hashtable.
void
IdentityHashMap.
putAll
(
Map
<? extends
K
,
? extends
V
> m)
Copies all of the mappings from the specified map to this map.
void
Map.
putAll
(
Map
<? extends
K
,
? extends
V
> m)
Copies all of the mappings from the specified map to this map
 (optional operation).
void
TreeMap.
putAll
(
Map
<? extends
K
,
? extends
V
> map)
Copies all of the mappings from the specified map to this map.
void
WeakHashMap.
putAll
(
Map
<? extends
K
,
? extends
V
> m)
Copies all of the mappings from the specified map to this map.
static <K,
V>
Map
<K,
V>
Collections.
synchronizedMap
(
Map
<K,
V> m)
Returns a synchronized (thread-safe) map backed by the specified
 map.
static <K,
V>
Map
<K,
V>
Collections.
unmodifiableMap
(
Map
<? extends K,
? extends V> m)
Returns an
unmodifiable view
of the
 specified map.
Constructors in
java.util
with parameters of type
Map
Modifier
Constructor
Description
EnumMap
(
Map
<
K
,
? extends
V
> m)
Creates an enum map initialized from the specified map.
HashMap
(
Map
<? extends
K
,
? extends
V
> m)
Constructs a new
HashMap
with the same mappings as the
 specified
Map
.
Hashtable
(
Map
<? extends
K
,
? extends
V
> t)
Constructs a new hashtable with the same mappings as the given
 Map.
IdentityHashMap
(
Map
<? extends
K
,
? extends
V
> m)
Constructs a new identity hash map containing the keys-value mappings
 in the specified map.
LinkedHashMap
(
Map
<? extends
K
,
? extends
V
> m)
Constructs an insertion-ordered
LinkedHashMap
instance with
 the same mappings as the specified map.
TreeMap
(
Map
<? extends
K
,
? extends
V
> m)
Constructs a new tree map containing the same mappings as the given
 map, ordered according to the
natural ordering
of its keys.
WeakHashMap
(
Map
<? extends
K
,
? extends
V
> m)
Constructs a new
WeakHashMap
with the same mappings as the
 specified map.
Uses of
Map
in
java.util.concurrent
Subinterfaces of
Map
in
java.util.concurrent
Modifier and Type
Interface
Description
interface
ConcurrentMap
<K,
V>
A
Map
providing thread safety and atomicity guarantees.
interface
ConcurrentNavigableMap
<K,
V>
A
ConcurrentMap
supporting
NavigableMap
operations,
 and recursively so for its navigable sub-maps.
Classes in
java.util.concurrent
that implement
Map
Modifier and Type
Class
Description
class
ConcurrentHashMap
<K,
V>
A hash table supporting full concurrency of retrievals and
 high expected concurrency for updates.
class
ConcurrentSkipListMap
<K,
V>
A scalable concurrent
ConcurrentNavigableMap
implementation.
Methods in
java.util.concurrent
with parameters of type
Map
Modifier and Type
Method
Description
void
ConcurrentHashMap.
putAll
(
Map
<? extends
K
,
? extends
V
> m)
Copies all of the mappings from the specified map to this one.
Constructors in
java.util.concurrent
with parameters of type
Map
Modifier
Constructor
Description
ConcurrentHashMap
(
Map
<? extends
K
,
? extends
V
> m)
Creates a new map with the same mappings as the given map.
ConcurrentSkipListMap
(
Map
<? extends
K
,
? extends
V
> m)
Constructs a new map containing the same mappings as the given map,
 sorted according to the
natural ordering
of
 the keys.
Uses of
Map
in
java.util.jar
Classes in
java.util.jar
that implement
Map
Modifier and Type
Class
Description
class
Attributes
The Attributes class maps Manifest attribute names to associated string
 values.
Fields in
java.util.jar
declared as
Map
Modifier and Type
Field
Description
protected
Map
<
Object
,
Object
>
Attributes.
map
The attribute name-value mappings.
Methods in
java.util.jar
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
Attributes
>
Manifest.
getEntries
()
Returns a Map of the entries contained in this Manifest.
Methods in
java.util.jar
with parameters of type
Map
Modifier and Type
Method
Description
void
Attributes.
putAll
(
Map
<?,
?> attr)
Copies all of the attribute name-value mappings from the specified
 Attributes to this Map.
Uses of
Map
in
java.util.regex
Methods in
java.util.regex
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
Integer
>
Matcher.
namedGroups
()
Returns an unmodifiable map from capturing group names to group numbers.
default
Map
<
String
,
Integer
>
MatchResult.
namedGroups
()
Returns an unmodifiable map from capturing group names to group numbers.
Map
<
String
,
Integer
>
Pattern.
namedGroups
()
Returns an unmodifiable map from capturing group names to group numbers.
Uses of
Map
in
java.util.spi
Methods in
java.util.spi
that return
Map
Modifier and Type
Method
Description
abstract
Map
<
String
,
Integer
>
CalendarNameProvider.
getDisplayNames
(
String
calendarType,
 int field,
 int style,
Locale
locale)
Returns a
Map
containing all string representations (display
 names) of the
Calendar
field
in the given
style
and
locale
and their corresponding field values.
Uses of
Map
in
java.util.stream
Methods in
java.util.stream
with type parameters of type
Map
Modifier and Type
Method
Description
static <T,
K,
D,
A,
M extends
Map
<K,
D>>
Collector
<T,
?,
M>
Collectors.
groupingBy
(
Function
<? super T,
? extends K> classifier,
Supplier
<M> mapFactory,
Collector
<? super T,
A,
D> downstream)
Returns a
Collector
implementing a cascaded "group by" operation
 on input elements of type
T
, grouping elements according to a
 classification function, and then performing a reduction operation on
 the values associated with a given key using the specified downstream
Collector
.
static <T,
K,
U,
M extends
Map
<K,
U>>
Collector
<T,
?,
M>
Collectors.
toMap
(
Function
<? super T,
? extends K> keyMapper,
Function
<? super T,
? extends U> valueMapper,
BinaryOperator
<U> mergeFunction,
Supplier
<M> mapFactory)
Returns a
Collector
that accumulates elements into a
Map
whose keys and values are the result of applying the provided
 mapping functions to the input elements.
Methods in
java.util.stream
that return types with arguments of type
Map
Modifier and Type
Method
Description
static <T,
K>
Collector
<T,
?,
Map
<K,
List
<T>>>
Collectors.
groupingBy
(
Function
<? super T,
? extends K> classifier)
Returns a
Collector
implementing a "group by" operation on
 input elements of type
T
, grouping elements according to a
 classification function, and returning the results in a
Map
.
static <T,
K,
A,
D>
Collector
<T,
?,
Map
<K,
D>>
Collectors.
groupingBy
(
Function
<? super T,
? extends K> classifier,
Collector
<? super T,
A,
D> downstream)
Returns a
Collector
implementing a cascaded "group by" operation
 on input elements of type
T
, grouping elements according to a
 classification function, and then performing a reduction operation on
 the values associated with a given key using the specified downstream
Collector
.
static <T>
Collector
<T,
?,
Map
<
Boolean
,
List
<T>>>
Collectors.
partitioningBy
(
Predicate
<? super T> predicate)
Returns a
Collector
which partitions the input elements according
 to a
Predicate
, and organizes them into a
Map<Boolean, List<T>>
.
static <T,
D,
A>
Collector
<T,
?,
Map
<
Boolean
,
D>>
Collectors.
partitioningBy
(
Predicate
<? super T> predicate,
Collector
<? super T,
A,
D> downstream)
Returns a
Collector
which partitions the input elements according
 to a
Predicate
, reduces the values in each partition according to
 another
Collector
, and organizes them into a
Map<Boolean, D>
whose values are the result of the downstream
 reduction.
static <T,
K,
U>
Collector
<T,
?,
Map
<K,
U>>
Collectors.
toMap
(
Function
<? super T,
? extends K> keyMapper,
Function
<? super T,
? extends U> valueMapper)
Returns a
Collector
that accumulates elements into a
Map
whose keys and values are the result of applying the provided
 mapping functions to the input elements.
static <T,
K,
U>
Collector
<T,
?,
Map
<K,
U>>
Collectors.
toMap
(
Function
<? super T,
? extends K> keyMapper,
Function
<? super T,
? extends U> valueMapper,
BinaryOperator
<U> mergeFunction)
Returns a
Collector
that accumulates elements into a
Map
whose keys and values are the result of applying the provided
 mapping functions to the input elements.
static <T,
K,
U>
Collector
<T,
?,
Map
<K,
U>>
Collectors.
toUnmodifiableMap
(
Function
<? super T,
? extends K> keyMapper,
Function
<? super T,
? extends U> valueMapper)
Returns a
Collector
that accumulates the input elements into an
unmodifiable Map
,
 whose keys and values are the result of applying the provided
 mapping functions to the input elements.
static <T,
K,
U>
Collector
<T,
?,
Map
<K,
U>>
Collectors.
toUnmodifiableMap
(
Function
<? super T,
? extends K> keyMapper,
Function
<? super T,
? extends U> valueMapper,
BinaryOperator
<U> mergeFunction)
Returns a
Collector
that accumulates the input elements into an
unmodifiable Map
,
 whose keys and values are the result of applying the provided
 mapping functions to the input elements.
Uses of
Map
in
javax.annotation.processing
Methods in
javax.annotation.processing
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
String
>
ProcessingEnvironment.
getOptions
()
Returns the processor-specific options passed to the annotation
 processing tool.
Uses of
Map
in
javax.lang.model.element
Methods in
javax.lang.model.element
that return
Map
Modifier and Type
Method
Description
Map
<? extends
ExecutableElement
,
? extends
AnnotationValue
>
AnnotationMirror.
getElementValues
()
Returns the values of this annotation's elements.
Uses of
Map
in
javax.lang.model.util
Methods in
javax.lang.model.util
that return
Map
Modifier and Type
Method
Description
Map
<? extends
ExecutableElement
,
? extends
AnnotationValue
>
Elements.
getElementValuesWithDefaults
(
AnnotationMirror
a)
Returns the values of an annotation's elements, including defaults.
Uses of
Map
in
javax.management
Constructors in
javax.management
with parameters of type
Map
Modifier
Constructor
Description
ImmutableDescriptor
(
Map
<
String
,
?> fields)
Construct a descriptor where the names and values of the fields
 are the keys and values of the given Map.
Uses of
Map
in
javax.management.loading
Methods in
javax.management.loading
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
String
>
MLetContent.
getAttributes
()
Deprecated, for removal: This API element is subject to removal in a future version.
Gets the attributes of the
MLET
tag.
Constructors in
javax.management.loading
with parameters of type
Map
Modifier
Constructor
Description
MLetContent
(
URL
url,
Map
<
String
,
String
> attributes,
List
<
String
> types,
List
<
String
> values)
Deprecated, for removal: This API element is subject to removal in a future version.
Creates an
MLet
instance initialized with attributes read
 from an
MLET
tag in an MLet text file.
Uses of
Map
in
javax.management.openmbean
Classes in
javax.management.openmbean
that implement
Map
Modifier and Type
Class
Description
class
TabularDataSupport
The
TabularDataSupport
class is the
open data
class which implements the
TabularData
and the
Map
interfaces, and which is internally based on a hash map data structure.
Methods in
javax.management.openmbean
with parameters of type
Map
Modifier and Type
Method
Description
void
TabularDataSupport.
putAll
(
Map
<?,
?> t)
Add all the values contained in the specified map
t
to this
TabularData
instance.
Constructors in
javax.management.openmbean
with parameters of type
Map
Modifier
Constructor
Description
CompositeDataSupport
(
CompositeType
compositeType,
Map
<
String
,
?> items)
Constructs a
CompositeDataSupport
instance with the specified
compositeType
,
 whose item names and corresponding values
 are given by the mappings in the map
items
.
Uses of
Map
in
javax.management.relation
Methods in
javax.management.relation
that return
Map
Modifier and Type
Method
Description
Map
<
ObjectName
,
List
<
String
>>
RelationService.
findAssociatedMBeans
(
ObjectName
mbeanName,
String
relationTypeName,
String
roleName)
Retrieves the MBeans associated to given one in a relation.
Map
<
ObjectName
,
List
<
String
>>
RelationServiceMBean.
findAssociatedMBeans
(
ObjectName
mbeanName,
String
relationTypeName,
String
roleName)
Retrieves the MBeans associated to given one in a relation.
Map
<
String
,
List
<
String
>>
RelationService.
findReferencingRelations
(
ObjectName
mbeanName,
String
relationTypeName,
String
roleName)
Retrieves the relations where a given MBean is referenced.
Map
<
String
,
List
<
String
>>
RelationServiceMBean.
findReferencingRelations
(
ObjectName
mbeanName,
String
relationTypeName,
String
roleName)
Retrieves the relations where a given MBean is referenced.
Map
<
ObjectName
,
List
<
String
>>
Relation.
getReferencedMBeans
()
Retrieves MBeans referenced in the various roles of the relation.
Map
<
ObjectName
,
List
<
String
>>
RelationService.
getReferencedMBeans
(
String
relationId)
Retrieves MBeans referenced in the various roles of the relation.
Map
<
ObjectName
,
List
<
String
>>
RelationServiceMBean.
getReferencedMBeans
(
String
relationId)
Retrieves MBeans referenced in the various roles of the relation.
Map
<
ObjectName
,
List
<
String
>>
RelationSupport.
getReferencedMBeans
()
Retrieves MBeans referenced in the various roles of the relation.
Uses of
Map
in
javax.management.remote
Methods in
javax.management.remote
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
?>
JMXConnectorServerMBean.
getAttributes
()
The attributes for this connector server.
Methods in
javax.management.remote
with parameters of type
Map
Modifier and Type
Method
Description
void
JMXConnector.
connect
(
Map
<
String
,
?> env)
Establishes the connection to the connector server.
static
JMXConnector
JMXConnectorFactory.
connect
(
JMXServiceURL
serviceURL,
Map
<
String
,
?> environment)
Creates a connection to the connector server at the given
 address.
static
JMXConnector
JMXConnectorFactory.
newJMXConnector
(
JMXServiceURL
serviceURL,
Map
<
String
,
?> environment)
Creates a connector client for the connector server at the
 given address.
JMXConnector
JMXConnectorProvider.
newJMXConnector
(
JMXServiceURL
serviceURL,
Map
<
String
,
?> environment)
Creates a new connector client that is ready to connect
 to the connector server at the given address.
static
JMXConnectorServer
JMXConnectorServerFactory.
newJMXConnectorServer
(
JMXServiceURL
serviceURL,
Map
<
String
,
?> environment,
MBeanServer
mbeanServer)
Creates a connector server at the given address.
JMXConnectorServer
JMXConnectorServerProvider.
newJMXConnectorServer
(
JMXServiceURL
serviceURL,
Map
<
String
,
?> environment,
MBeanServer
mbeanServer)
Creates a new connector server at the given address.
JMXConnector
JMXConnectorServer.
toJMXConnector
(
Map
<
String
,
?> env)
Returns a client stub for this connector server.
JMXConnector
JMXConnectorServerMBean.
toJMXConnector
(
Map
<
String
,
?> env)
Returns a client stub for this connector server.
Uses of
Map
in
javax.management.remote.rmi
Methods in
javax.management.remote.rmi
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
?>
RMIConnectorServer.
getAttributes
()
Methods in
javax.management.remote.rmi
with parameters of type
Map
Modifier and Type
Method
Description
void
RMIConnector.
connect
(
Map
<
String
,
?> environment)
JMXConnector
RMIConnectorServer.
toJMXConnector
(
Map
<
String
,
?> env)
Returns a client stub for this connector server.
Constructors in
javax.management.remote.rmi
with parameters of type
Map
Modifier
Constructor
Description
RMIConnectionImpl
(
RMIServerImpl
rmiServer,
String
connectionId,
ClassLoader
defaultClassLoader,
Subject
subject,
Map
<
String
,
?> env)
Constructs a new
RMIConnection
.
RMIConnector
(
JMXServiceURL
url,
Map
<
String
,
?> environment)
Constructs an
RMIConnector
that will connect
 the RMI connector server with the given address.
RMIConnector
(
RMIServer
rmiServer,
Map
<
String
,
?> environment)
Constructs an
RMIConnector
using the given RMI stub.
RMIConnectorServer
(
JMXServiceURL
url,
Map
<
String
,
?> environment)
Makes an
RMIConnectorServer
.
RMIConnectorServer
(
JMXServiceURL
url,
Map
<
String
,
?> environment,
MBeanServer
mbeanServer)
Makes an
RMIConnectorServer
for the given MBean
 server.
RMIConnectorServer
(
JMXServiceURL
url,
Map
<
String
,
?> environment,
RMIServerImpl
rmiServerImpl,
MBeanServer
mbeanServer)
Makes an
RMIConnectorServer
for the given MBean
 server.
RMIJRMPServerImpl
(int port,
RMIClientSocketFactory
csf,
RMIServerSocketFactory
ssf,
Map
<
String
,
?> env)
Creates a new
RMIServer
object that will be exported
 on the given port using the given socket factories.
RMIServerImpl
(
Map
<
String
,
?> env)
Constructs a new
RMIServerImpl
.
Uses of
Map
in
javax.naming.ldap.spi
Methods in
javax.naming.ldap.spi
with parameters of type
Map
Modifier and Type
Method
Description
abstract
Optional
<
LdapDnsProviderResult
>
LdapDnsProvider.
lookupEndpoints
(
String
url,
Map
<?,
?> env)
Lookup the endpoints and domain name for the given
Context
provider URL
and environment.
Uses of
Map
in
javax.print.attribute.standard
Classes in
javax.print.attribute.standard
that implement
Map
Modifier and Type
Class
Description
final class
PrinterStateReasons
Class
PrinterStateReasons
is a printing attribute class, a set of
 enumeration values, that provides additional information about the printer's
 current state, i.e., information that augments the value of the printer's
PrinterState
attribute.
Constructors in
javax.print.attribute.standard
with parameters of type
Map
Modifier
Constructor
Description
PrinterStateReasons
(
Map
<
PrinterStateReason
,
Severity
> map)
Construct a new printer state reasons attribute that contains the same
PrinterStateReason
-to-
Severity
mappings as the given map.
Uses of
Map
in
javax.script
Subinterfaces of
Map
in
javax.script
Modifier and Type
Interface
Description
interface
Bindings
A mapping of key/value pairs, all of whose keys are
Strings
.
Classes in
javax.script
that implement
Map
Modifier and Type
Class
Description
class
SimpleBindings
A simple implementation of Bindings backed by
 a
HashMap
or some other specified
Map
.
Methods in
javax.script
with parameters of type
Map
Modifier and Type
Method
Description
void
Bindings.
putAll
(
Map
<? extends
String
,
? extends
Object
> toMerge)
Adds all the mappings in a given
Map
to this
Bindings
.
void
SimpleBindings.
putAll
(
Map
<? extends
String
,
? extends
Object
> toMerge)
putAll
is implemented using
Map.putAll
.
Constructors in
javax.script
with parameters of type
Map
Modifier
Constructor
Description
SimpleBindings
(
Map
<
String
,
Object
> m)
Constructor uses an existing
Map
to store the values.
Uses of
Map
in
javax.security.auth.login
Methods in
javax.security.auth.login
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
?>
AppConfigurationEntry.
getOptions
()
Get the options configured for this
LoginModule
.
Constructors in
javax.security.auth.login
with parameters of type
Map
Modifier
Constructor
Description
AppConfigurationEntry
(
String
loginModuleName,
AppConfigurationEntry.LoginModuleControlFlag
controlFlag,
Map
<
String
,
?> options)
Default constructor for this class.
Uses of
Map
in
javax.security.auth.spi
Methods in
javax.security.auth.spi
with parameters of type
Map
Modifier and Type
Method
Description
void
LoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
Uses of
Map
in
javax.security.auth.x500
Methods in
javax.security.auth.x500
with parameters of type
Map
Modifier and Type
Method
Description
String
X500Principal.
getName
(
String
format,
Map
<
String
,
String
> oidMap)
Returns a string representation of the X.500 distinguished name
 using the specified format.
Constructors in
javax.security.auth.x500
with parameters of type
Map
Modifier
Constructor
Description
X500Principal
(
String
name,
Map
<
String
,
String
> keywordMap)
Creates an
X500Principal
from a string representation of
 an X.500 distinguished name (ex:
 "CN=Duke, OU=JavaSoft, O=Sun Microsystems, C=US").
Uses of
Map
in
javax.security.sasl
Methods in
javax.security.sasl
with parameters of type
Map
Modifier and Type
Method
Description
static
SaslClient
Sasl.
createSaslClient
(
String
[] mechanisms,
String
authorizationId,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslClient
using the parameters supplied.
SaslClient
SaslClientFactory.
createSaslClient
(
String
[] mechanisms,
String
authorizationId,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a SaslClient using the parameters supplied.
static
SaslServer
Sasl.
createSaslServer
(
String
mechanism,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslServer
for the specified mechanism.
SaslServer
SaslServerFactory.
createSaslServer
(
String
mechanism,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslServer
using the parameters supplied.
String
[]
SaslClientFactory.
getMechanismNames
(
Map
<
String
,
?> props)
Returns an array of names of mechanisms that match the specified
 mechanism selection policies.
String
[]
SaslServerFactory.
getMechanismNames
(
Map
<
String
,
?> props)
Returns an array of names of mechanisms that match the specified
 mechanism selection policies.
Uses of
Map
in
javax.sound.midi
Methods in
javax.sound.midi
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
Object
>
MidiFileFormat.
properties
()
Obtain an unmodifiable map of properties.
Constructors in
javax.sound.midi
with parameters of type
Map
Modifier
Constructor
Description
MidiFileFormat
(int type,
 float divisionType,
 int resolution,
 int bytes,
 long microseconds,
Map
<
String
,
Object
> properties)
Construct a
MidiFileFormat
with a set of properties.
Uses of
Map
in
javax.sound.sampled
Methods in
javax.sound.sampled
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
Object
>
AudioFileFormat.
properties
()
Obtain an unmodifiable map of properties.
Map
<
String
,
Object
>
AudioFormat.
properties
()
Obtain an unmodifiable map of properties.
Constructors in
javax.sound.sampled
with parameters of type
Map
Modifier
Constructor
Description
AudioFileFormat
(
AudioFileFormat.Type
type,
AudioFormat
format,
 int frameLength,
Map
<
String
,
Object
> properties)
Construct an audio file format object with a set of defined properties.
AudioFormat
(
AudioFormat.Encoding
encoding,
 float sampleRate,
 int sampleSizeInBits,
 int channels,
 int frameSize,
 float frameRate,
 boolean bigEndian,
Map
<
String
,
Object
> properties)
Constructs an
AudioFormat
with the given parameters.
Uses of
Map
in
javax.sql
Methods in
javax.sql
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
Class
<?>>
RowSet.
getTypeMap
()
Retrieves the
Map
object associated with this
RowSet
object, which specifies the custom mapping
 of SQL user-defined types, if any.
Methods in
javax.sql
with parameters of type
Map
Modifier and Type
Method
Description
void
RowSet.
setTypeMap
(
Map
<
String
,
Class
<?>> map)
Installs the given
java.util.Map
object as the default
 type map for this
RowSet
object.
Uses of
Map
in
javax.sql.rowset
Methods in
javax.sql.rowset
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
Class
<?>>
BaseRowSet.
getTypeMap
()
Retrieves the type map associated with the
Connection
object for this
RowSet
object.
Methods in
javax.sql.rowset
with parameters of type
Map
Modifier and Type
Method
Description
void
BaseRowSet.
setTypeMap
(
Map
<
String
,
Class
<?>> map)
Installs the given
java.util.Map
object as the type map
 associated with the
Connection
object for this
RowSet
object.
Uses of
Map
in
javax.sql.rowset.serial
Methods in
javax.sql.rowset.serial
with parameters of type
Map
Modifier and Type
Method
Description
Object
SerialArray.
getArray
(long index,
 int count,
Map
<
String
,
Class
<?>> map)
Returns a new array that is a copy of a slice
 of this
SerialArray
object, starting with the
 element at the given index and containing the given number
 of consecutive elements.
Object
SerialArray.
getArray
(
Map
<
String
,
Class
<?>> map)
Returns a new array that is a copy of this
SerialArray
object, using the given type map for the custom
 mapping of each element when the elements are SQL UDTs.
Object
[]
SerialStruct.
getAttributes
(
Map
<
String
,
Class
<?>> map)
Retrieves the attributes for the SQL structured type that
 this
SerialStruct
represents as an array of
Object
values, using the given type map for
 custom mapping if appropriate.
Object
SerialRef.
getObject
(
Map
<
String
,
Class
<?>> map)
Returns an
Object
representing the SQL structured type
 to which this
SerialRef
object refers.
ResultSet
SerialArray.
getResultSet
(long index,
 int count,
Map
<
String
,
Class
<?>> map)
Retrieves a result set holding the elements of the subarray that starts at
 Retrieves a
ResultSet
object that contains a subarray of the
 elements in this
SerialArray
object, starting at
 index
index
and containing up to
count
successive
 elements.
ResultSet
SerialArray.
getResultSet
(
Map
<
String
,
Class
<?>> map)
Retrieves a
ResultSet
object that contains all of
 the elements of the SQL
ARRAY
value represented by this
SerialArray
object.
Constructors in
javax.sql.rowset.serial
with parameters of type
Map
Modifier
Constructor
Description
SerialArray
(
Array
array,
Map
<
String
,
Class
<?>> map)
Constructs a new
SerialArray
object from the given
Array
object, using the given type map for the custom
 mapping of each element when the elements are SQL UDTs.
SerialStruct
(
SQLData
in,
Map
<
String
,
Class
<?>> map)
Constructs a
SerialStruct
object from the
 given
SQLData
object, using the given type
 map to custom map it to a class in the Java programming
 language.
SerialStruct
(
Struct
in,
Map
<
String
,
Class
<?>> map)
Constructs a
SerialStruct
object from the given
Struct
object, using the given
java.util.Map
object for custom mapping the SQL structured type or any of its
 attributes that are SQL structured types.
SQLInputImpl
(
Object
[] attributes,
Map
<
String
,
Class
<?>> map)
Creates an
SQLInputImpl
object initialized with the
 given array of attributes and the given type map.
SQLOutputImpl
(
Vector
<?> attributes,
Map
<
String
,
?> map)
Creates a new
SQLOutputImpl
object
 initialized with the given vector of attributes and
 type map.
Uses of
Map
in
javax.swing
Classes in
javax.swing
that implement
Map
Modifier and Type
Class
Description
class
UIDefaults
A table of defaults for Swing components.
Uses of
Map
in
javax.xml.crypto.dsig.spec
Methods in
javax.xml.crypto.dsig.spec
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
String
>
XPathFilterParameterSpec.
getNamespaceMap
()
Returns a map of namespace prefixes.
Map
<
String
,
String
>
XPathType.
getNamespaceMap
()
Returns a map of namespace prefixes.
Constructors in
javax.xml.crypto.dsig.spec
with parameters of type
Map
Modifier
Constructor
Description
XPathFilterParameterSpec
(
String
xPath,
Map
<
String
,
String
> namespaceMap)
Creates an
XPathFilterParameterSpec
with the specified
 XPath expression and namespace map.
XPathType
(
String
expression,
XPathType.Filter
filter,
Map
<
String
,
String
> namespaceMap)
Creates an
XPathType
instance with the specified XPath
 expression, filter, and namespace map.
Uses of
Map
in
jdk.jfr
Methods in
jdk.jfr
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
String
>
Configuration.
getSettings
()
Returns the settings that specifies how a recording is configured.
Map
<
String
,
String
>
Recording.
getSettings
()
Returns settings used by this recording.
Methods in
jdk.jfr
with parameters of type
Map
Modifier and Type
Method
Description
void
Recording.
setSettings
(
Map
<
String
,
String
> settings)
Replaces all settings for this recording.
Constructors in
jdk.jfr
with parameters of type
Map
Modifier
Constructor
Description
AnnotationElement
(
Class
<? extends
Annotation
> annotationType,
Map
<
String
,
Object
> values)
Creates an annotation element to use for dynamically defined events.
Recording
(
Map
<
String
,
String
> settings)
Creates a recording with settings from a map of name-value pairs.
Uses of
Map
in
jdk.jfr.consumer
Methods in
jdk.jfr.consumer
with parameters of type
Map
Modifier and Type
Method
Description
void
RecordingStream.
setSettings
(
Map
<
String
,
String
> settings)
Replaces all settings for this recording stream.
Uses of
Map
in
jdk.jshell
Methods in
jdk.jshell
with parameters of type
Map
Modifier and Type
Method
Description
JShell.Builder
JShell.Builder.
executionEngine
(
ExecutionControlProvider
executionControlProvider,
Map
<
String
,
String
> executionControlParameters)
Sets the custom engine for execution.
Uses of
Map
in
jdk.jshell.execution
Methods in
jdk.jshell.execution
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
String
>
FailOverExecutionControlProvider.
defaultParameters
()
Create and return the default parameter map for this
ExecutionControlProvider
.
Map
<
String
,
String
>
JdiExecutionControlProvider.
defaultParameters
()
Create and return the default parameter map for this
ExecutionControlProvider
.
Map
<
String
,
String
>
LocalExecutionControlProvider.
defaultParameters
()
Create and return the default parameter map for
LocalExecutionControlProvider
.
Methods in
jdk.jshell.execution
with parameters of type
Map
Modifier and Type
Method
Description
static void
Util.
forwardExecutionControlAndIO
(
ExecutionControl
ec,
InputStream
inStream,
OutputStream
outStream,
Map
<
String
,
Consumer
<
OutputStream
>> outputStreamMap,
Map
<
String
,
Consumer
<
InputStream
>> inputStreamMap)
Forward commands from the input to the specified
ExecutionControl
instance, then responses back on the output.
ExecutionControl
FailOverExecutionControlProvider.
generate
(
ExecutionEnv
env,
Map
<
String
,
String
> parameters)
Create and return a locally executing
ExecutionControl
instance.
ExecutionControl
JdiExecutionControlProvider.
generate
(
ExecutionEnv
env,
Map
<
String
,
String
> parameters)
ExecutionControl
LocalExecutionControlProvider.
generate
(
ExecutionEnv
env,
Map
<
String
,
String
> parameters)
Create and return a locally executing
ExecutionControl
instance.
static
ExecutionControl
Util.
remoteInputOutput
(
InputStream
input,
OutputStream
output,
Map
<
String
,
OutputStream
> outputStreamMap,
Map
<
String
,
InputStream
> inputStreamMap,
BiFunction
<
ObjectInput
,
ObjectOutput
,
ExecutionControl
> factory)
Creates an ExecutionControl for given packetized input and output.
Constructors in
jdk.jshell.execution
with parameters of type
Map
Modifier
Constructor
Description
JdiInitiator
(int port,
List
<
String
> remoteVMOptions,
String
remoteAgent,
 boolean isLaunch,
String
host,
 int timeout,
Map
<
String
,
String
> customConnectorArgs)
Start the remote agent and establish a JDI connection to it.
Uses of
Map
in
jdk.jshell.spi
Methods in
jdk.jshell.spi
that return
Map
Modifier and Type
Method
Description
default
Map
<
String
,
String
>
ExecutionControlProvider.
defaultParameters
()
Create and return the default parameter map for this
ExecutionControlProvider
.
Methods in
jdk.jshell.spi
with parameters of type
Map
Modifier and Type
Method
Description
static
ExecutionControl
ExecutionControl.
generate
(
ExecutionEnv
env,
String
name,
Map
<
String
,
String
> parameters)
Search for a provider, then create and return the
ExecutionControl
instance.
ExecutionControl
ExecutionControlProvider.
generate
(
ExecutionEnv
env,
Map
<
String
,
String
> parameters)
Create and return the
ExecutionControl
instance.
Uses of
Map
in
jdk.jshell.tool
Methods in
jdk.jshell.tool
with parameters of type
Map
Modifier and Type
Method
Description
JavaShellToolBuilder
JavaShellToolBuilder.
env
(
Map
<
String
,
String
> vars)
Set the source for environment variables.
JavaShellToolBuilder
JavaShellToolBuilder.
persistence
(
Map
<
String
,
String
> prefsMap)
Set the storage mechanism for persistent information which includes
 input history and retained settings.
Uses of
Map
in
jdk.management.jfr
Methods in
jdk.management.jfr
that return
Map
Modifier and Type
Method
Description
Map
<
String
,
String
>
FlightRecorderMXBean.
getRecordingOptions
(long recordingId)
Returns a map that contains the options for the recording with the
 specified ID (for example, the destination file or time span to keep
 recorded data).
Map
<
String
,
String
>
FlightRecorderMXBean.
getRecordingSettings
(long recordingId)
Returns a
Map
that contains the settings for the recording with the specified ID,
 (for example, the event thresholds)
Map
<
String
,
String
>
ConfigurationInfo.
getSettings
()
Returns the settings for the configuration associated with this
ConfigurationInfo
.
Map
<
String
,
String
>
RecordingInfo.
getSettings
()
Returns the settings for the recording associated with this
RecordingInfo
.
Methods in
jdk.management.jfr
with parameters of type
Map
Modifier and Type
Method
Description
long
FlightRecorderMXBean.
openStream
(long recordingId,
Map
<
String
,
String
> streamOptions)
Opens a data stream for the recording with the specified ID, or
0
to get data irrespective of recording.
void
FlightRecorderMXBean.
setRecordingOptions
(long recordingId,
Map
<
String
,
String
> options)
Configures the recording options (for example, destination file and time span
 to keep data).
void
FlightRecorderMXBean.
setRecordingSettings
(long recordingId,
Map
<
String
,
String
> settings)
Sets and replaces all previous settings for the specified recording.
void
RemoteRecordingStream.
setSettings
(
Map
<
String
,
String
> settings)
Replaces all settings for this recording stream.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.