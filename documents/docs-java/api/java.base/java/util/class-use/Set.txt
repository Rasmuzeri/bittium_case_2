Uses of Interface java.util.Set (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.Set
Packages that use
Set
Package
Description
com.sun.jdi.event
This package defines JDI events and event processing.
com.sun.net.httpserver
Provides a simple high-level Http server API, which can be used to build
   embedded HTTP servers.
com.sun.nio.sctp
A Java API for Stream Control Transport Protocol.
com.sun.source.tree
Provides interfaces to represent source code as abstract syntax
 trees (AST).
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.font
Provides classes and interface relating to fonts.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.instrument
Provides services that allow Java programming language agents to instrument
 programs running on the Java Virtual Machine (JVM).
java.lang.management
Provides the management interfaces for monitoring and management of the
Java virtual machine and other components in the Java runtime.
java.lang.module
Classes to support module descriptors and creating configurations of modules
 by means of resolution and service binding.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.net
Provides the classes for implementing networking applications.
java.nio.channels
Defines channels, which represent connections to entities that are capable of
 performing I/O operations, such as files and sockets; defines selectors, for
 multiplexed, non-blocking I/O operations.
java.nio.channels.spi
Service-provider classes for the
java.nio.channels
package.
java.nio.charset
Defines charsets, decoders, and encoders, for translating between
 bytes and Unicode characters.
java.nio.file
Defines interfaces and classes for the Java virtual machine to access files,
 file attributes, and file systems.
java.nio.file.attribute
Interfaces and classes providing access to file and file system attributes.
java.nio.file.spi
Service-provider classes for the
java.nio.file
package.
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
java.text
Provides classes and interfaces for handling text, dates, numbers,
 and messages in a manner independent of natural languages.
java.time
The main API for dates, times, instants, and durations.
java.time.chrono
Generic API for calendar systems other than the default ISO.
java.time.format
Provides classes to print and parse dates and times.
java.time.zone
Support for time-zones and their rules.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.jar
Provides classes for reading and writing the JAR (Java ARchive)
 file format, which is based on the standard ZIP file format with an
 optional manifest file.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
javax.annotation.processing
Facilities for declaring annotation processors and for
 allowing annotation processors to communicate with an annotation processing
 tool environment.
javax.imageio
The main package of the Java Image I/O API.
javax.lang.model.element
Interfaces used to model elements of the Java programming language.
javax.lang.model.util
Utilities to assist in the processing of
program elements
and
types
.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.loading
Provides the classes which implement advanced dynamic
        loading.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
javax.print.attribute.standard
Package
javax.print.attribute.standard
contains classes for specific
 printing attributes.
javax.script
The scripting API consists of interfaces and classes that define
Java Scripting Engines and provides
a framework for their use in Java applications.
javax.security.auth
This package provides a framework for authentication and
 authorization.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.tools
Provides interfaces for tools which can be invoked from a program,
 for example, compilers.
jdk.dynalink.beans
Contains the linker for ordinary Java objects.
jdk.javadoc.doclet
The Doclet API provides an environment which, in conjunction with
 the Language Model API and Compiler Tree API, allows clients
 to inspect the source-level structures of programs and
 libraries, including API comments embedded in the source.
jdk.jfr
This package provides classes to create events and control Flight Recorder.
jdk.jshell
Provides interfaces for creating tools, such as a Read-Eval-Print Loop (REPL),
 which interactively evaluate "snippets" of Java programming language code.
jdk.net
Platform specific socket options for the
java.net
and
java.nio.channels
socket classes.
Uses of
Set
in
com.sun.jdi.event
Subinterfaces of
Set
in
com.sun.jdi.event
Modifier and Type
Interface
Description
interface
EventSet
Several
Event
objects may be created at a given time by
 the target
VirtualMachine
.
Uses of
Set
in
com.sun.net.httpserver
Methods in
com.sun.net.httpserver
that return
Set
Modifier and Type
Method
Description
Set
<
Map.Entry
<
String
,
List
<
String
>>>
Headers.
entrySet
()
Set
<
String
>
Headers.
keySet
()
Uses of
Set
in
com.sun.nio.sctp
Methods in
com.sun.nio.sctp
that return
Set
Modifier and Type
Method
Description
abstract
Set
<
Association
>
SctpMultiChannel.
associations
()
Returns the open associations on this channel's socket.
abstract
Set
<
SocketAddress
>
SctpChannel.
getAllLocalAddresses
()
Returns all of the socket addresses to which this channel's socket is
 bound.
abstract
Set
<
SocketAddress
>
SctpMultiChannel.
getAllLocalAddresses
()
Returns all of the socket addresses to which this channel's socket is
 bound.
abstract
Set
<
SocketAddress
>
SctpServerChannel.
getAllLocalAddresses
()
Returns all of the socket addresses to which this channel's socket is
 bound.
abstract
Set
<
SocketAddress
>
SctpChannel.
getRemoteAddresses
()
Returns all of the remote addresses to which this channel's socket
 is connected.
abstract
Set
<
SocketAddress
>
SctpMultiChannel.
getRemoteAddresses
(
Association
association)
Returns all of the remote addresses to which the given association on
 this channel's socket is connected.
abstract
Set
<
SctpSocketOption
<?>>
SctpChannel.
supportedOptions
()
Returns a set of the socket options supported by this channel.
abstract
Set
<
SctpSocketOption
<?>>
SctpMultiChannel.
supportedOptions
()
Returns a set of the socket options supported by this channel.
abstract
Set
<
SctpSocketOption
<?>>
SctpServerChannel.
supportedOptions
()
Returns a set of the socket options supported by this channel.
Uses of
Set
in
com.sun.source.tree
Methods in
com.sun.source.tree
that return
Set
Modifier and Type
Method
Description
Set
<
Modifier
>
ModifiersTree.
getFlags
()
Returns the flags in this modifiers tree.
Uses of
Set
in
java.awt
Methods in
java.awt
that return
Set
Modifier and Type
Method
Description
Set
<
Map.Entry
<
Object
,
Object
>>
RenderingHints.
entrySet
()
Returns a
Set
view of the mappings contained
 in this
RenderingHints
.
Set
<
AWTKeyStroke
>
KeyboardFocusManager.
getDefaultFocusTraversalKeys
(int id)
Returns a Set of default focus traversal keys for a given traversal
 operation.
Set
<
AWTKeyStroke
>
Component.
getFocusTraversalKeys
(int id)
Returns the Set of focus traversal keys for a given traversal operation
 for this Component.
Set
<
AWTKeyStroke
>
Container.
getFocusTraversalKeys
(int id)
Returns the Set of focus traversal keys for a given traversal operation
 for this Container.
Set
<
AWTKeyStroke
>
Window.
getFocusTraversalKeys
(int id)
Gets a focus traversal key for this Window.
Set
<
Object
>
RenderingHints.
keySet
()
Returns a
Set
view of the Keys contained in this
RenderingHints
.
Methods in
java.awt
with parameters of type
Set
Modifier and Type
Method
Description
void
KeyboardFocusManager.
setDefaultFocusTraversalKeys
(int id,
Set
<? extends
AWTKeyStroke
> keystrokes)
Sets the default focus traversal keys for a given traversal operation.
void
Component.
setFocusTraversalKeys
(int id,
Set
<? extends
AWTKeyStroke
> keystrokes)
Sets the focus traversal keys for a given traversal operation for this
 Component.
void
Container.
setFocusTraversalKeys
(int id,
Set
<? extends
AWTKeyStroke
> keystrokes)
Sets the focus traversal keys for a given traversal operation for this
 Container.
Uses of
Set
in
java.awt.font
Methods in
java.awt.font
that return
Set
Modifier and Type
Method
Description
Set
<
NumericShaper.Range
>
NumericShaper.
getRangeSet
()
Returns a
Set
representing all the Unicode ranges in
 this
NumericShaper
that will be shaped.
Methods in
java.awt.font
with parameters of type
Set
Modifier and Type
Method
Description
static
NumericShaper
NumericShaper.
getContextualShaper
(
Set
<
NumericShaper.Range
> ranges)
Returns a contextual shaper for the provided Unicode
 range(s).
static
NumericShaper
NumericShaper.
getContextualShaper
(
Set
<
NumericShaper.Range
> ranges,
NumericShaper.Range
defaultContext)
Returns a contextual shaper for the provided Unicode range(s).
Uses of
Set
in
java.lang
Methods in
java.lang
that return
Set
Modifier and Type
Method
Description
Set
<
AccessFlag
>
Class.
accessFlags
()
Returns an unmodifiable set of the
access
 flags
for this class, possibly empty.
Set
<
String
>
Module.
getPackages
()
Returns the set of package names for the packages in this module.
Set
<
Module
>
ModuleLayer.
modules
()
Returns an unmodifiable set of the modules in this layer.
Methods in
java.lang
with parameters of type
Set
Modifier and Type
Method
Description
static
StackWalker
StackWalker.
getInstance
(
Set
<
StackWalker.Option
> options)
Returns a
StackWalker
instance with the given
options
specifying
 the stack frame information it can access.
static
StackWalker
StackWalker.
getInstance
(
Set
<
StackWalker.Option
> options,
 int estimateDepth)
Returns a
StackWalker
instance with the given
options
specifying
 the stack frame information it can access.
Uses of
Set
in
java.lang.instrument
Methods in
java.lang.instrument
with parameters of type
Set
Modifier and Type
Method
Description
void
Instrumentation.
redefineModule
(
Module
module,
Set
<
Module
> extraReads,
Map
<
String
,
Set
<
Module
>> extraExports,
Map
<
String
,
Set
<
Module
>> extraOpens,
Set
<
Class
<?>> extraUses,
Map
<
Class
<?>,
List
<
Class
<?>>> extraProvides)
Redefine a module to expand the set of modules that it reads, the set of
 packages that it exports or opens, or the services that it uses or
 provides.
Method parameters in
java.lang.instrument
with type arguments of type
Set
Modifier and Type
Method
Description
void
Instrumentation.
redefineModule
(
Module
module,
Set
<
Module
> extraReads,
Map
<
String
,
Set
<
Module
>> extraExports,
Map
<
String
,
Set
<
Module
>> extraOpens,
Set
<
Class
<?>> extraUses,
Map
<
Class
<?>,
List
<
Class
<?>>> extraProvides)
Redefine a module to expand the set of modules that it reads, the set of
 packages that it exports or opens, or the services that it uses or
 provides.
Uses of
Set
in
java.lang.management
Methods in
java.lang.management
that return
Set
Modifier and Type
Method
Description
static
Set
<
Class
<? extends
PlatformManagedObject
>>
ManagementFactory.
getPlatformManagementInterfaces
()
Returns the set of
Class
objects, subinterface of
PlatformManagedObject
, representing
 all management interfaces for
 monitoring and managing the Java platform.
Uses of
Set
in
java.lang.module
Methods in
java.lang.module
that return
Set
Modifier and Type
Method
Description
Set
<
AccessFlag
>
ModuleDescriptor.
accessFlags
()
Returns the set of the
module flags
.
Set
<
AccessFlag
>
ModuleDescriptor.Exports.
accessFlags
()
Returns the set of the module
export flags
for this module descriptor.
Set
<
AccessFlag
>
ModuleDescriptor.Opens.
accessFlags
()
Returns the set of the module
opens
 flags
.
Set
<
AccessFlag
>
ModuleDescriptor.Requires.
accessFlags
()
Returns the set of the module
requires flags
.
Set
<
ModuleDescriptor.Exports
>
ModuleDescriptor.
exports
()
Returns the set of
Exports
objects representing the exported
 packages.
Set
<
ModuleReference
>
ModuleFinder.
findAll
()
Returns the set of all module references that this finder can locate.
Set
<
ModuleDescriptor.Exports.Modifier
>
ModuleDescriptor.Exports.
modifiers
()
Returns the set of modifiers.
Set
<
ModuleDescriptor.Modifier
>
ModuleDescriptor.
modifiers
()
Returns the set of module modifiers.
Set
<
ModuleDescriptor.Opens.Modifier
>
ModuleDescriptor.Opens.
modifiers
()
Returns the set of modifiers.
Set
<
ModuleDescriptor.Requires.Modifier
>
ModuleDescriptor.Requires.
modifiers
()
Returns the set of modifiers.
Set
<
ResolvedModule
>
Configuration.
modules
()
Returns an unmodifiable set of the resolved modules in this configuration.
Set
<
ModuleDescriptor.Opens
>
ModuleDescriptor.
opens
()
Returns the set of
Opens
objects representing the open
 packages.
Set
<
String
>
ModuleDescriptor.
packages
()
Returns the set of packages in the module.
Set
<
ModuleDescriptor.Provides
>
ModuleDescriptor.
provides
()
Returns the set of
Provides
objects representing the
 services that the module provides.
Set
<
ResolvedModule
>
ResolvedModule.
reads
()
Returns the set of resolved modules that this resolved module reads.
Set
<
ModuleDescriptor.Requires
>
ModuleDescriptor.
requires
()
Returns the set of
Requires
objects representing the module
 dependences.
Set
<
String
>
ModuleDescriptor.Exports.
targets
()
For a qualified export, returns the non-empty and immutable set
 of the module names to which the package is exported.
Set
<
String
>
ModuleDescriptor.Opens.
targets
()
For a qualified
Opens
, returns the non-empty and immutable set
 of the module names to which the package is open.
Set
<
String
>
ModuleDescriptor.
uses
()
Returns the set of service dependences.
Methods in
java.lang.module
with parameters of type
Set
Modifier and Type
Method
Description
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
exports
(
String
pn,
Set
<
String
> targets)
Adds an exported package.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
exports
(
Set
<
ModuleDescriptor.Exports.Modifier
> ms,
String
pn)
Adds an exported package with the given (and possibly empty) set of
 modifiers.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
exports
(
Set
<
ModuleDescriptor.Exports.Modifier
> ms,
String
pn,
Set
<
String
> targets)
Adds an exported package with the given (and possibly empty) set of
 modifiers.
static
ModuleDescriptor.Builder
ModuleDescriptor.
newModule
(
String
name,
Set
<
ModuleDescriptor.Modifier
> ms)
Instantiates a builder to build a module descriptor.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
opens
(
String
pn,
Set
<
String
> targets)
Adds an open package.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
opens
(
Set
<
ModuleDescriptor.Opens.Modifier
> ms,
String
pn)
Adds an open package with the given (and possibly empty) set of
 modifiers.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
opens
(
Set
<
ModuleDescriptor.Opens.Modifier
> ms,
String
pn,
Set
<
String
> targets)
Adds an open package with the given (and possibly empty) set of
 modifiers.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
packages
(
Set
<
String
> pns)
Adds packages to the module.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
requires
(
Set
<
ModuleDescriptor.Requires.Modifier
> ms,
String
mn)
Adds a dependence on a module with the given (and possibly empty)
 set of modifiers.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
requires
(
Set
<
ModuleDescriptor.Requires.Modifier
> ms,
String
mn,
ModuleDescriptor.Version
compiledVersion)
Adds a dependence on a module with the given (and possibly empty)
 set of modifiers.
Method parameters in
java.lang.module
with type arguments of type
Set
Modifier and Type
Method
Description
static
ModuleDescriptor
ModuleDescriptor.
read
(
InputStream
in,
Supplier
<
Set
<
String
>> packageFinder)
Reads the binary form of a module declaration from an input stream
 as a module descriptor.
static
ModuleDescriptor
ModuleDescriptor.
read
(
ByteBuffer
bb,
Supplier
<
Set
<
String
>> packageFinder)
Reads the binary form of a module declaration from a byte buffer
 as a module descriptor.
Uses of
Set
in
java.lang.reflect
Methods in
java.lang.reflect
that return
Set
Modifier and Type
Method
Description
Set
<
AccessFlag
>
Executable.
accessFlags
()
Returns an unmodifiable set of the
access flags
for the executable represented by this object,
 possibly empty.
Set
<
AccessFlag
>
Field.
accessFlags
()
Returns an unmodifiable set of the
access flags
for this field, possibly empty.
default
Set
<
AccessFlag
>
Member.
accessFlags
()
Returns an unmodifiable set of the
access flags
for this member, possibly empty.
Set
<
AccessFlag
>
Parameter.
accessFlags
()
Returns an unmodifiable set of the
access flags
for the parameter represented by this object,
 possibly empty.
Set
<
AccessFlag.Location
>
AccessFlag.
locations
()
Returns kinds of constructs the flag can be applied to in the
 latest class file format version.
Set
<
AccessFlag.Location
>
AccessFlag.
locations
(
ClassFileFormatVersion
cffv)
Returns kinds of constructs the flag can be applied to in the
 given class file format version.
static
Set
<
AccessFlag
>
AccessFlag.
maskToAccessFlags
(int mask,
AccessFlag.Location
location)
Returns an unmodifiable set of access flags for the given mask value
 appropriate for the location in question.
Uses of
Set
in
java.net
Methods in
java.net
that return
Set
Modifier and Type
Method
Description
Set
<
SocketOption
<?>>
DatagramSocket.
supportedOptions
()
Returns a set of the socket options supported by this socket.
protected
Set
<
SocketOption
<?>>
DatagramSocketImpl.
supportedOptions
()
Returns a set of SocketOptions supported by this impl
 and by this impl's socket (DatagramSocket or MulticastSocket)
Set
<
SocketOption
<?>>
ServerSocket.
supportedOptions
()
Returns a set of the socket options supported by this server socket.
Set
<
SocketOption
<?>>
Socket.
supportedOptions
()
Returns a set of the socket options supported by this socket.
protected
Set
<
SocketOption
<?>>
SocketImpl.
supportedOptions
()
Returns a set of SocketOptions supported by this impl
 and by this impl's socket (Socket or ServerSocket)
Uses of
Set
in
java.nio.channels
Methods in
java.nio.channels
that return
Set
Modifier and Type
Method
Description
abstract
Set
<
SelectionKey
>
Selector.
keys
()
Returns this selector's key set.
abstract
Set
<
SelectionKey
>
Selector.
selectedKeys
()
Returns this selector's selected-key set.
Set
<
SocketOption
<?>>
NetworkChannel.
supportedOptions
()
Returns a set of the socket options supported by this channel.
Methods in
java.nio.channels
with parameters of type
Set
Modifier and Type
Method
Description
static
AsynchronousFileChannel
AsynchronousFileChannel.
open
(
Path
file,
Set
<? extends
OpenOption
> options,
ExecutorService
executor,
FileAttribute
<?>... attrs)
Opens or creates a file for reading and/or writing, returning an
 asynchronous file channel to access the file.
static
FileChannel
FileChannel.
open
(
Path
path,
Set
<? extends
OpenOption
> options,
FileAttribute
<?>... attrs)
Opens or creates a file, returning a file channel to access the file.
Uses of
Set
in
java.nio.channels.spi
Methods in
java.nio.channels.spi
that return
Set
Modifier and Type
Method
Description
protected final
Set
<
SelectionKey
>
AbstractSelector.
cancelledKeys
()
Retrieves this selector's cancelled-key set.
Uses of
Set
in
java.nio.charset
Methods in
java.nio.charset
that return
Set
Modifier and Type
Method
Description
final
Set
<
String
>
Charset.
aliases
()
Returns a set containing this charset's aliases.
Uses of
Set
in
java.nio.file
Methods in
java.nio.file
that return
Set
Modifier and Type
Method
Description
static
Set
<
PosixFilePermission
>
Files.
getPosixFilePermissions
(
Path
path,
LinkOption
... options)
Returns a file's POSIX file permissions.
abstract
Set
<
String
>
FileSystem.
supportedFileAttributeViews
()
Returns the set of the
names
of the file
 attribute views supported by this
FileSystem
.
Methods in
java.nio.file
with parameters of type
Set
Modifier and Type
Method
Description
static
SeekableByteChannel
Files.
newByteChannel
(
Path
path,
Set
<? extends
OpenOption
> options,
FileAttribute
<?>... attrs)
Opens or creates a file, returning a seekable byte channel to access the
 file.
SeekableByteChannel
SecureDirectoryStream.
newByteChannel
(
T
path,
Set
<? extends
OpenOption
> options,
FileAttribute
<?>... attrs)
Opens or creates a file in this directory, returning a seekable byte
 channel to access the file.
static
Path
Files.
setPosixFilePermissions
(
Path
path,
Set
<
PosixFilePermission
> perms)
Sets a file's POSIX permissions.
static
Path
Files.
walkFileTree
(
Path
start,
Set
<
FileVisitOption
> options,
 int maxDepth,
FileVisitor
<? super
Path
> visitor)
Walks a file tree.
Uses of
Set
in
java.nio.file.attribute
Methods in
java.nio.file.attribute
that return
Set
Modifier and Type
Method
Description
Set
<
AclEntryFlag
>
AclEntry.
flags
()
Returns a copy of the flags component.
static
Set
<
PosixFilePermission
>
PosixFilePermissions.
fromString
(
String
perms)
Returns the set of permissions corresponding to a given
String
representation.
Set
<
AclEntryPermission
>
AclEntry.
permissions
()
Returns a copy of the permissions component.
Set
<
PosixFilePermission
>
PosixFileAttributes.
permissions
()
Returns the permissions of the file.
Methods in
java.nio.file.attribute
that return types with arguments of type
Set
Modifier and Type
Method
Description
static
FileAttribute
<
Set
<
PosixFilePermission
>>
PosixFilePermissions.
asFileAttribute
(
Set
<
PosixFilePermission
> perms)
Creates a
FileAttribute
, encapsulating a copy of the given file
 permissions, suitable for passing to the
createFile
or
createDirectory
methods.
Methods in
java.nio.file.attribute
with parameters of type
Set
Modifier and Type
Method
Description
static
FileAttribute
<
Set
<
PosixFilePermission
>>
PosixFilePermissions.
asFileAttribute
(
Set
<
PosixFilePermission
> perms)
Creates a
FileAttribute
, encapsulating a copy of the given file
 permissions, suitable for passing to the
createFile
or
createDirectory
methods.
AclEntry.Builder
AclEntry.Builder.
setFlags
(
Set
<
AclEntryFlag
> flags)
Sets the flags component of this builder.
AclEntry.Builder
AclEntry.Builder.
setPermissions
(
Set
<
AclEntryPermission
> perms)
Sets the permissions component of this builder.
void
PosixFileAttributeView.
setPermissions
(
Set
<
PosixFilePermission
> perms)
Updates the file permissions.
static
String
PosixFilePermissions.
toString
(
Set
<
PosixFilePermission
> perms)
Returns the
String
representation of a set of permissions.
Uses of
Set
in
java.nio.file.spi
Methods in
java.nio.file.spi
with parameters of type
Set
Modifier and Type
Method
Description
AsynchronousFileChannel
FileSystemProvider.
newAsynchronousFileChannel
(
Path
path,
Set
<? extends
OpenOption
> options,
ExecutorService
executor,
FileAttribute
<?>... attrs)
Opens or creates a file for reading and/or writing, returning an
 asynchronous file channel to access the file.
abstract
SeekableByteChannel
FileSystemProvider.
newByteChannel
(
Path
path,
Set
<? extends
OpenOption
> options,
FileAttribute
<?>... attrs)
Opens or creates a file, returning a seekable byte channel to access the
 file.
FileChannel
FileSystemProvider.
newFileChannel
(
Path
path,
Set
<? extends
OpenOption
> options,
FileAttribute
<?>... attrs)
Opens or creates a file for reading and/or writing, returning a file
 channel to access the file.
Uses of
Set
in
java.security
Methods in
java.security
that return
Set
Modifier and Type
Method
Description
Set
<
KeyStore.Entry.Attribute
>
KeyStoreSpi.
engineGetAttributes
(
String
alias)
Retrieves the attributes associated with the given alias.
Set
<
Map.Entry
<
Object
,
Object
>>
Provider.
entrySet
()
Returns an unmodifiable Set view of the property entries contained
 in this
Provider
.
static
Set
<
String
>
Security.
getAlgorithms
(
String
serviceName)
Returns a Set of
String
objects containing the names of all
 available algorithms or types for the specified Java cryptographic
 service (e.g.,
Signature
,
MessageDigest
,
Cipher
,
Mac
,
KeyStore
).
default
Set
<
KeyStore.Entry.Attribute
>
KeyStore.Entry.
getAttributes
()
Retrieves the attributes associated with an entry.
final
Set
<
KeyStore.Entry.Attribute
>
KeyStore.
getAttributes
(
String
alias)
Retrieves the attributes associated with the given alias.
Set
<
KeyStore.Entry.Attribute
>
KeyStore.PrivateKeyEntry.
getAttributes
()
Retrieves the attributes associated with an entry.
Set
<
KeyStore.Entry.Attribute
>
KeyStore.SecretKeyEntry.
getAttributes
()
Retrieves the attributes associated with an entry.
Set
<
KeyStore.Entry.Attribute
>
KeyStore.TrustedCertificateEntry.
getAttributes
()
Retrieves the attributes associated with an entry.
Set
<
Provider.Service
>
Provider.
getServices
()
Get an unmodifiable Set of all services supported by
 this
Provider
.
Set
<
Object
>
Provider.
keySet
()
Returns an unmodifiable Set view of the property keys contained in
 this
Provider
.
Methods in
java.security
with parameters of type
Set
Modifier and Type
Method
Description
boolean
AlgorithmConstraints.
permits
(
Set
<
CryptoPrimitive
> primitives,
String
algorithm,
AlgorithmParameters
parameters)
Determines whether an algorithm is granted permission for the
 specified cryptographic primitives.
boolean
AlgorithmConstraints.
permits
(
Set
<
CryptoPrimitive
> primitives,
String
algorithm,
Key
key,
AlgorithmParameters
parameters)
Determines whether an algorithm and the corresponding key are granted
 permission for the specified cryptographic primitives.
boolean
AlgorithmConstraints.
permits
(
Set
<
CryptoPrimitive
> primitives,
Key
key)
Determines whether a key is granted permission for the specified
 cryptographic primitives.
Constructors in
java.security
with parameters of type
Set
Modifier
Constructor
Description
PrivateKeyEntry
(
PrivateKey
privateKey,
Certificate
[] chain,
Set
<
KeyStore.Entry.Attribute
> attributes)
Constructs a
PrivateKeyEntry
with a
PrivateKey
and
 corresponding certificate chain and associated entry attributes.
SecretKeyEntry
(
SecretKey
secretKey,
Set
<
KeyStore.Entry.Attribute
> attributes)
Constructs a
SecretKeyEntry
with a
SecretKey
and
 associated entry attributes.
TrustedCertificateEntry
(
Certificate
trustedCert,
Set
<
KeyStore.Entry.Attribute
> attributes)
Constructs a
TrustedCertificateEntry
with a
 trusted
Certificate
and associated entry attributes.
Uses of
Set
in
java.security.cert
Methods in
java.security.cert
that return
Set
Modifier and Type
Method
Description
Set
<
String
>
X509Extension.
getCriticalExtensionOIDs
()
Gets a Set of the OID strings for the extension(s) marked
 CRITICAL in the certificate/CRL managed by the object
 implementing this interface.
Set
<
String
>
PolicyNode.
getExpectedPolicies
()
Returns the set of expected policies that would satisfy this
 node's valid policy in the next certificate to be processed.
Set
<
String
>
X509CertSelector.
getExtendedKeyUsage
()
Returns the extendedKeyUsage criterion.
Set
<
String
>
PKIXParameters.
getInitialPolicies
()
Returns an immutable
Set
of initial
 policy identifiers (OID strings), indicating that any one of these
 policies would be acceptable to the certificate user for the purposes of
 certification path processing.
Set
<
String
>
X509Extension.
getNonCriticalExtensionOIDs
()
Gets a Set of the OID strings for the extension(s) marked
 NON-CRITICAL in the certificate/CRL managed by the object
 implementing this interface.
Set
<
PKIXRevocationChecker.Option
>
PKIXRevocationChecker.
getOptions
()
Gets the revocation options.
Set
<
String
>
X509CertSelector.
getPolicy
()
Returns the policy criterion.
Set
<? extends
PolicyQualifierInfo
>
PolicyNode.
getPolicyQualifiers
()
Returns the set of policy qualifiers associated with the
 valid policy represented by this node.
abstract
Set
<? extends
X509CRLEntry
>
X509CRL.
getRevokedCertificates
()
Gets all the entries from this CRL.
abstract
Set
<
String
>
PKIXCertPathChecker.
getSupportedExtensions
()
Returns an immutable
Set
of X.509 certificate extensions
 that this
PKIXCertPathChecker
supports (i.e. recognizes, is
 able to process), or
null
if no extensions are supported.
Set
<
TrustAnchor
>
PKIXParameters.
getTrustAnchors
()
Returns an immutable
Set
of the most-trusted
 CAs.
Methods in
java.security.cert
with parameters of type
Set
Modifier and Type
Method
Description
void
X509CertSelector.
setExtendedKeyUsage
(
Set
<
String
> keyPurposeSet)
Sets the extendedKeyUsage criterion.
void
PKIXParameters.
setInitialPolicies
(
Set
<
String
> initialPolicies)
Sets the
Set
of initial policy identifiers
 (OID strings), indicating that any one of these
 policies would be acceptable to the certificate user for the purposes of
 certification path processing.
void
PKIXRevocationChecker.
setOptions
(
Set
<
PKIXRevocationChecker.Option
> options)
Sets the revocation options.
void
X509CertSelector.
setPolicy
(
Set
<
String
> certPolicySet)
Sets the policy constraint.
void
PKIXParameters.
setTrustAnchors
(
Set
<
TrustAnchor
> trustAnchors)
Sets the
Set
of most-trusted CAs.
Constructors in
java.security.cert
with parameters of type
Set
Modifier
Constructor
Description
PKIXBuilderParameters
(
Set
<
TrustAnchor
> trustAnchors,
CertSelector
targetConstraints)
Creates an instance of
PKIXBuilderParameters
with
 the specified
Set
of most-trusted CAs.
PKIXParameters
(
Set
<
TrustAnchor
> trustAnchors)
Creates an instance of
PKIXParameters
with the specified
Set
of most-trusted CAs.
Uses of
Set
in
java.text
Methods in
java.text
that return
Set
Modifier and Type
Method
Description
Set
<
AttributedCharacterIterator.Attribute
>
AttributedCharacterIterator.
getAllAttributeKeys
()
Returns the keys of all attributes defined on the
 iterator's text range.
Methods in
java.text
with parameters of type
Set
Modifier and Type
Method
Description
int
AttributedCharacterIterator.
getRunLimit
(
Set
<? extends
AttributedCharacterIterator.Attribute
> attributes)
Returns the index of the first character following the run
 with respect to the given
attributes
containing the current character.
int
AttributedCharacterIterator.
getRunStart
(
Set
<? extends
AttributedCharacterIterator.Attribute
> attributes)
Returns the index of the first character of the run
 with respect to the given
attributes
containing the current character.
Uses of
Set
in
java.time
Methods in
java.time
that return
Set
Modifier and Type
Method
Description
static
Set
<
String
>
ZoneId.
getAvailableZoneIds
()
Gets the set of available zone IDs.
Uses of
Set
in
java.time.chrono
Methods in
java.time.chrono
that return
Set
Modifier and Type
Method
Description
static
Set
<
Chronology
>
Chronology.
getAvailableChronologies
()
Returns the available chronologies.
Uses of
Set
in
java.time.format
Methods in
java.time.format
that return
Set
Modifier and Type
Method
Description
static
Set
<
Locale
>
DecimalStyle.
getAvailableLocales
()
Lists all the locales that are supported.
Set
<
TemporalField
>
DateTimeFormatter.
getResolverFields
()
Gets the resolver fields to use during parsing.
Methods in
java.time.format
with parameters of type
Set
Modifier and Type
Method
Description
DateTimeFormatterBuilder
DateTimeFormatterBuilder.
appendGenericZoneText
(
TextStyle
textStyle,
Set
<
ZoneId
> preferredZones)
Appends the generic time-zone name, such as 'Pacific Time', to the formatter.
DateTimeFormatterBuilder
DateTimeFormatterBuilder.
appendZoneText
(
TextStyle
textStyle,
Set
<
ZoneId
> preferredZones)
Appends the time-zone name, such as 'British Summer Time', to the formatter.
DateTimeFormatter
DateTimeFormatter.
withResolverFields
(
Set
<
TemporalField
> resolverFields)
Returns a copy of this formatter with a new set of resolver fields.
Uses of
Set
in
java.time.zone
Methods in
java.time.zone
that return
Set
Modifier and Type
Method
Description
static
Set
<
String
>
ZoneRulesProvider.
getAvailableZoneIds
()
Gets the set of available zone IDs.
protected abstract
Set
<
String
>
ZoneRulesProvider.
provideZoneIds
()
SPI method to get the available zone IDs.
Uses of
Set
in
java.util
Subinterfaces of
Set
in
java.util
Modifier and Type
Interface
Description
interface
NavigableSet
<E>
A
SortedSet
extended with navigation methods reporting
 closest matches for given search targets.
interface
SequencedSet
<E>
A collection that is both a
SequencedCollection
and a
Set
.
interface
SortedSet
<E>
A
Set
that further provides a
total ordering
on its elements.
Classes in
java.util
that implement
Set
Modifier and Type
Class
Description
class
AbstractSet
<E>
This class provides a skeletal implementation of the
Set
interface to minimize the effort required to implement this
 interface.
class
EnumSet
<E extends
Enum
<E>>
A specialized
Set
implementation for use with enum types.
class
HashSet
<E>
This class implements the
Set
interface, backed by a hash table
 (actually a
HashMap
instance).
class
LinkedHashSet
<E>
Hash table and linked list implementation of the
Set
interface,
 with well-defined encounter order.
class
TreeSet
<E>
A
NavigableSet
implementation based on a
TreeMap
.
Fields in
java.util
declared as
Set
Modifier and Type
Field
Description
static final
Set
Collections.
EMPTY_SET
The empty set (immutable).
Methods in
java.util
that return
Set
Modifier and Type
Method
Description
static <E>
Set
<E>
Collections.
checkedSet
(
Set
<E> s,
Class
<E> type)
Returns a dynamically typesafe view of the specified set.
static <E>
Set
<E>
Set.
copyOf
(
Collection
<? extends E> coll)
Returns an
unmodifiable Set
containing the elements
 of the given Collection.
static final <T>
Set
<T>
Collections.
emptySet
()
Returns an empty set (immutable).
Set
<
Map.Entry
<
K
,
V
>>
EnumMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
HashMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
Hashtable.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
IdentityHashMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
LinkedHashMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
Map.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
SortedMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
TreeMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
WeakHashMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
static
Set
<
String
>
Calendar.
getAvailableCalendarTypes
()
Returns an unmodifiable
Set
containing all calendar types
 supported by
Calendar
in the runtime environment.
static
Set
<
Currency
>
Currency.
getAvailableCurrencies
()
Gets the set of available currencies.
Set
<
Character
>
Locale.
getExtensionKeys
()
Returns the set of extension keys associated with this locale, or the
 empty set if it has no extensions.
static
Set
<
String
>
Locale.
getISOCountries
(
Locale.IsoCountryCode
type)
Returns a
Set
of ISO3166 country codes for the specified type.
Set
<
String
>
Locale.
getUnicodeLocaleAttributes
()
Returns the set of unicode locale attributes associated with
 this locale, or the empty set if it has no attributes.
Set
<
String
>
Locale.
getUnicodeLocaleKeys
()
Returns the set of Unicode locale keys defined by this locale, or the empty set if
 this locale has none.
protected
Set
<
String
>
ListResourceBundle.
handleKeySet
()
Returns a
Set
of the keys contained
only
in this
ResourceBundle
.
protected
Set
<
String
>
PropertyResourceBundle.
handleKeySet
()
Returns a
Set
of the keys contained
only
in this
ResourceBundle
.
protected
Set
<
String
>
ResourceBundle.
handleKeySet
()
Returns a
Set
of the keys contained
only
in this
ResourceBundle
.
Set
<
K
>
AbstractMap.
keySet
()
Returns a
Set
view of the keys contained in this map.
Set
<
K
>
EnumMap.
keySet
()
Returns a
Set
view of the keys contained in this map.
Set
<
K
>
HashMap.
keySet
()
Returns a
Set
view of the keys contained in this map.
Set
<
K
>
Hashtable.
keySet
()
Returns a
Set
view of the keys contained in this map.
Set
<
K
>
IdentityHashMap.
keySet
()
Returns an identity-based set view of the keys contained in this map.
Set
<
K
>
LinkedHashMap.
keySet
()
Returns a
Set
view of the keys contained in this map.
Set
<
K
>
Map.
keySet
()
Returns a
Set
view of the keys contained in this map.
Set
<
String
>
ResourceBundle.
keySet
()
Returns a
Set
of all keys contained in this
ResourceBundle
and its parent bundles.
Set
<
K
>
SortedMap.
keySet
()
Returns a
Set
view of the keys contained in this map.
Set
<
K
>
TreeMap.
keySet
()
Returns a
Set
view of the keys contained in this map.
Set
<
K
>
WeakHashMap.
keySet
()
Returns a
Set
view of the keys contained in this map.
static <E>
Set
<E>
Collections.
newSetFromMap
(
Map
<E,
Boolean
> map)
Returns a set backed by the specified map.
static <E>
Set
<E>
Set.
of
()
Returns an unmodifiable set containing zero elements.
static <E>
Set
<E>
Set.
of
(E e1)
Returns an unmodifiable set containing one element.
static <E>
Set
<E>
Set.
of
(E... elements)
Returns an unmodifiable set containing an arbitrary number of elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2)
Returns an unmodifiable set containing two elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2,
 E e3)
Returns an unmodifiable set containing three elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2,
 E e3,
 E e4)
Returns an unmodifiable set containing four elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2,
 E e3,
 E e4,
 E e5)
Returns an unmodifiable set containing five elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2,
 E e3,
 E e4,
 E e5,
 E e6)
Returns an unmodifiable set containing six elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2,
 E e3,
 E e4,
 E e5,
 E e6,
 E e7)
Returns an unmodifiable set containing seven elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2,
 E e3,
 E e4,
 E e5,
 E e6,
 E e7,
 E e8)
Returns an unmodifiable set containing eight elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2,
 E e3,
 E e4,
 E e5,
 E e6,
 E e7,
 E e8,
 E e9)
Returns an unmodifiable set containing nine elements.
static <E>
Set
<E>
Set.
of
(E e1,
 E e2,
 E e3,
 E e4,
 E e5,
 E e6,
 E e7,
 E e8,
 E e9,
 E e10)
Returns an unmodifiable set containing ten elements.
static <T>
Set
<T>
Collections.
singleton
(T o)
Returns an immutable set containing only the specified object.
Set
<
String
>
Properties.
stringPropertyNames
()
Returns an unmodifiable set of keys from this property list
 where the key and its corresponding value are strings,
 including distinct keys in the default property list if a key
 of the same name has not already been found from the main
 properties list.
static <T>
Set
<T>
Collections.
synchronizedSet
(
Set
<T> s)
Returns a synchronized (thread-safe) set backed by the specified
 set.
static <T>
Set
<T>
Collections.
unmodifiableSet
(
Set
<? extends T> s)
Returns an
unmodifiable view
of the
 specified set.
Methods in
java.util
with parameters of type
Set
Modifier and Type
Method
Description
static <E>
Set
<E>
Collections.
checkedSet
(
Set
<E> s,
Class
<E> type)
Returns a dynamically typesafe view of the specified set.
static <T>
Set
<T>
Collections.
synchronizedSet
(
Set
<T> s)
Returns a synchronized (thread-safe) set backed by the specified
 set.
static <T>
Set
<T>
Collections.
unmodifiableSet
(
Set
<? extends T> s)
Returns an
unmodifiable view
of the
 specified set.
Uses of
Set
in
java.util.concurrent
Classes in
java.util.concurrent
that implement
Set
Modifier and Type
Class
Description
static final class
ConcurrentHashMap.KeySetView
<K,
V>
A view of a ConcurrentHashMap as a
Set
of keys, in
 which additions may optionally be enabled by mapping to a
 common value.
class
ConcurrentSkipListSet
<E>
A scalable concurrent
NavigableSet
implementation based on
 a
ConcurrentSkipListMap
.
class
CopyOnWriteArraySet
<E>
A
Set
that uses an internal
CopyOnWriteArrayList
for all of its operations.
Methods in
java.util.concurrent
that return
Set
Modifier and Type
Method
Description
Set
<
Map.Entry
<
K
,
V
>>
ConcurrentHashMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
Map.Entry
<
K
,
V
>>
ConcurrentSkipListMap.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Uses of
Set
in
java.util.jar
Methods in
java.util.jar
that return
Set
Modifier and Type
Method
Description
Set
<
Map.Entry
<
Object
,
Object
>>
Attributes.
entrySet
()
Returns a Collection view of the attribute name-value mappings
 contained in this Map.
Set
<
Object
>
Attributes.
keySet
()
Returns a Set view of the attribute names (keys) contained in this Map.
Uses of
Set
in
java.util.stream
Methods in
java.util.stream
that return
Set
Modifier and Type
Method
Description
Set
<
Collector.Characteristics
>
Collector.
characteristics
()
Returns a
Set
of
Collector.Characteristics
indicating
 the characteristics of this Collector.
Methods in
java.util.stream
that return types with arguments of type
Set
Modifier and Type
Method
Description
static <T>
Collector
<T,
?,
Set
<T>>
Collectors.
toSet
()
Returns a
Collector
that accumulates the input elements into a
 new
Set
.
static <T>
Collector
<T,
?,
Set
<T>>
Collectors.
toUnmodifiableSet
()
Returns a
Collector
that accumulates the input elements into an
unmodifiable Set
.
Uses of
Set
in
javax.annotation.processing
Methods in
javax.annotation.processing
that return
Set
Modifier and Type
Method
Description
Set
<? extends
Element
>
RoundEnvironment.
getElementsAnnotatedWith
(
Class
<? extends
Annotation
> a)
Returns the elements annotated with the given annotation interface.
Set
<? extends
Element
>
RoundEnvironment.
getElementsAnnotatedWith
(
TypeElement
a)
Returns the elements annotated with the given annotation interface.
default
Set
<? extends
Element
>
RoundEnvironment.
getElementsAnnotatedWithAny
(
Set
<
Class
<? extends
Annotation
>> annotations)
Returns the elements annotated with one or more of the given
 annotation interfaces.
default
Set
<? extends
Element
>
RoundEnvironment.
getElementsAnnotatedWithAny
(
TypeElement
... annotations)
Returns the elements annotated with one or more of the given
 annotation interfaces.
Set
<? extends
Element
>
RoundEnvironment.
getRootElements
()
Returns the
root elements
for annotation
 processing
generated
by the prior round.
Set
<
String
>
AbstractProcessor.
getSupportedAnnotationTypes
()
If the processor class is annotated with
SupportedAnnotationTypes
, return an unmodifiable set with the
 same set of strings as the annotation.
Set
<
String
>
Processor.
getSupportedAnnotationTypes
()
Returns the names of the annotation interfaces supported by this
 processor.
Set
<
String
>
AbstractProcessor.
getSupportedOptions
()
If the processor class is annotated with
SupportedOptions
, return an unmodifiable set with the same set
 of strings as the annotation.
Set
<
String
>
Processor.
getSupportedOptions
()
Returns the options recognized by this processor.
Methods in
javax.annotation.processing
with parameters of type
Set
Modifier and Type
Method
Description
default
Set
<? extends
Element
>
RoundEnvironment.
getElementsAnnotatedWithAny
(
Set
<
Class
<? extends
Annotation
>> annotations)
Returns the elements annotated with one or more of the given
 annotation interfaces.
boolean
Processor.
process
(
Set
<? extends
TypeElement
> annotations,
RoundEnvironment
roundEnv)
Processes a set of annotation interfaces on
root elements
originating
 from the prior round and returns whether or not these
 annotation interfaces are claimed by this processor.
Uses of
Set
in
javax.imageio
Methods in
javax.imageio
with parameters of type
Set
Modifier and Type
Method
Description
IIOMetadata
ImageReader.
getImageMetadata
(int imageIndex,
String
formatName,
Set
<
String
> nodeNames)
Returns an
IIOMetadata
object representing the
 metadata associated with the given image, or
null
if the reader does not support reading metadata or none
 is available.
IIOMetadata
ImageReader.
getStreamMetadata
(
String
formatName,
Set
<
String
> nodeNames)
Returns an
IIOMetadata
object representing the
 metadata associated with the input source as a whole (i.e.,
 not associated with any particular image).
Uses of
Set
in
javax.lang.model.element
Methods in
javax.lang.model.element
that return
Set
Modifier and Type
Method
Description
Set
<
Modifier
>
Element.
getModifiers
()
Returns the modifiers of this element, excluding annotations.
Uses of
Set
in
javax.lang.model.util
Methods in
javax.lang.model.util
that return
Set
Modifier and Type
Method
Description
static
Set
<
ExecutableElement
>
ElementFilter.
constructorsIn
(
Set
<? extends
Element
> elements)
Returns a set of constructors in
elements
.
static
Set
<
VariableElement
>
ElementFilter.
fieldsIn
(
Set
<? extends
Element
> elements)
Returns a set of fields in
elements
.
default
Set
<? extends
ModuleElement
>
Elements.
getAllModuleElements
()
Returns all module elements in the current environment.
default
Set
<? extends
PackageElement
>
Elements.
getAllPackageElements
(
CharSequence
name)
Returns all package elements with the given canonical name.
default
Set
<? extends
TypeElement
>
Elements.
getAllTypeElements
(
CharSequence
name)
Returns all type elements with the given canonical name.
static
Set
<
ExecutableElement
>
ElementFilter.
methodsIn
(
Set
<? extends
Element
> elements)
Returns a set of methods in
elements
.
static
Set
<
ModuleElement
>
ElementFilter.
modulesIn
(
Set
<? extends
Element
> elements)
Returns a set of modules in
elements
.
static
Set
<
PackageElement
>
ElementFilter.
packagesIn
(
Set
<? extends
Element
> elements)
Returns a set of packages in
elements
.
static
Set
<
RecordComponentElement
>
ElementFilter.
recordComponentsIn
(
Set
<? extends
Element
> elements)
Returns a set of record components in
elements
.
static
Set
<
TypeElement
>
ElementFilter.
typesIn
(
Set
<? extends
Element
> elements)
Returns a set of types in
elements
.
Methods in
javax.lang.model.util
with parameters of type
Set
Modifier and Type
Method
Description
static
Set
<
ExecutableElement
>
ElementFilter.
constructorsIn
(
Set
<? extends
Element
> elements)
Returns a set of constructors in
elements
.
static
Set
<
VariableElement
>
ElementFilter.
fieldsIn
(
Set
<? extends
Element
> elements)
Returns a set of fields in
elements
.
static
Set
<
ExecutableElement
>
ElementFilter.
methodsIn
(
Set
<? extends
Element
> elements)
Returns a set of methods in
elements
.
static
Set
<
ModuleElement
>
ElementFilter.
modulesIn
(
Set
<? extends
Element
> elements)
Returns a set of modules in
elements
.
static
Set
<
PackageElement
>
ElementFilter.
packagesIn
(
Set
<? extends
Element
> elements)
Returns a set of packages in
elements
.
static
Set
<
RecordComponentElement
>
ElementFilter.
recordComponentsIn
(
Set
<? extends
Element
> elements)
Returns a set of record components in
elements
.
static
Set
<
TypeElement
>
ElementFilter.
typesIn
(
Set
<? extends
Element
> elements)
Returns a set of types in
elements
.
Uses of
Set
in
javax.management
Methods in
javax.management
that return
Set
Modifier and Type
Method
Description
Set
<
ObjectInstance
>
MBeanServer.
queryMBeans
(
ObjectName
name,
QueryExp
query)
Gets MBeans controlled by the MBean server.
Set
<
ObjectInstance
>
MBeanServerConnection.
queryMBeans
(
ObjectName
name,
QueryExp
query)
Gets MBeans controlled by the MBean server.
Set
<
ObjectName
>
MBeanServer.
queryNames
(
ObjectName
name,
QueryExp
query)
Gets the names of MBeans controlled by the MBean server.
Set
<
ObjectName
>
MBeanServerConnection.
queryNames
(
ObjectName
name,
QueryExp
query)
Gets the names of MBeans controlled by the MBean server.
Uses of
Set
in
javax.management.loading
Methods in
javax.management.loading
that return
Set
Modifier and Type
Method
Description
Set
<
Object
>
MLet.
getMBeansFromURL
(
String
url)
Deprecated, for removal: This API element is subject to removal in a future version.
Loads a text file containing MLET tags that define the MBeans to
 be added to the MBean server.
Set
<
Object
>
MLet.
getMBeansFromURL
(
URL
url)
Deprecated, for removal: This API element is subject to removal in a future version.
Loads a text file containing MLET tags that define the MBeans to
 be added to the MBean server.
Set
<
Object
>
MLetMBean.
getMBeansFromURL
(
String
url)
Deprecated, for removal: This API element is subject to removal in a future version.
Loads a text file containing MLET tags that define the MBeans
 to be added to the MBean server.
Set
<
Object
>
MLetMBean.
getMBeansFromURL
(
URL
url)
Deprecated, for removal: This API element is subject to removal in a future version.
Loads a text file containing MLET tags that define the MBeans
 to be added to the MBean server.
Uses of
Set
in
javax.management.openmbean
Methods in
javax.management.openmbean
that return
Set
Modifier and Type
Method
Description
Set
<
Map.Entry
<
Object
,
Object
>>
TabularDataSupport.
entrySet
()
Returns a collection view of the index to row mappings
 contained in this
TabularDataSupport
instance.
Set
<?>
OpenMBeanAttributeInfoSupport.
getLegalValues
()
Returns an unmodifiable Set of legal values for the attribute
 described by this
OpenMBeanAttributeInfoSupport
instance, if specified, or
null
otherwise.
Set
<?>
OpenMBeanParameterInfo.
getLegalValues
()
Returns the set of legal values for this parameter, if it has
 one, or
null
otherwise.
Set
<?>
OpenMBeanParameterInfoSupport.
getLegalValues
()
Returns an unmodifiable Set of legal values for the parameter
 described by this
OpenMBeanParameterInfoSupport
instance, if specified, or
null
otherwise.
Set
<
String
>
CompositeType.
keySet
()
Returns an unmodifiable Set view of all the item names defined by this
CompositeType
instance.
Set
<?>
TabularData.
keySet
()
Returns a set view of the keys (ie the index values) of the
CompositeData
values (ie the rows) contained in this
TabularData
instance.
Set
<
Object
>
TabularDataSupport.
keySet
()
Returns a set view of the keys contained in the underlying map of this
TabularDataSupport
instance used to index the rows.
Uses of
Set
in
javax.management.remote.rmi
Methods in
javax.management.remote.rmi
that return
Set
Modifier and Type
Method
Description
Set
<
ObjectInstance
>
RMIConnection.
queryMBeans
(
ObjectName
name,
MarshalledObject
query,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.queryMBeans(ObjectName, QueryExp)
.
Set
RMIConnectionImpl_Stub.
queryMBeans
(
ObjectName
$param_ObjectName_1,
MarshalledObject
$param_MarshalledObject_2,
Subject
$param_Subject_3)
Set
<
ObjectInstance
>
RMIConnectionImpl.
queryMBeans
(
ObjectName
name,
MarshalledObject
query,
Subject
delegationSubject)
Set
<
ObjectName
>
RMIConnection.
queryNames
(
ObjectName
name,
MarshalledObject
query,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.queryNames(ObjectName, QueryExp)
.
Set
RMIConnectionImpl_Stub.
queryNames
(
ObjectName
$param_ObjectName_1,
MarshalledObject
$param_MarshalledObject_2,
Subject
$param_Subject_3)
Set
<
ObjectName
>
RMIConnectionImpl.
queryNames
(
ObjectName
name,
MarshalledObject
query,
Subject
delegationSubject)
Uses of
Set
in
javax.print.attribute.standard
Classes in
javax.print.attribute.standard
that implement
Set
Modifier and Type
Class
Description
final class
JobStateReasons
Class
JobStateReasons
is a printing attribute class, a set of
 enumeration values, that provides additional information about the job's
 current state, i.e., information that augments the value of the job's
JobState
attribute.
Methods in
javax.print.attribute.standard
that return
Set
Modifier and Type
Method
Description
Set
<
PrinterStateReason
>
PrinterStateReasons.
printerStateReasonSet
(
Severity
severity)
Obtain an unmodifiable set view of the individual printer state reason
 attributes at the given severity level in this
PrinterStateReasons
attribute.
Uses of
Set
in
javax.script
Methods in
javax.script
that return
Set
Modifier and Type
Method
Description
Set
<
Map.Entry
<
String
,
Object
>>
SimpleBindings.
entrySet
()
Returns a
Set
view of the mappings contained in this map.
Set
<
String
>
SimpleBindings.
keySet
()
Returns a
Set
view of the keys contained in this map.
Uses of
Set
in
javax.security.auth
Methods in
javax.security.auth
that return
Set
Modifier and Type
Method
Description
Set
<
Principal
>
Subject.
getPrincipals
()
Return the
Set
of Principals associated with this
Subject
.
<T extends
Principal
>
Set
<T>
Subject.
getPrincipals
(
Class
<T> c)
Return a
Set
of Principals associated with this
Subject
that are instances or subclasses of the specified
Class
.
Set
<
Object
>
Subject.
getPrivateCredentials
()
Return the
Set
of private credentials held by this
Subject
.
<T>
Set
<T>
Subject.
getPrivateCredentials
(
Class
<T> c)
Return a
Set
of private credentials associated with this
Subject
that are instances or subclasses of the specified
Class
.
Set
<
Object
>
Subject.
getPublicCredentials
()
Return the
Set
of public credentials held by this
Subject
.
<T>
Set
<T>
Subject.
getPublicCredentials
(
Class
<T> c)
Return a
Set
of public credentials associated with this
Subject
that are instances or subclasses of the specified
Class
.
Constructors in
javax.security.auth
with parameters of type
Set
Modifier
Constructor
Description
Subject
(boolean readOnly,
Set
<? extends
Principal
> principals,
Set
<?> pubCredentials,
Set
<?> privCredentials)
Create an instance of a
Subject
with
 Principals and credentials.
Uses of
Set
in
javax.swing
Methods in
javax.swing
with parameters of type
Set
Modifier and Type
Method
Description
void
JComponent.
setFocusTraversalKeys
(int id,
Set
<? extends
AWTKeyStroke
> keystrokes)
Sets the focus traversal keys for a given traversal operation for this
 Component.
Uses of
Set
in
javax.tools
Methods in
javax.tools
that return
Set
Modifier and Type
Method
Description
Set
<
SourceVersion
>
Tool.
getSourceVersions
()
Returns the source versions of the Java programming language
 supported by this tool.
Methods in
javax.tools
that return types with arguments of type
Set
Modifier and Type
Method
Description
Iterable
<
Set
<
JavaFileManager.Location
>>
ForwardingJavaFileManager.
listLocationsForModules
(
JavaFileManager.Location
location)
default
Iterable
<
Set
<
JavaFileManager.Location
>>
JavaFileManager.
listLocationsForModules
(
JavaFileManager.Location
location)
Lists the locations for all the modules in a module-oriented location or an output location.
Methods in
javax.tools
with parameters of type
Set
Modifier and Type
Method
Description
Iterable
<
JavaFileObject
>
ForwardingJavaFileManager.
list
(
JavaFileManager.Location
location,
String
packageName,
Set
<
JavaFileObject.Kind
> kinds,
 boolean recurse)
Iterable
<
JavaFileObject
>
JavaFileManager.
list
(
JavaFileManager.Location
location,
String
packageName,
Set
<
JavaFileObject.Kind
> kinds,
 boolean recurse)
Lists all file objects matching the given criteria in the given
 package-oriented location.
Uses of
Set
in
jdk.dynalink.beans
Methods in
jdk.dynalink.beans
that return
Set
Modifier and Type
Method
Description
static
Set
<
String
>
BeansLinker.
getInstanceMethodNames
(
Class
<?> clazz)
Returns a set of names of all instance methods of a class.
static
Set
<
String
>
BeansLinker.
getReadableInstancePropertyNames
(
Class
<?> clazz)
Returns a set of names of all readable instance properties of a class.
static
Set
<
String
>
BeansLinker.
getReadableStaticPropertyNames
(
Class
<?> clazz)
Returns a set of names of all readable static properties of a class.
static
Set
<
String
>
BeansLinker.
getStaticMethodNames
(
Class
<?> clazz)
Returns a set of names of all static methods of a class.
static
Set
<
String
>
BeansLinker.
getWritableInstancePropertyNames
(
Class
<?> clazz)
Returns a set of names of all writable instance properties of a class.
static
Set
<
String
>
BeansLinker.
getWritableStaticPropertyNames
(
Class
<?> clazz)
Returns a set of names of all writable static properties of a class.
Uses of
Set
in
jdk.javadoc.doclet
Methods in
jdk.javadoc.doclet
that return
Set
Modifier and Type
Method
Description
Set
<
Taglet.Location
>
Taglet.
getAllowedLocations
()
Returns the set of supported locations for block tags.
Set
<? extends
Element
>
DocletEnvironment.
getIncludedElements
()
Returns the module, package and type elements that should be
included
in the
 documentation.
Set
<? extends
Element
>
DocletEnvironment.
getSpecifiedElements
()
Returns the elements
specified
when the tool is invoked.
Set
<? extends
Doclet.Option
>
Doclet.
getSupportedOptions
()
Returns all the supported options.
Set
<? extends
Doclet.Option
>
StandardDoclet.
getSupportedOptions
()
Uses of
Set
in
jdk.jfr
Methods in
jdk.jfr
with parameters of type
Set
Modifier and Type
Method
Description
abstract
String
SettingControl.
combine
(
Set
<
String
> settingValues)
Combines the setting values for all running recordings into one value when
 multiple recordings are running at the same time,
Uses of
Set
in
jdk.jshell
Methods in
jdk.jshell
that return
Set
Modifier and Type
Method
Description
Set
<
SourceCodeAnalysis.Attribute
>
SourceCodeAnalysis.Highlight.
attributes
()
Returns the value of the
attributes
record component.
Constructors in
jdk.jshell
with parameters of type
Set
Modifier
Constructor
Description
Highlight
(int start,
 int end,
Set
<
SourceCodeAnalysis.Attribute
> attributes)
Creates an instance of a
Highlight
record class.
Uses of
Set
in
jdk.net
Methods in
jdk.net
that return
Set
Modifier and Type
Method
Description
static
Set
<
SocketOption
<?>>
Sockets.
supportedOptions
(
Class
<?> socketType)
Deprecated, for removal: This API element is subject to removal in a future version.
use
Socket.supportedOptions()
,
ServerSocket.supportedOptions()
,
             or
DatagramSocket.supportedOptions()
instead.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.