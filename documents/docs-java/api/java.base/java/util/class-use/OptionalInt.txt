Uses of Class java.util.OptionalInt (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.OptionalInt
Packages that use
OptionalInt
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
Uses of
OptionalInt
in
java.util
Methods in
java.util
that return
OptionalInt
Modifier and Type
Method
Description
static
OptionalInt
OptionalInt.
empty
()
Returns an empty
OptionalInt
instance.
static
OptionalInt
OptionalInt.
of
(int value)
Returns an
OptionalInt
describing the given value.
Uses of
OptionalInt
in
java.util.stream
Methods in
java.util.stream
that return
OptionalInt
Modifier and Type
Method
Description
OptionalInt
IntStream.
findAny
()
Returns an
OptionalInt
describing some element of the stream, or
 an empty
OptionalInt
if the stream is empty.
OptionalInt
IntStream.
findFirst
()
Returns an
OptionalInt
describing the first element of this
 stream, or an empty
OptionalInt
if the stream is empty.
OptionalInt
IntStream.
max
()
Returns an
OptionalInt
describing the maximum element of this
 stream, or an empty optional if this stream is empty.
OptionalInt
IntStream.
min
()
Returns an
OptionalInt
describing the minimum element of this
 stream, or an empty optional if this stream is empty.
OptionalInt
IntStream.
reduce
(
IntBinaryOperator
op)
Performs a
reduction
on the
 elements of this stream, using an
associative
accumulation
 function, and returns an
OptionalInt
describing the reduced value,
 if any.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.