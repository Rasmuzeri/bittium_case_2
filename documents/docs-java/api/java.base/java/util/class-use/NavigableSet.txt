Uses of Interface java.util.NavigableSet (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.NavigableSet
Packages that use
NavigableSet
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
Uses of
NavigableSet
in
java.util
Classes in
java.util
that implement
NavigableSet
Modifier and Type
Class
Description
class
TreeSet
<E>
A
NavigableSet
implementation based on a
TreeMap
.
Methods in
java.util
that return
NavigableSet
Modifier and Type
Method
Description
static <E>
NavigableSet
<E>
Collections.
checkedNavigableSet
(
NavigableSet
<E> s,
Class
<E> type)
Returns a dynamically typesafe view of the specified navigable set.
NavigableSet
<
K
>
NavigableMap.
descendingKeySet
()
Returns a reverse order
NavigableSet
view of the keys contained in this map.
NavigableSet
<
K
>
TreeMap.
descendingKeySet
()
NavigableSet
<
E
>
NavigableSet.
descendingSet
()
Returns a reverse order view of the elements contained in this set.
NavigableSet
<
E
>
TreeSet.
descendingSet
()
static <E>
NavigableSet
<E>
Collections.
emptyNavigableSet
()
Returns an empty navigable set (immutable).
NavigableSet
<
E
>
NavigableSet.
headSet
(
E
toElement,
 boolean inclusive)
Returns a view of the portion of this set whose elements are less than
 (or equal to, if
inclusive
is true)
toElement
.
NavigableSet
<
E
>
TreeSet.
headSet
(
E
toElement,
 boolean inclusive)
NavigableSet
<
K
>
NavigableMap.
navigableKeySet
()
Returns a
NavigableSet
view of the keys contained in this map.
NavigableSet
<
K
>
TreeMap.
navigableKeySet
()
default
NavigableSet
<
E
>
NavigableSet.
reversed
()
Returns a reverse-ordered
view
of this collection.
NavigableSet
<
E
>
NavigableSet.
subSet
(
E
fromElement,
 boolean fromInclusive,
E
toElement,
 boolean toInclusive)
Returns a view of the portion of this set whose elements range from
fromElement
to
toElement
.
NavigableSet
<
E
>
TreeSet.
subSet
(
E
fromElement,
 boolean fromInclusive,
E
toElement,
 boolean toInclusive)
static <T>
NavigableSet
<T>
Collections.
synchronizedNavigableSet
(
NavigableSet
<T> s)
Returns a synchronized (thread-safe) navigable set backed by the
 specified navigable set.
NavigableSet
<
E
>
NavigableSet.
tailSet
(
E
fromElement,
 boolean inclusive)
Returns a view of the portion of this set whose elements are greater
 than (or equal to, if
inclusive
is true)
fromElement
.
NavigableSet
<
E
>
TreeSet.
tailSet
(
E
fromElement,
 boolean inclusive)
static <T>
NavigableSet
<T>
Collections.
unmodifiableNavigableSet
(
NavigableSet
<T> s)
Returns an
unmodifiable view
of the
 specified navigable set.
Methods in
java.util
with parameters of type
NavigableSet
Modifier and Type
Method
Description
static <E>
NavigableSet
<E>
Collections.
checkedNavigableSet
(
NavigableSet
<E> s,
Class
<E> type)
Returns a dynamically typesafe view of the specified navigable set.
static <T>
NavigableSet
<T>
Collections.
synchronizedNavigableSet
(
NavigableSet
<T> s)
Returns a synchronized (thread-safe) navigable set backed by the
 specified navigable set.
static <T>
NavigableSet
<T>
Collections.
unmodifiableNavigableSet
(
NavigableSet
<T> s)
Returns an
unmodifiable view
of the
 specified navigable set.
Uses of
NavigableSet
in
java.util.concurrent
Classes in
java.util.concurrent
that implement
NavigableSet
Modifier and Type
Class
Description
class
ConcurrentSkipListSet
<E>
A scalable concurrent
NavigableSet
implementation based on
 a
ConcurrentSkipListMap
.
Methods in
java.util.concurrent
that return
NavigableSet
Modifier and Type
Method
Description
NavigableSet
<
K
>
ConcurrentNavigableMap.
descendingKeySet
()
Returns a reverse order
NavigableSet
view of the keys contained in this map.
NavigableSet
<
K
>
ConcurrentSkipListMap.
descendingKeySet
()
NavigableSet
<
E
>
ConcurrentSkipListSet.
descendingSet
()
Returns a reverse order view of the elements contained in this set.
NavigableSet
<
E
>
ConcurrentSkipListSet.
headSet
(
E
toElement)
NavigableSet
<
E
>
ConcurrentSkipListSet.
headSet
(
E
toElement,
 boolean inclusive)
NavigableSet
<
K
>
ConcurrentNavigableMap.
keySet
()
Returns a
NavigableSet
view of the keys contained in this map.
NavigableSet
<
K
>
ConcurrentSkipListMap.
keySet
()
Returns a
NavigableSet
view of the keys contained in this map.
NavigableSet
<
K
>
ConcurrentNavigableMap.
navigableKeySet
()
Returns a
NavigableSet
view of the keys contained in this map.
NavigableSet
<
K
>
ConcurrentSkipListMap.
navigableKeySet
()
NavigableSet
<
E
>
ConcurrentSkipListSet.
subSet
(
E
fromElement,
 boolean fromInclusive,
E
toElement,
 boolean toInclusive)
NavigableSet
<
E
>
ConcurrentSkipListSet.
subSet
(
E
fromElement,
E
toElement)
NavigableSet
<
E
>
ConcurrentSkipListSet.
tailSet
(
E
fromElement)
NavigableSet
<
E
>
ConcurrentSkipListSet.
tailSet
(
E
fromElement,
 boolean inclusive)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.