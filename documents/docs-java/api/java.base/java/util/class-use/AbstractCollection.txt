Uses of Class java.util.AbstractCollection (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.AbstractCollection
Packages that use
AbstractCollection
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.relation
Provides the definition of the Relation Service.
javax.print.attribute.standard
Package
javax.print.attribute.standard
contains classes for specific
 printing attributes.
Uses of
AbstractCollection
in
java.util
Subclasses of
AbstractCollection
in
java.util
Modifier and Type
Class
Description
class
AbstractList
<E>
This class provides a skeletal implementation of the
List
interface to minimize the effort required to implement this interface
 backed by a "random access" data store (such as an array).
class
AbstractQueue
<E>
This class provides skeletal implementations of some
Queue
operations.
class
AbstractSequentialList
<E>
This class provides a skeletal implementation of the
List
interface to minimize the effort required to implement this interface
 backed by a "sequential access" data store (such as a linked list).
class
AbstractSet
<E>
This class provides a skeletal implementation of the
Set
interface to minimize the effort required to implement this
 interface.
class
ArrayDeque
<E>
Resizable-array implementation of the
Deque
interface.
class
ArrayList
<E>
Resizable-array implementation of the
List
interface.
class
EnumSet
<E extends
Enum
<E>>
A specialized
Set
implementation for use with enum types.
class
HashSet
<E>
This class implements the
Set
interface, backed by a hash table
 (actually a
HashMap
instance).
class
LinkedHashSet
<E>
Hash table and linked list implementation of the
Set
interface,
 with well-defined encounter order.
class
LinkedList
<E>
Doubly-linked list implementation of the
List
and
Deque
interfaces.
class
PriorityQueue
<E>
An unbounded priority
queue
based on a priority heap.
class
Stack
<E>
The
Stack
class represents a last-in-first-out
 (LIFO) stack of objects.
class
TreeSet
<E>
A
NavigableSet
implementation based on a
TreeMap
.
class
Vector
<E>
The
Vector
class implements a growable array of
 objects.
Uses of
AbstractCollection
in
java.util.concurrent
Subclasses of
AbstractCollection
in
java.util.concurrent
Modifier and Type
Class
Description
class
ArrayBlockingQueue
<E>
A bounded
blocking queue
backed by an
 array.
class
ConcurrentLinkedDeque
<E>
An unbounded concurrent
deque
based on linked nodes.
class
ConcurrentLinkedQueue
<E>
An unbounded thread-safe
queue
based on linked nodes.
class
ConcurrentSkipListSet
<E>
A scalable concurrent
NavigableSet
implementation based on
 a
ConcurrentSkipListMap
.
class
CopyOnWriteArraySet
<E>
A
Set
that uses an internal
CopyOnWriteArrayList
for all of its operations.
class
DelayQueue
<E extends
Delayed
>
An unbounded
blocking queue
of
Delayed
elements, in which an element generally becomes eligible for removal when its
 delay has expired.
class
LinkedBlockingDeque
<E>
An optionally-bounded
blocking deque
based on
 linked nodes.
class
LinkedBlockingQueue
<E>
An optionally-bounded
blocking queue
based on
 linked nodes.
class
LinkedTransferQueue
<E>
An unbounded
TransferQueue
based on linked nodes.
class
PriorityBlockingQueue
<E>
An unbounded
blocking queue
that uses
 the same ordering rules as class
PriorityQueue
and supplies
 blocking retrieval operations.
class
SynchronousQueue
<E>
A
blocking queue
in which each insert
 operation must wait for a corresponding remove operation by another
 thread, and vice versa.
Uses of
AbstractCollection
in
javax.management
Subclasses of
AbstractCollection
in
javax.management
Modifier and Type
Class
Description
class
AttributeList
Represents a list of values for attributes of an MBean.
Uses of
AbstractCollection
in
javax.management.relation
Subclasses of
AbstractCollection
in
javax.management.relation
Modifier and Type
Class
Description
class
RoleList
A RoleList represents a list of roles (Role objects).
class
RoleUnresolvedList
A RoleUnresolvedList represents a list of RoleUnresolved objects,
 representing roles not retrieved from a relation due to a problem
 encountered when trying to access (read or write) the roles.
Uses of
AbstractCollection
in
javax.print.attribute.standard
Subclasses of
AbstractCollection
in
javax.print.attribute.standard
Modifier and Type
Class
Description
final class
JobStateReasons
Class
JobStateReasons
is a printing attribute class, a set of
 enumeration values, that provides additional information about the job's
 current state, i.e., information that augments the value of the job's
JobState
attribute.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.