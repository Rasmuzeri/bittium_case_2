Uses of Class java.util.AbstractQueue (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.AbstractQueue
Packages that use
AbstractQueue
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
Uses of
AbstractQueue
in
java.util
Subclasses of
AbstractQueue
in
java.util
Modifier and Type
Class
Description
class
PriorityQueue
<E>
An unbounded priority
queue
based on a priority heap.
Uses of
AbstractQueue
in
java.util.concurrent
Subclasses of
AbstractQueue
in
java.util.concurrent
Modifier and Type
Class
Description
class
ArrayBlockingQueue
<E>
A bounded
blocking queue
backed by an
 array.
class
ConcurrentLinkedQueue
<E>
An unbounded thread-safe
queue
based on linked nodes.
class
DelayQueue
<E extends
Delayed
>
An unbounded
blocking queue
of
Delayed
elements, in which an element generally becomes eligible for removal when its
 delay has expired.
class
LinkedBlockingDeque
<E>
An optionally-bounded
blocking deque
based on
 linked nodes.
class
LinkedBlockingQueue
<E>
An optionally-bounded
blocking queue
based on
 linked nodes.
class
LinkedTransferQueue
<E>
An unbounded
TransferQueue
based on linked nodes.
class
PriorityBlockingQueue
<E>
An unbounded
blocking queue
that uses
 the same ordering rules as class
PriorityQueue
and supplies
 blocking retrieval operations.
class
SynchronousQueue
<E>
A
blocking queue
in which each insert
 operation must wait for a corresponding remove operation by another
 thread, and vice versa.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.