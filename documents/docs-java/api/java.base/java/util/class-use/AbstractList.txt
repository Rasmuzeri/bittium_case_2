Uses of Class java.util.AbstractList (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.AbstractList
Packages that use
AbstractList
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.relation
Provides the definition of the Relation Service.
Uses of
AbstractList
in
java.util
Subclasses of
AbstractList
in
java.util
Modifier and Type
Class
Description
class
AbstractSequentialList
<E>
This class provides a skeletal implementation of the
List
interface to minimize the effort required to implement this interface
 backed by a "sequential access" data store (such as a linked list).
class
ArrayList
<E>
Resizable-array implementation of the
List
interface.
class
LinkedList
<E>
Doubly-linked list implementation of the
List
and
Deque
interfaces.
class
Stack
<E>
The
Stack
class represents a last-in-first-out
 (LIFO) stack of objects.
class
Vector
<E>
The
Vector
class implements a growable array of
 objects.
Uses of
AbstractList
in
javax.management
Subclasses of
AbstractList
in
javax.management
Modifier and Type
Class
Description
class
AttributeList
Represents a list of values for attributes of an MBean.
Uses of
AbstractList
in
javax.management.relation
Subclasses of
AbstractList
in
javax.management.relation
Modifier and Type
Class
Description
class
RoleList
A RoleList represents a list of roles (Role objects).
class
RoleUnresolvedList
A RoleUnresolvedList represents a list of RoleUnresolved objects,
 representing roles not retrieved from a relation due to a problem
 encountered when trying to access (read or write) the roles.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.