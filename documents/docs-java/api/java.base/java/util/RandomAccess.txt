RandomAccess (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.base
Package
java.util
Interface RandomAccess
All Known Implementing Classes:
ArrayList
,
AttributeList
,
CopyOnWriteArrayList
,
RoleList
,
RoleUnresolvedList
,
Stack
,
Vector
public interface
RandomAccess
Marker interface used by
List
implementations to indicate that
 they support fast (generally constant time) random access.  The primary
 purpose of this interface is to allow generic algorithms to alter their
 behavior to provide good performance when applied to either random or
 sequential access lists.
The best algorithms for manipulating random access lists (such as
ArrayList
) can produce quadratic behavior when applied to
 sequential access lists (such as
LinkedList
).  Generic list
 algorithms are encouraged to check whether the given list is an
instanceof
this interface before applying an algorithm that would
 provide poor performance if it were applied to a sequential access list,
 and to alter their behavior if necessary to guarantee acceptable
 performance.
It is recognized that the distinction between random and sequential
 access is often fuzzy.  For example, some
List
implementations
 provide asymptotically linear access times if they get huge, but constant
 access times in practice.  Such a
List
implementation
 should generally implement this interface.  As a rule of thumb, a
List
implementation should implement this interface if,
 for typical instances of the class, this loop:
for (int i=0, n=list.size(); i < n; i++)
         list.get(i);
runs faster than this loop:
for (Iterator i=list.iterator(); i.hasNext(); )
         i.next();
This interface is a member of the
Java Collections Framework
.
Since:
1.4
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.