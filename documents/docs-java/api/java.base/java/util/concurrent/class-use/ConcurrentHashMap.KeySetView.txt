Uses of Class java.util.concurrent.ConcurrentHashMap.KeySetView (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.concurrent.ConcurrentHashMap.KeySetView
Packages that use
ConcurrentHashMap.KeySetView
Package
Description
java.util.concurrent
Utility classes commonly useful in concurrent programming.
Uses of
ConcurrentHashMap.KeySetView
in
java.util.concurrent
Methods in
java.util.concurrent
that return
ConcurrentHashMap.KeySetView
Modifier and Type
Method
Description
ConcurrentHashMap.KeySetView
<
K
,
V
>
ConcurrentHashMap.
keySet
()
Returns a
Set
view of the keys contained in this map.
ConcurrentHashMap.KeySetView
<
K
,
V
>
ConcurrentHashMap.
keySet
(
V
mappedValue)
Returns a
Set
view of the keys in this map, using the
 given common mapped value for any additions (i.e.,
Collection.add(E)
and
Collection.addAll(Collection)
).
static <K>
ConcurrentHashMap.KeySetView
<K,
Boolean
>
ConcurrentHashMap.
newKeySet
()
Creates a new
Set
backed by a ConcurrentHashMap
 from the given type to
Boolean.TRUE
.
static <K>
ConcurrentHashMap.KeySetView
<K,
Boolean
>
ConcurrentHashMap.
newKeySet
(int initialCapacity)
Creates a new
Set
backed by a ConcurrentHashMap
 from the given type to
Boolean.TRUE
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.