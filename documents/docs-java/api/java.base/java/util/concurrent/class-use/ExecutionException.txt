Uses of Class java.util.concurrent.ExecutionException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.concurrent.ExecutionException
Packages that use
ExecutionException
Package
Description
java.util.concurrent
Utility classes commonly useful in concurrent programming.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
Uses of
ExecutionException
in
java.util.concurrent
Methods in
java.util.concurrent
that throw
ExecutionException
Modifier and Type
Method
Description
T
CompletableFuture.
get
()
Waits if necessary for this future to complete, and then
 returns its result.
T
CompletableFuture.
get
(long timeout,
TimeUnit
unit)
Waits if necessary for at most the given time for this future
 to complete, and then returns its result, if available.
final
V
ForkJoinTask.
get
()
Waits if necessary for the computation to complete, and then
 retrieves its result.
final
V
ForkJoinTask.
get
(long timeout,
TimeUnit
unit)
Waits if necessary for at most the given time for the computation
 to complete, and then retrieves its result, if available.
V
Future.
get
()
Waits if necessary for the computation to complete, and then
 retrieves its result.
V
Future.
get
(long timeout,
TimeUnit
unit)
Waits if necessary for at most the given time for the computation
 to complete, and then retrieves its result, if available.
V
FutureTask.
get
()
V
FutureTask.
get
(long timeout,
TimeUnit
unit)
<T> T
AbstractExecutorService.
invokeAny
(
Collection
<? extends
Callable
<T>> tasks)
<T> T
AbstractExecutorService.
invokeAny
(
Collection
<? extends
Callable
<T>> tasks,
 long timeout,
TimeUnit
unit)
<T> T
ExecutorService.
invokeAny
(
Collection
<? extends
Callable
<T>> tasks)
Executes the given tasks, returning the result
 of one that has completed successfully (i.e., without throwing
 an exception), if any do.
<T> T
ExecutorService.
invokeAny
(
Collection
<? extends
Callable
<T>> tasks,
 long timeout,
TimeUnit
unit)
Executes the given tasks, returning the result
 of one that has completed successfully (i.e., without throwing
 an exception), if any do before the given timeout elapses.
T
StructuredTaskScope.ShutdownOnSuccess.
result
()
Returns the result of the first subtask that completed
successfully
PREVIEW
.
void
StructuredTaskScope.ShutdownOnFailure.
throwIfFailed
()
Throws if a subtask
failed
PREVIEW
.
Uses of
ExecutionException
in
javax.swing
Methods in
javax.swing
that throw
ExecutionException
Modifier and Type
Method
Description
final
T
SwingWorker.
get
()
Waits if necessary for the computation to complete, and then
 retrieves its result.
final
T
SwingWorker.
get
(long timeout,
TimeUnit
unit)
Waits if necessary for at most the given time for the computation
 to complete, and then retrieves its result, if available.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.