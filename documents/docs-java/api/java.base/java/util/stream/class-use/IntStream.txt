Uses of Interface java.util.stream.IntStream (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.stream.IntStream
Packages that use
IntStream
Package
Description
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.random
This package contains classes and interfaces that support a generic API
 for random number generation.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
Uses of
IntStream
in
java.lang
Methods in
java.lang
that return
IntStream
Modifier and Type
Method
Description
default
IntStream
CharSequence.
chars
()
Returns a stream of
int
zero-extending the
char
values
 from this sequence.
IntStream
String.
chars
()
Returns a stream of
int
zero-extending the
char
values
 from this sequence.
default
IntStream
CharSequence.
codePoints
()
Returns a stream of code point values from this sequence.
IntStream
String.
codePoints
()
Returns a stream of code point values from this sequence.
Uses of
IntStream
in
java.util
Methods in
java.util
that return
IntStream
Modifier and Type
Method
Description
IntStream
Random.
ints
()
Returns an effectively unlimited stream of pseudorandom
int
values.
IntStream
Random.
ints
(int randomNumberOrigin,
 int randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
int
values, each conforming to the given origin (inclusive) and bound
 (exclusive).
IntStream
Random.
ints
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandom
int
values.
IntStream
Random.
ints
(long streamSize,
 int randomNumberOrigin,
 int randomNumberBound)
Returns a stream producing the given
streamSize
number
 of pseudorandom
int
values, each conforming to the given
 origin (inclusive) and bound (exclusive).
IntStream
SplittableRandom.
ints
()
Returns an effectively unlimited stream of pseudorandom
int
values from this generator and/or one split from it.
IntStream
SplittableRandom.
ints
(int randomNumberOrigin,
 int randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
int
values from this generator and/or one split from it; each value
 conforms to the given origin (inclusive) and bound (exclusive).
IntStream
SplittableRandom.
ints
(long streamSize)
Returns a stream producing the given
streamSize
number
 of pseudorandom
int
values from this generator and/or
 one split from it.
IntStream
SplittableRandom.
ints
(long streamSize,
 int randomNumberOrigin,
 int randomNumberBound)
Returns a stream producing the given
streamSize
number
 of pseudorandom
int
values from this generator and/or one split
 from it; each value conforms to the given origin (inclusive) and bound
 (exclusive).
static
IntStream
Arrays.
stream
(int[] array)
Returns a sequential
IntStream
with the specified array as its
 source.
static
IntStream
Arrays.
stream
(int[] array,
 int startInclusive,
 int endExclusive)
Returns a sequential
IntStream
with the specified range of the
 specified array as its source.
IntStream
BitSet.
stream
()
Returns a stream of indices for which this
BitSet
contains a bit in the set state.
IntStream
OptionalInt.
stream
()
If a value is present, returns a sequential
IntStream
containing
 only that value, otherwise returns an empty
IntStream
.
Uses of
IntStream
in
java.util.concurrent
Methods in
java.util.concurrent
that return
IntStream
Modifier and Type
Method
Description
IntStream
ThreadLocalRandom.
ints
()
Returns an effectively unlimited stream of pseudorandom
int
values.
IntStream
ThreadLocalRandom.
ints
(int randomNumberOrigin,
 int randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
int
values, each conforming to the given origin (inclusive) and bound
 (exclusive).
IntStream
ThreadLocalRandom.
ints
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandom
int
values.
IntStream
ThreadLocalRandom.
ints
(long streamSize,
 int randomNumberOrigin,
 int randomNumberBound)
Returns a stream producing the given
streamSize
number
 of pseudorandom
int
values, each conforming to the given
 origin (inclusive) and bound (exclusive).
Uses of
IntStream
in
java.util.random
Methods in
java.util.random
that return
IntStream
Modifier and Type
Method
Description
default
IntStream
RandomGenerator.
ints
()
Returns an effectively unlimited stream of pseudorandomly chosen
int
values.
default
IntStream
RandomGenerator.
ints
(int randomNumberOrigin,
 int randomNumberBound)
Returns an effectively unlimited stream of pseudorandomly chosen
int
values, where each value is between the specified origin
 (inclusive) and the specified bound (exclusive).
default
IntStream
RandomGenerator.
ints
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandomly chosen
int
values.
default
IntStream
RandomGenerator.
ints
(long streamSize,
 int randomNumberOrigin,
 int randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandomly chosen
int
values, where each value is between
 the specified origin (inclusive) and the specified bound (exclusive).
Uses of
IntStream
in
java.util.stream
Methods in
java.util.stream
that return
IntStream
Modifier and Type
Method
Description
IntStream
IntStream.Builder.
build
()
Builds the stream, transitioning this builder to the built state.
static
IntStream
IntStream.
concat
(
IntStream
a,
IntStream
b)
Creates a lazily concatenated stream whose elements are all the
 elements of the first stream followed by all the elements of the
 second stream.
IntStream
IntStream.
distinct
()
Returns a stream consisting of the distinct elements of this stream.
default
IntStream
IntStream.
dropWhile
(
IntPredicate
predicate)
Returns, if this stream is ordered, a stream consisting of the remaining
 elements of this stream after dropping the longest prefix of elements
 that match the given predicate.
static
IntStream
IntStream.
empty
()
Returns an empty sequential
IntStream
.
IntStream
IntStream.
filter
(
IntPredicate
predicate)
Returns a stream consisting of the elements of this stream that match
 the given predicate.
IntStream
IntStream.
flatMap
(
IntFunction
<? extends
IntStream
> mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with the contents of a mapped stream produced by applying
 the provided mapping function to each element.
IntStream
Stream.
flatMapToInt
(
Function
<? super
T
,
? extends
IntStream
> mapper)
Returns an
IntStream
consisting of the results of replacing each
 element of this stream with the contents of a mapped stream produced by
 applying the provided mapping function to each element.
static
IntStream
IntStream.
generate
(
IntSupplier
s)
Returns an infinite sequential unordered stream where each element is
 generated by the provided
IntSupplier
.
static
IntStream
StreamSupport.
intStream
(
Supplier
<? extends
Spliterator.OfInt
> supplier,
 int characteristics,
 boolean parallel)
Creates a new sequential or parallel
IntStream
from a
Supplier
of
Spliterator.OfInt
.
static
IntStream
StreamSupport.
intStream
(
Spliterator.OfInt
spliterator,
 boolean parallel)
Creates a new sequential or parallel
IntStream
from a
Spliterator.OfInt
.
static
IntStream
IntStream.
iterate
(int seed,
IntPredicate
hasNext,
IntUnaryOperator
next)
Returns a sequential ordered
IntStream
produced by iterative
 application of the given
next
function to an initial element,
 conditioned on satisfying the given
hasNext
predicate.
static
IntStream
IntStream.
iterate
(int seed,
IntUnaryOperator
f)
Returns an infinite sequential ordered
IntStream
produced by iterative
 application of a function
f
to an initial element
seed
,
 producing a
Stream
consisting of
seed
,
f(seed)
,
f(f(seed))
, etc.
IntStream
IntStream.
limit
(long maxSize)
Returns a stream consisting of the elements of this stream, truncated
 to be no longer than
maxSize
in length.
IntStream
IntStream.
map
(
IntUnaryOperator
mapper)
Returns a stream consisting of the results of applying the given
 function to the elements of this stream.
default
IntStream
IntStream.
mapMulti
(
IntStream.IntMapMultiConsumer
mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with multiple elements, specifically zero or more elements.
default
IntStream
Stream.
mapMultiToInt
(
BiConsumer
<? super
T
,
? super
IntConsumer
> mapper)
Returns an
IntStream
consisting of the results of replacing each
 element of this stream with multiple elements, specifically zero or more
 elements.
IntStream
DoubleStream.
mapToInt
(
DoubleToIntFunction
mapper)
Returns an
IntStream
consisting of the results of applying the
 given function to the elements of this stream.
IntStream
LongStream.
mapToInt
(
LongToIntFunction
mapper)
Returns an
IntStream
consisting of the results of applying the
 given function to the elements of this stream.
IntStream
Stream.
mapToInt
(
ToIntFunction
<? super
T
> mapper)
Returns an
IntStream
consisting of the results of applying the
 given function to the elements of this stream.
static
IntStream
IntStream.
of
(int t)
Returns a sequential
IntStream
containing a single element.
static
IntStream
IntStream.
of
(int... values)
Returns a sequential ordered stream whose elements are the specified values.
IntStream
IntStream.
peek
(
IntConsumer
action)
Returns a stream consisting of the elements of this stream, additionally
 performing the provided action on each element as elements are consumed
 from the resulting stream.
static
IntStream
IntStream.
range
(int startInclusive,
 int endExclusive)
Returns a sequential ordered
IntStream
from
startInclusive
(inclusive) to
endExclusive
(exclusive) by an incremental step of
1
.
static
IntStream
IntStream.
rangeClosed
(int startInclusive,
 int endInclusive)
Returns a sequential ordered
IntStream
from
startInclusive
(inclusive) to
endInclusive
(inclusive) by an incremental step of
1
.
IntStream
IntStream.
skip
(long n)
Returns a stream consisting of the remaining elements of this stream
 after discarding the first
n
elements of the stream.
IntStream
IntStream.
sorted
()
Returns a stream consisting of the elements of this stream in sorted
 order.
default
IntStream
IntStream.
takeWhile
(
IntPredicate
predicate)
Returns, if this stream is ordered, a stream consisting of the longest
 prefix of elements taken from this stream that match the given predicate.
Methods in
java.util.stream
with parameters of type
IntStream
Modifier and Type
Method
Description
static
IntStream
IntStream.
concat
(
IntStream
a,
IntStream
b)
Creates a lazily concatenated stream whose elements are all the
 elements of the first stream followed by all the elements of the
 second stream.
Method parameters in
java.util.stream
with type arguments of type
IntStream
Modifier and Type
Method
Description
IntStream
IntStream.
flatMap
(
IntFunction
<? extends
IntStream
> mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with the contents of a mapped stream produced by applying
 the provided mapping function to each element.
IntStream
Stream.
flatMapToInt
(
Function
<? super
T
,
? extends
IntStream
> mapper)
Returns an
IntStream
consisting of the results of replacing each
 element of this stream with the contents of a mapped stream produced by
 applying the provided mapping function to each element.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.