Uses of Interface java.util.stream.LongStream (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.stream.LongStream
Packages that use
LongStream
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.random
This package contains classes and interfaces that support a generic API
 for random number generation.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
Uses of
LongStream
in
java.util
Methods in
java.util
that return
LongStream
Modifier and Type
Method
Description
LongStream
Random.
longs
()
Returns an effectively unlimited stream of pseudorandom
long
values.
LongStream
Random.
longs
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandom
long
values.
LongStream
Random.
longs
(long randomNumberOrigin,
 long randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
long
values, each conforming to the given origin (inclusive) and bound
 (exclusive).
LongStream
Random.
longs
(long streamSize,
 long randomNumberOrigin,
 long randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandom
long
, each conforming to the given origin
 (inclusive) and bound (exclusive).
LongStream
SplittableRandom.
longs
()
Returns an effectively unlimited stream of pseudorandom
long
values from this generator and/or one split from it.
LongStream
SplittableRandom.
longs
(long streamSize)
Returns a stream producing the given
streamSize
number
 of pseudorandom
long
values from this generator and/or
 one split from it.
LongStream
SplittableRandom.
longs
(long randomNumberOrigin,
 long randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
long
values from this generator and/or one split from it; each value
 conforms to the given origin (inclusive) and bound (exclusive).
LongStream
SplittableRandom.
longs
(long streamSize,
 long randomNumberOrigin,
 long randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandom
long
values from this generator and/or one split
 from it; each value conforms to the given origin (inclusive) and bound
 (exclusive).
static
LongStream
Arrays.
stream
(long[] array)
Returns a sequential
LongStream
with the specified array as its
 source.
static
LongStream
Arrays.
stream
(long[] array,
 int startInclusive,
 int endExclusive)
Returns a sequential
LongStream
with the specified range of the
 specified array as its source.
LongStream
OptionalLong.
stream
()
If a value is present, returns a sequential
LongStream
containing
 only that value, otherwise returns an empty
LongStream
.
Uses of
LongStream
in
java.util.concurrent
Methods in
java.util.concurrent
that return
LongStream
Modifier and Type
Method
Description
LongStream
ThreadLocalRandom.
longs
()
Returns an effectively unlimited stream of pseudorandom
long
values.
LongStream
ThreadLocalRandom.
longs
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandom
long
values.
LongStream
ThreadLocalRandom.
longs
(long randomNumberOrigin,
 long randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
long
values, each conforming to the given origin (inclusive) and bound
 (exclusive).
LongStream
ThreadLocalRandom.
longs
(long streamSize,
 long randomNumberOrigin,
 long randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandom
long
, each conforming to the given origin
 (inclusive) and bound (exclusive).
Uses of
LongStream
in
java.util.random
Methods in
java.util.random
that return
LongStream
Modifier and Type
Method
Description
default
LongStream
RandomGenerator.
longs
()
Returns an effectively unlimited stream of pseudorandomly chosen
long
values.
default
LongStream
RandomGenerator.
longs
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandomly chosen
long
values.
default
LongStream
RandomGenerator.
longs
(long randomNumberOrigin,
 long randomNumberBound)
Returns an effectively unlimited stream of pseudorandomly chosen
long
values, where each value is between the specified origin
 (inclusive) and the specified bound (exclusive).
default
LongStream
RandomGenerator.
longs
(long streamSize,
 long randomNumberOrigin,
 long randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandomly chosen
long
values, where each value is between
 the specified origin (inclusive) and the specified bound (exclusive).
Uses of
LongStream
in
java.util.stream
Methods in
java.util.stream
that return
LongStream
Modifier and Type
Method
Description
LongStream
IntStream.
asLongStream
()
Returns a
LongStream
consisting of the elements of this stream,
 converted to
long
.
LongStream
LongStream.Builder.
build
()
Builds the stream, transitioning this builder to the built state.
static
LongStream
LongStream.
concat
(
LongStream
a,
LongStream
b)
Creates a lazily concatenated stream whose elements are all the
 elements of the first stream followed by all the elements of the
 second stream.
LongStream
LongStream.
distinct
()
Returns a stream consisting of the distinct elements of this stream.
default
LongStream
LongStream.
dropWhile
(
LongPredicate
predicate)
Returns, if this stream is ordered, a stream consisting of the remaining
 elements of this stream after dropping the longest prefix of elements
 that match the given predicate.
static
LongStream
LongStream.
empty
()
Returns an empty sequential
LongStream
.
LongStream
LongStream.
filter
(
LongPredicate
predicate)
Returns a stream consisting of the elements of this stream that match
 the given predicate.
LongStream
LongStream.
flatMap
(
LongFunction
<? extends
LongStream
> mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with the contents of a mapped stream produced by applying
 the provided mapping function to each element.
LongStream
Stream.
flatMapToLong
(
Function
<? super
T
,
? extends
LongStream
> mapper)
Returns an
LongStream
consisting of the results of replacing each
 element of this stream with the contents of a mapped stream produced by
 applying the provided mapping function to each element.
static
LongStream
LongStream.
generate
(
LongSupplier
s)
Returns an infinite sequential unordered stream where each element is
 generated by the provided
LongSupplier
.
static
LongStream
LongStream.
iterate
(long seed,
LongPredicate
hasNext,
LongUnaryOperator
next)
Returns a sequential ordered
LongStream
produced by iterative
 application of the given
next
function to an initial element,
 conditioned on satisfying the given
hasNext
predicate.
static
LongStream
LongStream.
iterate
(long seed,
LongUnaryOperator
f)
Returns an infinite sequential ordered
LongStream
produced by iterative
 application of a function
f
to an initial element
seed
,
 producing a
Stream
consisting of
seed
,
f(seed)
,
f(f(seed))
, etc.
LongStream
LongStream.
limit
(long maxSize)
Returns a stream consisting of the elements of this stream, truncated
 to be no longer than
maxSize
in length.
static
LongStream
StreamSupport.
longStream
(
Supplier
<? extends
Spliterator.OfLong
> supplier,
 int characteristics,
 boolean parallel)
Creates a new sequential or parallel
LongStream
from a
Supplier
of
Spliterator.OfLong
.
static
LongStream
StreamSupport.
longStream
(
Spliterator.OfLong
spliterator,
 boolean parallel)
Creates a new sequential or parallel
LongStream
from a
Spliterator.OfLong
.
LongStream
LongStream.
map
(
LongUnaryOperator
mapper)
Returns a stream consisting of the results of applying the given
 function to the elements of this stream.
default
LongStream
LongStream.
mapMulti
(
LongStream.LongMapMultiConsumer
mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with multiple elements, specifically zero or more elements.
default
LongStream
Stream.
mapMultiToLong
(
BiConsumer
<? super
T
,
? super
LongConsumer
> mapper)
Returns a
LongStream
consisting of the results of replacing each
 element of this stream with multiple elements, specifically zero or more
 elements.
LongStream
DoubleStream.
mapToLong
(
DoubleToLongFunction
mapper)
Returns a
LongStream
consisting of the results of applying the
 given function to the elements of this stream.
LongStream
IntStream.
mapToLong
(
IntToLongFunction
mapper)
Returns a
LongStream
consisting of the results of applying the
 given function to the elements of this stream.
LongStream
Stream.
mapToLong
(
ToLongFunction
<? super
T
> mapper)
Returns a
LongStream
consisting of the results of applying the
 given function to the elements of this stream.
static
LongStream
LongStream.
of
(long t)
Returns a sequential
LongStream
containing a single element.
static
LongStream
LongStream.
of
(long... values)
Returns a sequential ordered stream whose elements are the specified values.
LongStream
LongStream.
peek
(
LongConsumer
action)
Returns a stream consisting of the elements of this stream, additionally
 performing the provided action on each element as elements are consumed
 from the resulting stream.
static
LongStream
LongStream.
range
(long startInclusive,
 long endExclusive)
Returns a sequential ordered
LongStream
from
startInclusive
(inclusive) to
endExclusive
(exclusive) by an incremental step of
1
.
static
LongStream
LongStream.
rangeClosed
(long startInclusive,
 long endInclusive)
Returns a sequential ordered
LongStream
from
startInclusive
(inclusive) to
endInclusive
(inclusive) by an incremental step of
1
.
LongStream
LongStream.
skip
(long n)
Returns a stream consisting of the remaining elements of this stream
 after discarding the first
n
elements of the stream.
LongStream
LongStream.
sorted
()
Returns a stream consisting of the elements of this stream in sorted
 order.
default
LongStream
LongStream.
takeWhile
(
LongPredicate
predicate)
Returns, if this stream is ordered, a stream consisting of the longest
 prefix of elements taken from this stream that match the given predicate.
Methods in
java.util.stream
with parameters of type
LongStream
Modifier and Type
Method
Description
static
LongStream
LongStream.
concat
(
LongStream
a,
LongStream
b)
Creates a lazily concatenated stream whose elements are all the
 elements of the first stream followed by all the elements of the
 second stream.
Method parameters in
java.util.stream
with type arguments of type
LongStream
Modifier and Type
Method
Description
LongStream
LongStream.
flatMap
(
LongFunction
<? extends
LongStream
> mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with the contents of a mapped stream produced by applying
 the provided mapping function to each element.
LongStream
Stream.
flatMapToLong
(
Function
<? super
T
,
? extends
LongStream
> mapper)
Returns an
LongStream
consisting of the results of replacing each
 element of this stream with the contents of a mapped stream produced by
 applying the provided mapping function to each element.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.