Uses of Interface java.util.stream.DoubleStream (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.stream.DoubleStream
Packages that use
DoubleStream
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.random
This package contains classes and interfaces that support a generic API
 for random number generation.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
Uses of
DoubleStream
in
java.util
Methods in
java.util
that return
DoubleStream
Modifier and Type
Method
Description
DoubleStream
Random.
doubles
()
Returns an effectively unlimited stream of pseudorandom
double
values, each between zero (inclusive) and one
 (exclusive).
DoubleStream
Random.
doubles
(double randomNumberOrigin,
 double randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
double
values, each conforming to the given origin (inclusive) and bound
 (exclusive).
DoubleStream
Random.
doubles
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandom
double
values, each between zero
 (inclusive) and one (exclusive).
DoubleStream
Random.
doubles
(long streamSize,
 double randomNumberOrigin,
 double randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandom
double
values, each conforming to the given origin
 (inclusive) and bound (exclusive).
DoubleStream
SplittableRandom.
doubles
()
Returns an effectively unlimited stream of pseudorandom
double
values from this generator and/or one split from it; each value
 is between zero (inclusive) and one (exclusive).
DoubleStream
SplittableRandom.
doubles
(double randomNumberOrigin,
 double randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
double
values from this generator and/or one split from it; each value
 conforms to the given origin (inclusive) and bound (exclusive).
DoubleStream
SplittableRandom.
doubles
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandom
double
values from this generator and/or one split
 from it; each value is between zero (inclusive) and one (exclusive).
DoubleStream
SplittableRandom.
doubles
(long streamSize,
 double randomNumberOrigin,
 double randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandom
double
values from this generator and/or one split
 from it; each value conforms to the given origin (inclusive) and bound
 (exclusive).
static
DoubleStream
Arrays.
stream
(double[] array)
Returns a sequential
DoubleStream
with the specified array as its
 source.
static
DoubleStream
Arrays.
stream
(double[] array,
 int startInclusive,
 int endExclusive)
Returns a sequential
DoubleStream
with the specified range of the
 specified array as its source.
DoubleStream
OptionalDouble.
stream
()
If a value is present, returns a sequential
DoubleStream
containing only that value, otherwise returns an empty
DoubleStream
.
Uses of
DoubleStream
in
java.util.concurrent
Methods in
java.util.concurrent
that return
DoubleStream
Modifier and Type
Method
Description
DoubleStream
ThreadLocalRandom.
doubles
()
Returns an effectively unlimited stream of pseudorandom
double
values, each between zero (inclusive) and one
 (exclusive).
DoubleStream
ThreadLocalRandom.
doubles
(double randomNumberOrigin,
 double randomNumberBound)
Returns an effectively unlimited stream of pseudorandom
double
values, each conforming to the given origin (inclusive) and bound
 (exclusive).
DoubleStream
ThreadLocalRandom.
doubles
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandom
double
values, each between zero
 (inclusive) and one (exclusive).
DoubleStream
ThreadLocalRandom.
doubles
(long streamSize,
 double randomNumberOrigin,
 double randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandom
double
values, each conforming to the given origin
 (inclusive) and bound (exclusive).
Uses of
DoubleStream
in
java.util.random
Methods in
java.util.random
that return
DoubleStream
Modifier and Type
Method
Description
default
DoubleStream
RandomGenerator.
doubles
()
Returns an effectively unlimited stream of pseudorandomly chosen
double
values.
default
DoubleStream
RandomGenerator.
doubles
(double randomNumberOrigin,
 double randomNumberBound)
Returns an effectively unlimited stream of pseudorandomly chosen
double
values, where each value is between the specified origin
 (inclusive) and the specified bound (exclusive).
default
DoubleStream
RandomGenerator.
doubles
(long streamSize)
Returns a stream producing the given
streamSize
number of
 pseudorandomly chosen
double
values.
default
DoubleStream
RandomGenerator.
doubles
(long streamSize,
 double randomNumberOrigin,
 double randomNumberBound)
Returns a stream producing the given
streamSize
number of
 pseudorandomly chosen
double
values, where each value is
 between the specified origin (inclusive) and the specified bound
 (exclusive).
Uses of
DoubleStream
in
java.util.stream
Methods in
java.util.stream
that return
DoubleStream
Modifier and Type
Method
Description
DoubleStream
IntStream.
asDoubleStream
()
Returns a
DoubleStream
consisting of the elements of this stream,
 converted to
double
.
DoubleStream
LongStream.
asDoubleStream
()
Returns a
DoubleStream
consisting of the elements of this stream,
 converted to
double
.
DoubleStream
DoubleStream.Builder.
build
()
Builds the stream, transitioning this builder to the built state.
static
DoubleStream
DoubleStream.
concat
(
DoubleStream
a,
DoubleStream
b)
Creates a lazily concatenated stream whose elements are all the
 elements of the first stream followed by all the elements of the
 second stream.
DoubleStream
DoubleStream.
distinct
()
Returns a stream consisting of the distinct elements of this stream.
static
DoubleStream
StreamSupport.
doubleStream
(
Supplier
<? extends
Spliterator.OfDouble
> supplier,
 int characteristics,
 boolean parallel)
Creates a new sequential or parallel
DoubleStream
from a
Supplier
of
Spliterator.OfDouble
.
static
DoubleStream
StreamSupport.
doubleStream
(
Spliterator.OfDouble
spliterator,
 boolean parallel)
Creates a new sequential or parallel
DoubleStream
from a
Spliterator.OfDouble
.
default
DoubleStream
DoubleStream.
dropWhile
(
DoublePredicate
predicate)
Returns, if this stream is ordered, a stream consisting of the remaining
 elements of this stream after dropping the longest prefix of elements
 that match the given predicate.
static
DoubleStream
DoubleStream.
empty
()
Returns an empty sequential
DoubleStream
.
DoubleStream
DoubleStream.
filter
(
DoublePredicate
predicate)
Returns a stream consisting of the elements of this stream that match
 the given predicate.
DoubleStream
DoubleStream.
flatMap
(
DoubleFunction
<? extends
DoubleStream
> mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with the contents of a mapped stream produced by applying
 the provided mapping function to each element.
DoubleStream
Stream.
flatMapToDouble
(
Function
<? super
T
,
? extends
DoubleStream
> mapper)
Returns an
DoubleStream
consisting of the results of replacing
 each element of this stream with the contents of a mapped stream produced
 by applying the provided mapping function to each element.
static
DoubleStream
DoubleStream.
generate
(
DoubleSupplier
s)
Returns an infinite sequential unordered stream where each element is
 generated by the provided
DoubleSupplier
.
static
DoubleStream
DoubleStream.
iterate
(double seed,
DoublePredicate
hasNext,
DoubleUnaryOperator
next)
Returns a sequential ordered
DoubleStream
produced by iterative
 application of the given
next
function to an initial element,
 conditioned on satisfying the given
hasNext
predicate.
static
DoubleStream
DoubleStream.
iterate
(double seed,
DoubleUnaryOperator
f)
Returns an infinite sequential ordered
DoubleStream
produced by iterative
 application of a function
f
to an initial element
seed
,
 producing a
Stream
consisting of
seed
,
f(seed)
,
f(f(seed))
, etc.
DoubleStream
DoubleStream.
limit
(long maxSize)
Returns a stream consisting of the elements of this stream, truncated
 to be no longer than
maxSize
in length.
DoubleStream
DoubleStream.
map
(
DoubleUnaryOperator
mapper)
Returns a stream consisting of the results of applying the given
 function to the elements of this stream.
default
DoubleStream
DoubleStream.
mapMulti
(
DoubleStream.DoubleMapMultiConsumer
mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with multiple elements, specifically zero or more elements.
default
DoubleStream
Stream.
mapMultiToDouble
(
BiConsumer
<? super
T
,
? super
DoubleConsumer
> mapper)
Returns a
DoubleStream
consisting of the results of replacing each
 element of this stream with multiple elements, specifically zero or more
 elements.
DoubleStream
IntStream.
mapToDouble
(
IntToDoubleFunction
mapper)
Returns a
DoubleStream
consisting of the results of applying the
 given function to the elements of this stream.
DoubleStream
LongStream.
mapToDouble
(
LongToDoubleFunction
mapper)
Returns a
DoubleStream
consisting of the results of applying the
 given function to the elements of this stream.
DoubleStream
Stream.
mapToDouble
(
ToDoubleFunction
<? super
T
> mapper)
Returns a
DoubleStream
consisting of the results of applying the
 given function to the elements of this stream.
static
DoubleStream
DoubleStream.
of
(double t)
Returns a sequential
DoubleStream
containing a single element.
static
DoubleStream
DoubleStream.
of
(double... values)
Returns a sequential ordered stream whose elements are the specified values.
DoubleStream
DoubleStream.
peek
(
DoubleConsumer
action)
Returns a stream consisting of the elements of this stream, additionally
 performing the provided action on each element as elements are consumed
 from the resulting stream.
DoubleStream
DoubleStream.
skip
(long n)
Returns a stream consisting of the remaining elements of this stream
 after discarding the first
n
elements of the stream.
DoubleStream
DoubleStream.
sorted
()
Returns a stream consisting of the elements of this stream in sorted
 order.
default
DoubleStream
DoubleStream.
takeWhile
(
DoublePredicate
predicate)
Returns, if this stream is ordered, a stream consisting of the longest
 prefix of elements taken from this stream that match the given predicate.
Methods in
java.util.stream
with parameters of type
DoubleStream
Modifier and Type
Method
Description
static
DoubleStream
DoubleStream.
concat
(
DoubleStream
a,
DoubleStream
b)
Creates a lazily concatenated stream whose elements are all the
 elements of the first stream followed by all the elements of the
 second stream.
Method parameters in
java.util.stream
with type arguments of type
DoubleStream
Modifier and Type
Method
Description
DoubleStream
DoubleStream.
flatMap
(
DoubleFunction
<? extends
DoubleStream
> mapper)
Returns a stream consisting of the results of replacing each element of
 this stream with the contents of a mapped stream produced by applying
 the provided mapping function to each element.
DoubleStream
Stream.
flatMapToDouble
(
Function
<? super
T
,
? extends
DoubleStream
> mapper)
Returns an
DoubleStream
consisting of the results of replacing
 each element of this stream with the contents of a mapped stream produced
 by applying the provided mapping function to each element.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.