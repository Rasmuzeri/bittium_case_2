GZIPInputStream (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field
|
Constr
|
Method
SEARCH
Module
java.base
Package
java.util.zip
Class GZIPInputStream
java.lang.Object
java.io.InputStream
java.io.FilterInputStream
java.util.zip.InflaterInputStream
java.util.zip.GZIPInputStream
All Implemented Interfaces:
Closeable
,
AutoCloseable
public class
GZIPInputStream
extends
InflaterInputStream
This class implements a stream filter for reading compressed data in
 the GZIP file format.
Since:
1.1
See Also:
InflaterInputStream
Field Summary
Fields
Modifier and Type
Field
Description
protected
CRC32
crc
CRC-32 for uncompressed data.
protected boolean
eos
Indicates end of input stream.
static final int
GZIP_MAGIC
GZIP header magic number.
Fields declared in class java.util.zip.
InflaterInputStream
buf
,
inf
,
len
Fields declared in class java.io.
FilterInputStream
in
Constructor Summary
Constructors
Constructor
Description
GZIPInputStream
(
InputStream
in)
Creates a new input stream with a default buffer size.
GZIPInputStream
(
InputStream
in,
 int size)
Creates a new input stream with the specified buffer size.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
close
()
Closes this input stream and releases any system resources associated
 with the stream.
int
read
(byte[] buf,
 int off,
 int len)
Reads uncompressed data into an array of bytes, returning the number of inflated
 bytes.
Methods declared in class java.util.zip.
InflaterInputStream
available
,
fill
,
mark
,
markSupported
,
read
,
reset
,
skip
Methods declared in class java.io.
FilterInputStream
read
Methods declared in class java.io.
InputStream
nullInputStream
,
readAllBytes
,
readNBytes
,
readNBytes
,
skipNBytes
,
transferTo
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Field Details
crc
protected
CRC32
crc
CRC-32 for uncompressed data.
eos
protected
boolean
eos
Indicates end of input stream.
GZIP_MAGIC
public static final
int
GZIP_MAGIC
GZIP header magic number.
See Also:
Constant Field Values
Constructor Details
GZIPInputStream
public
GZIPInputStream
(
InputStream
in,
 int size)
throws
IOException
Creates a new input stream with the specified buffer size.
Parameters:
in
- the input stream
size
- the input buffer size
Throws:
ZipException
- if a GZIP format error has occurred or the
                         compression method used is unsupported
IOException
- if an I/O error has occurred
IllegalArgumentException
- if
size <= 0
GZIPInputStream
public
GZIPInputStream
(
InputStream
in)
throws
IOException
Creates a new input stream with a default buffer size.
Parameters:
in
- the input stream
Throws:
ZipException
- if a GZIP format error has occurred or the
                         compression method used is unsupported
IOException
- if an I/O error has occurred
Method Details
read
public
int
read
(byte[] buf,
 int off,
 int len)
throws
IOException
Reads uncompressed data into an array of bytes, returning the number of inflated
 bytes. If
len
is not zero, the method will block until some input can be
 decompressed; otherwise, no bytes are read and
0
is returned.
If this method returns a nonzero integer
n
then
buf[off]
through
buf[off+
n
-1]
contain the uncompressed
 data.  The content of elements
buf[off+
n
]
through
buf[off+
len
-1]
is undefined, contrary to the
 specification of the
InputStream
superclass,
 so an implementation is free to modify these elements during the inflate
 operation. If this method returns
-1
or throws an exception then
 the content of
buf[off]
through
buf[off+
len
-1]
is undefined.
Overrides:
read
in class
InflaterInputStream
Parameters:
buf
- the buffer into which the data is read
off
- the start offset in the destination array
buf
len
- the maximum number of bytes read
Returns:
the actual number of bytes inflated, or -1 if the end of the
          compressed input stream is reached
Throws:
NullPointerException
- If
buf
is
null
.
IndexOutOfBoundsException
- If
off
is negative,
len
is negative, or
len
is greater than
buf.length - off
ZipException
- if the compressed input data is corrupt.
IOException
- if an I/O error has occurred.
See Also:
FilterInputStream.in
close
public
void
close
()
           throws
IOException
Closes this input stream and releases any system resources associated
 with the stream.
Specified by:
close
in interface
AutoCloseable
Specified by:
close
in interface
Closeable
Overrides:
close
in class
InflaterInputStream
Throws:
IOException
- if an I/O error has occurred
See Also:
FilterInputStream.in
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.