Uses of Class java.util.zip.ZipEntry (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.util.zip.ZipEntry
Packages that use
ZipEntry
Package
Description
java.util.jar
Provides classes for reading and writing the JAR (Java ARchive)
 file format, which is based on the standard ZIP file format with an
 optional manifest file.
java.util.zip
Provides classes for reading and writing the standard ZIP and GZIP file
 formats.
Uses of
ZipEntry
in
java.util.jar
Subclasses of
ZipEntry
in
java.util.jar
Modifier and Type
Class
Description
class
JarEntry
This class is used to represent a JAR file entry.
Methods in
java.util.jar
that return
ZipEntry
Modifier and Type
Method
Description
protected
ZipEntry
JarInputStream.
createZipEntry
(
String
name)
Creates a new
JarEntry
(
ZipEntry
) for the
 specified JAR file entry name.
ZipEntry
JarFile.
getEntry
(
String
name)
Returns the
ZipEntry
for the given base entry name or
null
if not found.
ZipEntry
JarInputStream.
getNextEntry
()
Reads the next ZIP file entry and positions the stream at the
 beginning of the entry data.
Methods in
java.util.jar
with parameters of type
ZipEntry
Modifier and Type
Method
Description
InputStream
JarFile.
getInputStream
(
ZipEntry
ze)
Returns an input stream for reading the contents of the specified
 zip file entry.
void
JarOutputStream.
putNextEntry
(
ZipEntry
ze)
Begins writing a new JAR file entry and positions the stream
 to the start of the entry data.
Constructors in
java.util.jar
with parameters of type
ZipEntry
Modifier
Constructor
Description
JarEntry
(
ZipEntry
ze)
Creates a new
JarEntry
with fields taken from the
 specified
ZipEntry
object.
Uses of
ZipEntry
in
java.util.zip
Methods in
java.util.zip
that return
ZipEntry
Modifier and Type
Method
Description
protected
ZipEntry
ZipInputStream.
createZipEntry
(
String
name)
Creates a new
ZipEntry
object for the specified
 entry name.
ZipEntry
ZipFile.
getEntry
(
String
name)
Returns the zip file entry for the specified name, or null
 if not found.
ZipEntry
ZipInputStream.
getNextEntry
()
Reads the next ZIP file entry and positions the stream at the
 beginning of the entry data.
ZipEntry
ZipEntry.
setCreationTime
(
FileTime
time)
Sets the creation time of the entry.
ZipEntry
ZipEntry.
setLastAccessTime
(
FileTime
time)
Sets the last access time of the entry.
ZipEntry
ZipEntry.
setLastModifiedTime
(
FileTime
time)
Sets the last modification time of the entry.
Methods in
java.util.zip
that return types with arguments of type
ZipEntry
Modifier and Type
Method
Description
Enumeration
<? extends
ZipEntry
>
ZipFile.
entries
()
Returns an enumeration of the ZIP file entries.
Stream
<? extends
ZipEntry
>
ZipFile.
stream
()
Returns an ordered
Stream
over the ZIP file entries.
Methods in
java.util.zip
with parameters of type
ZipEntry
Modifier and Type
Method
Description
InputStream
ZipFile.
getInputStream
(
ZipEntry
entry)
Returns an input stream for reading the contents of the specified
 zip file entry.
void
ZipOutputStream.
putNextEntry
(
ZipEntry
e)
Begins writing a new ZIP file entry and positions the stream to the
 start of the entry data.
Constructors in
java.util.zip
with parameters of type
ZipEntry
Modifier
Constructor
Description
ZipEntry
(
ZipEntry
e)
Creates a new zip entry with fields taken from the specified
 zip entry.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.