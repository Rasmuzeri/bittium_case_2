Uses of Interface java.util.function.UnaryOperator (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.function.UnaryOperator
Packages that use
UnaryOperator
Package
Description
com.sun.net.httpserver
Provides a simple high-level Http server API, which can be used to build
   embedded HTTP servers.
java.time.temporal
Access to date and time using fields and units, and date time adjusters.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent.atomic
A small toolkit of classes that support lock-free thread-safe
 programming on single variables.
java.util.function
Functional interfaces
provide target types for lambda expressions
 and method references.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
Uses of
UnaryOperator
in
com.sun.net.httpserver
Methods in
com.sun.net.httpserver
with parameters of type
UnaryOperator
Modifier and Type
Method
Description
static
Filter
Filter.
adaptRequest
(
String
description,
UnaryOperator
<
Request
> requestOperator)
Returns a
pre-processing Filter
that inspects and possibly adapts the request state.
Uses of
UnaryOperator
in
java.time.temporal
Methods in
java.time.temporal
with parameters of type
UnaryOperator
Modifier and Type
Method
Description
static
TemporalAdjuster
TemporalAdjusters.
ofDateAdjuster
(
UnaryOperator
<
LocalDate
> dateBasedAdjuster)
Obtains a
TemporalAdjuster
that wraps a date adjuster.
Uses of
UnaryOperator
in
java.util
Methods in
java.util
with parameters of type
UnaryOperator
Modifier and Type
Method
Description
default void
List.
replaceAll
(
UnaryOperator
<
E
> operator)
Replaces each element of this list with the result of applying the
 operator to that element.
void
Vector.
replaceAll
(
UnaryOperator
<
E
> operator)
Uses of
UnaryOperator
in
java.util.concurrent.atomic
Methods in
java.util.concurrent.atomic
with parameters of type
UnaryOperator
Modifier and Type
Method
Description
final
V
AtomicReference.
getAndUpdate
(
UnaryOperator
<
V
> updateFunction)
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function, returning the previous value.
final
E
AtomicReferenceArray.
getAndUpdate
(int i,
UnaryOperator
<
E
> updateFunction)
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function, returning the
 previous value.
final
V
AtomicReferenceFieldUpdater.
getAndUpdate
(
T
obj,
UnaryOperator
<
V
> updateFunction)
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given
 function, returning the previous value.
final
V
AtomicReference.
updateAndGet
(
UnaryOperator
<
V
> updateFunction)
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function, returning the updated value.
final
E
AtomicReferenceArray.
updateAndGet
(int i,
UnaryOperator
<
E
> updateFunction)
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function, returning the
 updated value.
final
V
AtomicReferenceFieldUpdater.
updateAndGet
(
T
obj,
UnaryOperator
<
V
> updateFunction)
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given
 function, returning the updated value.
Uses of
UnaryOperator
in
java.util.function
Methods in
java.util.function
that return
UnaryOperator
Modifier and Type
Method
Description
static <T>
UnaryOperator
<T>
UnaryOperator.
identity
()
Returns a unary operator that always returns its input argument.
Uses of
UnaryOperator
in
java.util.stream
Methods in
java.util.stream
with parameters of type
UnaryOperator
Modifier and Type
Method
Description
static <T>
Stream
<T>
Stream.
iterate
(T seed,
Predicate
<? super T> hasNext,
UnaryOperator
<T> next)
Returns a sequential ordered
Stream
produced by iterative
 application of the given
next
function to an initial element,
 conditioned on satisfying the given
hasNext
predicate.
static <T>
Stream
<T>
Stream.
iterate
(T seed,
UnaryOperator
<T> f)
Returns an infinite sequential ordered
Stream
produced by iterative
 application of a function
f
to an initial element
seed
,
 producing a
Stream
consisting of
seed
,
f(seed)
,
f(f(seed))
, etc.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.