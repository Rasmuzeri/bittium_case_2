Uses of Interface java.util.function.BiPredicate (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.function.BiPredicate
Packages that use
BiPredicate
Package
Description
java.net.http
HTTP Client and WebSocket APIs
java.nio.file
Defines interfaces and classes for the Java virtual machine to access files,
 file attributes, and file systems.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.function
Functional interfaces
provide target types for lambda expressions
 and method references.
Uses of
BiPredicate
in
java.net.http
Methods in
java.net.http
with parameters of type
BiPredicate
Modifier and Type
Method
Description
static
HttpRequest.Builder
HttpRequest.
newBuilder
(
HttpRequest
request,
BiPredicate
<
String
,
String
> filter)
Creates a
Builder
whose initial state is copied from an existing
HttpRequest
.
static
HttpHeaders
HttpHeaders.
of
(
Map
<
String
,
List
<
String
>> headerMap,
BiPredicate
<
String
,
String
> filter)
Returns an HTTP headers from the given map.
Uses of
BiPredicate
in
java.nio.file
Methods in
java.nio.file
with parameters of type
BiPredicate
Modifier and Type
Method
Description
static
Stream
<
Path
>
Files.
find
(
Path
start,
 int maxDepth,
BiPredicate
<
Path
,
BasicFileAttributes
> matcher,
FileVisitOption
... options)
Return a
Stream
that is lazily populated with
Path
by searching for files in a file tree rooted at a given starting
 file.
Uses of
BiPredicate
in
java.util.concurrent
Methods in
java.util.concurrent
with parameters of type
BiPredicate
Modifier and Type
Method
Description
int
SubmissionPublisher.
offer
(
T
item,
 long timeout,
TimeUnit
unit,
BiPredicate
<
Flow.Subscriber
<? super
T
>,
? super
T
> onDrop)
Publishes the given item, if possible, to each current subscriber
 by asynchronously invoking its
onNext
method, blocking while
 resources for any subscription are unavailable, up to the
 specified timeout or until the caller thread is interrupted, at
 which point the given handler (if non-null) is invoked, and if it
 returns true, retried once.
int
SubmissionPublisher.
offer
(
T
item,
BiPredicate
<
Flow.Subscriber
<? super
T
>,
? super
T
> onDrop)
Publishes the given item, if possible, to each current subscriber
 by asynchronously invoking its
onNext
method.
Uses of
BiPredicate
in
java.util.function
Methods in
java.util.function
that return
BiPredicate
Modifier and Type
Method
Description
default
BiPredicate
<
T
,
U
>
BiPredicate.
and
(
BiPredicate
<? super
T
,
? super
U
> other)
Returns a composed predicate that represents a short-circuiting logical
 AND of this predicate and another.
default
BiPredicate
<
T
,
U
>
BiPredicate.
negate
()
Returns a predicate that represents the logical negation of this
 predicate.
default
BiPredicate
<
T
,
U
>
BiPredicate.
or
(
BiPredicate
<? super
T
,
? super
U
> other)
Returns a composed predicate that represents a short-circuiting logical
 OR of this predicate and another.
Methods in
java.util.function
with parameters of type
BiPredicate
Modifier and Type
Method
Description
default
BiPredicate
<
T
,
U
>
BiPredicate.
and
(
BiPredicate
<? super
T
,
? super
U
> other)
Returns a composed predicate that represents a short-circuiting logical
 AND of this predicate and another.
default
BiPredicate
<
T
,
U
>
BiPredicate.
or
(
BiPredicate
<? super
T
,
? super
U
> other)
Returns a composed predicate that represents a short-circuiting logical
 OR of this predicate and another.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.