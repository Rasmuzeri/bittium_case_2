Uses of Interface java.util.function.DoubleSupplier (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.function.DoubleSupplier
Packages that use
DoubleSupplier
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
Uses of
DoubleSupplier
in
java.util
Methods in
java.util
with parameters of type
DoubleSupplier
Modifier and Type
Method
Description
double
OptionalDouble.
orElseGet
(
DoubleSupplier
supplier)
If a value is present, returns the value, otherwise returns the result
 produced by the supplying function.
Uses of
DoubleSupplier
in
java.util.stream
Methods in
java.util.stream
with parameters of type
DoubleSupplier
Modifier and Type
Method
Description
static
DoubleStream
DoubleStream.
generate
(
DoubleSupplier
s)
Returns an infinite sequential unordered stream where each element is
 generated by the provided
DoubleSupplier
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.