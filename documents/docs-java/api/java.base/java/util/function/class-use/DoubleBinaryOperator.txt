Uses of Interface java.util.function.DoubleBinaryOperator (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.util.function.DoubleBinaryOperator
Packages that use
DoubleBinaryOperator
Package
Description
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.concurrent.atomic
A small toolkit of classes that support lock-free thread-safe
 programming on single variables.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
Uses of
DoubleBinaryOperator
in
java.util
Methods in
java.util
with parameters of type
DoubleBinaryOperator
Modifier and Type
Method
Description
static void
Arrays.
parallelPrefix
(double[] array,
 int fromIndex,
 int toIndex,
DoubleBinaryOperator
op)
Performs
Arrays.parallelPrefix(double[], DoubleBinaryOperator)
for the given subrange of the array.
static void
Arrays.
parallelPrefix
(double[] array,
DoubleBinaryOperator
op)
Cumulates, in parallel, each element of the given array in place,
 using the supplied function.
Uses of
DoubleBinaryOperator
in
java.util.concurrent
Methods in
java.util.concurrent
with parameters of type
DoubleBinaryOperator
Modifier and Type
Method
Description
double
ConcurrentHashMap.
reduceEntriesToDouble
(long parallelismThreshold,
ToDoubleFunction
<
Map.Entry
<
K
,
V
>> transformer,
 double basis,
DoubleBinaryOperator
reducer)
Returns the result of accumulating the given transformation
 of all entries using the given reducer to combine values,
 and the given basis as an identity value.
double
ConcurrentHashMap.
reduceKeysToDouble
(long parallelismThreshold,
ToDoubleFunction
<? super
K
> transformer,
 double basis,
DoubleBinaryOperator
reducer)
Returns the result of accumulating the given transformation
 of all keys using the given reducer to combine values, and
 the given basis as an identity value.
double
ConcurrentHashMap.
reduceToDouble
(long parallelismThreshold,
ToDoubleBiFunction
<? super
K
,
? super
V
> transformer,
 double basis,
DoubleBinaryOperator
reducer)
Returns the result of accumulating the given transformation
 of all (key, value) pairs using the given reducer to
 combine values, and the given basis as an identity value.
double
ConcurrentHashMap.
reduceValuesToDouble
(long parallelismThreshold,
ToDoubleFunction
<? super
V
> transformer,
 double basis,
DoubleBinaryOperator
reducer)
Returns the result of accumulating the given transformation
 of all values using the given reducer to combine values,
 and the given basis as an identity value.
Uses of
DoubleBinaryOperator
in
java.util.concurrent.atomic
Constructors in
java.util.concurrent.atomic
with parameters of type
DoubleBinaryOperator
Modifier
Constructor
Description
DoubleAccumulator
(
DoubleBinaryOperator
accumulatorFunction,
 double identity)
Creates a new instance using the given accumulator function
 and identity element.
Uses of
DoubleBinaryOperator
in
java.util.stream
Methods in
java.util.stream
with parameters of type
DoubleBinaryOperator
Modifier and Type
Method
Description
double
DoubleStream.
reduce
(double identity,
DoubleBinaryOperator
op)
Performs a
reduction
on the
 elements of this stream, using the provided identity value and an
associative
accumulation function, and returns the reduced value.
OptionalDouble
DoubleStream.
reduce
(
DoubleBinaryOperator
op)
Performs a
reduction
on the
 elements of this stream, using an
associative
accumulation
 function, and returns an
OptionalDouble
describing the reduced
 value, if any.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.