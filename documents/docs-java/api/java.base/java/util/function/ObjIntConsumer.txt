ObjIntConsumer (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.base
Package
java.util.function
Interface ObjIntConsumer<T>
Type Parameters:
T
- the type of the object argument to the operation
Functional Interface:
This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference.
@FunctionalInterface
public interface
ObjIntConsumer<T>
Represents an operation that accepts an object-valued and a
int
-valued argument, and returns no result.  This is the
(reference, int)
specialization of
BiConsumer
.
 Unlike most other functional interfaces,
ObjIntConsumer
is
 expected to operate via side-effects.
This is a
functional interface
whose functional method is
accept(Object, int)
.
Since:
1.8
See Also:
BiConsumer
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
void
accept
(
T
t,
 int value)
Performs this operation on the given arguments.
Method Details
accept
void
accept
(
T
t,
 int value)
Performs this operation on the given arguments.
Parameters:
t
- the first input argument
value
- the second input argument
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.