Uses of Class java.math.MathContext (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.math.MathContext
Packages that use
MathContext
Package
Description
java.math
Provides classes for performing arbitrary-precision integer
 arithmetic (
BigInteger
) and arbitrary-precision decimal
 arithmetic (
BigDecimal
).
Uses of
MathContext
in
java.math
Fields in
java.math
declared as
MathContext
Modifier and Type
Field
Description
static final
MathContext
MathContext.
DECIMAL128
A
MathContext
object with a precision setting
 matching the precision of the IEEE 754-2019 decimal128 format, 34 digits, and a
 rounding mode of
HALF_EVEN
.
static final
MathContext
MathContext.
DECIMAL32
A
MathContext
object with a precision setting
 matching the precision of the IEEE 754-2019 decimal32 format, 7 digits, and a
 rounding mode of
HALF_EVEN
.
static final
MathContext
MathContext.
DECIMAL64
A
MathContext
object with a precision setting
 matching the precision of the IEEE 754-2019 decimal64 format, 16 digits, and a
 rounding mode of
HALF_EVEN
.
static final
MathContext
MathContext.
UNLIMITED
A
MathContext
object whose settings have the values
 required for unlimited precision arithmetic.
Methods in
java.math
with parameters of type
MathContext
Modifier and Type
Method
Description
BigDecimal
BigDecimal.
abs
(
MathContext
mc)
Returns a
BigDecimal
whose value is the absolute value
 of this
BigDecimal
, with rounding according to the
 context settings.
BigDecimal
BigDecimal.
add
(
BigDecimal
augend,
MathContext
mc)
Returns a
BigDecimal
whose value is
(this + augend)
,
 with rounding according to the context settings.
BigDecimal
BigDecimal.
divide
(
BigDecimal
divisor,
MathContext
mc)
Returns a
BigDecimal
whose value is
(this /
 divisor)
, with rounding according to the context settings.
BigDecimal
[]
BigDecimal.
divideAndRemainder
(
BigDecimal
divisor,
MathContext
mc)
Returns a two-element
BigDecimal
array containing the
 result of
divideToIntegralValue
followed by the result of
remainder
on the two operands calculated with rounding
 according to the context settings.
BigDecimal
BigDecimal.
divideToIntegralValue
(
BigDecimal
divisor,
MathContext
mc)
Returns a
BigDecimal
whose value is the integer part
 of
(this / divisor)
.
BigDecimal
BigDecimal.
multiply
(
BigDecimal
multiplicand,
MathContext
mc)
Returns a
BigDecimal
whose value is
(this ×
 multiplicand)
, with rounding according to the context settings.
BigDecimal
BigDecimal.
negate
(
MathContext
mc)
Returns a
BigDecimal
whose value is
(-this)
,
 with rounding according to the context settings.
BigDecimal
BigDecimal.
plus
(
MathContext
mc)
Returns a
BigDecimal
whose value is
(+this)
,
 with rounding according to the context settings.
BigDecimal
BigDecimal.
pow
(int n,
MathContext
mc)
Returns a
BigDecimal
whose value is
(this
n
)
.
BigDecimal
BigDecimal.
remainder
(
BigDecimal
divisor,
MathContext
mc)
Returns a
BigDecimal
whose value is
(this %
 divisor)
, with rounding according to the context settings.
BigDecimal
BigDecimal.
round
(
MathContext
mc)
Returns a
BigDecimal
rounded according to the
MathContext
settings.
BigDecimal
BigDecimal.
sqrt
(
MathContext
mc)
Returns an approximation to the square root of
this
with rounding according to the context settings.
BigDecimal
BigDecimal.
subtract
(
BigDecimal
subtrahend,
MathContext
mc)
Returns a
BigDecimal
whose value is
(this - subtrahend)
,
 with rounding according to the context settings.
Constructors in
java.math
with parameters of type
MathContext
Modifier
Constructor
Description
BigDecimal
(char[] in,
 int offset,
 int len,
MathContext
mc)
Translates a character array representation of a
BigDecimal
into a
BigDecimal
, accepting the
 same sequence of characters as the
BigDecimal(String)
constructor, while allowing a sub-array to be specified and
 with rounding according to the context settings.
BigDecimal
(char[] in,
MathContext
mc)
Translates a character array representation of a
BigDecimal
into a
BigDecimal
, accepting the
 same sequence of characters as the
BigDecimal(String)
constructor and with rounding according to the context
 settings.
BigDecimal
(double val,
MathContext
mc)
Translates a
double
into a
BigDecimal
, with
 rounding according to the context settings.
BigDecimal
(int val,
MathContext
mc)
Translates an
int
into a
BigDecimal
, with
 rounding according to the context settings.
BigDecimal
(long val,
MathContext
mc)
Translates a
long
into a
BigDecimal
, with
 rounding according to the context settings.
BigDecimal
(
String
val,
MathContext
mc)
Translates the string representation of a
BigDecimal
into a
BigDecimal
, accepting the same strings as the
BigDecimal(String)
constructor, with rounding
 according to the context settings.
BigDecimal
(
BigInteger
unscaledVal,
 int scale,
MathContext
mc)
Translates a
BigInteger
unscaled value and an
int
scale into a
BigDecimal
, with rounding
 according to the context settings.
BigDecimal
(
BigInteger
val,
MathContext
mc)
Translates a
BigInteger
into a
BigDecimal
rounding according to the context settings.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.