ResolvedModule (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.base
Package
java.lang.module
Class ResolvedModule
java.lang.Object
java.lang.module.ResolvedModule
public final class
ResolvedModule
extends
Object
A module in a graph of
resolved modules
.
ResolvedModule
defines the
configuration
method to get the configuration that the resolved module is in. It defines
 the
reference
method to get the reference to the
 module's content.
Since:
9
See Also:
Configuration.modules()
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
Configuration
configuration
()
Returns the configuration that this resolved module is in.
boolean
equals
(
Object
ob)
Tests this resolved module for equality with the given object.
int
hashCode
()
Computes a hash code for this resolved module.
String
name
()
Returns the module name.
Set
<
ResolvedModule
>
reads
()
Returns the set of resolved modules that this resolved module reads.
ModuleReference
reference
()
Returns the reference to the module's content.
String
toString
()
Returns a string describing this resolved module.
Methods declared in class java.lang.
Object
clone
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Method Details
configuration
public
Configuration
configuration
()
Returns the configuration that this resolved module is in.
Returns:
The configuration that this resolved module is in
reference
public
ModuleReference
reference
()
Returns the reference to the module's content.
Returns:
The reference to the module's content
name
public
String
name
()
Returns the module name.

 This convenience method is the equivalent to invoking:
reference().descriptor().name()
Returns:
The module name
reads
public
Set
<
ResolvedModule
>
reads
()
Returns the set of resolved modules that this resolved module reads.
Returns:
A possibly-empty unmodifiable set of resolved modules that
         this resolved module reads
hashCode
public
int
hashCode
()
Computes a hash code for this resolved module.
The hash code is based upon the components of the resolved module
 and satisfies the general contract of the
Object.hashCode
method.
Overrides:
hashCode
in class
Object
Returns:
The hash-code value for this resolved module
See Also:
Object.equals(java.lang.Object)
System.identityHashCode(java.lang.Object)
equals
public
boolean
equals
(
Object
ob)
Tests this resolved module for equality with the given object.
If the given object is not a
ResolvedModule
then this
 method returns
false
. Two
ResolvedModule
objects are
 equal if they are in the same configuration and have equal references
 to the module content.
This method satisfies the general contract of the
Object.equals
method.
Overrides:
equals
in class
Object
Parameters:
ob
- the object to which this object is to be compared
Returns:
true
if, and only if, the given object is a module
          reference that is equal to this module reference
See Also:
Object.hashCode()
HashMap
toString
public
String
toString
()
Returns a string describing this resolved module.
Overrides:
toString
in class
Object
Returns:
A string describing this resolved module
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.