Uses of Class java.lang.module.ModuleDescriptor.Version (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.module.ModuleDescriptor.Version
Packages that use
ModuleDescriptor.Version
Package
Description
java.lang.module
Classes to support module descriptors and creating configurations of modules
 by means of resolution and service binding.
Uses of
ModuleDescriptor.Version
in
java.lang.module
Methods in
java.lang.module
that return
ModuleDescriptor.Version
Modifier and Type
Method
Description
static
ModuleDescriptor.Version
ModuleDescriptor.Version.
parse
(
String
v)
Parses the given string as a version string.
Methods in
java.lang.module
that return types with arguments of type
ModuleDescriptor.Version
Modifier and Type
Method
Description
Optional
<
ModuleDescriptor.Version
>
ModuleDescriptor.Requires.
compiledVersion
()
Returns the version of the module if recorded at compile-time.
Optional
<
ModuleDescriptor.Version
>
ModuleDescriptor.
version
()
Returns the module version.
Methods in
java.lang.module
with parameters of type
ModuleDescriptor.Version
Modifier and Type
Method
Description
int
ModuleDescriptor.Version.
compareTo
(
ModuleDescriptor.Version
that)
Compares this module version to another module version.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
requires
(
Set
<
ModuleDescriptor.Requires.Modifier
> ms,
String
mn,
ModuleDescriptor.Version
compiledVersion)
Adds a dependence on a module with the given (and possibly empty)
 set of modifiers.
ModuleDescriptor.Builder
ModuleDescriptor.Builder.
version
(
ModuleDescriptor.Version
v)
Sets the module version.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.