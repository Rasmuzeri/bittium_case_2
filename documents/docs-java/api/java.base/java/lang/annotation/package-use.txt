Uses of Package java.lang.annotation (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Package
java.lang.annotation
Packages that use
java.lang.annotation
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.color
Provides classes for color spaces.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
java.awt.geom
Provides the Java 2D classes for defining and performing operations on
 objects related to two-dimensional geometry.
java.awt.image
Provides classes for creating and modifying images.
java.awt.print
Provides classes and interfaces for a general printing API.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.io
Provides for system input and output through data streams,
 serialization and the file system.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.annotation
Provides library support for the Java programming language
 annotation facility.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.net
Provides the classes for implementing networking applications.
java.net.spi
Service-provider classes for the
java.net
package.
javax.annotation.processing
Facilities for declaring annotation processors and for
 allowing annotation processors to communicate with an annotation processing
 tool environment.
javax.lang.model
Types and hierarchies of packages comprising a Java language model, a model of the declarations and types of the Java
 programming language.
javax.lang.model.element
Interfaces used to model elements of the Java programming language.
javax.lang.model.type
Interfaces used to model Java programming language types.
javax.management
Provides the core classes for the Java Management Extensions.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
jdk.jfr
This package provides classes to create events and control Flight Recorder.
Classes in
java.lang.annotation
used by
java.awt
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
java.awt.color
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
java.awt.dnd
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
java.awt.event
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
java.awt.geom
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
java.awt.image
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
java.awt.print
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
java.beans
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Documented
If the annotation
@Documented
is present on the declaration
 of an annotation interface
A
, then any
@A
annotation on
 an element is considered part of the element's public contract.
Retention
Indicates how long annotations with the annotated interface are to
 be retained.
Target
Indicates the contexts in which an annotation interface is applicable.
Classes in
java.lang.annotation
used by
java.io
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Retention
Indicates how long annotations with the annotated interface are to
 be retained.
Target
Indicates the contexts in which an annotation interface is applicable.
Classes in
java.lang.annotation
used by
java.lang
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Documented
If the annotation
@Documented
is present on the declaration
 of an annotation interface
A
, then any
@A
annotation on
 an element is considered part of the element's public contract.
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Retention
Indicates how long annotations with the annotated interface are to
 be retained.
Target
Indicates the contexts in which an annotation interface is applicable.
Classes in
java.lang.annotation
used by
java.lang.annotation
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Documented
If the annotation
@Documented
is present on the declaration
 of an annotation interface
A
, then any
@A
annotation on
 an element is considered part of the element's public contract.
ElementType
The constants of this enumerated class provide a simple classification of the
 syntactic locations where annotations may appear in a Java program.
Retention
Indicates how long annotations with the annotated interface are to
 be retained.
RetentionPolicy
Annotation retention policy.
Target
Indicates the contexts in which an annotation interface is applicable.
Classes in
java.lang.annotation
used by
java.lang.reflect
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Classes in
java.lang.annotation
used by
java.net
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
java.net.spi
Class
Description
Native
Indicates that a field defining a constant value may be referenced
 from native code.
Classes in
java.lang.annotation
used by
javax.annotation.processing
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Documented
If the annotation
@Documented
is present on the declaration
 of an annotation interface
A
, then any
@A
annotation on
 an element is considered part of the element's public contract.
Retention
Indicates how long annotations with the annotated interface are to
 be retained.
Target
Indicates the contexts in which an annotation interface is applicable.
Classes in
java.lang.annotation
used by
javax.lang.model
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Classes in
java.lang.annotation
used by
javax.lang.model.element
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Classes in
java.lang.annotation
used by
javax.lang.model.type
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Classes in
java.lang.annotation
used by
javax.management
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Documented
If the annotation
@Documented
is present on the declaration
 of an annotation interface
A
, then any
@A
annotation on
 an element is considered part of the element's public contract.
Retention
Indicates how long annotations with the annotated interface are to
 be retained.
Target
Indicates the contexts in which an annotation interface is applicable.
Classes in
java.lang.annotation
used by
javax.swing
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Retention
Indicates how long annotations with the annotated interface are to
 be retained.
Target
Indicates the contexts in which an annotation interface is applicable.
Classes in
java.lang.annotation
used by
jdk.jfr
Class
Description
Annotation
The common interface extended by all annotation interfaces.
Inherited
Indicates that an annotation interface is automatically inherited.
Retention
Indicates how long annotations with the annotated interface are to
 be retained.
Target
Indicates the contexts in which an annotation interface is applicable.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.