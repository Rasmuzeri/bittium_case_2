Uses of Annotation Interface java.lang.annotation.Inherited (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Annotation Interface
java.lang.annotation.Inherited
Packages that use
Inherited
Package
Description
jdk.jfr
This package provides classes to create events and control Flight Recorder.
Uses of
Inherited
in
jdk.jfr
Classes in
jdk.jfr
with annotations of type
Inherited
Modifier and Type
Class
Description
@interface
Category
Event annotation, to associate the event type with a category, in the format
 of a human-readable path.
@interface
Enabled
Event annotation, determines if an event should be enabled by default.
@interface
Experimental
Annotation that specifies that an element is experimental and may change
 without notice.
@interface
Period
Event annotation, specifies the default setting value for a periodic event.
@interface
Registered
Event annotation, for programmatic event registration.
@interface
StackTrace
Event annotation, determines whether an event by default has a stack trace
 or not.
@interface
Threshold
Event annotation, specifies the default duration below which an event is not
 recorded (for example,
"20 ms"
).
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.