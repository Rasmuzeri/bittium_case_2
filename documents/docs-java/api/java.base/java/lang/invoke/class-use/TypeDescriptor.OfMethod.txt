Uses of Interface java.lang.invoke.TypeDescriptor.OfMethod (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.lang.invoke.TypeDescriptor.OfMethod
Packages that use
TypeDescriptor.OfMethod
Package
Description
java.lang.constant
Classes and interfaces to represent
nominal descriptors
for run-time
 entities such as classes or method handles, and classfile entities such as
 constant pool entries or
invokedynamic
call sites.
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
Uses of
TypeDescriptor.OfMethod
in
java.lang.constant
Subinterfaces of
TypeDescriptor.OfMethod
in
java.lang.constant
Modifier and Type
Interface
Description
interface
MethodTypeDesc
A
nominal descriptor
for a
MethodType
constant.
Uses of
TypeDescriptor.OfMethod
in
java.lang.invoke
Classes in
java.lang.invoke
with type parameters of type
TypeDescriptor.OfMethod
Modifier and Type
Interface
Description
static interface
TypeDescriptor.OfMethod
<F extends
TypeDescriptor.OfField
<F>,
M extends
TypeDescriptor.OfMethod
<F,
M>>
An entity that has a method type descriptor
 Method descriptors conforming to JVMS
4.3.3
can be described
 nominally via
MethodType::describeConstable
;
 otherwise they cannot be described nominally.
Classes in
java.lang.invoke
that implement
TypeDescriptor.OfMethod
Modifier and Type
Class
Description
final class
MethodType
A method type represents the arguments and return type accepted and
 returned by a method handle, or the arguments and return type passed
 and expected  by a method handle caller.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.