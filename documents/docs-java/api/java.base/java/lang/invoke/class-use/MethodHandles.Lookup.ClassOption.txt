Uses of Enum Class java.lang.invoke.MethodHandles.Lookup.ClassOption (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Enum Class
java.lang.invoke.MethodHandles.Lookup.ClassOption
Packages that use
MethodHandles.Lookup.ClassOption
Package
Description
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
Uses of
MethodHandles.Lookup.ClassOption
in
java.lang.invoke
Methods in
java.lang.invoke
that return
MethodHandles.Lookup.ClassOption
Modifier and Type
Method
Description
static
MethodHandles.Lookup.ClassOption
MethodHandles.Lookup.ClassOption.
valueOf
(
String
name)
Returns the enum constant of this class with the specified name.
static
MethodHandles.Lookup.ClassOption
[]
MethodHandles.Lookup.ClassOption.
values
()
Returns an array containing the constants of this enum class, in
the order they are declared.
Methods in
java.lang.invoke
with parameters of type
MethodHandles.Lookup.ClassOption
Modifier and Type
Method
Description
MethodHandles.Lookup
MethodHandles.Lookup.
defineHiddenClass
(byte[] bytes,
 boolean initialize,
MethodHandles.Lookup.ClassOption
... options)
Creates a
hidden
class or interface from
bytes
,
 returning a
Lookup
on the newly created class or interface.
MethodHandles.Lookup
MethodHandles.Lookup.
defineHiddenClassWithClassData
(byte[] bytes,
Object
classData,
 boolean initialize,
MethodHandles.Lookup.ClassOption
... options)
Creates a
hidden
class or interface from
bytes
with associated
class data
,
 returning a
Lookup
on the newly created class or interface.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.