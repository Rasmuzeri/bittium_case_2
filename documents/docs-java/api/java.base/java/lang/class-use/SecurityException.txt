Uses of Class java.lang.SecurityException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.SecurityException
Packages that use
SecurityException
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.io
Provides for system input and output through data streams,
 serialization and the file system.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.rmi
Provides the RMI package.
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
java.security
Provides the classes and interfaces for the security framework.
java.util.logging
Provides the classes and interfaces of
 the Java 2 platform's core logging facilities.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
jdk.jfr
This package provides classes to create events and control Flight Recorder.
jdk.management.jfr
This package contains classes to control and monitor Flight Recorder over Java Management Extensions (JMX).
Uses of
SecurityException
in
java.awt
Methods in
java.awt
that throw
SecurityException
Modifier and Type
Method
Description
void
KeyboardFocusManager.
clearGlobalFocusOwner
()
Clears the global focus owner at both the Java and native levels.
protected
Window
KeyboardFocusManager.
getGlobalActiveWindow
()
Returns the active Window, even if the calling thread is in a different
 context than the active Window.
protected
Container
KeyboardFocusManager.
getGlobalCurrentFocusCycleRoot
()
Returns the current focus cycle root, even if the calling thread is in a
 different context than the current focus cycle root.
protected
Window
KeyboardFocusManager.
getGlobalFocusedWindow
()
Returns the focused Window, even if the calling thread is in a different
 context than the focused Window.
protected
Component
KeyboardFocusManager.
getGlobalFocusOwner
()
Returns the focus owner, even if the calling thread is in a different
 context than the focus owner.
protected
Component
KeyboardFocusManager.
getGlobalPermanentFocusOwner
()
Returns the permanent focus owner, even if the calling thread is in a
 different context than the permanent focus owner.
final void
Window.
setAlwaysOnTop
(boolean alwaysOnTop)
Sets whether this window should always be above other windows.
static void
KeyboardFocusManager.
setCurrentKeyboardFocusManager
(
KeyboardFocusManager
newManager)
Sets the current KeyboardFocusManager instance for the calling thread's
 context.
protected void
KeyboardFocusManager.
setGlobalActiveWindow
(
Window
activeWindow)
Sets the active Window.
void
KeyboardFocusManager.
setGlobalCurrentFocusCycleRoot
(
Container
newFocusCycleRoot)
Sets the current focus cycle root.
protected void
KeyboardFocusManager.
setGlobalFocusedWindow
(
Window
focusedWindow)
Sets the focused Window.
protected void
KeyboardFocusManager.
setGlobalFocusOwner
(
Component
focusOwner)
Sets the focus owner.
protected void
KeyboardFocusManager.
setGlobalPermanentFocusOwner
(
Component
permanentFocusOwner)
Sets the permanent focus owner.
Uses of
SecurityException
in
java.beans
Methods in
java.beans
that throw
SecurityException
Modifier and Type
Method
Description
static void
Beans.
setDesignTime
(boolean isDesignTime)
Used to indicate whether of not we are running in an application
 builder environment.
static void
Beans.
setGuiAvailable
(boolean isGuiAvailable)
Used to indicate whether of not we are running in an environment
 where GUI interaction is available.
Uses of
SecurityException
in
java.io
Methods in
java.io
that throw
SecurityException
Modifier and Type
Method
Description
protected boolean
ObjectOutputStream.
enableReplaceObject
(boolean enable)
Enables the stream to do replacement of objects written to the stream.
protected boolean
ObjectInputStream.
enableResolveObject
(boolean enable)
Enables the stream to do replacement of objects read from the stream.
Constructors in
java.io
that throw
SecurityException
Modifier
Constructor
Description
protected
ObjectInputStream
()
Provide a way for subclasses that are completely reimplementing
 ObjectInputStream to not have to allocate private data just used by this
 implementation of ObjectInputStream.
protected
ObjectOutputStream
()
Provide a way for subclasses that are completely reimplementing
 ObjectOutputStream to not have to allocate private data just used by
 this implementation of ObjectOutputStream.
Uses of
SecurityException
in
java.lang
Methods in
java.lang
that throw
SecurityException
Modifier and Type
Method
Description
Constructor
<
T
>
Class.
getConstructor
(
Class
<?>... parameterTypes)
Returns a
Constructor
object that reflects the specified
 public constructor of the class represented by this
Class
object.
Constructor
<?>[]
Class.
getConstructors
()
Returns an array containing
Constructor
objects reflecting
 all the public constructors of the class represented by this
Class
object.
Class
<?>[]
Class.
getDeclaredClasses
()
Returns an array of
Class
objects reflecting all the
 classes and interfaces declared as members of the class represented by
 this
Class
object.
Constructor
<
T
>
Class.
getDeclaredConstructor
(
Class
<?>... parameterTypes)
Returns a
Constructor
object that reflects the specified
 constructor of the class represented by this
Class
object.
Constructor
<?>[]
Class.
getDeclaredConstructors
()
Returns an array of
Constructor
objects reflecting all the
 constructors implicitly or explicitly declared by the class represented by this
Class
object.
Field
Class.
getDeclaredField
(
String
name)
Returns a
Field
object that reflects the specified declared
 field of the class or interface represented by this
Class
object.
Field
[]
Class.
getDeclaredFields
()
Returns an array of
Field
objects reflecting all the fields
 declared by the class or interface represented by this
Class
object.
Method
Class.
getDeclaredMethod
(
String
name,
Class
<?>... parameterTypes)
Returns a
Method
object that reflects the specified
 declared method of the class or interface represented by this
Class
object.
Method
[]
Class.
getDeclaredMethods
()
Returns an array containing
Method
objects reflecting all the
 declared methods of the class or interface represented by this
Class
object, including public, protected, default (package)
 access, and private methods, but excluding inherited methods.
Class
<?>
Class.
getDeclaringClass
()
If the class or interface represented by this
Class
object
 is a member of another class, returns the
Class
object
 representing the class in which it was declared.
Class
<?>
Class.
getEnclosingClass
()
Returns the immediately enclosing class of the underlying
 class.
Constructor
<?>
Class.
getEnclosingConstructor
()
If this
Class
object represents a local or anonymous
 class within a constructor, returns a
Constructor
object representing
 the immediately enclosing constructor of the underlying
 class.
Method
Class.
getEnclosingMethod
()
If this
Class
object represents a local or anonymous
 class within a method, returns a
Method
object representing the
 immediately enclosing method of the underlying class.
Field
Class.
getField
(
String
name)
Returns a
Field
object that reflects the specified public member
 field of the class or interface represented by this
Class
object.
Field
[]
Class.
getFields
()
Returns an array containing
Field
objects reflecting all
 the accessible public fields of the class or interface represented by
 this
Class
object.
Method
Class.
getMethod
(
String
name,
Class
<?>... parameterTypes)
Returns a
Method
object that reflects the specified public
 member method of the class or interface represented by this
Class
object.
Method
[]
Class.
getMethods
()
Returns an array containing
Method
objects reflecting all the
 public methods of the class or interface represented by this
Class
object, including those declared by the class or interface and
 those inherited from superclasses and superinterfaces.
Uses of
SecurityException
in
java.rmi
Subclasses of
SecurityException
in
java.rmi
Modifier and Type
Class
Description
class
RMISecurityException
Deprecated.
Use
SecurityException
instead.
Uses of
SecurityException
in
java.rmi.server
Methods in
java.rmi.server
that throw
SecurityException
Modifier and Type
Method
Description
static
ClassLoader
RMIClassLoader.
getClassLoader
(
String
codebase)
Returns a class loader that loads classes from the given codebase
 URL path.
Uses of
SecurityException
in
java.security
Subclasses of
SecurityException
in
java.security
Modifier and Type
Class
Description
class
AccessControlException
Deprecated, for removal: This API element is subject to removal in a future version.
This class is only useful in conjunction with
the Security Manager
, which is deprecated
       and subject to removal in a future release.
Methods in
java.security
that throw
SecurityException
Modifier and Type
Method
Description
void
Guard.
checkGuard
(
Object
object)
Determines whether to allow access to the guarded object
object
.
void
Permission.
checkGuard
(
Object
object)
Implements the guard interface for a permission.
Object
GuardedObject.
getObject
()
Retrieves the guarded object, or throws an exception if access
 to the guarded object is denied by the guard.
Uses of
SecurityException
in
java.util.logging
Methods in
java.util.logging
that throw
SecurityException
Modifier and Type
Method
Description
void
Logger.
addHandler
(
Handler
handler)
Add a log Handler to receive logging messages.
void
LogManager.
checkAccess
()
Deprecated, for removal: This API element is subject to removal in a future version.
This method is only useful in conjunction with
the Security Manager
, which is
       deprecated and subject to removal in a future release.
void
FileHandler.
close
()
Close all the files.
abstract void
Handler.
close
()
Close the
Handler
and free all associated resources.
void
MemoryHandler.
close
()
Close the
Handler
and free all associated resources.
void
SocketHandler.
close
()
Close this output stream.
void
StreamHandler.
close
()
Close the current output stream.
void
LogManager.
readConfiguration
()
Reads and initializes the logging configuration.
void
LogManager.
readConfiguration
(
InputStream
ins)
Reads and initializes the logging configuration from the given input stream.
void
Logger.
removeHandler
(
Handler
handler)
Remove a log Handler.
void
LogManager.
reset
()
Reset the logging configuration.
void
Handler.
setEncoding
(
String
encoding)
Set the character encoding used by this
Handler
.
void
StreamHandler.
setEncoding
(
String
encoding)
Set (or change) the character encoding used by this
Handler
.
void
Handler.
setFilter
(
Filter
newFilter)
Set a
Filter
to control output on this
Handler
.
void
Logger.
setFilter
(
Filter
newFilter)
Set a filter to control output on this Logger.
void
Handler.
setFormatter
(
Formatter
newFormatter)
Set a
Formatter
.
void
Handler.
setLevel
(
Level
newLevel)
Set the log level specifying which message levels will be
 logged by this
Handler
.
void
Logger.
setLevel
(
Level
newLevel)
Set the log level specifying which message levels will be
 logged by this logger.
protected void
StreamHandler.
setOutputStream
(
OutputStream
out)
Change the output stream.
void
MemoryHandler.
setPushLevel
(
Level
newLevel)
Set the
pushLevel
.
Constructors in
java.util.logging
that throw
SecurityException
Modifier
Constructor
Description
FileHandler
()
Construct a default
FileHandler
.
FileHandler
(
String
pattern)
Initialize a
FileHandler
to write to the given filename.
FileHandler
(
String
pattern,
 boolean append)
Initialize a
FileHandler
to write to the given filename,
 with optional append.
FileHandler
(
String
pattern,
 int limit,
 int count)
Initialize a
FileHandler
to write to a set of files.
FileHandler
(
String
pattern,
 int limit,
 int count,
 boolean append)
Initialize a
FileHandler
to write to a set of files
 with optional append.
Uses of
SecurityException
in
javax.swing
Methods in
javax.swing
that throw
SecurityException
Modifier and Type
Method
Description
static void
FocusManager.
setCurrentManager
(
FocusManager
aFocusManager)
Sets the current
KeyboardFocusManager
instance
 for the calling thread's context.
static void
UIManager.
setInstalledLookAndFeels
(
UIManager.LookAndFeelInfo
[] infos)
Sets the set of available look and feels.
Uses of
SecurityException
in
jdk.jfr
Methods in
jdk.jfr
that throw
SecurityException
Modifier and Type
Method
Description
static void
FlightRecorder.
addPeriodicEvent
(
Class
<? extends
Event
> eventClass,
Runnable
hook)
Adds a hook for a periodic event.
static
FlightRecorder
FlightRecorder.
getFlightRecorder
()
Returns the Flight Recorder for the platform.
static boolean
FlightRecorder.
removePeriodicEvent
(
Runnable
hook)
Removes a hook for a periodic event.
Uses of
SecurityException
in
jdk.management.jfr
Methods in
jdk.management.jfr
that throw
SecurityException
Modifier and Type
Method
Description
long
FlightRecorderMXBean.
cloneRecording
(long recordingId,
 boolean stop)
Creates a copy of an existing recording, useful for extracting parts of a
 recording.
void
FlightRecorderMXBean.
copyTo
(long recordingId,
String
outputFile)
Writes recording data to the specified file.
long
FlightRecorderMXBean.
newRecording
()
Creates a recording, but doesn't start it.
void
FlightRecorderMXBean.
startRecording
(long recordingId)
Starts the recording with the specified ID.
boolean
FlightRecorderMXBean.
stopRecording
(long recordingId)
Stops the running recording with the specified ID.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.