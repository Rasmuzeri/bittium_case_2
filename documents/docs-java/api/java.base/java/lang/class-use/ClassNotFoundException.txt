Uses of Class java.lang.ClassNotFoundException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.ClassNotFoundException
Packages that use
ClassNotFoundException
Package
Description
java.awt.datatransfer
Provides interfaces and classes for transferring data between and within
 applications.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.beans.beancontext
Provides classes and interfaces relating to bean context.
java.io
Provides for system input and output through data streams,
 serialization and the file system.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.instrument
Provides services that allow Java programming language agents to instrument
 programs running on the Java Virtual Machine (JVM).
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.net
Provides the classes for implementing networking applications.
java.rmi
Provides the RMI package.
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
java.security
Provides the classes and interfaces for the security framework.
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.loading
Provides the classes which implement advanced dynamic
        loading.
javax.management.relation
Provides the definition of the Relation Service.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
jdk.jshell.execution
Provides implementation support for building JShell execution engines.
org.w3c.dom.bootstrap
Provides a factory for obtaining instances of
DOMImplementation
.
org.xml.sax.helpers
Provides helper classes, including
 support for bootstrapping SAX-based applications.
Uses of
ClassNotFoundException
in
java.awt.datatransfer
Methods in
java.awt.datatransfer
that throw
ClassNotFoundException
Modifier and Type
Method
Description
static
DataFlavor
SystemFlavorMap.
decodeDataFlavor
(
String
nat)
Decodes a
String
native for use as a
DataFlavor
.
void
DataFlavor.
readExternal
(
ObjectInput
is)
Restores this
DataFlavor
from a Serialized state.
protected static final
Class
<?>
DataFlavor.
tryToLoadClass
(
String
className,
ClassLoader
fallback)
Tries to load a class from: the bootstrap loader, the system loader, the
 context loader (if one is present) and finally the loader specified.
Constructors in
java.awt.datatransfer
that throw
ClassNotFoundException
Modifier
Constructor
Description
DataFlavor
(
String
mimeType)
Constructs a
DataFlavor
from a
mimeType
string.
DataFlavor
(
String
mimeType,
String
humanPresentableName,
ClassLoader
classLoader)
Constructs a
DataFlavor
that represents a
MimeType
.
Uses of
ClassNotFoundException
in
java.beans
Methods in
java.beans
that throw
ClassNotFoundException
Modifier and Type
Method
Description
static
Object
Beans.
instantiate
(
ClassLoader
cls,
String
beanName)
Instantiate a JavaBean.
static
Object
Beans.
instantiate
(
ClassLoader
cls,
String
beanName,
BeanContext
beanContext)
Instantiate a JavaBean.
static
Object
Beans.
instantiate
(
ClassLoader
cls,
String
beanName,
BeanContext
beanContext,
AppletInitializer
initializer)
Deprecated, for removal: This API element is subject to removal in a future version.
It is recommended to use
Beans.instantiate(ClassLoader, String, BeanContext)
,
 because the Applet API is deprecated.
Uses of
ClassNotFoundException
in
java.beans.beancontext
Methods in
java.beans.beancontext
that throw
ClassNotFoundException
Modifier and Type
Method
Description
protected void
BeanContextServicesSupport.
bcsPreDeserializationHook
(
ObjectInputStream
ois)
called from BeanContextSupport readObject before it deserializes the
 children ...
protected void
BeanContextSupport.
bcsPreDeserializationHook
(
ObjectInputStream
ois)
called by readObject after defaultReadObject() but prior to
 deserialization of any children.
protected final void
BeanContextSupport.
deserialize
(
ObjectInputStream
ois,
Collection
coll)
used by readObject to deserialize a collection.
Object
BeanContext.
instantiateChild
(
String
beanName)
Instantiate the javaBean named as a
 child of this
BeanContext
.
Object
BeanContextSupport.
instantiateChild
(
String
beanName)
The instantiateChild method is a convenience hook
 in BeanContext to simplify
 the task of instantiating a Bean, nested,
 into a
BeanContext
.
final void
BeanContextSupport.
readChildren
(
ObjectInputStream
ois)
When an instance of this class is used as a delegate for the
 implementation of the BeanContext protocols (and its subprotocols)
 there exists a 'chicken and egg' problem during deserialization
Uses of
ClassNotFoundException
in
java.io
Methods in
java.io
that throw
ClassNotFoundException
Modifier and Type
Method
Description
void
ObjectInputStream.
defaultReadObject
()
Read the non-static and non-transient fields of the current class from
 this stream.
abstract
Object
ObjectInputStream.GetField.
get
(
String
name,
Object
val)
Get the value of the named Object field from the persistent field.
protected
ObjectStreamClass
ObjectInputStream.
readClassDescriptor
()
Read a class descriptor from the serialization stream.
void
Externalizable.
readExternal
(
ObjectInput
in)
The object implements the readExternal method to restore its
 contents by calling the methods of DataInput for primitive
 types and readObject for objects, strings and arrays.
ObjectInputStream.GetField
ObjectInputStream.
readFields
()
Reads the persistent fields from the stream and makes them available by
 name.
Object
ObjectInput.
readObject
()
Read and return an object.
final
Object
ObjectInputStream.
readObject
()
Read an object from the ObjectInputStream.
protected
Object
ObjectInputStream.
readObjectOverride
()
This method is called by trusted subclasses of ObjectInputStream that
 constructed ObjectInputStream using the protected no-arg constructor.
Object
ObjectInputStream.
readUnshared
()
Reads an "unshared" object from the ObjectInputStream.
protected
Class
<?>
ObjectInputStream.
resolveClass
(
ObjectStreamClass
desc)
Load the local class equivalent of the specified stream class
 description.
protected
Class
<?>
ObjectInputStream.
resolveProxyClass
(
String
[] interfaces)
Returns a proxy class that implements the interfaces named in a proxy
 class descriptor; subclasses may implement this method to read custom
 data from the stream along with the descriptors for dynamic proxy
 classes, allowing them to use an alternate loading mechanism for the
 interfaces and the proxy class.
Uses of
ClassNotFoundException
in
java.lang
Methods in
java.lang
that throw
ClassNotFoundException
Modifier and Type
Method
Description
protected
Class
<?>
ClassLoader.
findClass
(
String
name)
Finds the class with the specified
binary name
.
protected final
Class
<?>
ClassLoader.
findSystemClass
(
String
name)
Finds a class with the specified
binary name
,
 loading it if necessary.
static
Class
<?>
Class.
forName
(
String
className)
Returns the
Class
object associated with the class or
 interface with the given string name.
static
Class
<?>
Class.
forName
(
String
name,
 boolean initialize,
ClassLoader
loader)
Returns the
Class
object associated with the class or
 interface with the given string name, using the given class loader.
Class
<?>
ClassLoader.
loadClass
(
String
name)
Loads the class with the specified
binary name
.
protected
Class
<?>
ClassLoader.
loadClass
(
String
name,
 boolean resolve)
Loads the class with the specified
binary name
.
Uses of
ClassNotFoundException
in
java.lang.instrument
Methods in
java.lang.instrument
that throw
ClassNotFoundException
Modifier and Type
Method
Description
void
Instrumentation.
redefineClasses
(
ClassDefinition
... definitions)
Redefine the supplied set of classes using the supplied class files.
Uses of
ClassNotFoundException
in
java.lang.invoke
Methods in
java.lang.invoke
that throw
ClassNotFoundException
Modifier and Type
Method
Description
Class
<?>
MethodHandles.Lookup.
findClass
(
String
targetName)
Looks up a class by name from the lookup context defined by this
Lookup
object,
as if resolved
by an
ldc
instruction.
Uses of
ClassNotFoundException
in
java.net
Methods in
java.net
that throw
ClassNotFoundException
Modifier and Type
Method
Description
protected
Class
<?>
URLClassLoader.
findClass
(
String
name)
Finds and loads the class with the specified name from the URL search
 path.
Uses of
ClassNotFoundException
in
java.rmi
Methods in
java.rmi
that throw
ClassNotFoundException
Modifier and Type
Method
Description
T
MarshalledObject.
get
()
Returns a new copy of the contained marshalledobject.
Uses of
ClassNotFoundException
in
java.rmi.server
Methods in
java.rmi.server
that throw
ClassNotFoundException
Modifier and Type
Method
Description
Class
<?>
LoaderHandler.
loadClass
(
String
name)
Deprecated.
no replacement
Class
<?>
LoaderHandler.
loadClass
(
URL
codebase,
String
name)
Deprecated.
no replacement
static
Class
<?>
RMIClassLoader.
loadClass
(
String
name)
Deprecated.
replaced by
loadClass(String,String)
method
static
Class
<?>
RMIClassLoader.
loadClass
(
String
codebase,
String
name)
Loads a class from a codebase URL path.
static
Class
<?>
RMIClassLoader.
loadClass
(
String
codebase,
String
name,
ClassLoader
defaultLoader)
Loads a class from a codebase URL path, optionally using the
 supplied loader.
static
Class
<?>
RMIClassLoader.
loadClass
(
URL
codebase,
String
name)
Loads a class from a codebase URL.
abstract
Class
<?>
RMIClassLoaderSpi.
loadClass
(
String
codebase,
String
name,
ClassLoader
defaultLoader)
Provides the implementation for
RMIClassLoader.loadClass(URL,String)
,
RMIClassLoader.loadClass(String,String)
, and
RMIClassLoader.loadClass(String,String,ClassLoader)
.
static
Class
<?>
RMIClassLoader.
loadProxyClass
(
String
codebase,
String
[] interfaces,
ClassLoader
defaultLoader)
Loads a dynamic proxy class (see
Proxy
)
 that implements a set of interfaces with the given names
 from a codebase URL path.
abstract
Class
<?>
RMIClassLoaderSpi.
loadProxyClass
(
String
codebase,
String
[] interfaces,
ClassLoader
defaultLoader)
Provides the implementation for
RMIClassLoader.loadProxyClass(String,String[],ClassLoader)
.
Uses of
ClassNotFoundException
in
java.security
Methods in
java.security
that throw
ClassNotFoundException
Modifier and Type
Method
Description
Object
SignedObject.
getObject
()
Retrieves the encapsulated object.
Uses of
ClassNotFoundException
in
javax.crypto
Methods in
javax.crypto
that throw
ClassNotFoundException
Modifier and Type
Method
Description
final
Object
SealedObject.
getObject
(
Key
key)
Retrieves the original (encapsulated) object.
final
Object
SealedObject.
getObject
(
Key
key,
String
provider)
Retrieves the original (encapsulated) object.
final
Object
SealedObject.
getObject
(
Cipher
c)
Retrieves the original (encapsulated) object.
Uses of
ClassNotFoundException
in
javax.management
Methods in
javax.management
that throw
ClassNotFoundException
Modifier and Type
Method
Description
static
Class
<?>
DefaultLoaderRepository.
loadClass
(
String
className)
Deprecated.
Go through the list of class loaders and try to load the requested class.
static
Class
<?>
DefaultLoaderRepository.
loadClassWithout
(
ClassLoader
loader,
String
className)
Deprecated.
Go through the list of class loaders but exclude the given class loader, then try to load
 the requested class.
Uses of
ClassNotFoundException
in
javax.management.loading
Methods in
javax.management.loading
that throw
ClassNotFoundException
Modifier and Type
Method
Description
protected
Class
<?>
MLet.
findClass
(
String
name)
Deprecated, for removal: This API element is subject to removal in a future version.
This is the main method for class loaders that is being redefined.
Class
<?>
ClassLoaderRepository.
loadClass
(
String
className)
Load the given class name through the list of class loaders.
static
Class
<?>
DefaultLoaderRepository.
loadClass
(
String
className)
Deprecated.
Go through the list of class loaders and try to load the requested
 class.
Class
<?>
MLet.
loadClass
(
String
name,
ClassLoaderRepository
clr)
Deprecated, for removal: This API element is subject to removal in a future version.
Load a class, using the given
ClassLoaderRepository
if
 the class is not found in this MLet's URLs.
Class
<?>
ClassLoaderRepository.
loadClassBefore
(
ClassLoader
stop,
String
className)
Load the given class name through the list of class loaders,
 stopping at the given one.
Class
<?>
ClassLoaderRepository.
loadClassWithout
(
ClassLoader
exclude,
String
className)
Load the given class name through the list of class loaders,
 excluding the given one.
static
Class
<?>
DefaultLoaderRepository.
loadClassWithout
(
ClassLoader
loader,
String
className)
Deprecated.
Go through the list of class loaders but exclude the given
 class loader, then try to load
 the requested class.
void
MLet.
readExternal
(
ObjectInput
in)
Deprecated, for removal: This API element is subject to removal in a future version.
Restore this MLet's contents from the given
ObjectInput
.
Uses of
ClassNotFoundException
in
javax.management.relation
Constructors in
javax.management.relation
that throw
ClassNotFoundException
Modifier
Constructor
Description
RoleInfo
(
String
roleName,
String
mbeanClassName)
Constructor.
RoleInfo
(
String
roleName,
String
mbeanClassName,
 boolean read,
 boolean write)
Constructor.
RoleInfo
(
String
roleName,
String
mbeanClassName,
 boolean read,
 boolean write,
 int min,
 int max,
String
descr)
Constructor.
Uses of
ClassNotFoundException
in
javax.swing
Methods in
javax.swing
that throw
ClassNotFoundException
Modifier and Type
Method
Description
static void
UIManager.
setLookAndFeel
(
String
className)
Loads the
LookAndFeel
specified by the given class
 name, using the current thread's context class loader, and
 passes it to
setLookAndFeel(LookAndFeel)
.
Uses of
ClassNotFoundException
in
javax.swing.text
Methods in
javax.swing.text
that throw
ClassNotFoundException
Modifier and Type
Method
Description
void
StyleContext.
readAttributes
(
ObjectInputStream
in,
MutableAttributeSet
a)
Context-specific handling of reading in attributes
static void
StyleContext.
readAttributeSet
(
ObjectInputStream
in,
MutableAttributeSet
a)
Reads a set of attributes from the given object input
 stream that have been previously written out with
writeAttributeSet
.
Uses of
ClassNotFoundException
in
jdk.jshell.execution
Methods in
jdk.jshell.execution
that throw
ClassNotFoundException
Modifier and Type
Method
Description
protected
Class
<?>
DirectExecutionControl.
findClass
(
String
name)
Finds the class with the specified binary name.
Class
<?>
LoaderDelegate.
findClass
(
String
name)
Finds the class with the specified binary name.
Uses of
ClassNotFoundException
in
org.w3c.dom.bootstrap
Methods in
org.w3c.dom.bootstrap
that throw
ClassNotFoundException
Modifier and Type
Method
Description
static
DOMImplementationRegistry
DOMImplementationRegistry.
newInstance
()
Obtain a new instance of a
DOMImplementationRegistry
.
Uses of
ClassNotFoundException
in
org.xml.sax.helpers
Methods in
org.xml.sax.helpers
that throw
ClassNotFoundException
Modifier and Type
Method
Description
static
Parser
ParserFactory.
makeParser
()
Deprecated.
Create a new SAX parser using the `org.xml.sax.parser' system property.
static
Parser
ParserFactory.
makeParser
(
String
className)
Deprecated.
Create a new SAX parser object using the class name provided.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.