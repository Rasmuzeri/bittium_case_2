Uses of Class java.lang.Integer (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.Integer
Packages that use
Integer
Package
Description
com.sun.nio.sctp
A Java API for Stream Control Transport Protocol.
java.awt.font
Provides classes and interface relating to fonts.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.net
Provides the classes for implementing networking applications.
java.nio.channels
Defines channels, which represent connections to entities that are capable of
 performing I/O operations, such as files and sockets; defines selectors, for
 multiplexed, non-blocking I/O operations.
java.sql
Provides the API for accessing and processing data stored in a
 data source (usually a relational database) using the
 Java programming language.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.regex
Classes for matching character sequences against patterns specified
 by regular expressions.
java.util.spi
Service provider classes for the classes in the java.util package.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
javax.imageio.plugins.tiff
Public classes used by the built-in TIFF plug-ins.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.remote
Interfaces for remote access to
        JMX MBean servers.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
javax.management.timer
Provides the definition of the Timer MBean.
javax.script
The scripting API consists of interfaces and classes that define
Java Scripting Engines and provides
a framework for their use in Java applications.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
jdk.jshell
Provides interfaces for creating tools, such as a Read-Eval-Print Loop (REPL),
 which interactively evaluate "snippets" of Java programming language code.
jdk.net
Platform specific socket options for the
java.net
and
java.nio.channels
socket classes.
Uses of
Integer
in
com.sun.nio.sctp
Fields in
com.sun.nio.sctp
with type parameters of type
Integer
Modifier and Type
Field
Description
static final
SctpSocketOption
<
Integer
>
SctpStandardSocketOptions.
SCTP_FRAGMENT_INTERLEAVE
Fragmented interleave controls how the presentation of messages occur
 for the message receiver.
static final
SctpSocketOption
<
Integer
>
SctpStandardSocketOptions.
SO_LINGER
Linger on close if data is present.
static final
SctpSocketOption
<
Integer
>
SctpStandardSocketOptions.
SO_RCVBUF
The size of the socket receive buffer.
static final
SctpSocketOption
<
Integer
>
SctpStandardSocketOptions.
SO_SNDBUF
The size of the socket send buffer.
Uses of
Integer
in
java.awt.font
Fields in
java.awt.font
declared as
Integer
Modifier and Type
Field
Description
static final
Integer
TextAttribute.
KERNING_ON
Request standard kerning.
static final
Integer
TextAttribute.
LIGATURES_ON
Request standard optional ligatures.
static final
Integer
TextAttribute.
SUPERSCRIPT_SUB
Standard subscript.
static final
Integer
TextAttribute.
SUPERSCRIPT_SUPER
Standard superscript.
static final
Integer
TextAttribute.
UNDERLINE_LOW_DASHED
Single pixel dashed low underline.
static final
Integer
TextAttribute.
UNDERLINE_LOW_DOTTED
Single pixel dotted low underline.
static final
Integer
TextAttribute.
UNDERLINE_LOW_GRAY
Double pixel gray low underline.
static final
Integer
TextAttribute.
UNDERLINE_LOW_ONE_PIXEL
Single pixel solid low underline.
static final
Integer
TextAttribute.
UNDERLINE_LOW_TWO_PIXEL
Double pixel solid low underline.
static final
Integer
TextAttribute.
UNDERLINE_ON
Standard underline.
Uses of
Integer
in
java.lang
Fields in
java.lang
with type parameters of type
Integer
Modifier and Type
Field
Description
static final
Class
<
Integer
>
Integer.
TYPE
The
Class
instance representing the primitive type
int
.
Methods in
java.lang
that return
Integer
Modifier and Type
Method
Description
static
Integer
Integer.
decode
(
String
nm)
Decodes a
String
into an
Integer
.
static
Integer
Integer.
getInteger
(
String
nm)
Determines the integer value of the system property with the
 specified name.
static
Integer
Integer.
getInteger
(
String
nm,
 int val)
Determines the integer value of the system property with the
 specified name.
static
Integer
Integer.
getInteger
(
String
nm,
Integer
val)
Returns the integer value of the system property with the
 specified name.
Integer
Integer.
resolveConstantDesc
(
MethodHandles.Lookup
lookup)
Resolves this instance as a
ConstantDesc
, the result of which is
 the instance itself.
static
Integer
Integer.
valueOf
(int i)
Returns an
Integer
instance representing the specified
int
value.
static
Integer
Integer.
valueOf
(
String
s)
Returns an
Integer
object holding the
 value of the specified
String
.
static
Integer
Integer.
valueOf
(
String
s,
 int radix)
Returns an
Integer
object holding the value
 extracted from the specified
String
when parsed
 with the radix given by the second argument.
Methods in
java.lang
that return types with arguments of type
Integer
Modifier and Type
Method
Description
Optional
<
Integer
>
Runtime.Version.
build
()
Returns the
build number
.
Optional
<
Integer
>
Integer.
describeConstable
()
Returns an
Optional
containing the nominal descriptor for this
 instance, which is the instance itself.
List
<
Integer
>
Runtime.Version.
version
()
Returns an unmodifiable
List
of the integers
 represented in the
version number
.
Methods in
java.lang
with parameters of type
Integer
Modifier and Type
Method
Description
int
Integer.
compareTo
(
Integer
anotherInteger)
Compares two
Integer
objects numerically.
static
Integer
Integer.
getInteger
(
String
nm,
Integer
val)
Returns the integer value of the system property with the
 specified name.
Uses of
Integer
in
java.net
Fields in
java.net
with type parameters of type
Integer
Modifier and Type
Field
Description
static final
SocketOption
<
Integer
>
StandardSocketOptions.
IP_MULTICAST_TTL
The
time-to-live
for Internet Protocol (IP) multicast datagrams.
static final
SocketOption
<
Integer
>
StandardSocketOptions.
IP_TOS
The Type of Service (ToS) octet in the Internet Protocol (IP) header.
static final
SocketOption
<
Integer
>
StandardSocketOptions.
SO_LINGER
Linger on close if data is present.
static final
SocketOption
<
Integer
>
StandardSocketOptions.
SO_RCVBUF
The size of the socket receive buffer.
static final
SocketOption
<
Integer
>
StandardSocketOptions.
SO_SNDBUF
The size of the socket send buffer.
Uses of
Integer
in
java.nio.channels
Methods in
java.nio.channels
that return types with arguments of type
Integer
Modifier and Type
Method
Description
Future
<
Integer
>
AsynchronousByteChannel.
read
(
ByteBuffer
dst)
Reads a sequence of bytes from this channel into the given buffer.
abstract
Future
<
Integer
>
AsynchronousFileChannel.
read
(
ByteBuffer
dst,
 long position)
Reads a sequence of bytes from this channel into the given buffer,
 starting at the given file position.
abstract
Future
<
Integer
>
AsynchronousSocketChannel.
read
(
ByteBuffer
dst)
Future
<
Integer
>
AsynchronousByteChannel.
write
(
ByteBuffer
src)
Writes a sequence of bytes to this channel from the given buffer.
abstract
Future
<
Integer
>
AsynchronousFileChannel.
write
(
ByteBuffer
src,
 long position)
Writes a sequence of bytes to this channel from the given buffer, starting
 at the given file position.
abstract
Future
<
Integer
>
AsynchronousSocketChannel.
write
(
ByteBuffer
src)
Method parameters in
java.nio.channels
with type arguments of type
Integer
Modifier and Type
Method
Description
<A> void
AsynchronousByteChannel.
read
(
ByteBuffer
dst,
 A attachment,
CompletionHandler
<
Integer
,
? super A> handler)
Reads a sequence of bytes from this channel into the given buffer.
abstract <A> void
AsynchronousFileChannel.
read
(
ByteBuffer
dst,
 long position,
 A attachment,
CompletionHandler
<
Integer
,
? super A> handler)
Reads a sequence of bytes from this channel into the given buffer,
 starting at the given file position.
abstract <A> void
AsynchronousSocketChannel.
read
(
ByteBuffer
dst,
 long timeout,
TimeUnit
unit,
 A attachment,
CompletionHandler
<
Integer
,
? super A> handler)
Reads a sequence of bytes from this channel into the given buffer.
final <A> void
AsynchronousSocketChannel.
read
(
ByteBuffer
dst,
 A attachment,
CompletionHandler
<
Integer
,
? super A> handler)
<A> void
AsynchronousByteChannel.
write
(
ByteBuffer
src,
 A attachment,
CompletionHandler
<
Integer
,
? super A> handler)
Writes a sequence of bytes to this channel from the given buffer.
abstract <A> void
AsynchronousFileChannel.
write
(
ByteBuffer
src,
 long position,
 A attachment,
CompletionHandler
<
Integer
,
? super A> handler)
Writes a sequence of bytes to this channel from the given buffer, starting
 at the given file position.
abstract <A> void
AsynchronousSocketChannel.
write
(
ByteBuffer
src,
 long timeout,
TimeUnit
unit,
 A attachment,
CompletionHandler
<
Integer
,
? super A> handler)
Writes a sequence of bytes to this channel from the given buffer.
final <A> void
AsynchronousSocketChannel.
write
(
ByteBuffer
src,
 A attachment,
CompletionHandler
<
Integer
,
? super A> handler)
Uses of
Integer
in
java.sql
Methods in
java.sql
that return
Integer
Modifier and Type
Method
Description
Integer
JDBCType.
getVendorTypeNumber
()
Returns the vendor specific type number for the data type.
Integer
SQLType.
getVendorTypeNumber
()
Returns the vendor specific type number for the data type.
Uses of
Integer
in
java.util
Methods in
java.util
that return
Integer
Modifier and Type
Method
Description
default
Integer
PrimitiveIterator.OfInt.
next
()
Returns the next element in the iteration.
Methods in
java.util
that return types with arguments of type
Integer
Modifier and Type
Method
Description
Map
<
String
,
Integer
>
Calendar.
getDisplayNames
(int field,
 int style,
Locale
locale)
Returns a
Map
containing all names of the calendar
field
in the given
style
and
locale
and their corresponding field values.
Method parameters in
java.util
with type arguments of type
Integer
Modifier and Type
Method
Description
default void
PrimitiveIterator.OfInt.
forEachRemaining
(
Consumer
<? super
Integer
> action)
Performs the given action for each remaining element until all elements
 have been processed or the action throws an exception.
default void
Spliterator.OfInt.
forEachRemaining
(
Consumer
<? super
Integer
> action)
Performs the given action for each remaining element, sequentially in
 the current thread, until all elements have been processed or the action
 throws an exception.
default boolean
Spliterator.OfInt.
tryAdvance
(
Consumer
<? super
Integer
> action)
If a remaining element exists: performs the given action on it,
 returning
true
; else returns
false
.
Uses of
Integer
in
java.util.regex
Methods in
java.util.regex
that return types with arguments of type
Integer
Modifier and Type
Method
Description
Map
<
String
,
Integer
>
Matcher.
namedGroups
()
Returns an unmodifiable map from capturing group names to group numbers.
default
Map
<
String
,
Integer
>
MatchResult.
namedGroups
()
Returns an unmodifiable map from capturing group names to group numbers.
Map
<
String
,
Integer
>
Pattern.
namedGroups
()
Returns an unmodifiable map from capturing group names to group numbers.
Uses of
Integer
in
java.util.spi
Methods in
java.util.spi
that return types with arguments of type
Integer
Modifier and Type
Method
Description
abstract
Map
<
String
,
Integer
>
CalendarNameProvider.
getDisplayNames
(
String
calendarType,
 int field,
 int style,
Locale
locale)
Returns a
Map
containing all string representations (display
 names) of the
Calendar
field
in the given
style
and
locale
and their corresponding field values.
Uses of
Integer
in
java.util.stream
Methods in
java.util.stream
that return types with arguments of type
Integer
Modifier and Type
Method
Description
Stream
<
Integer
>
IntStream.
boxed
()
Returns a
Stream
consisting of the elements of this stream,
 each boxed to an
Integer
.
static <T>
Collector
<T,
?,
Integer
>
Collectors.
summingInt
(
ToIntFunction
<? super T> mapper)
Returns a
Collector
that produces the sum of an integer-valued
 function applied to the input elements.
Uses of
Integer
in
javax.imageio.plugins.tiff
Methods in
javax.imageio.plugins.tiff
that return types with arguments of type
Integer
Modifier and Type
Method
Description
SortedSet
<
Integer
>
TIFFTagSet.
getTagNumbers
()
Retrieves an unmodifiable numerically increasing set of tag numbers.
Uses of
Integer
in
javax.management
Methods in
javax.management
that return
Integer
Modifier and Type
Method
Description
Integer
MBeanServer.
getMBeanCount
()
Returns the number of MBeans registered in the MBean server.
Integer
MBeanServerConnection.
getMBeanCount
()
Returns the number of MBeans registered in the MBean server.
Uses of
Integer
in
javax.management.openmbean
Fields in
javax.management.openmbean
with type parameters of type
Integer
Modifier and Type
Field
Description
static final
SimpleType
<
Integer
>
SimpleType.
INTEGER
The
SimpleType
instance describing values whose
 Java class name is
java.lang.Integer
.
Uses of
Integer
in
javax.management.relation
Methods in
javax.management.relation
that return
Integer
Modifier and Type
Method
Description
Integer
RelationService.
checkRoleReading
(
String
roleName,
String
relationTypeName)
Checks if given Role can be read in a relation of the given type.
Integer
RelationServiceMBean.
checkRoleReading
(
String
roleName,
String
relationTypeName)
Checks if given Role can be read in a relation of the given type.
Integer
RelationService.
checkRoleWriting
(
Role
role,
String
relationTypeName,
Boolean
initFlag)
Checks if given Role can be set in a relation of given type.
Integer
RelationServiceMBean.
checkRoleWriting
(
Role
role,
String
relationTypeName,
Boolean
initFlag)
Checks if given Role can be set in a relation of given type.
Integer
Relation.
getRoleCardinality
(
String
roleName)
Returns the number of MBeans currently referenced in the given role.
Integer
RelationService.
getRoleCardinality
(
String
relationId,
String
roleName)
Retrieves the number of MBeans currently referenced in the given role.
Integer
RelationServiceMBean.
getRoleCardinality
(
String
relationId,
String
roleName)
Retrieves the number of MBeans currently referenced in the
 given role.
Integer
RelationSupport.
getRoleCardinality
(
String
roleName)
Returns the number of MBeans currently referenced in the given role.
Uses of
Integer
in
javax.management.remote
Methods in
javax.management.remote
that return
Integer
Modifier and Type
Method
Description
Integer
TargetedNotification.
getListenerID
()
The ID of the listener to which the notification is
    targeted.
Constructors in
javax.management.remote
with parameters of type
Integer
Modifier
Constructor
Description
TargetedNotification
(
Notification
notification,
Integer
listenerID)
Constructs a
TargetedNotification
object.
Uses of
Integer
in
javax.management.remote.rmi
Methods in
javax.management.remote.rmi
that return
Integer
Modifier and Type
Method
Description
Integer
[]
RMIConnection.
addNotificationListeners
(
ObjectName
[] names,
MarshalledObject
[] filters,
Subject
[] delegationSubjects)
Handles the method
MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)
.
Integer
[]
RMIConnectionImpl_Stub.
addNotificationListeners
(
ObjectName
[] $param_arrayOf_ObjectName_1,
MarshalledObject
[] $param_arrayOf_MarshalledObject_2,
Subject
[] $param_arrayOf_Subject_3)
Integer
[]
RMIConnectionImpl.
addNotificationListeners
(
ObjectName
[] names,
MarshalledObject
[] filters,
Subject
[] delegationSubjects)
Integer
RMIConnection.
getMBeanCount
(
Subject
delegationSubject)
Handles the method
MBeanServerConnection.getMBeanCount()
.
Integer
RMIConnectionImpl_Stub.
getMBeanCount
(
Subject
$param_Subject_1)
Integer
RMIConnectionImpl.
getMBeanCount
(
Subject
delegationSubject)
Methods in
javax.management.remote.rmi
with parameters of type
Integer
Modifier and Type
Method
Description
void
RMIConnection.
removeNotificationListeners
(
ObjectName
name,
Integer
[] listenerIDs,
Subject
delegationSubject)
Handles the
removeNotificationListener(ObjectName, NotificationListener)
and
removeNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)
methods.
void
RMIConnectionImpl_Stub.
removeNotificationListeners
(
ObjectName
$param_ObjectName_1,
Integer
[] $param_arrayOf_Integer_2,
Subject
$param_Subject_3)
void
RMIConnectionImpl.
removeNotificationListeners
(
ObjectName
name,
Integer
[] listenerIDs,
Subject
delegationSubject)
Uses of
Integer
in
javax.management.timer
Methods in
javax.management.timer
that return
Integer
Modifier and Type
Method
Description
Integer
Timer.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date
 and a null period and number of occurrences.
Integer
Timer.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date
 and period and a null number of occurrences.
Integer
Timer.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period,
 long nbOccurences)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date,
 period and number of occurrences.
Integer
Timer.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period,
 long nbOccurences,
 boolean fixedRate)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date,
 period and number of occurrences.
Integer
TimerMBean.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date
 and a null period and number of occurrences.
Integer
TimerMBean.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date
 and period and a null number of occurrences.
Integer
TimerMBean.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period,
 long nbOccurences)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date,
 period and number of occurrences.
Integer
TimerMBean.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period,
 long nbOccurences,
 boolean fixedRate)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date,
 period and number of occurrences.
Integer
TimerNotification.
getNotificationID
()
Gets the identifier of this timer notification.
Methods in
javax.management.timer
that return types with arguments of type
Integer
Modifier and Type
Method
Description
Vector
<
Integer
>
Timer.
getAllNotificationIDs
()
Gets all timer notification identifiers registered into the list of notifications.
Vector
<
Integer
>
TimerMBean.
getAllNotificationIDs
()
Gets all timer notification identifiers registered into the list of notifications.
Vector
<
Integer
>
Timer.
getNotificationIDs
(
String
type)
Gets all the identifiers of timer notifications corresponding to the specified type.
Vector
<
Integer
>
TimerMBean.
getNotificationIDs
(
String
type)
Gets all the identifiers of timer notifications corresponding to the specified type.
Methods in
javax.management.timer
with parameters of type
Integer
Modifier and Type
Method
Description
Date
Timer.
getDate
(
Integer
id)
Gets a copy of the date associated to a timer notification.
Date
TimerMBean.
getDate
(
Integer
id)
Gets a copy of the date associated to a timer notification.
Boolean
Timer.
getFixedRate
(
Integer
id)
Gets a copy of the flag indicating whether a periodic notification is
 executed at
fixed-delay
or at
fixed-rate
.
Boolean
TimerMBean.
getFixedRate
(
Integer
id)
Gets a copy of the flag indicating whether a periodic notification is
 executed at
fixed-delay
or at
fixed-rate
.
Long
Timer.
getNbOccurences
(
Integer
id)
Gets a copy of the remaining number of occurrences associated to a timer notification.
Long
TimerMBean.
getNbOccurences
(
Integer
id)
Gets a copy of the remaining number of occurrences associated to a timer notification.
String
Timer.
getNotificationMessage
(
Integer
id)
Gets the timer notification detailed message corresponding to the specified identifier.
String
TimerMBean.
getNotificationMessage
(
Integer
id)
Gets the timer notification detailed message corresponding to the specified identifier.
String
Timer.
getNotificationType
(
Integer
id)
Gets the timer notification type corresponding to the specified identifier.
String
TimerMBean.
getNotificationType
(
Integer
id)
Gets the timer notification type corresponding to the specified identifier.
Object
Timer.
getNotificationUserData
(
Integer
id)
Gets the timer notification user data object corresponding to the specified identifier.
Object
TimerMBean.
getNotificationUserData
(
Integer
id)
Gets the timer notification user data object corresponding to the specified identifier.
Long
Timer.
getPeriod
(
Integer
id)
Gets a copy of the period (in milliseconds) associated to a timer notification.
Long
TimerMBean.
getPeriod
(
Integer
id)
Gets a copy of the period (in milliseconds) associated to a timer notification.
void
Timer.
removeNotification
(
Integer
id)
Removes the timer notification corresponding to the specified identifier from the list of notifications.
void
TimerMBean.
removeNotification
(
Integer
id)
Removes the timer notification corresponding to the specified identifier from the list of notifications.
Constructors in
javax.management.timer
with parameters of type
Integer
Modifier
Constructor
Description
TimerNotification
(
String
type,
Object
source,
 long sequenceNumber,
 long timeStamp,
String
msg,
Integer
id)
Creates a timer notification object.
Uses of
Integer
in
javax.script
Methods in
javax.script
that return types with arguments of type
Integer
Modifier and Type
Method
Description
List
<
Integer
>
ScriptContext.
getScopes
()
Returns immutable
List
of all the valid values for
 scope in the ScriptContext.
List
<
Integer
>
SimpleScriptContext.
getScopes
()
Returns immutable
List
of all the valid values for
 scope in the ScriptContext.
Uses of
Integer
in
javax.swing
Fields in
javax.swing
declared as
Integer
Modifier and Type
Field
Description
static final
Integer
JLayeredPane.
DEFAULT_LAYER
Convenience object defining the Default layer.
static final
Integer
JLayeredPane.
DRAG_LAYER
Convenience object defining the Drag layer.
static final
Integer
JLayeredPane.
FRAME_CONTENT_LAYER
Convenience object defining the Frame Content layer.
static final
Integer
JLayeredPane.
MODAL_LAYER
Convenience object defining the Modal layer.
static final
Integer
JLayeredPane.
PALETTE_LAYER
Convenience object defining the Palette layer.
static final
Integer
JLayeredPane.
POPUP_LAYER
Convenience object defining the Popup layer.
Methods in
javax.swing
that return
Integer
Modifier and Type
Method
Description
protected
Integer
JLayeredPane.
getObjectForLayer
(int layer)
Returns the Integer object associated with a specified layer.
Methods in
javax.swing
that return types with arguments of type
Integer
Modifier and Type
Method
Description
Hashtable
<
Integer
,
JComponent
>
JSlider.
createStandardLabels
(int increment)
Creates a
Hashtable
of numerical text labels, starting at the
 slider minimum, and using the increment specified.
Hashtable
<
Integer
,
JComponent
>
JSlider.
createStandardLabels
(int increment,
 int start)
Creates a
Hashtable
of numerical text labels, starting at the
 starting point specified, and using the increment specified.
protected
Hashtable
<
Component
,
Integer
>
JLayeredPane.
getComponentToLayer
()
Returns the hashtable that maps components to layers.
Methods in
javax.swing
with parameters of type
Integer
Modifier and Type
Method
Description
void
JInternalFrame.
setLayer
(
Integer
layer)
Convenience method for setting the layer attribute of this component.
Uses of
Integer
in
javax.swing.plaf.basic
Methods in
javax.swing.plaf.basic
that return
Integer
Modifier and Type
Method
Description
protected
Integer
BasicSliderUI.
getHighestValue
()
Returns the biggest value that has an entry in the label table.
protected
Integer
BasicSliderUI.
getLowestValue
()
Returns the smallest value that has an entry in the label table.
Uses of
Integer
in
jdk.incubator.vector
Fields in
jdk.incubator.vector
with type parameters of type
Integer
Modifier and Type
Field
Description
static final
VectorOperators.Conversion
<
Byte
,
Integer
>
VectorOperators.
B2I
Convert
byteVal
to
(int)byteVal
.
static final
VectorOperators.Conversion
<
Double
,
Integer
>
VectorOperators.
D2I
Convert
doubleVal
to
(int)doubleVal
.
static final
VectorOperators.Conversion
<
Float
,
Integer
>
VectorOperators.
F2I
Convert
floatVal
to
(int)floatVal
.
static final
VectorOperators.Conversion
<
Integer
,
Byte
>
VectorOperators.
I2B
Convert
intVal
to
(byte)intVal
.
static final
VectorOperators.Conversion
<
Integer
,
Double
>
VectorOperators.
I2D
Convert
intVal
to
(double)intVal
.
static final
VectorOperators.Conversion
<
Integer
,
Float
>
VectorOperators.
I2F
Convert
intVal
to
(float)intVal
.
static final
VectorOperators.Conversion
<
Integer
,
Long
>
VectorOperators.
I2L
Convert
intVal
to
(long)intVal
.
static final
VectorOperators.Conversion
<
Integer
,
Short
>
VectorOperators.
I2S
Convert
intVal
to
(short)intVal
.
static final
VectorOperators.Conversion
<
Long
,
Integer
>
VectorOperators.
L2I
Convert
longVal
to
(int)longVal
.
static final
VectorOperators.Conversion
<
Float
,
Integer
>
VectorOperators.
REINTERPRET_F2I
Reinterpret bits of
floatVal
as
int
.
static final
VectorOperators.Conversion
<
Integer
,
Float
>
VectorOperators.
REINTERPRET_I2F
Reinterpret bits of
intVal
as
float
.
static final
VectorOperators.Conversion
<
Short
,
Integer
>
VectorOperators.
S2I
Convert
shortVal
to
(int)shortVal
.
static final
VectorSpecies
<
Integer
>
IntVector.
SPECIES_128
Species representing
IntVector
s of
VectorShape.S_128_BIT
.
static final
VectorSpecies
<
Integer
>
IntVector.
SPECIES_256
Species representing
IntVector
s of
VectorShape.S_256_BIT
.
static final
VectorSpecies
<
Integer
>
IntVector.
SPECIES_512
Species representing
IntVector
s of
VectorShape.S_512_BIT
.
static final
VectorSpecies
<
Integer
>
IntVector.
SPECIES_64
Species representing
IntVector
s of
VectorShape.S_64_BIT
.
static final
VectorSpecies
<
Integer
>
IntVector.
SPECIES_MAX
Species representing
IntVector
s of
VectorShape.S_Max_BIT
.
static final
VectorSpecies
<
Integer
>
IntVector.
SPECIES_PREFERRED
Preferred species for
IntVector
s.
static final
VectorOperators.Conversion
<
Byte
,
Integer
>
VectorOperators.
ZERO_EXTEND_B2I
Zero-extend
byteVal
to
int
.
static final
VectorOperators.Conversion
<
Integer
,
Long
>
VectorOperators.
ZERO_EXTEND_I2L
Zero-extend
intVal
to
long
.
static final
VectorOperators.Conversion
<
Short
,
Integer
>
VectorOperators.
ZERO_EXTEND_S2I
Zero-extend
shortVal
to
int
.
Methods in
jdk.incubator.vector
that return types with arguments of type
Integer
Modifier and Type
Method
Description
abstract
VectorMask
<
Integer
>
IntVector.
compare
(
VectorOperators.Comparison
op,
 int e)
Tests this vector by comparing it with an input scalar,
 according to the given comparison operation.
final
VectorMask
<
Integer
>
IntVector.
compare
(
VectorOperators.Comparison
op,
 int e,
VectorMask
<
Integer
> m)
Tests this vector by comparing it with an input scalar,
 according to the given comparison operation,
 in lanes selected by a mask.
abstract
VectorMask
<
Integer
>
IntVector.
compare
(
VectorOperators.Comparison
op,
 long e)
Tests this vector by comparing it with an input scalar,
 according to the given comparison operation.
final
VectorMask
<
Integer
>
IntVector.
compare
(
VectorOperators.Comparison
op,
 long e,
VectorMask
<
Integer
> m)
Tests this vector by comparing it with an input scalar,
 according to the given comparison operation,
 in lanes selected by a mask.
abstract
VectorMask
<
Integer
>
IntVector.
compare
(
VectorOperators.Comparison
op,
Vector
<
Integer
> v)
Tests this vector by comparing it with another input vector,
 according to the given comparison operation.
final
VectorMask
<
Integer
>
IntVector.
eq
(int e)
Tests if this vector is equal to an input scalar.
final
VectorMask
<
Integer
>
IntVector.
eq
(
Vector
<
Integer
> v)
Tests if this vector is equal to another input vector.
final
VectorMask
<
Integer
>
IntVector.
lt
(int e)
Tests if this vector is less than an input scalar.
final
VectorMask
<
Integer
>
IntVector.
lt
(
Vector
<
Integer
> v)
Tests if this vector is less than another input vector.
abstract
VectorMask
<
Integer
>
IntVector.
test
(
VectorOperators.Test
op)
Tests the lanes of this vector
 according to the given operation.
abstract
VectorMask
<
Integer
>
IntVector.
test
(
VectorOperators.Test
op,
VectorMask
<
Integer
> m)
Test selected lanes of this vector,
 according to the given operation.
Method parameters in
jdk.incubator.vector
with type arguments of type
Integer
Modifier and Type
Method
Description
final
IntVector
IntVector.
add
(int e,
VectorMask
<
Integer
> m)
Adds this vector to the broadcast of an input scalar,
 selecting lane elements controlled by a mask.
final
IntVector
IntVector.
add
(
Vector
<
Integer
> v)
Adds this vector to a second input vector.
final
IntVector
IntVector.
add
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Adds this vector to a second input vector, selecting lanes
 under the control of a mask.
final
IntVector
IntVector.
add
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Adds this vector to a second input vector, selecting lanes
 under the control of a mask.
final
IntVector
IntVector.
and
(
Vector
<
Integer
> v)
Computes the bitwise logical conjunction (
&
)
 of this vector and a second input vector.
final
IntVector
IntVector.
bitwiseBlend
(int bits,
Vector
<
Integer
> mask)
Blends together the bits of a vector and a scalar under
 the control of another vector, which supplies mask bits.
final
IntVector
IntVector.
bitwiseBlend
(
Vector
<
Integer
> bits,
 int mask)
Blends together the bits of two vectors under
 the control of a scalar, which supplies mask bits.
final
IntVector
IntVector.
bitwiseBlend
(
Vector
<
Integer
> bits,
Vector
<
Integer
> mask)
Blends together the bits of two vectors under
 the control of a third, which supplies mask bits.
final
IntVector
IntVector.
blend
(int e,
VectorMask
<
Integer
> m)
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
final
IntVector
IntVector.
blend
(long e,
VectorMask
<
Integer
> m)
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
abstract
IntVector
IntVector.
blend
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
abstract
IntVector
IntVector.
blend
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
static
IntVector
IntVector.
broadcast
(
VectorSpecies
<
Integer
> species,
 int e)
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
static
IntVector
IntVector.
broadcast
(
VectorSpecies
<
Integer
> species,
 long e)
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
final
VectorMask
<
Integer
>
IntVector.
compare
(
VectorOperators.Comparison
op,
 int e,
VectorMask
<
Integer
> m)
Tests this vector by comparing it with an input scalar,
 according to the given comparison operation,
 in lanes selected by a mask.
final
VectorMask
<
Integer
>
IntVector.
compare
(
VectorOperators.Comparison
op,
 long e,
VectorMask
<
Integer
> m)
Tests this vector by comparing it with an input scalar,
 according to the given comparison operation,
 in lanes selected by a mask.
abstract
VectorMask
<
Integer
>
IntVector.
compare
(
VectorOperators.Comparison
op,
Vector
<
Integer
> v)
Tests this vector by comparing it with another input vector,
 according to the given comparison operation.
abstract
IntVector
IntVector.
compress
(
VectorMask
<
Integer
> m)
Compresses the lane elements of this vector selecting lanes
 under the control of a specific mask.
final
IntVector
IntVector.
div
(int e,
VectorMask
<
Integer
> m)
Divides this vector by the broadcast of an input scalar,
 selecting lane elements controlled by a mask.
final
IntVector
IntVector.
div
(
Vector
<
Integer
> v)
Divides this vector by a second input vector.
final
IntVector
IntVector.
div
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Divides this vector by a second input vector
 under the control of a mask.
final
IntVector
IntVector.
div
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Divides this vector by a second input vector
 under the control of a mask.
final
VectorMask
<
Integer
>
IntVector.
eq
(
Vector
<
Integer
> v)
Tests if this vector is equal to another input vector.
abstract
IntVector
IntVector.
expand
(
VectorMask
<
Integer
> m)
Expands the lane elements of this vector
 under the control of a specific mask.
static
IntVector
IntVector.
fromArray
(
VectorSpecies
<
Integer
> species,
 int[] a,
 int offset)
Loads a vector from an array of type
int[]
starting at an offset.
static
IntVector
IntVector.
fromArray
(
VectorSpecies
<
Integer
> species,
 int[] a,
 int offset,
 int[] indexMap,
 int mapOffset)
Gathers a new vector composed of elements from an array of type
int[]
,
 using indexes obtained by adding a fixed
offset
to a
 series of secondary offsets from an
index map
.
static
IntVector
IntVector.
fromArray
(
VectorSpecies
<
Integer
> species,
 int[] a,
 int offset,
 int[] indexMap,
 int mapOffset,
VectorMask
<
Integer
> m)
Gathers a new vector composed of elements from an array of type
int[]
,
 under the control of a mask, and
 using indexes obtained by adding a fixed
offset
to a
 series of secondary offsets from an
index map
.
static
IntVector
IntVector.
fromArray
(
VectorSpecies
<
Integer
> species,
 int[] a,
 int offset,
 int[] indexMap,
 int mapOffset,
VectorMask
<
Integer
> m)
Gathers a new vector composed of elements from an array of type
int[]
,
 under the control of a mask, and
 using indexes obtained by adding a fixed
offset
to a
 series of secondary offsets from an
index map
.
static
IntVector
IntVector.
fromArray
(
VectorSpecies
<
Integer
> species,
 int[] a,
 int offset,
VectorMask
<
Integer
> m)
Loads a vector from an array of type
int[]
starting at an offset and using a mask.
static
IntVector
IntVector.
fromArray
(
VectorSpecies
<
Integer
> species,
 int[] a,
 int offset,
VectorMask
<
Integer
> m)
Loads a vector from an array of type
int[]
starting at an offset and using a mask.
static
IntVector
IntVector.
fromMemorySegment
(
VectorSpecies
<
Integer
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
IntVector
IntVector.
fromMemorySegment
(
VectorSpecies
<
Integer
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Integer
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
IntVector
IntVector.
fromMemorySegment
(
VectorSpecies
<
Integer
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Integer
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
final void
IntVector.
intoArray
(int[] a,
 int offset,
 int[] indexMap,
 int mapOffset,
VectorMask
<
Integer
> m)
Scatters this vector into an array of type
int[]
,
 under the control of a mask, and
 using indexes obtained by adding a fixed
offset
to a
 series of secondary offsets from an
index map
.
final void
IntVector.
intoArray
(int[] a,
 int offset,
VectorMask
<
Integer
> m)
Stores this vector into an array of type
int[]
starting at offset and using a mask.
final void
IntVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Integer
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
 int e,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the value of a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
 long e,
VectorMask
<
Integer
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Integer
> v)
Combines the corresponding lane values of this vector
 with those of a second input vector.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
 int e1,
 int e2,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the values of two broadcast scalars,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
 int e1,
Vector
<
Integer
> v2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
 int e1,
Vector
<
Integer
> v2,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
 int e1,
Vector
<
Integer
> v2,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
 int e2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
 int e2,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
 int e2,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
Vector
<
Integer
> v2)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
Vector
<
Integer
> v2,
VectorMask
<
Integer
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
Vector
<
Integer
> v2,
VectorMask
<
Integer
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Unary
op,
VectorMask
<
Integer
> m)
Operates on the lane values of this vector,
 with selection of lane elements controlled by a mask.
final
VectorMask
<
Integer
>
IntVector.
lt
(
Vector
<
Integer
> v)
Tests if this vector is less than another input vector.
final
IntVector
IntVector.
max
(
Vector
<
Integer
> v)
Computes the larger of this vector and a second input vector.
final
IntVector
IntVector.
min
(
Vector
<
Integer
> v)
Computes the smaller of this vector and a second input vector.
final
IntVector
IntVector.
mul
(int e,
VectorMask
<
Integer
> m)
Multiplies this vector by the broadcast of an input scalar,
 selecting lane elements controlled by a mask.
final
IntVector
IntVector.
mul
(
Vector
<
Integer
> v)
Multiplies this vector by a second input vector.
final
IntVector
IntVector.
mul
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Multiplies this vector by a second input vector
 under the control of a mask.
final
IntVector
IntVector.
mul
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Multiplies this vector by a second input vector
 under the control of a mask.
final
IntVector
IntVector.
or
(
Vector
<
Integer
> v)
Computes the bitwise logical disjunction (
|
)
 of this vector and a second input vector.
abstract
IntVector
IntVector.
rearrange
(
VectorShuffle
<
Integer
> m)
Rearranges the lane elements of this vector, selecting lanes
 under the control of a specific shuffle.
abstract
IntVector
IntVector.
rearrange
(
VectorShuffle
<
Integer
> s,
Vector
<
Integer
> v)
Rearranges the lane elements of two vectors, selecting lanes
 under the control of a specific shuffle, using both normal and
 exceptional indexes in the shuffle to steer data.
abstract
IntVector
IntVector.
rearrange
(
VectorShuffle
<
Integer
> s,
Vector
<
Integer
> v)
Rearranges the lane elements of two vectors, selecting lanes
 under the control of a specific shuffle, using both normal and
 exceptional indexes in the shuffle to steer data.
abstract
IntVector
IntVector.
rearrange
(
VectorShuffle
<
Integer
> s,
VectorMask
<
Integer
> m)
Rearranges the lane elements of this vector, selecting lanes
 under the control of a specific shuffle and a mask.
abstract
IntVector
IntVector.
rearrange
(
VectorShuffle
<
Integer
> s,
VectorMask
<
Integer
> m)
Rearranges the lane elements of this vector, selecting lanes
 under the control of a specific shuffle and a mask.
abstract int
IntVector.
reduceLanes
(
VectorOperators.Associative
op,
VectorMask
<
Integer
> m)
Returns a value accumulated from selected lanes of this vector,
 controlled by a mask.
abstract
IntVector
IntVector.
selectFrom
(
Vector
<
Integer
> v)
Using index values stored in the lanes of this vector,
 assemble values stored in second vector
v
.
abstract
IntVector
IntVector.
selectFrom
(
Vector
<
Integer
> s,
VectorMask
<
Integer
> m)
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
abstract
IntVector
IntVector.
selectFrom
(
Vector
<
Integer
> s,
VectorMask
<
Integer
> m)
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
abstract
IntVector
IntVector.
slice
(int origin,
Vector
<
Integer
> v1)
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
final
IntVector
IntVector.
slice
(int origin,
Vector
<
Integer
> w,
VectorMask
<
Integer
> m)
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
final
IntVector
IntVector.
slice
(int origin,
Vector
<
Integer
> w,
VectorMask
<
Integer
> m)
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
final
IntVector
IntVector.
sub
(int e,
VectorMask
<
Integer
> m)
Subtracts an input scalar from this vector
 under the control of a mask.
final
IntVector
IntVector.
sub
(
Vector
<
Integer
> v)
Subtracts a second input vector from this vector.
final
IntVector
IntVector.
sub
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Subtracts a second input vector from this vector
 under the control of a mask.
final
IntVector
IntVector.
sub
(
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Subtracts a second input vector from this vector
 under the control of a mask.
abstract
VectorMask
<
Integer
>
IntVector.
test
(
VectorOperators.Test
op,
VectorMask
<
Integer
> m)
Test selected lanes of this vector,
 according to the given operation.
abstract
IntVector
IntVector.
unslice
(int origin,
Vector
<
Integer
> w,
 int part)
Reverses a
slice()
, inserting
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
abstract
IntVector
IntVector.
unslice
(int origin,
Vector
<
Integer
> w,
 int part,
VectorMask
<
Integer
> m)
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
abstract
IntVector
IntVector.
unslice
(int origin,
Vector
<
Integer
> w,
 int part,
VectorMask
<
Integer
> m)
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
static
IntVector
IntVector.
zero
(
VectorSpecies
<
Integer
> species)
Returns a vector of the given species
 where all lane elements are set to
 zero, the default primitive value.
Uses of
Integer
in
jdk.jshell
Method parameters in
jdk.jshell
with type arguments of type
Integer
Modifier and Type
Method
Description
JShell.Builder
JShell.Builder.
idGenerator
(
BiFunction
<
Snippet
,
Integer
,
String
> generator)
Sets the generator of identifying names for Snippets.
Uses of
Integer
in
jdk.net
Fields in
jdk.net
with type parameters of type
Integer
Modifier and Type
Field
Description
static final
SocketOption
<
Integer
>
ExtendedSocketOptions.
SO_INCOMING_NAPI_ID
Identifies the receive queue that the last incoming packet for the socket
 was received on.
static final
SocketOption
<
Integer
>
ExtendedSocketOptions.
TCP_KEEPCOUNT
Keep-Alive retransmission maximum limit.
static final
SocketOption
<
Integer
>
ExtendedSocketOptions.
TCP_KEEPIDLE
Keep-Alive idle time.
static final
SocketOption
<
Integer
>
ExtendedSocketOptions.
TCP_KEEPINTERVAL
Keep-Alive retransmission interval time.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.