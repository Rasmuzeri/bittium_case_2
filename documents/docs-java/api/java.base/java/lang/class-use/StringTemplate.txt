Uses of Interface java.lang.StringTemplate (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.lang.StringTemplate
Packages that use
StringTemplate
PREVIEW
Package
Description
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
Uses of
StringTemplate
PREVIEW
in
java.lang
Fields in
java.lang
with type parameters of type
StringTemplate
PREVIEW
Modifier and Type
Field
Description
static final
StringTemplate.Processor
PREVIEW
<
StringTemplate
PREVIEW
,
RuntimeException
>
StringTemplate.
RAW
This
StringTemplate.Processor
PREVIEW
instance is conventionally used to indicate that the
 processing of the
StringTemplate
PREVIEW
is to be deferred to a later time.
Methods in
java.lang
that return
StringTemplate
PREVIEW
Modifier and Type
Method
Description
static
StringTemplate
PREVIEW
StringTemplate.
combine
(
StringTemplate
PREVIEW
... stringTemplates)
Combine zero or more
StringTemplates
PREVIEW
into a single
StringTemplate
PREVIEW
.
static
StringTemplate
PREVIEW
StringTemplate.
combine
(
List
<
StringTemplate
PREVIEW
> stringTemplates)
Combine a list of
StringTemplates
PREVIEW
into a single
StringTemplate
PREVIEW
.
static
StringTemplate
PREVIEW
StringTemplate.
of
(
String
string)
Returns a
StringTemplate
PREVIEW
as if constructed by invoking
StringTemplate.of(List.of(string), List.of())
.
static
StringTemplate
PREVIEW
StringTemplate.
of
(
List
<
String
> fragments,
List
<?> values)
Returns a StringTemplate with the given fragments and values.
Methods in
java.lang
with parameters of type
StringTemplate
PREVIEW
Modifier and Type
Method
Description
static
StringTemplate
PREVIEW
StringTemplate.
combine
(
StringTemplate
PREVIEW
... stringTemplates)
Combine zero or more
StringTemplates
PREVIEW
into a single
StringTemplate
PREVIEW
.
R
StringTemplate.Processor.
process
(
StringTemplate
PREVIEW
stringTemplate)
Constructs a result based on the template fragments and values in the
 supplied
stringTemplate
PREVIEW
object.
static
String
StringTemplate.
toString
(
StringTemplate
PREVIEW
stringTemplate)
Produces a diagnostic string that describes the fragments and values of the supplied
StringTemplate
PREVIEW
.
Method parameters in
java.lang
with type arguments of type
StringTemplate
PREVIEW
Modifier and Type
Method
Description
static
StringTemplate
PREVIEW
StringTemplate.
combine
(
List
<
StringTemplate
PREVIEW
> stringTemplates)
Combine a list of
StringTemplates
PREVIEW
into a single
StringTemplate
PREVIEW
.
static <T>
StringTemplate.Processor
PREVIEW
<T,
RuntimeException
>
StringTemplate.Processor.
of
(
Function
<? super
StringTemplate
PREVIEW
,
? extends T> process)
This factory method can be used to create a
StringTemplate.Processor
PREVIEW
containing a
StringTemplate.Processor.process(java.lang.StringTemplate)
PREVIEW
method derived from a lambda expression.
Uses of
StringTemplate
PREVIEW
in
java.util
Methods in
java.util
with parameters of type
StringTemplate
PREVIEW
Modifier and Type
Method
Description
final
String
FormatProcessor.
process
(
StringTemplate
PREVIEW
stringTemplate)
Constructs a
String
based on the fragments, format
 specifications found in the fragments and values in the
 supplied
StringTemplate
PREVIEW
object.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.