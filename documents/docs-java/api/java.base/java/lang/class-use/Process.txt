Uses of Class java.lang.Process (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.Process
Packages that use
Process
Package
Description
com.sun.jdi
This is the core package of the Java Debug
 Interface (JDI), it defines mirrors for values, types, and the target
 VirtualMachine itself - as well bootstrapping facilities.
com.sun.jdi.connect
This package defines connections between the virtual machine
 using the JDI and the target virtual machine.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
jdk.jshell.execution
Provides implementation support for building JShell execution engines.
Uses of
Process
in
com.sun.jdi
Methods in
com.sun.jdi
that return
Process
Modifier and Type
Method
Description
Process
VirtualMachine.
process
()
Returns the
Process
object for this
 virtual machine if launched by a
LaunchingConnector
Methods in
com.sun.jdi
with parameters of type
Process
Modifier and Type
Method
Description
VirtualMachine
VirtualMachineManager.
createVirtualMachine
(
Connection
connection,
Process
process)
Create a virtual machine mirror for a target VM.
Uses of
Process
in
com.sun.jdi.connect
Methods in
com.sun.jdi.connect
that return
Process
Modifier and Type
Method
Description
Process
VMStartException.
process
()
Constructors in
com.sun.jdi.connect
with parameters of type
Process
Modifier
Constructor
Description
VMStartException
(
Process
process)
VMStartException
(
String
message,
Process
process)
Uses of
Process
in
java.lang
Methods in
java.lang
that return
Process
Modifier and Type
Method
Description
Process
Process.
destroyForcibly
()
Kills the process forcibly.
Process
Runtime.
exec
(
String
command)
Deprecated.
This method is error-prone and should not be used, the corresponding method
Runtime.exec(String[])
or
ProcessBuilder
should be used instead.
Process
Runtime.
exec
(
String
[] cmdarray)
Executes the specified command and arguments in a separate process.
Process
Runtime.
exec
(
String
[] cmdarray,
String
[] envp)
Executes the specified command and arguments in a separate process
 with the specified environment.
Process
Runtime.
exec
(
String
[] cmdarray,
String
[] envp,
File
dir)
Executes the specified command and arguments in a separate process with
 the specified environment and working directory.
Process
Runtime.
exec
(
String
command,
String
[] envp)
Deprecated.
This method is error-prone and should not be used, the corresponding method
Runtime.exec(String[], String[])
or
ProcessBuilder
should be used instead.
Process
Runtime.
exec
(
String
command,
String
[] envp,
File
dir)
Deprecated.
This method is error-prone and should not be used, the corresponding method
Runtime.exec(String[], String[], File)
or
ProcessBuilder
should be used instead.
Process
ProcessBuilder.
start
()
Starts a new process using the attributes of this process builder.
Methods in
java.lang
that return types with arguments of type
Process
Modifier and Type
Method
Description
CompletableFuture
<
Process
>
Process.
onExit
()
Returns a
CompletableFuture<Process>
for the termination of the Process.
static
List
<
Process
>
ProcessBuilder.
startPipeline
(
List
<
ProcessBuilder
> builders)
Starts a Process for each ProcessBuilder, creating a pipeline of
 processes linked by their standard output and standard input streams.
Uses of
Process
in
jdk.jshell.execution
Methods in
jdk.jshell.execution
that return
Process
Modifier and Type
Method
Description
Process
JdiInitiator.
process
()
Returns the launched process.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.