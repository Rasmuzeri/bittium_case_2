Uses of Class java.lang.IllegalArgumentException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.IllegalArgumentException
Packages that use
IllegalArgumentException
Package
Description
com.sun.jdi
This is the core package of the Java Debug
 Interface (JDI), it defines mirrors for values, types, and the target
 VirtualMachine itself - as well bootstrapping facilities.
com.sun.net.httpserver
Provides a simple high-level Http server API, which can be used to build
   embedded HTTP servers.
com.sun.nio.sctp
A Java API for Stream Control Transport Protocol.
java.awt.print
Provides classes and interfaces for a general printing API.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.beans.beancontext
Provides classes and interfaces relating to bean context.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.lang.management
Provides the management interfaces for monitoring and management of the
Java virtual machine and other components in the Java runtime.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.nio.channels
Defines channels, which represent connections to entities that are capable of
 performing I/O operations, such as files and sockets; defines selectors, for
 multiplexed, non-blocking I/O operations.
java.nio.charset
Defines charsets, decoders, and encoders, for translating between
 bytes and Unicode characters.
java.nio.file
Defines interfaces and classes for the Java virtual machine to access files,
 file attributes, and file systems.
java.security
Provides the classes and interfaces for the security framework.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.logging
Provides the classes and interfaces of
 the Java 2 platform's core logging facilities.
java.util.regex
Classes for matching character sequences against patterns specified
 by regular expressions.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.modelmbean
Provides the definition of the ModelMBean classes.
javax.management.monitor
Provides the definition of the monitor classes.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.timer
Provides the definition of the Timer MBean.
javax.rmi.ssl
Provides implementations of
RMIClientSocketFactory
and
RMIServerSocketFactory
over
 the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.xml.parsers
Provides the classes for processing XML documents with a SAX (Simple API for XML)
 parser or a DOM (Document Object Model) Document builder.
javax.xml.stream
Defines interfaces and classes for the Streaming API for XML (StAX).
javax.xml.stream.util
Provides utility classes for the Streaming API for XML (StAX).
javax.xml.transform
Defines the generic APIs for processing transformation instructions,
 and performing a transformation from source to result.
javax.xml.transform.sax
Provides SAX specific transformation classes.
jdk.management.jfr
This package contains classes to control and monitor Flight Recorder over Java Management Extensions (JMX).
Uses of
IllegalArgumentException
in
com.sun.jdi
Constructors in
com.sun.jdi
that throw
IllegalArgumentException
Modifier
Constructor
Description
JDIPermission
(
String
name,
String
actions)
Constructs a new JDIPermission object.
Uses of
IllegalArgumentException
in
com.sun.net.httpserver
Methods in
com.sun.net.httpserver
that throw
IllegalArgumentException
Modifier and Type
Method
Description
abstract void
HttpServer.
removeContext
(
String
path)
Removes the context identified by the given path from the server.
Uses of
IllegalArgumentException
in
com.sun.nio.sctp
Subclasses of
IllegalArgumentException
in
com.sun.nio.sctp
Modifier and Type
Class
Description
class
InvalidStreamException
Unchecked exception thrown when an attempt is made to send a
 message to an invalid stream.
Uses of
IllegalArgumentException
in
java.awt.print
Methods in
java.awt.print
that throw
IllegalArgumentException
Modifier and Type
Method
Description
void
PageFormat.
setOrientation
(int orientation)
Sets the page orientation.
Uses of
IllegalArgumentException
in
java.beans
Methods in
java.beans
that throw
IllegalArgumentException
Modifier and Type
Method
Description
void
PropertyEditor.
setAsText
(
String
text)
Set the property value by parsing a given String.
void
PropertyEditorSupport.
setAsText
(
String
text)
Sets the property value by parsing a given String.
Uses of
IllegalArgumentException
in
java.beans.beancontext
Methods in
java.beans.beancontext
that throw
IllegalArgumentException
Modifier and Type
Method
Description
URL
BeanContext.
getResource
(
String
name,
BeanContextChild
bcc)
Analogous to
java.lang.ClassLoader.getResource()
, this
 method allows a
BeanContext
implementation to interpose
 behavior between the child
Component
and underlying
ClassLoader
.
InputStream
BeanContext.
getResourceAsStream
(
String
name,
BeanContextChild
bcc)
Analogous to
java.lang.ClassLoader.getResourceAsStream()
,
 this method allows a
BeanContext
implementation
 to interpose behavior between the child
Component
and underlying
ClassLoader
.
Uses of
IllegalArgumentException
in
java.lang
Subclasses of
IllegalArgumentException
in
java.lang
Modifier and Type
Class
Description
class
IllegalThreadStateException
Thrown to indicate that a thread is not in an appropriate state
 for the requested operation.
class
NumberFormatException
Thrown to indicate that the application has attempted to convert
 a string to one of the numeric types, but that the string does not
 have the appropriate format.
Uses of
IllegalArgumentException
in
java.lang.invoke
Methods in
java.lang.invoke
that throw
IllegalArgumentException
Modifier and Type
Method
Description
static
MethodHandle
MethodHandles.
arrayConstructor
(
Class
<?> arrayClass)
Produces a method handle constructing arrays of a desired type,
 as if by the
anewarray
bytecode.
static
MethodHandle
MethodHandles.
arrayElementGetter
(
Class
<?> arrayClass)
Produces a method handle giving read access to elements of an array,
 as if by the
aaload
bytecode.
static
MethodHandle
MethodHandles.
arrayElementSetter
(
Class
<?> arrayClass)
Produces a method handle giving write access to elements of an array,
 as if by the
astore
bytecode.
static
VarHandle
MethodHandles.
arrayElementVarHandle
(
Class
<?> arrayClass)
Produces a VarHandle giving access to elements of an array of type
arrayClass
.
static
MethodHandle
MethodHandles.
arrayLength
(
Class
<?> arrayClass)
Produces a method handle returning the length of an array,
 as if by the
arraylength
bytecode.
static
VarHandle
MethodHandles.
byteArrayViewVarHandle
(
Class
<?> viewArrayClass,
ByteOrder
byteOrder)
Produces a VarHandle giving access to elements of a
byte[]
array
 viewed as if it were a different primitive array type, such as
int[]
or
long[]
.
static
VarHandle
MethodHandles.
byteBufferViewVarHandle
(
Class
<?> viewArrayClass,
ByteOrder
byteOrder)
Produces a VarHandle giving access to elements of a
ByteBuffer
viewed as if it were an array of elements of a different primitive
 component type to that of
byte
, such as
int[]
or
long[]
.
static
MethodType
MethodType.
fromMethodDescriptorString
(
String
descriptor,
ClassLoader
loader)
Finds or creates an instance of a method type of the given method descriptor
 (JVMS
4.3.3
).
Uses of
IllegalArgumentException
in
java.lang.management
Constructors in
java.lang.management
that throw
IllegalArgumentException
Modifier
Constructor
Description
ManagementPermission
(
String
name,
String
actions)
Constructs a new ManagementPermission object.
Uses of
IllegalArgumentException
in
java.lang.reflect
Methods in
java.lang.reflect
that throw
IllegalArgumentException
Modifier and Type
Method
Description
static
Object
Array.
get
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object.
Object
Field.
get
(
Object
obj)
Returns the value of the field represented by this
Field
, on
 the specified object.
static boolean
Array.
getBoolean
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object, as a
boolean
.
boolean
Field.
getBoolean
(
Object
obj)
Gets the value of a static or instance
boolean
field.
static byte
Array.
getByte
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object, as a
byte
.
byte
Field.
getByte
(
Object
obj)
Gets the value of a static or instance
byte
field.
static char
Array.
getChar
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object, as a
char
.
char
Field.
getChar
(
Object
obj)
Gets the value of a static or instance field of type
char
or of another primitive type convertible to
 type
char
via a widening conversion.
static double
Array.
getDouble
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object, as a
double
.
double
Field.
getDouble
(
Object
obj)
Gets the value of a static or instance field of type
double
or of another primitive type convertible to
 type
double
via a widening conversion.
static float
Array.
getFloat
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object, as a
float
.
float
Field.
getFloat
(
Object
obj)
Gets the value of a static or instance field of type
float
or of another primitive type convertible to
 type
float
via a widening conversion.
static int
Array.
getInt
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object, as an
int
.
int
Field.
getInt
(
Object
obj)
Gets the value of a static or instance field of type
int
or of another primitive type convertible to
 type
int
via a widening conversion.
static
InvocationHandler
Proxy.
getInvocationHandler
(
Object
proxy)
Returns the invocation handler for the specified proxy instance.
static int
Array.
getLength
(
Object
array)
Returns the length of the specified array object, as an
int
.
static long
Array.
getLong
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object, as a
long
.
long
Field.
getLong
(
Object
obj)
Gets the value of a static or instance field of type
long
or of another primitive type convertible to
 type
long
via a widening conversion.
static
Class
<?>
Proxy.
getProxyClass
(
ClassLoader
loader,
Class
<?>... interfaces)
Deprecated.
Proxy classes generated in a named module are encapsulated
      and not accessible to code outside its module.
static short
Array.
getShort
(
Object
array,
 int index)
Returns the value of the indexed component in the specified
 array object, as a
short
.
short
Field.
getShort
(
Object
obj)
Gets the value of a static or instance field of type
short
or of another primitive type convertible to
 type
short
via a widening conversion.
static
Object
Array.
newInstance
(
Class
<?> componentType,
 int... dimensions)
Creates a new array
 with the specified component type and dimensions.
T
Constructor.
newInstance
(
Object
... initargs)
Uses the constructor represented by this
Constructor
object to
 create and initialize a new instance of the constructor's
 declaring class, with the specified initialization parameters.
static void
Array.
set
(
Object
array,
 int index,
Object
value)
Sets the value of the indexed component of the specified array
 object to the specified new value.
void
Field.
set
(
Object
obj,
Object
value)
Sets the field represented by this
Field
object on the
 specified object argument to the specified new value.
static void
Array.
setBoolean
(
Object
array,
 int index,
 boolean z)
Sets the value of the indexed component of the specified array
 object to the specified
boolean
value.
void
Field.
setBoolean
(
Object
obj,
 boolean z)
Sets the value of a field as a
boolean
on the specified object.
static void
Array.
setByte
(
Object
array,
 int index,
 byte b)
Sets the value of the indexed component of the specified array
 object to the specified
byte
value.
void
Field.
setByte
(
Object
obj,
 byte b)
Sets the value of a field as a
byte
on the specified object.
static void
Array.
setChar
(
Object
array,
 int index,
 char c)
Sets the value of the indexed component of the specified array
 object to the specified
char
value.
void
Field.
setChar
(
Object
obj,
 char c)
Sets the value of a field as a
char
on the specified object.
static void
Array.
setDouble
(
Object
array,
 int index,
 double d)
Sets the value of the indexed component of the specified array
 object to the specified
double
value.
void
Field.
setDouble
(
Object
obj,
 double d)
Sets the value of a field as a
double
on the specified object.
static void
Array.
setFloat
(
Object
array,
 int index,
 float f)
Sets the value of the indexed component of the specified array
 object to the specified
float
value.
void
Field.
setFloat
(
Object
obj,
 float f)
Sets the value of a field as a
float
on the specified object.
static void
Array.
setInt
(
Object
array,
 int index,
 int i)
Sets the value of the indexed component of the specified array
 object to the specified
int
value.
void
Field.
setInt
(
Object
obj,
 int i)
Sets the value of a field as an
int
on the specified object.
static void
Array.
setLong
(
Object
array,
 int index,
 long l)
Sets the value of the indexed component of the specified array
 object to the specified
long
value.
void
Field.
setLong
(
Object
obj,
 long l)
Sets the value of a field as a
long
on the specified object.
static void
Array.
setShort
(
Object
array,
 int index,
 short s)
Sets the value of the indexed component of the specified array
 object to the specified
short
value.
void
Field.
setShort
(
Object
obj,
 short s)
Sets the value of a field as a
short
on the specified object.
Uses of
IllegalArgumentException
in
java.nio.channels
Subclasses of
IllegalArgumentException
in
java.nio.channels
Modifier and Type
Class
Description
class
IllegalChannelGroupException
Unchecked exception thrown when an attempt is made to open a channel
 in a group that was not created by the same provider.
class
IllegalSelectorException
Unchecked exception thrown when an attempt is made to register a channel
 with a selector that was not created by the provider that created the
 channel.
class
UnresolvedAddressException
Unchecked exception thrown when an attempt is made to invoke a network
 operation upon an unresolved socket address.
class
UnsupportedAddressTypeException
Unchecked exception thrown when an attempt is made to bind or connect
 to a socket address of a type that is not supported.
Uses of
IllegalArgumentException
in
java.nio.charset
Subclasses of
IllegalArgumentException
in
java.nio.charset
Modifier and Type
Class
Description
class
IllegalCharsetNameException
Unchecked exception thrown when a string that is not a
legal charset name
is used as such.
class
UnsupportedCharsetException
Unchecked exception thrown when no support is available
 for a requested charset.
Uses of
IllegalArgumentException
in
java.nio.file
Subclasses of
IllegalArgumentException
in
java.nio.file
Modifier and Type
Class
Description
class
InvalidPathException
Unchecked exception thrown when path string cannot be converted into a
Path
because the path string contains invalid characters, or
 the path string is invalid for other file system specific reasons.
class
ProviderMismatchException
Unchecked exception thrown when an attempt is made to invoke a method on an
 object created by one file system provider with a parameter created by a
 different file system provider.
Uses of
IllegalArgumentException
in
java.security
Subclasses of
IllegalArgumentException
in
java.security
Modifier and Type
Class
Description
class
InvalidParameterException
This exception, designed for use by the JCA/JCE engine classes,
 is thrown when an invalid parameter is passed
 to a method.
Uses of
IllegalArgumentException
in
java.util
Subclasses of
IllegalArgumentException
in
java.util
Modifier and Type
Class
Description
class
DuplicateFormatFlagsException
Unchecked exception thrown when duplicate flags are provided in the format
 specifier.
class
FormatFlagsConversionMismatchException
Unchecked exception thrown when a conversion and flag are incompatible.
class
IllegalFormatCodePointException
Unchecked exception thrown when a character with an invalid Unicode code
 point as defined by
Character.isValidCodePoint(int)
is passed to the
Formatter
.
class
IllegalFormatConversionException
Unchecked exception thrown when the argument corresponding to the format
 specifier is of an incompatible type.
class
IllegalFormatException
Unchecked exception thrown when a format string contains an illegal syntax
 or a format specifier that is incompatible with the given arguments.
class
IllegalFormatFlagsException
Unchecked exception thrown when an illegal combination flags is given.
class
IllegalFormatPrecisionException
Unchecked exception thrown when the precision is a negative value other than
-1
, the conversion does not support a precision, or the value is
 otherwise unsupported.
class
IllegalFormatWidthException
Unchecked exception thrown when the format width is a negative value other
 than
-1
or is otherwise unsupported.
class
MissingFormatArgumentException
Unchecked exception thrown when there is a format specifier which does not
 have a corresponding argument or if an argument index refers to an argument
 that does not exist.
class
MissingFormatWidthException
Unchecked exception thrown when the format width is required.
class
UnknownFormatConversionException
Unchecked exception thrown when an unknown conversion is given.
class
UnknownFormatFlagsException
Unchecked exception thrown when an unknown flag is given.
Constructors in
java.util
that throw
IllegalArgumentException
Modifier
Constructor
Description
DoubleSummaryStatistics
(long count,
 double min,
 double max,
 double sum)
Constructs a non-empty instance with the specified
count
,
min
,
max
, and
sum
.
IntSummaryStatistics
(long count,
 int min,
 int max,
 long sum)
Constructs a non-empty instance with the specified
count
,
min
,
max
, and
sum
.
LongSummaryStatistics
(long count,
 long min,
 long max,
 long sum)
Constructs a non-empty instance with the specified
count
,
min
,
max
, and
sum
.
Uses of
IllegalArgumentException
in
java.util.logging
Methods in
java.util.logging
that throw
IllegalArgumentException
Modifier and Type
Method
Description
static
Level
Level.
parse
(
String
name)
Parse a level name string into a Level.
Constructors in
java.util.logging
that throw
IllegalArgumentException
Modifier
Constructor
Description
LoggingPermission
(
String
name,
String
actions)
Creates a new LoggingPermission object.
Uses of
IllegalArgumentException
in
java.util.regex
Subclasses of
IllegalArgumentException
in
java.util.regex
Modifier and Type
Class
Description
class
PatternSyntaxException
Unchecked exception thrown to indicate a syntax error in a
 regular-expression pattern.
Uses of
IllegalArgumentException
in
javax.management
Methods in
javax.management
that throw
IllegalArgumentException
Modifier and Type
Method
Description
void
MBeanServerDelegate.
addNotificationListener
(
NotificationListener
listener,
NotificationFilter
filter,
Object
handback)
void
NotificationBroadcaster.
addNotificationListener
(
NotificationListener
listener,
NotificationFilter
filter,
Object
handback)
Adds a listener to this MBean.
void
AttributeChangeNotificationFilter.
enableAttribute
(
String
name)
Enables all the attribute change notifications the attribute name of which equals
 the specified name to be sent to the listener.
void
NotificationFilterSupport.
enableType
(
String
prefix)
Enables all the notifications the type of which starts with the specified prefix
 to be sent to the listener.
Constructors in
javax.management
that throw
IllegalArgumentException
Modifier
Constructor
Description
MBeanInfo
(
String
className,
String
description,
MBeanAttributeInfo
[] attributes,
MBeanConstructorInfo
[] constructors,
MBeanOperationInfo
[] operations,
MBeanNotificationInfo
[] notifications)
Constructs an
MBeanInfo
.
MBeanInfo
(
String
className,
String
description,
MBeanAttributeInfo
[] attributes,
MBeanConstructorInfo
[] constructors,
MBeanOperationInfo
[] operations,
MBeanNotificationInfo
[] notifications,
Descriptor
descriptor)
Constructs an
MBeanInfo
.
Uses of
IllegalArgumentException
in
javax.management.modelmbean
Methods in
javax.management.modelmbean
that throw
IllegalArgumentException
Modifier and Type
Method
Description
void
ModelMBeanNotificationBroadcaster.
addAttributeChangeNotificationListener
(
NotificationListener
listener,
String
attributeName,
Object
handback)
Registers an object which implements the NotificationListener interface as a listener.
void
RequiredModelMBean.
addAttributeChangeNotificationListener
(
NotificationListener
inlistener,
String
inAttributeName,
Object
inhandback)
void
RequiredModelMBean.
addNotificationListener
(
NotificationListener
listener,
NotificationFilter
filter,
Object
handback)
Registers an object which implements the NotificationListener
 interface as a listener.
Uses of
IllegalArgumentException
in
javax.management.monitor
Methods in
javax.management.monitor
that throw
IllegalArgumentException
Modifier and Type
Method
Description
void
Monitor.
addObservedObject
(
ObjectName
object)
Adds the specified object in the set of observed MBeans, if this object
 is not already present.
void
MonitorMBean.
addObservedObject
(
ObjectName
object)
Adds the specified object in the set of observed MBeans.
void
Monitor.
setGranularityPeriod
(long period)
Sets the granularity period (in milliseconds).
void
MonitorMBean.
setGranularityPeriod
(long period)
Sets the granularity period (in milliseconds).
void
CounterMonitor.
setInitThreshold
(
Number
value)
Sets the initial threshold value common to all observed objects.
void
CounterMonitorMBean.
setInitThreshold
(
Number
value)
Sets the initial threshold value common to all observed MBeans.
void
CounterMonitor.
setModulus
(
Number
value)
Sets the modulus value common to all observed MBeans.
void
CounterMonitorMBean.
setModulus
(
Number
value)
Sets the modulus value.
void
Monitor.
setObservedAttribute
(
String
attribute)
Sets the attribute to observe.
void
Monitor.
setObservedObject
(
ObjectName
object)
Deprecated.
As of JMX 1.2, replaced by
Monitor.addObservedObject(javax.management.ObjectName)
void
CounterMonitor.
setOffset
(
Number
value)
Sets the offset value common to all observed MBeans.
void
CounterMonitorMBean.
setOffset
(
Number
value)
Sets the offset value.
void
StringMonitor.
setStringToCompare
(
String
value)
Sets the string to compare with the observed attribute common
 to all observed MBeans.
void
StringMonitorMBean.
setStringToCompare
(
String
value)
Sets the string to compare with the observed attribute.
void
CounterMonitor.
setThreshold
(
Number
value)
Deprecated.
As of JMX 1.2, replaced by
CounterMonitor.setInitThreshold(java.lang.Number)
void
CounterMonitorMBean.
setThreshold
(
Number
value)
Deprecated.
As of JMX 1.2, replaced by
CounterMonitorMBean.setInitThreshold(java.lang.Number)
void
GaugeMonitor.
setThresholds
(
Number
highValue,
Number
lowValue)
Sets the high and the low threshold values common to all
 observed MBeans.
void
GaugeMonitorMBean.
setThresholds
(
Number
highValue,
Number
lowValue)
Sets the high and the low threshold values.
Uses of
IllegalArgumentException
in
javax.management.openmbean
Subclasses of
IllegalArgumentException
in
javax.management.openmbean
Modifier and Type
Class
Description
class
InvalidKeyException
This runtime exception is thrown to indicate that a method parameter which was expected to be
 an item name of a
composite data
or a row index of a
tabular data
is not valid.
class
InvalidOpenTypeException
This runtime exception is thrown to indicate that the
open type
of an
open data
value
 is not the one expected.
class
KeyAlreadyExistsException
This runtime exception is thrown to indicate that the index of a row to be added to a
tabular data
instance
 is already used to refer to another row in this
tabular data
instance.
Uses of
IllegalArgumentException
in
javax.management.relation
Methods in
javax.management.relation
that throw
IllegalArgumentException
Modifier and Type
Method
Description
void
RoleList.
add
(int index,
Role
role)
Inserts the role specified as an element at the position specified.
void
RoleList.
add
(
Role
role)
Adds the Role specified as the last element of the list.
void
RoleUnresolvedList.
add
(int index,
RoleUnresolved
role)
Inserts the unresolved role specified as an element at the position
 specified.
void
RoleUnresolvedList.
add
(
RoleUnresolved
role)
Adds the RoleUnresolved specified as the last element of the list.
boolean
RoleList.
addAll
(int index,
RoleList
roleList)
Inserts all of the elements in the RoleList specified into this
 list, starting at the specified position, in the order in which they are
 returned by the Iterator of the RoleList specified.
boolean
RoleUnresolvedList.
addAll
(int index,
RoleUnresolvedList
roleList)
Inserts all of the elements in the RoleUnresolvedList specified into
 this list, starting at the specified position, in the order in which
 they are returned by the Iterator of the RoleUnresolvedList specified.
void
RelationService.
addRelation
(
ObjectName
relationObjectName)
Adds an MBean created by the user (and registered by him in the MBean
 Server) as a relation in the Relation Service.
void
RelationServiceMBean.
addRelation
(
ObjectName
relationObjectName)
Adds an MBean created by the user (and registered by him in the MBean
 Server) as a relation in the Relation Service.
void
RelationService.
addRelationType
(
RelationType
relationTypeObj)
Adds given object as a relation type.
void
RelationServiceMBean.
addRelationType
(
RelationType
relationTypeObj)
Adds given object as a relation type.
protected void
RelationTypeSupport.
addRoleInfo
(
RoleInfo
roleInfo)
Add a role info.
Integer
RelationService.
checkRoleReading
(
String
roleName,
String
relationTypeName)
Checks if given Role can be read in a relation of the given type.
Integer
RelationServiceMBean.
checkRoleReading
(
String
roleName,
String
relationTypeName)
Checks if given Role can be read in a relation of the given type.
Integer
RelationService.
checkRoleWriting
(
Role
role,
String
relationTypeName,
Boolean
initFlag)
Checks if given Role can be set in a relation of given type.
Integer
RelationServiceMBean.
checkRoleWriting
(
Role
role,
String
relationTypeName,
Boolean
initFlag)
Checks if given Role can be set in a relation of given type.
void
RelationService.
createRelation
(
String
relationId,
String
relationTypeName,
RoleList
roleList)
Creates a simple relation (represented by a RelationSupport object) of
 given relation type, and adds it in the Relation Service.
void
RelationServiceMBean.
createRelation
(
String
relationId,
String
relationTypeName,
RoleList
roleList)
Creates a simple relation (represented by a RelationSupport object) of
 given relation type, and adds it in the Relation Service.
void
RelationService.
createRelationType
(
String
relationTypeName,
RoleInfo
[] roleInfoArray)
Creates a relation type (a RelationTypeSupport object) with given
 role infos (provided by the RoleInfo objects), and adds it in the
 Relation Service.
void
RelationServiceMBean.
createRelationType
(
String
relationTypeName,
RoleInfo
[] roleInfoArray)
Creates a relation type (RelationTypeSupport object) with given
 role infos (provided by the RoleInfo objects), and adds it in the
 Relation Service.
void
MBeanServerNotificationFilter.
disableObjectName
(
ObjectName
objectName)
Disables MBeanServerNotifications concerning given ObjectName.
void
MBeanServerNotificationFilter.
enableObjectName
(
ObjectName
objectName)
Enables MBeanServerNotifications concerning given ObjectName.
Map
<
ObjectName
,
List
<
String
>>
RelationService.
findAssociatedMBeans
(
ObjectName
mbeanName,
String
relationTypeName,
String
roleName)
Retrieves the MBeans associated to given one in a relation.
Map
<
ObjectName
,
List
<
String
>>
RelationServiceMBean.
findAssociatedMBeans
(
ObjectName
mbeanName,
String
relationTypeName,
String
roleName)
Retrieves the MBeans associated to given one in a relation.
Map
<
String
,
List
<
String
>>
RelationService.
findReferencingRelations
(
ObjectName
mbeanName,
String
relationTypeName,
String
roleName)
Retrieves the relations where a given MBean is referenced.
Map
<
String
,
List
<
String
>>
RelationServiceMBean.
findReferencingRelations
(
ObjectName
mbeanName,
String
relationTypeName,
String
roleName)
Retrieves the relations where a given MBean is referenced.
List
<
String
>
RelationService.
findRelationsOfType
(
String
relationTypeName)
Returns the relation ids for relations of the given type.
List
<
String
>
RelationServiceMBean.
findRelationsOfType
(
String
relationTypeName)
Returns the relation ids for relations of the given type.
RoleResult
RelationService.
getAllRoles
(
String
relationId)
Returns all roles present in the relation.
RoleResult
RelationServiceMBean.
getAllRoles
(
String
relationId)
Returns all roles present in the relation.
Map
<
ObjectName
,
List
<
String
>>
RelationService.
getReferencedMBeans
(
String
relationId)
Retrieves MBeans referenced in the various roles of the relation.
Map
<
ObjectName
,
List
<
String
>>
RelationServiceMBean.
getReferencedMBeans
(
String
relationId)
Retrieves MBeans referenced in the various roles of the relation.
String
RelationService.
getRelationTypeName
(
String
relationId)
Returns name of associated relation type for given relation.
String
RelationServiceMBean.
getRelationTypeName
(
String
relationId)
Returns name of associated relation type for given relation.
List
<
ObjectName
>
Relation.
getRole
(
String
roleName)
Retrieves role value for given role name.
List
<
ObjectName
>
RelationService.
getRole
(
String
relationId,
String
roleName)
Retrieves role value for given role name in given relation.
List
<
ObjectName
>
RelationServiceMBean.
getRole
(
String
relationId,
String
roleName)
Retrieves role value for given role name in given relation.
List
<
ObjectName
>
RelationSupport.
getRole
(
String
roleName)
Retrieves role value for given role name.
Integer
Relation.
getRoleCardinality
(
String
roleName)
Returns the number of MBeans currently referenced in the given role.
Integer
RelationService.
getRoleCardinality
(
String
relationId,
String
roleName)
Retrieves the number of MBeans currently referenced in the given role.
Integer
RelationServiceMBean.
getRoleCardinality
(
String
relationId,
String
roleName)
Retrieves the number of MBeans currently referenced in the
 given role.
Integer
RelationSupport.
getRoleCardinality
(
String
roleName)
Returns the number of MBeans currently referenced in the given role.
RoleInfo
RelationService.
getRoleInfo
(
String
relationTypeName,
String
roleInfoName)
Retrieves role info for given role name of a given relation type.
RoleInfo
RelationServiceMBean.
getRoleInfo
(
String
relationTypeName,
String
roleInfoName)
Retrieves role info for given role of a given relation type.
RoleInfo
RelationType.
getRoleInfo
(
String
roleInfoName)
Returns the role info (RoleInfo object) for the given role info name
 (null if not found).
RoleInfo
RelationTypeSupport.
getRoleInfo
(
String
roleInfoName)
Returns the role info (RoleInfo object) for the given role info name
 (null if not found).
List
<
RoleInfo
>
RelationService.
getRoleInfos
(
String
relationTypeName)
Retrieves list of role infos (RoleInfo objects) of a given relation
 type.
List
<
RoleInfo
>
RelationServiceMBean.
getRoleInfos
(
String
relationTypeName)
Retrieves list of role infos (RoleInfo objects) of a given relation
 type.
RoleResult
Relation.
getRoles
(
String
[] roleNameArray)
Retrieves values of roles with given names.
RoleResult
RelationService.
getRoles
(
String
relationId,
String
[] roleNameArray)
Retrieves values of roles with given names in given relation.
RoleResult
RelationServiceMBean.
getRoles
(
String
relationId,
String
[] roleNameArray)
Retrieves values of roles with given names in given relation.
RoleResult
RelationSupport.
getRoles
(
String
[] roleNameArray)
Retrieves values of roles with given names.
void
Relation.
handleMBeanUnregistration
(
ObjectName
objectName,
String
roleName)
Callback used by the Relation Service when a MBean referenced in a role
 is unregistered.
void
RelationSupport.
handleMBeanUnregistration
(
ObjectName
objectName,
String
roleName)
Callback used by the Relation Service when a MBean referenced in a role
 is unregistered.
Boolean
RelationService.
hasRelation
(
String
relationId)
Checks if there is a relation identified in Relation Service with given
 relation id.
Boolean
RelationServiceMBean.
hasRelation
(
String
relationId)
Checks if there is a relation identified in Relation Service with given
 relation id.
boolean
MBeanServerNotificationFilter.
isNotificationEnabled
(
Notification
notif)
Invoked before sending the specified notification to the listener.
String
RelationService.
isRelation
(
ObjectName
objectName)
Returns the relation id associated to the given ObjectName if the
 MBean has been added as a relation in the Relation Service.
String
RelationServiceMBean.
isRelation
(
ObjectName
objectName)
Returns the relation id associated to the given ObjectName if the
 MBean has been added as a relation in the Relation Service.
ObjectName
RelationService.
isRelationMBean
(
String
relationId)
If the relation is represented by an MBean (created by the user and
 added as a relation in the Relation Service), returns the ObjectName of
 the MBean.
ObjectName
RelationServiceMBean.
isRelationMBean
(
String
relationId)
If the relation is represented by an MBean (created by the user and
 added as a relation in the Relation Service), returns the ObjectName of
 the MBean.
void
RelationService.
removeRelation
(
String
relationId)
Removes given relation from the Relation Service.
void
RelationServiceMBean.
removeRelation
(
String
relationId)
Removes given relation from the Relation Service.
void
RelationService.
removeRelationType
(
String
relationTypeName)
Removes given relation type from Relation Service.
void
RelationServiceMBean.
removeRelationType
(
String
relationTypeName)
Removes given relation type from Relation Service.
static
String
Role.
roleValueToString
(
List
<
ObjectName
> roleValue)
Returns a string for the given role value.
void
RelationService.
sendRelationCreationNotification
(
String
relationId)
Sends a notification (RelationNotification) for a relation creation.
void
RelationServiceMBean.
sendRelationCreationNotification
(
String
relationId)
Sends a notification (RelationNotification) for a relation creation.
void
RelationService.
sendRelationRemovalNotification
(
String
relationId,
List
<
ObjectName
> unregMBeanList)
Sends a notification (RelationNotification) for a relation removal.
void
RelationServiceMBean.
sendRelationRemovalNotification
(
String
relationId,
List
<
ObjectName
> unregMBeanList)
Sends a notification (RelationNotification) for a relation removal.
void
RelationService.
sendRoleUpdateNotification
(
String
relationId,
Role
newRole,
List
<
ObjectName
> oldValue)
Sends a notification (RelationNotification) for a role update in the
 given relation.
void
RelationServiceMBean.
sendRoleUpdateNotification
(
String
relationId,
Role
newRole,
List
<
ObjectName
> oldRoleValue)
Sends a notification (RelationNotification) for a role update in the
 given relation.
void
RoleList.
set
(int index,
Role
role)
Sets the element at the position specified to be the role
 specified.
void
RoleUnresolvedList.
set
(int index,
RoleUnresolved
role)
Sets the element at the position specified to be the unresolved role
 specified.
void
RoleUnresolved.
setProblemType
(int pbType)
Sets problem type.
void
RelationSupport.
setRelationServiceManagementFlag
(
Boolean
flag)
void
RelationSupportMBean.
setRelationServiceManagementFlag
(
Boolean
flag)
Specifies whether this relation is handled by the Relation
 Service.
void
Relation.
setRole
(
Role
role)
Sets the given role.
void
RelationService.
setRole
(
String
relationId,
Role
role)
Sets the given role in given relation.
void
RelationServiceMBean.
setRole
(
String
relationId,
Role
role)
Sets the given role in given relation.
void
RelationSupport.
setRole
(
Role
role)
Sets the given role.
void
Role.
setRoleName
(
String
roleName)
Sets role name.
void
RoleUnresolved.
setRoleName
(
String
name)
Sets role name.
RoleResult
Relation.
setRoles
(
RoleList
roleList)
Sets the given roles.
RoleResult
RelationService.
setRoles
(
String
relationId,
RoleList
roleList)
Sets the given roles in given relation.
RoleResult
RelationServiceMBean.
setRoles
(
String
relationId,
RoleList
roleList)
Sets the given roles in given relation.
RoleResult
RelationSupport.
setRoles
(
RoleList
list)
Sets the given roles.
void
Role.
setRoleValue
(
List
<
ObjectName
> roleValue)
Sets role value.
void
RelationService.
updateRoleMap
(
String
relationId,
Role
newRole,
List
<
ObjectName
> oldValue)
Handles update of the Relation Service role map for the update of given
 role in given relation.
void
RelationServiceMBean.
updateRoleMap
(
String
relationId,
Role
newRole,
List
<
ObjectName
> oldRoleValue)
Handles update of the Relation Service role map for the update of given
 role in given relation.
Constructors in
javax.management.relation
that throw
IllegalArgumentException
Modifier
Constructor
Description
RelationNotification
(
String
notifType,
Object
sourceObj,
 long sequence,
 long timeStamp,
String
message,
String
id,
String
typeName,
ObjectName
objectName,
String
name,
List
<
ObjectName
> newValue,
List
<
ObjectName
> oldValue)
Creates a notification for a role update in a relation.
RelationNotification
(
String
notifType,
Object
sourceObj,
 long sequence,
 long timeStamp,
String
message,
String
id,
String
typeName,
ObjectName
objectName,
List
<
ObjectName
> unregMBeanList)
Creates a notification for either a relation creation (RelationSupport
 object created internally in the Relation Service, or an MBean added as a
 relation) or for a relation removal from the Relation Service.
RelationSupport
(
String
relationId,
ObjectName
relationServiceName,
String
relationTypeName,
RoleList
list)
Creates a
RelationSupport
object.
RelationSupport
(
String
relationId,
ObjectName
relationServiceName,
MBeanServer
relationServiceMBeanServer,
String
relationTypeName,
RoleList
list)
Creates a
RelationSupport
object.
RelationTypeSupport
(
String
relationTypeName,
RoleInfo
[] roleInfoArray)
Constructor where all role definitions are dynamically created and
 passed as parameter.
Role
(
String
roleName,
List
<
ObjectName
> roleValue)
Make a new Role object.
RoleInfo
(
String
roleName,
String
mbeanClassName)
Constructor.
RoleInfo
(
String
roleName,
String
mbeanClassName,
 boolean read,
 boolean write)
Constructor.
RoleInfo
(
String
roleName,
String
mbeanClassName,
 boolean read,
 boolean write,
 int min,
 int max,
String
descr)
Constructor.
RoleInfo
(
RoleInfo
roleInfo)
Copy constructor.
RoleList
(
List
<
Role
> list)
Constructs a
RoleList
containing the elements of the
List
specified, in the order in which they are returned by
 the
List
's iterator.
RoleUnresolved
(
String
name,
List
<
ObjectName
> value,
 int pbType)
Constructor.
RoleUnresolvedList
(
List
<
RoleUnresolved
> list)
Constructs a
RoleUnresolvedList
containing the elements of the
List
specified, in the order in which they are returned by
 the
List
's iterator.
Uses of
IllegalArgumentException
in
javax.management.timer
Methods in
javax.management.timer
that throw
IllegalArgumentException
Modifier and Type
Method
Description
Integer
Timer.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date
 and a null period and number of occurrences.
Integer
Timer.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date
 and period and a null number of occurrences.
Integer
Timer.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period,
 long nbOccurences)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date,
 period and number of occurrences.
Integer
Timer.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period,
 long nbOccurences,
 boolean fixedRate)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date,
 period and number of occurrences.
Integer
TimerMBean.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date
 and a null period and number of occurrences.
Integer
TimerMBean.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date
 and period and a null number of occurrences.
Integer
TimerMBean.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period,
 long nbOccurences)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date,
 period and number of occurrences.
Integer
TimerMBean.
addNotification
(
String
type,
String
message,
Object
userData,
Date
date,
 long period,
 long nbOccurences,
 boolean fixedRate)
Creates a new timer notification with the specified
type
,
message
and
userData
and inserts it into the list of notifications with a given date,
 period and number of occurrences.
Uses of
IllegalArgumentException
in
javax.rmi.ssl
Constructors in
javax.rmi.ssl
that throw
IllegalArgumentException
Modifier
Constructor
Description
SslRMIServerSocketFactory
(
String
[] enabledCipherSuites,
String
[] enabledProtocols,
 boolean needClientAuth)
Creates a new
SslRMIServerSocketFactory
with
 the specified SSL socket configuration.
SslRMIServerSocketFactory
(
SSLContext
context,
String
[] enabledCipherSuites,
String
[] enabledProtocols,
 boolean needClientAuth)
Creates a new
SslRMIServerSocketFactory
with the
 specified
SSLContext
and SSL socket configuration.
Uses of
IllegalArgumentException
in
javax.swing
Methods in
javax.swing
that throw
IllegalArgumentException
Modifier and Type
Method
Description
Popup
PopupFactory.
getPopup
(
Component
owner,
Component
contents,
 int x,
 int y)
Creates a
Popup
for the Component
owner
containing the Component
contents
.
protected
Popup
PopupFactory.
getPopup
(
Component
owner,
Component
contents,
 int x,
 int y,
 boolean isHeavyWeightPopup)
Creates a
Popup
for the Component
owner
containing the Component
contents
.
void
AbstractButton.
setDisplayedMnemonicIndex
(int index)
Provides a hint to the look and feel as to which character in the
 text should be decorated to represent the mnemonic.
void
JLabel.
setDisplayedMnemonicIndex
(int index)
Provides a hint to the look and feel as to which character in the
 text should be decorated to represent the mnemonic.
Uses of
IllegalArgumentException
in
javax.xml.parsers
Methods in
javax.xml.parsers
that throw
IllegalArgumentException
Modifier and Type
Method
Description
abstract
Object
DocumentBuilderFactory.
getAttribute
(
String
name)
Allows the user to retrieve specific attributes on the underlying
 implementation.
abstract void
DocumentBuilderFactory.
setAttribute
(
String
name,
Object
value)
Allows the user to set specific attributes on the underlying
 implementation.
Uses of
IllegalArgumentException
in
javax.xml.stream
Methods in
javax.xml.stream
that throw
IllegalArgumentException
Modifier and Type
Method
Description
Object
XMLEventReader.
getProperty
(
String
name)
Get the value of a feature/property from the underlying implementation
abstract
Object
XMLInputFactory.
getProperty
(
String
name)
Get the value of a feature/property from the underlying implementation
abstract
Object
XMLOutputFactory.
getProperty
(
String
name)
Get a feature/property on the underlying implementation
Object
XMLStreamReader.
getProperty
(
String
name)
Get the value of a feature/property from the underlying implementation
Object
XMLStreamWriter.
getProperty
(
String
name)
Get the value of a feature/property from the underlying implementation
abstract void
XMLInputFactory.
setProperty
(
String
name,
Object
value)
Allows the user to set specific feature/property on the underlying
 implementation.
abstract void
XMLOutputFactory.
setProperty
(
String
name,
Object
value)
Allows the user to set specific features/properties on the underlying implementation.
Uses of
IllegalArgumentException
in
javax.xml.stream.util
Methods in
javax.xml.stream.util
that throw
IllegalArgumentException
Modifier and Type
Method
Description
Object
EventReaderDelegate.
getProperty
(
String
name)
Uses of
IllegalArgumentException
in
javax.xml.transform
Methods in
javax.xml.transform
that throw
IllegalArgumentException
Modifier and Type
Method
Description
abstract
String
Transformer.
getOutputProperty
(
String
name)
Get an output property that is in effect for the transformer.
abstract void
Transformer.
setErrorListener
(
ErrorListener
listener)
Set the error event listener in effect for the transformation.
abstract void
Transformer.
setOutputProperty
(
String
name,
String
value)
Set an output property that will be in effect for the
 transformation.
Uses of
IllegalArgumentException
in
javax.xml.transform.sax
Methods in
javax.xml.transform.sax
that throw
IllegalArgumentException
Modifier and Type
Method
Description
void
TransformerHandler.
setResult
(
Result
result)
Set  the
Result
associated with this
TransformerHandler
to be used for the transformation.
Uses of
IllegalArgumentException
in
jdk.management.jfr
Methods in
jdk.management.jfr
that throw
IllegalArgumentException
Modifier and Type
Method
Description
long
FlightRecorderMXBean.
cloneRecording
(long recordingId,
 boolean stop)
Creates a copy of an existing recording, useful for extracting parts of a
 recording.
Map
<
String
,
String
>
FlightRecorderMXBean.
getRecordingOptions
(long recordingId)
Returns a map that contains the options for the recording with the
 specified ID (for example, the destination file or time span to keep
 recorded data).
Map
<
String
,
String
>
FlightRecorderMXBean.
getRecordingSettings
(long recordingId)
Returns a
Map
that contains the settings for the recording with the specified ID,
 (for example, the event thresholds)
void
FlightRecorderMXBean.
setConfiguration
(long recordingId,
String
contents)
Sets a configuration as a string representation for the recording with the
 specified ID.
void
FlightRecorderMXBean.
setPredefinedConfiguration
(long recordingId,
String
configurationName)
Sets a predefined configuration for the recording with the specified ID.
void
FlightRecorderMXBean.
setRecordingOptions
(long recordingId,
Map
<
String
,
String
> options)
Configures the recording options (for example, destination file and time span
 to keep data).
void
FlightRecorderMXBean.
setRecordingSettings
(long recordingId,
Map
<
String
,
String
> settings)
Sets and replaces all previous settings for the specified recording.
boolean
FlightRecorderMXBean.
stopRecording
(long recordingId)
Stops the running recording with the specified ID.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.