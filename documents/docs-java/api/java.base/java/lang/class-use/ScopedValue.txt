Uses of Class java.lang.ScopedValue (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.ScopedValue
Packages that use
ScopedValue
PREVIEW
Package
Description
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
Uses of
ScopedValue
PREVIEW
in
java.lang
Methods in
java.lang
that return
ScopedValue
PREVIEW
Modifier and Type
Method
Description
static <T>
ScopedValue
PREVIEW
<T>
ScopedValue.
newInstance
()
Creates a scoped value that is initially unbound for all threads.
Methods in
java.lang
with parameters of type
ScopedValue
PREVIEW
Modifier and Type
Method
Description
static <T,
R> R
ScopedValue.
callWhere
(
ScopedValue
PREVIEW
<T> key,
 T value,
Callable
<? extends R> op)
Calls a value-returning operation with a
ScopedValue
bound to a value
 in the current thread.
<T> T
ScopedValue.Carrier.
get
(
ScopedValue
PREVIEW
<T> key)
Returns the value of a
ScopedValue
PREVIEW
in this mapping.
static <T,
R> R
ScopedValue.
getWhere
(
ScopedValue
PREVIEW
<T> key,
 T value,
Supplier
<? extends R> op)
Invokes a supplier of results with a
ScopedValue
bound to a value
 in the current thread.
static <T> void
ScopedValue.
runWhere
(
ScopedValue
PREVIEW
<T> key,
 T value,
Runnable
op)
Run an operation with a
ScopedValue
bound to a value in the current
 thread.
<T>
ScopedValue.Carrier
PREVIEW
ScopedValue.Carrier.
where
(
ScopedValue
PREVIEW
<T> key,
 T value)
Returns a new
Carrier
with the mappings from this carrier plus a
 new mapping from
key
to
value
.
static <T>
ScopedValue.Carrier
PREVIEW
ScopedValue.
where
(
ScopedValue
PREVIEW
<T> key,
 T value)
Creates a new
Carrier
with a single mapping of a
ScopedValue
key
to a value.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.