Uses of Class java.lang.Exception (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.Exception
Packages that use
Exception
Package
Description
com.sun.jdi
This is the core package of the Java Debug
 Interface (JDI), it defines mirrors for values, types, and the target
 VirtualMachine itself - as well bootstrapping facilities.
com.sun.jdi.connect
This package defines connections between the virtual machine
 using the JDI and the target virtual machine.
com.sun.jdi.connect.spi
This package comprises the interfaces and classes used to
 develop new
TransportService
implementations.
com.sun.jdi.request
This package is used to request that a JDI
 event be sent under specified conditions.
com.sun.nio.sctp
A Java API for Stream Control Transport Protocol.
com.sun.tools.attach
Provides the API to attach to a Java virtual machine.
com.sun.tools.javac
This package provides a legacy entry point for the
javac
tool.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.color
Provides classes for color spaces.
java.awt.datatransfer
Provides interfaces and classes for transferring data between and within
 applications.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
java.awt.geom
Provides the Java 2D classes for defining and performing operations on
 objects related to two-dimensional geometry.
java.awt.im.spi
Provides interfaces that enable the development of input methods that can be
 used with any Java runtime environment.
java.awt.image
Provides classes for creating and modifying images.
java.awt.print
Provides classes and interfaces for a general printing API.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.io
Provides for system input and output through data streams,
 serialization and the file system.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.annotation
Provides library support for the Java programming language
 annotation facility.
java.lang.instrument
Provides services that allow Java programming language agents to instrument
 programs running on the Java Virtual Machine (JVM).
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.lang.module
Classes to support module descriptors and creating configurations of modules
 by means of resolution and service binding.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.net
Provides the classes for implementing networking applications.
java.net.http
HTTP Client and WebSocket APIs
java.nio
Defines buffers, which are containers for data, and provides an
 overview of the other NIO packages.
java.nio.channels
Defines channels, which represent connections to entities that are capable of
 performing I/O operations, such as files and sockets; defines selectors, for
 multiplexed, non-blocking I/O operations.
java.nio.charset
Defines charsets, decoders, and encoders, for translating between
 bytes and Unicode characters.
java.nio.file
Defines interfaces and classes for the Java virtual machine to access files,
 file attributes, and file systems.
java.nio.file.attribute
Interfaces and classes providing access to file and file system attributes.
java.rmi
Provides the RMI package.
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
java.security.spec
Provides classes and interfaces for key specifications and algorithm
 parameter specifications.
java.sql
Provides the API for accessing and processing data stored in a
 data source (usually a relational database) using the
 Java programming language.
java.text
Provides classes and interfaces for handling text, dates, numbers,
 and messages in a manner independent of natural languages.
java.time
The main API for dates, times, instants, and durations.
java.time.format
Provides classes to print and parse dates and times.
java.time.temporal
Access to date and time using fields and units, and date time adjusters.
java.time.zone
Support for time-zones and their rules.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.jar
Provides classes for reading and writing the JAR (Java ARchive)
 file format, which is based on the standard ZIP file format with an
 optional manifest file.
java.util.logging
Provides the classes and interfaces of
 the Java 2 platform's core logging facilities.
java.util.prefs
This package allows applications to store and retrieve user and system
 preference and configuration data.
java.util.regex
Classes for matching character sequences against patterns specified
 by regular expressions.
java.util.zip
Provides classes for reading and writing the standard ZIP and GZIP file
 formats.
javax.annotation.processing
Facilities for declaring annotation processors and for
 allowing annotation processors to communicate with an annotation processing
 tool environment.
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
javax.imageio
The main package of the Java Image I/O API.
javax.imageio.metadata
A package of the Java Image I/O API dealing with reading and writing
 metadata.
javax.lang.model
Types and hierarchies of packages comprising a Java language model, a model of the declarations and types of the Java
 programming language.
javax.lang.model.element
Interfaces used to model elements of the Java programming language.
javax.lang.model.type
Interfaces used to model Java programming language types.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.loading
Provides the classes which implement advanced dynamic
        loading.
javax.management.modelmbean
Provides the definition of the ModelMBean classes.
javax.management.monitor
Provides the definition of the monitor classes.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.remote
Interfaces for remote access to
        JMX MBean servers.
javax.management.timer
Provides the definition of the Timer MBean.
javax.naming
Provides the classes and interfaces for accessing naming services.
javax.naming.directory
Extends the
javax.naming
package to provide functionality
for accessing directory services.
javax.naming.ldap
Provides support for LDAPv3 extended operations and controls.
javax.naming.spi
Provides the means for dynamically plugging in support for accessing
naming and directory services through the
javax.naming
and related packages.
javax.net.ssl
Provides classes for the secure socket package.
javax.print
Provides the principal classes and interfaces for the Java Print
 Service API.
javax.print.attribute
Provides classes and interfaces that describe the types of Java Print
 Service attributes and how they can be collected into attribute sets.
javax.script
The scripting API consists of interfaces and classes that define
Java Scripting Engines and provides
a framework for their use in Java applications.
javax.security.auth
This package provides a framework for authentication and
 authorization.
javax.security.auth.callback
This package provides the classes necessary for services
 to interact with applications in order to retrieve
 information (authentication data including usernames
 or passwords, for example) or to display information
 (error and warning messages, for example).
javax.security.auth.login
This package provides a pluggable authentication framework.
javax.security.cert
Provides classes for public key certificates.
javax.security.sasl
Contains class and interfaces for supporting SASL.
javax.smartcardio
Javaâ„¢ Smart Card I/O API.
javax.sound.midi
Provides interfaces and classes for I/O, sequencing, and synthesis of MIDI
 (Musical Instrument Digital Interface) data.
javax.sound.sampled
Provides interfaces and classes for capture, processing, and playback of
 sampled audio data.
javax.sql.rowset
Standard interfaces and base classes for JDBC
RowSet
implementations.
javax.sql.rowset.serial
Provides utility classes to allow serializable mappings between SQL types
 and data types in the Java programming language.
javax.sql.rowset.spi
The standard classes and interfaces that a third party vendor has to
 use in its implementation of a synchronization provider.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
javax.swing.undo
Allows developers to provide support for undo/redo in applications such as
 text editors.
javax.transaction.xa
Provides the API that defines the contract between the transaction manager
 and the resource manager, which allows the transaction manager to enlist
 and delist resource objects (supplied by the resource manager driver) in
 JTA transactions.
javax.xml.catalog
Provides the classes for implementing
XML Catalogs OASIS Standard V1.1, 7 October 2005
.
javax.xml.crypto
Common classes for XML cryptography.
javax.xml.crypto.dsig
Classes for generating and validating XML digital
 signatures.
javax.xml.datatype
Defines XML/Java Type Mappings.
javax.xml.parsers
Provides the classes for processing XML documents with a SAX (Simple API for XML)
 parser or a DOM (Document Object Model) Document builder.
javax.xml.stream
Defines interfaces and classes for the Streaming API for XML (StAX).
javax.xml.transform
Defines the generic APIs for processing transformation instructions,
 and performing a transformation from source to result.
javax.xml.xpath
Provides an
object-model neutral
API for the
 evaluation of XPath expressions and access to the evaluation
 environment.
jdk.dynalink
Contains interfaces and classes that are used to link an
invokedynamic
call site.
jdk.dynalink.beans
Contains the linker for ordinary Java objects.
jdk.dynalink.linker
Contains interfaces and classes needed by language runtimes to implement
 their own language-specific object models and type conversions.
jdk.dynalink.linker.support
Contains classes that make it more convenient for language runtimes to
 implement their own language-specific object models and type conversions
 by providing basic implementations of some classes as well as various
 utilities.
jdk.jshell
Provides interfaces for creating tools, such as a Read-Eval-Print Loop (REPL),
 which interactively evaluate "snippets" of Java programming language code.
jdk.jshell.execution
Provides implementation support for building JShell execution engines.
jdk.jshell.spi
Defines the Service Provider Interface for pluggable JShell execution engines.
jdk.jshell.tool
Provides a mechanism to launch an instance of a Java shell tool.
jdk.security.jarsigner
This package defines APIs for signing jar files.
netscape.javascript
Provides Java code the ability to access the JavaScript engine and the
 HTML DOM in the web browser.
org.ietf.jgss
This package presents a framework that allows application developers to
 make use of security services like authentication, data integrity and
 data confidentiality from a variety of underlying security mechanisms
 like Kerberos, using a unified API.
org.w3c.dom
Provides the interfaces for the Document Object Model (DOM).
org.w3c.dom.events
Provides interfaces for DOM Level 2 Events.
org.w3c.dom.ls
Provides interfaces for DOM Level 3 Load and Save.
org.w3c.dom.ranges
Provides interfaces for DOM Level 2 Range.
org.w3c.dom.xpath
Provides interfaces for DOM Level 3 XPath Specification.
org.xml.sax
Provides the interfaces for the Simple API for XML (SAX).
Uses of
Exception
in
com.sun.jdi
Subclasses of
Exception
in
com.sun.jdi
Modifier and Type
Class
Description
class
AbsentInformationException
Thrown to indicate line number or variable information is not available.
class
ClassNotLoadedException
Thrown to indicate that the requested class has
 not yet been loaded through the appropriate class loader.
class
ClassNotPreparedException
Thrown to indicate that the requested operation cannot be
 completed because the specified class has not yet been prepared.
class
IncompatibleThreadStateException
Thrown to indicate that the requested operation cannot be
 completed while the specified thread is in its current state.
class
InconsistentDebugInfoException
Thrown to indicate that there is an inconistency in the debug
 information provided by the target VM.
class
InternalException
Thrown to indicate that an unexpected internal error has
 occurred.
class
InvalidCodeIndexException
Deprecated.
This exception is no longer thrown
class
InvalidLineNumberException
Deprecated.
This exception is no longer thrown
class
InvalidModuleException
Thrown to indicate that the requested module is invalid
 or became invalid after the module was unloaded.
class
InvalidStackFrameException
Thrown to indicate that the requested operation cannot be
 completed because the specified stack frame is no longer valid.
class
InvalidTypeException
Thrown to indicate a type mismatch in setting the value of a field
 or variable, or in specifying the return value of a method.
class
InvocationException
Thrown to indicate an exception occurred in an invoked method within
 the target VM.
class
NativeMethodException
Thrown to indicate an operation cannot be completed because
 it is not valid for a native method.
class
ObjectCollectedException
Thrown to indicate that the requested operation cannot be
 completed because the specified object has been garbage collected.
class
OpaqueFrameException
Thrown to indicate an operation could not be performed on a frame.
class
VMCannotBeModifiedException
Thrown to indicate that the operation is invalid because it would
 modify the VM and the VM is read-only.
class
VMDisconnectedException
Unchecked exception thrown to indicate that the
 requested operation cannot be
 completed because there is no longer a connection to the target VM.
class
VMMismatchException
Thrown to indicate that the requested operation cannot be
 completed because the mirror from one target VM is being
 combined with a mirror from another target VM.
class
VMOutOfMemoryException
Thrown to indicate that the requested operation cannot be
 completed because the target VM has run out of memory.
Uses of
Exception
in
com.sun.jdi.connect
Subclasses of
Exception
in
com.sun.jdi.connect
Modifier and Type
Class
Description
class
IllegalConnectorArgumentsException
Thrown to indicate an invalid argument or
 inconsistent passed to a
Connector
.
class
TransportTimeoutException
This exception may be thrown as a result of a timeout
 when attaching to a target VM, or waiting to accept a
 connection from a target VM.
class
VMStartException
A target VM was successfully launched, but terminated with an
 error before a connection could be established.
Uses of
Exception
in
com.sun.jdi.connect.spi
Subclasses of
Exception
in
com.sun.jdi.connect.spi
Modifier and Type
Class
Description
class
ClosedConnectionException
This exception may be thrown as a result of an asynchronous
 close of a
Connection
while an I/O operation is
 in progress.
Uses of
Exception
in
com.sun.jdi.request
Subclasses of
Exception
in
com.sun.jdi.request
Modifier and Type
Class
Description
class
DuplicateRequestException
Thrown to indicate a duplicate event request.
class
InvalidRequestStateException
Thrown to indicate that the requested event cannot be modified
 because it is enabled.
Uses of
Exception
in
com.sun.nio.sctp
Subclasses of
Exception
in
com.sun.nio.sctp
Modifier and Type
Class
Description
class
IllegalReceiveException
Unchecked exception thrown when an attempt is made to invoke the
receive
method of
SctpChannel
or
SctpMultiChannel
from a notification handler.
class
IllegalUnbindException
Unchecked exception thrown when an attempt is made to remove an
 address that is not bound to the channel, or remove an address from a
 channel that has only one address bound to it.
class
InvalidStreamException
Unchecked exception thrown when an attempt is made to send a
 message to an invalid stream.
Uses of
Exception
in
com.sun.tools.attach
Subclasses of
Exception
in
com.sun.tools.attach
Modifier and Type
Class
Description
class
AgentInitializationException
The exception thrown when an agent fails to initialize in the target
 Java virtual machine.
class
AgentLoadException
The exception thrown when an agent cannot be loaded into the target
 Java virtual machine.
class
AttachNotSupportedException
Thrown by
VirtualMachine.attach
when attempting to attach to a Java virtual machine
 for which a compatible
AttachProvider
does not exist.
class
AttachOperationFailedException
Exception type to signal that an attach operation failed in the target VM.
Uses of
Exception
in
com.sun.tools.javac
Methods in
com.sun.tools.javac
that throw
Exception
Modifier and Type
Method
Description
static void
Main.
main
(
String
[]Â args)
Main entry point for the launcher.
Uses of
Exception
in
java.awt
Subclasses of
Exception
in
java.awt
Modifier and Type
Class
Description
class
AWTException
Signals that an Abstract Window Toolkit exception has occurred.
class
FontFormatException
Thrown by method createFont in the
Font
class to indicate
 that the specified font is bad.
class
HeadlessException
Thrown when code that is dependent on a keyboard, display, or mouse
 is called in an environment that does not support a keyboard, display,
 or mouse.
class
IllegalComponentStateException
Signals that an AWT component is not in an appropriate state for
 the requested operation.
Uses of
Exception
in
java.awt.color
Subclasses of
Exception
in
java.awt.color
Modifier and Type
Class
Description
class
CMMException
This exception is thrown if the native CMM returns an error.
class
ProfileDataException
This exception is thrown when an error occurs in accessing or processing an
ICC_Profile
object.
Uses of
Exception
in
java.awt.datatransfer
Subclasses of
Exception
in
java.awt.datatransfer
Modifier and Type
Class
Description
class
MimeTypeParseException
A class to encapsulate MimeType parsing related exceptions.
class
UnsupportedFlavorException
Signals that the requested data is not supported in this flavor.
Uses of
Exception
in
java.awt.dnd
Subclasses of
Exception
in
java.awt.dnd
Modifier and Type
Class
Description
class
InvalidDnDOperationException
This exception is thrown by various methods in the java.awt.dnd package.
Uses of
Exception
in
java.awt.event
Methods in
java.awt.event
that return
Exception
Modifier and Type
Method
Description
Exception
InvocationEvent.
getException
()
Returns any Exception caught while executing
 the Runnable's
run()
method.
Uses of
Exception
in
java.awt.geom
Subclasses of
Exception
in
java.awt.geom
Modifier and Type
Class
Description
class
IllegalPathStateException
The
IllegalPathStateException
represents an
 exception that is thrown if an operation is performed on a path
 that is in an illegal state with respect to the particular
 operation being performed, such as appending a path segment
 to a
GeneralPath
without an initial moveto.
class
NoninvertibleTransformException
The
NoninvertibleTransformException
class represents
 an exception that is thrown if an operation is performed requiring
 the inverse of an
AffineTransform
object but the
AffineTransform
is in a non-invertible state.
Uses of
Exception
in
java.awt.im.spi
Methods in
java.awt.im.spi
that throw
Exception
Modifier and Type
Method
Description
InputMethod
InputMethodDescriptor.
createInputMethod
()
Creates a new instance of the corresponding input method.
Uses of
Exception
in
java.awt.image
Subclasses of
Exception
in
java.awt.image
Modifier and Type
Class
Description
class
ImagingOpException
The
ImagingOpException
is thrown if one of the
BufferedImageOp
or
RasterOp
filter methods cannot
 process the image.
class
RasterFormatException
The
RasterFormatException
is thrown if there is
 invalid layout information in the
Raster
.
Uses of
Exception
in
java.awt.print
Subclasses of
Exception
in
java.awt.print
Modifier and Type
Class
Description
class
PrinterAbortException
The
PrinterAbortException
class is a subclass of
PrinterException
and is used to indicate that a user
 or application has terminated the print job while it was in
 the process of printing.
class
PrinterException
The
PrinterException
class and its subclasses are used
 to indicate that an exceptional condition has occurred in the print
 system.
class
PrinterIOException
The
PrinterIOException
class is a subclass of
PrinterException
and is used to indicate that an IO error
 of some sort has occurred while printing.
Uses of
Exception
in
java.beans
Subclasses of
Exception
in
java.beans
Modifier and Type
Class
Description
class
IntrospectionException
Thrown when an exception happens during Introspection.
class
PropertyVetoException
A PropertyVetoException is thrown when a proposed change to a
 property represents an unacceptable value.
Methods in
java.beans
with parameters of type
Exception
Modifier and Type
Method
Description
void
ExceptionListener.
exceptionThrown
(
Exception
e)
This method is called when a recoverable exception has
 been caught.
Methods in
java.beans
that throw
Exception
Modifier and Type
Method
Description
void
Expression.
execute
()
The
execute
method finds a method whose name is the same
 as the
methodName
property, and invokes the method on
 the target.
void
Statement.
execute
()
The
execute
method finds a method whose name is the same
 as the
methodName
property, and invokes the method on
 the target.
Object
Expression.
getValue
()
If the value property of this instance is not already set,
 this method dynamically finds the method with the specified
 methodName on this target with these arguments and calls it.
Uses of
Exception
in
java.io
Subclasses of
Exception
in
java.io
Modifier and Type
Class
Description
class
CharConversionException
Base class for character conversion exceptions.
class
EOFException
Signals that an end of file or end of stream has been reached
 unexpectedly during input.
class
FileNotFoundException
Signals that an attempt to open the file denoted by a specified pathname
 has failed.
class
InterruptedIOException
Signals that an I/O operation has been interrupted.
class
InvalidClassException
Thrown when the Serialization runtime detects one of the following
 problems with a Class.
class
InvalidObjectException
Indicates that one or more deserialized objects failed validation
 tests.
class
IOException
Signals that an I/O exception of some sort has occurred.
class
NotActiveException
Thrown when serialization or deserialization is not active.
class
NotSerializableException
Thrown when an instance is required to have a Serializable interface.
class
ObjectStreamException
Superclass of all exceptions specific to Object Stream classes.
class
OptionalDataException
Exception indicating the failure of an object read operation due to
 unread primitive data, or the end of data belonging to a serialized
 object in the stream.
class
StreamCorruptedException
Thrown when control information that was read from an object stream
 violates internal consistency checks.
class
SyncFailedException
Signals that a sync operation has failed.
class
UncheckedIOException
Wraps an
IOException
with an unchecked exception.
class
UnsupportedEncodingException
The Character Encoding is not supported.
class
UTFDataFormatException
Signals that a malformed string in
modified UTF-8
format has been read in a data
 input stream or by any class that implements the data input
 interface.
class
WriteAbortedException
Signals that one of the ObjectStreamExceptions was thrown during a
 write operation.
Fields in
java.io
declared as
Exception
Modifier and Type
Field
Description
Exception
WriteAbortedException.
detail
Deprecated.
This field predates the general-purpose exception
 chaining facility.
Constructors in
java.io
with parameters of type
Exception
Modifier
Constructor
Description
WriteAbortedException
(
String
s,
Exception
ex)
Constructs a WriteAbortedException with a string describing
 the exception and the exception causing the abort.
Uses of
Exception
in
java.lang
Subclasses of
Exception
in
java.lang
Modifier and Type
Class
Description
class
ArithmeticException
Thrown when an exceptional arithmetic condition has occurred.
class
ArrayIndexOutOfBoundsException
Thrown to indicate that an array has been accessed with an illegal index.
class
ArrayStoreException
Thrown to indicate that an attempt has been made to store the
 wrong type of object into an array of objects.
class
ClassCastException
Thrown to indicate that the code has attempted to cast an object
 to a subclass of which it is not an instance.
class
ClassNotFoundException
Thrown when an application tries to load in a class through its
 string name using:
 
 The
forName
method in class
Class
.
class
CloneNotSupportedException
Thrown to indicate that the
clone
method in class
Object
has been called to clone an object, but that
 the object's class does not implement the
Cloneable
interface.
class
EnumConstantNotPresentException
Thrown when an application tries to access an enum constant by name
 and the enum type contains no constant with the specified name.
class
IllegalAccessException
An IllegalAccessException is thrown when an application tries
 to reflectively create an instance (other than an array),
 set or get a field, or invoke a method, but the currently
 executing method does not have access to the definition of
 the specified class, field, method or constructor.
class
IllegalArgumentException
Thrown to indicate that a method has been passed an illegal or
 inappropriate argument.
class
IllegalCallerException
Thrown to indicate that a method has been called by an inappropriate caller.
class
IllegalMonitorStateException
Thrown to indicate that a thread has attempted to wait on an
 object's monitor or to notify other threads waiting on an object's
 monitor without owning the specified monitor.
class
IllegalStateException
Signals that a method has been invoked at an illegal or
 inappropriate time.
class
IllegalThreadStateException
Thrown to indicate that a thread is not in an appropriate state
 for the requested operation.
class
IndexOutOfBoundsException
Thrown to indicate that an index of some sort (such as to an array, to a
 string, or to a vector) is out of range.
class
InstantiationException
Thrown when an application tries to create an instance of a class
 using the
newInstance
method in class
Class
, but the specified class object cannot be
 instantiated.
class
InterruptedException
Thrown when a thread is waiting, sleeping, or otherwise occupied,
 and the thread is interrupted, either before or during the activity.
class
LayerInstantiationException
Thrown when creating a
module layer
fails.
final class
MatchException
Thrown to indicate an unexpected failure in pattern matching.
class
NegativeArraySizeException
Thrown if an application tries to create an array with negative size.
class
NoSuchFieldException
Signals that the class doesn't have a field of a specified name.
class
NoSuchMethodException
Thrown when a particular method cannot be found.
class
NullPointerException
Thrown when an application attempts to use
null
in a
 case where an object is required.
class
NumberFormatException
Thrown to indicate that the application has attempted to convert
 a string to one of the numeric types, but that the string does not
 have the appropriate format.
class
ReflectiveOperationException
Common superclass of exceptions thrown by reflective operations in
 core reflection.
class
RuntimeException
RuntimeException
is the superclass of those
 exceptions that can be thrown during the normal operation of the
 Java Virtual Machine.
class
SecurityException
Thrown by the security manager to indicate a security violation.
class
StringIndexOutOfBoundsException
Thrown by
String
methods to indicate that an index is either negative
 or greater than the size of the string.
class
TypeNotPresentException
Thrown when an application tries to access a type using a string
 representing the type's name, but no definition for the type with
 the specified name can be found.
class
UnsupportedOperationException
Thrown to indicate that the requested operation is not supported.
final class
WrongThreadException
Thrown to indicate that a method has been called on the wrong thread.
Methods in
java.lang
that throw
Exception
Modifier and Type
Method
Description
<R>Â R
ScopedValue.Carrier.
call
(
Callable
<? extends R>Â op)
Calls a value-returning operation with each scoped value in this mapping bound
 to its value in the current thread.
static <T,
R>Â R
ScopedValue.
callWhere
(
ScopedValue
PREVIEW
<T>Â key,
 TÂ value,
Callable
<? extends R>Â op)
Calls a value-returning operation with a
ScopedValue
bound to a value
 in the current thread.
void
AutoCloseable.
close
()
Closes this resource, relinquishing any underlying resources.
Uses of
Exception
in
java.lang.annotation
Subclasses of
Exception
in
java.lang.annotation
Modifier and Type
Class
Description
class
AnnotationTypeMismatchException
Thrown to indicate that a program has attempted to access an element of
 an annotation whose type has changed after the annotation was compiled
 (or serialized).
class
IncompleteAnnotationException
Thrown to indicate that a program has attempted to access an element of
 an annotation interface that was added to the annotation interface definition
 after the annotation was compiled (or serialized).
Uses of
Exception
in
java.lang.instrument
Subclasses of
Exception
in
java.lang.instrument
Modifier and Type
Class
Description
class
IllegalClassFormatException
Thrown by an implementation of
ClassFileTransformer.transform
when its input parameters are invalid.
class
UnmodifiableClassException
Thrown by an implementation of
Instrumentation.redefineClasses
when one of the specified classes cannot be modified.
class
UnmodifiableModuleException
Thrown to indicate that a module cannot be modified.
Uses of
Exception
in
java.lang.invoke
Subclasses of
Exception
in
java.lang.invoke
Modifier and Type
Class
Description
class
LambdaConversionException
LambdaConversionException
class
StringConcatException
StringConcatException is thrown by
StringConcatFactory
when linkage
 invariants are violated.
class
WrongMethodTypeException
Thrown to indicate that code has attempted to call a method handle
 via the wrong method type.
Uses of
Exception
in
java.lang.module
Subclasses of
Exception
in
java.lang.module
Modifier and Type
Class
Description
class
FindException
Thrown by a
ModuleFinder
when an error occurs finding
 a module.
class
InvalidModuleDescriptorException
Thrown when reading a module descriptor and the module descriptor is found
 to be malformed or otherwise cannot be interpreted as a module descriptor.
class
ResolutionException
Thrown when resolving a set of modules, or resolving a set of modules with
 service binding, fails.
Uses of
Exception
in
java.lang.reflect
Subclasses of
Exception
in
java.lang.reflect
Modifier and Type
Class
Description
class
InaccessibleObjectException
Thrown when Java language access checks cannot be suppressed.
class
InvocationTargetException
InvocationTargetException is a checked exception that wraps
 an exception thrown by an invoked method or constructor.
class
MalformedParameterizedTypeException
Thrown when a semantically malformed parameterized type is
 encountered by a reflective method that needs to instantiate it.
class
MalformedParametersException
Thrown when
the
 java.lang.reflect package
attempts to read method parameters from
 a class file and determines that one or more parameters are
 malformed.
class
UndeclaredThrowableException
Thrown by a method invocation on a proxy instance if its invocation
 handler's
invoke
method throws a
 checked exception (a
Throwable
that is not assignable
 to
RuntimeException
or
Error
) that
 is not assignable to any of the exception types declared in the
throws
clause of the method that was invoked on the
 proxy instance and dispatched to the invocation handler.
Uses of
Exception
in
java.net
Subclasses of
Exception
in
java.net
Modifier and Type
Class
Description
class
BindException
Signals that an error occurred while attempting to bind a
 socket to a local address and port.
class
ConnectException
Signals that an error occurred while attempting to connect a
 socket to a remote address and port.
class
HttpRetryException
Thrown to indicate that a HTTP request needs to be retried
 but cannot be retried automatically, due to streaming mode
 being enabled.
class
MalformedURLException
Thrown to indicate that a malformed URL has occurred.
class
NoRouteToHostException
Signals that an error occurred while attempting to connect a
 socket to a remote address and port.
class
PortUnreachableException
Signals that an ICMP Port Unreachable message has been
 received on a connected datagram.
class
ProtocolException
Thrown to indicate that there is an error in the underlying
 protocol, such as a TCP error.
class
SocketException
Thrown to indicate that there is an error creating or accessing a Socket.
class
SocketTimeoutException
Signals that a timeout has occurred on a socket read or accept.
class
UnknownHostException
Thrown to indicate that the IP address of a host could not be determined.
class
UnknownServiceException
Thrown to indicate that an unknown service exception has
 occurred.
class
URISyntaxException
Checked exception thrown to indicate that a string could not be parsed as a
 URI reference.
Uses of
Exception
in
java.net.http
Subclasses of
Exception
in
java.net.http
Modifier and Type
Class
Description
class
HttpConnectTimeoutException
Thrown when a connection, over which an
HttpRequest
is intended to be
 sent, is not successfully established within a specified time period.
class
HttpTimeoutException
Thrown when a response is not received within a specified time period.
final class
WebSocketHandshakeException
Thrown when the opening handshake has failed.
Uses of
Exception
in
java.nio
Subclasses of
Exception
in
java.nio
Modifier and Type
Class
Description
class
BufferOverflowException
Unchecked exception thrown when a relative
put
operation reaches
 the target buffer's limit.
class
BufferUnderflowException
Unchecked exception thrown when a relative
get
operation reaches
 the source buffer's limit.
class
InvalidMarkException
Unchecked exception thrown when an attempt is made to reset a buffer
 when its mark is not defined.
class
ReadOnlyBufferException
Unchecked exception thrown when a content-mutation method such as
put
or
compact
is invoked upon a read-only buffer.
Uses of
Exception
in
java.nio.channels
Subclasses of
Exception
in
java.nio.channels
Modifier and Type
Class
Description
class
AcceptPendingException
Unchecked exception thrown when an attempt is made to initiate an accept
 operation on a channel and a previous accept operation has not completed.
class
AlreadyBoundException
Unchecked exception thrown when an attempt is made to bind the socket a
 network oriented channel that is already bound.
class
AlreadyConnectedException
Unchecked exception thrown when an attempt is made to connect a
SocketChannel
that is already connected.
class
AsynchronousCloseException
Checked exception received by a thread when another thread closes the
 channel or the part of the channel upon which it is blocked in an I/O
 operation.
class
CancelledKeyException
Unchecked exception thrown when an attempt is made to use
 a selection key that is no longer valid.
class
ClosedByInterruptException
Checked exception received by a thread when another thread interrupts it
 while it is blocked in an I/O operation upon a channel.
class
ClosedChannelException
Checked exception thrown when an attempt is made to invoke or complete an
 I/O operation upon channel that is closed, or at least closed to that
 operation.
class
ClosedSelectorException
Unchecked exception thrown when an attempt is made to invoke an I/O
 operation upon a closed selector.
class
ConnectionPendingException
Unchecked exception thrown when an attempt is made to connect a
SocketChannel
for which a non-blocking connection operation is already in
 progress.
class
FileLockInterruptionException
Checked exception received by a thread when another thread interrupts it
 while it is waiting to acquire a file lock.
class
IllegalBlockingModeException
Unchecked exception thrown when a blocking-mode-specific operation
 is invoked upon a channel in the incorrect blocking mode.
class
IllegalChannelGroupException
Unchecked exception thrown when an attempt is made to open a channel
 in a group that was not created by the same provider.
class
IllegalSelectorException
Unchecked exception thrown when an attempt is made to register a channel
 with a selector that was not created by the provider that created the
 channel.
class
InterruptedByTimeoutException
Checked exception received by a thread when a timeout elapses before an
 asynchronous operation completes.
class
NoConnectionPendingException
Unchecked exception thrown when the
finishConnect
method of a
SocketChannel
is invoked without first
 successfully invoking its
connect
method.
class
NonReadableChannelException
Unchecked exception thrown when an attempt is made to read
 from a channel that was not originally opened for reading.
class
NonWritableChannelException
Unchecked exception thrown when an attempt is made to write
 to a channel that was not originally opened for writing.
class
NotYetBoundException
Unchecked exception thrown when an attempt is made to invoke an I/O
 operation upon a server socket channel that is not yet bound.
class
NotYetConnectedException
Unchecked exception thrown when an attempt is made to invoke an I/O
 operation upon a socket channel that is not yet connected.
class
OverlappingFileLockException
Unchecked exception thrown when an attempt is made to acquire a lock on a
 region of a file that overlaps a region already locked by the same Java
 virtual machine, or when another thread is already waiting to lock an
 overlapping region of the same file.
class
ReadPendingException
Unchecked exception thrown when an attempt is made to read from an
 asynchronous socket channel and a previous read has not completed.
class
ShutdownChannelGroupException
Unchecked exception thrown when an attempt is made to construct a channel in 
 a group that is shutdown or the completion handler for an I/O operation 
 cannot be invoked because the channel group has terminated.
class
UnresolvedAddressException
Unchecked exception thrown when an attempt is made to invoke a network
 operation upon an unresolved socket address.
class
UnsupportedAddressTypeException
Unchecked exception thrown when an attempt is made to bind or connect
 to a socket address of a type that is not supported.
class
WritePendingException
Unchecked exception thrown when an attempt is made to write to an
 asynchronous socket channel and a previous write has not completed.
Uses of
Exception
in
java.nio.charset
Subclasses of
Exception
in
java.nio.charset
Modifier and Type
Class
Description
class
CharacterCodingException
Checked exception thrown when a character encoding
 or decoding error occurs.
class
IllegalCharsetNameException
Unchecked exception thrown when a string that is not a
legal charset name
is used as such.
class
MalformedInputException
Checked exception thrown when an input byte sequence is not legal for given
 charset, or an input character sequence is not a legal sixteen-bit Unicode
 sequence.
class
UnmappableCharacterException
Checked exception thrown when an input character (or byte) sequence
 is valid but cannot be mapped to an output byte (or character)
 sequence.
class
UnsupportedCharsetException
Unchecked exception thrown when no support is available
 for a requested charset.
Constructors in
java.nio.charset
with parameters of type
Exception
Modifier
Constructor
Description
CoderMalfunctionError
(
Exception
cause)
Initializes an instance of this class.
Uses of
Exception
in
java.nio.file
Subclasses of
Exception
in
java.nio.file
Modifier and Type
Class
Description
class
AccessDeniedException
Checked exception thrown when a file system operation is denied, typically
 due to a file permission or other access check.
class
AtomicMoveNotSupportedException
Checked exception thrown when a file cannot be moved as an atomic file system
 operation.
class
ClosedDirectoryStreamException
Unchecked exception thrown when an attempt is made to invoke an operation on
 a directory stream that is closed.
class
ClosedFileSystemException
Unchecked exception thrown when an attempt is made to invoke an operation on
 a file and the file system is closed.
class
ClosedWatchServiceException
Unchecked exception thrown when an attempt is made to invoke an operation on
 a watch service that is closed.
final class
DirectoryIteratorException
Runtime exception thrown if an I/O error is encountered when iterating over
 the entries in a directory.
class
DirectoryNotEmptyException
Checked exception thrown when a file system operation fails because a
 directory is not empty.
class
FileAlreadyExistsException
Checked exception thrown when an attempt is made to create a file or
 directory and a file of that name already exists.
class
FileSystemAlreadyExistsException
Runtime exception thrown when an attempt is made to create a file system that
 already exists.
class
FileSystemException
Thrown when a file system operation fails on one or two files.
class
FileSystemLoopException
Checked exception thrown when a file system loop, or cycle, is encountered.
class
FileSystemNotFoundException
Runtime exception thrown when a file system cannot be found.
class
InvalidPathException
Unchecked exception thrown when path string cannot be converted into a
Path
because the path string contains invalid characters, or
 the path string is invalid for other file system specific reasons.
class
NoSuchFileException
Checked exception thrown when an attempt is made to access a file that does
 not exist.
class
NotDirectoryException
Checked exception thrown when a file system operation, intended for a
 directory, fails because the file is not a directory.
class
NotLinkException
Checked exception thrown when a file system operation fails because a file
 is not a symbolic link.
class
ProviderMismatchException
Unchecked exception thrown when an attempt is made to invoke a method on an
 object created by one file system provider with a parameter created by a
 different file system provider.
class
ProviderNotFoundException
Runtime exception thrown when a provider of the required type cannot be found.
class
ReadOnlyFileSystemException
Unchecked exception thrown when an attempt is made to update an object
 associated with a
read-only
FileSystem
.
Uses of
Exception
in
java.nio.file.attribute
Subclasses of
Exception
in
java.nio.file.attribute
Modifier and Type
Class
Description
class
UserPrincipalNotFoundException
Checked exception thrown when a lookup of
UserPrincipal
fails because
 the principal does not exist.
Uses of
Exception
in
java.rmi
Subclasses of
Exception
in
java.rmi
Modifier and Type
Class
Description
class
AccessException
An
AccessException
is thrown by certain methods of the
java.rmi.Naming
class (specifically
bind
,
rebind
, and
unbind
) to
 indicate that the caller does not have permission to perform the action
 requested by the method call.
class
AlreadyBoundException
An
AlreadyBoundException
is thrown if an attempt
 is made to bind an object to a name that already
 has an associated binding in the registry.
class
ConnectException
A
ConnectException
is thrown if a connection is refused
 to the remote host for a remote method call.
class
ConnectIOException
A
ConnectIOException
is thrown if an
IOException
occurs while making a connection
 to the remote host for a remote method call.
class
MarshalException
A
MarshalException
is thrown if a
java.io.IOException
occurs while marshalling the remote call
 header, arguments or return value for a remote method call.
class
NoSuchObjectException
A
NoSuchObjectException
is thrown if an attempt is made to
 invoke a method on an object that no longer exists in the remote virtual
 machine.
class
NotBoundException
A
NotBoundException
is thrown if an attempt
 is made to lookup or unbind in the registry a name that has
 no associated binding.
class
RemoteException
A
RemoteException
is the common superclass for a number of
 communication-related exceptions that may occur during the execution of a
 remote method call.
class
RMISecurityException
Deprecated.
Use
SecurityException
instead.
class
ServerError
A
ServerError
is thrown as a result of a remote method
 invocation when an
Error
is thrown while processing
 the invocation on the server, either while unmarshalling the arguments,
 executing the remote method itself, or marshalling the return value.
class
ServerException
A
ServerException
is thrown as a result of a remote method
 invocation when a
RemoteException
is thrown while processing
 the invocation on the server, either while unmarshalling the arguments or
 executing the remote method itself.
class
ServerRuntimeException
Deprecated.
no replacement
class
StubNotFoundException
A
StubNotFoundException
is thrown if a valid stub class
 could not be found for a remote object when it is exported.
class
UnexpectedException
An
UnexpectedException
is thrown if the client of a
 remote method call receives, as a result of the call, a checked
 exception that is not among the checked exception types declared in the
throws
clause of the method in the remote interface.
class
UnknownHostException
An
UnknownHostException
is thrown if a
java.net.UnknownHostException
occurs while creating
 a connection to the remote host for a remote method call.
class
UnmarshalException
An
UnmarshalException
can be thrown while unmarshalling the
 parameters or results of a remote method call if any of the following
 conditions occur:
 
  if an exception occurs while unmarshalling the call header
  if the protocol for the return value is invalid
  if a
java.io.IOException
occurs unmarshalling
 parameters (on the server side) or the return value (on the client side).
Constructors in
java.rmi
with parameters of type
Exception
Modifier
Constructor
Description
AccessException
(
String
s,
Exception
ex)
Constructs an
AccessException
with the specified
 detail message and nested exception.
ConnectException
(
String
s,
Exception
ex)
Constructs a
ConnectException
with the specified
 detail message and nested exception.
ConnectIOException
(
String
s,
Exception
ex)
Constructs a
ConnectIOException
with the specified
 detail message and nested exception.
MarshalException
(
String
s,
Exception
ex)
Constructs a
MarshalException
with the specified
 detail message and nested exception.
ServerException
(
String
s,
Exception
ex)
Constructs a
ServerException
with the specified
 detail message and nested exception.
ServerRuntimeException
(
String
s,
Exception
ex)
Deprecated.
no replacement
StubNotFoundException
(
String
s,
Exception
ex)
Constructs a
StubNotFoundException
with the specified
 detail message and nested exception.
UnexpectedException
(
String
s,
Exception
ex)
Constructs a
UnexpectedException
with the specified
 detail message and nested exception.
UnknownHostException
(
String
s,
Exception
ex)
Constructs an
UnknownHostException
with the specified
 detail message and nested exception.
UnmarshalException
(
String
s,
Exception
ex)
Constructs an
UnmarshalException
with the specified
 detail message and nested exception.
Uses of
Exception
in
java.rmi.server
Subclasses of
Exception
in
java.rmi.server
Modifier and Type
Class
Description
class
ExportException
An
ExportException
is a
RemoteException
thrown if an attempt to export a remote object fails.
class
ServerCloneException
A
ServerCloneException
is thrown if a remote exception occurs
 during the cloning of a
UnicastRemoteObject
.
class
ServerNotActiveException
An
ServerNotActiveException
is an
Exception
thrown during a call to
RemoteServer.getClientHost
if
 the getClientHost method is called outside of servicing a remote
 method call.
class
SkeletonMismatchException
Deprecated.
no replacement.
class
SkeletonNotFoundException
Deprecated.
no replacement.
class
SocketSecurityException
Deprecated.
This class is obsolete.
Fields in
java.rmi.server
declared as
Exception
Modifier and Type
Field
Description
Exception
ServerCloneException.
detail
The cause of the exception.
Methods in
java.rmi.server
with parameters of type
Exception
Modifier and Type
Method
Description
boolean
RMIFailureHandler.
failure
(
Exception
ex)
The
failure
callback is invoked when the RMI
 runtime is unable to create a
ServerSocket
via the
RMISocketFactory
.
Methods in
java.rmi.server
that throw
Exception
Modifier and Type
Method
Description
void
Skeleton.
dispatch
(
Remote
obj,
RemoteCall
theCall,
 intÂ opnum,
 longÂ hash)
Deprecated.
no replacement
void
RemoteCall.
executeCall
()
Deprecated.
no replacement
Object
RemoteRef.
invoke
(
Remote
obj,
Method
method,
Object
[]Â params,
 longÂ opnum)
Invoke a method.
void
RemoteRef.
invoke
(
RemoteCall
call)
Deprecated.
1.2 style stubs no longer use this method.
Constructors in
java.rmi.server
with parameters of type
Exception
Modifier
Constructor
Description
ExportException
(
String
s,
Exception
ex)
Constructs an
ExportException
with the specified
 detail message and nested exception.
ServerCloneException
(
String
s,
Exception
cause)
Constructs a
ServerCloneException
with the specified
 detail message and cause.
SkeletonNotFoundException
(
String
s,
Exception
ex)
Deprecated.
Constructs a
SkeletonNotFoundException
with the specified
 detail message and nested exception.
SocketSecurityException
(
String
s,
Exception
ex)
Deprecated.
Constructs an
SocketSecurityException
with the specified
 detail message and nested exception.
Uses of
Exception
in
java.security
Subclasses of
Exception
in
java.security
Modifier and Type
Class
Description
class
AccessControlException
Deprecated, for removal: This API element is subject to removal in a future version.
This class is only useful in conjunction with
the Security Manager
, which is deprecated
       and subject to removal in a future release.
class
DigestException
This is the generic Message Digest exception.
class
GeneralSecurityException
The
GeneralSecurityException
class is a generic
 security exception class that provides type safety for all the
 security-related exception classes that extend from it.
class
InvalidAlgorithmParameterException
This is the exception for invalid or inappropriate algorithm parameters.
class
InvalidKeyException
This is the exception for invalid Keys (invalid encoding, wrong
 length, uninitialized, etc.).
class
InvalidParameterException
This exception, designed for use by the JCA/JCE engine classes,
 is thrown when an invalid parameter is passed
 to a method.
class
KeyException
This is the basic key exception.
class
KeyManagementException
This is the general key management exception for all operations
 dealing with key management.
class
KeyStoreException
This is the generic KeyStore exception.
class
NoSuchAlgorithmException
This exception is thrown when a particular cryptographic algorithm is
 requested but is not available in the environment.
class
NoSuchProviderException
This exception is thrown when a particular security provider is
 requested but is not available in the environment.
class
PrivilegedActionException
This exception is thrown by
doPrivileged(PrivilegedExceptionAction)
and
doPrivileged(PrivilegedExceptionAction,
 AccessControlContext context)
to indicate
 that the action being performed threw a checked exception.
class
ProviderException
A runtime exception for
Provider
exceptions (such as
 misconfiguration errors or unrecoverable internal errors),
 which may be subclassed by Providers to
 throw specialized, provider-specific runtime errors.
class
SignatureException
This is the generic Signature exception.
class
UnrecoverableEntryException
This exception is thrown if an entry in the keystore cannot be recovered.
class
UnrecoverableKeyException
This exception is thrown if a key in the keystore cannot be recovered.
Methods in
java.security
that return
Exception
Modifier and Type
Method
Description
Exception
PrivilegedActionException.
getException
()
Returns the exception thrown by the privileged computation that
 resulted in this
PrivilegedActionException
.
Methods in
java.security
that throw
Exception
Modifier and Type
Method
Description
T
PrivilegedExceptionAction.
run
()
Performs the computation.
Constructors in
java.security
with parameters of type
Exception
Modifier
Constructor
Description
PrivilegedActionException
(
Exception
exception)
Constructs a new
PrivilegedActionException
"wrapping"
 the specific Exception.
Uses of
Exception
in
java.security.cert
Subclasses of
Exception
in
java.security.cert
Modifier and Type
Class
Description
class
CertificateEncodingException
Certificate Encoding Exception.
class
CertificateException
This exception indicates one of a variety of certificate problems.
class
CertificateExpiredException
Certificate Expired Exception.
class
CertificateNotYetValidException
Certificate is not yet valid exception.
class
CertificateParsingException
Certificate Parsing Exception.
class
CertificateRevokedException
An exception that indicates an X.509 certificate is revoked.
class
CertPathBuilderException
An exception indicating one of a variety of problems encountered when
 building a certification path with a
CertPathBuilder
.
class
CertPathValidatorException
An exception indicating one of a variety of problems encountered when
 validating a certification path.
class
CertStoreException
An exception indicating one of a variety of problems retrieving
 certificates and CRLs from a
CertStore
.
class
CRLException
CRL (Certificate Revocation List) Exception.
Uses of
Exception
in
java.security.spec
Subclasses of
Exception
in
java.security.spec
Modifier and Type
Class
Description
class
InvalidKeySpecException
This is the exception for invalid key specifications.
class
InvalidParameterSpecException
This is the exception for invalid parameter specifications.
Uses of
Exception
in
java.sql
Subclasses of
Exception
in
java.sql
Modifier and Type
Class
Description
class
BatchUpdateException
The subclass of
SQLException
thrown when an error
 occurs during a batch update operation.
class
DataTruncation
An exception  thrown as a
DataTruncation
exception
 (on writes) or reported as a
DataTruncation
warning (on reads)
  when a data values is unexpectedly truncated for reasons other than its having
  exceeded
MaxFieldSize
.
class
SQLClientInfoException
The subclass of
SQLException
is thrown when one or more client info properties
 could not be set on a
Connection
.
class
SQLDataException
The subclass of
SQLException
thrown when the SQLState class value
 is '
22
', or under vendor-specified conditions.
class
SQLException
An exception that provides information on a database access
 error or other errors.
class
SQLFeatureNotSupportedException
The subclass of
SQLException
thrown when the SQLState class value is '
0A
'
 ( the value is 'zero' A).
class
SQLIntegrityConstraintViolationException
The subclass of
SQLException
thrown when the SQLState class value
 is '
23
', or under vendor-specified conditions.
class
SQLInvalidAuthorizationSpecException
The subclass of
SQLException
thrown when the SQLState class value
 is '
28
', or under vendor-specified conditions.
class
SQLNonTransientConnectionException
The subclass of
SQLException
thrown for the SQLState
 class value '
08
', or under vendor-specified conditions.
class
SQLNonTransientException
The subclass of
SQLException
thrown when an instance where a retry
 of the same operation would fail unless the cause of the
SQLException
is corrected.
class
SQLRecoverableException
The subclass of
SQLException
thrown in situations where a
 previously failed operation might be able to succeed if the application performs
  some recovery steps and retries the entire transaction or in the case of a
 distributed transaction, the transaction branch.
class
SQLSyntaxErrorException
The subclass of
SQLException
thrown when the SQLState class value
 is '
42
', or under vendor-specified conditions.
class
SQLTimeoutException
The subclass of
SQLException
thrown when the timeout specified by
Statement.setQueryTimeout
,
DriverManager.setLoginTimeout
,
DataSource.setLoginTimeout
,
XADataSource.setLoginTimeout
has expired.
class
SQLTransactionRollbackException
The subclass of
SQLException
thrown when the SQLState class value
 is '
40
', or under vendor-specified conditions.
class
SQLTransientConnectionException
The subclass of
SQLException
for the SQLState class
 value '
08
', or under vendor-specified conditions.
class
SQLTransientException
The subclass of
SQLException
is thrown in situations where a
 previously failed operation might be able to succeed when the operation is
 retried without any intervention by application-level functionality.
class
SQLWarning
An exception that provides information on  database access
 warnings.
Uses of
Exception
in
java.text
Subclasses of
Exception
in
java.text
Modifier and Type
Class
Description
class
ParseException
Signals that an error has been reached unexpectedly
 while parsing.
Uses of
Exception
in
java.time
Subclasses of
Exception
in
java.time
Modifier and Type
Class
Description
class
DateTimeException
Exception used to indicate a problem while calculating a date-time.
Uses of
Exception
in
java.time.format
Subclasses of
Exception
in
java.time.format
Modifier and Type
Class
Description
class
DateTimeParseException
An exception thrown when an error occurs during parsing.
Uses of
Exception
in
java.time.temporal
Subclasses of
Exception
in
java.time.temporal
Modifier and Type
Class
Description
class
UnsupportedTemporalTypeException
UnsupportedTemporalTypeException indicates that a ChronoField or ChronoUnit is
 not supported for a Temporal class.
Uses of
Exception
in
java.time.zone
Subclasses of
Exception
in
java.time.zone
Modifier and Type
Class
Description
class
ZoneRulesException
Thrown to indicate a problem with time-zone configuration.
Uses of
Exception
in
java.util
Subclasses of
Exception
in
java.util
Modifier and Type
Class
Description
class
ConcurrentModificationException
This exception may be thrown by methods that have detected concurrent
 modification of an object when such modification is not permissible.
class
DuplicateFormatFlagsException
Unchecked exception thrown when duplicate flags are provided in the format
 specifier.
class
EmptyStackException
Thrown by methods in the
Stack
class to indicate
 that the stack is empty.
class
FormatFlagsConversionMismatchException
Unchecked exception thrown when a conversion and flag are incompatible.
class
FormatterClosedException
Unchecked exception thrown when the formatter has been closed.
class
IllegalFormatCodePointException
Unchecked exception thrown when a character with an invalid Unicode code
 point as defined by
Character.isValidCodePoint(int)
is passed to the
Formatter
.
class
IllegalFormatConversionException
Unchecked exception thrown when the argument corresponding to the format
 specifier is of an incompatible type.
class
IllegalFormatException
Unchecked exception thrown when a format string contains an illegal syntax
 or a format specifier that is incompatible with the given arguments.
class
IllegalFormatFlagsException
Unchecked exception thrown when an illegal combination flags is given.
class
IllegalFormatPrecisionException
Unchecked exception thrown when the precision is a negative value other than
-1
, the conversion does not support a precision, or the value is
 otherwise unsupported.
class
IllegalFormatWidthException
Unchecked exception thrown when the format width is a negative value other
 than
-1
or is otherwise unsupported.
class
IllformedLocaleException
Thrown by methods in
Locale
and
Locale.Builder
to
 indicate that an argument is not a well-formed BCP 47 tag.
class
InputMismatchException
Thrown by a
Scanner
to indicate that the token
 retrieved does not match the pattern for the expected type, or
 that the token is out of range for the expected type.
class
InvalidPropertiesFormatException
Thrown to indicate that an operation could not complete because
 the input did not conform to the appropriate XML document type
 for a collection of properties, as per the
Properties
specification.
class
MissingFormatArgumentException
Unchecked exception thrown when there is a format specifier which does not
 have a corresponding argument or if an argument index refers to an argument
 that does not exist.
class
MissingFormatWidthException
Unchecked exception thrown when the format width is required.
class
MissingResourceException
Signals that a resource is missing.
class
NoSuchElementException
Thrown by various accessor methods to indicate that the element being requested
 does not exist.
class
TooManyListenersException
The
TooManyListenersException
Exception is used as part of
 the Java Event model to annotate and implement a unicast special case of
 a multicast Event Source.
class
UnknownFormatConversionException
Unchecked exception thrown when an unknown conversion is given.
class
UnknownFormatFlagsException
Unchecked exception thrown when an unknown flag is given.
Uses of
Exception
in
java.util.concurrent
Subclasses of
Exception
in
java.util.concurrent
Modifier and Type
Class
Description
class
BrokenBarrierException
Exception thrown when a thread tries to wait upon a barrier that is
 in a broken state, or which enters the broken state while the thread
 is waiting.
class
CancellationException
Exception indicating that the result of a value-producing task,
 such as a
FutureTask
, cannot be retrieved because the task
 was cancelled.
class
CompletionException
Exception thrown when an error or other exception is encountered
 in the course of completing a result or task.
class
ExecutionException
Exception thrown when attempting to retrieve the result of a task
 that aborted by throwing an exception.
class
RejectedExecutionException
Exception thrown by an
Executor
when a task cannot be
 accepted for execution.
final class
StructureViolationException
PREVIEW
Preview.
Thrown when a structure violation is detected.
class
TimeoutException
Exception thrown when a blocking operation times out.
Methods in
java.util.concurrent
that throw
Exception
Modifier and Type
Method
Description
V
Callable.
call
()
Computes a result, or throws an exception if unable to do so.
Uses of
Exception
in
java.util.jar
Subclasses of
Exception
in
java.util.jar
Modifier and Type
Class
Description
class
JarException
Signals that an error of some sort has occurred while reading from
 or writing to a JAR file.
Uses of
Exception
in
java.util.logging
Methods in
java.util.logging
with parameters of type
Exception
Modifier and Type
Method
Description
void
ErrorManager.
error
(
String
msg,
Exception
ex,
 intÂ code)
The error method is called when a Handler failure occurs.
protected void
Handler.
reportError
(
String
msg,
Exception
ex,
 intÂ code)
Protected convenience method to report an error to this Handler's
 ErrorManager.
Uses of
Exception
in
java.util.prefs
Subclasses of
Exception
in
java.util.prefs
Modifier and Type
Class
Description
class
BackingStoreException
Thrown to indicate that a preferences operation could not complete because
 of a failure in the backing store, or a failure to contact the backing
 store.
class
InvalidPreferencesFormatException
Thrown to indicate that an operation could not complete because
 the input did not conform to the appropriate XML document type
 for a collection of preferences, as per the
Preferences
specification.
Uses of
Exception
in
java.util.regex
Subclasses of
Exception
in
java.util.regex
Modifier and Type
Class
Description
class
PatternSyntaxException
Unchecked exception thrown to indicate a syntax error in a
 regular-expression pattern.
Uses of
Exception
in
java.util.zip
Subclasses of
Exception
in
java.util.zip
Modifier and Type
Class
Description
class
DataFormatException
Signals that a data format error has occurred.
class
ZipException
Signals that a Zip exception of some sort has occurred.
Uses of
Exception
in
javax.annotation.processing
Subclasses of
Exception
in
javax.annotation.processing
Modifier and Type
Class
Description
class
FilerException
Indicates a
Filer
detected an attempt to open a file that
 would violate the guarantees provided by the
Filer
.
Uses of
Exception
in
javax.crypto
Subclasses of
Exception
in
javax.crypto
Modifier and Type
Class
Description
class
AEADBadTagException
This exception is thrown when a
Cipher
operating in
 an AEAD mode (such as GCM/CCM) is unable to verify the supplied
 authentication tag.
class
BadPaddingException
This exception is thrown when a particular padding mechanism is
 expected for the input data but the data is not padded properly.
class
DecapsulateException
An exception that is thrown by the
KEM.Decapsulator.decapsulate(byte[])
method to denote an
 error during decapsulation.
class
ExemptionMechanismException
This is the generic ExemptionMechanism exception.
class
IllegalBlockSizeException
This exception is thrown when the length of data provided to a block
 cipher is incorrect, i.e., does not match the block size of the cipher.
class
NoSuchPaddingException
This exception is thrown when a particular padding mechanism is
 requested but is not available in the environment.
class
ShortBufferException
This exception is thrown when an output buffer provided by the user
 is too short to hold the operation result.
Uses of
Exception
in
javax.imageio
Subclasses of
Exception
in
javax.imageio
Modifier and Type
Class
Description
class
IIOException
An exception class used for signaling run-time failure of reading
 and writing operations.
Uses of
Exception
in
javax.imageio.metadata
Subclasses of
Exception
in
javax.imageio.metadata
Modifier and Type
Class
Description
class
IIOInvalidTreeException
An
IIOInvalidTreeException
is thrown when an attempt
 by an
IIOMetadata
object to parse a tree of
IIOMetadataNode
s fails.
Uses of
Exception
in
javax.lang.model
Subclasses of
Exception
in
javax.lang.model
Modifier and Type
Class
Description
class
UnknownEntityException
Superclass of exceptions which indicate that an unknown kind of
 entity was encountered.
Uses of
Exception
in
javax.lang.model.element
Subclasses of
Exception
in
javax.lang.model.element
Modifier and Type
Class
Description
class
UnknownAnnotationValueException
Indicates that an unknown kind of annotation value was encountered.
class
UnknownDirectiveException
Indicates that an unknown kind of module directive was encountered.
class
UnknownElementException
Indicates that an unknown kind of element was encountered.
Uses of
Exception
in
javax.lang.model.type
Subclasses of
Exception
in
javax.lang.model.type
Modifier and Type
Class
Description
class
MirroredTypeException
Thrown when an application attempts to access the
Class
object
 corresponding to a
TypeMirror
.
class
MirroredTypesException
Thrown when an application attempts to access a sequence of
Class
objects each corresponding to a
TypeMirror
.
class
UnknownTypeException
Indicates that an unknown kind of type was encountered.
Uses of
Exception
in
javax.management
Subclasses of
Exception
in
javax.management
Modifier and Type
Class
Description
class
AttributeNotFoundException
The specified attribute does not exist or cannot be retrieved.
class
BadAttributeValueExpException
Thrown when an invalid MBean attribute is passed to a query
 constructing method.
class
BadBinaryOpValueExpException
Thrown when an invalid expression is passed to a method for
 constructing a query.
class
BadStringOperationException
Thrown when an invalid string operation is passed
 to a method for constructing a query.
class
InstanceAlreadyExistsException
The MBean is already registered in the repository.
class
InstanceNotFoundException
The specified MBean does not exist in the repository.
class
IntrospectionException
An exception occurred during the introspection of an MBean.
class
InvalidApplicationException
Thrown when an attempt is made to apply either of the following: A
 subquery expression to an MBean or a qualified attribute expression
 to an MBean of the wrong class.
class
InvalidAttributeValueException
The value specified is not valid for the attribute.
class
JMException
Exceptions thrown by JMX implementations.
class
JMRuntimeException
Runtime exceptions emitted by JMX implementations.
class
ListenerNotFoundException
The specified MBean listener does not exist in the repository.
class
MalformedObjectNameException
The format of the string does not correspond to a valid ObjectName.
class
MBeanException
Represents "user defined" exceptions thrown by MBean methods
 in the agent.
class
MBeanRegistrationException
Wraps exceptions thrown by the preRegister(), preDeregister() methods
 of the
MBeanRegistration
interface.
class
NotCompliantMBeanException
Exception which occurs when trying to register an  object in the MBean server that is not a JMX compliant MBean.
class
OperationsException
Represents exceptions thrown in the MBean server when performing operations
 on MBeans.
class
ReflectionException
Represents exceptions thrown in the MBean server when using the
 java.lang.reflect classes to invoke methods on MBeans.
class
RuntimeErrorException
When a
java.lang.Error
occurs in the agent it should be caught and
 re-thrown as a
RuntimeErrorException
.
class
RuntimeMBeanException
Represents runtime exceptions thrown by MBean methods in
 the agent.
class
RuntimeOperationsException
Represents runtime exceptions thrown in the agent when performing operations on MBeans.
class
ServiceNotFoundException
Represents exceptions raised when a requested service is not supported.
Methods in
javax.management
that return
Exception
Modifier and Type
Method
Description
Exception
MBeanException.
getTargetException
()
Return the actual
Exception
thrown.
Exception
ReflectionException.
getTargetException
()
Returns the actual
Exception
thrown.
Methods in
javax.management
that throw
Exception
Modifier and Type
Method
Description
void
MBeanRegistration.
preDeregister
()
Allows the MBean to perform any operations it needs before
 being unregistered by the MBean server.
void
StandardMBean.
preDeregister
()
Allows the MBean to perform any operations it needs before
 being unregistered by the MBean server.
ObjectName
MBeanRegistration.
preRegister
(
MBeanServer
server,
ObjectName
name)
Allows the MBean to perform any operations it needs before
 being registered in the MBean Server.
ObjectName
StandardMBean.
preRegister
(
MBeanServer
server,
ObjectName
name)
Allows the MBean to perform any operations it needs before
 being registered in the MBean server.
Constructors in
javax.management
with parameters of type
Exception
Modifier
Constructor
Description
MBeanException
(
Exception
e)
Creates an
MBeanException
that wraps the actual
java.lang.Exception
.
MBeanException
(
Exception
e,
String
message)
Creates an
MBeanException
that wraps the actual
java.lang.Exception
with
 a detail message.
MBeanRegistrationException
(
Exception
e)
Creates an
MBeanRegistrationException
that wraps
 the actual
java.lang.Exception
.
MBeanRegistrationException
(
Exception
e,
String
message)
Creates an
MBeanRegistrationException
that wraps
 the actual
java.lang.Exception
with a detailed
 message.
ReflectionException
(
Exception
e)
Creates a
ReflectionException
that wraps the actual
java.lang.Exception
.
ReflectionException
(
Exception
e,
String
message)
Creates a
ReflectionException
that wraps the actual
java.lang.Exception
with
 a detail message.
Uses of
Exception
in
javax.management.loading
Methods in
javax.management.loading
that throw
Exception
Modifier and Type
Method
Description
protected
URL
MLet.
check
(
String
version,
URL
codebase,
String
jarfile,
MLetContent
mlet)
Deprecated, for removal: This API element is subject to removal in a future version.
This method is to be overridden when extending this service to
 support caching and versioning.
void
MLet.
preDeregister
()
Deprecated, for removal: This API element is subject to removal in a future version.
Allows the m-let to perform any operations it needs before being unregistered
 by the MBean server.
ObjectName
MLet.
preRegister
(
MBeanServer
server,
ObjectName
name)
Deprecated, for removal: This API element is subject to removal in a future version.
Allows the m-let to perform any operations it needs before
 being registered in the MBean server.
Uses of
Exception
in
javax.management.modelmbean
Subclasses of
Exception
in
javax.management.modelmbean
Modifier and Type
Class
Description
class
InvalidTargetObjectTypeException
Exception thrown when an invalid target object type is specified.
class
XMLParseException
This exception is thrown when an XML formatted string is being parsed into ModelMBean objects
 or when XML formatted strings are being created from ModelMBean objects.
Methods in
javax.management.modelmbean
that throw
Exception
Modifier and Type
Method
Description
void
RequiredModelMBean.
preDeregister
()
Allows the MBean to perform any operations it needs before
 being unregistered by the MBean server.
ObjectName
RequiredModelMBean.
preRegister
(
MBeanServer
server,
ObjectName
name)
Allows the MBean to perform any operations it needs before
 being registered in the MBean server.
Constructors in
javax.management.modelmbean
with parameters of type
Exception
Modifier
Constructor
Description
InvalidTargetObjectTypeException
(
Exception
e,
String
s)
Constructor taking an exception and a string.
XMLParseException
(
Exception
e,
String
s)
Constructor taking a string and an exception.
Uses of
Exception
in
javax.management.monitor
Subclasses of
Exception
in
javax.management.monitor
Modifier and Type
Class
Description
class
MonitorSettingException
Exception thrown by the monitor when a monitor setting becomes invalid while the monitor is running.
Methods in
javax.management.monitor
that throw
Exception
Modifier and Type
Method
Description
void
Monitor.
preDeregister
()
Allows the monitor MBean to perform any operations it needs
 before being unregistered by the MBean server.
ObjectName
Monitor.
preRegister
(
MBeanServer
server,
ObjectName
name)
Allows the monitor MBean to perform any operations it needs
 before being registered in the MBean server.
Uses of
Exception
in
javax.management.openmbean
Subclasses of
Exception
in
javax.management.openmbean
Modifier and Type
Class
Description
class
InvalidKeyException
This runtime exception is thrown to indicate that a method parameter which was expected to be
 an item name of a
composite data
or a row index of a
tabular data
is not valid.
class
InvalidOpenTypeException
This runtime exception is thrown to indicate that the
open type
of an
open data
value
 is not the one expected.
class
KeyAlreadyExistsException
This runtime exception is thrown to indicate that the index of a row to be added to a
tabular data
instance
 is already used to refer to another row in this
tabular data
instance.
class
OpenDataException
This checked exception is thrown when an
open type
, an
open data
or an
open MBean metadata info
instance
 could not be constructed because one or more validity constraints were not met.
Uses of
Exception
in
javax.management.relation
Subclasses of
Exception
in
javax.management.relation
Modifier and Type
Class
Description
class
InvalidRelationIdException
This exception is raised when relation id provided for a relation is already
 used.
class
InvalidRelationServiceException
This exception is raised when an invalid Relation Service is provided.
class
InvalidRelationTypeException
Invalid relation type.
class
InvalidRoleInfoException
This exception is raised when, in a role info, its minimum degree is greater
 than its maximum degree.
class
InvalidRoleValueException
Role value is invalid.
class
RelationException
This class is the superclass of any exception which can be raised during
 relation management.
class
RelationNotFoundException
This exception is raised when there is no relation for a given relation id
 in a Relation Service.
class
RelationServiceNotRegisteredException
This exception is raised when an access is done to the Relation Service and
 that one is not registered.
class
RelationTypeNotFoundException
This exception is raised when there is no relation type with given name in
 Relation Service.
class
RoleInfoNotFoundException
This exception is raised when there is no role info with given name in a
 given relation type.
class
RoleNotFoundException
This exception is raised when a role in a relation does not exist, or is not
 readable, or is not settable.
Methods in
javax.management.relation
that throw
Exception
Modifier and Type
Method
Description
void
RelationService.
preDeregister
()
void
RelationSupport.
preDeregister
()
ObjectName
RelationService.
preRegister
(
MBeanServer
server,
ObjectName
name)
ObjectName
RelationSupport.
preRegister
(
MBeanServer
server,
ObjectName
name)
Uses of
Exception
in
javax.management.remote
Subclasses of
Exception
in
javax.management.remote
Modifier and Type
Class
Description
class
JMXProviderException
Exception thrown by
JMXConnectorFactory
and
JMXConnectorServerFactory
when a provider exists for
 the required protocol but cannot be used for some reason.
class
JMXServerErrorException
Exception thrown as the result of a remote
MBeanServer
method invocation when an
Error
is thrown while
 processing the invocation in the remote MBean server.
Methods in
javax.management.remote
that throw
Exception
Modifier and Type
Method
Description
void
JMXConnectorServer.
preDeregister
()
Called by an MBean server when this connector server is
 unregistered from that MBean server.
Uses of
Exception
in
javax.management.timer
Methods in
javax.management.timer
that throw
Exception
Modifier and Type
Method
Description
void
Timer.
preDeregister
()
Allows the timer MBean to perform any operations it needs before being unregistered
 by the MBean server.
ObjectName
Timer.
preRegister
(
MBeanServer
server,
ObjectName
name)
Allows the timer MBean to perform any operations it needs before being registered
 in the MBean server.
Uses of
Exception
in
javax.naming
Subclasses of
Exception
in
javax.naming
Modifier and Type
Class
Description
class
AuthenticationException
This exception is thrown when an authentication error occurs while
 accessing the naming or directory service.
class
AuthenticationNotSupportedException
This exception is thrown when
 the particular flavor of authentication requested is not supported.
class
CannotProceedException
This exception is thrown to indicate that the operation reached
 a point in the name where the operation cannot proceed any further.
class
CommunicationException
This exception is thrown when the client is
 unable to communicate with the directory or naming service.
class
ConfigurationException
This exception is thrown when there is a configuration problem.
class
ContextNotEmptyException
This exception is thrown when attempting to destroy a context that
 is not empty.
class
InsufficientResourcesException
This exception is thrown when resources are not available to complete
 the requested operation.
class
InterruptedNamingException
This exception is thrown when the naming operation
 being invoked has been interrupted.
class
InvalidNameException
This exception indicates that the name being specified does
 not conform to the naming syntax of a naming system.
class
LimitExceededException
This exception is thrown when a method
 terminates abnormally due to a user or system specified limit.
class
LinkException
This exception is used to describe problems encountered while resolving links.
class
LinkLoopException
This exception is thrown when
 a loop was detected while attempting to resolve a link, or an implementation
 specific limit on link counts has been reached.
class
MalformedLinkException
This exception is thrown when a malformed link was encountered while
 resolving or constructing a link.
class
NameAlreadyBoundException
This exception is thrown by methods to indicate that
 a binding cannot be added because the name is already bound to
 another object.
class
NameNotFoundException
This exception is thrown when a component of the name cannot be resolved
 because it is not bound.
class
NamingException
This is the superclass of all exceptions thrown by
 operations in the Context and DirContext interfaces.
class
NamingSecurityException
This is the superclass of security-related exceptions
 thrown by operations in the Context and DirContext interfaces.
class
NoInitialContextException
This exception is thrown when no initial context implementation
 can be created.
class
NoPermissionException
This exception is thrown when attempting to perform an operation
 for which the client has no permission.
class
NotContextException
This exception is thrown when a naming operation proceeds to a point
 where a context is required to continue the operation, but the
 resolved object is not a context.
class
OperationNotSupportedException
This exception is thrown when a context implementation does not support
 the operation being invoked.
class
PartialResultException
This exception is thrown to indicate that the result being returned
 or returned so far is partial, and that the operation cannot
 be completed.
class
ReferralException
This abstract class is used to represent a referral exception,
 which is generated in response to a
referral
such as that returned by LDAP v3 servers.
class
ServiceUnavailableException
This exception is thrown when attempting to communicate with a
 directory or naming service and that service is not available.
class
SizeLimitExceededException
This exception is thrown when a method
 produces a result that exceeds a size-related limit.
class
TimeLimitExceededException
This exception is thrown when a method
 does not terminate within the specified time limit.
Uses of
Exception
in
javax.naming.directory
Subclasses of
Exception
in
javax.naming.directory
Modifier and Type
Class
Description
class
AttributeInUseException
This exception is thrown when an operation attempts
 to add an attribute that already exists.
class
AttributeModificationException
This exception is thrown when an attempt is
 made to add, or remove, or modify an attribute, its identifier,
 or its values that conflicts with the attribute's (schema) definition
 or the attribute's state.
class
InvalidAttributeIdentifierException
This exception is thrown when an attempt is
 made to add to create an attribute with an invalid attribute identifier.
class
InvalidAttributesException
This exception is thrown when an attempt is
 made to add or modify an attribute set that has been specified
 incompletely or incorrectly.
class
InvalidAttributeValueException
This class is thrown when an attempt is
 made to add to an attribute a value that conflicts with the attribute's
 schema definition.
class
InvalidSearchControlsException
This exception is thrown when the specification of
 the SearchControls for a search operation is invalid.
class
InvalidSearchFilterException
This exception is thrown when the specification of
 a search filter is invalid.
class
NoSuchAttributeException
This exception is thrown when attempting to access
 an attribute that does not exist.
class
SchemaViolationException
This exception is thrown when a method
 in some ways violates the schema.
Uses of
Exception
in
javax.naming.ldap
Subclasses of
Exception
in
javax.naming.ldap
Modifier and Type
Class
Description
class
LdapReferralException
This abstract class is used to represent an LDAP referral exception.
Uses of
Exception
in
javax.naming.spi
Methods in
javax.naming.spi
that throw
Exception
Modifier and Type
Method
Description
static
Object
DirectoryManager.
getObjectInstance
(
Object
refInfo,
Name
name,
Context
nameCtx,
Hashtable
<?,
?>Â environment,
Attributes
attrs)
Creates an instance of an object for the specified object,
 attributes, and environment.
Object
DirObjectFactory.
getObjectInstance
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?>Â environment,
Attributes
attrs)
Creates an object using the location or reference information, and attributes
 specified.
static
Object
NamingManager.
getObjectInstance
(
Object
refInfo,
Name
name,
Context
nameCtx,
Hashtable
<?,
?>Â environment)
Creates an instance of an object for the specified object
 and environment.
Object
ObjectFactory.
getObjectInstance
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?>Â environment)
Creates an object using the location or reference information
 specified.
Uses of
Exception
in
javax.net.ssl
Subclasses of
Exception
in
javax.net.ssl
Modifier and Type
Class
Description
class
SSLException
Indicates some kind of error detected by an SSL subsystem.
class
SSLHandshakeException
Indicates that the client and server could not negotiate the
 desired level of security.
class
SSLKeyException
Reports a bad SSL key.
class
SSLPeerUnverifiedException
Indicates that the peer's identity has not been verified.
class
SSLProtocolException
Reports an error in the operation of the SSL protocol.
Uses of
Exception
in
javax.print
Subclasses of
Exception
in
javax.print
Modifier and Type
Class
Description
class
PrintException
Class
PrintException
encapsulates a printing-related error condition
 that occurred while using a Print Service instance.
Constructors in
javax.print
with parameters of type
Exception
Modifier
Constructor
Description
PrintException
(
Exception
e)
Construct a print exception chaining the supplied exception.
PrintException
(
String
s,
Exception
e)
Construct a print exception with the given detail message and chained
 exception.
Uses of
Exception
in
javax.print.attribute
Subclasses of
Exception
in
javax.print.attribute
Modifier and Type
Class
Description
class
UnmodifiableSetException
Thrown to indicate that the requested operation cannot be performed because
 the set is unmodifiable.
Uses of
Exception
in
javax.script
Subclasses of
Exception
in
javax.script
Modifier and Type
Class
Description
class
ScriptException
The generic
Exception
class for the Scripting APIs.
Constructors in
javax.script
with parameters of type
Exception
Modifier
Constructor
Description
ScriptException
(
Exception
e)
Creates a
ScriptException
wrapping an
Exception
thrown by an underlying
 interpreter.
Uses of
Exception
in
javax.security.auth
Subclasses of
Exception
in
javax.security.auth
Modifier and Type
Class
Description
class
DestroyFailedException
Signals that a
destroy
operation failed.
class
RefreshFailedException
Signals that a
refresh
operation failed.
Uses of
Exception
in
javax.security.auth.callback
Subclasses of
Exception
in
javax.security.auth.callback
Modifier and Type
Class
Description
class
UnsupportedCallbackException
Signals that a
CallbackHandler
does not
 recognize a particular
Callback
.
Uses of
Exception
in
javax.security.auth.login
Subclasses of
Exception
in
javax.security.auth.login
Modifier and Type
Class
Description
class
AccountException
A generic account exception.
class
AccountExpiredException
Signals that a user account has expired.
class
AccountLockedException
Signals that an account was locked.
class
AccountNotFoundException
Signals that an account was not found.
class
CredentialException
A generic credential exception.
class
CredentialExpiredException
Signals that a
Credential
has expired.
class
CredentialNotFoundException
Signals that a credential was not found.
class
FailedLoginException
Signals that user authentication failed.
class
LoginException
This is the basic login exception.
Uses of
Exception
in
javax.security.cert
Subclasses of
Exception
in
javax.security.cert
Modifier and Type
Class
Description
class
CertificateEncodingException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateExpiredException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateNotYetValidException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateParsingException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
Uses of
Exception
in
javax.security.sasl
Subclasses of
Exception
in
javax.security.sasl
Modifier and Type
Class
Description
class
AuthenticationException
This exception is thrown by a SASL mechanism implementation
 to indicate that the SASL
 exchange has failed due to reasons related to authentication, such as
 an invalid identity, passphrase, or key.
class
SaslException
This class represents an error that has occurred when using SASL.
Uses of
Exception
in
javax.smartcardio
Subclasses of
Exception
in
javax.smartcardio
Modifier and Type
Class
Description
class
CardException
Exception for errors that occur during communication with the
 Smart Card stack or the card itself.
class
CardNotPresentException
Exception thrown when an application tries to establish a connection with a
 terminal that has no card present.
Uses of
Exception
in
javax.sound.midi
Subclasses of
Exception
in
javax.sound.midi
Modifier and Type
Class
Description
class
InvalidMidiDataException
An
InvalidMidiDataException
indicates that inappropriate MIDI data
 was encountered.
class
MidiUnavailableException
A
MidiUnavailableException
is thrown when a requested MIDI component
 cannot be opened or created because it is unavailable.
Uses of
Exception
in
javax.sound.sampled
Subclasses of
Exception
in
javax.sound.sampled
Modifier and Type
Class
Description
class
LineUnavailableException
A
LineUnavailableException
is an exception indicating that a line
 cannot be opened because it is unavailable.
class
UnsupportedAudioFileException
An
UnsupportedAudioFileException
is an exception indicating that an
 operation failed because a file did not contain valid data of a recognized
 file type and format.
Uses of
Exception
in
javax.sql.rowset
Subclasses of
Exception
in
javax.sql.rowset
Modifier and Type
Class
Description
class
RowSetWarning
An extension of
SQLException
that provides information
 about database warnings set on
RowSet
objects.
Uses of
Exception
in
javax.sql.rowset.serial
Subclasses of
Exception
in
javax.sql.rowset.serial
Modifier and Type
Class
Description
class
SerialException
Indicates and an error with the serialization or de-serialization of
 SQL types such as
BLOB, CLOB, STRUCT or ARRAY
in
 addition to SQL types such as
DATALINK and JAVAOBJECT
Uses of
Exception
in
javax.sql.rowset.spi
Subclasses of
Exception
in
javax.sql.rowset.spi
Modifier and Type
Class
Description
class
SyncFactoryException
Indicates an error with
SyncFactory
mechanism.
class
SyncProviderException
Indicates an error with the
SyncProvider
mechanism.
Uses of
Exception
in
javax.swing
Subclasses of
Exception
in
javax.swing
Modifier and Type
Class
Description
class
UnsupportedLookAndFeelException
An exception that indicates the requested look & feel
 management classes are not present on the user's system.
Methods in
javax.swing
that throw
Exception
Modifier and Type
Method
Description
protected abstract
T
SwingWorker.
doInBackground
()
Computes a result, or throws an exception if unable to do so.
Uses of
Exception
in
javax.swing.text
Subclasses of
Exception
in
javax.swing.text
Modifier and Type
Class
Description
class
BadLocationException
This exception is to report bad locations within a document model
 (that is, attempts to reference a location that doesn't exist).
class
ChangedCharSetException
ChangedCharSetException as the name indicates is an exception
 thrown when the charset is changed.
Uses of
Exception
in
javax.swing.tree
Subclasses of
Exception
in
javax.swing.tree
Modifier and Type
Class
Description
class
ExpandVetoException
Exception used to stop an expand/collapse from happening.
Uses of
Exception
in
javax.swing.undo
Subclasses of
Exception
in
javax.swing.undo
Modifier and Type
Class
Description
class
CannotRedoException
Thrown when an UndoableEdit is told to
redo()
and can't.
class
CannotUndoException
Thrown when an UndoableEdit is told to
undo()
and can't.
Uses of
Exception
in
javax.transaction.xa
Subclasses of
Exception
in
javax.transaction.xa
Modifier and Type
Class
Description
class
XAException
The XAException is thrown by the Resource Manager (RM) to inform the
 Transaction Manager of an error encountered by the involved transaction.
Uses of
Exception
in
javax.xml.catalog
Subclasses of
Exception
in
javax.xml.catalog
Modifier and Type
Class
Description
class
CatalogException
The exception class handles errors that may happen while processing or using
 a catalog.
Uses of
Exception
in
javax.xml.crypto
Subclasses of
Exception
in
javax.xml.crypto
Modifier and Type
Class
Description
class
KeySelectorException
Indicates an exceptional condition thrown by a
KeySelector
.
class
MarshalException
Indicates an exceptional condition that occurred during the XML
 marshalling or unmarshalling process.
class
NoSuchMechanismException
This exception is thrown when a particular XML mechanism is requested but
 is not available in the environment.
class
URIReferenceException
Indicates an exceptional condition thrown while dereferencing a
URIReference
.
Uses of
Exception
in
javax.xml.crypto.dsig
Subclasses of
Exception
in
javax.xml.crypto.dsig
Modifier and Type
Class
Description
class
TransformException
Indicates an exceptional condition that occurred while executing a
 transform algorithm.
class
XMLSignatureException
Indicates an exceptional condition that occurred during the XML
 signature generation or validation process.
Uses of
Exception
in
javax.xml.datatype
Subclasses of
Exception
in
javax.xml.datatype
Modifier and Type
Class
Description
class
DatatypeConfigurationException
Indicates a serious configuration error.
Uses of
Exception
in
javax.xml.parsers
Subclasses of
Exception
in
javax.xml.parsers
Modifier and Type
Class
Description
class
ParserConfigurationException
Indicates a serious configuration error.
Methods in
javax.xml.parsers
that return
Exception
Modifier and Type
Method
Description
Exception
FactoryConfigurationError.
getException
()
Return the actual exception (if any) that caused this exception to
 be raised.
Constructors in
javax.xml.parsers
with parameters of type
Exception
Modifier
Constructor
Description
FactoryConfigurationError
(
Exception
e)
Create a new
FactoryConfigurationError
with a
 given
Exception
base cause of the error.
FactoryConfigurationError
(
Exception
e,
String
msg)
Create a new
FactoryConfigurationError
with the
 given
Exception
base cause and detail message.
Uses of
Exception
in
javax.xml.stream
Subclasses of
Exception
in
javax.xml.stream
Modifier and Type
Class
Description
class
XMLStreamException
The base exception for unexpected processing errors.
Methods in
javax.xml.stream
that return
Exception
Modifier and Type
Method
Description
Exception
FactoryConfigurationError.
getException
()
Return the nested exception (if any)
Constructors in
javax.xml.stream
with parameters of type
Exception
Modifier
Constructor
Description
FactoryConfigurationError
(
Exception
e)
Construct an exception with a nested inner exception
FactoryConfigurationError
(
Exception
e,
String
msg)
Construct an exception with a nested inner exception
 and a message
FactoryConfigurationError
(
String
msg,
Exception
e)
Construct an exception with a nested inner exception
 and a message
Uses of
Exception
in
javax.xml.transform
Subclasses of
Exception
in
javax.xml.transform
Modifier and Type
Class
Description
class
TransformerConfigurationException
Indicates a serious configuration error.
class
TransformerException
This class specifies an exceptional condition that occurred
 during the transformation process.
Methods in
javax.xml.transform
that return
Exception
Modifier and Type
Method
Description
Exception
TransformerFactoryConfigurationError.
getException
()
Return the actual exception (if any) that caused this exception to
 be raised.
Constructors in
javax.xml.transform
with parameters of type
Exception
Modifier
Constructor
Description
TransformerFactoryConfigurationError
(
Exception
e)
Create a new
TransformerFactoryConfigurationError
with a
 given
Exception
base cause of the error.
TransformerFactoryConfigurationError
(
Exception
e,
String
msg)
Create a new
TransformerFactoryConfigurationError
with the
 given
Exception
base cause and detail message.
Uses of
Exception
in
javax.xml.xpath
Subclasses of
Exception
in
javax.xml.xpath
Modifier and Type
Class
Description
class
XPathException
XPathException
represents a generic XPath exception.
class
XPathExpressionException
XPathExpressionException
represents an error in an XPath expression.
class
XPathFactoryConfigurationException
XPathFactoryConfigurationException
represents
 a configuration error in a
XPathFactory
environment.
class
XPathFunctionException
XPathFunctionException
represents an error with an XPath function.
Uses of
Exception
in
jdk.dynalink
Subclasses of
Exception
in
jdk.dynalink
Modifier and Type
Class
Description
class
NoSuchDynamicMethodException
Thrown at the invocation if the call site can not be linked by any available
GuardingDynamicLinker
.
Uses of
Exception
in
jdk.dynalink.beans
Methods in
jdk.dynalink.beans
that throw
Exception
Modifier and Type
Method
Description
MethodHandle
MissingMemberHandlerFactory.
createMissingMemberHandler
(
LinkRequest
linkRequest,
LinkerServices
linkerServices)
Returns a method handle suitable for implementing missing member behavior
 for a particular link request.
GuardedInvocation
BeansLinker.
getGuardedInvocation
(
LinkRequest
request,
LinkerServices
linkerServices)
Uses of
Exception
in
jdk.dynalink.linker
Methods in
jdk.dynalink.linker
that throw
Exception
Modifier and Type
Method
Description
GuardedInvocation
GuardingTypeConverterFactory.
convertToType
(
Class
<?>Â sourceType,
Class
<?>Â targetType,
Supplier
<
MethodHandles.Lookup
>Â lookupSupplier)
Returns a guarded type conversion that receives a value of the specified
 source type and returns a value converted to the specified target type.
GuardedInvocation
GuardingDynamicLinker.
getGuardedInvocation
(
LinkRequest
linkRequest,
LinkerServices
linkerServices)
Creates a guarded invocation appropriate for a particular invocation with
 the specified arguments at a call site.
GuardedInvocation
LinkerServices.
getGuardedInvocation
(
LinkRequest
linkRequest)
Creates a guarded invocation delegating back to the
DynamicLinker
that exposes this linker services object.
Uses of
Exception
in
jdk.dynalink.linker.support
Methods in
jdk.dynalink.linker.support
that throw
Exception
Modifier and Type
Method
Description
GuardedInvocation
CompositeGuardingDynamicLinker.
getGuardedInvocation
(
LinkRequest
linkRequest,
LinkerServices
linkerServices)
Delegates the call to its component linkers.
GuardedInvocation
CompositeTypeBasedGuardingDynamicLinker.
getGuardedInvocation
(
LinkRequest
linkRequest,
LinkerServices
linkerServices)
Uses of
Exception
in
jdk.jshell
Subclasses of
Exception
in
jdk.jshell
Modifier and Type
Class
Description
class
EvalException
Wraps an throwable thrown in the executing client.
class
JShellException
The superclass of JShell generated exceptions
class
UnresolvedReferenceException
Exception reported on attempting to execute a
RECOVERABLE_DEFINED
snippet.
Uses of
Exception
in
jdk.jshell.execution
Methods in
jdk.jshell.execution
that throw
Exception
Modifier and Type
Method
Description
protected
String
DirectExecutionControl.
invoke
(
Method
doitMethod)
Invoke the specified "doit-method", a static method with no parameters.
static void
RemoteExecutionControl.
main
(
String
[]Â args)
Launch the agent, connecting to the JShell-core over the socket specified
 in the command-line argument.
Uses of
Exception
in
jdk.jshell.spi
Subclasses of
Exception
in
jdk.jshell.spi
Modifier and Type
Class
Description
static class
ExecutionControl.ClassInstallException
A class install (load or redefine) encountered a problem.
static class
ExecutionControl.EngineTerminationException
Unbidden execution engine termination has occurred.
static class
ExecutionControl.ExecutionControlException
The abstract base of all
ExecutionControl
exceptions.
static class
ExecutionControl.InternalException
An internal problem has occurred.
static class
ExecutionControl.NotImplementedException
The command is not implemented.
static class
ExecutionControl.ResolutionException
An exception indicating that a
DeclarationSnippet
with unresolved
 references has been encountered.
static class
ExecutionControl.RunException
The abstract base of of exceptions specific to running user code.
static class
ExecutionControl.StoppedException
An exception indicating that an
ExecutionControl.invoke(java.lang.String, java.lang.String)
(or theoretically a
ExecutionControl.varValue(java.lang.String, java.lang.String)
)
 has been interrupted by a
ExecutionControl.stop()
.
static class
ExecutionControl.UserException
A 'normal' user exception occurred.
class
SPIResolutionException
The construction and throw of this exception is embedded in code generated by
 the JShell core implementation in such a way that, upon executing a
RECOVERABLE_DEFINED
user method, this exception is thrown.
Uses of
Exception
in
jdk.jshell.tool
Methods in
jdk.jshell.tool
that throw
Exception
Modifier and Type
Method
Description
void
JavaShellToolBuilder.
run
(
String
...Â arguments)
Run an instance of the Java shell tool as configured by the other methods
 in this interface.
default int
JavaShellToolBuilder.
start
(
String
...Â arguments)
Run an instance of the Java shell tool as configured by the other methods
 in this interface.
Uses of
Exception
in
jdk.security.jarsigner
Subclasses of
Exception
in
jdk.security.jarsigner
Modifier and Type
Class
Description
class
JarSignerException
This exception is thrown when
JarSigner.sign(java.util.zip.ZipFile, java.io.OutputStream)
fails.
Uses of
Exception
in
netscape.javascript
Subclasses of
Exception
in
netscape.javascript
Modifier and Type
Class
Description
class
JSException
Thrown when an exception is raised in the JavaScript engine.
Uses of
Exception
in
org.ietf.jgss
Subclasses of
Exception
in
org.ietf.jgss
Modifier and Type
Class
Description
class
GSSException
This exception is thrown whenever a GSS-API error occurs, including
 any mechanism specific error.
Uses of
Exception
in
org.w3c.dom
Subclasses of
Exception
in
org.w3c.dom
Modifier and Type
Class
Description
class
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Uses of
Exception
in
org.w3c.dom.events
Subclasses of
Exception
in
org.w3c.dom.events
Modifier and Type
Class
Description
class
EventException
Event operations may throw an
EventException
as specified in
 their method descriptions.
Uses of
Exception
in
org.w3c.dom.ls
Subclasses of
Exception
in
org.w3c.dom.ls
Modifier and Type
Class
Description
class
LSException
Parser or write operations may throw an
LSException
if the
 processing is stopped.
Uses of
Exception
in
org.w3c.dom.ranges
Subclasses of
Exception
in
org.w3c.dom.ranges
Modifier and Type
Class
Description
class
RangeException
Range operations may throw a
RangeException
as specified in
 their method descriptions.
Uses of
Exception
in
org.w3c.dom.xpath
Subclasses of
Exception
in
org.w3c.dom.xpath
Modifier and Type
Class
Description
class
XPathException
A new exception has been created for exceptions specific to these XPath
 interfaces.
Uses of
Exception
in
org.xml.sax
Subclasses of
Exception
in
org.xml.sax
Modifier and Type
Class
Description
class
SAXException
Encapsulate a general SAX error or warning.
class
SAXNotRecognizedException
Exception class for an unrecognized identifier.
class
SAXNotSupportedException
Exception class for an unsupported operation.
class
SAXParseException
Encapsulate an XML parse error or warning.
Methods in
org.xml.sax
that return
Exception
Modifier and Type
Method
Description
Exception
SAXException.
getException
()
Return the embedded exception, if any.
Constructors in
org.xml.sax
with parameters of type
Exception
Modifier
Constructor
Description
SAXException
(
Exception
e)
Create a new SAXException wrapping an existing exception.
SAXException
(
String
message,
Exception
e)
Create a new SAXException from an existing exception.
SAXParseException
(
String
message,
String
publicId,
String
systemId,
 intÂ lineNumber,
 intÂ columnNumber,
Exception
e)
Create a new SAXParseException with an embedded exception.
SAXParseException
(
String
message,
Locator
locator,
Exception
e)
Wrap an existing exception in a SAXParseException.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.