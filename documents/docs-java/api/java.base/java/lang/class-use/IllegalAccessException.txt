Uses of Class java.lang.IllegalAccessException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.IllegalAccessException
Packages that use
IllegalAccessException
Package
Description
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
org.w3c.dom.bootstrap
Provides a factory for obtaining instances of
DOMImplementation
.
org.xml.sax.helpers
Provides helper classes, including
 support for bootstrapping SAX-based applications.
Uses of
IllegalAccessException
in
java.lang
Methods in
java.lang
that throw
IllegalAccessException
Modifier and Type
Method
Description
T
Class.
newInstance
()
Deprecated.
This method propagates any exception thrown by the
 nullary constructor, including a checked exception.
Uses of
IllegalAccessException
in
java.lang.invoke
Methods in
java.lang.invoke
that throw
IllegalAccessException
Modifier and Type
Method
Description
<T>
Class
<T>
MethodHandles.Lookup.
accessClass
(
Class
<T> targetClass)
Determines if a class can be accessed from the lookup context defined by
 this
Lookup
object.
MethodHandle
MethodHandles.Lookup.
bind
(
Object
receiver,
String
name,
MethodType
type)
Produces an early-bound method handle for a non-static method.
static <T> T
MethodHandles.
classData
(
MethodHandles.Lookup
caller,
String
name,
Class
<T> type)
Returns the
class data
associated with the lookup class
 of the given
caller
lookup object, or
null
.
static <T> T
MethodHandles.
classDataAt
(
MethodHandles.Lookup
caller,
String
name,
Class
<T> type,
 int index)
Returns the element at the specified index in the
class data
,
 if the class data associated with the lookup class
 of the given
caller
lookup object is a
List
.
Class
<?>
MethodHandles.Lookup.
defineClass
(byte[] bytes)
Creates and links a class or interface from
bytes
with the same class loader and in the same runtime package and
protection domain
as this lookup's
lookup class
as if calling
ClassLoader::defineClass
.
MethodHandles.Lookup
MethodHandles.Lookup.
defineHiddenClass
(byte[] bytes,
 boolean initialize,
MethodHandles.Lookup.ClassOption
... options)
Creates a
hidden
class or interface from
bytes
,
 returning a
Lookup
on the newly created class or interface.
MethodHandles.Lookup
MethodHandles.Lookup.
defineHiddenClassWithClassData
(byte[] bytes,
Object
classData,
 boolean initialize,
MethodHandles.Lookup.ClassOption
... options)
Creates a
hidden
class or interface from
bytes
with associated
class data
,
 returning a
Lookup
on the newly created class or interface.
<T>
Class
<T>
MethodHandles.Lookup.
ensureInitialized
(
Class
<T> targetClass)
Ensures that
targetClass
has been initialized.
Class
<?>
MethodHandles.Lookup.
findClass
(
String
targetName)
Looks up a class by name from the lookup context defined by this
Lookup
object,
as if resolved
by an
ldc
instruction.
MethodHandle
MethodHandles.Lookup.
findConstructor
(
Class
<?> refc,
MethodType
type)
Produces a method handle which creates an object and initializes it, using
 the constructor of the specified type.
MethodHandle
MethodHandles.Lookup.
findGetter
(
Class
<?> refc,
String
name,
Class
<?> type)
Produces a method handle giving read access to a non-static field.
MethodHandle
MethodHandles.Lookup.
findSetter
(
Class
<?> refc,
String
name,
Class
<?> type)
Produces a method handle giving write access to a non-static field.
MethodHandle
MethodHandles.Lookup.
findSpecial
(
Class
<?> refc,
String
name,
MethodType
type,
Class
<?> specialCaller)
Produces an early-bound method handle for a virtual method.
MethodHandle
MethodHandles.Lookup.
findStatic
(
Class
<?> refc,
String
name,
MethodType
type)
Produces a method handle for a static method.
MethodHandle
MethodHandles.Lookup.
findStaticGetter
(
Class
<?> refc,
String
name,
Class
<?> type)
Produces a method handle giving read access to a static field.
MethodHandle
MethodHandles.Lookup.
findStaticSetter
(
Class
<?> refc,
String
name,
Class
<?> type)
Produces a method handle giving write access to a static field.
VarHandle
MethodHandles.Lookup.
findStaticVarHandle
(
Class
<?> decl,
String
name,
Class
<?> type)
Produces a VarHandle giving access to a static field
name
of
 type
type
declared in a class of type
decl
.
VarHandle
MethodHandles.Lookup.
findVarHandle
(
Class
<?> recv,
String
name,
Class
<?> type)
Produces a VarHandle giving access to a non-static field
name
of type
type
declared in a class of type
recv
.
MethodHandle
MethodHandles.Lookup.
findVirtual
(
Class
<?> refc,
String
name,
MethodType
type)
Produces a method handle for a virtual method.
static
MethodHandles.Lookup
MethodHandles.
privateLookupIn
(
Class
<?> targetClass,
MethodHandles.Lookup
caller)
Returns a
lookup
object on a target class to emulate all supported
 bytecode behaviors, including
private access
.
MethodHandle
MethodHandles.Lookup.
unreflect
(
Method
m)
Makes a
direct method handle
to
m
, if the lookup class has permission.
MethodHandle
MethodHandles.Lookup.
unreflectConstructor
(
Constructor
<?> c)
Produces a method handle for a reflected constructor.
MethodHandle
MethodHandles.Lookup.
unreflectGetter
(
Field
f)
Produces a method handle giving read access to a reflected field.
MethodHandle
MethodHandles.Lookup.
unreflectSetter
(
Field
f)
Produces a method handle giving write access to a reflected field.
MethodHandle
MethodHandles.Lookup.
unreflectSpecial
(
Method
m,
Class
<?> specialCaller)
Produces a method handle for a reflected method.
VarHandle
MethodHandles.Lookup.
unreflectVarHandle
(
Field
f)
Produces a VarHandle giving access to a reflected field
f
of type
T
declared in a class of type
R
.
Uses of
IllegalAccessException
in
java.lang.reflect
Methods in
java.lang.reflect
that throw
IllegalAccessException
Modifier and Type
Method
Description
Object
Field.
get
(
Object
obj)
Returns the value of the field represented by this
Field
, on
 the specified object.
boolean
Field.
getBoolean
(
Object
obj)
Gets the value of a static or instance
boolean
field.
byte
Field.
getByte
(
Object
obj)
Gets the value of a static or instance
byte
field.
char
Field.
getChar
(
Object
obj)
Gets the value of a static or instance field of type
char
or of another primitive type convertible to
 type
char
via a widening conversion.
double
Field.
getDouble
(
Object
obj)
Gets the value of a static or instance field of type
double
or of another primitive type convertible to
 type
double
via a widening conversion.
float
Field.
getFloat
(
Object
obj)
Gets the value of a static or instance field of type
float
or of another primitive type convertible to
 type
float
via a widening conversion.
int
Field.
getInt
(
Object
obj)
Gets the value of a static or instance field of type
int
or of another primitive type convertible to
 type
int
via a widening conversion.
long
Field.
getLong
(
Object
obj)
Gets the value of a static or instance field of type
long
or of another primitive type convertible to
 type
long
via a widening conversion.
short
Field.
getShort
(
Object
obj)
Gets the value of a static or instance field of type
short
or of another primitive type convertible to
 type
short
via a widening conversion.
Object
Method.
invoke
(
Object
obj,
Object
... args)
Invokes the underlying method represented by this
Method
object, on the specified object with the specified parameters.
T
Constructor.
newInstance
(
Object
... initargs)
Uses the constructor represented by this
Constructor
object to
 create and initialize a new instance of the constructor's
 declaring class, with the specified initialization parameters.
void
Field.
set
(
Object
obj,
Object
value)
Sets the field represented by this
Field
object on the
 specified object argument to the specified new value.
void
Field.
setBoolean
(
Object
obj,
 boolean z)
Sets the value of a field as a
boolean
on the specified object.
void
Field.
setByte
(
Object
obj,
 byte b)
Sets the value of a field as a
byte
on the specified object.
void
Field.
setChar
(
Object
obj,
 char c)
Sets the value of a field as a
char
on the specified object.
void
Field.
setDouble
(
Object
obj,
 double d)
Sets the value of a field as a
double
on the specified object.
void
Field.
setFloat
(
Object
obj,
 float f)
Sets the value of a field as a
float
on the specified object.
void
Field.
setInt
(
Object
obj,
 int i)
Sets the value of a field as an
int
on the specified object.
void
Field.
setLong
(
Object
obj,
 long l)
Sets the value of a field as a
long
on the specified object.
void
Field.
setShort
(
Object
obj,
 short s)
Sets the value of a field as a
short
on the specified object.
Uses of
IllegalAccessException
in
java.util
Methods in
java.util
that throw
IllegalAccessException
Modifier and Type
Method
Description
ResourceBundle
ResourceBundle.Control.
newBundle
(
String
baseName,
Locale
locale,
String
format,
ClassLoader
loader,
 boolean reload)
Instantiates a resource bundle for the given bundle name of the
 given format and locale, using the given class loader if
 necessary.
Uses of
IllegalAccessException
in
javax.swing
Methods in
javax.swing
that throw
IllegalAccessException
Modifier and Type
Method
Description
static void
UIManager.
setLookAndFeel
(
String
className)
Loads the
LookAndFeel
specified by the given class
 name, using the current thread's context class loader, and
 passes it to
setLookAndFeel(LookAndFeel)
.
Uses of
IllegalAccessException
in
org.w3c.dom.bootstrap
Methods in
org.w3c.dom.bootstrap
that throw
IllegalAccessException
Modifier and Type
Method
Description
static
DOMImplementationRegistry
DOMImplementationRegistry.
newInstance
()
Obtain a new instance of a
DOMImplementationRegistry
.
Uses of
IllegalAccessException
in
org.xml.sax.helpers
Methods in
org.xml.sax.helpers
that throw
IllegalAccessException
Modifier and Type
Method
Description
static
Parser
ParserFactory.
makeParser
()
Deprecated.
Create a new SAX parser using the `org.xml.sax.parser' system property.
static
Parser
ParserFactory.
makeParser
(
String
className)
Deprecated.
Create a new SAX parser object using the class name provided.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.