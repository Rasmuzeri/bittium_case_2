Uses of Annotation Interface java.lang.SuppressWarnings (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Annotation Interface
java.lang.SuppressWarnings
Packages that use
SuppressWarnings
Package
Description
com.sun.java.accessibility.util
Provides a collection of interfaces and classes that compose the Java Accessibility
 Utilities.
com.sun.jdi
This is the core package of the Java Debug
 Interface (JDI), it defines mirrors for values, types, and the target
 VirtualMachine itself - as well bootstrapping facilities.
com.sun.net.httpserver.spi
Provides a pluggable service provider interface, which allows the HTTP server
 implementation to be replaced with other implementations.
com.sun.security.auth.module
Provides implementations of
LoginModule
.
java.applet
Provides the classes necessary to create an applet and the classes an applet
 uses to communicate with its applet context.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.datatransfer
Provides interfaces and classes for transferring data between and within
 applications.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
java.awt.geom
Provides the Java 2D classes for defining and performing operations on
 objects related to two-dimensional geometry.
java.awt.image.renderable
Provides classes and interfaces for producing rendering-independent images.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.beans.beancontext
Provides classes and interfaces relating to bean context.
java.io
Provides for system input and output through data streams,
 serialization and the file system.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.constant
Classes and interfaces to represent
nominal descriptors
for run-time
 entities such as classes or method handles, and classfile entities such as
 constant pool entries or
invokedynamic
call sites.
java.lang.instrument
Provides services that allow Java programming language agents to instrument
 programs running on the Java Virtual Machine (JVM).
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.lang.management
Provides the management interfaces for monitoring and management of the
Java virtual machine and other components in the Java runtime.
java.lang.module
Classes to support module descriptors and creating configurations of modules
 by means of resolution and service binding.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.math
Provides classes for performing arbitrary-precision integer
 arithmetic (
BigInteger
) and arbitrary-precision decimal
 arithmetic (
BigDecimal
).
java.net
Provides the classes for implementing networking applications.
java.nio.charset
Defines charsets, decoders, and encoders, for translating between
 bytes and Unicode characters.
java.rmi
Provides the RMI package.
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
java.security
Provides the classes and interfaces for the security framework.
java.security.cert
Provides classes and interfaces for parsing and managing
 certificates, certificate revocation lists (CRLs), and
 certification paths.
java.security.interfaces
Provides interfaces for generating RSA (Rivest, Shamir and
 Adleman AsymmetricCipher algorithm)
 keys as defined in the RSA Laboratory Technical Note
 PKCS#1, and DSA (Digital Signature
 Algorithm) keys as defined in NIST's FIPS-186.
java.sql
Provides the API for accessing and processing data stored in a
 data source (usually a relational database) using the
 Java programming language.
java.text
Provides classes and interfaces for handling text, dates, numbers,
 and messages in a manner independent of natural languages.
java.time
The main API for dates, times, instants, and durations.
java.time.chrono
Generic API for calendar systems other than the default ISO.
java.time.temporal
Access to date and time using fields and units, and date time adjusters.
java.util
Contains the collections framework, some internationalization support classes,
 a service loader, properties, random number generation, string parsing
 and scanning classes, base64 encoding and decoding, a bit array, and
 several miscellaneous utility classes.
java.util.concurrent
Utility classes commonly useful in concurrent programming.
java.util.concurrent.atomic
A small toolkit of classes that support lock-free thread-safe
 programming on single variables.
java.util.function
Functional interfaces
provide target types for lambda expressions
 and method references.
java.util.logging
Provides the classes and interfaces of
 the Java 2 platform's core logging facilities.
java.util.prefs
This package allows applications to store and retrieve user and system
 preference and configuration data.
java.util.spi
Service provider classes for the classes in the java.util package.
java.util.stream
Classes to support functional-style operations on streams of elements, such
 as map-reduce transformations on collections.
javax.crypto
Provides the classes and interfaces for cryptographic
 operations.
javax.crypto.interfaces
Provides interfaces for Diffie-Hellman keys as defined in RSA
 Laboratories' PKCS #3.
javax.imageio.metadata
A package of the Java Image I/O API dealing with reading and writing
 metadata.
javax.imageio.spi
A package of the Java Image I/O API containing the plug-in interfaces for
 readers, writers, transcoders, and streams, and a runtime registry.
javax.imageio.stream
A package of the Java Image I/O API dealing with low-level I/O from files and
 streams.
javax.lang.model.util
Utilities to assist in the processing of
program elements
and
types
.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.loading
Provides the classes which implement advanced dynamic
        loading.
javax.management.modelmbean
Provides the definition of the ModelMBean classes.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.remote
Interfaces for remote access to
        JMX MBean servers.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
javax.naming
Provides the classes and interfaces for accessing naming services.
javax.naming.directory
Extends the
javax.naming
package to provide functionality
for accessing directory services.
javax.naming.event
Provides support for event notification when accessing naming and
directory services.
javax.naming.ldap
Provides support for LDAPv3 extended operations and controls.
javax.naming.spi
Provides the means for dynamically plugging in support for accessing
naming and directory services through the
javax.naming
and related packages.
javax.net.ssl
Provides classes for the secure socket package.
javax.print
Provides the principal classes and interfaces for the Java Print
 Service API.
javax.security.auth
This package provides a framework for authentication and
 authorization.
javax.security.auth.login
This package provides a pluggable authentication framework.
javax.security.cert
Provides classes for public key certificates.
javax.sound.midi
Provides interfaces and classes for I/O, sequencing, and synthesis of MIDI
 (Musical Instrument Digital Interface) data.
javax.sound.sampled
Provides interfaces and classes for capture, processing, and playback of
 sampled audio data.
javax.sql.rowset
Standard interfaces and base classes for JDBC
RowSet
implementations.
javax.sql.rowset.serial
Provides utility classes to allow serializable mappings between SQL types
 and data types in the Java programming language.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.border
Provides classes and interface for drawing specialized borders around a Swing
 component.
javax.swing.colorchooser
Contains classes and interfaces used by the
JColorChooser
component.
javax.swing.event
Provides for events fired by Swing components.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.plaf.nimbus
Provides user interface objects built according to the cross-platform Nimbus
 look and feel.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
javax.swing.text.html.parser
Provides the default HTML parser, along with support classes.
javax.swing.text.rtf
Provides a class (
RTFEditorKit
) for creating Rich-Text-Format text
 editors.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
javax.swing.undo
Allows developers to provide support for undo/redo in applications such as
 text editors.
javax.xml.parsers
Provides the classes for processing XML documents with a SAX (Simple API for XML)
 parser or a DOM (Document Object Model) Document builder.
javax.xml.stream
Defines interfaces and classes for the Streaming API for XML (StAX).
javax.xml.transform
Defines the generic APIs for processing transformation instructions,
 and performing a transformation from source to result.
jdk.dynalink.linker.support
Contains classes that make it more convenient for language runtimes to
 implement their own language-specific object models and type conversions
 by providing basic implementations of some classes as well as various
 utilities.
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
jdk.javadoc.doclet
The Doclet API provides an environment which, in conjunction with
 the Language Model API and Compiler Tree API, allows clients
 to inspect the source-level structures of programs and
 libraries, including API comments embedded in the source.
jdk.jfr
This package provides classes to create events and control Flight Recorder.
jdk.jfr.consumer
This package contains classes for consuming Flight Recorder data.
jdk.jshell
Provides interfaces for creating tools, such as a Read-Eval-Print Loop (REPL),
 which interactively evaluate "snippets" of Java programming language code.
jdk.jshell.execution
Provides implementation support for building JShell execution engines.
jdk.jshell.spi
Defines the Service Provider Interface for pluggable JShell execution engines.
netscape.javascript
Provides Java code the ability to access the JavaScript engine and the
 HTML DOM in the web browser.
org.w3c.dom.bootstrap
Provides a factory for obtaining instances of
DOMImplementation
.
org.xml.sax.helpers
Provides helper classes, including
 support for bootstrapping SAX-based applications.
Packages with annotations of type
SuppressWarnings
Package
Description
java.net
Provides the classes for implementing networking applications.
Uses of
SuppressWarnings
in
com.sun.java.accessibility.util
Methods in
com.sun.java.accessibility.util
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
boolean
Translator.
isFocusTraversable
()
Returns whether this object can accept focus or not.
static void
EventQueueMonitor.
maybeInitialize
()
Tell the
EventQueueMonitor
to start listening for events.
Uses of
SuppressWarnings
in
com.sun.jdi
Methods in
com.sun.jdi
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
ThreadReference.
stop
(
ObjectReference
throwable)
Stops this thread with an asynchronous exception.
void
ThreadReference.
suspend
()
Suspends this thread.
Uses of
SuppressWarnings
in
com.sun.net.httpserver.spi
Methods in
com.sun.net.httpserver.spi
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
HttpServerProvider
HttpServerProvider.
provider
()
Returns the system wide default HttpServerProvider for this invocation of
 the Java virtual machine.
Uses of
SuppressWarnings
in
com.sun.security.auth.module
Methods in
com.sun.security.auth.module
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
JndiLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
KeyStoreLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
Krb5LoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
void
LdapLoginModule.
initialize
(
Subject
subject,
CallbackHandler
callbackHandler,
Map
<
String
,
?> sharedState,
Map
<
String
,
?> options)
Initialize this
LoginModule
.
Uses of
SuppressWarnings
in
java.applet
Classes in
java.applet
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
Applet
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated, no replacement.
interface
AppletContext
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated, no replacement.
interface
AppletStub
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated, no replacement.
Methods in
java.applet
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
Applet.
resize
(int width,
 int height)
Deprecated, for removal: This API element is subject to removal in a future version.
Requests that this applet be resized.
void
Applet.
resize
(
Dimension
d)
Deprecated, for removal: This API element is subject to removal in a future version.
Requests that this applet be resized.
Uses of
SuppressWarnings
in
java.awt
Fields in
java.awt
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
ComponentListener
Component.AccessibleAWTComponent.
accessibleAWTComponentHandler
A component listener to track show/hide/resize events
 and convert them to PropertyChange events.
protected
FocusListener
Component.AccessibleAWTComponent.
accessibleAWTFocusHandler
A listener to track focus events
 and convert them to PropertyChange events.
protected
ContainerListener
Container.AccessibleAWTContainer.
accessibleContainerHandler
The handler to fire
PropertyChange
when children are added or removed
protected
AccessibleContext
Component.
accessibleContext
The
AccessibleContext
associated with this
Component
.
Object
Event.
arg
Deprecated.
An arbitrary argument of the event.
Object
Event.
target
Deprecated.
The target component.
Methods in
java.awt
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
ActionListener
AWTEventMulticaster.
add
(
ActionListener
a,
ActionListener
b)
Adds action-listener-a with action-listener-b and
 returns the resulting multicast listener.
static
AdjustmentListener
AWTEventMulticaster.
add
(
AdjustmentListener
a,
AdjustmentListener
b)
Adds adjustment-listener-a with adjustment-listener-b and
 returns the resulting multicast listener.
static
HierarchyListener
AWTEventMulticaster.
add
(
HierarchyListener
a,
HierarchyListener
b)
Adds hierarchy-listener-a with hierarchy-listener-b and
 returns the resulting multicast listener.
static
ItemListener
AWTEventMulticaster.
add
(
ItemListener
a,
ItemListener
b)
Adds item-listener-a with item-listener-b and
 returns the resulting multicast listener.
static
MouseWheelListener
AWTEventMulticaster.
add
(
MouseWheelListener
a,
MouseWheelListener
b)
Adds mouse-wheel-listener-a with mouse-wheel-listener-b and
 returns the resulting multicast listener.
static
TextListener
AWTEventMulticaster.
add
(
TextListener
a,
TextListener
b)
Adds text-listener-a with text-listener-b and
 returns the resulting multicast listener.
static
WindowStateListener
AWTEventMulticaster.
add
(
WindowStateListener
a,
WindowStateListener
b)
Adds window-state-listener-a with window-state-listener-b
 and returns the resulting multicast listener.
int
FontMetrics.
bytesWidth
(byte[] data,
 int off,
 int len)
Returns the total advance width for showing the specified array
 of bytes in this
Font
.
Object
RenderingHints.
clone
()
Creates a clone of this
RenderingHints
object
 that has the same contents as this
RenderingHints
object.
void
Graphics.
drawBytes
(byte[] data,
 int offset,
 int length,
 int x,
 int y)
Draws the text given by the specified byte array, using this
 graphics context's current font and color.
void
Graphics.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
void
PrintJob.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
static
AWTKeyStroke
AWTKeyStroke.
getAWTKeyStroke
(
String
s)
Parses a string and returns an
AWTKeyStroke
.
static
AWTKeyStroke
AWTKeyStroke.
getAWTKeyStrokeForEvent
(
KeyEvent
anEvent)
Returns an
AWTKeyStroke
which represents the
 stroke which generated a given
KeyEvent
.
Set
<
AWTKeyStroke
>
Window.
getFocusTraversalKeys
(int id)
Gets a focus traversal key for this Window.
URL
SplashScreen.
getImageURL
()
Returns the current splash screen image.
protected
List
<
KeyEventDispatcher
>
KeyboardFocusManager.
getKeyEventDispatchers
()
Returns this KeyboardFocusManager's KeyEventDispatcher chain as a List.
protected
List
<
KeyEventPostProcessor
>
KeyboardFocusManager.
getKeyEventPostProcessors
()
Returns this KeyboardFocusManager's KeyEventPostProcessor chain as a
 List.
static <T extends
EventListener
>
T[]
AWTEventMulticaster.
getListeners
(
EventListener
l,
Class
<T> listenerType)
Returns an array of all the objects chained as
Foo
Listener
s by the specified
java.util.EventListener
.
<T extends
EventListener
>
T[]
Component.
getListeners
(
Class
<T> listenerType)
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
Component
.
static
SplashScreen
SplashScreen.
getSplashScreen
()
Returns the
SplashScreen
object used for
 Java startup splash screen control on systems that support display.
boolean
Desktop.
moveToTrash
(
File
file)
Moves the specified file to the trash.
void
Window.
pack
()
Causes this Window to be sized to fit the preferred size
 and layouts of its subcomponents.
static
ActionListener
AWTEventMulticaster.
remove
(
ActionListener
l,
ActionListener
oldl)
Removes the old action-listener from action-listener-l and
 returns the resulting multicast listener.
static
AdjustmentListener
AWTEventMulticaster.
remove
(
AdjustmentListener
l,
AdjustmentListener
oldl)
Removes the old adjustment-listener from adjustment-listener-l and
 returns the resulting multicast listener.
static
HierarchyListener
AWTEventMulticaster.
remove
(
HierarchyListener
l,
HierarchyListener
oldl)
Removes the old hierarchy-listener from hierarchy-listener-l and
 returns the resulting multicast listener.
static
ItemListener
AWTEventMulticaster.
remove
(
ItemListener
l,
ItemListener
oldl)
Removes the old item-listener from item-listener-l and
 returns the resulting multicast listener.
static
MouseWheelListener
AWTEventMulticaster.
remove
(
MouseWheelListener
l,
MouseWheelListener
oldl)
Removes the old mouse-wheel-listener from mouse-wheel-listener-l
 and returns the resulting multicast listener.
static
TextListener
AWTEventMulticaster.
remove
(
TextListener
l,
TextListener
oldl)
Removes the old text-listener from text-listener-l and
 returns the resulting multicast listener.
static
WindowStateListener
AWTEventMulticaster.
remove
(
WindowStateListener
l,
WindowStateListener
oldl)
Removes the old window-state-listener from window-state-listener-l
 and returns the resulting multicast listener.
void
Component.
remove
(
MenuComponent
popup)
Removes the specified popup menu from the component.
void
Window.
setOpacity
(float opacity)
Sets the opacity of the window.
void
PopupMenu.
show
(
Component
origin,
 int x,
 int y)
Shows the popup menu at the x, y position relative to an origin
 component.
Constructors in
java.awt
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
protected
FlipBufferStrategy
(int numBuffers,
BufferCapabilities
caps)
Creates a new flipping buffer strategy for this component.
Uses of
SuppressWarnings
in
java.awt.datatransfer
Classes in
java.awt.datatransfer
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
Clipboard
A class that implements a mechanism to transfer data using cut/copy/paste
 operations.
Uses of
SuppressWarnings
in
java.awt.dnd
Methods in
java.awt.dnd
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
Iterator
<
InputEvent
>
DragGestureEvent.
iterator
()
Returns an
Iterator
for the events
 comprising the gesture.
Object
[]
DragGestureEvent.
toArray
(
Object
[] array)
Returns an array of the events comprising the drag gesture.
protected void
DragSourceContext.
updateCurrentCursor
(int sourceAct,
 int targetAct,
 int status)
If the default drag cursor behavior is active, this method
 sets the default drag cursor for the specified actions
 supported by the drag source, the drop target action,
 and status, otherwise this method does nothing.
Uses of
SuppressWarnings
in
java.awt.event
Fields in
java.awt.event
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
Object
InvocationEvent.
notifier
The (potentially null) Object whose notifyAll() method will be called
 immediately after the Runnable.run() method has returned or thrown an exception
 or after the event was disposed.
protected
Runnable
InvocationEvent.
runnable
The Runnable whose run() method will be called.
Methods in
java.awt.event
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
String
MouseEvent.
getMouseModifiersText
(int modifiers)
Returns a
String
instance describing the modifier keys and
 mouse buttons that were down during the event, such as "Shift",
 or "Ctrl+Shift".
String
ActionEvent.
paramString
()
Returns a parameter string identifying this action event.
String
KeyEvent.
paramString
()
Returns a parameter string identifying this event.
String
MouseEvent.
paramString
()
Returns a parameter string identifying this event.
Constructors in
java.awt.event
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
KeyEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int keyCode,
 char keyChar,
 int keyLocation)
Constructs a
KeyEvent
object.
MouseEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int xAbs,
 int yAbs,
 int clickCount,
 boolean popupTrigger,
 int button)
Constructs a
MouseEvent
object with the
 specified source component,
 type, time, modifiers, coordinates, absolute coordinates, click count, popupTrigger flag,
 and button number.
Uses of
SuppressWarnings
in
java.awt.geom
Methods in
java.awt.geom
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
AffineTransform.
concatenate
(
AffineTransform
Tx)
Concatenates an
AffineTransform Tx
to
 this
AffineTransform
Cx in the most commonly useful
 way to provide a new user space
 that is mapped to the former user space by
Tx
.
double
AffineTransform.
getDeterminant
()
Returns the determinant of the matrix representation of the transform.
Point2D
AffineTransform.
inverseTransform
(
Point2D
ptSrc,
Point2D
ptDst)
Inverse transforms the specified
ptSrc
and stores the
 result in
ptDst
.
void
AffineTransform.
preConcatenate
(
AffineTransform
Tx)
Concatenates an
AffineTransform Tx
to
 this
AffineTransform
Cx
 in a less commonly used way such that
Tx
modifies the
 coordinate transformation relative to the absolute pixel
 space rather than relative to the existing user space.
void
AffineTransform.
scale
(double sx,
 double sy)
Concatenates this transform with a scaling transformation.
Uses of
SuppressWarnings
in
java.awt.image.renderable
Methods in
java.awt.image.renderable
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
Object
ParameterBlock.
clone
()
Creates a copy of a
ParameterBlock
.
Uses of
SuppressWarnings
in
java.beans
Methods in
java.beans
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
AppletInitializer.
activate
(
Applet
newApplet)
Deprecated, for removal: This API element is subject to removal in a future version.
Activate, and/or mark Applet active.
static <T> T
EventHandler.
create
(
Class
<T> listenerInterface,
Object
target,
String
action,
String
eventPropertyName,
String
listenerMethodName)
Creates an implementation of
listenerInterface
in which
 the method named
listenerMethodName
passes the value of the event expression,
eventPropertyName
,
 to the final method in the statement,
action
, which
 is applied to the
target
.
PropertyEditor
PropertyDescriptor.
createPropertyEditor
(
Object
bean)
Constructs an instance of a property editor using the current
 property editor class.
void
AppletInitializer.
initialize
(
Applet
newAppletBean,
BeanContext
bCtxt)
Deprecated, for removal: This API element is subject to removal in a future version.
If passed to the appropriate variant of java.beans.Beans.instantiate
 this method will be called in order to associate the newly instantiated
 Applet (JavaBean) with its AppletContext, AppletStub, and Container.
static
Object
Beans.
instantiate
(
ClassLoader
cls,
String
beanName,
BeanContext
beanContext)
Instantiate a JavaBean.
static
Object
Beans.
instantiate
(
ClassLoader
cls,
String
beanName,
BeanContext
beanContext,
AppletInitializer
initializer)
Deprecated, for removal: This API element is subject to removal in a future version.
It is recommended to use
Beans.instantiate(ClassLoader, String, BeanContext)
,
 because the Applet API is deprecated.
Object
EventHandler.
invoke
(
Object
proxy,
Method
method,
Object
[] arguments)
Extract the appropriate property value from the event and
 pass it to the action associated with
 this
EventHandler
.
Uses of
SuppressWarnings
in
java.beans.beancontext
Classes in
java.beans.beancontext
with annotations of type
SuppressWarnings
Modifier and Type
Interface
Description
interface
BeanContext
The BeanContext acts a logical hierarchical container for JavaBeans.
Fields in
java.beans.beancontext
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
BeanContextChild
BeanContextChildSupport.
beanContextChildPeer
The
BeanContext
in which
 this
BeanContextChild
is nested.
protected
Collection
BeanContextMembershipEvent.
children
The list of children affected by this
 event notification.
protected
BeanContext
BeanContextEvent.
propagatedFrom
The
BeanContext
from which this event was propagated
protected
BeanContextServiceProvider
BeanContextServicesSupport.BCSSServiceProvider.
serviceProvider
The service provider.
Methods in
java.beans.beancontext
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
boolean
BeanContextSupport.
addAll
(
Collection
c)
add Collection to set of Children (Unsupported)
 implementations must synchronized on the hierarchy lock and "children" protected field
boolean
BeanContextSupport.
containsAll
(
Collection
c)
Tests to see if all objects in the
 specified
Collection
are children of
 this
BeanContext
.
protected final void
BeanContextSupport.
deserialize
(
ObjectInputStream
ois,
Collection
coll)
used by readObject to deserialize a collection.
Iterator
BeanContextMembershipEvent.
iterator
()
Gets the array of children affected by this event.
boolean
BeanContextSupport.
removeAll
(
Collection
c)
remove all specified children (Unsupported)
 implementations must synchronized on the hierarchy lock and "children" protected field
boolean
BeanContextSupport.
retainAll
(
Collection
c)
retain only specified children (Unsupported)
 implementations must synchronized on the hierarchy lock and "children" protected field
Constructors in
java.beans.beancontext
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
BeanContextMembershipEvent
(
BeanContext
bc,
Collection
changes)
Construct a BeanContextMembershipEvent
Uses of
SuppressWarnings
in
java.io
Classes in
java.io
with annotations of type
SuppressWarnings
Modifier and Type
Interface
Description
interface
FilenameFilter
Instances of classes that implement this interface are used to
 filter filenames.
Methods in
java.io
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
Class
<?>
ObjectStreamClass.
forClass
()
Return the class in the local VM that this version is mapped to.
long
ObjectStreamClass.
getSerialVersionUID
()
Return the serialVersionUID for this class.
Class
<?>
ObjectStreamField.
getType
()
Get the type of the field.
int
LineNumberInputStream.
read
()
Deprecated.
Reads the next byte of data from this input stream.
int
LineNumberReader.
read
()
Read a single character.
int
LineNumberReader.
read
(char[] cbuf,
 int off,
 int len)
Reads characters into a portion of an array.
int
StringBufferInputStream.
read
(byte[] b,
 int off,
 int len)
Deprecated.
Reads up to
len
bytes of data from this input stream
 into an array of bytes.
final void
RandomAccessFile.
writeBytes
(
String
s)
Writes the string to the file as a sequence of bytes.
Uses of
SuppressWarnings
in
java.lang
Classes in
java.lang
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
Enum
<E extends
Enum
<E>>
This is the common base class of all Java language enumeration classes.
class
EnumConstantNotPresentException
Thrown when an application tries to access an enum constant by name
 and the enum type contains no constant with the specified name.
static enum
System.Logger.Level
System
loggers
levels.
static class
System.LoggerFinder
The
LoggerFinder
service is responsible for creating, managing,
 and configuring loggers to the underlying framework it uses.
Fields in
java.lang
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final
Class
<
Boolean
>
Boolean.
TYPE
The Class object representing the primitive type boolean.
static final
Class
<
Byte
>
Byte.
TYPE
The
Class
instance representing the primitive type
byte
.
static final
Class
<
Character
>
Character.
TYPE
The
Class
instance representing the primitive type
char
.
static final
Class
<
Double
>
Double.
TYPE
The
Class
instance representing the primitive type
double
.
static final
Class
<
Float
>
Float.
TYPE
The
Class
instance representing the primitive type
float
.
static final
Class
<
Integer
>
Integer.
TYPE
The
Class
instance representing the primitive type
int
.
static final
Class
<
Long
>
Long.
TYPE
The
Class
instance representing the primitive type
long
.
static final
Class
<
Short
>
Short.
TYPE
The
Class
instance representing the primitive type
short
.
static final
Class
<
Void
>
Void.
TYPE
The
Class
object representing the pseudo-type corresponding to
 the keyword
void
.
Methods in
java.lang
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
<U>
Class
<? extends U>
Class.
asSubclass
(
Class
<U> clazz)
Casts this
Class
object to represent a subclass of the class
 represented by the specified class object.
T
Class.
cast
(
Object
obj)
Casts an object to the class or interface represented
 by this
Class
object.
void
SecurityManager.
checkPermission
(
Permission
perm)
Deprecated, for removal: This API element is subject to removal in a future version.
Throws a
SecurityException
if the requested
 access, specified by the given permission, is not permitted based
 on the security policy currently in effect.
void
SecurityManager.
checkPermission
(
Permission
perm,
Object
context)
Deprecated, for removal: This API element is subject to removal in a future version.
Throws a
SecurityException
if the
 specified security context is denied access to the resource
 specified by the given permission.
static int
CharSequence.
compare
(
CharSequence
cs1,
CharSequence
cs2)
Compares two
CharSequence
instances lexicographically.
protected final void
Enum.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
static
Class
<?>
Class.
forName
(
Module
module,
String
name)
Returns the
Class
with the given
binary name
in the given module.
<T> T
ScopedValue.Carrier.
get
(
ScopedValue
PREVIEW
<T> key)
Returns the value of a
ScopedValue
PREVIEW
in this mapping.
T
ScopedValue.
get
()
Returns the value of the scoped value if bound in the current thread.
<A extends
Annotation
>
A
Class.
getAnnotation
(
Class
<A> annotationClass)
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
Class
<?>[]
Class.
getClasses
()
Returns an array containing
Class
objects representing all
 the public classes and interfaces that are members of the class
 represented by this
Class
object.
<A extends
Annotation
>
A
Class.
getDeclaredAnnotation
(
Class
<A> annotationClass)
Returns this element's annotation for the specified type if
 such an annotation is
directly present
, else null.
final
Class
<
E
>
Enum.
getDeclaringClass
()
Returns the Class object corresponding to this enum constant's
 enum type.
static
System.Logger
System.
getLogger
(
String
name,
ResourceBundle
bundle)
Returns a localizable instance of
Logger
for the caller's use.
static
Package
Package.
getPackage
(
String
name)
Deprecated.
If multiple class loaders delegate to each other and define classes
 with the same package name, and one such loader relies on the lookup
 behavior of
getPackage
to return a
Package
from
 a parent loader, then the properties exposed by the
Package
may not be as expected in the rest of the program.
Object
SecurityManager.
getSecurityContext
()
Deprecated, for removal: This API element is subject to removal in a future version.
Creates an object that encapsulates the current execution
 environment.
static
SecurityManager
System.
getSecurityManager
()
Deprecated, for removal: This API element is subject to removal in a future version.
This method is only useful in conjunction with
the Security Manager
, which is
       deprecated and subject to removal in a future release.
TypeVariable
<
Class
<
T
>>[]
Class.
getTypeParameters
()
Returns an array of
TypeVariable
objects that represent the
 type variables declared by the generic declaration represented by this
GenericDeclaration
object, in declaration order.
static boolean
Character.
isJavaIdentifierPart
(char ch)
Determines if the specified character may be part of a Java
 identifier as other than the first character.
static boolean
Character.
isJavaIdentifierPart
(int codePoint)
Determines if the character (Unicode code point) may be part of a Java
 identifier as other than the first character.
static boolean
Character.
isJavaIdentifierStart
(char ch)
Determines if the specified character is
 permissible as the first character in a Java identifier.
static boolean
Character.
isJavaIdentifierStart
(int codePoint)
Determines if the character (Unicode code point) is
 permissible as the first character in a Java identifier.
T
Class.
newInstance
()
Deprecated.
This method propagates any exception thrown by the
 nullary constructor, including a checked exception.
static void
System.
runFinalization
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
Method parameters in
java.lang
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static void
System.
setSecurityManager
(
SecurityManager
sm)
Deprecated, for removal: This API element is subject to removal in a future version.
This method is only useful in conjunction with
the Security Manager
, which is
       deprecated and subject to removal in a future release.
Uses of
SuppressWarnings
in
java.lang.constant
Methods in
java.lang.constant
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
T
DynamicConstantDesc.
resolveConstantDesc
(
MethodHandles.Lookup
lookup)
Uses of
SuppressWarnings
in
java.lang.instrument
Methods in
java.lang.instrument
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
Class
[]
Instrumentation.
getAllLoadedClasses
()
Returns an array of all classes currently loaded by the JVM.
Class
[]
Instrumentation.
getInitiatedClasses
(
ClassLoader
loader)
Returns an array of all classes which
loader
can find by name
 via
ClassLoader::loadClass
,
Class::forName
and bytecode linkage.
Uses of
SuppressWarnings
in
java.lang.invoke
Methods in
java.lang.invoke
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static <T> T
MethodHandleProxies.
asInterfaceInstance
(
Class
<T> intfc,
MethodHandle
target)
Produces an instance of the given single-method interface which redirects
 its calls to the given method handle.
MethodHandles.Lookup
MethodHandles.Lookup.
defineHiddenClass
(byte[] bytes,
 boolean initialize,
MethodHandles.Lookup.ClassOption
... options)
Creates a
hidden
class or interface from
bytes
,
 returning a
Lookup
on the newly created class or interface.
M
TypeDescriptor.OfMethod.
insertParameterTypes
(int pos,
F
... paramTypes)
Return a method descriptor that is identical to this one,
 except that a range of additional parameter types have been inserted.
Uses of
SuppressWarnings
in
java.lang.management
Classes in
java.lang.management
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
ManagementFactory
The
ManagementFactory
class is a factory class for getting
 managed beans for the Java platform.
interface
PlatformLoggingMXBean
The management interface for the
logging
facility.
Methods in
java.lang.management
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
default long
RuntimeMXBean.
getPid
()
Returns the
process ID
representing
 the running Java virtual machine.
Uses of
SuppressWarnings
in
java.lang.module
Methods in
java.lang.module
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
ModuleFinder
ModuleFinder.
ofSystem
()
Returns a module finder that locates the
system modules
.
Uses of
SuppressWarnings
in
java.lang.reflect
Classes in
java.lang.reflect
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
enum
AccessFlag
Represents a JVM access or module-related flag on a runtime member,
 such as a
class
,
field
, or
method
.
enum
ClassFileFormatVersion
Class file format versions of the Java virtual machine.
Fields in
java.lang.reflect
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
InvocationHandler
Proxy.
h
the invocation handler for this proxy instance.
Methods in
java.lang.reflect
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
AnnotatedType
[]
Executable.
getAnnotatedParameterTypes
()
Returns an array of
AnnotatedType
objects that represent the use
 of types to specify formal parameter types of the method/constructor
 represented by this Executable.
Type
[]
Executable.
getGenericParameterTypes
()
Returns an array of
Type
objects that represent the
 formal parameter types, in declaration order, of the executable
 represented by this object.
static
InvocationHandler
Proxy.
getInvocationHandler
(
Object
proxy)
Returns the invocation handler for the specified proxy instance.
abstract
Class
<?>[]
Executable.
getParameterTypes
()
Returns an array of
Class
objects that represent the formal
 parameter types, in declaration order, of the executable
 represented by this object.
TypeVariable
<
Constructor
<
T
>>[]
Constructor.
getTypeParameters
()
Returns an array of
TypeVariable
objects that represent the
 type variables declared by the generic declaration represented by this
GenericDeclaration
object, in declaration order.
TypeVariable
<
Method
>[]
Method.
getTypeParameters
()
Returns an array of
TypeVariable
objects that represent the
 type variables declared by the generic declaration represented by this
GenericDeclaration
object, in declaration order.
Uses of
SuppressWarnings
in
java.math
Classes in
java.math
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
enum
RoundingMode
Specifies a
rounding policy
for numerical operations capable
 of discarding precision.
Uses of
SuppressWarnings
in
java.net
Methods in
java.net
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
protected
Class
<?>
URLClassLoader.
findClass
(
String
name)
Finds and loads the class with the specified name from the URL search
 path.
Object
ContentHandler.
getContent
(
URLConnection
urlc,
Class
[] classes)
Given a URL connect stream positioned at the beginning of the
 representation of an object, this method reads that stream and
 creates an object that matches one of the types specified.
long
URLConnection.
getHeaderFieldDate
(
String
name,
 long defaultValue)
Returns the value of the named field parsed as date.
<T> T
Socket.
getOption
(
SocketOption
<T> name)
Returns the value of a socket option.
protected
PermissionCollection
URLClassLoader.
getPermissions
(
CodeSource
codesource)
Returns the permissions for the given codesource object.
String
ServerSocket.
toString
()
Returns the implementation address and implementation port of
 this socket as a
String
.
Constructors in
java.net
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
URLClassLoader
(
String
name,
URL
[] urls,
ClassLoader
parent)
Constructs a new named
URLClassLoader
for the specified URLs.
URLClassLoader
(
String
name,
URL
[] urls,
ClassLoader
parent,
URLStreamHandlerFactory
factory)
Constructs a new named
URLClassLoader
for the specified URLs,
 parent class loader, and URLStreamHandlerFactory.
URLClassLoader
(
URL
[] urls)
Constructs a new URLClassLoader for the specified URLs using the
 default delegation parent
ClassLoader
.
URLClassLoader
(
URL
[] urls,
ClassLoader
parent)
Constructs a new URLClassLoader for the given URLs.
URLClassLoader
(
URL
[] urls,
ClassLoader
parent,
URLStreamHandlerFactory
factory)
Constructs a new URLClassLoader for the specified URLs, parent
 class loader, and URLStreamHandlerFactory.
Uses of
SuppressWarnings
in
java.nio.charset
Methods in
java.nio.charset
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
SortedMap
<
String
,
Charset
>
Charset.
availableCharsets
()
Constructs a sorted map from canonical charset names to charset objects.
Uses of
SuppressWarnings
in
java.rmi
Classes in
java.rmi
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
RMISecurityManager
Deprecated, for removal: This API element is subject to removal in a future version.
This class is only useful in conjunction with
the Security Manager
, which is deprecated
       and subject to removal in a future release.
Uses of
SuppressWarnings
in
java.rmi.server
Fields in
java.rmi.server
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final long
RemoteRef.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
ServerRef.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
Methods in
java.rmi.server
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
Remote
RemoteObject.
toStub
(
Remote
obj)
Returns the stub for the remote object
obj
passed
 as a parameter.
Uses of
SuppressWarnings
in
java.security
Classes in
java.security
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
Identity
Deprecated, for removal: This API element is subject to removal in a future version.
This class is deprecated and subject to removal in a future
     version of Java SE.
class
IdentityScope
Deprecated, for removal: This API element is subject to removal in a future version.
This class is deprecated and subject to removal in a future
     version of Java SE.
class
Signer
Deprecated, for removal: This API element is subject to removal in a future version.
This class is deprecated and subject to removal in a future
     version of Java SE.
class
URIParameter
A parameter that contains a URI pointing to data intended for a
 PolicySpi or ConfigurationSpi implementation.
Fields in
java.security
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final long
Key.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
PrivateKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
PublicKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
Methods in
java.security
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
AccessControlContext.
checkPermission
(
Permission
perm)
Deprecated, for removal: This API element is subject to removal in a future version.
Determines whether the access request indicated by the
 specified permission should be allowed or denied, based on
 the security policy currently in effect, and the context in
 this object.
static void
AccessController.
checkPermission
(
Permission
perm)
Deprecated, for removal: This API element is subject to removal in a future version.
Determines whether the access request indicated by the
 specified permission should be allowed or denied, based on
 the current
AccessControlContext
and security policy.
protected
PermissionCollection
PolicySpi.
engineGetPermissions
(
CodeSource
codesource)
Deprecated, for removal: This API element is subject to removal in a future version.
Return a PermissionCollection object containing the set of
 permissions granted to the specified CodeSource.
protected
PermissionCollection
PolicySpi.
engineGetPermissions
(
ProtectionDomain
domain)
Deprecated, for removal: This API element is subject to removal in a future version.
Return a PermissionCollection object containing the set of
 permissions granted to the specified ProtectionDomain.
static
AccessControlContext
AccessController.
getContext
()
Deprecated, for removal: This API element is subject to removal in a future version.
This method takes a "snapshot" of the current calling context, which
 includes the current thread's inherited
AccessControlContext
and any limited privilege scope, and places it in an
AccessControlContext
object.
DomainCombiner
AccessControlContext.
getDomainCombiner
()
Deprecated, for removal: This API element is subject to removal in a future version.
Get the
DomainCombiner
associated with this
AccessControlContext
.
static
Policy
Policy.
getInstance
(
String
type,
Policy.Parameters
params)
Deprecated, for removal: This API element is subject to removal in a future version.
Returns a Policy object of the specified type.
static
Policy
Policy.
getInstance
(
String
type,
Policy.Parameters
params,
String
provider)
Deprecated, for removal: This API element is subject to removal in a future version.
Returns a
Policy
object of the specified type.
static
Policy
Policy.
getInstance
(
String
type,
Policy.Parameters
params,
Provider
provider)
Deprecated, for removal: This API element is subject to removal in a future version.
Returns a
Policy
object of the specified type.
boolean
ProtectionDomain.
implies
(
Permission
perm)
Check and see if this
ProtectionDomain
implies the permissions
 expressed in the
Permission
object.
Method parameters in
java.security
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static <T> T
AccessController.
doPrivileged
(
PrivilegedAction
<T> action,
AccessControlContext
context)
Deprecated, for removal: This API element is subject to removal in a future version.
Performs the specified
PrivilegedAction
with privileges
 enabled and restricted by the specified
AccessControlContext
.
static <T> T
AccessController.
doPrivileged
(
PrivilegedAction
<T> action,
AccessControlContext
context,
Permission
... perms)
Deprecated, for removal: This API element is subject to removal in a future version.
Performs the specified
PrivilegedAction
with privileges
 enabled and restricted by the specified
AccessControlContext
and with a privilege scope limited
 by specified
Permission
arguments.
static <T> T
AccessController.
doPrivileged
(
PrivilegedExceptionAction
<T> action,
AccessControlContext
context)
Deprecated, for removal: This API element is subject to removal in a future version.
Performs the specified
PrivilegedExceptionAction
with
 privileges enabled and restricted by the specified
AccessControlContext
.
static <T> T
AccessController.
doPrivileged
(
PrivilegedExceptionAction
<T> action,
AccessControlContext
context,
Permission
... perms)
Deprecated, for removal: This API element is subject to removal in a future version.
Performs the specified
PrivilegedExceptionAction
with
 privileges enabled and restricted by the specified
AccessControlContext
and with a privilege scope limited by
 specified
Permission
arguments.
static <T> T
AccessController.
doPrivilegedWithCombiner
(
PrivilegedAction
<T> action,
AccessControlContext
context,
Permission
... perms)
Deprecated, for removal: This API element is subject to removal in a future version.
Performs the specified
PrivilegedAction
with privileges
 enabled and restricted by the specified
AccessControlContext
and with a privilege scope limited
 by specified
Permission
arguments.
static <T> T
AccessController.
doPrivilegedWithCombiner
(
PrivilegedExceptionAction
<T> action,
AccessControlContext
context,
Permission
... perms)
Deprecated, for removal: This API element is subject to removal in a future version.
Performs the specified
PrivilegedExceptionAction
with
 privileges enabled and restricted by the specified
AccessControlContext
and with a privilege scope limited by
 specified
Permission
arguments.
Constructor parameters in
java.security
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
AccessControlContext
(
AccessControlContext
acc,
DomainCombiner
combiner)
Deprecated, for removal: This API element is subject to removal in a future version.
Create a new
AccessControlContext
with the given
AccessControlContext
and
DomainCombiner
.
Uses of
SuppressWarnings
in
java.security.cert
Methods in
java.security.cert
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static final
String
CertStore.
getDefaultType
()
Returns the default
CertStore
type as specified by the
certstore.type
security property, or the string
 "LDAP" if no such property exists.
Uses of
SuppressWarnings
in
java.security.interfaces
Fields in
java.security.interfaces
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final long
DSAPrivateKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
DSAPublicKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
ECPrivateKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
ECPublicKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
RSAMultiPrimePrivateCrtKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
RSAPrivateCrtKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
RSAPrivateKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
RSAPublicKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
Uses of
SuppressWarnings
in
java.sql
Methods in
java.sql
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
LocalDate
Date.
toLocalDate
()
Creates a
LocalDate
instance using the year, month and day
 from this
Date
object.
LocalDateTime
Timestamp.
toLocalDateTime
()
Converts this
Timestamp
object to a
LocalDateTime
.
LocalTime
Time.
toLocalTime
()
Converts this
Time
object to a
LocalTime
.
String
Date.
toString
()
Formats a date in the date escape format yyyy-mm-dd.
String
Time.
toString
()
Formats a time in JDBC time escape format.
String
Timestamp.
toString
()
Formats a timestamp in JDBC timestamp escape format.
static
Date
Date.
valueOf
(
LocalDate
date)
Obtains an instance of
Date
from a
LocalDate
object
 with the same year, month and day of month value as the given
LocalDate
.
static
Time
Time.
valueOf
(
LocalTime
time)
Obtains an instance of
Time
from a
LocalTime
object
 with the same hour, minute and second time value as the given
LocalTime
.
static
Timestamp
Timestamp.
valueOf
(
LocalDateTime
dateTime)
Obtains an instance of
Timestamp
from a
LocalDateTime
object, with the same year, month, day of month, hours, minutes,
 seconds and nanos date-time value as the provided
LocalDateTime
.
Uses of
SuppressWarnings
in
java.text
Classes in
java.text
with annotations of type
SuppressWarnings
Modifier and Type
Interface
Description
interface
AttributedCharacterIterator
An
AttributedCharacterIterator
allows iteration through both text and
 related attribute information.
Methods in
java.text
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
MessageFormat.
applyPattern
(
String
pattern)
Sets the pattern used by this message format.
void
CollationElementIterator.
setOffset
(int newOffset)
Sets the iterator to point to the collation element corresponding to
 the specified character (the parameter is a CHARACTER offset in the
 original string, not an offset into its corresponding sequence of
 collation elements).
Constructors in
java.text
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
Bidi
(
AttributedCharacterIterator
paragraph)
Create Bidi from the given paragraph of text.
Uses of
SuppressWarnings
in
java.time
Methods in
java.time
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
ZoneOffset
ZoneOffset.
of
(
String
offsetId)
Obtains an instance of
ZoneOffset
using the ID.
<R> R
DayOfWeek.
query
(
TemporalQuery
<R> query)
Queries this day-of-week using the specified query.
<R> R
Instant.
query
(
TemporalQuery
<R> query)
Queries this instant using the specified query.
<R> R
LocalDate.
query
(
TemporalQuery
<R> query)
Queries this date using the specified query.
<R> R
LocalDateTime.
query
(
TemporalQuery
<R> query)
Queries this date-time using the specified query.
<R> R
LocalTime.
query
(
TemporalQuery
<R> query)
Queries this time using the specified query.
<R> R
Month.
query
(
TemporalQuery
<R> query)
Queries this month-of-year using the specified query.
<R> R
MonthDay.
query
(
TemporalQuery
<R> query)
Queries this month-day using the specified query.
<R> R
OffsetDateTime.
query
(
TemporalQuery
<R> query)
Queries this date-time using the specified query.
<R> R
OffsetTime.
query
(
TemporalQuery
<R> query)
Queries this time using the specified query.
<R> R
Year.
query
(
TemporalQuery
<R> query)
Queries this year using the specified query.
<R> R
YearMonth.
query
(
TemporalQuery
<R> query)
Queries this year-month using the specified query.
<R> R
ZonedDateTime.
query
(
TemporalQuery
<R> query)
Queries this date-time using the specified query.
<R> R
ZoneOffset.
query
(
TemporalQuery
<R> query)
Queries this offset using the specified query.
Uses of
SuppressWarnings
in
java.time.chrono
Methods in
java.time.chrono
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
default
ChronoLocalDateTime
<?>
ChronoLocalDate.
atTime
(
LocalTime
localTime)
Combines this date with a time to create a
ChronoLocalDateTime
.
final
ChronoLocalDateTime
<
HijrahDate
>
HijrahDate.
atTime
(
LocalTime
localTime)
final
ChronoLocalDateTime
<
JapaneseDate
>
JapaneseDate.
atTime
(
LocalTime
localTime)
final
ChronoLocalDateTime
<
MinguoDate
>
MinguoDate.
atTime
(
LocalTime
localTime)
final
ChronoLocalDateTime
<
ThaiBuddhistDate
>
ThaiBuddhistDate.
atTime
(
LocalTime
localTime)
ChronoLocalDateTime
<
HijrahDate
>
HijrahChronology.
localDateTime
(
TemporalAccessor
temporal)
ChronoLocalDateTime
<
JapaneseDate
>
JapaneseChronology.
localDateTime
(
TemporalAccessor
temporal)
ChronoLocalDateTime
<
MinguoDate
>
MinguoChronology.
localDateTime
(
TemporalAccessor
temporal)
ChronoLocalDateTime
<
ThaiBuddhistDate
>
ThaiBuddhistChronology.
localDateTime
(
TemporalAccessor
temporal)
default <R> R
ChronoLocalDate.
query
(
TemporalQuery
<R> query)
Queries this date using the specified query.
default <R> R
ChronoLocalDateTime.
query
(
TemporalQuery
<R> query)
Queries this date-time using the specified query.
default <R> R
ChronoZonedDateTime.
query
(
TemporalQuery
<R> query)
Queries this date-time using the specified query.
default <R> R
Era.
query
(
TemporalQuery
<R> query)
Queries this era using the specified query.
ChronoZonedDateTime
<
HijrahDate
>
HijrahChronology.
zonedDateTime
(
Instant
instant,
ZoneId
zone)
ChronoZonedDateTime
<
HijrahDate
>
HijrahChronology.
zonedDateTime
(
TemporalAccessor
temporal)
ChronoZonedDateTime
<
JapaneseDate
>
JapaneseChronology.
zonedDateTime
(
Instant
instant,
ZoneId
zone)
ChronoZonedDateTime
<
JapaneseDate
>
JapaneseChronology.
zonedDateTime
(
TemporalAccessor
temporal)
ChronoZonedDateTime
<
MinguoDate
>
MinguoChronology.
zonedDateTime
(
Instant
instant,
ZoneId
zone)
ChronoZonedDateTime
<
MinguoDate
>
MinguoChronology.
zonedDateTime
(
TemporalAccessor
temporal)
ChronoZonedDateTime
<
ThaiBuddhistDate
>
ThaiBuddhistChronology.
zonedDateTime
(
Instant
instant,
ZoneId
zone)
ChronoZonedDateTime
<
ThaiBuddhistDate
>
ThaiBuddhistChronology.
zonedDateTime
(
TemporalAccessor
temporal)
Uses of
SuppressWarnings
in
java.time.temporal
Methods in
java.time.temporal
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
<R extends
Temporal
>
R
ChronoUnit.
addTo
(R temporal,
 long amount)
<R extends
Temporal
>
R
ChronoField.
adjustInto
(R temporal,
 long newValue)
Uses of
SuppressWarnings
in
java.util
Classes in
java.util
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
LongSummaryStatistics
A state object for collecting statistics such as count, min, max, sum, and
 average.
class
Observable
Deprecated.
This class and the
Observer
interface have been deprecated.
static interface
PrimitiveIterator.OfDouble
An Iterator specialized for
double
values.
static interface
PrimitiveIterator.OfInt
An Iterator specialized for
int
values.
static interface
PrimitiveIterator.OfLong
An Iterator specialized for
long
values.
class
PriorityQueue
<E>
An unbounded priority
queue
based on a priority heap.
static interface
Spliterator.OfDouble
A Spliterator specialized for
double
values.
static interface
Spliterator.OfInt
A Spliterator specialized for
int
values.
static interface
Spliterator.OfLong
A Spliterator specialized for
long
values.
Fields in
java.util
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected boolean
Calendar.
areFieldsSet
True if
fields[]
are in sync with the currently set time.
protected
Object
[]
Vector.
elementData
The array buffer into which the components of the vector are
 stored.
static final
List
Collections.
EMPTY_LIST
The empty list (immutable).
static final
Map
Collections.
EMPTY_MAP
The empty map (immutable).
static final
Set
Collections.
EMPTY_SET
The empty set (immutable).
protected int[]
Calendar.
fields
The calendar field values for the currently set time for this calendar.
protected boolean[]
Calendar.
isSet
The flags which tell if a specified calendar field for the calendar is set.
protected boolean
Calendar.
isTimeSet
True if then the value of
time
is valid.
protected long
Calendar.
time
The currently set time for this calendar, expressed in milliseconds after
 January 1, 1970, 0:00:00 GMT.
Methods in
java.util
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static <T>
List
<T>
Arrays.
asList
(T... a)
Returns a fixed-size list backed by the specified array.
static <T> int
Collections.
binarySearch
(
List
<? extends T> list,
 T key,
Comparator
<? super T> c)
Searches the specified list for the specified object using the binary
 search algorithm.
EnumMap
<
K
,
V
>
EnumMap.
clone
()
Returns a shallow copy of this enum map.
EnumSet
<
E
>
EnumSet.
clone
()
Returns a copy of this set.
Object
HashMap.
clone
()
Returns a shallow copy of this
HashMap
instance: the keys and
 values themselves are not cloned.
Object
HashSet.
clone
()
Returns a shallow copy of this
HashSet
instance: the elements
 themselves are not cloned.
Object
TreeSet.
clone
()
Returns a shallow copy of this
TreeSet
instance.
static <T> T[]
Arrays.
copyOf
(T[] original,
 int newLength)
Copies the specified array, truncating or padding with nulls (if necessary)
 so the copy has the specified length.
static <K,
V>
Map
<K,
V>
Map.
copyOf
(
Map
<? extends K,
? extends V> map)
Returns an
unmodifiable Map
containing the entries
 of the given Map.
static <K,
V>
Map.Entry
<K,
V>
Map.Entry.
copyOf
(
Map.Entry
<? extends K,
? extends V> e)
Returns a copy of the given
Map.Entry
.
static <E>
Set
<E>
Set.
copyOf
(
Collection
<? extends E> coll)
Returns an
unmodifiable Set
containing the elements
 of the given Collection.
static <T> T[]
Arrays.
copyOfRange
(T[] original,
 int from,
 int to)
Copies the specified range of the specified array into a new array.
static <T>
Enumeration
<T>
Collections.
emptyEnumeration
()
Returns an enumeration that has no elements.
static <T>
Iterator
<T>
Collections.
emptyIterator
()
Returns an iterator that has no elements.
static final <T>
List
<T>
Collections.
emptyList
()
Returns an empty list (immutable).
static <T>
ListIterator
<T>
Collections.
emptyListIterator
()
Returns a list iterator that has no elements.
static final <K,
V>
Map
<K,
V>
Collections.
emptyMap
()
Returns an empty map (immutable).
static final <K,
V>
NavigableMap
<K,
V>
Collections.
emptyNavigableMap
()
Returns an empty navigable map (immutable).
static <E>
NavigableSet
<E>
Collections.
emptyNavigableSet
()
Returns an empty navigable set (immutable).
static final <T>
Set
<T>
Collections.
emptySet
()
Returns an empty set (immutable).
static final <K,
V>
SortedMap
<K,
V>
Collections.
emptySortedMap
()
Returns an empty sorted map (immutable).
static <E>
SortedSet
<E>
Collections.
emptySortedSet
()
Returns an empty sorted set (immutable).
static <T>
Spliterator
<T>
Spliterators.
emptySpliterator
()
Creates an empty
Spliterator
String
Base64.Encoder.
encodeToString
(byte[] src)
Encodes the specified byte array into a String using the
Base64
encoding scheme.
boolean
Calendar.
equals
(
Object
obj)
Compares this
Calendar
to the specified
Object
.
void
PrimitiveIterator.
forEachRemaining
(
T_CONS
action)
Performs the given action for each remaining element until all elements
 have been processed or the action throws an exception.
default void
Spliterator.OfPrimitive.
forEachRemaining
(
T_CONS
action)
Performs the given action for each remaining element, sequentially in
 the current thread, until all elements have been processed or the
 action throws an exception.
V
Hashtable.
get
(
Object
key)
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
V
IdentityHashMap.
get
(
Object
key)
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
static <S>
ServiceLoader
<S>
ServiceLoader.
load
(
Class
<S> service,
ClassLoader
loader)
Creates a new service loader for the given service.
static <T> T
Collections.
max
(
Collection
<? extends T> coll,
Comparator
<? super T> comp)
Returns the maximum element of the given collection, according to the
 order induced by the specified comparator.
static <T> T
Collections.
min
(
Collection
<? extends T> coll,
Comparator
<? super T> comp)
Returns the minimum element of the given collection, according to the
 order induced by the specified comparator.
static <T extends
Comparable
<? super T>>
Comparator
<T>
Comparator.
naturalOrder
()
Returns a comparator that compares
Comparable
objects in natural
 order.
static <E>
List
<E>
List.
of
()
Returns an unmodifiable list containing zero elements.
static <E>
List
<E>
List.
of
(E... elements)
Returns an unmodifiable list containing an arbitrary number of elements.
static <K,
V>
Map
<K,
V>
Map.
of
()
Returns an unmodifiable map containing zero mappings.
static <E>
Set
<E>
Set.
of
()
Returns an unmodifiable set containing zero elements.
static <E>
Set
<E>
Set.
of
(E... elements)
Returns an unmodifiable set containing an arbitrary number of elements.
static <K,
V>
Map
<K,
V>
Map.
ofEntries
(
Map.Entry
<? extends K,
? extends V>... entries)
Returns an unmodifiable map containing keys and values extracted from the given entries.
static <T>
Optional
<T>
Optional.
ofNullable
(T value)
Returns an
Optional
describing the given value, if
 non-
null
, otherwise returns an empty
Optional
.
static <T extends
Comparable
<? super T>>
void
Arrays.
parallelSort
(T[] a)
Sorts the specified array of objects into ascending order, according
 to the
natural ordering
of its elements.
static <T extends
Comparable
<? super T>>
void
Arrays.
parallelSort
(T[] a,
 int fromIndex,
 int toIndex)
Sorts the specified range of the specified array of objects into
 ascending order, according to the
natural ordering
of its
 elements.
static <T> void
Arrays.
parallelSort
(T[] a,
 int fromIndex,
 int toIndex,
Comparator
<? super T> cmp)
Sorts the specified range of the specified array of objects according
 to the order induced by the specified comparator.
static <T> void
Arrays.
parallelSort
(T[] a,
Comparator
<? super T> cmp)
Sorts the specified array of objects according to the order induced by
 the specified comparator.
protected void
Hashtable.
rehash
()
Increases the capacity of and internally reorganizes this
 hashtable, in order to accommodate and access its entries more
 efficiently.
static void
Collections.
reverse
(
List
<?> list)
Reverses the order of the elements in the specified list.
static <T>
Comparator
<T>
Collections.
reverseOrder
()
Returns a comparator that imposes the reverse of the
natural
 ordering
on a collection of objects that implement the
Comparable
interface.
static <T>
Comparator
<T>
Collections.
reverseOrder
(
Comparator
<T> cmp)
Returns a comparator that imposes the reverse ordering of the specified
 comparator.
static void
Collections.
shuffle
(
List
<?> list,
RandomGenerator
rnd)
Randomly permute the specified list using the specified source of
 randomness.
default void
List.
sort
(
Comparator
<? super
E
> c)
Sorts this list according to the order induced by the specified
Comparator
.
static void
Collections.
swap
(
List
<?> list,
 int i,
 int j)
Swaps the elements at the specified positions in the specified list.
<T> T[]
AbstractCollection.
toArray
(T[] a)
Returns an array containing all of the elements in this collection;
 the runtime type of the returned array is that of the specified array.
<T> T[]
ArrayDeque.
toArray
(T[] a)
Returns an array containing all of the elements in this deque in
 proper sequence (from first to last element); the runtime type of the
 returned array is that of the specified array.
<T> T[]
ArrayList.
toArray
(T[] a)
Returns an array containing all of the elements in this list in proper
 sequence (from first to last element); the runtime type of the returned
 array is that of the specified array.
<T> T[]
LinkedList.
toArray
(T[] a)
Returns an array containing all of the elements in this list in
 proper sequence (from first to last element); the runtime type of
 the returned array is that of the specified array.
<T> T[]
Vector.
toArray
(T[] a)
Returns an array containing all of the elements in this Vector in the
 correct order; the runtime type of the returned array is that of the
 specified array.
boolean
Spliterator.OfPrimitive.
tryAdvance
(
T_CONS
action)
If a remaining element exists, performs the given action on it,
 returning
true
; else returns
false
.
static <T>
Collection
<T>
Collections.
unmodifiableCollection
(
Collection
<? extends T> c)
Returns an
unmodifiable view
of the
 specified collection.
static <T>
List
<T>
Collections.
unmodifiableList
(
List
<? extends T> list)
Returns an
unmodifiable view
of the
 specified list.
static <K,
V>
Map
<K,
V>
Collections.
unmodifiableMap
(
Map
<? extends K,
? extends V> m)
Returns an
unmodifiable view
of the
 specified map.
static <K,
V>
NavigableMap
<K,
V>
Collections.
unmodifiableNavigableMap
(
NavigableMap
<K,
? extends V> m)
Returns an
unmodifiable view
of the
 specified navigable map.
static <T>
SequencedCollection
<T>
Collections.
unmodifiableSequencedCollection
(
SequencedCollection
<? extends T> c)
Returns an
unmodifiable view
of the
 specified
SequencedCollection
.
static <K,
V>
SequencedMap
<K,
V>
Collections.
unmodifiableSequencedMap
(
SequencedMap
<? extends K,
? extends V> m)
Returns an
unmodifiable view
of the
 specified
SequencedMap
.
static <T>
SequencedSet
<T>
Collections.
unmodifiableSequencedSet
(
SequencedSet
<? extends T> s)
Returns an
unmodifiable view
of the
 specified
SequencedSet
.
static <T>
Set
<T>
Collections.
unmodifiableSet
(
Set
<? extends T> s)
Returns an
unmodifiable view
of the
 specified set.
static <K,
V>
SortedMap
<K,
V>
Collections.
unmodifiableSortedMap
(
SortedMap
<K,
? extends V> m)
Returns an
unmodifiable view
of the
 specified sorted map.
Constructors in
java.util
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
PropertyResourceBundle
(
InputStream
stream)
Creates a property resource bundle from an
InputStream
.
PropertyResourceBundle
(
Reader
reader)
Creates a property resource bundle from a
Reader
.
Uses of
SuppressWarnings
in
java.util.concurrent
Classes in
java.util.concurrent
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
PriorityBlockingQueue
<E>
An unbounded
blocking queue
that uses
 the same ordering rules as class
PriorityQueue
and supplies
 blocking retrieval operations.
Methods in
java.util.concurrent
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
V
Exchanger.
exchange
(
V
x)
Waits for another thread to arrive at this exchange point (unless
 the current thread is
interrupted
),
 and then transfers the given object to it, receiving its object
 in return.
V
Exchanger.
exchange
(
V
x,
 long timeout,
TimeUnit
unit)
Waits for another thread to arrive at this exchange point (unless
 the current thread is
interrupted
or
 the specified waiting time elapses), and then transfers the given
 object to it, receiving its object in return.
void
ForkJoinPool.
execute
(
Runnable
task)
protected void
ThreadPoolExecutor.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
T
CompletableFuture.
get
()
Waits if necessary for this future to complete, and then
 returns its result.
T
CompletableFuture.
get
(long timeout,
TimeUnit
unit)
Waits if necessary for at most the given time for this future
 to complete, and then returns its result, if available.
T
CompletableFuture.
getNow
(
T
valueIfAbsent)
Returns the result value (or throws any encountered exception)
 if completed, else returns the given valueIfAbsent.
T
CompletableFuture.
join
()
Returns the result value when complete, or throws an
 (unchecked) exception if completed exceptionally.
E
LinkedTransferQueue.
poll
()
E
LinkedTransferQueue.
poll
(long timeout,
TimeUnit
unit)
E
SynchronousQueue.
poll
()
Retrieves and removes the head of this queue, if another thread
 is currently making an element available.
E
SynchronousQueue.
poll
(long timeout,
TimeUnit
unit)
Retrieves and removes the head of this queue, waiting
 if necessary up to the specified wait time, for another thread
 to insert it.
ForkJoinTask
<?>
ForkJoinPool.
submit
(
Runnable
task)
E
LinkedTransferQueue.
take
()
E
SynchronousQueue.
take
()
Retrieves and removes the head of this queue, waiting if necessary
 for another thread to insert it.
<T> T[]
ArrayBlockingQueue.
toArray
(T[] a)
Returns an array containing all of the elements in this queue, in
 proper sequence; the runtime type of the returned array is that of
 the specified array.
<T> T[]
ConcurrentLinkedDeque.
toArray
(T[] a)
Returns an array containing all of the elements in this deque,
 in proper sequence (from first to last element); the runtime
 type of the returned array is that of the specified array.
<T> T[]
ConcurrentLinkedQueue.
toArray
(T[] a)
Returns an array containing all of the elements in this queue, in
 proper sequence; the runtime type of the returned array is that of
 the specified array.
<T> T[]
CopyOnWriteArrayList.
toArray
(T[] a)
Returns an array containing all of the elements in this list in
 proper sequence (from first to last element); the runtime type of
 the returned array is that of the specified array.
Object
[]
LinkedBlockingDeque.
toArray
()
Returns an array containing all of the elements in this deque, in
 proper sequence (from first to last element).
<T> T[]
LinkedBlockingDeque.
toArray
(T[] a)
Returns an array containing all of the elements in this deque, in
 proper sequence; the runtime type of the returned array is that of
 the specified array.
<T> T[]
LinkedBlockingQueue.
toArray
(T[] a)
Returns an array containing all of the elements in this queue, in
 proper sequence; the runtime type of the returned array is that of
 the specified array.
<T> T[]
LinkedTransferQueue.
toArray
(T[] a)
Returns an array containing all of the elements in this queue, in
 proper sequence; the runtime type of the returned array is that of
 the specified array.
Uses of
SuppressWarnings
in
java.util.concurrent.atomic
Methods in
java.util.concurrent.atomic
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
final
E
AtomicReferenceArray.
get
(int i)
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getVolatile(java.lang.Object...)
.
final
V
AtomicReference.
getAndSet
(
V
newValue)
Atomically sets the value to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
final
E
AtomicReferenceArray.
getAndSet
(int i,
E
newValue)
Atomically sets the element at index
i
to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
Uses of
SuppressWarnings
in
java.util.function
Methods in
java.util.function
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static <T>
Predicate
<T>
Predicate.
not
(
Predicate
<? super T> target)
Returns a predicate that is the negation of the supplied predicate.
Uses of
SuppressWarnings
in
java.util.logging
Classes in
java.util.logging
with annotations of type
SuppressWarnings
Modifier and Type
Interface
Description
interface
LoggingMXBean
Deprecated.
LoggingMXBean
is no longer a
platform MXBean
and is replaced
 with
PlatformLoggingMXBean
.
Fields in
java.util.logging
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final
String
LogManager.
LOGGING_MXBEAN_NAME
String representation of the
ObjectName
for the management interface
 for the logging facility.
Methods in
java.util.logging
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
LoggingMXBean
LogManager.
getLoggingMXBean
()
Deprecated.
java.util.logging.LoggingMXBean
is deprecated and
      replaced with
java.lang.management.PlatformLoggingMXBean
.
Uses of
SuppressWarnings
in
java.util.prefs
Methods in
java.util.prefs
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
boolean
AbstractPreferences.
isUserNode
()
Implements the
isUserNode
method as per the specification in
Preferences.isUserNode()
.
Uses of
SuppressWarnings
in
java.util.spi
Methods in
java.util.spi
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
Optional
<
ToolProvider
>
ToolProvider.
findFirst
(
String
name)
Returns the first instance of a
ToolProvider
with the given name,
 as loaded by
ServiceLoader
using the system class loader.
Uses of
SuppressWarnings
in
java.util.stream
Methods in
java.util.stream
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static <T>
Stream
<T>
Stream.
of
(T... values)
Returns a sequential ordered stream whose elements are the specified values.
default
List
<
T
>
Stream.
toList
()
Accumulates the elements of this stream into a
List
.
static <T,
K,
U>
Collector
<T,
?,
Map
<K,
U>>
Collectors.
toUnmodifiableMap
(
Function
<? super T,
? extends K> keyMapper,
Function
<? super T,
? extends U> valueMapper)
Returns a
Collector
that accumulates the input elements into an
unmodifiable Map
,
 whose keys and values are the result of applying the provided
 mapping functions to the input elements.
static <T,
K,
U>
Collector
<T,
?,
Map
<K,
U>>
Collectors.
toUnmodifiableMap
(
Function
<? super T,
? extends K> keyMapper,
Function
<? super T,
? extends U> valueMapper,
BinaryOperator
<U> mergeFunction)
Returns a
Collector
that accumulates the input elements into an
unmodifiable Map
,
 whose keys and values are the result of applying the provided
 mapping functions to the input elements.
static <T>
Collector
<T,
?,
Set
<T>>
Collectors.
toUnmodifiableSet
()
Returns a
Collector
that accumulates the input elements into an
unmodifiable Set
.
Uses of
SuppressWarnings
in
javax.crypto
Fields in
javax.crypto
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final long
SecretKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
Uses of
SuppressWarnings
in
javax.crypto.interfaces
Fields in
javax.crypto.interfaces
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final long
DHPrivateKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
DHPublicKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
static final long
PBEKey.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
Uses of
SuppressWarnings
in
javax.imageio.metadata
Fields in
javax.imageio.metadata
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
Node
IIOInvalidTreeException.
offendingNode
The
Node
that led to the parsing error, or
null
.
Uses of
SuppressWarnings
in
javax.imageio.spi
Methods in
javax.imageio.spi
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
ServiceRegistry.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
void
IIORegistry.
registerApplicationClasspathSpis
()
Registers all available service providers found on the
 application class path, using the default
ClassLoader
.
Uses of
SuppressWarnings
in
javax.imageio.stream
Methods in
javax.imageio.stream
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
protected void
FileCacheImageInputStream.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
protected void
FileImageInputStream.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
protected void
FileImageOutputStream.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
protected void
ImageInputStreamImpl.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
protected void
MemoryCacheImageInputStream.
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
Uses of
SuppressWarnings
in
javax.lang.model.util
Constructors in
javax.lang.model.util
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
protected
AbstractAnnotationValueVisitor8
()
Constructor for concrete subclasses to call.
protected
AbstractElementVisitor8
()
Constructor for concrete subclasses to call.
protected
AbstractTypeVisitor8
()
Constructor for concrete subclasses to call.
protected
ElementKindVisitor8
()
Constructor for concrete subclasses; uses
null
for the
 default value.
protected
ElementKindVisitor8
(
R
defaultValue)
Constructor for concrete subclasses; uses the argument for the
 default value.
protected
ElementScanner8
()
Constructor for concrete subclasses; uses
null
for the
 default value.
protected
ElementScanner8
(
R
defaultValue)
Constructor for concrete subclasses; uses the argument for the
 default value.
protected
SimpleAnnotationValueVisitor8
()
Constructor for concrete subclasses; uses
null
for the
 default value.
protected
SimpleAnnotationValueVisitor8
(
R
defaultValue)
Constructor for concrete subclasses; uses the argument for the
 default value.
protected
SimpleElementVisitor8
()
Constructor for concrete subclasses; uses
null
for the
 default value.
protected
SimpleElementVisitor8
(
R
defaultValue)
Constructor for concrete subclasses; uses the argument for the
 default value.
protected
SimpleTypeVisitor8
()
Constructor for concrete subclasses; uses
null
for the
 default value.
protected
SimpleTypeVisitor8
(
R
defaultValue)
Constructor for concrete subclasses; uses the argument for the
 default value.
protected
TypeKindVisitor8
()
Constructor for concrete subclasses to call; uses
null
for the default value.
protected
TypeKindVisitor8
(
R
defaultValue)
Constructor for concrete subclasses to call; uses the argument
 for the default value.
Uses of
SuppressWarnings
in
javax.management
Classes in
javax.management
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
MBeanAttributeInfo
Describes an MBean attribute exposed for management.
class
Notification
The Notification class represents a notification emitted by an
 MBean.
class
ObjectName
Represents the object name of an MBean, or a pattern that can
 match the names of several MBeans.
Methods in
javax.management
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
List
<
Attribute
>
AttributeList.
asList
()
Return a view of this list as a
List<Attribute>
.
Uses of
SuppressWarnings
in
javax.management.loading
Classes in
javax.management.loading
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
MLet
Deprecated, for removal: This API element is subject to removal in a future version.
This API is part of Management Applets (m-lets), which is a legacy feature that allows loading
 of remote MBeans.
class
PrivateMLet
Deprecated, for removal: This API element is subject to removal in a future version.
This API is part of Management Applets (m-lets), which is a legacy feature that allows loading
 of remote MBeans.
Uses of
SuppressWarnings
in
javax.management.modelmbean
Classes in
javax.management.modelmbean
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
DescriptorSupport
This class represents the metadata set for a ModelMBean element.
class
InvalidTargetObjectTypeException
Exception thrown when an invalid target object type is specified.
class
ModelMBeanAttributeInfo
The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.
class
ModelMBeanConstructorInfo
The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.
class
ModelMBeanInfoSupport
This class represents the meta data for ModelMBeans.
class
ModelMBeanNotificationInfo
The ModelMBeanNotificationInfo object describes a notification emitted
 by a ModelMBean.
class
ModelMBeanOperationInfo
The ModelMBeanOperationInfo object describes a management operation of
 the ModelMBean.
class
XMLParseException
This exception is thrown when an XML formatted string is being parsed into ModelMBean objects
 or when XML formatted strings are being created from ModelMBean objects.
Uses of
SuppressWarnings
in
javax.management.openmbean
Methods in
javax.management.openmbean
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
Set
<
Map.Entry
<
Object
,
Object
>>
TabularDataSupport.
entrySet
()
Returns a collection view of the index to row mappings
 contained in this
TabularDataSupport
instance.
static <T>
ArrayType
<T>
ArrayType.
getPrimitiveArrayType
(
Class
<T> arrayClass)
Create an
ArrayType
instance in a type-safe manner.
Collection
<
Object
>
TabularDataSupport.
values
()
Returns a collection view of the rows contained in this
TabularDataSupport
instance.
Uses of
SuppressWarnings
in
javax.management.relation
Classes in
javax.management.relation
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
MBeanServerNotificationFilter
Filter for
MBeanServerNotification
.
class
RelationNotification
A notification of a change in the Relation Service.
class
RelationTypeSupport
A RelationTypeSupport object implements the RelationType interface.
class
Role
Represents a role: includes a role name and referenced MBeans (via their
 ObjectNames).
class
RoleInfo
A RoleInfo object summarises a role in a relation type.
class
RoleResult
Represents the result of a multiple access to several roles of a relation
 (either for reading or writing).
class
RoleUnresolved
Represents an unresolved role: a role not retrieved from a relation due
 to a problem.
Methods in
javax.management.relation
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
List
<
Role
>
RoleList.
asList
()
Return a view of this list as a
List<Role>
.
List
<
RoleUnresolved
>
RoleUnresolvedList.
asList
()
Return a view of this list as a
List<RoleUnresolved>
.
Uses of
SuppressWarnings
in
javax.management.remote
Classes in
javax.management.remote
with annotations of type
SuppressWarnings
Modifier and Type
Interface
Description
interface
JMXAddressable
Implemented by objects that can have a
JMXServiceURL
address.
class
JMXServerErrorException
Exception thrown as the result of a remote
MBeanServer
method invocation when an
Error
is thrown while
 processing the invocation in the remote MBean server.
Uses of
SuppressWarnings
in
javax.management.remote.rmi
Classes in
javax.management.remote.rmi
with annotations of type
SuppressWarnings
Modifier and Type
Interface
Description
interface
RMIConnection
RMI object used to forward an MBeanServer request from a client
 to its MBeanServer implementation on the server side.
final class
RMIConnectionImpl_Stub
RMIConnectionImpl remote stub.
final class
RMIServerImpl_Stub
RMIServerImpl remote stub.
Methods in
javax.management.remote.rmi
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
RMIConnectionImpl.
addNotificationListener
(
ObjectName
name,
ObjectName
listener,
MarshalledObject
filter,
MarshalledObject
handback,
Subject
delegationSubject)
Integer
[]
RMIConnectionImpl.
addNotificationListeners
(
ObjectName
[] names,
MarshalledObject
[] filters,
Subject
[] delegationSubjects)
ObjectInstance
RMIConnectionImpl.
createMBean
(
String
className,
ObjectName
name,
MarshalledObject
params,
String
[] signature,
Subject
delegationSubject)
ObjectInstance
RMIConnectionImpl.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName,
MarshalledObject
params,
String
[] signature,
Subject
delegationSubject)
NotificationResult
RMIConnectionImpl.
fetchNotifications
(long clientSequenceNumber,
 int maxNotifications,
 long timeout)
MBeanServerConnection
RMIConnector.
getMBeanServerConnection
(
Subject
delegationSubject)
Object
RMIConnectionImpl.
invoke
(
ObjectName
name,
String
operationName,
MarshalledObject
params,
String
[] signature,
Subject
delegationSubject)
Set
<
ObjectInstance
>
RMIConnectionImpl.
queryMBeans
(
ObjectName
name,
MarshalledObject
query,
Subject
delegationSubject)
Set
<
ObjectName
>
RMIConnectionImpl.
queryNames
(
ObjectName
name,
MarshalledObject
query,
Subject
delegationSubject)
void
RMIConnectionImpl.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener,
MarshalledObject
filter,
MarshalledObject
handback,
Subject
delegationSubject)
void
RMIConnectionImpl.
setAttribute
(
ObjectName
name,
MarshalledObject
attribute,
Subject
delegationSubject)
AttributeList
RMIConnectionImpl.
setAttributes
(
ObjectName
name,
MarshalledObject
attributes,
Subject
delegationSubject)
Constructors in
javax.management.remote.rmi
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
RMIConnectionImpl
(
RMIServerImpl
rmiServer,
String
connectionId,
ClassLoader
defaultClassLoader,
Subject
subject,
Map
<
String
,
?> env)
Constructs a new
RMIConnection
.
Uses of
SuppressWarnings
in
javax.naming
Fields in
javax.naming
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
Context
CannotProceedException.
altNameCtx
Contains the context relative to which
altName
is specified.
protected
Object
LinkException.
linkResolvedObj
Contains the object to which resolution of the part of the link was successful.
protected
Object
NamingException.
resolvedObj
Contains the object to which resolution of the part of the name was
 successful.
static final long
Name.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
Methods in
javax.naming
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static <T> T
InitialContext.
doLookup
(
String
name)
A static method to retrieve the named object.
static <T> T
InitialContext.
doLookup
(
Name
name)
A static method to retrieve the named object.
protected void
InitialContext.
init
(
Hashtable
<?,
?> environment)
Initializes the initial context using the supplied environment.
Uses of
SuppressWarnings
in
javax.naming.directory
Fields in
javax.naming.directory
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final long
Attribute.
serialVersionUID
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual.
Methods in
javax.naming.directory
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
Object
BasicAttribute.
clone
()
Object
BasicAttributes.
clone
()
Uses of
SuppressWarnings
in
javax.naming.event
Fields in
javax.naming.event
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
Object
NamingEvent.
changeInfo
Contains information about the change that generated this event.
Uses of
SuppressWarnings
in
javax.naming.ldap
Constructors in
javax.naming.ldap
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
InitialLdapContext
(
Hashtable
<?,
?> environment,
Control
[] connCtls)
Constructs an initial context
 using environment properties and connection request controls.
Uses of
SuppressWarnings
in
javax.naming.spi
Fields in
javax.naming.spi
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
Object
ResolveResult.
resolvedObj
Field containing the Object that was resolved to successfully.
Methods in
javax.naming.spi
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
Context
NamingManager.
getContinuationContext
(
CannotProceedException
cpe)
Creates a context in which to continue a context operation.
static
DirContext
DirectoryManager.
getContinuationDirContext
(
CannotProceedException
cpe)
Creates a context in which to continue a
DirContext
operation.
static
Context
NamingManager.
getInitialContext
(
Hashtable
<?,
?> env)
Creates an initial context using the specified environment
 properties.
Uses of
SuppressWarnings
in
javax.net.ssl
Methods in
javax.net.ssl
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static final
String
KeyManagerFactory.
getDefaultAlgorithm
()
Obtains the default KeyManagerFactory algorithm name.
static final
String
TrustManagerFactory.
getDefaultAlgorithm
()
Obtains the default TrustManagerFactory algorithm name.
X509Certificate
[]
HandshakeCompletedEvent.
getPeerCertificateChain
()
Deprecated, for removal: This API element is subject to removal in a future version.
The
HandshakeCompletedEvent.getPeerCertificates()
method that returns an
               array of
java.security.cert.Certificate
should
               be used instead.
default
X509Certificate
[]
SSLSession.
getPeerCertificateChain
()
Deprecated, for removal: This API element is subject to removal in a future version.
The
SSLSession.getPeerCertificates()
method that returns an
               array of
java.security.cert.Certificate
should
               be used instead.
Uses of
SuppressWarnings
in
javax.print
Fields in
javax.print
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
static final
String
DocFlavor.
hostEncoding
A string representing the host operating system encoding.
Methods in
javax.print
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
PrintService
ServiceUI.
printDialog
(
GraphicsConfiguration
gc,
 int x,
 int y,
PrintService
[] services,
PrintService
defaultService,
DocFlavor
flavor,
PrintRequestAttributeSet
attributes)
Presents a dialog to the user for selecting a print service (printer).
Uses of
SuppressWarnings
in
javax.security.auth
Classes in
javax.security.auth
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
SubjectDomainCombiner
Deprecated, for removal: This API element is subject to removal in a future version.
This class is only useful in conjunction with
the Security Manager
, which is deprecated
       and subject to removal in a future release.
Methods in
javax.security.auth
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
Subject
Subject.
current
()
Returns the current subject.
static <T> T
Subject.
doAs
(
Subject
subject,
PrivilegedAction
<T> action)
Deprecated, for removal: This API element is subject to removal in a future version.
This method depends on
AccessControlContext
which, in conjunction with
the Security Manager
, is deprecated
       and subject to removal in a future release.
static <T> T
Subject.
doAs
(
Subject
subject,
PrivilegedExceptionAction
<T> action)
Deprecated, for removal: This API element is subject to removal in a future version.
This method depends on
AccessControlContext
which, in conjunction with
the Security Manager
, is deprecated
       and subject to removal in a future release.
static <T> T
Subject.
doAsPrivileged
(
Subject
subject,
PrivilegedAction
<T> action,
AccessControlContext
acc)
Deprecated, for removal: This API element is subject to removal in a future version.
This method is only useful in conjunction with
the Security Manager
, which is
       deprecated and subject to removal in a future release.
static <T> T
Subject.
doAsPrivileged
(
Subject
subject,
PrivilegedExceptionAction
<T> action,
AccessControlContext
acc)
Deprecated, for removal: This API element is subject to removal in a future version.
This method is only useful in conjunction with
the Security Manager
, which is
       deprecated and subject to removal in a future release.
static
Subject
Subject.
getSubject
(
AccessControlContext
acc)
Deprecated, for removal: This API element is subject to removal in a future version.
This method depends on
AccessControlContext
which, in conjunction with
the Security Manager
, is deprecated
       and subject to removal in a future release.
Uses of
SuppressWarnings
in
javax.security.auth.login
Methods in
javax.security.auth.login
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
Configuration
Configuration.
getConfiguration
()
Get the installed login Configuration.
Constructors in
javax.security.auth.login
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
LoginContext
(
String
name,
CallbackHandler
callbackHandler)
Instantiate a new
LoginContext
object with a name
 and a
CallbackHandler
object.
LoginContext
(
String
name,
Subject
subject,
CallbackHandler
callbackHandler)
Instantiate a new
LoginContext
object with a name,
 a
Subject
to be authenticated, and a
CallbackHandler
object.
LoginContext
(
String
name,
Subject
subject,
CallbackHandler
callbackHandler,
Configuration
config)
Instantiate a new
LoginContext
object with a name,
 a
Subject
to be authenticated,
 a
CallbackHandler
object, and a login
Configuration
.
Uses of
SuppressWarnings
in
javax.security.cert
Classes in
javax.security.cert
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
Certificate
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateEncodingException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateExpiredException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateNotYetValidException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
CertificateParsingException
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
class
X509Certificate
Deprecated, for removal: This API element is subject to removal in a future version.
Use the classes in
java.security.cert
instead.
Uses of
SuppressWarnings
in
javax.sound.midi
Methods in
javax.sound.midi
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
Map
<
String
,
Object
>
MidiFileFormat.
properties
()
Obtain an unmodifiable map of properties.
Uses of
SuppressWarnings
in
javax.sound.sampled
Methods in
javax.sound.sampled
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
Map
<
String
,
Object
>
AudioFileFormat.
properties
()
Obtain an unmodifiable map of properties.
Map
<
String
,
Object
>
AudioFormat.
properties
()
Obtain an unmodifiable map of properties.
Uses of
SuppressWarnings
in
javax.sql.rowset
Fields in
javax.sql.rowset
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
InputStream
BaseRowSet.
asciiStream
The
InputStream
object that will be
 returned by the method
getAsciiStream
,
 which is specified in the
ResultSet
interface.
protected
InputStream
BaseRowSet.
binaryStream
The
InputStream
object that will be
 returned by the method
getBinaryStream
, which is
 specified in the
ResultSet
interface.
protected
Reader
BaseRowSet.
charStream
The
Reader
object that will be
 returned by the method
getCharacterStream
,
 which is specified in the
ResultSet
interface.
protected
InputStream
BaseRowSet.
unicodeStream
The
InputStream
object that will be
 returned by the method
getUnicodeStream
,
 which is specified in the
ResultSet
interface.
Uses of
SuppressWarnings
in
javax.sql.rowset.serial
Methods in
javax.sql.rowset.serial
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
URL
SerialDatalink.
getDatalink
()
Returns a new URL that is a copy of this
SerialDatalink
object.
void
SQLOutputImpl.
writeArray
(
Array
x)
Writes an
Array
object in the Java
 programming language to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeBigDecimal
(
BigDecimal
x)
Writes a
java.math.BigDecimal
object in the Java programming
 language to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeBlob
(
Blob
x)
Writes a
Blob
object in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeBoolean
(boolean x)
Writes a
boolean
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeByte
(byte x)
Writes a
byte
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeBytes
(byte[] x)
Writes an array of
bytes
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeClob
(
Clob
x)
Writes a
Clob
object in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeDate
(
Date
x)
Writes a
java.sql.Date
object in the Java programming
 language to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeDouble
(double x)
Writes a
double
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeFloat
(float x)
Writes a
float
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeInt
(int x)
Writes an
int
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeLong
(long x)
Writes a
long
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeNClob
(
NClob
x)
Writes an SQL
NCLOB
value to the stream.
void
SQLOutputImpl.
writeNString
(
String
x)
Writes the next attribute to the stream as a
String
in the Java programming language.
void
SQLOutputImpl.
writeObject
(
SQLData
x)
Writes to the stream the data contained in the given
SQLData
object.
void
SQLOutputImpl.
writeRef
(
Ref
x)
Writes a
Ref
object in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeRowId
(
RowId
x)
Writes an SQL
ROWID
value to the stream.
void
SQLOutputImpl.
writeShort
(short x)
Writes a
short
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeSQLXML
(
SQLXML
x)
Writes an SQL
XML
value to the stream.
void
SQLOutputImpl.
writeString
(
String
x)
Writes a
String
in the Java programming language
 to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeStruct
(
Struct
x)
Writes a
Struct
object in the Java
 programming language to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeTime
(
Time
x)
Writes a
java.sql.Time
object in the Java programming
 language to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeTimestamp
(
Timestamp
x)
Writes a
java.sql.Timestamp
object in the Java programming
 language to this
SQLOutputImpl
object.
void
SQLOutputImpl.
writeURL
(
URL
url)
Writes an
java.sql.Type.DATALINK
object in the Java
 programming language to this
SQLOutputImpl
object.
Uses of
SuppressWarnings
in
javax.swing
Classes in
javax.swing
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
AbstractAction
This class provides default implementations for the JFC
Action
interface.
class
AbstractButton
Defines common behaviors for buttons and menu items.
protected class
AbstractButton.AccessibleAbstractButton
This class implements accessibility support for the
AbstractButton
class.
protected class
AbstractButton.ButtonChangeListener
Extends
ChangeListener
to be serializable.
class
AbstractCellEditor
A base class for
CellEditors
, providing default
 implementations for the methods in the
CellEditor
interface except
getCellEditorValue()
.
class
AbstractListModel
<E>
The abstract definition for the data model that provides
 a
List
with its contents.
class
AbstractSpinnerModel
This class provides the ChangeListener part of the
 SpinnerModel interface that should be suitable for most concrete SpinnerModel
 implementations.
class
ActionMap
ActionMap
provides mappings from
Object
s
 (called
keys
or
Action
names
)
 to
Action
s.
class
Box
A lightweight container
 that uses a BoxLayout object as its layout manager.
protected class
Box.AccessibleBox
This class implements accessibility support for the
Box
class.
static class
Box.Filler
An implementation of a lightweight component that participates in
 layout but has no view.
protected class
Box.Filler.AccessibleBoxFiller
This class implements accessibility support for the
Box.Filler
class.
class
BoxLayout
A layout manager that allows multiple components to be laid out either
 vertically or horizontally.
class
ButtonGroup
This class is used to create a multiple-exclusion scope for
 a set of buttons.
class
CellRendererPane
This class is inserted in between cell renderers and the components that
 use them.
class
ComponentInputMap
A
ComponentInputMap
is an
InputMap
associated with a particular
JComponent
.
class
DefaultBoundedRangeModel
A generic implementation of BoundedRangeModel.
class
DefaultButtonModel
The default implementation of a
Button
component's data model.
class
DefaultCellEditor
The default editor for table and tree cells.
class
DefaultComboBoxModel
<E>
The default model for combo boxes.
class
DefaultDesktopManager
This is an implementation of the
DesktopManager
.
class
DefaultFocusManager
This class has been obsoleted by the 1.4 focus APIs.
class
DefaultListCellRenderer
Renders an item in a list.
static class
DefaultListCellRenderer.UIResource
A subclass of DefaultListCellRenderer that implements UIResource.
class
DefaultListModel
<E>
This class loosely implements the
java.util.Vector
API, in that it implements the 1.1.x version of
java.util.Vector
, has no collection class support,
 and notifies the
ListDataListener
s when changes occur.
class
DefaultListSelectionModel
Default data model for list selections.
class
DefaultSingleSelectionModel
A generic implementation of SingleSelectionModel.
class
ImageIcon
An implementation of the Icon interface that paints Icons
 from Images.
protected class
ImageIcon.AccessibleImageIcon
This class implements accessibility support for the
ImageIcon
class.
class
InputMap
InputMap
provides a binding between an input event (currently only
KeyStroke
s are used) and an
Object
.
class
JApplet
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated, no replacement.
class
JButton
An implementation of a "push" button.
protected class
JButton.AccessibleJButton
This class implements accessibility support for the
JButton
class.
class
JCheckBox
An implementation of a check box -- an item that can be selected or
 deselected, and which displays its state to the user.
protected class
JCheckBox.AccessibleJCheckBox
This class implements accessibility support for the
JCheckBox
class.
class
JCheckBoxMenuItem
A menu item that can be selected or deselected.
protected class
JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem
This class implements accessibility support for the
JCheckBoxMenuItem
class.
class
JColorChooser
JColorChooser
provides a pane of controls designed to allow
 a user to manipulate and select a color.
class
JComboBox
<E>
A component that combines a button or editable field and a drop-down list.
protected class
JComboBox.AccessibleJComboBox
This class implements accessibility support for the
JComboBox
class.
class
JComponent
The base class for all Swing components except top-level containers.
class
JComponent.AccessibleJComponent
Inner class of JComponent used to provide default support for
 accessibility.
class
JDesktopPane
A container used to create a multiple-document interface or a virtual desktop.
protected class
JDesktopPane.AccessibleJDesktopPane
This class implements accessibility support for the
JDesktopPane
class.
class
JDialog
The main class for creating a dialog window.
class
JEditorPane
A text component to edit various kinds of content.
protected class
JEditorPane.AccessibleJEditorPane
This class implements accessibility support for the
JEditorPane
class.
protected class
JEditorPane.AccessibleJEditorPaneHTML
This class provides support for
AccessibleHypertext
,
 and is used in instances where the
EditorKit
installed in this
JEditorPane
is an instance of
HTMLEditorKit
.
class
JFileChooser
JFileChooser
provides a simple mechanism for the user to
 choose a file.
protected class
JFileChooser.AccessibleJFileChooser
This class implements accessibility support for the
JFileChooser
class.
class
JFormattedTextField
JFormattedTextField
extends
JTextField
adding
 support for formatting arbitrary values, as well as retrieving a particular
 object once the user has edited the text.
class
JFrame
An extended version of
java.awt.Frame
that adds support for
 the JFC/Swing component architecture.
class
JInternalFrame
A lightweight object that provides many of the features of
 a native frame, including dragging, closing, becoming an icon,
 resizing, title display, and support for a menu bar.
protected class
JInternalFrame.AccessibleJInternalFrame
This class implements accessibility support for the
JInternalFrame
class.
static class
JInternalFrame.JDesktopIcon
This component represents an iconified version of a
JInternalFrame
.
protected class
JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon
This class implements accessibility support for the
JInternalFrame.JDesktopIcon
class.
class
JLabel
A display area for a short text string or an image,
 or both.
protected class
JLabel.AccessibleJLabel
The class used to obtain the accessible role for this object.
final class
JLayer
<V extends
Component
>
JLayer
is a universal decorator for Swing components
 which enables you to implement various advanced painting effects as well as
 receive notifications of all
AWTEvent
s generated within its borders.
class
JLayeredPane
JLayeredPane
adds depth to a JFC/Swing container,
 allowing components to overlap each other when needed.
protected class
JLayeredPane.AccessibleJLayeredPane
This class implements accessibility support for the
JLayeredPane
class.
class
JList
<E>
A component that displays a list of objects and allows the user to select
 one or more items.
protected class
JList.AccessibleJList
This class implements accessibility support for the
JList
class.
class
JMenu
An implementation of a menu -- a popup window containing
JMenuItem
s that
 is displayed when the user selects an item on the
JMenuBar
.
protected class
JMenu.AccessibleJMenu
This class implements accessibility support for the
JMenu
class.
protected class
JMenu.WinListener
A listener class that watches for a popup window closing.
class
JMenuBar
An implementation of a menu bar.
protected class
JMenuBar.AccessibleJMenuBar
This class implements accessibility support for the
JMenuBar
class.
class
JMenuItem
An implementation of an item in a menu.
protected class
JMenuItem.AccessibleJMenuItem
This class implements accessibility support for the
JMenuItem
class.
class
JOptionPane
JOptionPane
makes it easy to pop up a standard dialog box that
 prompts users for a value or informs them of something.
protected class
JOptionPane.AccessibleJOptionPane
This class implements accessibility support for the
JOptionPane
class.
class
JPanel
JPanel
is a generic lightweight container.
protected class
JPanel.AccessibleJPanel
This class implements accessibility support for the
JPanel
class.
class
JPasswordField
JPasswordField
is a lightweight component that allows
 the editing of a single line of text where the view indicates
 something was typed, but does not show the original characters.
class
JPopupMenu
An implementation of a popup menu -- a small window that pops up
 and displays a series of choices.
protected class
JPopupMenu.AccessibleJPopupMenu
This class implements accessibility support for the
JPopupMenu
class.
static class
JPopupMenu.Separator
A popup menu-specific separator.
class
JProgressBar
A component that visually displays the progress of some task.
protected class
JProgressBar.AccessibleJProgressBar
This class implements accessibility support for the
JProgressBar
class.
class
JRadioButton
An implementation of a radio button -- an item that can be selected or
 deselected, and which displays its state to the user.
protected class
JRadioButton.AccessibleJRadioButton
This class implements accessibility support for the
JRadioButton
class.
class
JRadioButtonMenuItem
An implementation of a radio button menu item.
protected class
JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem
This class implements accessibility support for the
JRadioButtonMenuItem
class.
class
JRootPane
A lightweight container used behind the scenes by
JFrame
,
JDialog
,
JWindow
,
JApplet
, and
JInternalFrame
.
protected class
JRootPane.AccessibleJRootPane
This class implements accessibility support for the
JRootPane
class.
protected class
JRootPane.RootLayout
A custom layout manager that is responsible for the layout of
 layeredPane, glassPane, and menuBar.
class
JScrollBar
An implementation of a scrollbar.
protected class
JScrollBar.AccessibleJScrollBar
This class implements accessibility support for the
JScrollBar
class.
class
JScrollPane
Provides a scrollable view of a lightweight component.
protected class
JScrollPane.AccessibleJScrollPane
This class implements accessibility support for the
JScrollPane
class.
protected class
JScrollPane.ScrollBar
By default
JScrollPane
creates scrollbars
 that are instances
 of this class.
class
JSeparator
JSeparator
provides a general purpose component for
 implementing divider lines - most commonly used as a divider
 between menu items that breaks them up into logical groupings.
protected class
JSeparator.AccessibleJSeparator
This class implements accessibility support for the
JSeparator
class.
class
JSlider
A component that lets the user graphically select a value by sliding
 a knob within a bounded interval.
protected class
JSlider.AccessibleJSlider
This class implements accessibility support for the
JSlider
class.
class
JSpinner
A single line input field that lets the user select a
 number or an object value from an ordered sequence.
class
JSplitPane
JSplitPane
is used to divide two (and only two)
Component
s.
protected class
JSplitPane.AccessibleJSplitPane
This class implements accessibility support for the
JSplitPane
class.
class
JTabbedPane
A component that lets the user switch between a group of components by
 clicking on a tab with a given title and/or icon.
protected class
JTabbedPane.AccessibleJTabbedPane
This class implements accessibility support for the
JTabbedPane
class.
class
JTable
The
JTable
is used to display and edit regular two-dimensional tables
 of cells.
protected class
JTable.AccessibleJTable
This class implements accessibility support for the
JTable
class.
class
JTextArea
A
JTextArea
is a multi-line area that displays plain text.
protected class
JTextArea.AccessibleJTextArea
This class implements accessibility support for the
JTextArea
class.
class
JTextField
JTextField
is a lightweight component that allows the editing
 of a single line of text.
protected class
JTextField.AccessibleJTextField
This class implements accessibility support for the
JTextField
class.
class
JTextPane
A text component that can be marked up with attributes that are
 represented graphically.
class
JToggleButton
An implementation of a two-state button.
protected class
JToggleButton.AccessibleJToggleButton
This class implements accessibility support for the
JToggleButton
class.
static class
JToggleButton.ToggleButtonModel
The ToggleButton model
class
JToolBar
JToolBar
provides a component that is useful for
 displaying commonly used
Action
s or controls.
class
JToolTip
Used to display a "Tip" for a Component.
protected class
JToolTip.AccessibleJToolTip
This class implements accessibility support for the
JToolTip
class.
class
JTree
A control that displays a set of hierarchical data as an outline.
protected class
JTree.AccessibleJTree
This class implements accessibility support for the
JTree
class.
static class
JTree.DynamicUtilTreeNode
DynamicUtilTreeNode
can wrap
 vectors/hashtables/arrays/strings and
 create the appropriate children tree nodes as necessary.
protected static class
JTree.EmptySelectionModel
EmptySelectionModel
is a
TreeSelectionModel
that does not allow anything to be selected.
protected class
JTree.TreeSelectionRedirector
Handles creating a new
TreeSelectionEvent
with the
JTree
as the
 source and passing it off to all the listeners.
class
JViewport
The "viewport" or "porthole" through which you see the underlying
 information.
protected class
JViewport.AccessibleJViewport
This class implements accessibility support for the
JViewport
class.
protected class
JViewport.ViewListener
A listener for the view.
class
JWindow
A
JWindow
is a container that can be displayed anywhere on the
 user's desktop.
protected class
JWindow.AccessibleJWindow
This class implements accessibility support for the
JWindow
class.
class
KeyStroke
A KeyStroke represents a key action on the keyboard, or equivalent input
 device.
class
LayoutFocusTraversalPolicy
A SortingFocusTraversalPolicy which sorts Components based on their size,
 position, and orientation.
class
OverlayLayout
A layout manager to arrange components over the top
 of each other.
class
ScrollPaneLayout
The layout manager used by
JScrollPane
.
class
SizeRequirements
For the convenience of layout managers,
 calculates information about the size and position of components.
class
SpinnerDateModel
A
SpinnerModel
for sequences of
Date
s.
class
SpinnerListModel
A simple implementation of
SpinnerModel
whose
 values are defined by an array or a
List
.
class
SpinnerNumberModel
A
SpinnerModel
for sequences of numbers.
class
Spring
An instance of the
Spring
class holds three properties that
  characterize its behavior: the
minimum
,
preferred
, and
maximum
values.
class
SpringLayout
A
SpringLayout
lays out the children of its associated container
 according to a set of constraints.
class
Timer
Fires one or more
ActionEvent
s at specified
 intervals.
class
TransferHandler
This class is used to handle the transfer of a
Transferable
to and from Swing components.
class
UIDefaults
A table of defaults for Swing components.
class
UIManager
UIManager
manages the current look and feel, the set of
 available look and feels,
PropertyChangeListeners
that
 are notified when the look and feel changes, look and feel defaults, and
 convenience methods for obtaining various default values.
class
UnsupportedLookAndFeelException
An exception that indicates the requested look & feel
 management classes are not present on the user's system.
class
ViewportLayout
The default layout manager for
JViewport
.
Fields in
javax.swing
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected static final
Component
ImageIcon.
component
Deprecated.
since 1.8
Methods in
javax.swing
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
RepaintManager.
addDirtyRegion
(
Applet
applet,
 int x,
 int y,
 int w,
 int h)
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated.
static
MouseEvent
SwingUtilities.
convertMouseEvent
(
Component
source,
MouseEvent
sourceEvent,
Component
destination)
Returns a MouseEvent similar to
sourceEvent
except that its x
 and y members have been converted to
destination
's coordinate
 system.
static void
SwingUtilities.
convertPointFromScreen
(
Point
p,
Component
c)
Convert a point from a screen coordinates to a component's
 coordinate system
static void
SwingUtilities.
convertPointToScreen
(
Point
p,
Component
c)
Convert a point from a component's coordinate system to
 screen coordinates.
static
EditorKit
JEditorPane.
createEditorKitForContentType
(
String
type)
Creates a handler for the given type from the default registry
 of editor kits.
static
LookAndFeel
UIManager.
createLookAndFeel
(
String
name)
Creates a supported built-in Java
LookAndFeel
specified
 by the given
L&F name
name.
Object
UIDefaults.ProxyLazyValue.
createValue
(
UIDefaults
table)
Creates the value retrieved from the
UIDefaults
table.
protected void
JComboBox.
fireActionEvent
()
Notifies all listeners that have registered interest for
 notification on this event type.
protected void
JFileChooser.
fireActionPerformed
(
String
command)
Notifies all listeners that have registered interest for
 notification on this event type.
protected void
JTextField.
fireActionPerformed
()
Notifies all listeners that have registered interest for
 notification on this event type.
protected void
JTabbedPane.
fireStateChanged
()
Sends a
ChangeEvent
, with this
JTabbedPane
as the source,
 to each registered listener.
AccessibleContext
JLayer.
getAccessibleContext
()
Gets the AccessibleContext associated with this
JLayer
.
JPopupMenu
JComponent.
getComponentPopupMenu
()
Returns
JPopupMenu
that assigned for this component.
Dictionary
JSlider.
getLabelTable
()
Returns the dictionary of what labels to draw at which values.
<T extends
EventListener
>
T[]
JComponent.
getListeners
(
Class
<T> listenerType)
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
JComponent
.
static
Component
SwingUtilities.
getRoot
(
Component
c)
Returns the root component for the current component tree.
String
JList.
getToolTipText
(
MouseEvent
event)
Returns the tooltip text to be used for the given event.
Container
JComponent.
getTopLevelAncestor
()
Returns the top-level ancestor of this component (either the
 containing
Window
or
Applet
),
 or
null
if this component has not
 been added to any container.
void
JInternalFrame.
hide
()
void
Popup.
hide
()
Hides and disposes of the
Popup
.
boolean
JList.AccessibleJList.AccessibleJListChild.
isFocusTraversable
()
boolean
JTable.AccessibleJTable.AccessibleJTableCell.
isFocusTraversable
()
boolean
JTree.AccessibleJTree.AccessibleJTreeNode.
isFocusTraversable
()
Component
JTable.
prepareEditor
(
TableCellEditor
editor,
 int row,
 int column)
Prepares the editor by querying the data model for the value and
 selection state of the cell at
row
,
column
.
protected boolean
JComponent.
processKeyBinding
(
KeyStroke
ks,
KeyEvent
e,
 int condition,
 boolean pressed)
Invoked to process the key bindings for
ks
as the result
 of the
KeyEvent
e
.
static boolean
SwingUtilities.
processKeyBindings
(
KeyEvent
event)
Process the key bindings for the
Component
associated with
event
.
void
JMenuItem.
processKeyEvent
(
KeyEvent
e,
MenuElement
[] path,
MenuSelectionManager
manager)
Processes a key event forwarded from the
MenuSelectionManager
and changes the menu selection,
 if necessary, by using
MenuSelectionManager
's API.
void
JPopupMenu.
processKeyEvent
(
KeyEvent
e,
MenuElement
[] path,
MenuSelectionManager
manager)
Processes a key event forwarded from the
MenuSelectionManager
and changes the menu selection,
 if necessary, by using
MenuSelectionManager
's API.
void
JMenuItem.
processMouseEvent
(
MouseEvent
e,
MenuElement
[] path,
MenuSelectionManager
manager)
Processes a mouse event forwarded from the
MenuSelectionManager
and changes the menu
 selection, if necessary, by using the
MenuSelectionManager
's API.
void
MenuSelectionManager.
processMouseEvent
(
MouseEvent
event)
When a MenuElement receives an event from a MouseListener, it should never process the event
 directly.
protected final void
SwingWorker.
publish
(
V
... chunks)
Sends data chunks to the
SwingWorker.process(java.util.List<V>)
method.
void
JTabbedPane.
removeTabAt
(int index)
Removes the tab at
index
.
void
JInternalFrame.
reshape
(int x,
 int y,
 int width,
 int height)
Moves and resizes this component.
void
JViewport.
reshape
(int x,
 int y,
 int w,
 int h)
Sets the bounds of this viewport.
void
JEditorPane.
scrollToReference
(
String
reference)
Scrolls the view to the given reference location
 (that is, the value returned by the
URL.getRef
method for the URL being displayed).
void
JTabbedPane.
setComponentAt
(int index,
Component
component)
Sets the component at
index
to
component
.
void
JSlider.
setLabelTable
(
Dictionary
labels)
Used to specify what label will be drawn at any given value.
static void
UIManager.
setLookAndFeel
(
String
className)
Loads the
LookAndFeel
specified by the given class
 name, using the current thread's context class loader, and
 passes it to
setLookAndFeel(LookAndFeel)
.
void
DefaultButtonModel.
setPressed
(boolean b)
Sets the button to pressed or unpressed.
void
JToggleButton.ToggleButtonModel.
setPressed
(boolean b)
Sets the pressed state of the toggle button.
void
ProgressMonitor.
setProgress
(int nv)
Indicate the progress of the operation being monitored.
void
JInternalFrame.
show
()
If the internal frame is not visible,
 brings the internal frame to the front,
 makes it visible,
 and attempts to select it.
void
Popup.
show
()
Makes the
Popup
visible.
static
Color
JColorChooser.
showDialog
(
Component
component,
String
title,
Color
initialColor,
 boolean colorTransparencySelectionEnabled)
Shows a modal color-chooser dialog and blocks until the
 dialog is hidden.
int
JFileChooser.
showDialog
(
Component
parent,
String
approveButtonText)
Pops a custom file chooser dialog with a custom approve button.
static
Object
JOptionPane.
showInputDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType,
Icon
icon,
Object
[] selectionValues,
Object
initialSelectionValue)
Prompts the user for input in a blocking dialog where the
 initial selection, possible selections, and all other options can
 be specified.
static int
JOptionPane.
showOptionDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType,
 int messageType,
Icon
icon,
Object
[] options,
Object
initialValue)
Brings up a dialog with a specified icon, where the initial
 choice is determined by the
initialValue
parameter and
 the number of choices is determined by the
optionType
parameter.
Constructors in
javax.swing
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
DebugGraphics
()
Constructs a new debug graphics context that supports slowed
 down drawing.
JTable
(
Vector
<? extends
Vector
> rowData,
Vector
<?> columnNames)
Constructs a
JTable
to display the values in the
Vector
of
Vectors
,
rowData
,
 with column names,
columnNames
.
ProxyLazyValue
(
String
c,
String
m,
Object
[] o)
Creates a
LazyValue
which will construct an instance
 when asked.
SpinnerNumberModel
(
Number
value,
Comparable
<?> minimum,
Comparable
<?> maximum,
Number
stepSize)
Constructs a
SpinnerModel
that represents
 a closed sequence of
 numbers from
minimum
to
maximum
.
Uses of
SuppressWarnings
in
javax.swing.border
Classes in
javax.swing.border
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
AbstractBorder
A class that implements an empty border with no size.
class
BevelBorder
A class which implements a simple two-line bevel border.
class
CompoundBorder
A composite Border class used to compose two Border objects
 into a single border by nesting an inside Border object within
 the insets of an outside Border object.
class
EmptyBorder
A class which provides an empty, transparent border which
 takes up space but does no drawing.
class
EtchedBorder
A class which implements a simple etched border which can
 either be etched-in or etched-out.
class
LineBorder
A class which implements a line border of arbitrary thickness
 and of a single color.
class
MatteBorder
A class which provides a matte-like border of either a solid color
 or a tiled icon.
class
SoftBevelBorder
A class which implements a raised or lowered bevel with
 softened corners.
class
StrokeBorder
A class which implements a border of an arbitrary stroke.
class
TitledBorder
A class which implements an arbitrary border
 with the addition of a String title in a
 specified position and justification.
Uses of
SuppressWarnings
in
javax.swing.colorchooser
Classes in
javax.swing.colorchooser
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
AbstractColorChooserPanel
This is the abstract superclass for color choosers.
class
ColorChooserComponentFactory
A class designed to produce preconfigured "accessory" objects to
 insert into color choosers.
class
DefaultColorSelectionModel
A generic implementation of
ColorSelectionModel
.
Uses of
SuppressWarnings
in
javax.swing.event
Classes in
javax.swing.event
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
AncestorEvent
An event reported to a child component that originated from an
 ancestor in the component hierarchy.
class
CaretEvent
CaretEvent is used to notify interested parties that
 the text caret has changed in the event source.
class
ChangeEvent
ChangeEvent is used to notify interested parties that
 state has changed in the event source.
class
EventListenerList
A class that holds a list of EventListeners.
class
HyperlinkEvent
HyperlinkEvent is used to notify interested parties that
 something has happened with respect to a hypertext link.
class
InternalFrameEvent
An
AWTEvent
that adds support for
JInternalFrame
objects as the event source.
class
ListDataEvent
Defines an event that encapsulates changes to a list.
class
ListSelectionEvent
An event that characterizes a change in selection.
class
MenuDragMouseEvent
MenuDragMouseEvent is used to notify interested parties that
 the menu element has received a MouseEvent forwarded to it
 under drag conditions.
class
MenuEvent
MenuEvent is used to notify interested parties that
 the menu which is the event source has been posted,
 selected, or canceled.
class
MenuKeyEvent
MenuKeyEvent is used to notify interested parties that
 the menu element has received a KeyEvent forwarded to it
 in a menu tree.
class
PopupMenuEvent
PopupMenuEvent only contains the source of the event which is the JPopupMenu
 sending the event
class
RowSorterEvent
RowSorterEvent
provides notification of changes to
 a
RowSorter
.
class
TableColumnModelEvent
TableColumnModelEvent
is used to notify listeners that a table
 column model has changed, such as a column was added, removed, or
 moved.
class
TableModelEvent
TableModelEvent is used to notify listeners that a table model
 has changed.
class
TreeExpansionEvent
An event used to identify a single path in a tree.
class
TreeModelEvent
Encapsulates information describing changes to a tree model, and
 used to notify tree model listeners of the change.
class
TreeSelectionEvent
An event that characterizes a change in the current
 selection.
class
UndoableEditEvent
An event indicating that an operation which can be undone has occurred.
Uses of
SuppressWarnings
in
javax.swing.plaf
Classes in
javax.swing.plaf
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
ActionMapUIResource
A subclass of javax.swing.ActionMap that implements UIResource.
class
BorderUIResource
A Border wrapper class which implements UIResource.
class
ColorUIResource
A subclass of Color that implements UIResource.
class
ComponentInputMapUIResource
A subclass of javax.swing.ComponentInputMap that implements UIResource.
class
DimensionUIResource
A subclass of
Dimension
that implements
UIResource
.
class
FontUIResource
A subclass of java.awt.Font that implements UIResource.
class
IconUIResource
An Icon wrapper class which implements UIResource.
class
InputMapUIResource
A subclass of javax.swing.InputMap that implements UIResource.
class
InsetsUIResource
A subclass of Insets that implements UIResource.
class
LayerUI
<V extends
Component
>
The base class for all
JLayer
's UI delegates.
Methods in
javax.swing.plaf
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
boolean
ComponentUI.
contains
(
JComponent
c,
 int x,
 int y)
Returns
true
if the specified
x,y
location is
 contained within the look and feel's defined shape of the specified
 component.
Uses of
SuppressWarnings
in
javax.swing.plaf.basic
Classes in
javax.swing.plaf.basic
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
BasicArrowButton
JButton object that draws a scaled Arrow in one of the cardinal directions.
static class
BasicBorders.ButtonBorder
Draws a border around a button.
static class
BasicBorders.FieldBorder
Draws the border around a field.
static class
BasicBorders.MarginBorder
Draws the border around components which support margins.
static class
BasicBorders.MenuBarBorder
Draws the border around a menu bar.
static class
BasicBorders.RadioButtonBorder
Draws the border around a radio button.
static class
BasicBorders.RolloverButtonBorder
Special thin border for rollover toolbar buttons.
static class
BasicBorders.ToggleButtonBorder
Draws the border around a toggle button.
class
BasicCheckBoxUI
CheckboxUI implementation for BasicCheckboxUI
static class
BasicComboBoxEditor.UIResource
A subclass of BasicComboBoxEditor that implements UIResource.
class
BasicComboBoxRenderer
ComboBox renderer
static class
BasicComboBoxRenderer.UIResource
A subclass of BasicComboBoxRenderer that implements UIResource.
class
BasicComboPopup
This is a basic implementation of the
ComboPopup
interface.
protected class
BasicDesktopPaneUI.CloseAction
Handles closing an internal frame.
protected class
BasicDesktopPaneUI.MaximizeAction
Handles maximizing an internal frame.
protected class
BasicDesktopPaneUI.MinimizeAction
Handles minimizing an internal frame.
protected class
BasicDesktopPaneUI.NavigateAction
Handles navigating to the next internal frame.
protected class
BasicDesktopPaneUI.OpenAction
Handles restoring a minimized or maximized internal frame.
class
BasicDirectoryModel
Basic implementation of a file list.
class
BasicEditorPaneUI
Provides the look and feel for a JEditorPane.
protected class
BasicFileChooserUI.ApproveSelectionAction
Responds to an Open or Save request
protected class
BasicFileChooserUI.CancelSelectionAction
Responds to a cancel request.
protected class
BasicFileChooserUI.ChangeToParentDirectoryAction
Change to parent directory action.
protected class
BasicFileChooserUI.GoHomeAction
Acts on the "home" key event or equivalent event.
protected class
BasicFileChooserUI.NewFolderAction
Creates a new folder.
protected class
BasicFileChooserUI.UpdateAction
Rescans the files in the current directory
class
BasicIconFactory
Factory object that can vend Icons appropriate for the basic L & F.
class
BasicInternalFrameTitlePane
The class that manages a basic title bar
class
BasicInternalFrameTitlePane.SystemMenuBar
This class should be treated as a "protected" inner class.
class
BasicListUI.ListDataHandler
The
ListDataListener
that's added to the
JLists
model at
installUI time
, and whenever the JList.model property changes.
class
BasicListUI.ListSelectionHandler
The ListSelectionListener that's added to the JLists selection
 model at installUI time, and whenever the JList.selectionModel property
 changes.
class
BasicListUI.MouseInputHandler
Mouse input, and focus handling for JList.
class
BasicListUI.PropertyChangeHandler
The PropertyChangeListener that's added to the JList at
 installUI time.
class
BasicLookAndFeel
A base class to use in creating a look and feel for Swing.
class
BasicSliderUI.ActionScroller
As of Java 2 platform v1.3 this undocumented class is no longer used.
class
BasicSplitPaneDivider
Divider used by BasicSplitPaneUI.
protected class
BasicSplitPaneDivider.DragController
Handles the events during a dragging session for a
 HORIZONTAL_SPLIT oriented split pane.
class
BasicTextAreaUI
Provides the look and feel for a plain text editor.
class
BasicTextFieldUI
Basis of a look and feel for a JTextField.
class
BasicTextPaneUI
Provides the look and feel for a styled text editor.
class
BasicTextUI
Basis of a text components look-and-feel.
protected class
BasicToolBarUI.DragWindow
The window which appears during dragging the
JToolBar
.
class
BasicTreeUI.TreeCancelEditingAction
ActionListener that invokes cancelEditing when action performed.
class
BasicTreeUI.TreeHomeAction
TreeHomeAction is used to handle end/home actions.
class
BasicTreeUI.TreeIncrementAction
TreeIncrementAction is used to handle up/down actions.
class
BasicTreeUI.TreePageAction
TreePageAction handles page up and page down events.
class
BasicTreeUI.TreeToggleAction
For the first selected row expandedness will be toggled.
class
BasicTreeUI.TreeTraverseAction
TreeTraverseAction
is the action used for left/right keys.
interface
ComboPopup
The interface which defines the methods required for the implementation of the popup
 portion of a combo box.
class
DefaultMenuLayout
The default layout manager for Popup menus and menubars.
Methods in
javax.swing.plaf.basic
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
protected void
BasicTreeUI.
completeEditing
(boolean messageStop,
 boolean messageCancel,
 boolean messageTree)
Stops the editing session.
protected
Component
BasicSplitPaneUI.
createDefaultNonContinuousLayoutDivider
()
Returns the default non continuous layout divider, which is an
 instance of
Canvas
that fills in the background with dark gray.
static
ComponentUI
BasicLabelUI.
createUI
(
JComponent
c)
Returns an instance of
BasicLabelUI
.
protected void
BasicToolBarUI.
dragTo
(
Point
position,
Point
origin)
The method is used to drag
DragWindow
during the
JToolBar
is being dragged.
String
BasicTextUI.
getToolTipText
(
JTextComponent
t,
Point
pt)
Returns the string to be used as the tooltip at the passed in location.
void
BasicComboPopup.
hide
()
Implementation of ComboPopup.hide().
protected void
BasicSplitPaneUI.
installDefaults
()
Installs the UI defaults.
boolean
BasicArrowButton.
isFocusTraversable
()
Returns whether the arrow button should get the focus.
boolean
BasicComboPopup.
isFocusTraversable
()
Overridden to unconditionally return false.
void
BasicTabbedPaneUI.TabbedPaneLayout.
layoutContainer
(
Container
parent)
Lays out the specified container.
void
BasicInternalFrameUI.BorderListener.
mouseDragged
(
MouseEvent
e)
protected void
BasicToolBarUI.
navigateFocusedComp
(int direction)
Navigates the focused component.
void
BasicToolBarUI.
setFloating
(boolean b,
Point
p)
Sets the floating property.
void
BasicComboPopup.
show
()
Implementation of ComboPopup.show().
Uses of
SuppressWarnings
in
javax.swing.plaf.metal
Classes in
javax.swing.plaf.metal
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
DefaultMetalTheme
A concrete implementation of
MetalTheme
providing
 the original look of the Java Look and Feel, code-named "Steel".
static class
MetalBorders.ButtonBorder
The class represents the border of a
JButton
.
static class
MetalBorders.Flush3DBorder
The class represents the 3D border.
static class
MetalBorders.InternalFrameBorder
The class represents the border of a
JInternalFrame
.
static class
MetalBorders.MenuBarBorder
The class represents the border of a
JMenuBar
.
static class
MetalBorders.MenuItemBorder
The class represents the border of a
JMenuItem
.
static class
MetalBorders.OptionDialogBorder
The class represents the border of an option dialog.
static class
MetalBorders.PaletteBorder
Border for a Palette.
static class
MetalBorders.PopupMenuBorder
The class represents the border of a
JPopupMenu
.
static class
MetalBorders.RolloverButtonBorder
The class represents the border of a rollover
Button
.
static class
MetalBorders.ScrollPaneBorder
The class represents the border of a
JScrollPane
.
static class
MetalBorders.TableHeaderBorder
Border for a Table Header
static class
MetalBorders.TextFieldBorder
Border for a
JTextField
.
static class
MetalBorders.ToggleButtonBorder
Border for a
JToggleButton
.
static class
MetalBorders.ToolBarBorder
The class represents the border of a
JToolBar
.
class
MetalButtonUI
MetalButtonUI implementation
class
MetalCheckBoxIcon
CheckboxIcon implementation for OrganicCheckBoxUI
class
MetalCheckBoxUI
CheckboxUI implementation for MetalCheckboxUI
class
MetalComboBoxButton
JButton subclass to help out MetalComboBoxUI
class
MetalComboBoxEditor
The default editor for Metal editable combo boxes
static class
MetalComboBoxEditor.UIResource
A subclass of BasicComboBoxEditor that implements UIResource.
class
MetalComboBoxIcon
This utility class draws the horizontal bars which indicate a MetalComboBox
class
MetalComboBoxUI
Metal UI for JComboBox
protected class
MetalFileChooserUI.DirectoryComboBoxAction
Acts when DirectoryComboBox has changed the selected item.
protected class
MetalFileChooserUI.DirectoryComboBoxModel
Data model for a type-face selection combo-box.
protected class
MetalFileChooserUI.FileRenderer
Deprecated.
As of JDK version 9.
protected class
MetalFileChooserUI.FilterComboBoxModel
Data model for a type-face selection combo-box.
class
MetalFileChooserUI.FilterComboBoxRenderer
Render different type sizes and styles.
class
MetalIconFactory
Factory object that vends
Icon
s for
 the Java look and feel (Metal).
static class
MetalIconFactory.FileIcon16
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
static class
MetalIconFactory.FolderIcon16
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
static class
MetalIconFactory.TreeControlIcon
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
static class
MetalIconFactory.TreeFolderIcon
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
class
MetalInternalFrameTitlePane
Class that manages a JLF title bar
class
MetalLookAndFeel
The Java Look and Feel, otherwise known as Metal.
class
MetalProgressBarUI
The Metal implementation of ProgressBarUI.
class
MetalRadioButtonUI
RadioButtonUI implementation for MetalRadioButtonUI
class
MetalRootPaneUI
Provides the metal look and feel implementation of
RootPaneUI
.
class
MetalScrollButton
JButton object for Metal scrollbar arrows.
class
MetalScrollPaneUI
A Metal L&F implementation of ScrollPaneUI.
class
MetalSeparatorUI
A Metal L&F implementation of SeparatorUI.
class
MetalSliderUI
A Java L&F implementation of SliderUI.
class
MetalSplitPaneUI
Metal split pane.
class
MetalTabbedPaneUI
The Metal subclass of BasicTabbedPaneUI.
class
MetalTextFieldUI
Basis of a look and feel for a JTextField.
class
MetalToggleButtonUI
MetalToggleButton implementation
class
MetalToolTipUI
A Metal L&F extension of BasicToolTipUI.
class
OceanTheme
The default theme for the
MetalLookAndFeel
.
Methods in
javax.swing.plaf.metal
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
ComponentUI
MetalLabelUI.
createUI
(
JComponent
c)
Returns an instance of
MetalLabelUI
.
String
MetalToolTipUI.
getAcceleratorString
()
Returns the accelerator string.
boolean
MetalComboBoxButton.
isFocusTraversable
()
Uses of
SuppressWarnings
in
javax.swing.plaf.multi
Classes in
javax.swing.plaf.multi
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
MultiLookAndFeel
A multiplexing look and feel that allows more than one UI
 to be associated with a component at the same time.
Methods in
javax.swing.plaf.multi
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
String
MultiTextUI.
getToolTipText
(
JTextComponent
a,
Point
b)
Invokes the
getToolTipText
method on each UI handled by this object.
Uses of
SuppressWarnings
in
javax.swing.plaf.nimbus
Classes in
javax.swing.plaf.nimbus
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
NimbusLookAndFeel
The NimbusLookAndFeel class.
Uses of
SuppressWarnings
in
javax.swing.plaf.synth
Classes in
javax.swing.plaf.synth
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
SynthLookAndFeel
SynthLookAndFeel provides the basis for creating a customized look and
 feel.
class
SynthTextAreaUI
Provides the look and feel for a plain text editor in the
 Synth look and feel.
class
SynthTextFieldUI
Provides the Synth L&F UI delegate for
JTextField
.
class
SynthTextPaneUI
Provides the look and feel for a styled text editor in the
 Synth look and feel.
Methods in
javax.swing.plaf.synth
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
protected void
SynthSplitPaneUI.
installDefaults
()
Installs the UI defaults.
Uses of
SuppressWarnings
in
javax.swing.table
Classes in
javax.swing.table
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
AbstractTableModel
This abstract class provides default implementations for most of
  the methods in the
TableModel
interface.
class
DefaultTableCellRenderer
The standard class for rendering (displaying) individual cells
 in a
JTable
.
static class
DefaultTableCellRenderer.UIResource
A subclass of
DefaultTableCellRenderer
that
 implements
UIResource
.
class
DefaultTableColumnModel
The standard column-handler for a
JTable
.
class
DefaultTableModel
This is an implementation of
TableModel
that
 uses a
Vector
of
Vectors
to store the
 cell value objects.
class
JTableHeader
This is the object which manages the header of the
JTable
.
protected class
JTableHeader.AccessibleJTableHeader
This class implements accessibility support for the
JTableHeader
class.
class
TableColumn
A
TableColumn
represents all the attributes of a column in a
JTable
, such as width, resizability, minimum and maximum width.
Fields in
javax.swing.table
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
Vector
DefaultTableModel.
columnIdentifiers
The
Vector
of column identifiers.
protected
Vector
<
Vector
>
DefaultTableModel.
dataVector
The
Vector
of
Vectors
of
Object
values.
Methods in
javax.swing.table
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
void
DefaultTableModel.
addColumn
(
Object
columnName,
Vector
<?> columnData)
Adds a column to the model.
Vector
<
Vector
>
DefaultTableModel.
getDataVector
()
Returns the
Vector
of
Vectors
that contains the table's
  data values.
String
JTableHeader.
getToolTipText
(
MouseEvent
event)
Allows the renderer's tips to be used if there is text set.
boolean
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry.
isFocusTraversable
()
void
DefaultTableModel.
setDataVector
(
Vector
<? extends
Vector
> dataVector,
Vector
<?> columnIdentifiers)
Replaces the current
dataVector
instance variable
  with the new
Vector
of rows,
dataVector
.
Constructors in
javax.swing.table
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
DefaultTableModel
(
Vector
<? extends
Vector
> data,
Vector
<?> columnNames)
Constructs a
DefaultTableModel
and initializes the table
  by passing
data
and
columnNames
to the
setDataVector
method.
Uses of
SuppressWarnings
in
javax.swing.text
Classes in
javax.swing.text
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
AbstractDocument
An implementation of the document interface to serve as a
 basis for implementing various kinds of documents.
class
AbstractDocument.AbstractElement
Implements the abstract part of an element.
class
AbstractDocument.BranchElement
Implements a composite element that contains other elements.
class
AbstractDocument.LeafElement
Implements an element that directly represents content of
 some kind.
class
BadLocationException
This exception is to report bad locations within a document model
 (that is, attempts to reference a location that doesn't exist).
class
ChangedCharSetException
ChangedCharSetException as the name indicates is an exception
 thrown when the charset is changed.
class
DateFormatter
DateFormatter is an
InternationalFormatter
that does its
 formatting by way of an instance of
java.text.DateFormat
.
class
DefaultCaret
A default implementation of Caret.
class
DefaultEditorKit
This is the set of things needed by a text component
 to be a reasonably functioning editor for some
type
of text document.
static class
DefaultEditorKit.BeepAction
Creates a beep.
static class
DefaultEditorKit.CopyAction
Copies the selected region and place its contents
 into the system clipboard.
static class
DefaultEditorKit.CutAction
Cuts the selected region and place its contents
 into the system clipboard.
static class
DefaultEditorKit.DefaultKeyTypedAction
The action that is executed by default if
 a
key typed event
is received and there
 is no keymap entry.
static class
DefaultEditorKit.InsertBreakAction
Places a line/paragraph break into the document.
static class
DefaultEditorKit.InsertContentAction
Places content into the associated document.
static class
DefaultEditorKit.InsertTabAction
Places a tab character into the document.
static class
DefaultEditorKit.PasteAction
Pastes the contents of the system clipboard into the
 selected region, or before the caret if nothing is
 selected.
class
DefaultFormatter
DefaultFormatter
formats arbitrary objects.
class
DefaultFormatterFactory
An implementation of
JFormattedTextField.AbstractFormatterFactory
.
class
DefaultStyledDocument
A document that can be marked up with character and paragraph
 styles in a manner similar to the Rich Text Format.
class
DefaultStyledDocument.ElementBuffer
Class to manage changes to the element
 hierarchy.
static class
DefaultStyledDocument.ElementSpec
Specification for building elements.
protected class
DefaultStyledDocument.SectionElement
Default root element for a document... maps out the
 paragraphs/lines contained.
class
EditorKit
Establishes the set of things needed by a text component
 to be a reasonably functioning editor for some
type
of text content.
class
GapContent
An implementation of the AbstractDocument.Content interface
 implemented using a gapped buffer similar to that used by emacs.
class
InternationalFormatter
InternationalFormatter
extends
DefaultFormatter
,
 using an instance of
java.text.Format
to handle the
 conversion to a String, and the conversion from a String.
class
JTextComponent
JTextComponent
is the base class for swing text
 components.
class
JTextComponent.AccessibleJTextComponent
This class implements accessibility support for the
JTextComponent
class.
static class
JTextComponent.KeyBinding
Binding record for creating key bindings.
class
MaskFormatter
MaskFormatter
is used to format and edit strings.
class
NumberFormatter
NumberFormatter
subclasses
InternationalFormatter
adding special behavior for numbers.
class
PlainDocument
A plain document that maintains no character attributes.
class
SimpleAttributeSet
A straightforward implementation of MutableAttributeSet using a
 hash table.
final class
StringContent
An implementation of the AbstractDocument.Content interface that is
 a brute force implementation that is useful for relatively small
 documents and/or debugging.
class
StyleContext
A pool of styles and their associated resources.
class
StyleContext.NamedStyle
A collection of attributes, typically used to represent
 character and paragraph styles.
class
StyledEditorKit
This is the set of things needed by a text component
 to be a reasonably functioning editor for some
type
of text document.
static class
StyledEditorKit.AlignmentAction
An action to set paragraph alignment.
static class
StyledEditorKit.BoldAction
An action to toggle the bold attribute.
static class
StyledEditorKit.FontFamilyAction
An action to set the font family in the associated
 JEditorPane.
static class
StyledEditorKit.FontSizeAction
An action to set the font size in the associated
 JEditorPane.
static class
StyledEditorKit.ForegroundAction
An action to set foreground color.
static class
StyledEditorKit.ItalicAction
An action to toggle the italic attribute.
static class
StyledEditorKit.StyledTextAction
An action that assumes it's being fired on a JEditorPane
 with a StyledEditorKit (or subclass) installed.
static class
StyledEditorKit.UnderlineAction
An action to toggle the underline attribute.
class
TabSet
A TabSet is comprised of many TabStops.
class
TabStop
This class encapsulates a single tab stop (basically as tab stops
 are thought of by RTF).
class
TextAction
An Action implementation useful for key bindings that are
 shared across a number of different text components.
Methods in
javax.swing.text
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
protected int
WrappedPlainView.
calculateBreakPosition
(int p0,
 int p1)
This is called by the nested wrapped line
 views to determine the break location.
Object
SimpleAttributeSet.
clone
()
Clones a set of attributes.
protected int
ParagraphView.
getClosestPositionTo
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet,
 int rowIndex,
 int x)
Returns the closest model position to
x
.
FontMetrics
StyleContext.
getFontMetrics
(
Font
f)
Returns font metrics for a font.
protected int
ParagraphView.
getNextNorthSouthVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Returns the next visual position for the cursor, in
 either the east or west direction.
int
View.
getNextVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Provides a way to determine the next visually represented model
 location at which one might place a caret.
protected
Vector
GapContent.
getPositionsInRange
(
Vector
v,
 int offset,
 int length)
Returns a Vector containing instances of UndoPosRef for the
 Positions in the range
offset
to
offset
+
length
.
protected
Vector
StringContent.
getPositionsInRange
(
Vector
v,
 int offset,
 int length)
Returns a Vector containing instances of UndoPosRef for the
 Positions in the range
offset
to
offset
+
length
.
float
FieldView.
getPreferredSpan
(int axis)
Determines the preferred span for this view along an
 axis.
static final int
Utilities.
getRowEnd
(
JTextComponent
c,
 int offs)
Determines the ending row model position of the row that contains
 the specified model position.
static final int
Utilities.
getRowStart
(
JTextComponent
c,
 int offs)
Determines the starting row model position of the row that contains
 the specified model position.
String
JTextComponent.
getToolTipText
(
MouseEvent
event)
Returns the string to be used as the tooltip for
event
.
Shape
PlainView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
void
DefaultCaret.
mouseClicked
(
MouseEvent
e)
Called when the mouse is clicked.
protected void
DefaultCaret.
moveCaret
(
MouseEvent
e)
Tries to move the position of the caret from
 the coordinates of a mouse event, using viewToModel().
void
DefaultCaret.
paint
(
Graphics
g)
Renders the caret as a vertical line.
void
DefaultHighlighter.DefaultHighlightPainter.
paint
(
Graphics
g,
 int offs0,
 int offs1,
Shape
bounds,
JTextComponent
c)
Paints a highlight.
protected void
DefaultCaret.
positionCaret
(
MouseEvent
e)
Tries to set the position of the caret from
 the coordinates of a mouse event, using viewToModel().
void
DefaultCaret.
setVisible
(boolean e)
Sets the caret visibility, and repaints the caret.
protected void
GapContent.
updateUndoPositions
(
Vector
positions,
 int offset,
 int length)
Resets the location for all the UndoPosRef instances
 in
positions
.
protected void
StringContent.
updateUndoPositions
(
Vector
positions)
Resets the location for all the UndoPosRef instances
 in
positions
.
Uses of
SuppressWarnings
in
javax.swing.text.html
Classes in
javax.swing.text.html
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
CSS
Defines a set of
CSS attributes
as a typesafe enumeration.
final class
FormSubmitEvent
FormSubmitEvent is used to notify interested
 parties that a form was submitted.
static class
HTML.UnknownTag
Class represents unknown HTML tag.
class
HTMLDocument
A document that models HTML.
class
HTMLEditorKit
The Swing JEditorPane text component supports different kinds
 of content via a plug-in mechanism called an EditorKit.
static class
HTMLEditorKit.HTMLTextAction
An abstract Action providing some convenience methods that may
 be useful in inserting HTML into an existing document.
static class
HTMLEditorKit.InsertHTMLTextAction
InsertHTMLTextAction can be used to insert an arbitrary string of HTML
 into an existing HTML document.
static class
HTMLEditorKit.LinkController
Class to watch the associated component and fire
 hyperlink events on it when appropriate.
class
HTMLFrameHyperlinkEvent
HTMLFrameHyperlinkEvent is used to notify interested
 parties that link was activated in a frame.
class
Option
Value for the ListModel used to represent
 <option> elements.
class
StyleSheet
Support for defining the visual characteristics of
 HTML views being rendered.
static final class
StyleSheet.BoxPainter
Class to carry out some of the duties of
 CSS formatting.
static final class
StyleSheet.ListPainter
Class to carry out some of the duties of CSS list
 formatting.
Methods in
javax.swing.text.html
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
protected
Component
ObjectView.
createComponent
()
Create the component.
void
HTMLEditorKit.LinkController.
mouseClicked
(
MouseEvent
e)
Called for a mouse click event.
void
HTMLEditorKit.LinkController.
mouseMoved
(
MouseEvent
e)
Uses of
SuppressWarnings
in
javax.swing.text.html.parser
Classes in
javax.swing.text.html.parser
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
final class
AttributeList
This class defines the attributes of an SGML element
 as described in a DTD using the ATTLIST construct.
final class
ContentModel
A representation of a content model.
final class
Element
An element as described in a DTD using the ELEMENT construct.
class
ParserDelegator
Responsible for starting up a new DocumentParser
 each time its parse method is invoked.
Uses of
SuppressWarnings
in
javax.swing.text.rtf
Classes in
javax.swing.text.rtf
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
RTFEditorKit
This is the default implementation of RTF editing
 functionality.
Uses of
SuppressWarnings
in
javax.swing.tree
Classes in
javax.swing.tree
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
AbstractLayoutCache
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases.
class
DefaultMutableTreeNode
A
DefaultMutableTreeNode
is a general-purpose node in a tree data
 structure.
class
DefaultTreeCellEditor.DefaultTextField
TextField
used when no editor is supplied.
class
DefaultTreeCellEditor.EditorContainer
Container responsible for placing the
editingComponent
.
class
DefaultTreeCellRenderer
Displays an entry in a tree.
class
DefaultTreeModel
A simple tree data model that uses TreeNodes.
class
DefaultTreeSelectionModel
Default implementation of TreeSelectionModel.
class
ExpandVetoException
Exception used to stop an expand/collapse from happening.
class
FixedHeightLayoutCache
NOTE: This will become more open in a future release.
class
TreePath
TreePath
represents an array of objects that uniquely
 identify the path to a node in a tree.
class
VariableHeightLayoutCache
NOTE: This will become more open in a future release.
Uses of
SuppressWarnings
in
javax.swing.undo
Classes in
javax.swing.undo
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
AbstractUndoableEdit
An abstract implementation of
UndoableEdit
,
 implementing simple responses to all boolean methods in
 that interface.
class
CannotRedoException
Thrown when an UndoableEdit is told to
redo()
and can't.
class
CannotUndoException
Thrown when an UndoableEdit is told to
undo()
and can't.
class
CompoundEdit
A concrete subclass of AbstractUndoableEdit, used to assemble little
 UndoableEdits into great big ones.
class
StateEdit
StateEdit is a general edit for objects that change state.
class
UndoManager
UndoManager
manages a list of
UndoableEdits
,
 providing a way to undo or redo the appropriate edits.
Uses of
SuppressWarnings
in
javax.xml.parsers
Classes in
javax.xml.parsers
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
SAXParser
Defines the API that wraps an
XMLReader
implementation class.
Uses of
SuppressWarnings
in
javax.xml.stream
Fields in
javax.xml.stream
with annotations of type
SuppressWarnings
Modifier and Type
Field
Description
protected
Location
XMLStreamException.
location
The location of the error.
Uses of
SuppressWarnings
in
javax.xml.transform
Methods in
javax.xml.transform
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
String
TransformerException.
getLocationAsString
()
Get the location information as a string.
Uses of
SuppressWarnings
in
jdk.dynalink.linker.support
Methods in
jdk.dynalink.linker.support
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
MethodHandle
Guards.
isArray
(int pos,
MethodType
type)
Creates a method handle that returns true if the argument in the specified position is a Java array.
static
MethodHandle
Guards.
isInstance
(
Class
<?> clazz,
 int pos,
MethodType
type)
Creates a method handle with arguments of a specified type, but with boolean return value.
static
MethodHandle
Guards.
isOfClass
(
Class
<?> clazz,
MethodType
type)
Creates a guard method handle with arguments of a specified type, but with boolean return value.
Uses of
SuppressWarnings
in
jdk.incubator.vector
Classes in
jdk.incubator.vector
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
ByteVector
A specialized
Vector
representing an ordered immutable sequence of
byte
values.
class
DoubleVector
A specialized
Vector
representing an ordered immutable sequence of
double
values.
class
FloatVector
A specialized
Vector
representing an ordered immutable sequence of
float
values.
class
IntVector
A specialized
Vector
representing an ordered immutable sequence of
int
values.
class
LongVector
A specialized
Vector
representing an ordered immutable sequence of
long
values.
class
ShortVector
A specialized
Vector
representing an ordered immutable sequence of
short
values.
class
Vector
<E>
A
sequence of a fixed number of
lanes
,
 all of some fixed
element type
such as
byte
,
long
, or
float
.
class
VectorMask
<E>
A
VectorMask
represents an ordered immutable sequence of
boolean
values.
class
VectorShuffle
<E>
A
VectorShuffle
represents an ordered immutable sequence of
int
values called
source indexes
, where each source
 index numerically selects a source lane from a compatible
Vector
.
Uses of
SuppressWarnings
in
jdk.javadoc.doclet
Constructors in
jdk.javadoc.doclet
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
StandardDoclet
()
Creates an instance of the standard doclet, used to generate HTML-formatted
 documentation.
Uses of
SuppressWarnings
in
jdk.jfr
Classes in
jdk.jfr
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
final class
FlightRecorderPermission
Permission for controlling access to Flight Recorder.
Constructors in
jdk.jfr
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
protected
SettingControl
()
Constructor for invocation by subclass constructors.
Uses of
SuppressWarnings
in
jdk.jfr.consumer
Methods in
jdk.jfr.consumer
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
List
<
RecordedFrame
>
RecordedStackTrace.
getFrames
()
Returns the frames in the stack trace.
static
EventStream
EventStream.
openFile
(
Path
file)
Creates an event stream from a file.
static
EventStream
EventStream.
openRepository
()
Creates a stream from the repository of the current Java Virtual Machine
 (JVM).
Uses of
SuppressWarnings
in
jdk.jshell
Classes in
jdk.jshell
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
EvalException
Wraps an throwable thrown in the executing client.
class
JShellException
The superclass of JShell generated exceptions
class
UnresolvedReferenceException
Exception reported on attempting to execute a
RECOVERABLE_DEFINED
snippet.
Uses of
SuppressWarnings
in
jdk.jshell.execution
Constructors in
jdk.jshell.execution
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
JdiInitiator
(int port,
List
<
String
> remoteVMOptions,
String
remoteAgent,
 boolean isLaunch,
String
host,
 int timeout,
Map
<
String
,
String
> customConnectorArgs)
Start the remote agent and establish a JDI connection to it.
Uses of
SuppressWarnings
in
jdk.jshell.spi
Classes in
jdk.jshell.spi
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
SPIResolutionException
The construction and throw of this exception is embedded in code generated by
 the JShell core implementation in such a way that, upon executing a
RECOVERABLE_DEFINED
user method, this exception is thrown.
Constructors in
jdk.jshell.spi
with annotations of type
SuppressWarnings
Modifier
Constructor
Description
ResolutionException
(int id,
StackTraceElement
[] stackElements)
Constructs an exception indicating that a
DeclarationSnippet
with unresolved references has been encountered.
UserException
(
String
message,
String
causeExceptionClass,
StackTraceElement
[] stackElements)
Uses of
SuppressWarnings
in
netscape.javascript
Classes in
netscape.javascript
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
JSObject
Allows Java code to manipulate JavaScript objects.
Uses of
SuppressWarnings
in
org.w3c.dom.bootstrap
Methods in
org.w3c.dom.bootstrap
with annotations of type
SuppressWarnings
Modifier and Type
Method
Description
static
DOMImplementationRegistry
DOMImplementationRegistry.
newInstance
()
Obtain a new instance of a
DOMImplementationRegistry
.
Uses of
SuppressWarnings
in
org.xml.sax.helpers
Classes in
org.xml.sax.helpers
with annotations of type
SuppressWarnings
Modifier and Type
Class
Description
class
ParserAdapter
Adapt a SAX1 Parser as a SAX2 XMLReader.
class
ParserFactory
Deprecated.
This class works with the deprecated
Parser
interface.
class
XMLReaderAdapter
Adapt a SAX2 XMLReader as a SAX1 Parser.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.