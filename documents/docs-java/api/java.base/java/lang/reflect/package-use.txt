Uses of Package java.lang.reflect (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Package
java.lang.reflect
Packages that use
java.lang.reflect
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.annotation
Provides library support for the Java programming language
 annotation facility.
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.lang.module
Classes to support module descriptors and creating configurations of modules
 by means of resolution and service binding.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.modelmbean
Provides the definition of the ModelMBean classes.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
javax.sql.rowset.serial
Provides utility classes to allow serializable mappings between SQL types
 and data types in the Java programming language.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
jdk.dynalink.linker.support
Contains classes that make it more convenient for language runtimes to
 implement their own language-specific object models and type conversions
 by providing basic implementations of some classes as well as various
 utilities.
jdk.jshell.execution
Provides implementation support for building JShell execution engines.
Classes in
java.lang.reflect
used by
java.awt
Class
Description
InvocationTargetException
InvocationTargetException is a checked exception that wraps
 an exception thrown by an invoked method or constructor.
Classes in
java.lang.reflect
used by
java.beans
Class
Description
InvocationHandler
InvocationHandler
is the interface implemented by
 the
invocation handler
of a proxy instance.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Classes in
java.lang.reflect
used by
java.lang
Class
Description
AccessFlag
Represents a JVM access or module-related flag on a runtime member,
 such as a
class
,
field
, or
method
.
AnnotatedElement
Represents an annotated construct of the program currently running
 in this VM.
AnnotatedType
AnnotatedType
represents the potentially annotated use of a type in
 the program currently running in this VM.
Constructor
Constructor
provides information about, and access to, a single
 constructor for a class.
Field
A
Field
provides information about, and dynamic access to, a
 single field of a class or an interface.
GenericDeclaration
A common interface for all entities that declare type variables.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
RecordComponent
A
RecordComponent
provides information about, and dynamic access to, a
 component of a record class.
Type
Type is the common superinterface for all types in the Java
 programming language.
TypeVariable
TypeVariable is the common superinterface for type variables of kinds.
Classes in
java.lang.reflect
used by
java.lang.annotation
Class
Description
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Classes in
java.lang.reflect
used by
java.lang.invoke
Class
Description
Constructor
Constructor
provides information about, and access to, a single
 constructor for a class.
Field
A
Field
provides information about, and dynamic access to, a
 single field of a class or an interface.
Member
Member is an interface that reflects identifying information about
 a single member (a field or a method) or a constructor.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Classes in
java.lang.reflect
used by
java.lang.module
Class
Description
AccessFlag
Represents a JVM access or module-related flag on a runtime member,
 such as a
class
,
field
, or
method
.
Classes in
java.lang.reflect
used by
java.lang.reflect
Class
Description
AccessFlag
Represents a JVM access or module-related flag on a runtime member,
 such as a
class
,
field
, or
method
.
AccessFlag.Location
A location within a class file where flags can be applied.
AccessibleObject
The
AccessibleObject
class is the base class for
Field
,
Method
, and
Constructor
objects (known as
reflected
 objects
).
AnnotatedElement
Represents an annotated construct of the program currently running
 in this VM.
AnnotatedType
AnnotatedType
represents the potentially annotated use of a type in
 the program currently running in this VM.
ClassFileFormatVersion
Class file format versions of the Java virtual machine.
Constructor
Constructor
provides information about, and access to, a single
 constructor for a class.
Executable
A shared superclass for the common functionality of
Method
and
Constructor
.
GenericDeclaration
A common interface for all entities that declare type variables.
InvocationHandler
InvocationHandler
is the interface implemented by
 the
invocation handler
of a proxy instance.
InvocationTargetException
InvocationTargetException is a checked exception that wraps
 an exception thrown by an invoked method or constructor.
Member
Member is an interface that reflects identifying information about
 a single member (a field or a method) or a constructor.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Parameter
Information about method parameters.
Type
Type is the common superinterface for all types in the Java
 programming language.
TypeVariable
TypeVariable is the common superinterface for type variables of kinds.
Classes in
java.lang.reflect
used by
java.rmi.server
Class
Description
InvocationHandler
InvocationHandler
is the interface implemented by
 the
invocation handler
of a proxy instance.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Classes in
java.lang.reflect
used by
javax.management
Class
Description
Constructor
Constructor
provides information about, and access to, a single
 constructor for a class.
InvocationHandler
InvocationHandler
is the interface implemented by
 the
invocation handler
of a proxy instance.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Classes in
java.lang.reflect
used by
javax.management.modelmbean
Class
Description
Constructor
Constructor
provides information about, and access to, a single
 constructor for a class.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Classes in
java.lang.reflect
used by
javax.management.openmbean
Class
Description
InvocationHandler
InvocationHandler
is the interface implemented by
 the
invocation handler
of a proxy instance.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Classes in
java.lang.reflect
used by
javax.sql.rowset.serial
Class
Description
Field
A
Field
provides information about, and dynamic access to, a
 single field of a class or an interface.
Classes in
java.lang.reflect
used by
javax.swing
Class
Description
InvocationTargetException
InvocationTargetException is a checked exception that wraps
 an exception thrown by an invoked method or constructor.
Classes in
java.lang.reflect
used by
jdk.dynalink.linker.support
Class
Description
Constructor
Constructor
provides information about, and access to, a single
 constructor for a class.
Field
A
Field
provides information about, and dynamic access to, a
 single field of a class or an interface.
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Classes in
java.lang.reflect
used by
jdk.jshell.execution
Class
Description
Method
A
Method
provides information about, and access to, a single method
 on a class or interface.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.