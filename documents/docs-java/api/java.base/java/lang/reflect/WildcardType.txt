WildcardType (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.base
Package
java.lang.reflect
Interface WildcardType
All Superinterfaces:
Type
public interface
WildcardType
extends
Type
WildcardType represents a wildcard type expression, such as
?
,
? extends Number
, or
? super Integer
.
See
Java Language Specification
:
4.5.1 Type Arguments of Parameterized Types
Since:
1.5
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
Type
[]
getLowerBounds
()
Returns an array of
Type
objects representing the
 lower bound(s) of this type variable.
Type
[]
getUpperBounds
()
Returns an array of
Type
objects representing the  upper
 bound(s) of this type variable.
Methods declared in interface java.lang.reflect.
Type
getTypeName
Method Details
getUpperBounds
Type
[]
getUpperBounds
()
Returns an array of
Type
objects representing the  upper
 bound(s) of this type variable.  If no upper bound is
 explicitly declared, the upper bound is
Object
.
For each upper bound B :
if B is a parameterized type or a type variable, it is created,
  (see
ParameterizedType
for the details of the creation process for parameterized types).
Otherwise, B is resolved.
API Note:
While to date a wildcard may have at most one upper
 bound, callers of this method should be written to accommodate
 multiple bounds.
Returns:
an array of Types representing the upper bound(s) of this
     type variable
Throws:
TypeNotPresentException
- if any of the
     bounds refers to a non-existent type declaration
MalformedParameterizedTypeException
- if any of the
     bounds refer to a parameterized type that cannot be instantiated
     for any reason
getLowerBounds
Type
[]
getLowerBounds
()
Returns an array of
Type
objects representing the
 lower bound(s) of this type variable.  If no lower bound is
 explicitly declared, the lower bound is the type of
null
.
 In this case, a zero length array is returned.
For each lower bound B :
if B is a parameterized type or a type variable, it is created,
  (see
ParameterizedType
for the details of the creation process for parameterized types).
Otherwise, B is resolved.
API Note:
While to date a wildcard may have at most one lower
 bound, callers of this method should be written to accommodate
 multiple bounds.
Returns:
an array of Types representing the lower bound(s) of this
     type variable
Throws:
TypeNotPresentException
- if any of the
     bounds refers to a non-existent type declaration
MalformedParameterizedTypeException
- if any of the
     bounds refer to a parameterized type that cannot be instantiated
     for any reason
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.