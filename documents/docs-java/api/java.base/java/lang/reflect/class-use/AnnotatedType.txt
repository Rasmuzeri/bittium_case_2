Uses of Interface java.lang.reflect.AnnotatedType (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.lang.reflect.AnnotatedType
Packages that use
AnnotatedType
Package
Description
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
Uses of
AnnotatedType
in
java.lang
Methods in
java.lang
that return
AnnotatedType
Modifier and Type
Method
Description
AnnotatedType
[]
Class.
getAnnotatedInterfaces
()
Returns an array of
AnnotatedType
objects that represent the use
 of types to specify superinterfaces of the entity represented by this
Class
object.
AnnotatedType
Class.
getAnnotatedSuperclass
()
Returns an
AnnotatedType
object that represents the use of a
 type to specify the superclass of the entity represented by this
Class
object.
Uses of
AnnotatedType
in
java.lang.reflect
Subinterfaces of
AnnotatedType
in
java.lang.reflect
Modifier and Type
Interface
Description
interface
AnnotatedArrayType
AnnotatedArrayType
represents the potentially annotated use of an
 array type, whose component type may itself represent the annotated use of a
 type.
interface
AnnotatedParameterizedType
AnnotatedParameterizedType
represents the potentially annotated use
 of a parameterized type, whose type arguments may themselves represent
 annotated uses of types.
interface
AnnotatedTypeVariable
AnnotatedTypeVariable
represents the potentially annotated use of a
 type variable, whose declaration may have bounds which themselves represent
 annotated uses of types.
interface
AnnotatedWildcardType
AnnotatedWildcardType
represents the potentially annotated use of a
 wildcard type argument, whose upper or lower bounds may themselves represent
 annotated uses of types.
Methods in
java.lang.reflect
that return
AnnotatedType
Modifier and Type
Method
Description
AnnotatedType
[]
AnnotatedParameterizedType.
getAnnotatedActualTypeArguments
()
Returns the potentially annotated actual type arguments of this parameterized type.
AnnotatedType
[]
AnnotatedTypeVariable.
getAnnotatedBounds
()
Returns the potentially annotated bounds of this type variable.
AnnotatedType
[]
TypeVariable.
getAnnotatedBounds
()
Returns an array of AnnotatedType objects that represent the use of
 types to denote the upper bounds of the type parameter represented by
 this TypeVariable.
AnnotatedType
[]
Executable.
getAnnotatedExceptionTypes
()
Returns an array of
AnnotatedType
objects that represent the use
 of types to specify the declared exceptions of the method/constructor
 represented by this Executable.
AnnotatedType
AnnotatedArrayType.
getAnnotatedGenericComponentType
()
Returns the potentially annotated generic component type of this array type.
AnnotatedType
[]
AnnotatedWildcardType.
getAnnotatedLowerBounds
()
Returns the potentially annotated lower bounds of this wildcard type.
AnnotatedType
AnnotatedArrayType.
getAnnotatedOwnerType
()
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested class or interface.
AnnotatedType
AnnotatedParameterizedType.
getAnnotatedOwnerType
()
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested type.
default
AnnotatedType
AnnotatedType.
getAnnotatedOwnerType
()
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested type.
AnnotatedType
AnnotatedTypeVariable.
getAnnotatedOwnerType
()
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested type.
AnnotatedType
AnnotatedWildcardType.
getAnnotatedOwnerType
()
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested type.
AnnotatedType
[]
Executable.
getAnnotatedParameterTypes
()
Returns an array of
AnnotatedType
objects that represent the use
 of types to specify formal parameter types of the method/constructor
 represented by this Executable.
AnnotatedType
Constructor.
getAnnotatedReceiverType
()
Returns an
AnnotatedType
object that represents the use of a
 type to specify the receiver type of the method/constructor represented
 by this
Executable
object.
AnnotatedType
Executable.
getAnnotatedReceiverType
()
Returns an
AnnotatedType
object that represents the use of a
 type to specify the receiver type of the method/constructor represented
 by this
Executable
object.
AnnotatedType
Constructor.
getAnnotatedReturnType
()
Returns an
AnnotatedType
object that represents the use of a type to
 specify the return type of the method/constructor represented by this
 Executable.
abstract
AnnotatedType
Executable.
getAnnotatedReturnType
()
Returns an
AnnotatedType
object that represents the use of a type to
 specify the return type of the method/constructor represented by this
 Executable.
AnnotatedType
Method.
getAnnotatedReturnType
()
Returns an
AnnotatedType
object that represents the use of a type to
 specify the return type of the method/constructor represented by this
 Executable.
AnnotatedType
Field.
getAnnotatedType
()
Returns an AnnotatedType object that represents the use of a type to specify
 the declared type of the field represented by this Field.
AnnotatedType
Parameter.
getAnnotatedType
()
Returns an AnnotatedType object that represents the use of a type to
 specify the type of the formal parameter represented by this Parameter.
AnnotatedType
RecordComponent.
getAnnotatedType
()
Returns an
AnnotatedType
object that represents the use of a type to specify
 the declared type of this record component.
AnnotatedType
[]
AnnotatedWildcardType.
getAnnotatedUpperBounds
()
Returns the potentially annotated upper bounds of this wildcard type.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.