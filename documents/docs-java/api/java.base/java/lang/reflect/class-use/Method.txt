Uses of Class java.lang.reflect.Method (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.lang.reflect.Method
Packages that use
Method
Package
Description
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.lang
Provides classes that are fundamental to the design of the Java
 programming language.
java.lang.annotation
Provides library support for the Java programming language
 annotation facility.
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.lang.reflect
Provides classes and interfaces for obtaining reflective information about
 classes and objects.
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.modelmbean
Provides the definition of the ModelMBean classes.
javax.management.openmbean
Provides the open data types and Open MBean descriptor classes.
jdk.dynalink.linker.support
Contains classes that make it more convenient for language runtimes to
 implement their own language-specific object models and type conversions
 by providing basic implementations of some classes as well as various
 utilities.
jdk.jshell.execution
Provides implementation support for building JShell execution engines.
Uses of
Method
in
java.beans
Methods in
java.beans
that return
Method
Modifier and Type
Method
Description
Method
EventSetDescriptor.
getAddListenerMethod
()
Gets the method used to add event listeners.
Method
EventSetDescriptor.
getGetListenerMethod
()
Gets the method used to access the registered event listeners.
Method
IndexedPropertyDescriptor.
getIndexedReadMethod
()
Gets the method that should be used to read an indexed
 property value.
Method
IndexedPropertyDescriptor.
getIndexedWriteMethod
()
Gets the method that should be used to write an indexed property value.
Method
[]
EventSetDescriptor.
getListenerMethods
()
Gets the methods of the target listener interface.
Method
MethodDescriptor.
getMethod
()
Gets the method that this MethodDescriptor encapsulates.
Method
PropertyDescriptor.
getReadMethod
()
Gets the method that should be used to read the property value.
Method
EventSetDescriptor.
getRemoveListenerMethod
()
Gets the method used to remove event listeners.
Method
PropertyDescriptor.
getWriteMethod
()
Gets the method that should be used to write the property value.
Methods in
java.beans
with parameters of type
Method
Modifier and Type
Method
Description
Object
EventHandler.
invoke
(
Object
proxy,
Method
method,
Object
[] arguments)
Extract the appropriate property value from the event and
 pass it to the action associated with
 this
EventHandler
.
void
IndexedPropertyDescriptor.
setIndexedReadMethod
(
Method
readMethod)
Sets the method that should be used to read an indexed property value.
void
IndexedPropertyDescriptor.
setIndexedWriteMethod
(
Method
writeMethod)
Sets the method that should be used to write an indexed property value.
void
PropertyDescriptor.
setReadMethod
(
Method
readMethod)
Sets the method that should be used to read the property value.
void
PropertyDescriptor.
setWriteMethod
(
Method
writeMethod)
Sets the method that should be used to write the property value.
Constructors in
java.beans
with parameters of type
Method
Modifier
Constructor
Description
EventSetDescriptor
(
String
eventSetName,
Class
<?> listenerType,
MethodDescriptor
[] listenerMethodDescriptors,
Method
addListenerMethod,
Method
removeListenerMethod)
Creates an
EventSetDescriptor
from scratch using
java.lang.reflect.MethodDescriptor
and
java.lang.Class
objects.
EventSetDescriptor
(
String
eventSetName,
Class
<?> listenerType,
Method
[] listenerMethods,
Method
addListenerMethod,
Method
removeListenerMethod)
Creates an
EventSetDescriptor
from scratch using
java.lang.reflect.Method
and
java.lang.Class
objects.
EventSetDescriptor
(
String
eventSetName,
Class
<?> listenerType,
Method
[] listenerMethods,
Method
addListenerMethod,
Method
removeListenerMethod,
Method
getListenerMethod)
This constructor creates an EventSetDescriptor from scratch using
 java.lang.reflect.Method and java.lang.Class objects.
IndexedPropertyDescriptor
(
String
propertyName,
Method
readMethod,
Method
writeMethod,
Method
indexedReadMethod,
Method
indexedWriteMethod)
This constructor takes the name of a simple property, and Method
 objects for reading and writing the property.
MethodDescriptor
(
Method
method)
Constructs a
MethodDescriptor
from a
Method
.
MethodDescriptor
(
Method
method,
ParameterDescriptor
[] parameterDescriptors)
Constructs a
MethodDescriptor
from a
Method
providing descriptive information for each
 of the method's parameters.
PropertyDescriptor
(
String
propertyName,
Method
readMethod,
Method
writeMethod)
This constructor takes the name of a simple property, and Method
 objects for reading and writing the property.
Uses of
Method
in
java.lang
Methods in
java.lang
that return
Method
Modifier and Type
Method
Description
Method
Class.
getDeclaredMethod
(
String
name,
Class
<?>... parameterTypes)
Returns a
Method
object that reflects the specified
 declared method of the class or interface represented by this
Class
object.
Method
[]
Class.
getDeclaredMethods
()
Returns an array containing
Method
objects reflecting all the
 declared methods of the class or interface represented by this
Class
object, including public, protected, default (package)
 access, and private methods, but excluding inherited methods.
Method
Class.
getEnclosingMethod
()
If this
Class
object represents a local or anonymous
 class within a method, returns a
Method
object representing the
 immediately enclosing method of the underlying class.
Method
Class.
getMethod
(
String
name,
Class
<?>... parameterTypes)
Returns a
Method
object that reflects the specified public
 member method of the class or interface represented by this
Class
object.
Method
[]
Class.
getMethods
()
Returns an array containing
Method
objects reflecting all the
 public methods of the class or interface represented by this
Class
object, including those declared by the class or interface and
 those inherited from superclasses and superinterfaces.
Uses of
Method
in
java.lang.annotation
Methods in
java.lang.annotation
that return
Method
Modifier and Type
Method
Description
Method
AnnotationTypeMismatchException.
element
()
Returns the
Method
object for the incorrectly typed element.
Constructors in
java.lang.annotation
with parameters of type
Method
Modifier
Constructor
Description
AnnotationTypeMismatchException
(
Method
element,
String
foundType)
Constructs an AnnotationTypeMismatchException for the specified
 annotation type element and found data type.
Uses of
Method
in
java.lang.invoke
Methods in
java.lang.invoke
with parameters of type
Method
Modifier and Type
Method
Description
MethodHandle
MethodHandles.Lookup.
unreflect
(
Method
m)
Makes a
direct method handle
to
m
, if the lookup class has permission.
MethodHandle
MethodHandles.Lookup.
unreflectSpecial
(
Method
m,
Class
<?> specialCaller)
Produces a method handle for a reflected method.
Uses of
Method
in
java.lang.reflect
Methods in
java.lang.reflect
that return
Method
Modifier and Type
Method
Description
Method
RecordComponent.
getAccessor
()
Returns a
Method
that represents the accessor for this record
 component.
Methods in
java.lang.reflect
that return types with arguments of type
Method
Modifier and Type
Method
Description
TypeVariable
<
Method
>[]
Method.
getTypeParameters
()
Returns an array of
TypeVariable
objects that represent the
 type variables declared by the generic declaration represented by this
GenericDeclaration
object, in declaration order.
Methods in
java.lang.reflect
with parameters of type
Method
Modifier and Type
Method
Description
Object
InvocationHandler.
invoke
(
Object
proxy,
Method
method,
Object
[] args)
Processes a method invocation on a proxy instance and returns
 the result.
static
Object
InvocationHandler.
invokeDefault
(
Object
proxy,
Method
method,
Object
... args)
Invokes the specified default method on the given
proxy
instance with
 the given parameters.
Uses of
Method
in
java.rmi.server
Methods in
java.rmi.server
with parameters of type
Method
Modifier and Type
Method
Description
Object
RemoteObjectInvocationHandler.
invoke
(
Object
proxy,
Method
method,
Object
[] args)
Processes a method invocation made on the encapsulating
 proxy instance,
proxy
, and returns the result.
Object
RemoteRef.
invoke
(
Remote
obj,
Method
method,
Object
[] params,
 long opnum)
Invoke a method.
Uses of
Method
in
javax.management
Methods in
javax.management
with parameters of type
Method
Modifier and Type
Method
Description
Object
MBeanServerInvocationHandler.
invoke
(
Object
proxy,
Method
method,
Object
[] args)
Constructors in
javax.management
with parameters of type
Method
Modifier
Constructor
Description
MBeanAttributeInfo
(
String
name,
String
description,
Method
getter,
Method
setter)
This constructor takes the name of a simple attribute, and Method
 objects for reading and writing the attribute.
MBeanOperationInfo
(
String
description,
Method
method)
Constructs an
MBeanOperationInfo
object.
Uses of
Method
in
javax.management.modelmbean
Constructors in
javax.management.modelmbean
with parameters of type
Method
Modifier
Constructor
Description
ModelMBeanAttributeInfo
(
String
name,
String
description,
Method
getter,
Method
setter)
Constructs a ModelMBeanAttributeInfo object with a default
 descriptor.
ModelMBeanAttributeInfo
(
String
name,
String
description,
Method
getter,
Method
setter,
Descriptor
descriptor)
Constructs a ModelMBeanAttributeInfo object.
ModelMBeanOperationInfo
(
String
description,
Method
operationMethod)
Constructs a ModelMBeanOperationInfo object with a default
 descriptor.
ModelMBeanOperationInfo
(
String
description,
Method
operationMethod,
Descriptor
descriptor)
Constructs a ModelMBeanOperationInfo object.
Uses of
Method
in
javax.management.openmbean
Methods in
javax.management.openmbean
with parameters of type
Method
Modifier and Type
Method
Description
Object
CompositeDataInvocationHandler.
invoke
(
Object
proxy,
Method
method,
Object
[] args)
Uses of
Method
in
jdk.dynalink.linker.support
Methods in
jdk.dynalink.linker.support
with parameters of type
Method
Modifier and Type
Method
Description
static
MethodHandle
Lookup.
unreflect
(
MethodHandles.Lookup
lookup,
Method
m)
Performs a
MethodHandles.Lookup.unreflect(Method)
,
 converting any encountered
IllegalAccessException
into an
IllegalAccessError
.
MethodHandle
Lookup.
unreflect
(
Method
m)
Performs a
MethodHandles.Lookup.unreflect(Method)
,
 converting any encountered
IllegalAccessException
into an
IllegalAccessError
.
Uses of
Method
in
jdk.jshell.execution
Methods in
jdk.jshell.execution
with parameters of type
Method
Modifier and Type
Method
Description
protected
String
DirectExecutionControl.
invoke
(
Method
doitMethod)
Invoke the specified "doit-method", a static method with no parameters.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.