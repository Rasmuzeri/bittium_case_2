MemorySegment.Scope (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.base
Package
java.lang.foreign
Interface MemorySegment.Scope
Enclosing interface:
MemorySegment
PREVIEW
public static sealed interface
MemorySegment.Scope
Scope
is a preview API of the Java platform.
Programs can only use
Scope
when preview features are enabled.
Preview features may be removed in a future release, or upgraded to permanent features of the Java platform.
A scope models the
lifetime
of all the memory segments associated with it. That is, a memory segment
 cannot be accessed if its associated scope is not
alive
. A new scope is typically
 obtained indirectly, by creating a new
arena
PREVIEW
.
Scope instances can be compared for equality. That is, two scopes
 are considered
equals(Object)
if they denote the same lifetime.
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
boolean
equals
(
Object
that)
Returns
true
, if the provided object is also a scope, which models the same lifetime as that
 modelled by this scope.
int
hashCode
()
Returns the hash code of this scope object.
boolean
isAlive
()
Returns
true
, if the regions of memory backing the memory segments associated with this scope are
 still valid.
Method Details
isAlive
boolean
isAlive
()
Returns
true
, if the regions of memory backing the memory segments associated with this scope are
 still valid.
Returns:
true
, if the regions of memory backing the memory segments associated with this scope are
 still valid
equals
boolean
equals
(
Object
that)
Returns
true
, if the provided object is also a scope, which models the same lifetime as that
 modelled by this scope.. In that case, it is always the case that
this.isAlive() == ((Scope)that).isAlive()
.
Overrides:
equals
in class
Object
Parameters:
that
- the object to be tested.
Returns:
true
, if the provided object is also a scope, which models the same lifetime as that
 modelled by this scope
See Also:
Object.hashCode()
HashMap
hashCode
int
hashCode
()
Returns the hash code of this scope object.
Overrides:
hashCode
in class
Object
Implementation Requirements:
Implementations of this method obey the general contract of
Object.hashCode()
.
Returns:
the hash code of this scope object.
See Also:
equals(Object)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.