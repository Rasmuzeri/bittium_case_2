Uses of Interface java.lang.foreign.ValueLayout.OfInt (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.lang.foreign.ValueLayout.OfInt
Packages that use
ValueLayout.OfInt
PREVIEW
Package
Description
java.lang.foreign
Provides low-level access to memory and functions outside the Java runtime.
Uses of
ValueLayout.OfInt
PREVIEW
in
java.lang.foreign
Fields in
java.lang.foreign
declared as
ValueLayout.OfInt
PREVIEW
Modifier and Type
Field
Description
static final
ValueLayout.OfInt
PREVIEW
ValueLayout.
JAVA_INT
A value layout constant whose size is the same as that of a Java
int
,
 byte alignment set to 4, and byte order set to
ByteOrder.nativeOrder()
.
static final
ValueLayout.OfInt
PREVIEW
ValueLayout.
JAVA_INT_UNALIGNED
An unaligned value layout constant whose size is the same as that of a Java
int
and byte order set to
ByteOrder.nativeOrder()
.
Methods in
java.lang.foreign
that return
ValueLayout.OfInt
PREVIEW
Modifier and Type
Method
Description
ValueLayout.OfInt
PREVIEW
ValueLayout.OfInt.
withByteAlignment
(long byteAlignment)
Returns a memory layout with the same characteristics as this layout, but with the given
 alignment constraint (in bytes).
ValueLayout.OfInt
PREVIEW
ValueLayout.OfInt.
withName
(
String
name)
Returns a memory layout with the same characteristics as this layout, but with the given name.
ValueLayout.OfInt
PREVIEW
ValueLayout.OfInt.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
ValueLayout.OfInt
PREVIEW
ValueLayout.OfInt.
withoutName
()
Returns a memory layout with the same characteristics as this layout, but with no name.
Methods in
java.lang.foreign
with parameters of type
ValueLayout.OfInt
PREVIEW
Modifier and Type
Method
Description
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
ValueLayout.OfInt
PREVIEW
layout,
 int value)
Allocates a memory segment with the given layout and initializes it with the given int value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
ValueLayout.OfInt
PREVIEW
elementLayout,
 int... elements)
Allocates a memory segment with the given layout and initializes it with the given int elements.
default int
MemorySegment.
get
(
ValueLayout.OfInt
PREVIEW
layout,
 long offset)
Reads an int from this segment at the given offset, with the given layout.
default int
MemorySegment.
getAtIndex
(
ValueLayout.OfInt
PREVIEW
layout,
 long index)
Reads an int from this segment at the given index, scaled by the given layout size.
default void
MemorySegment.
set
(
ValueLayout.OfInt
PREVIEW
layout,
 long offset,
 int value)
Writes an int into this segment at the given offset, with the given layout.
default void
MemorySegment.
setAtIndex
(
ValueLayout.OfInt
PREVIEW
layout,
 long index,
 int value)
Writes an int into this segment at the given index, scaled by the given layout size.
int[]
MemorySegment.
toArray
(
ValueLayout.OfInt
PREVIEW
elementLayout)
Copy the contents of this memory segment into a new int array.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.