Uses of Interface java.lang.foreign.AddressLayout (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.lang.foreign.AddressLayout
Packages that use
AddressLayout
PREVIEW
Package
Description
java.lang.foreign
Provides low-level access to memory and functions outside the Java runtime.
Uses of
AddressLayout
PREVIEW
in
java.lang.foreign
Fields in
java.lang.foreign
declared as
AddressLayout
PREVIEW
Modifier and Type
Field
Description
static final
AddressLayout
PREVIEW
ValueLayout.
ADDRESS
An address layout constant whose size is the same as that of a machine address (
size_t
),
 byte alignment set to
sizeof(size_t)
, byte order set to
ByteOrder.nativeOrder()
.
static final
AddressLayout
PREVIEW
ValueLayout.
ADDRESS_UNALIGNED
An unaligned address layout constant whose size is the same as that of a machine address (
size_t
),
 and byte order set to
ByteOrder.nativeOrder()
.
Methods in
java.lang.foreign
that return
AddressLayout
PREVIEW
Modifier and Type
Method
Description
AddressLayout
PREVIEW
AddressLayout.
withByteAlignment
(long byteAlignment)
Returns a memory layout with the same characteristics as this layout, but with the given
 alignment constraint (in bytes).
AddressLayout
PREVIEW
AddressLayout.
withName
(
String
name)
Returns a memory layout with the same characteristics as this layout, but with the given name.
AddressLayout
PREVIEW
AddressLayout.
withOrder
(
ByteOrder
order)
Returns a value layout with the same characteristics as this layout, but with the given byte order.
AddressLayout
PREVIEW
AddressLayout.
withoutName
()
Returns a memory layout with the same characteristics as this layout, but with no name.
AddressLayout
PREVIEW
AddressLayout.
withoutTargetLayout
()
Returns an address layout with the same carrier, alignment constraint, name and order as this address layout,
 but with no target layout.
AddressLayout
PREVIEW
AddressLayout.
withTargetLayout
(
MemoryLayout
PREVIEW
layout)
Returns an address layout with the same carrier, alignment constraint, name and order as this address layout,
 but associated with the specified target layout.
Methods in
java.lang.foreign
with parameters of type
AddressLayout
PREVIEW
Modifier and Type
Method
Description
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
AddressLayout
PREVIEW
layout,
MemorySegment
PREVIEW
value)
Allocates a memory segment with the given layout and initializes it with the given address value.
default
MemorySegment
PREVIEW
MemorySegment.
get
(
AddressLayout
PREVIEW
layout,
 long offset)
Reads an address from this segment at the given offset, with the given layout.
default
MemorySegment
PREVIEW
MemorySegment.
getAtIndex
(
AddressLayout
PREVIEW
layout,
 long index)
Reads an address from this segment at the given at the given index, scaled by the given layout size.
default void
MemorySegment.
set
(
AddressLayout
PREVIEW
layout,
 long offset,
MemorySegment
PREVIEW
value)
Writes an address into this segment at the given offset, with the given layout.
default void
MemorySegment.
setAtIndex
(
AddressLayout
PREVIEW
layout,
 long index,
MemorySegment
PREVIEW
value)
Writes an address into this segment at the given index, scaled by the given layout size.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.