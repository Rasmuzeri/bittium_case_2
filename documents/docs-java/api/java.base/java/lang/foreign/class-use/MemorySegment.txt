Uses of Interface java.lang.foreign.MemorySegment (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.lang.foreign.MemorySegment
Packages that use
MemorySegment
PREVIEW
Package
Description
java.lang.foreign
Provides low-level access to memory and functions outside the Java runtime.
java.nio.channels
Defines channels, which represent connections to entities that are capable of
 performing I/O operations, such as files and sockets; defines selectors, for
 multiplexed, non-blocking I/O operations.
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
Uses of
MemorySegment
PREVIEW
in
java.lang.foreign
Fields in
java.lang.foreign
declared as
MemorySegment
PREVIEW
Modifier and Type
Field
Description
static final
MemorySegment
PREVIEW
MemorySegment.
NULL
A zero-length native segment modelling the
NULL
address.
Methods in
java.lang.foreign
that return
MemorySegment
PREVIEW
Modifier and Type
Method
Description
default
MemorySegment
PREVIEW
Arena.
allocate
(long byteSize,
 long byteAlignment)
Returns a native memory segment with the given size (in bytes) and alignment constraint (in bytes).
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(long byteSize)
Allocates a memory segment with the given size.
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(long byteSize,
 long byteAlignment)
Allocates a memory segment with the given size and alignment constraint.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
AddressLayout
PREVIEW
layout,
MemorySegment
PREVIEW
value)
Allocates a memory segment with the given layout and initializes it with the given address value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
MemoryLayout
PREVIEW
layout)
Allocates a memory segment with the given layout.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
ValueLayout.OfByte
PREVIEW
layout,
 byte value)
Allocates a memory segment with the given layout and initializes it with the given byte value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
ValueLayout.OfChar
PREVIEW
layout,
 char value)
Allocates a memory segment with the given layout and initializes it with the given char value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
ValueLayout.OfDouble
PREVIEW
layout,
 double value)
Allocates a memory segment with the given layout and initializes it with the given double value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
ValueLayout.OfFloat
PREVIEW
layout,
 float value)
Allocates a memory segment with the given layout and initializes it with the given float value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
ValueLayout.OfInt
PREVIEW
layout,
 int value)
Allocates a memory segment with the given layout and initializes it with the given int value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
ValueLayout.OfLong
PREVIEW
layout,
 long value)
Allocates a memory segment with the given layout and initializes it with the given long value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
ValueLayout.OfShort
PREVIEW
layout,
 short value)
Allocates a memory segment with the given layout and initializes it with the given short value.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
MemoryLayout
PREVIEW
elementLayout,
 long count)
Allocates a memory segment with the given element layout and size.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
ValueLayout.OfByte
PREVIEW
elementLayout,
 byte... elements)
Allocates a memory segment with the given layout and initializes it with the given byte elements.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
ValueLayout.OfChar
PREVIEW
elementLayout,
 char... elements)
Allocates a memory segment with the given layout and initializes it with the given char elements.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
ValueLayout.OfDouble
PREVIEW
elementLayout,
 double... elements)
Allocates a memory segment with the given layout and initializes it with the given double elements.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
ValueLayout.OfFloat
PREVIEW
elementLayout,
 float... elements)
Allocates a memory segment with the given layout and initializes it with the given float elements.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
ValueLayout.OfInt
PREVIEW
elementLayout,
 int... elements)
Allocates a memory segment with the given layout and initializes it with the given int elements.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
ValueLayout.OfLong
PREVIEW
elementLayout,
 long... elements)
Allocates a memory segment with the given layout and initializes it with the given long elements.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateArray
(
ValueLayout.OfShort
PREVIEW
elementLayout,
 short... elements)
Allocates a memory segment with the given layout and initializes it with the given short elements.
default
MemorySegment
PREVIEW
SegmentAllocator.
allocateUtf8String
(
String
str)
Converts a Java string into a UTF-8 encoded, null-terminated C string,
 storing the result into a memory segment.
MemorySegment
PREVIEW
MemorySegment.
asReadOnly
()
Returns a read-only view of this segment.
MemorySegment
PREVIEW
MemorySegment.
asSlice
(long offset)
Returns a slice of this memory segment, at the given offset.
MemorySegment
PREVIEW
MemorySegment.
asSlice
(long offset,
 long newSize)
Returns a slice of this memory segment, at the given offset.
MemorySegment
PREVIEW
MemorySegment.
asSlice
(long offset,
 long newSize,
 long byteAlignment)
Returns a slice of this memory segment, at the given offset, with the provided alignment constraint.
default
MemorySegment
PREVIEW
MemorySegment.
asSlice
(long offset,
MemoryLayout
PREVIEW
layout)
Returns a slice of this memory segment with the given layout, at the given offset.
default
MemorySegment
PREVIEW
MemorySegment.
copyFrom
(
MemorySegment
PREVIEW
src)
Performs a bulk copy from given source segment to this segment.
MemorySegment
PREVIEW
MemorySegment.
fill
(byte value)
Fills the contents of this memory segment with the given value.
default
MemorySegment
PREVIEW
MemorySegment.
get
(
AddressLayout
PREVIEW
layout,
 long offset)
Reads an address from this segment at the given offset, with the given layout.
default
MemorySegment
PREVIEW
MemorySegment.
getAtIndex
(
AddressLayout
PREVIEW
layout,
 long index)
Reads an address from this segment at the given at the given index, scaled by the given layout size.
static
MemorySegment
PREVIEW
MemorySegment.
ofAddress
(long address)
Creates a zero-length native segment from the given
address value
PREVIEW
.
static
MemorySegment
PREVIEW
MemorySegment.
ofArray
(byte[] byteArray)
Creates a heap segment backed by the on-heap region of memory that holds the given byte array.
static
MemorySegment
PREVIEW
MemorySegment.
ofArray
(char[] charArray)
Creates a heap segment backed by the on-heap region of memory that holds the given char array.
static
MemorySegment
PREVIEW
MemorySegment.
ofArray
(double[] doubleArray)
Creates a heap segment backed by the on-heap region of memory that holds the given double array.
static
MemorySegment
PREVIEW
MemorySegment.
ofArray
(float[] floatArray)
Creates a heap segment backed by the on-heap region of memory that holds the given float array.
static
MemorySegment
PREVIEW
MemorySegment.
ofArray
(int[] intArray)
Creates a heap segment backed by the on-heap region of memory that holds the given int array.
static
MemorySegment
PREVIEW
MemorySegment.
ofArray
(long[] longArray)
Creates a heap segment backed by the on-heap region of memory that holds the given long array.
static
MemorySegment
PREVIEW
MemorySegment.
ofArray
(short[] shortArray)
Creates a heap segment backed by the on-heap region of memory that holds the given short array.
static
MemorySegment
PREVIEW
MemorySegment.
ofBuffer
(
Buffer
buffer)
Creates a memory segment that is backed by the same region of memory that backs the given
Buffer
instance.
MemorySegment
PREVIEW
MemorySegment.
reinterpret
(long newSize)
Returns a new memory segment that has the same address and scope as this segment, but with the provided size.
MemorySegment
PREVIEW
MemorySegment.
reinterpret
(long newSize,
Arena
PREVIEW
arena,
Consumer
<
MemorySegment
PREVIEW
> cleanup)
Returns a new segment with the same address as this segment, but with the provided size and scope.
MemorySegment
PREVIEW
MemorySegment.
reinterpret
(
Arena
PREVIEW
arena,
Consumer
<
MemorySegment
PREVIEW
> cleanup)
Returns a new memory segment with the same address and size as this segment, but with the provided scope.
MemorySegment
PREVIEW
Linker.
upcallStub
(
MethodHandle
target,
FunctionDescriptor
PREVIEW
function,
Arena
PREVIEW
arena,
Linker.Option
PREVIEW
... options)
Creates an upcall stub which can be passed to other foreign functions as a function pointer, associated with the given
 arena.
Methods in
java.lang.foreign
that return types with arguments of type
MemorySegment
PREVIEW
Modifier and Type
Method
Description
Optional
<
MemorySegment
PREVIEW
>
MemorySegment.
asOverlappingSlice
(
MemorySegment
PREVIEW
other)
Returns a slice of this segment that is the overlap between this and
 the provided segment.
Stream
<
MemorySegment
PREVIEW
>
MemorySegment.
elements
(
MemoryLayout
PREVIEW
elementLayout)
Returns a sequential
Stream
over disjoint slices (whose size matches that of the specified layout)
 in this segment.
Optional
<
MemorySegment
PREVIEW
>
SymbolLookup.
find
(
String
name)
Returns the address of the symbol with the given name.
Spliterator
<
MemorySegment
PREVIEW
>
MemorySegment.
spliterator
(
MemoryLayout
PREVIEW
elementLayout)
Returns a spliterator for this memory segment.
Methods in
java.lang.foreign
with parameters of type
MemorySegment
PREVIEW
Modifier and Type
Method
Description
default
MemorySegment
PREVIEW
SegmentAllocator.
allocate
(
AddressLayout
PREVIEW
layout,
MemorySegment
PREVIEW
value)
Allocates a memory segment with the given layout and initializes it with the given address value.
Optional
<
MemorySegment
PREVIEW
>
MemorySegment.
asOverlappingSlice
(
MemorySegment
PREVIEW
other)
Returns a slice of this segment that is the overlap between this and
 the provided segment.
static void
MemorySegment.
copy
(
MemorySegment
PREVIEW
srcSegment,
 long srcOffset,
MemorySegment
PREVIEW
dstSegment,
 long dstOffset,
 long bytes)
Performs a bulk copy from source segment to destination segment.
static void
MemorySegment.
copy
(
MemorySegment
PREVIEW
srcSegment,
ValueLayout
PREVIEW
srcElementLayout,
 long srcOffset,
MemorySegment
PREVIEW
dstSegment,
ValueLayout
PREVIEW
dstElementLayout,
 long dstOffset,
 long elementCount)
Performs a bulk copy from source segment to destination segment.
static void
MemorySegment.
copy
(
MemorySegment
PREVIEW
srcSegment,
ValueLayout
PREVIEW
srcLayout,
 long srcOffset,
Object
dstArray,
 int dstIndex,
 int elementCount)
Copies a number of elements from a source memory segment to a destination array.
static void
MemorySegment.
copy
(
Object
srcArray,
 int srcIndex,
MemorySegment
PREVIEW
dstSegment,
ValueLayout
PREVIEW
dstLayout,
 long dstOffset,
 int elementCount)
Copies a number of elements from a source array to a destination memory segment.
default
MemorySegment
PREVIEW
MemorySegment.
copyFrom
(
MemorySegment
PREVIEW
src)
Performs a bulk copy from given source segment to this segment.
MethodHandle
Linker.
downcallHandle
(
MemorySegment
PREVIEW
address,
FunctionDescriptor
PREVIEW
function,
Linker.Option
PREVIEW
... options)
Creates a method handle which is used to call a foreign function with the given signature and address.
default long
MemorySegment.
mismatch
(
MemorySegment
PREVIEW
other)
Finds and returns the offset, in bytes, of the first mismatch between
 this segment and the given other segment.
static long
MemorySegment.
mismatch
(
MemorySegment
PREVIEW
srcSegment,
 long srcFromOffset,
 long srcToOffset,
MemorySegment
PREVIEW
dstSegment,
 long dstFromOffset,
 long dstToOffset)
Finds and returns the relative offset, in bytes, of the first mismatch between the source and the destination
 segments.
static
SegmentAllocator
PREVIEW
SegmentAllocator.
prefixAllocator
(
MemorySegment
PREVIEW
segment)
Returns a segment allocator which responds to allocation requests by recycling a single segment.
long
MemorySegment.
segmentOffset
(
MemorySegment
PREVIEW
other)
Returns the offset, in bytes, of the provided segment, relative to this
 segment.
default void
MemorySegment.
set
(
AddressLayout
PREVIEW
layout,
 long offset,
MemorySegment
PREVIEW
value)
Writes an address into this segment at the given offset, with the given layout.
default void
MemorySegment.
setAtIndex
(
AddressLayout
PREVIEW
layout,
 long index,
MemorySegment
PREVIEW
value)
Writes an address into this segment at the given index, scaled by the given layout size.
static
SegmentAllocator
PREVIEW
SegmentAllocator.
slicingAllocator
(
MemorySegment
PREVIEW
segment)
Returns a segment allocator which responds to allocation requests by returning consecutive slices
 obtained from the provided segment.
Method parameters in
java.lang.foreign
with type arguments of type
MemorySegment
PREVIEW
Modifier and Type
Method
Description
MemorySegment
PREVIEW
MemorySegment.
reinterpret
(long newSize,
Arena
PREVIEW
arena,
Consumer
<
MemorySegment
PREVIEW
> cleanup)
Returns a new segment with the same address as this segment, but with the provided size and scope.
MemorySegment
PREVIEW
MemorySegment.
reinterpret
(
Arena
PREVIEW
arena,
Consumer
<
MemorySegment
PREVIEW
> cleanup)
Returns a new memory segment with the same address and size as this segment, but with the provided scope.
Uses of
MemorySegment
PREVIEW
in
java.nio.channels
Methods in
java.nio.channels
that return
MemorySegment
PREVIEW
Modifier and Type
Method
Description
MemorySegment
PREVIEW
FileChannel.
map
(
FileChannel.MapMode
mode,
 long offset,
 long size,
Arena
PREVIEW
arena)
Preview.
Maps a region of this channel's file into a new mapped memory segment,
 with the given offset, size and arena.
Uses of
MemorySegment
PREVIEW
in
jdk.incubator.vector
Methods in
jdk.incubator.vector
with parameters of type
MemorySegment
PREVIEW
Modifier and Type
Method
Description
static
ByteVector
ByteVector.
fromMemorySegment
(
VectorSpecies
<
Byte
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
ByteVector
ByteVector.
fromMemorySegment
(
VectorSpecies
<
Byte
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Byte
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
DoubleVector
DoubleVector.
fromMemorySegment
(
VectorSpecies
<
Double
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
DoubleVector
DoubleVector.
fromMemorySegment
(
VectorSpecies
<
Double
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Double
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
FloatVector
FloatVector.
fromMemorySegment
(
VectorSpecies
<
Float
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
FloatVector
FloatVector.
fromMemorySegment
(
VectorSpecies
<
Float
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Float
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
IntVector
IntVector.
fromMemorySegment
(
VectorSpecies
<
Integer
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
IntVector
IntVector.
fromMemorySegment
(
VectorSpecies
<
Integer
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Integer
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
LongVector
LongVector.
fromMemorySegment
(
VectorSpecies
<
Long
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
LongVector
LongVector.
fromMemorySegment
(
VectorSpecies
<
Long
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Long
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
static
ShortVector
ShortVector.
fromMemorySegment
(
VectorSpecies
<
Short
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment.
static
ShortVector
ShortVector.
fromMemorySegment
(
VectorSpecies
<
Short
> species,
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Short
> m)
Loads a vector from a
memory segment
PREVIEW
starting at an offset into the memory segment
 and using a mask.
Vector
<
E
>
VectorSpecies.
fromMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Loads a vector of this species from a
memory segment
PREVIEW
starting at an offset into the memory segment.
final void
ByteVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
ByteVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Byte
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
DoubleVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
DoubleVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Double
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
FloatVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
FloatVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Float
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
IntVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
IntVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Integer
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
LongVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
LongVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Long
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
final void
ShortVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
final void
ShortVector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
Short
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
abstract void
Vector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order.
abstract void
Vector.
intoMemorySegment
(
MemorySegment
PREVIEW
ms,
 long offset,
ByteOrder
bo,
VectorMask
<
E
> m)
Stores this vector into a
memory segment
PREVIEW
starting at an offset using explicit byte order and a mask.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.