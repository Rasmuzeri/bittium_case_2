Uses of Package java.lang.foreign (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Package
java.lang.foreign
Packages that use
java.lang.foreign
Package
Description
java.lang.foreign
Provides low-level access to memory and functions outside the Java runtime.
java.lang.invoke
The
java.lang.invoke
package provides low-level primitives for interacting
 with the Java Virtual Machine.
java.nio.channels
Defines channels, which represent connections to entities that are capable of
 performing I/O operations, such as files and sockets; defines selectors, for
 multiplexed, non-blocking I/O operations.
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
Classes in
java.lang.foreign
used by
java.lang.foreign
Class
Description
AddressLayout
Preview.
A value layout used to model the address of some region of memory.
Arena
Preview.
An arena controls the lifecycle of native memory segments, providing both flexible allocation and timely deallocation.
FunctionDescriptor
Preview.
A function descriptor models the signature of a foreign function.
GroupLayout
Preview.
A compound layout that is an aggregation of multiple, heterogeneous
member layouts
.
Linker
Preview.
A linker provides access to foreign functions from Java code, and access to Java code from foreign functions.
Linker.Option
Preview.
A linker option is used to provide additional parameters to a linkage request.
MemoryLayout
Preview.
A memory layout describes the contents of a memory segment.
MemoryLayout.PathElement
Preview.
An element in a
layout path
.
MemorySegment
Preview.
A memory segment provides access to a contiguous region of memory.
MemorySegment.Scope
Preview.
A scope models the
lifetime
of all the memory segments associated with it.
PaddingLayout
Preview.
A padding layout.
SegmentAllocator
Preview.
An object that may be used to allocate
memory segments
PREVIEW
.
SequenceLayout
Preview.
A compound layout that denotes a homogeneous repetition of a given
element layout
.
StructLayout
Preview.
A group layout whose member layouts are laid out one after the other.
SymbolLookup
Preview.
A
symbol lookup
retrieves the address of a symbol in one or more libraries.
UnionLayout
Preview.
A group layout whose member layouts are laid out at the same starting offset.
ValueLayout
Preview.
A layout that models values of basic data types.
ValueLayout.OfBoolean
Preview.
A value layout whose carrier is
boolean.class
.
ValueLayout.OfByte
Preview.
A value layout whose carrier is
byte.class
.
ValueLayout.OfChar
Preview.
A value layout whose carrier is
char.class
.
ValueLayout.OfDouble
Preview.
A value layout whose carrier is
double.class
.
ValueLayout.OfFloat
Preview.
A value layout whose carrier is
float.class
.
ValueLayout.OfInt
Preview.
A value layout whose carrier is
int.class
.
ValueLayout.OfLong
Preview.
A value layout whose carrier is
long.class
.
ValueLayout.OfShort
Preview.
A value layout whose carrier is
short.class
.
Classes in
java.lang.foreign
used by
java.lang.invoke
Class
Description
ValueLayout
Preview.
A layout that models values of basic data types.
Classes in
java.lang.foreign
used by
java.nio.channels
Class
Description
Arena
Preview.
An arena controls the lifecycle of native memory segments, providing both flexible allocation and timely deallocation.
MemorySegment
Preview.
A memory segment provides access to a contiguous region of memory.
Classes in
java.lang.foreign
used by
jdk.incubator.vector
Class
Description
MemorySegment
Preview.
A memory segment provides access to a contiguous region of memory.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.