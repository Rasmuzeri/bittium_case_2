StepRequest (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr |
Method
Detail:
Field
|
Constr |
Method
SEARCH
Module
jdk.jdi
Package
com.sun.jdi.request
Interface StepRequest
All Superinterfaces:
EventRequest
,
Mirror
public interface
StepRequest
extends
EventRequest
Request for notification when a step occurs in the target VM.
 When an enabled StepRequest is satisfied, an
event set
containing a
StepEvent
will be placed on the
EventQueue
.
 The collection of existing StepRequests is
 managed by the
EventRequestManager
Since:
1.3
See Also:
StepEvent
EventQueue
EventRequestManager
Field Summary
Fields
Modifier and Type
Field
Description
static final int
STEP_INTO
Step into any newly pushed frames
static final int
STEP_LINE
Step to the next location on a different line
static final int
STEP_MIN
Step to the next available location
static final int
STEP_OUT
Step out of the current frame
static final int
STEP_OVER
Step over any newly pushed frames
Fields declared in interface com.sun.jdi.request.
EventRequest
SUSPEND_ALL
,
SUSPEND_EVENT_THREAD
,
SUSPEND_NONE
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
void
addClassExclusionFilter
(
String
classPattern)
Restricts the events generated by this request to those
 whose location is in a class whose name does
not
match a
 restricted regular expression.
void
addClassFilter
(
ReferenceType
refType)
Restricts the events generated by this request to those whose
 location is in the given reference type or any of its subtypes.
void
addClassFilter
(
String
classPattern)
Restricts the events generated by this request to those
 whose location is in a class whose name matches a restricted
 regular expression.
void
addInstanceFilter
(
ObjectReference
instance)
Restricts the events generated by this request to those in
 which the currently executing instance ("this") is the object
 specified.
int
depth
()
int
size
()
ThreadReference
thread
()
Methods declared in interface com.sun.jdi.request.
EventRequest
addCountFilter
,
disable
,
enable
,
getProperty
,
isEnabled
,
putProperty
,
setEnabled
,
setSuspendPolicy
,
suspendPolicy
Methods declared in interface com.sun.jdi.
Mirror
toString
,
virtualMachine
Field Details
STEP_INTO
static final
int
STEP_INTO
Step into any newly pushed frames
See Also:
Constant Field Values
STEP_OVER
static final
int
STEP_OVER
Step over any newly pushed frames
See Also:
Constant Field Values
STEP_OUT
static final
int
STEP_OUT
Step out of the current frame
See Also:
Constant Field Values
STEP_MIN
static final
int
STEP_MIN
Step to the next available location
See Also:
Constant Field Values
STEP_LINE
static final
int
STEP_LINE
Step to the next location on a different line
See Also:
Constant Field Values
Method Details
thread
ThreadReference
thread
()
Returns:
the thread on which the step event is being requested.
size
int
size
()
Returns:
the step size
depth
int
depth
()
Returns:
the step depth
addClassFilter
void
addClassFilter
(
ReferenceType
refType)
Restricts the events generated by this request to those whose
 location is in the given reference type or any of its subtypes.
 An event will be generated for any location in a reference type
 that can be safely cast to the given reference type.
Parameters:
refType
- the reference type to filter on.
Throws:
InvalidRequestStateException
- if this request is currently
 enabled or has been deleted.
 Filters may be added only to disabled requests.
addClassFilter
void
addClassFilter
(
String
classPattern)
Restricts the events generated by this request to those
 whose location is in a class whose name matches a restricted
 regular expression. Regular expressions are limited
 to exact matches and patterns that begin with '*' or end with '*';
 for example, "*.Foo" or "java.*".
Parameters:
classPattern
- the pattern String to filter for.
Throws:
InvalidRequestStateException
- if this request is currently
 enabled or has been deleted.
 Filters may be added only to disabled requests.
addClassExclusionFilter
void
addClassExclusionFilter
(
String
classPattern)
Restricts the events generated by this request to those
 whose location is in a class whose name does
not
match a
 restricted regular expression. Regular expressions are limited
 to exact matches and patterns that begin with '*' or end with '*';
 for example, "*.Foo" or "java.*".
Parameters:
classPattern
- the pattern String to filter against.
Throws:
InvalidRequestStateException
- if this request is currently
 enabled or has been deleted.
 Filters may be added only to disabled requests.
addInstanceFilter
void
addInstanceFilter
(
ObjectReference
instance)
Restricts the events generated by this request to those in
 which the currently executing instance ("this") is the object
 specified.
Not all targets support this operation.
 Use
VirtualMachine.canUseInstanceFilters()
to determine if the operation is supported.
Parameters:
instance
- the object which must be the current instance
 in order to pass this filter.
Throws:
UnsupportedOperationException
- if
 the target virtual machine does not support this
 operation.
InvalidRequestStateException
- if this request is currently
 enabled or has been deleted.
 Filters may be added only to disabled requests.
Since:
1.4
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.