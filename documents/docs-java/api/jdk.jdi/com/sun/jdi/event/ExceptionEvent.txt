ExceptionEvent (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
jdk.jdi
Package
com.sun.jdi.event
Interface ExceptionEvent
All Superinterfaces:
Event
,
Locatable
,
LocatableEvent
,
Mirror
public interface
ExceptionEvent
extends
LocatableEvent
Notification of an exception in the target VM. When an exception
 is thrown which satisfies a currently enabled
exception request
,
 an
event set
containing an instance of this class will be added
 to the VM's event queue.
 If the exception is thrown from a non-native method,
 the exception event is generated at the location where the
 exception is thrown.
 If the exception is thrown from a native method, the exception event
 is generated at the first non-native location reached after the exception
 is thrown.
Since:
1.3
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
Location
catchLocation
()
Gets the location where the exception will be caught.
ObjectReference
exception
()
Gets the thrown exception object.
Methods declared in interface com.sun.jdi.event.
Event
request
Methods declared in interface com.sun.jdi.
Locatable
location
Methods declared in interface com.sun.jdi.event.
LocatableEvent
thread
Methods declared in interface com.sun.jdi.
Mirror
toString
,
virtualMachine
Method Details
exception
ObjectReference
exception
()
Gets the thrown exception object. The exception object is
 an instance of
Throwable
or a subclass in the
 target VM.
Returns:
an
ObjectReference
which mirrors the thrown object in
 the target VM.
catchLocation
Location
catchLocation
()
Gets the location where the exception will be caught. An exception
 is considered to be caught if, at the point of the throw, the
 current location is dynamically enclosed in a try statement that
 handles the exception. (See the JVM specification for details).
 If there is such a try statement, the catch location is the
 first code index of the appropriate catch clause.
If there are native methods in the call stack at the time of the
 exception, there are important restrictions to note about the
 returned catch location. In such cases,
 it is not possible to predict whether an exception will be handled
 by some native method on the call stack.
 Thus, it is possible that exceptions considered uncaught
 here will, in fact, be handled by a native method and not cause
 termination of the target VM. Furthermore, it cannot be assumed that the
 catch location returned here will ever be reached by the throwing
 thread. If there is
 a native frame between the current location and the catch location,
 the exception might be handled and cleared in that native method
 instead.
Note that the compiler can generate try-catch blocks in some cases
 where they are not explicit in the source code; for example,
 the code generated for
synchronized
and
finally
blocks can contain implicit try-catch blocks.
 If such an implicitly generated try-catch is
 present on the call stack at the time of the throw, the exception
 will be considered caught even though it appears to be uncaught from
 examination of the source code.
Returns:
the
Location
where the exception will be caught or null if
 the exception is uncaught.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.