Uses of Class com.sun.jdi.AbsentInformationException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
com.sun.jdi.AbsentInformationException
Packages that use
AbsentInformationException
Package
Description
com.sun.jdi
This is the core package of the Java Debug
 Interface (JDI), it defines mirrors for values, types, and the target
 VirtualMachine itself - as well bootstrapping facilities.
Uses of
AbsentInformationException
in
com.sun.jdi
Methods in
com.sun.jdi
that throw
AbsentInformationException
Modifier and Type
Method
Description
List
<
Location
>
Method.
allLineLocations
()
Returns a list containing a
Location
object for
 each executable source line in this method.
List
<
Location
>
Method.
allLineLocations
(
String
stratum,
String
sourceName)
Returns a list containing a
Location
object for
 each executable source line in this method.
List
<
Location
>
ReferenceType.
allLineLocations
()
Returns a list containing a
Location
object
 for each executable source line in this reference type.
List
<
Location
>
ReferenceType.
allLineLocations
(
String
stratum,
String
sourceName)
Returns a list containing a
Location
object
 for each executable source line in this reference type.
List
<
LocalVariable
>
Method.
arguments
()
Returns a list containing each
LocalVariable
that is
 declared as an argument of this method.
List
<
Location
>
Method.
locationsOfLine
(int lineNumber)
Returns a List containing all
Location
objects
 that map to the given line number.
List
<
Location
>
Method.
locationsOfLine
(
String
stratum,
String
sourceName,
 int lineNumber)
Returns a List containing all
Location
objects
 that map to the given line number and source name.
List
<
Location
>
ReferenceType.
locationsOfLine
(int lineNumber)
Returns a List containing all
Location
objects
 that map to the given line number.
List
<
Location
>
ReferenceType.
locationsOfLine
(
String
stratum,
String
sourceName,
 int lineNumber)
Returns a List containing all
Location
objects
 that map to the given line number.
String
ReferenceType.
sourceDebugExtension
()
Get the source debug extension of this type.
String
Location.
sourceName
()
Gets an identifying name for the source corresponding to
 this location.
String
Location.
sourceName
(
String
stratum)
Gets an identifying name for the source corresponding to
 this location.
String
ReferenceType.
sourceName
()
Gets an identifying name for the source corresponding to the
 declaration of this type.
List
<
String
>
ReferenceType.
sourceNames
(
String
stratum)
Gets the identifying names for all the source corresponding to the
 declaration of this type.
String
Location.
sourcePath
()
Gets the path to the source corresponding to this
 location.
String
Location.
sourcePath
(
String
stratum)
Gets the path to the source corresponding to this
 location.
List
<
String
>
ReferenceType.
sourcePaths
(
String
stratum)
Gets the paths to the source corresponding to the
 declaration of this type.
List
<
LocalVariable
>
Method.
variables
()
Returns a list containing each
LocalVariable
declared
 in this method.
List
<
LocalVariable
>
Method.
variablesByName
(
String
name)
Returns a list containing each
LocalVariable
of a
 given name in this method.
LocalVariable
StackFrame.
visibleVariableByName
(
String
name)
Finds a
LocalVariable
that matches the given name and is
 visible at the current frame location.
List
<
LocalVariable
>
StackFrame.
visibleVariables
()
Returns a list containing each
LocalVariable
that can be accessed from this frame's location.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.