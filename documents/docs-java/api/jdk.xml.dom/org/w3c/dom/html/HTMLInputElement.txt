HTMLInputElement (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
jdk.xml.dom
Package
org.w3c.dom.html
Interface HTMLInputElement
All Superinterfaces:
Element
,
HTMLElement
,
Node
public interface
HTMLInputElement
extends
HTMLElement
Form control.  Note. Depending upon the environment in which the page is
 being viewed, the value property may be read-only for the file upload
 input type. For the "password" input type, the actual value returned may
 be masked to prevent unauthorized use. See the  INPUT element definition
 in HTML 4.0.
See also the
Document Object Model (DOM) Level 2 Specification
.
Since:
1.4, DOM Level 2
Field Summary
Fields declared in interface org.w3c.dom.
Node
ATTRIBUTE_NODE
,
CDATA_SECTION_NODE
,
COMMENT_NODE
,
DOCUMENT_FRAGMENT_NODE
,
DOCUMENT_NODE
,
DOCUMENT_POSITION_CONTAINED_BY
,
DOCUMENT_POSITION_CONTAINS
,
DOCUMENT_POSITION_DISCONNECTED
,
DOCUMENT_POSITION_FOLLOWING
,
DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC
,
DOCUMENT_POSITION_PRECEDING
,
DOCUMENT_TYPE_NODE
,
ELEMENT_NODE
,
ENTITY_NODE
,
ENTITY_REFERENCE_NODE
,
NOTATION_NODE
,
PROCESSING_INSTRUCTION_NODE
,
TEXT_NODE
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
void
blur
()
Removes keyboard focus from this element.
void
click
()
Simulate a mouse-click.
void
focus
()
Gives keyboard focus to this element.
String
getAccept
()
A comma-separated list of content types that a server processing this
 form will handle correctly.
String
getAccessKey
()
A single character access key to give access to the form control.
String
getAlign
()
Aligns this object (vertically or horizontally)  with respect to its
 surrounding text.
String
getAlt
()
Alternate text for user agents not rendering the normal content of
 this element.
boolean
getChecked
()
When the
type
attribute of the element has the value
 "Radio" or "Checkbox", this represents the current state of the form
 control, in an interactive user agent.
boolean
getDefaultChecked
()
When
type
has the value "Radio" or "Checkbox", this
 represents the HTML checked attribute of the element.
String
getDefaultValue
()
When the
type
attribute of the element has the value
 "Text", "File" or "Password", this represents the HTML value attribute
 of the element.
boolean
getDisabled
()
The control is unavailable in this context.
HTMLFormElement
getForm
()
Returns the
FORM
element containing this control.
int
getMaxLength
()
Maximum number of characters for text fields, when
type
has the value "Text" or "Password".
String
getName
()
Form control or object name when submitted with a form.
boolean
getReadOnly
()
This control is read-only.
String
getSize
()
Size information.
String
getSrc
()
When the
type
attribute has the value "Image", this
 attribute specifies the location of the image to be used to decorate
 the graphical submit button.
int
getTabIndex
()
Index that represents the element's position in the tabbing order.
String
getType
()
The type of control created.
String
getUseMap
()
Use client-side image map.
String
getValue
()
When the
type
attribute of the element has the value
 "Text", "File" or "Password", this represents the current contents of
 the corresponding form control, in an interactive user agent.
void
select
()
Select the contents of the text area.
void
setAccept
(
String
accept)
void
setAccessKey
(
String
accessKey)
void
setAlign
(
String
align)
void
setAlt
(
String
alt)
void
setChecked
(boolean checked)
void
setDefaultChecked
(boolean defaultChecked)
void
setDefaultValue
(
String
defaultValue)
void
setDisabled
(boolean disabled)
void
setMaxLength
(int maxLength)
void
setName
(
String
name)
void
setReadOnly
(boolean readOnly)
void
setSize
(
String
size)
void
setSrc
(
String
src)
void
setTabIndex
(int tabIndex)
void
setUseMap
(
String
useMap)
void
setValue
(
String
value)
Methods declared in interface org.w3c.dom.
Element
getAttribute
,
getAttributeNode
,
getAttributeNodeNS
,
getAttributeNS
,
getElementsByTagName
,
getElementsByTagNameNS
,
getSchemaTypeInfo
,
getTagName
,
hasAttribute
,
hasAttributeNS
,
removeAttribute
,
removeAttributeNode
,
removeAttributeNS
,
setAttribute
,
setAttributeNode
,
setAttributeNodeNS
,
setAttributeNS
,
setIdAttribute
,
setIdAttributeNode
,
setIdAttributeNS
Methods declared in interface org.w3c.dom.html.
HTMLElement
getClassName
,
getDir
,
getId
,
getLang
,
getTitle
,
setClassName
,
setDir
,
setId
,
setLang
,
setTitle
Methods declared in interface org.w3c.dom.
Node
appendChild
,
cloneNode
,
compareDocumentPosition
,
getAttributes
,
getBaseURI
,
getChildNodes
,
getFeature
,
getFirstChild
,
getLastChild
,
getLocalName
,
getNamespaceURI
,
getNextSibling
,
getNodeName
,
getNodeType
,
getNodeValue
,
getOwnerDocument
,
getParentNode
,
getPrefix
,
getPreviousSibling
,
getTextContent
,
getUserData
,
hasAttributes
,
hasChildNodes
,
insertBefore
,
isDefaultNamespace
,
isEqualNode
,
isSameNode
,
isSupported
,
lookupNamespaceURI
,
lookupPrefix
,
normalize
,
removeChild
,
replaceChild
,
setNodeValue
,
setPrefix
,
setTextContent
,
setUserData
Method Details
getDefaultValue
String
getDefaultValue
()
When the
type
attribute of the element has the value
 "Text", "File" or "Password", this represents the HTML value attribute
 of the element. The value of this attribute does not change if the
 contents of the corresponding form control, in an interactive user
 agent, changes. Changing this attribute, however, resets the contents
 of the form control. See the  value attribute definition in HTML 4.0.
setDefaultValue
void
setDefaultValue
(
String
defaultValue)
getDefaultChecked
boolean
getDefaultChecked
()
When
type
has the value "Radio" or "Checkbox", this
 represents the HTML checked attribute of the element. The value of
 this attribute does not change if the state of the corresponding form
 control, in an interactive user agent, changes. Changes to this
 attribute, however, resets the state of the form control. See the
 checked attribute definition in HTML 4.0.
setDefaultChecked
void
setDefaultChecked
(boolean defaultChecked)
getForm
HTMLFormElement
getForm
()
Returns the
FORM
element containing this control. Returns
null
if this control is not within the context of a form.
getAccept
String
getAccept
()
A comma-separated list of content types that a server processing this
 form will handle correctly. See the  accept attribute definition in
 HTML 4.0.
setAccept
void
setAccept
(
String
accept)
getAccessKey
String
getAccessKey
()
A single character access key to give access to the form control. See
 the  accesskey attribute definition in HTML 4.0.
setAccessKey
void
setAccessKey
(
String
accessKey)
getAlign
String
getAlign
()
Aligns this object (vertically or horizontally)  with respect to its
 surrounding text. See the  align attribute definition in HTML 4.0.
 This attribute is deprecated in HTML 4.0.
setAlign
void
setAlign
(
String
align)
getAlt
String
getAlt
()
Alternate text for user agents not rendering the normal content of
 this element. See the  alt attribute definition in HTML 4.0.
setAlt
void
setAlt
(
String
alt)
getChecked
boolean
getChecked
()
When the
type
attribute of the element has the value
 "Radio" or "Checkbox", this represents the current state of the form
 control, in an interactive user agent. Changes to this attribute
 change the state of the form control, but do not change the value of
 the HTML value attribute of the element.
setChecked
void
setChecked
(boolean checked)
getDisabled
boolean
getDisabled
()
The control is unavailable in this context. See the  disabled
 attribute definition in HTML 4.0.
setDisabled
void
setDisabled
(boolean disabled)
getMaxLength
int
getMaxLength
()
Maximum number of characters for text fields, when
type
has the value "Text" or "Password". See the  maxlength attribute
 definition in HTML 4.0.
setMaxLength
void
setMaxLength
(int maxLength)
getName
String
getName
()
Form control or object name when submitted with a form. See the  name
 attribute definition in HTML 4.0.
setName
void
setName
(
String
name)
getReadOnly
boolean
getReadOnly
()
This control is read-only. Relevant only when
type
has
 the value "Text" or "Password". See the  readonly attribute definition
 in HTML 4.0.
setReadOnly
void
setReadOnly
(boolean readOnly)
getSize
String
getSize
()
Size information. The precise meaning is specific to each type of
 field.  See the  size attribute definition in HTML 4.0.
setSize
void
setSize
(
String
size)
getSrc
String
getSrc
()
When the
type
attribute has the value "Image", this
 attribute specifies the location of the image to be used to decorate
 the graphical submit button. See the  src attribute definition in HTML
 4.0.
setSrc
void
setSrc
(
String
src)
getTabIndex
int
getTabIndex
()
Index that represents the element's position in the tabbing order. See
 the  tabindex attribute definition in HTML 4.0.
setTabIndex
void
setTabIndex
(int tabIndex)
getType
String
getType
()
The type of control created. See the  type attribute definition in
 HTML 4.0.
getUseMap
String
getUseMap
()
Use client-side image map. See the  usemap attribute definition in
 HTML 4.0.
setUseMap
void
setUseMap
(
String
useMap)
getValue
String
getValue
()
When the
type
attribute of the element has the value
 "Text", "File" or "Password", this represents the current contents of
 the corresponding form control, in an interactive user agent. Changing
 this attribute changes the contents of the form control, but does not
 change the value of the HTML value attribute of the element. When the
type
attribute of the element has the value "Button",
 "Hidden", "Submit", "Reset", "Image", "Checkbox" or "Radio", this
 represents the HTML value attribute of the element. See the  value
 attribute definition in HTML 4.0.
setValue
void
setValue
(
String
value)
blur
void
blur
()
Removes keyboard focus from this element.
focus
void
focus
()
Gives keyboard focus to this element.
select
void
select
()
Select the contents of the text area. For
INPUT
elements
 whose
type
attribute has one of the following values:
 "Text", "File", or "Password".
click
void
click
()
Simulate a mouse-click. For
INPUT
elements whose
type
attribute has one of the following values: "Button",
 "Checkbox", "Radio", "Reset", or "Submit".
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.