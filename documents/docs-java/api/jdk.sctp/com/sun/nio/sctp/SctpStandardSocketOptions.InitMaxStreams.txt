SctpStandardSocketOptions.InitMaxStreams (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
jdk.sctp
Package
com.sun.nio.sctp
Class SctpStandardSocketOptions.InitMaxStreams
java.lang.Object
com.sun.nio.sctp.SctpStandardSocketOptions.InitMaxStreams
Enclosing class:
SctpStandardSocketOptions
public static class
SctpStandardSocketOptions.InitMaxStreams
extends
Object
This class is used to set the maximum number of inbound/outbound streams
 used by the local endpoint during association initialization. An
 instance of this class is used to set the
SCTP_INIT_MAXSTREAMS
socket option.
Since:
1.7
Method Summary
All Methods
Static Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
static
SctpStandardSocketOptions.InitMaxStreams
create
(int maxInStreams,
 int maxOutStreams)
Creates an InitMaxStreams instance.
boolean
equals
(
Object
obj)
Returns true if the specified object is another
InitMaxStreams
instance with the same number of in and out bound streams.
int
hashCode
()
Returns a hash code value for this init max streams.
int
maxInStreams
()
Returns the maximum number of inbound streams.
int
maxOutStreams
()
Returns the maximum number of outbound streams.
String
toString
()
Returns a string representation of this init max streams, including
 the maximum in and out bound streams.
Methods declared in class java.lang.
Object
clone
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Method Details
create
public static
SctpStandardSocketOptions.InitMaxStreams
create
(int maxInStreams,
 int maxOutStreams)
Creates an InitMaxStreams instance.
Parameters:
maxInStreams
- The maximum number of inbound streams, where
0 <= maxInStreams <= 65536
maxOutStreams
- The maximum number of outbound streams, where
0 <= maxOutStreams <= 65536
Returns:
An
InitMaxStreams
instance
Throws:
IllegalArgumentException
- If an argument is outside of specified bounds
maxInStreams
public
int
maxInStreams
()
Returns the maximum number of inbound streams.
Returns:
Maximum inbound streams
maxOutStreams
public
int
maxOutStreams
()
Returns the maximum number of outbound streams.
Returns:
Maximum outbound streams
toString
public
String
toString
()
Returns a string representation of this init max streams, including
 the maximum in and out bound streams.
Overrides:
toString
in class
Object
Returns:
A string representation of this init max streams
equals
public
boolean
equals
(
Object
obj)
Returns true if the specified object is another
InitMaxStreams
instance with the same number of in and out bound streams.
Overrides:
equals
in class
Object
Parameters:
obj
- The object to be compared with this init max streams
Returns:
true if the specified object is another
InitMaxStreams
instance with the same number of in
          and out bound streams
See Also:
Object.hashCode()
HashMap
hashCode
public
int
hashCode
()
Returns a hash code value for this init max streams.
Overrides:
hashCode
in class
Object
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object)
System.identityHashCode(java.lang.Object)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.