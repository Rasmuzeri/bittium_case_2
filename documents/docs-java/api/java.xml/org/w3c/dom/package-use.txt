Uses of Package org.w3c.dom (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Package
org.w3c.dom
Packages that use
org.w3c.dom
Package
Description
javax.imageio.metadata
A package of the Java Image I/O API dealing with reading and writing
 metadata.
javax.imageio.plugins.tiff
Public classes used by the built-in TIFF plug-ins.
javax.xml.crypto.dom
DOM-specific classes for the
javax.xml.crypto
package.
javax.xml.crypto.dsig.dom
DOM-specific classes for the
javax.xml.crypto.dsig
package.
javax.xml.parsers
Provides the classes for processing XML documents with a SAX (Simple API for XML)
 parser or a DOM (Document Object Model) Document builder.
javax.xml.transform.dom
Provides DOM specific transformation classes.
javax.xml.validation
Provides an API for validation of XML documents.
javax.xml.xpath
Provides an
object-model neutral
API for the
 evaluation of XPath expressions and access to the evaluation
 environment.
org.w3c.dom
Provides the interfaces for the Document Object Model (DOM).
org.w3c.dom.bootstrap
Provides a factory for obtaining instances of
DOMImplementation
.
org.w3c.dom.css
Provides interfaces for DOM Level 2 Style Specification.
org.w3c.dom.events
Provides interfaces for DOM Level 2 Events.
org.w3c.dom.html
Provides interfaces for DOM Level 2 HTML Specification.
org.w3c.dom.ls
Provides interfaces for DOM Level 3 Load and Save.
org.w3c.dom.ranges
Provides interfaces for DOM Level 2 Range.
org.w3c.dom.stylesheets
Provides interfaces for DOM Level 2 Style Specification.
org.w3c.dom.traversal
Provides interfaces for DOM Level 2 Traversal.
org.w3c.dom.xpath
Provides interfaces for DOM Level 3 XPath Specification.
Classes in
org.w3c.dom
used by
javax.imageio.metadata
Class
Description
Attr
The
Attr
interface represents an attribute in an
Element
object.
Document
The
Document
interface represents the entire HTML or XML
 document.
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Element
The
Element
interface represents an element in an HTML or XML
 document.
NamedNodeMap
Objects implementing the
NamedNodeMap
interface are used to
 represent collections of nodes that can be accessed by name.
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
NodeList
The
NodeList
interface provides the abstraction of an ordered
 collection of nodes, without defining or constraining how this collection
 is implemented.
TypeInfo
The
TypeInfo
interface represents a type referenced from
Element
or
Attr
nodes, specified in the schemas
 associated with the document.
UserDataHandler
When associating an object to a key on a node using
Node.setUserData()
the application can provide a handler
 that gets called when the node the object is associated to is being
 cloned, imported, or renamed.
Classes in
org.w3c.dom
used by
javax.imageio.plugins.tiff
Class
Description
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
javax.xml.crypto.dom
Class
Description
Element
The
Element
interface represents an element in an HTML or XML
 document.
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
javax.xml.crypto.dsig.dom
Class
Description
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
javax.xml.parsers
Class
Description
Document
The
Document
interface represents the entire HTML or XML
 document.
DOMImplementation
The
DOMImplementation
interface provides a number of methods
 for performing operations that are independent of any particular instance
 of the document object model.
Classes in
org.w3c.dom
used by
javax.xml.transform.dom
Class
Description
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
javax.xml.validation
Class
Description
TypeInfo
The
TypeInfo
interface represents a type referenced from
Element
or
Attr
nodes, specified in the schemas
 associated with the document.
Classes in
org.w3c.dom
used by
javax.xml.xpath
Class
Description
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
org.w3c.dom
Class
Description
Attr
The
Attr
interface represents an attribute in an
Element
object.
CDATASection
CDATA sections are used to escape blocks of text containing characters that
 would otherwise be regarded as markup.
CharacterData
The
CharacterData
interface extends Node with a set of
 attributes and methods for accessing character data in the DOM.
Comment
This interface inherits from
CharacterData
and represents the
 content of a comment, i.e., all the characters between the starting
 '
<!--
' and ending '
-->
'.
Document
The
Document
interface represents the entire HTML or XML
 document.
DocumentFragment
DocumentFragment
is a "lightweight" or "minimal"
Document
object.
DocumentType
Each
Document
has a
doctype
attribute whose value
 is either
null
or a
DocumentType
object.
DOMConfiguration
The
DOMConfiguration
interface represents the configuration
 of a document and maintains a table of recognized parameters.
DOMError
DOMError
is an interface that describes an error.
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
DOMImplementation
The
DOMImplementation
interface provides a number of methods
 for performing operations that are independent of any particular instance
 of the document object model.
DOMImplementationList
The
DOMImplementationList
interface provides the abstraction
 of an ordered collection of DOM implementations, without defining or
 constraining how this collection is implemented.
DOMLocator
DOMLocator
is an interface that describes a location (e.g.
DOMStringList
The
DOMStringList
interface provides the abstraction of an
 ordered collection of
DOMString
values, without defining or
 constraining how this collection is implemented.
Element
The
Element
interface represents an element in an HTML or XML
 document.
EntityReference
EntityReference
nodes may be used to represent an entity
 reference in the tree.
NamedNodeMap
Objects implementing the
NamedNodeMap
interface are used to
 represent collections of nodes that can be accessed by name.
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
NodeList
The
NodeList
interface provides the abstraction of an ordered
 collection of nodes, without defining or constraining how this collection
 is implemented.
ProcessingInstruction
The
ProcessingInstruction
interface represents a "processing
 instruction", used in XML as a way to keep processor-specific information
 in the text of the document.
Text
The
Text
interface inherits from
CharacterData
and represents the textual content (termed
character data
in XML) of an
Element
or
Attr
.
TypeInfo
The
TypeInfo
interface represents a type referenced from
Element
or
Attr
nodes, specified in the schemas
 associated with the document.
UserDataHandler
When associating an object to a key on a node using
Node.setUserData()
the application can provide a handler
 that gets called when the node the object is associated to is being
 cloned, imported, or renamed.
Classes in
org.w3c.dom
used by
org.w3c.dom.bootstrap
Class
Description
DOMImplementation
The
DOMImplementation
interface provides a number of methods
 for performing operations that are independent of any particular instance
 of the document object model.
DOMImplementationList
The
DOMImplementationList
interface provides the abstraction
 of an ordered collection of DOM implementations, without defining or
 constraining how this collection is implemented.
DOMImplementationSource
This interface permits a DOM implementer to supply one or more
 implementations, based upon requested features and versions, as specified
 in
DOM
 Features
.
Classes in
org.w3c.dom
used by
org.w3c.dom.css
Class
Description
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
DOMImplementation
The
DOMImplementation
interface provides a number of methods
 for performing operations that are independent of any particular instance
 of the document object model.
Element
The
Element
interface represents an element in an HTML or XML
 document.
Classes in
org.w3c.dom
used by
org.w3c.dom.events
Class
Description
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
org.w3c.dom.html
Class
Description
Document
The
Document
interface represents the entire HTML or XML
 document.
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
DOMImplementation
The
DOMImplementation
interface provides a number of methods
 for performing operations that are independent of any particular instance
 of the document object model.
Element
The
Element
interface represents an element in an HTML or XML
 document.
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
NodeList
The
NodeList
interface provides the abstraction of an ordered
 collection of nodes, without defining or constraining how this collection
 is implemented.
Classes in
org.w3c.dom
used by
org.w3c.dom.ls
Class
Description
Document
The
Document
interface represents the entire HTML or XML
 document.
DOMConfiguration
The
DOMConfiguration
interface represents the configuration
 of a document and maintains a table of recognized parameters.
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Element
The
Element
interface represents an element in an HTML or XML
 document.
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
org.w3c.dom.ranges
Class
Description
DocumentFragment
DocumentFragment
is a "lightweight" or "minimal"
Document
object.
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
org.w3c.dom.stylesheets
Class
Description
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
org.w3c.dom.traversal
Class
Description
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Classes in
org.w3c.dom
used by
org.w3c.dom.xpath
Class
Description
DOMException
DOM operations only raise exceptions in "exceptional" circumstances, i.e.,
 when an operation is impossible to perform (either for logical reasons,
 because data is lost, or because the implementation has become unstable).
Element
The
Element
interface represents an element in an HTML or XML
 document.
Node
The
Node
interface is the primary datatype for the entire
 Document Object Model.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.