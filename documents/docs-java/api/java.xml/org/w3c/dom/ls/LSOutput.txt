LSOutput (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.xml
Package
org.w3c.dom.ls
Interface LSOutput
public interface
LSOutput
This interface represents an output destination for data.
This interface allows an application to encapsulate information about
 an output destination in a single object, which may include a URI, a byte
 stream (possibly with a specified encoding), a base URI, and/or a
 character stream.
The exact definitions of a byte stream and a character stream are
 binding dependent.
The application is expected to provide objects that implement this
 interface whenever such objects are needed. The application can either
 provide its own objects that implement this interface, or it can use the
 generic factory method
DOMImplementationLS.createLSOutput()
to create objects that implement this interface.
The
LSSerializer
will use the
LSOutput
object
 to determine where to serialize the output to. The
LSSerializer
will look at the different outputs specified in
 the
LSOutput
in the following order to know which one to
 output to, the first one that is not null and not an empty string will be
 used:
LSOutput.characterStream
LSOutput.byteStream
LSOutput.systemId
LSOutput
objects belong to the application. The DOM
 implementation will never modify them (though it may make copies and
 modify the copies, if necessary).
See also the
Document Object Model (DOM) Level 3 Load
and Save Specification
.
Since:
1.5
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
OutputStream
getByteStream
()
An attribute of a language and binding dependent type that represents
 a writable stream of bytes.
Writer
getCharacterStream
()
An attribute of a language and binding dependent type that represents
 a writable stream to which 16-bit units can be output.
String
getEncoding
()
The character encoding to use for the output.
String
getSystemId
()
The system identifier, a URI reference [
IETF RFC 2396
], for this
 output destination.
void
setByteStream
(
OutputStream
byteStream)
An attribute of a language and binding dependent type that represents
 a writable stream of bytes.
void
setCharacterStream
(
Writer
characterStream)
An attribute of a language and binding dependent type that represents
 a writable stream to which 16-bit units can be output.
void
setEncoding
(
String
encoding)
The character encoding to use for the output.
void
setSystemId
(
String
systemId)
The system identifier, a URI reference [
IETF RFC 2396
], for this
 output destination.
Method Details
getCharacterStream
Writer
getCharacterStream
()
An attribute of a language and binding dependent type that represents
 a writable stream to which 16-bit units can be output.
setCharacterStream
void
setCharacterStream
(
Writer
characterStream)
An attribute of a language and binding dependent type that represents
 a writable stream to which 16-bit units can be output.
getByteStream
OutputStream
getByteStream
()
An attribute of a language and binding dependent type that represents
 a writable stream of bytes.
setByteStream
void
setByteStream
(
OutputStream
byteStream)
An attribute of a language and binding dependent type that represents
 a writable stream of bytes.
getSystemId
String
getSystemId
()
The system identifier, a URI reference [
IETF RFC 2396
], for this
 output destination.
If the system ID is a relative URI reference (see section 5 in [
IETF RFC 2396
]), the
 behavior is implementation dependent.
setSystemId
void
setSystemId
(
String
systemId)
The system identifier, a URI reference [
IETF RFC 2396
], for this
 output destination.
If the system ID is a relative URI reference (see section 5 in [
IETF RFC 2396
]), the
 behavior is implementation dependent.
getEncoding
String
getEncoding
()
The character encoding to use for the output. The encoding must be a
 string acceptable for an XML encoding declaration ([
XML 1.0
] section
 4.3.3 "Character Encoding in Entities"), it is recommended that
 character encodings registered (as charsets) with the Internet
 Assigned Numbers Authority [
IANA-CHARSETS
]
  should be referred to using their registered names.
setEncoding
void
setEncoding
(
String
encoding)
The character encoding to use for the output. The encoding must be a
 string acceptable for an XML encoding declaration ([
XML 1.0
] section
 4.3.3 "Character Encoding in Entities"), it is recommended that
 character encodings registered (as charsets) with the Internet
 Assigned Numbers Authority [
IANA-CHARSETS
]
  should be referred to using their registered names.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.