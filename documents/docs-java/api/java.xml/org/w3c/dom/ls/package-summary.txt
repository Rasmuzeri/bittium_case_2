org.w3c.dom.ls (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Package:
Description
Related Packages
Classes and Interfaces
Package:
Description
|
Related Packages
|
Classes and Interfaces
SEARCH
Module
java.xml
Package org.w3c.dom.ls
package
org.w3c.dom.ls
Provides interfaces for DOM Level 3 Load and Save. Refer to the
Document Object Model (DOM) Level 3 Load and Save Specification
,
 the Load and Save interface allows programs and scripts to dynamically
 load the content of an XML document into a DOM document and serialize a DOM
 document into an XML document.
Since:
1.5
Related Packages
Package
Description
org.w3c.dom
Provides the interfaces for the Document Object Model (DOM).
All Classes and Interfaces
Interfaces
Exception Classes
Class
Description
DOMImplementationLS
DOMImplementationLS
contains the factory methods for creating
 Load and Save objects.
LSException
Parser or write operations may throw an
LSException
if the
 processing is stopped.
LSInput
This interface represents an input source for data.
LSLoadEvent
This interface represents a load event object that signals the completion
 of a document load.
LSOutput
This interface represents an output destination for data.
LSParser
An interface to an object that is able to build, or augment, a DOM tree
 from various input sources.
LSParserFilter
LSParserFilter
s provide applications the ability to examine
 nodes as they are being constructed while parsing.
LSProgressEvent
This interface represents a progress event object that notifies the
 application about progress as a document is parsed.
LSResourceResolver
LSResourceResolver
provides a way for applications to
 redirect references to external resources.
LSSerializer
A
LSSerializer
provides an API for serializing (writing) a
 DOM document out into XML.
LSSerializerFilter
LSSerializerFilter
s provide applications the ability to
 examine nodes as they are being serialized and decide what nodes should
 be serialized or not.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.