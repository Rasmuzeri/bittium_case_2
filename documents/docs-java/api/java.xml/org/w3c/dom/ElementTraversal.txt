ElementTraversal (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.xml
Package
org.w3c.dom
Interface ElementTraversal
public interface
ElementTraversal
The
ElementTraversal
interface is a set of read-only attributes
 which allow an author to easily navigate between elements in a document.
In conforming implementations of Element Traversal, all objects that
 implement
Element
must also implement the
ElementTraversal
interface. Four of the methods,
getFirstElementChild()
,
getLastElementChild()
,
getPreviousElementSibling()
, and
getNextElementSibling()
,
 each provides a live reference to another element with the defined
 relationship to the current element, if the related element exists. The
 fifth method,
getChildElementCount()
, exposes the number of child
 elements of an element, for preprocessing before navigation.
Since:
9
See Also:
Element Traversal Specification
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
int
getChildElementCount
()
Returns the current number of child nodes of the element which are of
 the
Element
type.
Element
getFirstElementChild
()
Returns a reference to the first child node of the element which is of
 the
Element
type.
Element
getLastElementChild
()
Returns a reference to the last child node of the element which is of
 the
Element
type.
Element
getNextElementSibling
()
Returns a reference to the sibling node of the element which most immediately
 follows the element in document order, and which is of the
Element
type.
Element
getPreviousElementSibling
()
Returns a reference to the sibling node of the element which most immediately
 precedes the element in document order, and which is of the
Element
type.
Method Details
getFirstElementChild
Element
getFirstElementChild
()
Returns a reference to the first child node of the element which is of
 the
Element
type.
Returns:
a reference to an element child,
null
if the element has
 no child of the
Element
type.
getLastElementChild
Element
getLastElementChild
()
Returns a reference to the last child node of the element which is of
 the
Element
type.
Returns:
a reference to an element child,
null
if the element has
 no child of the
Element
type.
getPreviousElementSibling
Element
getPreviousElementSibling
()
Returns a reference to the sibling node of the element which most immediately
 precedes the element in document order, and which is of the
Element
type.
Returns:
a reference to an element child,
null
if the element has
 no sibling node of the
Element
type that comes before this one.
getNextElementSibling
Element
getNextElementSibling
()
Returns a reference to the sibling node of the element which most immediately
 follows the element in document order, and which is of the
Element
type.
Returns:
a reference to an element child,
null
if the element has
 no sibling node of the
Element
type that comes after this one.
getChildElementCount
int
getChildElementCount
()
Returns the current number of child nodes of the element which are of
 the
Element
type.
Returns:
the number of element children, or
0
if the element has
 no element children.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.