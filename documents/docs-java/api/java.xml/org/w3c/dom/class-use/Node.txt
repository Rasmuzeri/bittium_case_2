Uses of Interface org.w3c.dom.Node (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
org.w3c.dom.Node
Packages that use
Node
Package
Description
javax.imageio.metadata
A package of the Java Image I/O API dealing with reading and writing
 metadata.
javax.imageio.plugins.tiff
Public classes used by the built-in TIFF plug-ins.
javax.xml.crypto.dom
DOM-specific classes for the
javax.xml.crypto
package.
javax.xml.crypto.dsig.dom
DOM-specific classes for the
javax.xml.crypto.dsig
package.
javax.xml.transform.dom
Provides DOM specific transformation classes.
javax.xml.xpath
Provides an
object-model neutral
API for the
 evaluation of XPath expressions and access to the evaluation
 environment.
org.w3c.dom
Provides the interfaces for the Document Object Model (DOM).
org.w3c.dom.events
Provides interfaces for DOM Level 2 Events.
org.w3c.dom.html
Provides interfaces for DOM Level 2 HTML Specification.
org.w3c.dom.ls
Provides interfaces for DOM Level 3 Load and Save.
org.w3c.dom.ranges
Provides interfaces for DOM Level 2 Range.
org.w3c.dom.stylesheets
Provides interfaces for DOM Level 2 Style Specification.
org.w3c.dom.traversal
Provides interfaces for DOM Level 2 Traversal.
org.w3c.dom.xpath
Provides interfaces for DOM Level 3 XPath Specification.
Uses of
Node
in
javax.imageio.metadata
Classes in
javax.imageio.metadata
that implement
Node
Modifier and Type
Class
Description
class
IIOMetadataNode
A class representing a node in a meta-data tree, which implements
 the
org.w3c.dom.Element
interface and additionally allows
 for the storage of non-textual objects via the
getUserObject
and
setUserObject
methods.
Fields in
javax.imageio.metadata
declared as
Node
Modifier and Type
Field
Description
protected
Node
IIOInvalidTreeException.
offendingNode
The
Node
that led to the parsing error, or
null
.
Methods in
javax.imageio.metadata
that return
Node
Modifier and Type
Method
Description
Node
IIOMetadataNode.
appendChild
(
Node
newChild)
Adds the node
newChild
to the end of the list of
 children of this node.
Node
IIOMetadataNode.
cloneNode
(boolean deep)
Returns a duplicate of this node.
abstract
Node
IIOMetadata.
getAsTree
(
String
formatName)
Returns an XML DOM
Node
object that represents the
 root of a tree of metadata contained within this object
 according to the conventions defined by a given metadata
 format.
Node
IIOMetadataNode.
getFirstChild
()
Returns the first child of this node, or
null
if
 the node has no children.
Node
IIOMetadataNode.
getLastChild
()
Returns the last child of this node, or
null
if
 the node has no children.
Node
IIOMetadataNode.
getNextSibling
()
Returns the next sibling of this node, or
null
if
 the node has no next sibling.
Node
IIOInvalidTreeException.
getOffendingNode
()
Returns the
Node
that caused the error in parsing.
Node
IIOMetadataNode.
getParentNode
()
Returns the parent of this node.
Node
IIOMetadataNode.
getPreviousSibling
()
Returns the previous sibling of this node, or
null
if this node has no previous sibling.
Node
IIOMetadataNode.
insertBefore
(
Node
newChild,
Node
refChild)
Inserts the node
newChild
before the existing
 child node
refChild
.
Node
IIOMetadataNode.
item
(int index)
Node
IIOMetadataNode.
removeChild
(
Node
oldChild)
Removes the child node indicated by
oldChild
from
 the list of children, and returns it.
Node
IIOMetadataNode.
replaceChild
(
Node
newChild,
Node
oldChild)
Replaces the child node
oldChild
with
newChild
in the list of children, and returns the
oldChild
node.
Methods in
javax.imageio.metadata
with parameters of type
Node
Modifier and Type
Method
Description
Node
IIOMetadataNode.
appendChild
(
Node
newChild)
Adds the node
newChild
to the end of the list of
 children of this node.
short
IIOMetadataNode.
compareDocumentPosition
(
Node
other)
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
Node
IIOMetadataNode.
insertBefore
(
Node
newChild,
Node
refChild)
Inserts the node
newChild
before the existing
 child node
refChild
.
boolean
IIOMetadataNode.
isEqualNode
(
Node
node)
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
boolean
IIOMetadataNode.
isSameNode
(
Node
node)
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
abstract void
IIOMetadata.
mergeTree
(
String
formatName,
Node
root)
Alters the internal state of this
IIOMetadata
object from a tree of XML DOM
Node
s whose syntax
 is defined by the given metadata format.
Node
IIOMetadataNode.
removeChild
(
Node
oldChild)
Removes the child node indicated by
oldChild
from
 the list of children, and returns it.
Node
IIOMetadataNode.
replaceChild
(
Node
newChild,
Node
oldChild)
Replaces the child node
oldChild
with
newChild
in the list of children, and returns the
oldChild
node.
void
IIOMetadata.
setFromTree
(
String
formatName,
Node
root)
Sets the internal state of this
IIOMetadata
object
 from a tree of XML DOM
Node
s whose syntax is
 defined by the given metadata format.
Constructors in
javax.imageio.metadata
with parameters of type
Node
Modifier
Constructor
Description
IIOInvalidTreeException
(
String
message,
Throwable
cause,
Node
offendingNode)
Constructs an
IIOInvalidTreeException
with a
 message string, a reference to an exception that caused this
 exception, and a reference to the
Node
that caused
 the parsing error.
IIOInvalidTreeException
(
String
message,
Node
offendingNode)
Constructs an
IIOInvalidTreeException
with a
 message string and a reference to the
Node
that
 caused the parsing error.
Uses of
Node
in
javax.imageio.plugins.tiff
Methods in
javax.imageio.plugins.tiff
that return
Node
Modifier and Type
Method
Description
Node
TIFFField.
getAsNativeNode
()
Returns the
TIFFField
as a node named either
"TIFFField"
or
"TIFFIFD"
as described in the
 TIFF native image metadata specification.
Methods in
javax.imageio.plugins.tiff
with parameters of type
Node
Modifier and Type
Method
Description
static
TIFFField
TIFFField.
createFromMetadataNode
(
TIFFTagSet
tagSet,
Node
node)
Creates a
TIFFField
from a TIFF native image
 metadata node.
Uses of
Node
in
javax.xml.crypto.dom
Methods in
javax.xml.crypto.dom
that return
Node
Modifier and Type
Method
Description
Node
DOMURIReference.
getHere
()
Returns the here node.
Node
DOMStructure.
getNode
()
Returns the node contained in this
DOMStructure
.
Constructors in
javax.xml.crypto.dom
with parameters of type
Node
Modifier
Constructor
Description
DOMStructure
(
Node
node)
Creates a
DOMStructure
containing the specified node.
Uses of
Node
in
javax.xml.crypto.dsig.dom
Methods in
javax.xml.crypto.dsig.dom
that return
Node
Modifier and Type
Method
Description
Node
DOMSignContext.
getNextSibling
()
Returns the nextSibling node.
Node
DOMValidateContext.
getNode
()
Returns the node.
Node
DOMSignContext.
getParent
()
Returns the parent node.
Methods in
javax.xml.crypto.dsig.dom
with parameters of type
Node
Modifier and Type
Method
Description
void
DOMSignContext.
setNextSibling
(
Node
nextSibling)
Sets the next sibling node.
void
DOMValidateContext.
setNode
(
Node
node)
Sets the node.
void
DOMSignContext.
setParent
(
Node
parent)
Sets the parent node.
Constructors in
javax.xml.crypto.dsig.dom
with parameters of type
Node
Modifier
Constructor
Description
DOMSignContext
(
Key
signingKey,
Node
parent)
Creates a
DOMSignContext
with the specified signing key
 and parent node.
DOMSignContext
(
Key
signingKey,
Node
parent,
Node
nextSibling)
Creates a
DOMSignContext
with the specified signing key,
 parent and next sibling nodes.
DOMSignContext
(
KeySelector
ks,
Node
parent)
Creates a
DOMSignContext
with the specified key selector
 and parent node.
DOMSignContext
(
KeySelector
ks,
Node
parent,
Node
nextSibling)
Creates a
DOMSignContext
with the specified key selector,
 parent and next sibling nodes.
DOMValidateContext
(
Key
validatingKey,
Node
node)
Creates a
DOMValidateContext
containing the specified key
 and node.
DOMValidateContext
(
KeySelector
ks,
Node
node)
Creates a
DOMValidateContext
containing the specified key
 selector and node.
Uses of
Node
in
javax.xml.transform.dom
Methods in
javax.xml.transform.dom
that return
Node
Modifier and Type
Method
Description
Node
DOMResult.
getNextSibling
()
Get the child node before which the result nodes will be inserted.
Node
DOMResult.
getNode
()
Get the node that will contain the result DOM tree.
Node
DOMSource.
getNode
()
Get the node that represents a Source DOM tree.
Node
DOMLocator.
getOriginatingNode
()
Return the node where the event occurred.
Methods in
javax.xml.transform.dom
with parameters of type
Node
Modifier and Type
Method
Description
void
DOMResult.
setNextSibling
(
Node
nextSibling)
Set the child node before which the result nodes will be inserted.
void
DOMResult.
setNode
(
Node
node)
Set the node that will contain the result DOM tree.
void
DOMSource.
setNode
(
Node
node)
Set the node that will represents a Source DOM tree.
Constructors in
javax.xml.transform.dom
with parameters of type
Node
Modifier
Constructor
Description
DOMResult
(
Node
node)
Use a DOM node to create a new output target.
DOMResult
(
Node
node,
String
systemId)
Use a DOM node to create a new output target with the specified System ID.
DOMResult
(
Node
node,
Node
nextSibling)
Use a DOM node to create a new output target specifying
 the child node where the result nodes should be inserted before.
DOMResult
(
Node
node,
Node
nextSibling,
String
systemId)
Use a DOM node to create a new output target specifying the child
 node where the result nodes should be inserted before and
 the specified System ID.
DOMSource
(
Node
n)
Create a new input source with a DOM node.
DOMSource
(
Node
node,
String
systemID)
Create a new input source with a DOM node, and with the
 system ID also passed in as the base URI.
Uses of
Node
in
javax.xml.xpath
Methods in
javax.xml.xpath
that return
Node
Modifier and Type
Method
Description
Node
XPathNodes.
get
(int index)
Returns a Node at the specified position
Methods in
javax.xml.xpath
that return types with arguments of type
Node
Modifier and Type
Method
Description
Iterator
<
Node
>
XPathNodes.
iterator
()
Returns an iterator of the Nodes.
Uses of
Node
in
org.w3c.dom
Subinterfaces of
Node
in
org.w3c.dom
Modifier and Type
Interface
Description
interface
Attr
The
Attr
interface represents an attribute in an
Element
object.
interface
CDATASection
CDATA sections are used to escape blocks of text containing characters that
 would otherwise be regarded as markup.
interface
CharacterData
The
CharacterData
interface extends Node with a set of
 attributes and methods for accessing character data in the DOM.
interface
Comment
This interface inherits from
CharacterData
and represents the
 content of a comment, i.e., all the characters between the starting
 '
<!--
' and ending '
-->
'.
interface
Document
The
Document
interface represents the entire HTML or XML
 document.
interface
DocumentFragment
DocumentFragment
is a "lightweight" or "minimal"
Document
object.
interface
DocumentType
Each
Document
has a
doctype
attribute whose value
 is either
null
or a
DocumentType
object.
interface
Element
The
Element
interface represents an element in an HTML or XML
 document.
interface
Entity
This interface represents a known entity, either parsed or unparsed, in an
 XML document.
interface
EntityReference
EntityReference
nodes may be used to represent an entity
 reference in the tree.
interface
Notation
This interface represents a notation declared in the DTD.
interface
ProcessingInstruction
The
ProcessingInstruction
interface represents a "processing
 instruction", used in XML as a way to keep processor-specific information
 in the text of the document.
interface
Text
The
Text
interface inherits from
CharacterData
and represents the textual content (termed
character data
in XML) of an
Element
or
Attr
.
Methods in
org.w3c.dom
that return
Node
Modifier and Type
Method
Description
Node
Document.
adoptNode
(
Node
source)
Attempts to adopt a node from another document to this document.
Node
Node.
appendChild
(
Node
newChild)
Adds the node
newChild
to the end of the list of children
 of this node.
Node
Node.
cloneNode
(boolean deep)
Returns a duplicate of this node, i.e., serves as a generic copy
 constructor for nodes.
Node
Node.
getFirstChild
()
The first child of this node.
Node
Node.
getLastChild
()
The last child of this node.
Node
NamedNodeMap.
getNamedItem
(
String
name)
Retrieves a node specified by name.
Node
NamedNodeMap.
getNamedItemNS
(
String
namespaceURI,
String
localName)
Retrieves a node specified by local name and namespace URI.
Node
Node.
getNextSibling
()
The node immediately following this node.
Node
Node.
getParentNode
()
The parent of this node.
Node
Node.
getPreviousSibling
()
The node immediately preceding this node.
Node
DOMLocator.
getRelatedNode
()
The node this locator is pointing to, or
null
if no node
 is available.
Node
Document.
importNode
(
Node
importedNode,
 boolean deep)
Imports a node from another document to this document, without altering
 or removing the source node from the original document; this method
 creates a new copy of the source node.
Node
Node.
insertBefore
(
Node
newChild,
Node
refChild)
Inserts the node
newChild
before the existing child node
refChild
.
Node
NamedNodeMap.
item
(int index)
Returns the
index
th item in the map.
Node
NodeList.
item
(int index)
Returns the
index
th item in the collection.
Node
Node.
removeChild
(
Node
oldChild)
Removes the child node indicated by
oldChild
from the list
 of children, and returns it.
Node
NamedNodeMap.
removeNamedItem
(
String
name)
Removes a node specified by name.
Node
NamedNodeMap.
removeNamedItemNS
(
String
namespaceURI,
String
localName)
Removes a node specified by local name and namespace URI.
Node
Document.
renameNode
(
Node
n,
String
namespaceURI,
String
qualifiedName)
Rename an existing node of type
ELEMENT_NODE
or
ATTRIBUTE_NODE
.
Node
Node.
replaceChild
(
Node
newChild,
Node
oldChild)
Replaces the child node
oldChild
with
newChild
in the list of children, and returns the
oldChild
node.
Node
NamedNodeMap.
setNamedItem
(
Node
arg)
Adds a node using its
nodeName
attribute.
Node
NamedNodeMap.
setNamedItemNS
(
Node
arg)
Adds a node using its
namespaceURI
and
localName
.
Methods in
org.w3c.dom
with parameters of type
Node
Modifier and Type
Method
Description
Node
Document.
adoptNode
(
Node
source)
Attempts to adopt a node from another document to this document.
Node
Node.
appendChild
(
Node
newChild)
Adds the node
newChild
to the end of the list of children
 of this node.
short
Node.
compareDocumentPosition
(
Node
other)
Compares the reference node, i.e. the node on which this method is
 being called, with a node, i.e. the one passed as a parameter, with
 regard to their position in the document and according to the
 document order.
void
UserDataHandler.
handle
(short operation,
String
key,
Object
data,
Node
src,
Node
dst)
This method is called whenever the node for which this handler is
 registered is imported or cloned.
Node
Document.
importNode
(
Node
importedNode,
 boolean deep)
Imports a node from another document to this document, without altering
 or removing the source node from the original document; this method
 creates a new copy of the source node.
Node
Node.
insertBefore
(
Node
newChild,
Node
refChild)
Inserts the node
newChild
before the existing child node
refChild
.
boolean
Node.
isEqualNode
(
Node
arg)
Tests whether two nodes are equal.
boolean
Node.
isSameNode
(
Node
other)
Returns whether this node is the same node as the given one.
Node
Node.
removeChild
(
Node
oldChild)
Removes the child node indicated by
oldChild
from the list
 of children, and returns it.
Node
Document.
renameNode
(
Node
n,
String
namespaceURI,
String
qualifiedName)
Rename an existing node of type
ELEMENT_NODE
or
ATTRIBUTE_NODE
.
Node
Node.
replaceChild
(
Node
newChild,
Node
oldChild)
Replaces the child node
oldChild
with
newChild
in the list of children, and returns the
oldChild
node.
Node
NamedNodeMap.
setNamedItem
(
Node
arg)
Adds a node using its
nodeName
attribute.
Node
NamedNodeMap.
setNamedItemNS
(
Node
arg)
Adds a node using its
namespaceURI
and
localName
.
Uses of
Node
in
org.w3c.dom.events
Methods in
org.w3c.dom.events
that return
Node
Modifier and Type
Method
Description
Node
MutationEvent.
getRelatedNode
()
relatedNode
is used to identify a secondary node related
 to a mutation event.
Methods in
org.w3c.dom.events
with parameters of type
Node
Modifier and Type
Method
Description
void
MutationEvent.
initMutationEvent
(
String
typeArg,
 boolean canBubbleArg,
 boolean cancelableArg,
Node
relatedNodeArg,
String
prevValueArg,
String
newValueArg,
String
attrNameArg,
 short attrChangeArg)
The
initMutationEvent
method is used to initialize the
 value of a
MutationEvent
created through the
DocumentEvent
interface.
Uses of
Node
in
org.w3c.dom.html
Subinterfaces of
Node
in
org.w3c.dom.html
Modifier and Type
Interface
Description
interface
HTMLAnchorElement
The anchor element.
interface
HTMLAppletElement
An embedded Java applet.
interface
HTMLAreaElement
Client-side image map area definition.
interface
HTMLBaseElement
Document base URI.
interface
HTMLBaseFontElement
Base font.
interface
HTMLBodyElement
The HTML document body.
interface
HTMLBRElement
Force a line break.
interface
HTMLButtonElement
Push button.
interface
HTMLDirectoryElement
Directory list.
interface
HTMLDivElement
Generic block container.
interface
HTMLDListElement
Definition list.
interface
HTMLDocument
An
HTMLDocument
is the root of the HTML hierarchy and holds
 the entire content.
interface
HTMLElement
All HTML element interfaces derive from this class.
interface
HTMLFieldSetElement
Organizes form controls into logical groups.
interface
HTMLFontElement
Local change to font.
interface
HTMLFormElement
The
FORM
element encompasses behavior similar to a collection
 and an element.
interface
HTMLFrameElement
Create a frame.
interface
HTMLFrameSetElement
Create a grid of frames.
interface
HTMLHeadElement
Document head information.
interface
HTMLHeadingElement
For the
H1
to
H6
elements.
interface
HTMLHRElement
Create a horizontal rule.
interface
HTMLHtmlElement
Root of an HTML document.
interface
HTMLIFrameElement
Inline subwindows.
interface
HTMLImageElement
Embedded image.
interface
HTMLInputElement
Form control.
interface
HTMLIsIndexElement
This element is used for single-line text input.
interface
HTMLLabelElement
Form field label text.
interface
HTMLLegendElement
Provides a caption for a
FIELDSET
grouping.
interface
HTMLLIElement
List item.
interface
HTMLLinkElement
The
LINK
element specifies a link to an external resource,
 and defines this document's relationship to that resource (or vice versa).
interface
HTMLMapElement
Client-side image map.
interface
HTMLMenuElement
Menu list.
interface
HTMLMetaElement
This contains generic meta-information about the document.
interface
HTMLModElement
Notice of modification to part of a document.
interface
HTMLObjectElement
Generic embedded object.
interface
HTMLOListElement
Ordered list.
interface
HTMLOptGroupElement
Group options together in logical subdivisions.
interface
HTMLOptionElement
A selectable choice.
interface
HTMLParagraphElement
Paragraphs.
interface
HTMLParamElement
Parameters fed to the
OBJECT
element.
interface
HTMLPreElement
Preformatted text.
interface
HTMLQuoteElement
For the
Q
and
BLOCKQUOTE
elements.
interface
HTMLScriptElement
Script statements.
interface
HTMLSelectElement
The select element allows the selection of an option.
interface
HTMLStyleElement
Style information.
interface
HTMLTableCaptionElement
Table caption See the  CAPTION element definition in HTML 4.0.
interface
HTMLTableCellElement
The object used to represent the
TH
and
TD
elements.
interface
HTMLTableColElement
Regroups the
COL
and
COLGROUP
elements.
interface
HTMLTableElement
The create* and delete* methods on the table allow authors to construct
 and modify tables.
interface
HTMLTableRowElement
A row in a table.
interface
HTMLTableSectionElement
The
THEAD
,
TFOOT
, and
TBODY
elements.
interface
HTMLTextAreaElement
Multi-line text field.
interface
HTMLTitleElement
The document title.
interface
HTMLUListElement
Unordered list.
Methods in
org.w3c.dom.html
that return
Node
Modifier and Type
Method
Description
Node
HTMLCollection.
item
(int index)
This method retrieves a node specified by ordinal index.
Node
HTMLCollection.
namedItem
(
String
name)
This method retrieves a
Node
using a name.
Uses of
Node
in
org.w3c.dom.ls
Methods in
org.w3c.dom.ls
that return
Node
Modifier and Type
Method
Description
Node
LSParser.
parseWithContext
(
LSInput
input,
Node
contextArg,
 short action)
Parse an XML fragment from a resource identified by a
LSInput
and insert the content into an existing document
 at the position specified with the
context
and
action
arguments.
Methods in
org.w3c.dom.ls
with parameters of type
Node
Modifier and Type
Method
Description
short
LSParserFilter.
acceptNode
(
Node
nodeArg)
This method will be called by the parser at the completion of the
 parsing of each node.
Node
LSParser.
parseWithContext
(
LSInput
input,
Node
contextArg,
 short action)
Parse an XML fragment from a resource identified by a
LSInput
and insert the content into an existing document
 at the position specified with the
context
and
action
arguments.
boolean
LSSerializer.
write
(
Node
nodeArg,
LSOutput
destination)
Serialize the specified node as described above in the general
 description of the
LSSerializer
interface.
String
LSSerializer.
writeToString
(
Node
nodeArg)
Serialize the specified node as described above in the general
 description of the
LSSerializer
interface.
boolean
LSSerializer.
writeToURI
(
Node
nodeArg,
String
uri)
A convenience method that acts as if
LSSerializer.write
was called with a
LSOutput
with no encoding specified
 and
LSOutput.systemId
set to the
uri
argument.
Uses of
Node
in
org.w3c.dom.ranges
Methods in
org.w3c.dom.ranges
that return
Node
Modifier and Type
Method
Description
Node
Range.
getCommonAncestorContainer
()
The deepest common ancestor container of the Range's two
 boundary-points.
Node
Range.
getEndContainer
()
Node within which the Range ends
Node
Range.
getStartContainer
()
Node within which the Range begins
Methods in
org.w3c.dom.ranges
with parameters of type
Node
Modifier and Type
Method
Description
void
Range.
insertNode
(
Node
newNode)
Inserts a node into the Document or DocumentFragment at the start of
 the Range.
void
Range.
selectNode
(
Node
refNode)
Select a node and its contents
void
Range.
selectNodeContents
(
Node
refNode)
Select the contents within a node
void
Range.
setEnd
(
Node
refNode,
 int offset)
Sets the attributes describing the end of a Range.
void
Range.
setEndAfter
(
Node
refNode)
Sets the end of a Range to be after a node
void
Range.
setEndBefore
(
Node
refNode)
Sets the end position to be before a node.
void
Range.
setStart
(
Node
refNode,
 int offset)
Sets the attributes describing the start of the Range.
void
Range.
setStartAfter
(
Node
refNode)
Sets the start position to be after a node
void
Range.
setStartBefore
(
Node
refNode)
Sets the start position to be before a node
void
Range.
surroundContents
(
Node
newParent)
Reparents the contents of the Range to the given node and inserts the
 node at the position of the start of the Range.
Uses of
Node
in
org.w3c.dom.stylesheets
Methods in
org.w3c.dom.stylesheets
that return
Node
Modifier and Type
Method
Description
Node
StyleSheet.
getOwnerNode
()
The node that associates this style sheet with the document.
Uses of
Node
in
org.w3c.dom.traversal
Methods in
org.w3c.dom.traversal
that return
Node
Modifier and Type
Method
Description
Node
TreeWalker.
firstChild
()
Moves the
TreeWalker
to the first visible child of the
 current node, and returns the new node.
Node
TreeWalker.
getCurrentNode
()
The node at which the
TreeWalker
is currently positioned.
Node
NodeIterator.
getRoot
()
The root node of the
NodeIterator
, as specified when it
 was created.
Node
TreeWalker.
getRoot
()
The
root
node of the
TreeWalker
, as specified
 when it was created.
Node
TreeWalker.
lastChild
()
Moves the
TreeWalker
to the last visible child of the
 current node, and returns the new node.
Node
NodeIterator.
nextNode
()
Returns the next node in the set and advances the position of the
NodeIterator
in the set.
Node
TreeWalker.
nextNode
()
Moves the
TreeWalker
to the next visible node in document
 order relative to the current node, and returns the new node.
Node
TreeWalker.
nextSibling
()
Moves the
TreeWalker
to the next sibling of the current
 node, and returns the new node.
Node
TreeWalker.
parentNode
()
Moves to and returns the closest visible ancestor node of the current
 node.
Node
NodeIterator.
previousNode
()
Returns the previous node in the set and moves the position of the
NodeIterator
backwards in the set.
Node
TreeWalker.
previousNode
()
Moves the
TreeWalker
to the previous visible node in
 document order relative to the current node, and returns the new
 node.
Node
TreeWalker.
previousSibling
()
Moves the
TreeWalker
to the previous sibling of the
 current node, and returns the new node.
Methods in
org.w3c.dom.traversal
with parameters of type
Node
Modifier and Type
Method
Description
short
NodeFilter.
acceptNode
(
Node
n)
Test whether a specified node is visible in the logical view of a
TreeWalker
or
NodeIterator
.
NodeIterator
DocumentTraversal.
createNodeIterator
(
Node
root,
 int whatToShow,
NodeFilter
filter,
 boolean entityReferenceExpansion)
Create a new
NodeIterator
over the subtree rooted at the
 specified node.
TreeWalker
DocumentTraversal.
createTreeWalker
(
Node
root,
 int whatToShow,
NodeFilter
filter,
 boolean entityReferenceExpansion)
Create a new
TreeWalker
over the subtree rooted at the
 specified node.
void
TreeWalker.
setCurrentNode
(
Node
currentNode)
The node at which the
TreeWalker
is currently positioned.
Uses of
Node
in
org.w3c.dom.xpath
Subinterfaces of
Node
in
org.w3c.dom.xpath
Modifier and Type
Interface
Description
interface
XPathNamespace
The
XPathNamespace
interface is returned by
XPathResult
interfaces to represent the XPath namespace node
 type that DOM lacks.
Methods in
org.w3c.dom.xpath
that return
Node
Modifier and Type
Method
Description
Node
XPathResult.
getSingleNodeValue
()
The value of this single node result, which may be
null
.
Node
XPathResult.
iterateNext
()
Iterates and returns the next node from the node set or
null
if there are no more nodes.
Node
XPathResult.
snapshotItem
(int index)
Returns the
index
th item in the snapshot collection.
Methods in
org.w3c.dom.xpath
with parameters of type
Node
Modifier and Type
Method
Description
XPathNSResolver
XPathEvaluator.
createNSResolver
(
Node
nodeResolver)
Adapts any DOM node to resolve namespaces so that an XPath expression
 can be easily evaluated relative to the context of the node where it
 appeared within the document.
Object
XPathEvaluator.
evaluate
(
String
expression,
Node
contextNode,
XPathNSResolver
resolver,
 short type,
Object
result)
Evaluates an XPath expression string and returns a result of the
 specified type if possible.
Object
XPathExpression.
evaluate
(
Node
contextNode,
 short type,
Object
result)
Evaluates this XPath expression and returns a result.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.