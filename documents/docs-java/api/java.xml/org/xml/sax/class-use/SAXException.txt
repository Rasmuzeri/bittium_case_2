Uses of Class org.xml.sax.SAXException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
org.xml.sax.SAXException
Packages that use
SAXException
Package
Description
javax.xml.parsers
Provides the classes for processing XML documents with a SAX (Simple API for XML)
 parser or a DOM (Document Object Model) Document builder.
javax.xml.validation
Provides an API for validation of XML documents.
org.xml.sax
Provides the interfaces for the Simple API for XML (SAX).
org.xml.sax.ext
Provides interfaces to SAX2 facilities that
 conformant SAX drivers won't necessarily support.
org.xml.sax.helpers
Provides helper classes, including
 support for bootstrapping SAX-based applications.
Uses of
SAXException
in
javax.xml.parsers
Methods in
javax.xml.parsers
that throw
SAXException
Modifier and Type
Method
Description
abstract
Parser
SAXParser.
getParser
()
Returns the SAX parser that is encapsulated by the
 implementation of this class.
abstract
XMLReader
SAXParser.
getXMLReader
()
Returns the
XMLReader
that is encapsulated by the
 implementation of this class.
abstract
SAXParser
SAXParserFactory.
newSAXParser
()
Creates a new instance of a SAXParser using the currently
 configured factory parameters.
Document
DocumentBuilder.
parse
(
File
f)
Parse the content of the given file as an XML document
 and return a new DOM
Document
object.
Document
DocumentBuilder.
parse
(
InputStream
is)
Parse the content of the given
InputStream
as an XML
 document and return a new DOM
Document
object.
Document
DocumentBuilder.
parse
(
InputStream
is,
String
systemId)
Parse the content of the given
InputStream
as an
 XML document and return a new DOM
Document
object.
Document
DocumentBuilder.
parse
(
String
uri)
Parse the content of the given URI as an XML document
 and return a new DOM
Document
object.
abstract
Document
DocumentBuilder.
parse
(
InputSource
is)
Parse the content of the given input source as an XML document
 and return a new DOM
Document
object.
void
SAXParser.
parse
(
File
f,
HandlerBase
hb)
Parse the content of the file specified as XML using the
 specified
HandlerBase
.
void
SAXParser.
parse
(
File
f,
DefaultHandler
dh)
Parse the content of the file specified as XML using the
 specified
DefaultHandler
.
void
SAXParser.
parse
(
InputStream
is,
HandlerBase
hb)
Parse the content of the given
InputStream
instance as XML using the specified
HandlerBase
.
void
SAXParser.
parse
(
InputStream
is,
HandlerBase
hb,
String
systemId)
Parse the content of the given
InputStream
instance as XML using the specified
HandlerBase
.
void
SAXParser.
parse
(
InputStream
is,
DefaultHandler
dh)
Parse the content of the given
InputStream
instance as XML using the specified
DefaultHandler
.
void
SAXParser.
parse
(
InputStream
is,
DefaultHandler
dh,
String
systemId)
Parse the content of the given
InputStream
instance as XML using the specified
DefaultHandler
.
void
SAXParser.
parse
(
String
uri,
HandlerBase
hb)
Parse the content described by the giving Uniform Resource
 Identifier (URI) as XML using the specified
HandlerBase
.
void
SAXParser.
parse
(
String
uri,
DefaultHandler
dh)
Parse the content described by the giving Uniform Resource
 Identifier (URI) as XML using the specified
DefaultHandler
.
void
SAXParser.
parse
(
InputSource
is,
HandlerBase
hb)
Parse the content given
InputSource
as XML using the specified
HandlerBase
.
void
SAXParser.
parse
(
InputSource
is,
DefaultHandler
dh)
Parse the content given
InputSource
as XML using the specified
DefaultHandler
.
Uses of
SAXException
in
javax.xml.validation
Methods in
javax.xml.validation
that throw
SAXException
Modifier and Type
Method
Description
abstract
Schema
SchemaFactory.
newSchema
()
Creates a special
Schema
object.
Schema
SchemaFactory.
newSchema
(
File
schema)
Parses the specified
File
as a schema and returns it as a
Schema
.
Schema
SchemaFactory.
newSchema
(
URL
schema)
Parses the specified
URL
as a schema and returns it as a
Schema
.
Schema
SchemaFactory.
newSchema
(
Source
schema)
Parses the specified source as a schema and returns it as a schema.
abstract
Schema
SchemaFactory.
newSchema
(
Source
[] schemas)
Parses the specified source(s) as a schema and returns it as a schema.
void
Validator.
validate
(
Source
source)
Validates the specified input.
abstract void
Validator.
validate
(
Source
source,
Result
result)
Validates the specified input and send the augmented validation
 result to the specified output.
Uses of
SAXException
in
org.xml.sax
Subclasses of
SAXException
in
org.xml.sax
Modifier and Type
Class
Description
class
SAXNotRecognizedException
Exception class for an unrecognized identifier.
class
SAXNotSupportedException
Exception class for an unsupported operation.
class
SAXParseException
Encapsulate an XML parse error or warning.
Methods in
org.xml.sax
that throw
SAXException
Modifier and Type
Method
Description
void
ContentHandler.
characters
(char[] ch,
 int start,
 int length)
Receive notification of character data.
void
DocumentHandler.
characters
(char[] ch,
 int start,
 int length)
Deprecated.
Receive notification of character data.
void
HandlerBase.
characters
(char[] ch,
 int start,
 int length)
Deprecated.
Receive notification of character data inside an element.
default void
ContentHandler.
declaration
(
String
version,
String
encoding,
String
standalone)
Receives notification of the XML declaration.
void
ContentHandler.
endDocument
()
Receive notification of the end of a document.
void
DocumentHandler.
endDocument
()
Deprecated.
Receive notification of the end of a document.
void
HandlerBase.
endDocument
()
Deprecated.
Receive notification of the end of the document.
void
ContentHandler.
endElement
(
String
uri,
String
localName,
String
qName)
Receive notification of the end of an element.
void
DocumentHandler.
endElement
(
String
name)
Deprecated.
Receive notification of the end of an element.
void
HandlerBase.
endElement
(
String
name)
Deprecated.
Receive notification of the end of an element.
void
ContentHandler.
endPrefixMapping
(
String
prefix)
End the scope of a prefix-URI mapping.
void
ErrorHandler.
error
(
SAXParseException
exception)
Receive notification of a recoverable error.
void
HandlerBase.
error
(
SAXParseException
e)
Deprecated.
Receive notification of a recoverable parser error.
void
ErrorHandler.
fatalError
(
SAXParseException
exception)
Receive notification of a non-recoverable, fatal error.
void
HandlerBase.
fatalError
(
SAXParseException
e)
Deprecated.
Report a fatal XML parsing error.
void
ContentHandler.
ignorableWhitespace
(char[] ch,
 int start,
 int length)
Receive notification of ignorable whitespace in element content.
void
DocumentHandler.
ignorableWhitespace
(char[] ch,
 int start,
 int length)
Deprecated.
Receive notification of ignorable whitespace in element content.
void
HandlerBase.
ignorableWhitespace
(char[] ch,
 int start,
 int length)
Deprecated.
Receive notification of ignorable whitespace in element content.
void
DTDHandler.
notationDecl
(
String
name,
String
publicId,
String
systemId)
Receive notification of a notation declaration event.
void
Parser.
parse
(
String
systemId)
Deprecated.
Parse an XML document from a system identifier (URI).
void
Parser.
parse
(
InputSource
source)
Deprecated.
Parse an XML document.
void
XMLReader.
parse
(
String
systemId)
Parse an XML document from a system identifier (URI).
void
XMLReader.
parse
(
InputSource
input)
Parse an XML document.
void
ContentHandler.
processingInstruction
(
String
target,
String
data)
Receive notification of a processing instruction.
void
DocumentHandler.
processingInstruction
(
String
target,
String
data)
Deprecated.
Receive notification of a processing instruction.
void
HandlerBase.
processingInstruction
(
String
target,
String
data)
Deprecated.
Receive notification of a processing instruction.
InputSource
EntityResolver.
resolveEntity
(
String
publicId,
String
systemId)
Allow the application to resolve external entities.
InputSource
HandlerBase.
resolveEntity
(
String
publicId,
String
systemId)
Deprecated.
Resolve an external entity.
void
Parser.
setLocale
(
Locale
locale)
Deprecated.
Allow an application to request a locale for errors and warnings.
void
ContentHandler.
skippedEntity
(
String
name)
Receive notification of a skipped entity.
void
ContentHandler.
startDocument
()
Receive notification of the beginning of a document.
void
DocumentHandler.
startDocument
()
Deprecated.
Receive notification of the beginning of a document.
void
HandlerBase.
startDocument
()
Deprecated.
Receive notification of the beginning of the document.
void
ContentHandler.
startElement
(
String
uri,
String
localName,
String
qName,
Attributes
atts)
Receive notification of the beginning of an element.
void
DocumentHandler.
startElement
(
String
name,
AttributeList
atts)
Deprecated.
Receive notification of the beginning of an element.
void
HandlerBase.
startElement
(
String
name,
AttributeList
attributes)
Deprecated.
Receive notification of the start of an element.
void
ContentHandler.
startPrefixMapping
(
String
prefix,
String
uri)
Begin the scope of a prefix-URI Namespace mapping.
void
DTDHandler.
unparsedEntityDecl
(
String
name,
String
publicId,
String
systemId,
String
notationName)
Receive notification of an unparsed entity declaration event.
void
ErrorHandler.
warning
(
SAXParseException
exception)
Receive notification of a warning.
void
HandlerBase.
warning
(
SAXParseException
e)
Deprecated.
Receive notification of a parser warning.
Uses of
SAXException
in
org.xml.sax.ext
Methods in
org.xml.sax.ext
that throw
SAXException
Modifier and Type
Method
Description
void
DeclHandler.
attributeDecl
(
String
eName,
String
aName,
String
type,
String
mode,
String
value)
Report an attribute type declaration.
void
DefaultHandler2.
attributeDecl
(
String
eName,
String
aName,
String
type,
String
mode,
String
value)
void
DefaultHandler2.
comment
(char[] ch,
 int start,
 int length)
void
LexicalHandler.
comment
(char[] ch,
 int start,
 int length)
Report an XML comment anywhere in the document.
void
DeclHandler.
elementDecl
(
String
name,
String
model)
Report an element type declaration.
void
DefaultHandler2.
elementDecl
(
String
name,
String
model)
void
DefaultHandler2.
endCDATA
()
void
LexicalHandler.
endCDATA
()
Report the end of a CDATA section.
void
DefaultHandler2.
endDTD
()
void
LexicalHandler.
endDTD
()
Report the end of DTD declarations.
void
DefaultHandler2.
endEntity
(
String
name)
void
LexicalHandler.
endEntity
(
String
name)
Report the end of an entity.
void
DeclHandler.
externalEntityDecl
(
String
name,
String
publicId,
String
systemId)
Report a parsed external entity declaration.
void
DefaultHandler2.
externalEntityDecl
(
String
name,
String
publicId,
String
systemId)
InputSource
DefaultHandler2.
getExternalSubset
(
String
name,
String
baseURI)
Tells the parser that if no external subset has been declared
 in the document text, none should be used.
InputSource
EntityResolver2.
getExternalSubset
(
String
name,
String
baseURI)
Allows applications to provide an external subset for documents
 that don't explicitly define one.
void
DeclHandler.
internalEntityDecl
(
String
name,
String
value)
Report an internal entity declaration.
void
DefaultHandler2.
internalEntityDecl
(
String
name,
String
value)
InputSource
DefaultHandler2.
resolveEntity
(
String
publicId,
String
systemId)
Invokes
EntityResolver2.resolveEntity()
with null entity name and base URI.
InputSource
DefaultHandler2.
resolveEntity
(
String
name,
String
publicId,
String
baseURI,
String
systemId)
Tells the parser to resolve the systemId against the baseURI
 and read the entity text from that resulting absolute URI.
InputSource
EntityResolver2.
resolveEntity
(
String
name,
String
publicId,
String
baseURI,
String
systemId)
Allows applications to map references to external entities into input
 sources, or tell the parser it should use conventional URI resolution.
void
DefaultHandler2.
startCDATA
()
void
LexicalHandler.
startCDATA
()
Report the start of a CDATA section.
void
DefaultHandler2.
startDTD
(
String
name,
String
publicId,
String
systemId)
void
LexicalHandler.
startDTD
(
String
name,
String
publicId,
String
systemId)
Report the start of DTD declarations, if any.
void
DefaultHandler2.
startEntity
(
String
name)
void
LexicalHandler.
startEntity
(
String
name)
Report the beginning of some internal and external XML entities.
Uses of
SAXException
in
org.xml.sax.helpers
Methods in
org.xml.sax.helpers
that throw
SAXException
Modifier and Type
Method
Description
void
DefaultHandler.
characters
(char[] ch,
 int start,
 int length)
Receive notification of character data inside an element.
void
ParserAdapter.
characters
(char[] ch,
 int start,
 int length)
Adapter implementation method; do not call.
void
XMLFilterImpl.
characters
(char[] ch,
 int start,
 int length)
Filter a character data event.
void
XMLReaderAdapter.
characters
(char[] ch,
 int start,
 int length)
Adapt a SAX2 characters event.
static
XMLReader
XMLReaderFactory.
createXMLReader
()
Deprecated.
Obtains a new instance of a
XMLReader
.
static
XMLReader
XMLReaderFactory.
createXMLReader
(
String
className)
Deprecated.
Attempt to create an XML reader from a class name.
void
DefaultHandler.
endDocument
()
Receive notification of the end of the document.
void
ParserAdapter.
endDocument
()
Adapter implementation method; do not call.
void
XMLFilterImpl.
endDocument
()
Filter an end document event.
void
XMLReaderAdapter.
endDocument
()
End document event.
void
DefaultHandler.
endElement
(
String
uri,
String
localName,
String
qName)
Receive notification of the end of an element.
void
ParserAdapter.
endElement
(
String
qName)
Adapter implementation method; do not call.
void
XMLFilterImpl.
endElement
(
String
uri,
String
localName,
String
qName)
Filter an end element event.
void
XMLReaderAdapter.
endElement
(
String
uri,
String
localName,
String
qName)
Adapt a SAX2 end element event.
void
DefaultHandler.
endPrefixMapping
(
String
prefix)
Receive notification of the end of a Namespace mapping.
void
XMLFilterImpl.
endPrefixMapping
(
String
prefix)
Filter an end Namespace prefix mapping event.
void
DefaultHandler.
error
(
SAXParseException
e)
Receive notification of a recoverable parser error.
void
XMLFilterImpl.
error
(
SAXParseException
e)
Filter an error event.
void
DefaultHandler.
fatalError
(
SAXParseException
e)
Report a fatal XML parsing error.
void
XMLFilterImpl.
fatalError
(
SAXParseException
e)
Filter a fatal error event.
void
DefaultHandler.
ignorableWhitespace
(char[] ch,
 int start,
 int length)
Receive notification of ignorable whitespace in element content.
void
ParserAdapter.
ignorableWhitespace
(char[] ch,
 int start,
 int length)
Adapter implementation method; do not call.
void
XMLFilterImpl.
ignorableWhitespace
(char[] ch,
 int start,
 int length)
Filter an ignorable whitespace event.
void
XMLReaderAdapter.
ignorableWhitespace
(char[] ch,
 int start,
 int length)
Adapt a SAX2 ignorable whitespace event.
void
DefaultHandler.
notationDecl
(
String
name,
String
publicId,
String
systemId)
Receive notification of a notation declaration.
void
XMLFilterImpl.
notationDecl
(
String
name,
String
publicId,
String
systemId)
Filter a notation declaration event.
void
ParserAdapter.
parse
(
String
systemId)
Parse an XML document.
void
ParserAdapter.
parse
(
InputSource
input)
Parse an XML document.
void
XMLFilterImpl.
parse
(
String
systemId)
Parse a document.
void
XMLFilterImpl.
parse
(
InputSource
input)
Parse a document.
void
XMLReaderAdapter.
parse
(
String
systemId)
Parse the document.
void
XMLReaderAdapter.
parse
(
InputSource
input)
Parse the document.
void
DefaultHandler.
processingInstruction
(
String
target,
String
data)
Receive notification of a processing instruction.
void
ParserAdapter.
processingInstruction
(
String
target,
String
data)
Adapter implementation method; do not call.
void
XMLFilterImpl.
processingInstruction
(
String
target,
String
data)
Filter a processing instruction event.
void
XMLReaderAdapter.
processingInstruction
(
String
target,
String
data)
Adapt a SAX2 processing instruction event.
InputSource
DefaultHandler.
resolveEntity
(
String
publicId,
String
systemId)
Resolve an external entity.
InputSource
XMLFilterImpl.
resolveEntity
(
String
publicId,
String
systemId)
Filter an external entity resolution.
void
XMLReaderAdapter.
setLocale
(
Locale
locale)
Set the locale for error reporting.
void
DefaultHandler.
skippedEntity
(
String
name)
Receive notification of a skipped entity.
void
XMLFilterImpl.
skippedEntity
(
String
name)
Filter a skipped entity event.
void
XMLReaderAdapter.
skippedEntity
(
String
name)
Adapt a SAX2 skipped entity event.
void
DefaultHandler.
startDocument
()
Receive notification of the beginning of the document.
void
ParserAdapter.
startDocument
()
Adapter implementation method; do not call.
void
XMLFilterImpl.
startDocument
()
Filter a start document event.
void
XMLReaderAdapter.
startDocument
()
Start document event.
void
DefaultHandler.
startElement
(
String
uri,
String
localName,
String
qName,
Attributes
attributes)
Receive notification of the start of an element.
void
ParserAdapter.
startElement
(
String
qName,
AttributeList
qAtts)
Adapter implementation method; do not call.
void
XMLFilterImpl.
startElement
(
String
uri,
String
localName,
String
qName,
Attributes
atts)
Filter a start element event.
void
XMLReaderAdapter.
startElement
(
String
uri,
String
localName,
String
qName,
Attributes
atts)
Adapt a SAX2 start element event.
void
DefaultHandler.
startPrefixMapping
(
String
prefix,
String
uri)
Receive notification of the start of a Namespace mapping.
void
XMLFilterImpl.
startPrefixMapping
(
String
prefix,
String
uri)
Filter a start Namespace prefix mapping event.
void
DefaultHandler.
unparsedEntityDecl
(
String
name,
String
publicId,
String
systemId,
String
notationName)
Receive notification of an unparsed entity declaration.
void
XMLFilterImpl.
unparsedEntityDecl
(
String
name,
String
publicId,
String
systemId,
String
notationName)
Filter an unparsed entity declaration event.
void
DefaultHandler.
warning
(
SAXParseException
e)
Receive notification of a parser warning.
void
XMLFilterImpl.
warning
(
SAXParseException
e)
Filter a warning event.
Constructors in
org.xml.sax.helpers
that throw
SAXException
Modifier
Constructor
Description
ParserAdapter
()
Construct a new parser adapter.
XMLReaderAdapter
()
Create a new adapter.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.