Tree (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
jdk.compiler
Package
com.sun.source.tree
Interface Tree
All Known Subinterfaces:
AnnotatedTypeTree
,
AnnotationTree
,
AnyPatternTree
PREVIEW
,
ArrayAccessTree
,
ArrayTypeTree
,
AssertTree
,
AssignmentTree
,
BinaryTree
,
BindingPatternTree
,
BlockTree
,
BreakTree
,
CaseLabelTree
,
CaseTree
,
CatchTree
,
ClassTree
,
CompilationUnitTree
,
CompoundAssignmentTree
,
ConditionalExpressionTree
,
ConstantCaseLabelTree
,
ContinueTree
,
DeconstructionPatternTree
,
DefaultCaseLabelTree
,
DirectiveTree
,
DoWhileLoopTree
,
EmptyStatementTree
,
EnhancedForLoopTree
,
ErroneousTree
,
ExportsTree
,
ExpressionStatementTree
,
ExpressionTree
,
ForLoopTree
,
IdentifierTree
,
IfTree
,
ImportTree
,
InstanceOfTree
,
IntersectionTypeTree
,
LabeledStatementTree
,
LambdaExpressionTree
,
LiteralTree
,
MemberReferenceTree
,
MemberSelectTree
,
MethodInvocationTree
,
MethodTree
,
ModifiersTree
,
ModuleTree
,
NewArrayTree
,
NewClassTree
,
OpensTree
,
PackageTree
,
ParameterizedTypeTree
,
ParenthesizedTree
,
PatternCaseLabelTree
,
PatternTree
,
PrimitiveTypeTree
,
ProvidesTree
,
RequiresTree
,
ReturnTree
,
StatementTree
,
StringTemplateTree
PREVIEW
,
SwitchExpressionTree
,
SwitchTree
,
SynchronizedTree
,
ThrowTree
,
TryTree
,
TypeCastTree
,
TypeParameterTree
,
UnaryTree
,
UnionTypeTree
,
UsesTree
,
VariableTree
,
WhileLoopTree
,
WildcardTree
,
YieldTree
public interface
Tree
Common interface for all nodes in an abstract syntax tree.
WARNING:
This interface and its sub-interfaces are
 subject to change as the Java programming language evolves.
 These interfaces are implemented by the JDK Java compiler (javac)
 and should not be implemented either directly or indirectly by
 other applications.
Since:
1.6
Nested Class Summary
Nested Classes
Modifier and Type
Interface
Description
static enum
Tree.Kind
Enumerates all kinds of trees.
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
<R,
D> R
accept
(
TreeVisitor
<R,
D> visitor,
 D data)
Accept method used to implement the visitor pattern.
Tree.Kind
getKind
()
Returns the kind of this tree.
Method Details
getKind
Tree.Kind
getKind
()
Returns the kind of this tree.
Returns:
the kind of this tree
accept
<R,
D>
R
accept
(
TreeVisitor
<R,
D> visitor,
 D data)
Accept method used to implement the visitor pattern.  The
 visitor pattern is used to implement operations on trees.
Type Parameters:
R
- the result type of this operation
D
- the type of additional data
Parameters:
visitor
- the visitor to be called
data
- a value to be passed to the visitor
Returns:
the result returned from calling the visitor
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.