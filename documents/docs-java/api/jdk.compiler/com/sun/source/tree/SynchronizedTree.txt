SynchronizedTree (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
jdk.compiler
Package
com.sun.source.tree
Interface SynchronizedTree
All Superinterfaces:
StatementTree
,
Tree
public interface
SynchronizedTree
extends
StatementTree
A tree node for a
synchronized
statement.

 For example:
synchronized (
expression
)
block
See
Java Language Specification
:
14.19 The synchronized Statement
Since:
1.6
Nested Class Summary
Nested classes/interfaces declared in interface com.sun.source.tree.
Tree
Tree.Kind
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
BlockTree
getBlock
()
Returns the block of the
synchronized
statement.
ExpressionTree
getExpression
()
Returns the expression on which to synchronize.
Methods declared in interface com.sun.source.tree.
Tree
accept
,
getKind
Method Details
getExpression
ExpressionTree
getExpression
()
Returns the expression on which to synchronize.
Returns:
the expression
getBlock
BlockTree
getBlock
()
Returns the block of the
synchronized
statement.
Returns:
the block
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.