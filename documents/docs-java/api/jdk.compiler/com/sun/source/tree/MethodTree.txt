MethodTree (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
jdk.compiler
Package
com.sun.source.tree
Interface MethodTree
All Superinterfaces:
Tree
public interface
MethodTree
extends
Tree
A tree node for a method or annotation type element declaration.

 For example:
modifiers
typeParameters
type
name
(
parameters
)
body
modifiers
type
name
() default
defaultValue
See
Java Language Specification
:
8.4 Method Declarations
8.6 Instance Initializers
8.7 Static Initializers
9.4 Method Declarations
9.6.1 Annotation Type Elements
Since:
1.6
Nested Class Summary
Nested classes/interfaces declared in interface com.sun.source.tree.
Tree
Tree.Kind
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
BlockTree
getBody
()
Returns the method body, or
null
if this is an abstract or native method.
Tree
getDefaultValue
()
Returns the default value, if this is an element within
 an annotation type declaration.
ModifiersTree
getModifiers
()
Returns the modifiers, including any annotations for the method being declared.
Name
getName
()
Returns the name of the method being declared.
List
<? extends
VariableTree
>
getParameters
()
Returns the parameters of the method being declared.
VariableTree
getReceiverParameter
()
Return an explicit receiver parameter ("this" parameter),
 or
null
if none.
Tree
getReturnType
()
Returns the return type of the method being declared.
List
<? extends
ExpressionTree
>
getThrows
()
Returns the exceptions listed as being thrown by this method.
List
<? extends
TypeParameterTree
>
getTypeParameters
()
Returns the type parameters of the method being declared.
Methods declared in interface com.sun.source.tree.
Tree
accept
,
getKind
Method Details
getModifiers
ModifiersTree
getModifiers
()
Returns the modifiers, including any annotations for the method being declared.
Returns:
the modifiers
getName
Name
getName
()
Returns the name of the method being declared.
Returns:
the name
getReturnType
Tree
getReturnType
()
Returns the return type of the method being declared.
 Returns
null
for a constructor.
Returns:
the return type
getTypeParameters
List
<? extends
TypeParameterTree
>
getTypeParameters
()
Returns the type parameters of the method being declared.
Returns:
the type parameters
getParameters
List
<? extends
VariableTree
>
getParameters
()
Returns the parameters of the method being declared.
Returns:
the parameters
getReceiverParameter
VariableTree
getReceiverParameter
()
Return an explicit receiver parameter ("this" parameter),
 or
null
if none.
Returns:
an explicit receiver parameter ("this" parameter)
Since:
1.8
getThrows
List
<? extends
ExpressionTree
>
getThrows
()
Returns the exceptions listed as being thrown by this method.
Returns:
the exceptions
getBody
BlockTree
getBody
()
Returns the method body, or
null
if this is an abstract or native method.
Returns:
the method body
getDefaultValue
Tree
getDefaultValue
()
Returns the default value, if this is an element within
 an annotation type declaration.
 Returns
null
otherwise.
Returns:
the default value
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.