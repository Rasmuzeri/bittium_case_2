Uses of Package java.rmi (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Package
java.rmi
Packages that use
java.rmi
Package
Description
java.rmi
Provides the RMI package.
java.rmi.dgc
Provides classes and interface for RMI distributed
 garbage-collection (DGC).
java.rmi.registry
Provides a class and two interfaces for the RMI registry.
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
Classes in
java.rmi
used by
java.rmi
Class
Description
AlreadyBoundException
An
AlreadyBoundException
is thrown if an attempt
 is made to bind an object to a name that already
 has an associated binding in the registry.
NotBoundException
A
NotBoundException
is thrown if an attempt
 is made to lookup or unbind in the registry a name that has
 no associated binding.
Remote
The
Remote
interface serves to identify interfaces whose
 methods may be invoked from a non-local virtual machine.
RemoteException
A
RemoteException
is the common superclass for a number of
 communication-related exceptions that may occur during the execution of a
 remote method call.
Classes in
java.rmi
used by
java.rmi.dgc
Class
Description
Remote
The
Remote
interface serves to identify interfaces whose
 methods may be invoked from a non-local virtual machine.
RemoteException
A
RemoteException
is the common superclass for a number of
 communication-related exceptions that may occur during the execution of a
 remote method call.
Classes in
java.rmi
used by
java.rmi.registry
Class
Description
AccessException
An
AccessException
is thrown by certain methods of the
java.rmi.Naming
class (specifically
bind
,
rebind
, and
unbind
) to
 indicate that the caller does not have permission to perform the action
 requested by the method call.
AlreadyBoundException
An
AlreadyBoundException
is thrown if an attempt
 is made to bind an object to a name that already
 has an associated binding in the registry.
NotBoundException
A
NotBoundException
is thrown if an attempt
 is made to lookup or unbind in the registry a name that has
 no associated binding.
Remote
The
Remote
interface serves to identify interfaces whose
 methods may be invoked from a non-local virtual machine.
RemoteException
A
RemoteException
is the common superclass for a number of
 communication-related exceptions that may occur during the execution of a
 remote method call.
UnknownHostException
An
UnknownHostException
is thrown if a
java.net.UnknownHostException
occurs while creating
 a connection to the remote host for a remote method call.
Classes in
java.rmi
used by
java.rmi.server
Class
Description
NoSuchObjectException
A
NoSuchObjectException
is thrown if an attempt is made to
 invoke a method on an object that no longer exists in the remote virtual
 machine.
Remote
The
Remote
interface serves to identify interfaces whose
 methods may be invoked from a non-local virtual machine.
RemoteException
A
RemoteException
is the common superclass for a number of
 communication-related exceptions that may occur during the execution of a
 remote method call.
Classes in
java.rmi
used by
javax.management.remote.rmi
Class
Description
MarshalledObject
A
MarshalledObject
contains a byte stream with the serialized
 representation of an object given to its constructor.
Remote
The
Remote
interface serves to identify interfaces whose
 methods may be invoked from a non-local virtual machine.
RemoteException
A
RemoteException
is the common superclass for a number of
 communication-related exceptions that may occur during the execution of a
 remote method call.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.