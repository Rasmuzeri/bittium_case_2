Uses of Interface java.rmi.Remote (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.rmi.Remote
Packages that use
Remote
Package
Description
java.rmi
Provides the RMI package.
java.rmi.dgc
Provides classes and interface for RMI distributed
 garbage-collection (DGC).
java.rmi.registry
Provides a class and two interfaces for the RMI registry.
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
Uses of
Remote
in
java.rmi
Methods in
java.rmi
that return
Remote
Modifier and Type
Method
Description
static
Remote
Naming.
lookup
(
String
name)
Returns a reference, a stub, for the remote object associated
 with the specified
name
.
Methods in
java.rmi
with parameters of type
Remote
Modifier and Type
Method
Description
static void
Naming.
bind
(
String
name,
Remote
obj)
Binds the specified
name
to a remote object.
static void
Naming.
rebind
(
String
name,
Remote
obj)
Rebinds the specified name to a new remote object.
Uses of
Remote
in
java.rmi.dgc
Subinterfaces of
Remote
in
java.rmi.dgc
Modifier and Type
Interface
Description
interface
DGC
The DGC abstraction is used for the server side of the distributed
 garbage collection algorithm.
Uses of
Remote
in
java.rmi.registry
Subinterfaces of
Remote
in
java.rmi.registry
Modifier and Type
Interface
Description
interface
Registry
Registry
is a remote interface to a simple remote
 object registry that provides methods for storing and retrieving
 remote object references bound with arbitrary string names.
Methods in
java.rmi.registry
that return
Remote
Modifier and Type
Method
Description
Remote
Registry.
lookup
(
String
name)
Returns the remote reference bound to the specified
name
in this registry.
Methods in
java.rmi.registry
with parameters of type
Remote
Modifier and Type
Method
Description
void
Registry.
bind
(
String
name,
Remote
obj)
Binds a remote reference to the specified
name
in
 this registry.
void
Registry.
rebind
(
String
name,
Remote
obj)
Replaces the binding for the specified
name
in
 this registry with the supplied remote reference.
Uses of
Remote
in
java.rmi.server
Classes in
java.rmi.server
that implement
Remote
Modifier and Type
Class
Description
class
RemoteObject
The
RemoteObject
class implements the
java.lang.Object
behavior for remote objects.
class
RemoteObjectInvocationHandler
An implementation of the
InvocationHandler
interface for
 use with Java Remote Method Invocation (Java RMI).
class
RemoteServer
The
RemoteServer
class is the common superclass to server
 implementations and provides the framework to support a wide range
 of remote reference semantics.
class
RemoteStub
Deprecated.
Statically generated stubs are deprecated, since
 stubs are generated dynamically.
class
UnicastRemoteObject
Used for exporting a remote object with JRMP and obtaining a stub
 that communicates to the remote object.
Methods in
java.rmi.server
that return
Remote
Modifier and Type
Method
Description
static
Remote
UnicastRemoteObject.
exportObject
(
Remote
obj,
 int port)
Exports the remote object to make it available to receive incoming
 calls, using the particular supplied port.
static
Remote
UnicastRemoteObject.
exportObject
(
Remote
obj,
 int port,
ObjectInputFilter
filter)
Exports the remote object to make it available to receive incoming
 calls, using the particular supplied port
 and
filter
.
static
Remote
UnicastRemoteObject.
exportObject
(
Remote
obj,
 int port,
RMIClientSocketFactory
csf,
RMIServerSocketFactory
ssf)
Exports the remote object to make it available to receive incoming
 calls, using a transport specified by the given socket factory.
static
Remote
UnicastRemoteObject.
exportObject
(
Remote
obj,
 int port,
RMIClientSocketFactory
csf,
RMIServerSocketFactory
ssf,
ObjectInputFilter
filter)
Exports the remote object to make it available to receive incoming
 calls, using a transport specified by the given socket factory
 and
filter
.
static
Remote
RemoteObject.
toStub
(
Remote
obj)
Returns the stub for the remote object
obj
passed
 as a parameter.
Methods in
java.rmi.server
with parameters of type
Remote
Modifier and Type
Method
Description
void
Skeleton.
dispatch
(
Remote
obj,
RemoteCall
theCall,
 int opnum,
 long hash)
Deprecated.
no replacement
RemoteStub
ServerRef.
exportObject
(
Remote
obj,
Object
data)
Deprecated.
Creates a client stub object for the supplied Remote object.
static
RemoteStub
UnicastRemoteObject.
exportObject
(
Remote
obj)
Deprecated.
This method is deprecated because it supports only static stubs.
static
Remote
UnicastRemoteObject.
exportObject
(
Remote
obj,
 int port)
Exports the remote object to make it available to receive incoming
 calls, using the particular supplied port.
static
Remote
UnicastRemoteObject.
exportObject
(
Remote
obj,
 int port,
ObjectInputFilter
filter)
Exports the remote object to make it available to receive incoming
 calls, using the particular supplied port
 and
filter
.
static
Remote
UnicastRemoteObject.
exportObject
(
Remote
obj,
 int port,
RMIClientSocketFactory
csf,
RMIServerSocketFactory
ssf)
Exports the remote object to make it available to receive incoming
 calls, using a transport specified by the given socket factory.
static
Remote
UnicastRemoteObject.
exportObject
(
Remote
obj,
 int port,
RMIClientSocketFactory
csf,
RMIServerSocketFactory
ssf,
ObjectInputFilter
filter)
Exports the remote object to make it available to receive incoming
 calls, using a transport specified by the given socket factory
 and
filter
.
Object
RemoteRef.
invoke
(
Remote
obj,
Method
method,
Object
[] params,
 long opnum)
Invoke a method.
static
Remote
RemoteObject.
toStub
(
Remote
obj)
Returns the stub for the remote object
obj
passed
 as a parameter.
static boolean
UnicastRemoteObject.
unexportObject
(
Remote
obj,
 boolean force)
Removes the remote object, obj, from the RMI runtime.
Uses of
Remote
in
javax.management.remote.rmi
Subinterfaces of
Remote
in
javax.management.remote.rmi
Modifier and Type
Interface
Description
interface
RMIConnection
RMI object used to forward an MBeanServer request from a client
 to its MBeanServer implementation on the server side.
interface
RMIServer
RMI object used to establish connections to an RMI connector.
Classes in
javax.management.remote.rmi
that implement
Remote
Modifier and Type
Class
Description
class
RMIConnectionImpl
Implementation of the
RMIConnection
interface.
final class
RMIConnectionImpl_Stub
RMIConnectionImpl remote stub.
class
RMIJRMPServerImpl
An
RMIServer
object that is exported through JRMP and that
 creates client connections as RMI objects exported through JRMP.
class
RMIServerImpl
An RMI object representing a connector server.
final class
RMIServerImpl_Stub
RMIServerImpl remote stub.
Methods in
javax.management.remote.rmi
that return
Remote
Modifier and Type
Method
Description
Remote
RMIJRMPServerImpl.
toStub
()
Returns a serializable stub for this
RMIServer
object.
abstract
Remote
RMIServerImpl.
toStub
()
Returns a remotable stub for this server object.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.