Uses of Class java.rmi.server.RemoteObject (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.rmi.server.RemoteObject
Packages that use
RemoteObject
Package
Description
java.rmi.server
Provides classes and interfaces for supporting the server side of RMI.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
Uses of
RemoteObject
in
java.rmi.server
Subclasses of
RemoteObject
in
java.rmi.server
Modifier and Type
Class
Description
class
RemoteObjectInvocationHandler
An implementation of the
InvocationHandler
interface for
 use with Java Remote Method Invocation (Java RMI).
class
RemoteServer
The
RemoteServer
class is the common superclass to server
 implementations and provides the framework to support a wide range
 of remote reference semantics.
class
RemoteStub
Deprecated.
Statically generated stubs are deprecated, since
 stubs are generated dynamically.
class
UnicastRemoteObject
Used for exporting a remote object with JRMP and obtaining a stub
 that communicates to the remote object.
Methods in
java.rmi.server
with parameters of type
RemoteObject
Modifier and Type
Method
Description
RemoteCall
RemoteRef.
newCall
(
RemoteObject
obj,
Operation
[] op,
 int opnum,
 long hash)
Deprecated.
1.2 style stubs no longer use this method.
Uses of
RemoteObject
in
javax.management.remote.rmi
Subclasses of
RemoteObject
in
javax.management.remote.rmi
Modifier and Type
Class
Description
final class
RMIConnectionImpl_Stub
RMIConnectionImpl remote stub.
final class
RMIServerImpl_Stub
RMIServerImpl remote stub.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.