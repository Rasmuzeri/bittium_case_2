StandardLocation (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Enum Constants
Field
Method
Detail:
Enum Constants
Field
Method
Summary:
Nested
|
Enum Constants
|
Field |
Method
Detail:
Enum Constants
|
Field |
Method
SEARCH
Module
java.compiler
Package
javax.tools
Enum Class StandardLocation
java.lang.Object
java.lang.Enum
<
StandardLocation
>
javax.tools.StandardLocation
All Implemented Interfaces:
Serializable
,
Comparable
<
StandardLocation
>
,
Constable
,
JavaFileManager.Location
public enum
StandardLocation
extends
Enum
<
StandardLocation
>
implements
JavaFileManager.Location
Standard locations of file objects.
Since:
1.6
Nested Class Summary
Nested classes/interfaces declared in class java.lang.
Enum
Enum.EnumDesc
<
E
extends
Enum
<
E
>>
Enum Constant Summary
Enum Constants
Enum Constant
Description
ANNOTATION_PROCESSOR_MODULE_PATH
Location to search for modules containing annotation processors.
ANNOTATION_PROCESSOR_PATH
Location to search for annotation processors.
CLASS_OUTPUT
Location of new class files.
CLASS_PATH
Location to search for user class files.
MODULE_PATH
Location to search for precompiled user modules.
MODULE_SOURCE_PATH
Location to search for the source code of modules.
NATIVE_HEADER_OUTPUT
Location of new native header files.
PATCH_MODULE_PATH
Location to search for module patches.
PLATFORM_CLASS_PATH
Location to search for platform classes.
SOURCE_OUTPUT
Location of new source files.
SOURCE_PATH
Location to search for existing source files.
SYSTEM_MODULES
Location to search for system modules.
UPGRADE_MODULE_PATH
Location to search for upgradeable system modules.
Method Summary
All Methods
Static Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
String
getName
()
Returns the name of this location.
boolean
isModuleOrientedLocation
()
Indicates if this location is module-oriented location, and therefore
 expected to contain classes in a
module/package/class
hierarchy, as compared to a package-oriented location, which
 is expected to contain classes in a
package/class
hierarchy.
boolean
isOutputLocation
()
Determines if this is an output location.
static
JavaFileManager.Location
locationFor
(
String
name)
Returns a location object with the given name.
static
StandardLocation
valueOf
(
String
name)
Returns the enum constant of this class with the specified name.
static
StandardLocation
[]
values
()
Returns an array containing the constants of this enum class, in
the order they are declared.
Methods declared in class java.lang.
Enum
clone
,
compareTo
,
describeConstable
,
equals
,
finalize
,
getDeclaringClass
,
hashCode
,
name
,
ordinal
,
toString
,
valueOf
Methods declared in class java.lang.
Object
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Enum Constant Details
CLASS_OUTPUT
public static final
StandardLocation
CLASS_OUTPUT
Location of new class files.
SOURCE_OUTPUT
public static final
StandardLocation
SOURCE_OUTPUT
Location of new source files.
CLASS_PATH
public static final
StandardLocation
CLASS_PATH
Location to search for user class files.
SOURCE_PATH
public static final
StandardLocation
SOURCE_PATH
Location to search for existing source files.
ANNOTATION_PROCESSOR_PATH
public static final
StandardLocation
ANNOTATION_PROCESSOR_PATH
Location to search for annotation processors.
ANNOTATION_PROCESSOR_MODULE_PATH
public static final
StandardLocation
ANNOTATION_PROCESSOR_MODULE_PATH
Location to search for modules containing annotation processors.
Since:
9
PLATFORM_CLASS_PATH
public static final
StandardLocation
PLATFORM_CLASS_PATH
Location to search for platform classes.  Sometimes called
 the boot class path.
NATIVE_HEADER_OUTPUT
public static final
StandardLocation
NATIVE_HEADER_OUTPUT
Location of new native header files.
Since:
1.8
MODULE_SOURCE_PATH
public static final
StandardLocation
MODULE_SOURCE_PATH
Location to search for the source code of modules.
Since:
9
UPGRADE_MODULE_PATH
public static final
StandardLocation
UPGRADE_MODULE_PATH
Location to search for upgradeable system modules.
Since:
9
SYSTEM_MODULES
public static final
StandardLocation
SYSTEM_MODULES
Location to search for system modules.
Since:
9
MODULE_PATH
public static final
StandardLocation
MODULE_PATH
Location to search for precompiled user modules.
Since:
9
PATCH_MODULE_PATH
public static final
StandardLocation
PATCH_MODULE_PATH
Location to search for module patches.
Since:
9
Method Details
values
public static
StandardLocation
[]
values
()
Returns an array containing the constants of this enum class, in
the order they are declared.
Returns:
an array containing the constants of this enum class, in the order they are declared
valueOf
public static
StandardLocation
valueOf
(
String
name)
Returns the enum constant of this class with the specified name.
The string must match
exactly
an identifier used to declare an
enum constant in this class.  (Extraneous whitespace characters are 
not permitted.)
Parameters:
name
- the name of the enum constant to be returned.
Returns:
the enum constant with the specified name
Throws:
IllegalArgumentException
- if this enum class has no constant with the specified name
NullPointerException
- if the argument is null
locationFor
public static
JavaFileManager.Location
locationFor
(
String
name)
Returns a location object with the given name.  The following
 property must hold:
locationFor(x) ==
 locationFor(y)
if and only if
x.equals(y)
.
 The returned location will be an output location if and only if
 name ends with
"_OUTPUT"
. It will be considered to
 be a module-oriented location if the name contains the word
"MODULE"
.
Parameters:
name
- a name
Returns:
a location
getName
public
String
getName
()
Description copied from interface:
JavaFileManager.Location
Returns the name of this location.
Specified by:
getName
in interface
JavaFileManager.Location
Returns:
a name
isOutputLocation
public
boolean
isOutputLocation
()
Description copied from interface:
JavaFileManager.Location
Determines if this is an output location.
 An output location is a location that is conventionally used for
 output.
Specified by:
isOutputLocation
in interface
JavaFileManager.Location
Returns:
true if this is an output location, false otherwise
isModuleOrientedLocation
public
boolean
isModuleOrientedLocation
()
Indicates if this location is module-oriented location, and therefore
 expected to contain classes in a
module/package/class
hierarchy, as compared to a package-oriented location, which
 is expected to contain classes in a
package/class
hierarchy.
 The result of this method is undefined if this is an output
 location.
Specified by:
isModuleOrientedLocation
in interface
JavaFileManager.Location
Returns:
true if this location is expected to contain modules
Since:
9
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.