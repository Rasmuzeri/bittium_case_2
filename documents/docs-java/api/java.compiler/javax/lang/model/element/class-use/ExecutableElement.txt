Uses of Interface javax.lang.model.element.ExecutableElement (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
javax.lang.model.element.ExecutableElement
Packages that use
ExecutableElement
Package
Description
com.sun.source.tree
Provides interfaces to represent source code as abstract syntax
 trees (AST).
com.sun.source.util
Provides utilities for operations on abstract syntax trees (AST).
javax.annotation.processing
Facilities for declaring annotation processors and for
 allowing annotation processors to communicate with an annotation processing
 tool environment.
javax.lang.model.element
Interfaces used to model elements of the Java programming language.
javax.lang.model.util
Utilities to assist in the processing of
program elements
and
types
.
Uses of
ExecutableElement
in
com.sun.source.tree
Methods in
com.sun.source.tree
that return
ExecutableElement
Modifier and Type
Method
Description
ExecutableElement
Scope.
getEnclosingMethod
()
Returns the innermost executable element containing the position of this scope.
Uses of
ExecutableElement
in
com.sun.source.util
Methods in
com.sun.source.util
with parameters of type
ExecutableElement
Modifier and Type
Method
Description
abstract
MethodTree
Trees.
getTree
(
ExecutableElement
method)
Returns the
MethodTree
node for a given
ExecutableElement
.
Uses of
ExecutableElement
in
javax.annotation.processing
Methods in
javax.annotation.processing
with parameters of type
ExecutableElement
Modifier and Type
Method
Description
Iterable
<? extends
Completion
>
AbstractProcessor.
getCompletions
(
Element
element,
AnnotationMirror
annotation,
ExecutableElement
member,
String
userText)
Returns an empty iterable of completions.
Iterable
<? extends
Completion
>
Processor.
getCompletions
(
Element
element,
AnnotationMirror
annotation,
ExecutableElement
member,
String
userText)
Returns to the tool infrastructure an iterable of suggested
 completions to an annotation.
Uses of
ExecutableElement
in
javax.lang.model.element
Methods in
javax.lang.model.element
that return
ExecutableElement
Modifier and Type
Method
Description
ExecutableElement
RecordComponentElement.
getAccessor
()
Returns the executable element for the accessor associated with the
 given record component.
Methods in
javax.lang.model.element
that return types with arguments of type
ExecutableElement
Modifier and Type
Method
Description
Map
<? extends
ExecutableElement
,
? extends
AnnotationValue
>
AnnotationMirror.
getElementValues
()
Returns the values of this annotation's elements.
Methods in
javax.lang.model.element
with parameters of type
ExecutableElement
Modifier and Type
Method
Description
R
ElementVisitor.
visitExecutable
(
ExecutableElement
e,
P
p)
Visits an executable element.
Uses of
ExecutableElement
in
javax.lang.model.util
Methods in
javax.lang.model.util
that return types with arguments of type
ExecutableElement
Modifier and Type
Method
Description
static
List
<
ExecutableElement
>
ElementFilter.
constructorsIn
(
Iterable
<? extends
Element
> elements)
Returns a list of constructors in
elements
.
static
Set
<
ExecutableElement
>
ElementFilter.
constructorsIn
(
Set
<? extends
Element
> elements)
Returns a set of constructors in
elements
.
Map
<? extends
ExecutableElement
,
? extends
AnnotationValue
>
Elements.
getElementValuesWithDefaults
(
AnnotationMirror
a)
Returns the values of an annotation's elements, including defaults.
static
List
<
ExecutableElement
>
ElementFilter.
methodsIn
(
Iterable
<? extends
Element
> elements)
Returns a list of methods in
elements
.
static
Set
<
ExecutableElement
>
ElementFilter.
methodsIn
(
Set
<? extends
Element
> elements)
Returns a set of methods in
elements
.
Methods in
javax.lang.model.util
with parameters of type
ExecutableElement
Modifier and Type
Method
Description
default boolean
Elements.
isBridge
(
ExecutableElement
e)
Returns
true
if the executable element is a bridge
 method,
false
otherwise.
default boolean
Elements.
isCanonicalConstructor
(
ExecutableElement
e)
Returns
true
if the executable element can be
 determined to be a canonical constructor of a record,
false
otherwise.
default boolean
Elements.
isCompactConstructor
(
ExecutableElement
e)
Returns
true
if the executable element can be
 determined to be a compact constructor of a record,
false
otherwise.
boolean
Elements.
overrides
(
ExecutableElement
overrider,
ExecutableElement
overridden,
TypeElement
type)
Tests whether one method, as a member of a given class or interface,
 overrides another method.
default
RecordComponentElement
Elements.
recordComponentFor
(
ExecutableElement
accessor)
Returns the record component for the given accessor.
R
ElementKindVisitor6.
visitExecutable
(
ExecutableElement
e,
P
p)
Visits an executable element.
R
ElementScanner14.
visitExecutable
(
ExecutableElement
e,
P
p)
Visits an executable element.
R
ElementScanner6.
visitExecutable
(
ExecutableElement
e,
P
p)
Visits an executable element.
R
SimpleElementVisitor6.
visitExecutable
(
ExecutableElement
e,
P
p)
Visits an executable element.
R
ElementKindVisitor6.
visitExecutableAsConstructor
(
ExecutableElement
e,
P
p)
Visits a
CONSTRUCTOR
executable element.
R
ElementKindVisitor6.
visitExecutableAsInstanceInit
(
ExecutableElement
e,
P
p)
Visits an
INSTANCE_INIT
executable element.
R
ElementKindVisitor6.
visitExecutableAsMethod
(
ExecutableElement
e,
P
p)
Visits a
METHOD
executable element.
R
ElementKindVisitor6.
visitExecutableAsStaticInit
(
ExecutableElement
e,
P
p)
Visits a
STATIC_INIT
executable element.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.