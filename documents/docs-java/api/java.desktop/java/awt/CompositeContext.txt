CompositeContext (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.desktop
Package
java.awt
Interface CompositeContext
public interface
CompositeContext
The
CompositeContext
interface defines the encapsulated
 and optimized environment for a compositing operation.
CompositeContext
objects maintain state for
 compositing operations.  In a multi-threaded environment, several
 contexts can exist simultaneously for a single
Composite
object.
See Also:
Composite
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
void
compose
(
Raster
src,
Raster
dstIn,
WritableRaster
dstOut)
Composes the two source
Raster
objects and
 places the result in the destination
WritableRaster
.
void
dispose
()
Releases resources allocated for a context.
Method Details
dispose
void
dispose
()
Releases resources allocated for a context.
compose
void
compose
(
Raster
src,
Raster
dstIn,
WritableRaster
dstOut)
Composes the two source
Raster
objects and
 places the result in the destination
WritableRaster
.  Note that the destination
 can be the same object as either the first or second
 source. Note that
dstIn
and
dstOut
must be compatible with the
dstColorModel
passed to the
createContext
method of the
Composite
interface.
Parameters:
src
- the first source for the compositing operation
dstIn
- the second source for the compositing operation
dstOut
- the
WritableRaster
into which the
 result of the operation is stored
See Also:
Composite
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.