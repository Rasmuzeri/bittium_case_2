Uses of Class java.awt.image.WritableRaster (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.image.WritableRaster
Packages that use
WritableRaster
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.image
Provides classes for creating and modifying images.
Uses of
WritableRaster
in
java.awt
Methods in
java.awt
with parameters of type
WritableRaster
Modifier and Type
Method
Description
void
CompositeContext.
compose
(
Raster
src,
Raster
dstIn,
WritableRaster
dstOut)
Composes the two source
Raster
objects and
 places the result in the destination
WritableRaster
.
Uses of
WritableRaster
in
java.awt.image
Methods in
java.awt.image
that return
WritableRaster
Modifier and Type
Method
Description
WritableRaster
BufferedImage.
copyData
(
WritableRaster
outRaster)
Computes an arbitrary rectangular region of the
BufferedImage
and copies it into a specified
WritableRaster
.
WritableRaster
RenderedImage.
copyData
(
WritableRaster
raster)
Computes an arbitrary rectangular region of the RenderedImage
 and copies it into a caller-supplied WritableRaster.
static
WritableRaster
Raster.
createBandedRaster
(int dataType,
 int w,
 int h,
 int scanlineStride,
 int[] bankIndices,
 int[] bandOffsets,
Point
location)
Creates a Raster based on a BandedSampleModel with the
 specified data type, width, height, scanline stride, bank
 indices and band offsets.
static
WritableRaster
Raster.
createBandedRaster
(int dataType,
 int w,
 int h,
 int bands,
Point
location)
Creates a Raster based on a BandedSampleModel with the
 specified data type, width, height, and number of bands.
static
WritableRaster
Raster.
createBandedRaster
(
DataBuffer
dataBuffer,
 int w,
 int h,
 int scanlineStride,
 int[] bankIndices,
 int[] bandOffsets,
Point
location)
Creates a Raster based on a BandedSampleModel with the
 specified DataBuffer, width, height, scanline stride, bank
 indices, and band offsets.
WritableRaster
AffineTransformOp.
createCompatibleDestRaster
(
Raster
src)
Creates a zeroed destination
Raster
with the correct size
 and number of bands.
WritableRaster
BandCombineOp.
createCompatibleDestRaster
(
Raster
src)
Creates a zeroed destination
Raster
with the correct size
 and number of bands.
WritableRaster
ColorConvertOp.
createCompatibleDestRaster
(
Raster
src)
Creates a zeroed destination Raster with the correct size and number of
 bands, given this source.
WritableRaster
ConvolveOp.
createCompatibleDestRaster
(
Raster
src)
Creates a zeroed destination Raster with the correct size and number
 of bands, given this source.
WritableRaster
LookupOp.
createCompatibleDestRaster
(
Raster
src)
Creates a zeroed-destination
Raster
with the
 correct size and number of bands, given this source.
WritableRaster
RasterOp.
createCompatibleDestRaster
(
Raster
src)
Creates a zeroed destination Raster with the correct size and number of
 bands.
WritableRaster
RescaleOp.
createCompatibleDestRaster
(
Raster
src)
Creates a zeroed-destination
Raster
with the correct
 size and number of bands, given this source.
WritableRaster
ColorModel.
createCompatibleWritableRaster
(int w,
 int h)
Creates a
WritableRaster
with the specified width and
 height that has a data layout (
SampleModel
) compatible
 with this
ColorModel
.
WritableRaster
ComponentColorModel.
createCompatibleWritableRaster
(int w,
 int h)
Creates a
WritableRaster
with the specified width and height,
 that  has a data layout (
SampleModel
) compatible with
 this
ColorModel
.
final
WritableRaster
DirectColorModel.
createCompatibleWritableRaster
(int w,
 int h)
Creates a
WritableRaster
with the specified width and
 height that has a data layout (
SampleModel
) compatible
 with this
ColorModel
.
WritableRaster
IndexColorModel.
createCompatibleWritableRaster
(int w,
 int h)
Creates a
WritableRaster
with the specified width
 and height that has a data layout (
SampleModel
)
 compatible with this
ColorModel
.
WritableRaster
Raster.
createCompatibleWritableRaster
()
Create a compatible WritableRaster the same size as this Raster with
 the same SampleModel and a new initialized DataBuffer.
WritableRaster
Raster.
createCompatibleWritableRaster
(int w,
 int h)
Create a compatible WritableRaster with the specified size, a new
 SampleModel, and a new initialized DataBuffer.
WritableRaster
Raster.
createCompatibleWritableRaster
(int x,
 int y,
 int w,
 int h)
Create a compatible WritableRaster with the specified
 location (minX, minY) and size (width, height), a
 new SampleModel, and a new initialized DataBuffer.
WritableRaster
Raster.
createCompatibleWritableRaster
(
Rectangle
rect)
Create a compatible WritableRaster with location (minX, minY)
 and size (width, height) specified by rect, a
 new SampleModel, and a new initialized DataBuffer.
static
WritableRaster
Raster.
createInterleavedRaster
(int dataType,
 int w,
 int h,
 int scanlineStride,
 int pixelStride,
 int[] bandOffsets,
Point
location)
Creates a Raster based on a PixelInterleavedSampleModel with the
 specified data type, width, height, scanline stride, pixel
 stride, and band offsets.
static
WritableRaster
Raster.
createInterleavedRaster
(int dataType,
 int w,
 int h,
 int bands,
Point
location)
Creates a Raster based on a PixelInterleavedSampleModel with the
 specified data type, width, height, and number of bands.
static
WritableRaster
Raster.
createInterleavedRaster
(
DataBuffer
dataBuffer,
 int w,
 int h,
 int scanlineStride,
 int pixelStride,
 int[] bandOffsets,
Point
location)
Creates a Raster based on a PixelInterleavedSampleModel with the
 specified DataBuffer, width, height, scanline stride, pixel
 stride, and band offsets.
static
WritableRaster
Raster.
createPackedRaster
(int dataType,
 int w,
 int h,
 int[] bandMasks,
Point
location)
Creates a Raster based on a SinglePixelPackedSampleModel with
 the specified data type, width, height, and band masks.
static
WritableRaster
Raster.
createPackedRaster
(int dataType,
 int w,
 int h,
 int bands,
 int bitsPerBand,
Point
location)
Creates a Raster based on a packed SampleModel with the
 specified data type, width, height, number of bands, and bits
 per band.
static
WritableRaster
Raster.
createPackedRaster
(
DataBuffer
dataBuffer,
 int w,
 int h,
 int scanlineStride,
 int[] bandMasks,
Point
location)
Creates a Raster based on a SinglePixelPackedSampleModel with
 the specified DataBuffer, width, height, scanline stride, and
 band masks.
static
WritableRaster
Raster.
createPackedRaster
(
DataBuffer
dataBuffer,
 int w,
 int h,
 int bitsPerPixel,
Point
location)
Creates a Raster based on a MultiPixelPackedSampleModel with the
 specified DataBuffer, width, height, and bits per pixel.
WritableRaster
WritableRaster.
createWritableChild
(int parentX,
 int parentY,
 int w,
 int h,
 int childMinX,
 int childMinY,
 int[] bandList)
Returns a new WritableRaster which shares all or part of this
 WritableRaster's DataBuffer.
static
WritableRaster
Raster.
createWritableRaster
(
SampleModel
sm,
DataBuffer
db,
Point
location)
Creates a WritableRaster with the specified SampleModel and DataBuffer.
static
WritableRaster
Raster.
createWritableRaster
(
SampleModel
sm,
Point
location)
Creates a WritableRaster with the specified SampleModel.
WritableRaster
WritableRaster.
createWritableTranslatedChild
(int childMinX,
 int childMinY)
Create a WritableRaster with the same size, SampleModel and DataBuffer
 as this one, but with a different location.
final
WritableRaster
AffineTransformOp.
filter
(
Raster
src,
WritableRaster
dst)
Transforms the source
Raster
and stores the results in
 the destination
Raster
.
WritableRaster
BandCombineOp.
filter
(
Raster
src,
WritableRaster
dst)
Transforms the
Raster
using the matrix specified in the
 constructor.
final
WritableRaster
ColorConvertOp.
filter
(
Raster
src,
WritableRaster
dest)
ColorConverts the image data in the source Raster.
final
WritableRaster
ConvolveOp.
filter
(
Raster
src,
WritableRaster
dst)
Performs a convolution on Rasters.
final
WritableRaster
LookupOp.
filter
(
Raster
src,
WritableRaster
dst)
Performs a lookup operation on a
Raster
.
WritableRaster
RasterOp.
filter
(
Raster
src,
WritableRaster
dest)
Performs a single-input/single-output operation from a source Raster
 to a destination Raster.
final
WritableRaster
RescaleOp.
filter
(
Raster
src,
WritableRaster
dst)
Rescales the pixel data in the source Raster.
WritableRaster
BufferedImage.
getAlphaRaster
()
Returns a
WritableRaster
representing the alpha
 channel for
BufferedImage
objects
 with
ColorModel
objects that support a separate
 spatial alpha channel, such as
ComponentColorModel
and
DirectColorModel
.
WritableRaster
ColorModel.
getAlphaRaster
(
WritableRaster
raster)
Returns a
Raster
representing the alpha channel of an
 image, extracted from the input
Raster
, provided that
 pixel values of this
ColorModel
represent color and
 alpha information as separate spatial bands (e.g.
WritableRaster
ComponentColorModel.
getAlphaRaster
(
WritableRaster
raster)
Returns a
Raster
representing the alpha channel of an image,
 extracted from the input
Raster
.
WritableRaster
PackedColorModel.
getAlphaRaster
(
WritableRaster
raster)
Returns a
WritableRaster
representing the alpha channel of
 an image, extracted from the input
WritableRaster
.
WritableRaster
BufferedImage.
getRaster
()
Returns the
WritableRaster
.
WritableRaster
WritableRaster.
getWritableParent
()
Returns the parent WritableRaster (if any) of this WritableRaster,
  or else null.
WritableRaster
BufferedImage.
getWritableTile
(int tileX,
 int tileY)
Checks out a tile for writing.
WritableRaster
WritableRenderedImage.
getWritableTile
(int tileX,
 int tileY)
Checks out a tile for writing.
Methods in
java.awt.image
with parameters of type
WritableRaster
Modifier and Type
Method
Description
ColorModel
ColorModel.
coerceData
(
WritableRaster
raster,
 boolean isAlphaPremultiplied)
Forces the raster data to match the state specified in the
isAlphaPremultiplied
variable, assuming the data is
 currently correctly described by this
ColorModel
.
ColorModel
ComponentColorModel.
coerceData
(
WritableRaster
raster,
 boolean isAlphaPremultiplied)
Forces the raster data to match the state specified in the
isAlphaPremultiplied
variable, assuming the data
 is currently correctly described by this
ColorModel
.
final
ColorModel
DirectColorModel.
coerceData
(
WritableRaster
raster,
 boolean isAlphaPremultiplied)
Forces the raster data to match the state specified in the
isAlphaPremultiplied
variable, assuming the data is
 currently correctly described by this
ColorModel
.
WritableRaster
BufferedImage.
copyData
(
WritableRaster
outRaster)
Computes an arbitrary rectangular region of the
BufferedImage
and copies it into a specified
WritableRaster
.
WritableRaster
RenderedImage.
copyData
(
WritableRaster
raster)
Computes an arbitrary rectangular region of the RenderedImage
 and copies it into a caller-supplied WritableRaster.
final
WritableRaster
AffineTransformOp.
filter
(
Raster
src,
WritableRaster
dst)
Transforms the source
Raster
and stores the results in
 the destination
Raster
.
WritableRaster
BandCombineOp.
filter
(
Raster
src,
WritableRaster
dst)
Transforms the
Raster
using the matrix specified in the
 constructor.
final
WritableRaster
ColorConvertOp.
filter
(
Raster
src,
WritableRaster
dest)
ColorConverts the image data in the source Raster.
final
WritableRaster
ConvolveOp.
filter
(
Raster
src,
WritableRaster
dst)
Performs a convolution on Rasters.
final
WritableRaster
LookupOp.
filter
(
Raster
src,
WritableRaster
dst)
Performs a lookup operation on a
Raster
.
WritableRaster
RasterOp.
filter
(
Raster
src,
WritableRaster
dest)
Performs a single-input/single-output operation from a source Raster
 to a destination Raster.
final
WritableRaster
RescaleOp.
filter
(
Raster
src,
WritableRaster
dst)
Rescales the pixel data in the source Raster.
WritableRaster
ColorModel.
getAlphaRaster
(
WritableRaster
raster)
Returns a
Raster
representing the alpha channel of an
 image, extracted from the input
Raster
, provided that
 pixel values of this
ColorModel
represent color and
 alpha information as separate spatial bands (e.g.
WritableRaster
ComponentColorModel.
getAlphaRaster
(
WritableRaster
raster)
Returns a
Raster
representing the alpha channel of an image,
 extracted from the input
Raster
.
WritableRaster
PackedColorModel.
getAlphaRaster
(
WritableRaster
raster)
Returns a
WritableRaster
representing the alpha channel of
 an image, extracted from the input
WritableRaster
.
Constructors in
java.awt.image
with parameters of type
WritableRaster
Modifier
Constructor
Description
BufferedImage
(
ColorModel
cm,
WritableRaster
raster,
 boolean isRasterPremultiplied,
Hashtable
<?,
?> properties)
Constructs a new
BufferedImage
with a specified
ColorModel
and
Raster
.
protected
WritableRaster
(
SampleModel
sampleModel,
DataBuffer
dataBuffer,
Rectangle
aRegion,
Point
sampleModelTranslate,
WritableRaster
parent)
Constructs a WritableRaster with the given SampleModel, DataBuffer,
 and parent.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.