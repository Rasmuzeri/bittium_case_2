Uses of Class java.awt.image.SampleModel (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.image.SampleModel
Packages that use
SampleModel
Package
Description
java.awt.image
Provides classes for creating and modifying images.
javax.imageio
The main package of the Java Image I/O API.
Uses of
SampleModel
in
java.awt.image
Subclasses of
SampleModel
in
java.awt.image
Modifier and Type
Class
Description
final class
BandedSampleModel
This class represents image data which is stored in a band interleaved
  fashion and for
  which each sample of a pixel occupies one data element of the DataBuffer.
class
ComponentSampleModel
This class represents image data which is stored such that each sample
  of a pixel occupies one data element of the DataBuffer.
class
MultiPixelPackedSampleModel
The
MultiPixelPackedSampleModel
class represents
 one-banded images and can pack multiple one-sample
 pixels into one data element.
class
PixelInterleavedSampleModel
This class represents image data which is stored in a pixel interleaved
  fashion and for
  which each sample of a pixel occupies one data element of the DataBuffer.
class
SinglePixelPackedSampleModel
This class represents pixel data packed such that the N samples which make
  up a single pixel are stored in a single data array element, and each data
  data array element holds samples for only one pixel.
Fields in
java.awt.image
declared as
SampleModel
Modifier and Type
Field
Description
protected
SampleModel
Raster.
sampleModel
The SampleModel that describes how pixels from this Raster
 are stored in the DataBuffer.
Methods in
java.awt.image
that return
SampleModel
Modifier and Type
Method
Description
SampleModel
BandedSampleModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a new BandedSampleModel with the specified
 width and height.
SampleModel
ColorModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a
SampleModel
with the specified width and
 height that has a data layout compatible with this
ColorModel
.
SampleModel
ComponentColorModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a
SampleModel
with the specified width and height,
 that  has a data layout compatible with this
ColorModel
.
SampleModel
ComponentSampleModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a new
ComponentSampleModel
with the specified
 width and height.
SampleModel
IndexColorModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a
SampleModel
with the specified
 width and height that has a data layout compatible with
 this
ColorModel
.
SampleModel
MultiPixelPackedSampleModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a new
MultiPixelPackedSampleModel
with the
 specified width and height.
SampleModel
PackedColorModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a
SampleModel
with the specified width and
 height that has a data layout compatible with this
ColorModel
.
SampleModel
PixelInterleavedSampleModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a new PixelInterleavedSampleModel with the specified
 width and height.
abstract
SampleModel
SampleModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a SampleModel which describes data in this SampleModel's
  format, but with a different width and height.
SampleModel
SinglePixelPackedSampleModel.
createCompatibleSampleModel
(int w,
 int h)
Creates a new SinglePixelPackedSampleModel with the specified
 width and height.
SampleModel
BandedSampleModel.
createSubsetSampleModel
(int[] bands)
Creates a new BandedSampleModel with a subset of the bands of this
 BandedSampleModel.
SampleModel
ComponentSampleModel.
createSubsetSampleModel
(int[] bands)
Creates a new ComponentSampleModel with a subset of the bands
 of this ComponentSampleModel.
SampleModel
MultiPixelPackedSampleModel.
createSubsetSampleModel
(int[] bands)
Creates a new
MultiPixelPackedSampleModel
with a
 subset of the bands of this
MultiPixelPackedSampleModel
.
SampleModel
PixelInterleavedSampleModel.
createSubsetSampleModel
(int[] bands)
Creates a new PixelInterleavedSampleModel with a subset of the
 bands of this PixelInterleavedSampleModel.
abstract
SampleModel
SampleModel.
createSubsetSampleModel
(int[] bands)
Creates a new SampleModel
 with a subset of the bands of this
 SampleModel.
SampleModel
SinglePixelPackedSampleModel.
createSubsetSampleModel
(int[] bands)
This creates a new SinglePixelPackedSampleModel with a subset of the
 bands of this SinglePixelPackedSampleModel.
SampleModel
BufferedImage.
getSampleModel
()
Returns the
SampleModel
associated with this
BufferedImage
.
SampleModel
Raster.
getSampleModel
()
Returns the SampleModel that describes the layout of the image data.
SampleModel
RenderedImage.
getSampleModel
()
Returns the SampleModel associated with this image.
Methods in
java.awt.image
with parameters of type
SampleModel
Modifier and Type
Method
Description
static
Raster
Raster.
createRaster
(
SampleModel
sm,
DataBuffer
db,
Point
location)
Creates a Raster with the specified SampleModel and DataBuffer.
static
WritableRaster
Raster.
createWritableRaster
(
SampleModel
sm,
DataBuffer
db,
Point
location)
Creates a WritableRaster with the specified SampleModel and DataBuffer.
static
WritableRaster
Raster.
createWritableRaster
(
SampleModel
sm,
Point
location)
Creates a WritableRaster with the specified SampleModel.
boolean
ColorModel.
isCompatibleSampleModel
(
SampleModel
sm)
Checks if the
SampleModel
is compatible with this
ColorModel
.
boolean
ComponentColorModel.
isCompatibleSampleModel
(
SampleModel
sm)
Checks whether or not the specified
SampleModel
is compatible with this
ColorModel
.
boolean
IndexColorModel.
isCompatibleSampleModel
(
SampleModel
sm)
Checks if the specified
SampleModel
is compatible
 with this
ColorModel
.
boolean
PackedColorModel.
isCompatibleSampleModel
(
SampleModel
sm)
Checks if the specified
SampleModel
is compatible
 with this
ColorModel
.
Constructors in
java.awt.image
with parameters of type
SampleModel
Modifier
Constructor
Description
protected
Raster
(
SampleModel
sampleModel,
DataBuffer
dataBuffer,
Point
origin)
Constructs a Raster with the given SampleModel and DataBuffer.
protected
Raster
(
SampleModel
sampleModel,
DataBuffer
dataBuffer,
Rectangle
aRegion,
Point
sampleModelTranslate,
Raster
parent)
Constructs a Raster with the given SampleModel, DataBuffer, and
 parent.
protected
Raster
(
SampleModel
sampleModel,
Point
origin)
Constructs a Raster with the given SampleModel.
protected
WritableRaster
(
SampleModel
sampleModel,
DataBuffer
dataBuffer,
Point
origin)
Constructs a WritableRaster with the given SampleModel and DataBuffer.
protected
WritableRaster
(
SampleModel
sampleModel,
DataBuffer
dataBuffer,
Rectangle
aRegion,
Point
sampleModelTranslate,
WritableRaster
parent)
Constructs a WritableRaster with the given SampleModel, DataBuffer,
 and parent.
protected
WritableRaster
(
SampleModel
sampleModel,
Point
origin)
Constructs a WritableRaster with the given SampleModel.
Uses of
SampleModel
in
javax.imageio
Fields in
javax.imageio
declared as
SampleModel
Modifier and Type
Field
Description
protected
SampleModel
ImageTypeSpecifier.
sampleModel
A
SampleModel
to be used as a prototype.
Methods in
javax.imageio
that return
SampleModel
Modifier and Type
Method
Description
SampleModel
ImageTypeSpecifier.
getSampleModel
()
Returns a
SampleModel
based on the settings
 encapsulated within this object.
SampleModel
ImageTypeSpecifier.
getSampleModel
(int width,
 int height)
Returns a
SampleModel
based on the settings
 encapsulated within this object.
Constructors in
javax.imageio
with parameters of type
SampleModel
Modifier
Constructor
Description
ImageTypeSpecifier
(
ColorModel
colorModel,
SampleModel
sampleModel)
Constructs an
ImageTypeSpecifier
directly
 from a
ColorModel
and a
SampleModel
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.