Label (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field
|
Constr
|
Method
Detail:
Field
|
Constr
|
Method
SEARCH
Module
java.desktop
Package
java.awt
Class Label
java.lang.Object
java.awt.Component
java.awt.Label
All Implemented Interfaces:
ImageObserver
,
MenuContainer
,
Serializable
,
Accessible
public class
Label
extends
Component
implements
Accessible
A
Label
object is a component for placing text in a
 container. A label displays a single line of read-only text.
 The text can be changed by the application, but a user cannot edit it
 directly.
For example, the code . . .
setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));
 add(new Label("Hi There!"));
 add(new Label("Another Label"));
produces the following labels:
Since:
1.0
See Also:
Serialized Form
Nested Class Summary
Nested Classes
Modifier and Type
Class
Description
protected class
Label.AccessibleAWTLabel
This class implements accessibility support for the
Label
class.
Nested classes/interfaces declared in class java.awt.
Component
Component.AccessibleAWTComponent
,
Component.BaselineResizeBehavior
,
Component.BltBufferStrategy
,
Component.FlipBufferStrategy
Field Summary
Fields
Modifier and Type
Field
Description
static final int
CENTER
Indicates that the label should be centered.
static final int
LEFT
Indicates that the label should be left justified.
static final int
RIGHT
Indicates that the label should be right justified.
Fields declared in class java.awt.
Component
accessibleContext
,
BOTTOM_ALIGNMENT
,
CENTER_ALIGNMENT
,
LEFT_ALIGNMENT
,
RIGHT_ALIGNMENT
,
TOP_ALIGNMENT
Fields declared in interface java.awt.image.
ImageObserver
ABORT
,
ALLBITS
,
ERROR
,
FRAMEBITS
,
HEIGHT
,
PROPERTIES
,
SOMEBITS
,
WIDTH
Constructor Summary
Constructors
Constructor
Description
Label
()
Constructs an empty label.
Label
(
String
text)
Constructs a new label with the specified string of text,
 left justified.
Label
(
String
text,
 int alignment)
Constructs a new label that presents the specified string of
 text with the specified alignment.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
addNotify
()
Creates the peer for this label.
AccessibleContext
getAccessibleContext
()
Gets the AccessibleContext associated with this Label.
int
getAlignment
()
Gets the current alignment of this label.
String
getText
()
Gets the text of this label.
protected
String
paramString
()
Returns a string representing the state of this
Label
.
void
setAlignment
(int alignment)
Sets the alignment for this label to the specified alignment.
void
setText
(
String
text)
Sets the text for this label to the specified text.
Methods declared in class java.awt.
Component
action
,
add
,
addComponentListener
,
addFocusListener
,
addHierarchyBoundsListener
,
addHierarchyListener
,
addInputMethodListener
,
addKeyListener
,
addMouseListener
,
addMouseMotionListener
,
addMouseWheelListener
,
addPropertyChangeListener
,
addPropertyChangeListener
,
applyComponentOrientation
,
areFocusTraversalKeysSet
,
bounds
,
checkImage
,
checkImage
,
coalesceEvents
,
contains
,
contains
,
createImage
,
createImage
,
createVolatileImage
,
createVolatileImage
,
deliverEvent
,
disable
,
disableEvents
,
dispatchEvent
,
doLayout
,
enable
,
enable
,
enableEvents
,
enableInputMethods
,
firePropertyChange
,
firePropertyChange
,
firePropertyChange
,
firePropertyChange
,
firePropertyChange
,
firePropertyChange
,
firePropertyChange
,
firePropertyChange
,
firePropertyChange
,
getAlignmentX
,
getAlignmentY
,
getBackground
,
getBaseline
,
getBaselineResizeBehavior
,
getBounds
,
getBounds
,
getColorModel
,
getComponentAt
,
getComponentAt
,
getComponentListeners
,
getComponentOrientation
,
getCursor
,
getDropTarget
,
getFocusCycleRootAncestor
,
getFocusListeners
,
getFocusTraversalKeys
,
getFocusTraversalKeysEnabled
,
getFont
,
getFontMetrics
,
getForeground
,
getGraphics
,
getGraphicsConfiguration
,
getHeight
,
getHierarchyBoundsListeners
,
getHierarchyListeners
,
getIgnoreRepaint
,
getInputContext
,
getInputMethodListeners
,
getInputMethodRequests
,
getKeyListeners
,
getListeners
,
getLocale
,
getLocation
,
getLocation
,
getLocationOnScreen
,
getMaximumSize
,
getMinimumSize
,
getMouseListeners
,
getMouseMotionListeners
,
getMousePosition
,
getMouseWheelListeners
,
getName
,
getParent
,
getPreferredSize
,
getPropertyChangeListeners
,
getPropertyChangeListeners
,
getSize
,
getSize
,
getToolkit
,
getTreeLock
,
getWidth
,
getX
,
getY
,
gotFocus
,
handleEvent
,
hasFocus
,
hide
,
imageUpdate
,
inside
,
invalidate
,
isBackgroundSet
,
isCursorSet
,
isDisplayable
,
isDoubleBuffered
,
isEnabled
,
isFocusable
,
isFocusCycleRoot
,
isFocusOwner
,
isFocusTraversable
,
isFontSet
,
isForegroundSet
,
isLightweight
,
isMaximumSizeSet
,
isMinimumSizeSet
,
isOpaque
,
isPreferredSizeSet
,
isShowing
,
isValid
,
isVisible
,
keyDown
,
keyUp
,
layout
,
list
,
list
,
list
,
list
,
list
,
locate
,
location
,
lostFocus
,
minimumSize
,
mouseDown
,
mouseDrag
,
mouseEnter
,
mouseExit
,
mouseMove
,
mouseUp
,
move
,
nextFocus
,
paint
,
paintAll
,
postEvent
,
preferredSize
,
prepareImage
,
prepareImage
,
print
,
printAll
,
processComponentEvent
,
processEvent
,
processFocusEvent
,
processHierarchyBoundsEvent
,
processHierarchyEvent
,
processInputMethodEvent
,
processKeyEvent
,
processMouseEvent
,
processMouseMotionEvent
,
processMouseWheelEvent
,
remove
,
removeComponentListener
,
removeFocusListener
,
removeHierarchyBoundsListener
,
removeHierarchyListener
,
removeInputMethodListener
,
removeKeyListener
,
removeMouseListener
,
removeMouseMotionListener
,
removeMouseWheelListener
,
removeNotify
,
removePropertyChangeListener
,
removePropertyChangeListener
,
repaint
,
repaint
,
repaint
,
repaint
,
requestFocus
,
requestFocus
,
requestFocus
,
requestFocus
,
requestFocusInWindow
,
requestFocusInWindow
,
requestFocusInWindow
,
reshape
,
resize
,
resize
,
revalidate
,
setBackground
,
setBounds
,
setBounds
,
setComponentOrientation
,
setCursor
,
setDropTarget
,
setEnabled
,
setFocusable
,
setFocusTraversalKeys
,
setFocusTraversalKeysEnabled
,
setFont
,
setForeground
,
setIgnoreRepaint
,
setLocale
,
setLocation
,
setLocation
,
setMaximumSize
,
setMinimumSize
,
setMixingCutoutShape
,
setName
,
setPreferredSize
,
setSize
,
setSize
,
setVisible
,
show
,
show
,
size
,
toString
,
transferFocus
,
transferFocusBackward
,
transferFocusUpCycle
,
update
,
validate
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Field Details
LEFT
public static final
int
LEFT
Indicates that the label should be left justified.
See Also:
Constant Field Values
CENTER
public static final
int
CENTER
Indicates that the label should be centered.
See Also:
Constant Field Values
RIGHT
public static final
int
RIGHT
Indicates that the label should be right justified.
See Also:
Constant Field Values
Constructor Details
Label
public
Label
()
      throws
HeadlessException
Constructs an empty label.
 The text of the label is the empty string
""
.
Throws:
HeadlessException
- if GraphicsEnvironment.isHeadless()
 returns true.
See Also:
GraphicsEnvironment.isHeadless()
Label
public
Label
(
String
text)
throws
HeadlessException
Constructs a new label with the specified string of text,
 left justified.
Parameters:
text
- the string that the label presents.
        A
null
value
        will be accepted without causing a NullPointerException
        to be thrown.
Throws:
HeadlessException
- if GraphicsEnvironment.isHeadless()
 returns true.
See Also:
GraphicsEnvironment.isHeadless()
Label
public
Label
(
String
text,
 int alignment)
throws
HeadlessException
Constructs a new label that presents the specified string of
 text with the specified alignment.
 Possible values for
alignment
are
Label.LEFT
,
Label.RIGHT
, and
Label.CENTER
.
Parameters:
text
- the string that the label presents.
        A
null
value
        will be accepted without causing a NullPointerException
        to be thrown.
alignment
- the alignment value.
Throws:
HeadlessException
- if GraphicsEnvironment.isHeadless()
 returns true.
See Also:
GraphicsEnvironment.isHeadless()
Method Details
addNotify
public
void
addNotify
()
Creates the peer for this label.  The peer allows us to
 modify the appearance of the label without changing its
 functionality.
Overrides:
addNotify
in class
Component
See Also:
Component.isDisplayable()
Component.removeNotify()
Component.invalidate()
getAlignment
public
int
getAlignment
()
Gets the current alignment of this label. Possible values are
Label.LEFT
,
Label.RIGHT
, and
Label.CENTER
.
Returns:
the alignment of this label
See Also:
setAlignment(int)
setAlignment
public
void
setAlignment
(int alignment)
Sets the alignment for this label to the specified alignment.
 Possible values are
Label.LEFT
,
Label.RIGHT
, and
Label.CENTER
.
Parameters:
alignment
- the alignment to be set.
Throws:
IllegalArgumentException
- if an improper value for
alignment
is given.
See Also:
getAlignment()
getText
public
String
getText
()
Gets the text of this label.
Returns:
the text of this label, or
null
if
             the text has been set to
null
.
See Also:
setText(java.lang.String)
setText
public
void
setText
(
String
text)
Sets the text for this label to the specified text.
Parameters:
text
- the text that this label displays. If
text
is
null
, it is
             treated for display purposes like an empty
             string
""
.
See Also:
getText()
paramString
protected
String
paramString
()
Returns a string representing the state of this
Label
.
 This method is intended to be used only for debugging purposes, and the
 content and format of the returned string may vary between
 implementations. The returned string may be empty but may not be
null
.
Overrides:
paramString
in class
Component
Returns:
the parameter string of this label
getAccessibleContext
public
AccessibleContext
getAccessibleContext
()
Gets the AccessibleContext associated with this Label.
 For labels, the AccessibleContext takes the form of an
 AccessibleAWTLabel.
 A new AccessibleAWTLabel instance is created if necessary.
Specified by:
getAccessibleContext
in interface
Accessible
Overrides:
getAccessibleContext
in class
Component
Returns:
an AccessibleAWTLabel that serves as the
         AccessibleContext of this Label
Since:
1.3
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.