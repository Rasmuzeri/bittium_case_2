InputMethodEvent (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field
|
Constr
|
Method
SEARCH
Module
java.desktop
Package
java.awt.event
Class InputMethodEvent
java.lang.Object
java.util.EventObject
java.awt.AWTEvent
java.awt.event.InputMethodEvent
All Implemented Interfaces:
Serializable
public class
InputMethodEvent
extends
AWTEvent
Input method events contain information about text that is being
 composed using an input method. Whenever the text changes, the
 input method sends an event. If the text component that's currently
 using the input method is an active client, the event is dispatched
 to that component. Otherwise, it is dispatched to a separate
 composition window.
The text included with the input method event consists of two parts:
 committed text and composed text. Either part may be empty. The two
 parts together replace any uncommitted composed text sent in previous events,
 or the currently selected committed text.
 Committed text should be integrated into the text component's persistent
 data, it will not be sent again. Composed text may be sent repeatedly,
 with changes to reflect the user's editing operations. Committed text
 always precedes composed text.
Since:
1.2
See Also:
Serialized Form
Field Summary
Fields
Modifier and Type
Field
Description
static final int
CARET_POSITION_CHANGED
The event type indicating a changed insertion point in input method text.
static final int
INPUT_METHOD_FIRST
Marks the first integer id for the range of input method event ids.
static final int
INPUT_METHOD_LAST
Marks the last integer id for the range of input method event ids.
static final int
INPUT_METHOD_TEXT_CHANGED
The event type indicating changed input method text.
Fields declared in class java.awt.
AWTEvent
ACTION_EVENT_MASK
,
ADJUSTMENT_EVENT_MASK
,
COMPONENT_EVENT_MASK
,
consumed
,
CONTAINER_EVENT_MASK
,
FOCUS_EVENT_MASK
,
HIERARCHY_BOUNDS_EVENT_MASK
,
HIERARCHY_EVENT_MASK
,
id
,
INPUT_METHOD_EVENT_MASK
,
INVOCATION_EVENT_MASK
,
ITEM_EVENT_MASK
,
KEY_EVENT_MASK
,
MOUSE_EVENT_MASK
,
MOUSE_MOTION_EVENT_MASK
,
MOUSE_WHEEL_EVENT_MASK
,
PAINT_EVENT_MASK
,
RESERVED_ID_MAX
,
TEXT_EVENT_MASK
,
WINDOW_EVENT_MASK
,
WINDOW_FOCUS_EVENT_MASK
,
WINDOW_STATE_EVENT_MASK
Fields declared in class java.util.
EventObject
source
Constructor Summary
Constructors
Constructor
Description
InputMethodEvent
(
Component
source,
 int id,
 long when,
AttributedCharacterIterator
text,
 int committedCharacterCount,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the specified
 source component, type, time, text, caret, and visiblePosition.
InputMethodEvent
(
Component
source,
 int id,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the
 specified source component, type, caret, and visiblePosition.
InputMethodEvent
(
Component
source,
 int id,
AttributedCharacterIterator
text,
 int committedCharacterCount,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the specified
 source component, type, text, caret, and visiblePosition.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
consume
()
Consumes this event so that it will not be processed
 in the default manner by the source which originated it.
TextHitInfo
getCaret
()
Gets the caret.
int
getCommittedCharacterCount
()
Gets the number of committed characters in the text.
AttributedCharacterIterator
getText
()
Gets the combined committed and composed text.
TextHitInfo
getVisiblePosition
()
Gets the position that's most important to be visible.
long
getWhen
()
Returns the time stamp of when this event occurred.
boolean
isConsumed
()
Returns whether or not this event has been consumed.
String
paramString
()
Returns a parameter string identifying this event.
Methods declared in class java.awt.
AWTEvent
getID
,
setSource
,
toString
Methods declared in class java.util.
EventObject
getSource
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Field Details
INPUT_METHOD_FIRST
@Native
public static final
int
INPUT_METHOD_FIRST
Marks the first integer id for the range of input method event ids.
See Also:
Constant Field Values
INPUT_METHOD_TEXT_CHANGED
@Native
public static final
int
INPUT_METHOD_TEXT_CHANGED
The event type indicating changed input method text. This event is
 generated by input methods while processing input.
See Also:
Constant Field Values
CARET_POSITION_CHANGED
@Native
public static final
int
CARET_POSITION_CHANGED
The event type indicating a changed insertion point in input method text.
 This event is
 generated by input methods while processing input if only the caret changed.
See Also:
Constant Field Values
INPUT_METHOD_LAST
@Native
public static final
int
INPUT_METHOD_LAST
Marks the last integer id for the range of input method event ids.
See Also:
Constant Field Values
Constructor Details
InputMethodEvent
public
InputMethodEvent
(
Component
source,
 int id,
 long when,
AttributedCharacterIterator
text,
 int committedCharacterCount,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the specified
 source component, type, time, text, caret, and visiblePosition.
The offsets of caret and visiblePosition are relative to the current
 composed text; that is, the composed text within
text
if this is an
INPUT_METHOD_TEXT_CHANGED
event,
 the composed text within the
text
of the
 preceding
INPUT_METHOD_TEXT_CHANGED
event otherwise.
Note that passing in an invalid
id
results in
 unspecified behavior. This method throws an
IllegalArgumentException
if
source
is
null
.
Parameters:
source
- the object where the event originated
id
- the event type
when
- a long integer that specifies the time the event occurred
text
- the combined committed and composed text,
      committed text first; must be
null
when the event type is
CARET_POSITION_CHANGED
;
      may be
null
for
INPUT_METHOD_TEXT_CHANGED
if there's no
      committed or composed text
committedCharacterCount
- the number of committed
      characters in the text
caret
- the caret (a.k.a. insertion point);
null
if there's no caret within current
      composed text
visiblePosition
- the position that's most important
      to be visible;
null
if there's no
      recommendation for a visible position within current
      composed text
Throws:
IllegalArgumentException
- if
id
is not
      in the range
INPUT_METHOD_FIRST
..
INPUT_METHOD_LAST
;
      or if id is
CARET_POSITION_CHANGED
and
text
is not
null
;
      or if
committedCharacterCount
is not in the range
0
..
(text.getEndIndex() - text.getBeginIndex())
IllegalArgumentException
- if
source
is null
Since:
1.4
InputMethodEvent
public
InputMethodEvent
(
Component
source,
 int id,
AttributedCharacterIterator
text,
 int committedCharacterCount,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the specified
 source component, type, text, caret, and visiblePosition.
The offsets of caret and visiblePosition are relative to the current
 composed text; that is, the composed text within
text
if this is an
INPUT_METHOD_TEXT_CHANGED
event,
 the composed text within the
text
of the
 preceding
INPUT_METHOD_TEXT_CHANGED
event otherwise.
 The time stamp for this event is initialized by invoking
EventQueue.getMostRecentEventTime()
.
Note that passing in an invalid
id
results in
 unspecified behavior. This method throws an
IllegalArgumentException
if
source
is
null
.
Parameters:
source
- the object where the event originated
id
- the event type
text
- the combined committed and composed text,
      committed text first; must be
null
when the event type is
CARET_POSITION_CHANGED
;
      may be
null
for
INPUT_METHOD_TEXT_CHANGED
if there's no
      committed or composed text
committedCharacterCount
- the number of committed
      characters in the text
caret
- the caret (a.k.a. insertion point);
null
if there's no caret within current
      composed text
visiblePosition
- the position that's most important
      to be visible;
null
if there's no
      recommendation for a visible position within current
      composed text
Throws:
IllegalArgumentException
- if
id
is not
      in the range
INPUT_METHOD_FIRST
..
INPUT_METHOD_LAST
;
      or if id is
CARET_POSITION_CHANGED
and
text
is not
null
;
      or if
committedCharacterCount
is not in the range
0
..
(text.getEndIndex() - text.getBeginIndex())
IllegalArgumentException
- if
source
is null
InputMethodEvent
public
InputMethodEvent
(
Component
source,
 int id,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the
 specified source component, type, caret, and visiblePosition.
 The text is set to
null
,
committedCharacterCount
to 0.
The offsets of
caret
and
visiblePosition
are relative to the current composed text; that is,
 the composed text within the
text
of the
 preceding
INPUT_METHOD_TEXT_CHANGED
event if the
 event being constructed as a
CARET_POSITION_CHANGED
event.
 For an
INPUT_METHOD_TEXT_CHANGED
event without text,
caret
and
visiblePosition
must be
null
.
 The time stamp for this event is initialized by invoking
EventQueue.getMostRecentEventTime()
.
Note that passing in an invalid
id
results in
 unspecified behavior. This method throws an
IllegalArgumentException
if
source
is
null
.
Parameters:
source
- the object where the event originated
id
- the event type
caret
- the caret (a.k.a. insertion point);
null
if there's no caret within current
      composed text
visiblePosition
- the position that's most important
      to be visible;
null
if there's no
      recommendation for a visible position within current
      composed text
Throws:
IllegalArgumentException
- if
id
is not
      in the range
INPUT_METHOD_FIRST
..
INPUT_METHOD_LAST
IllegalArgumentException
- if
source
is null
Method Details
getText
public
AttributedCharacterIterator
getText
()
Gets the combined committed and composed text.
 Characters from index 0 to index
getCommittedCharacterCount() - 1
are committed
 text, the remaining characters are composed text.
Returns:
the text.
 Always null for CARET_POSITION_CHANGED;
 may be null for INPUT_METHOD_TEXT_CHANGED if there's no composed or committed text.
getCommittedCharacterCount
public
int
getCommittedCharacterCount
()
Gets the number of committed characters in the text.
Returns:
the number of committed characters in the text
getCaret
public
TextHitInfo
getCaret
()
Gets the caret.
The offset of the caret is relative to the current
 composed text; that is, the composed text within getText()
 if this is an
INPUT_METHOD_TEXT_CHANGED
event,
 the composed text within getText() of the
 preceding
INPUT_METHOD_TEXT_CHANGED
event otherwise.
Returns:
the caret (a.k.a. insertion point).
 Null if there's no caret within current composed text.
getVisiblePosition
public
TextHitInfo
getVisiblePosition
()
Gets the position that's most important to be visible.
The offset of the visible position is relative to the current
 composed text; that is, the composed text within getText()
 if this is an
INPUT_METHOD_TEXT_CHANGED
event,
 the composed text within getText() of the
 preceding
INPUT_METHOD_TEXT_CHANGED
event otherwise.
Returns:
the position that's most important to be visible.
 Null if there's no recommendation for a visible position within current composed text.
consume
public
void
consume
()
Consumes this event so that it will not be processed
 in the default manner by the source which originated it.
Overrides:
consume
in class
AWTEvent
isConsumed
public
boolean
isConsumed
()
Returns whether or not this event has been consumed.
Overrides:
isConsumed
in class
AWTEvent
Returns:
true
if this event has been consumed;
          otherwise
false
See Also:
consume()
getWhen
public
long
getWhen
()
Returns the time stamp of when this event occurred.
Returns:
this event's timestamp
Since:
1.4
paramString
public
String
paramString
()
Returns a parameter string identifying this event.
 This method is useful for event-logging and for debugging.
 It contains the event ID in text form, the characters of the
 committed and composed text
 separated by "+", the number of committed characters,
 the caret, and the visible position.
Overrides:
paramString
in class
AWTEvent
Returns:
a string identifying the event and its attributes
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.