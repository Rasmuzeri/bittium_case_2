WindowAdapter (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
java.awt.event
Class WindowAdapter
java.lang.Object
java.awt.event.WindowAdapter
All Implemented Interfaces:
WindowFocusListener
,
WindowListener
,
WindowStateListener
,
EventListener
Direct Known Subclasses:
BasicToolBarUI.FrameListener
,
JMenu.WinListener
public abstract class
WindowAdapter
extends
Object
implements
WindowListener
,
WindowStateListener
,
WindowFocusListener
An abstract adapter class for receiving window events.
 The methods in this class are empty. This class exists as
 convenience for creating listener objects.
Extend this class to create a
WindowEvent
listener
 and override the methods for the events of interest. (If you implement the
WindowListener
interface, you have to define all of
 the methods in it. This abstract class defines null methods for them
 all, so you can only have to define methods for events you care about.)
Create a listener object using the extended class and then register it with
 a Window using the window's
addWindowListener
method. When the window's status changes by virtue of being opened,
 closed, activated or deactivated, iconified or deiconified,
 the relevant method in the listener
 object is invoked, and the
WindowEvent
is passed to it.
Since:
1.1
See Also:
WindowEvent
WindowListener
Tutorial: Writing a Window Listener
Constructor Summary
Constructors
Modifier
Constructor
Description
protected
WindowAdapter
()
Constructs a
WindowAdapter
.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
windowActivated
(
WindowEvent
e)
Invoked when a window is activated.
void
windowClosed
(
WindowEvent
e)
Invoked when a window has been closed.
void
windowClosing
(
WindowEvent
e)
Invoked when a window is in the process of being closed.
void
windowDeactivated
(
WindowEvent
e)
Invoked when a window is de-activated.
void
windowDeiconified
(
WindowEvent
e)
Invoked when a window is de-iconified.
void
windowGainedFocus
(
WindowEvent
e)
Invoked when the Window is set to be the focused Window, which means
 that the Window, or one of its subcomponents, will receive keyboard
 events.
void
windowIconified
(
WindowEvent
e)
Invoked when a window is iconified.
void
windowLostFocus
(
WindowEvent
e)
Invoked when the Window is no longer the focused Window, which means
 that keyboard events will no longer be delivered to the Window or any of
 its subcomponents.
void
windowOpened
(
WindowEvent
e)
Invoked when a window has been opened.
void
windowStateChanged
(
WindowEvent
e)
Invoked when a window state is changed.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
WindowAdapter
protected
WindowAdapter
()
Constructs a
WindowAdapter
.
Method Details
windowOpened
public
void
windowOpened
(
WindowEvent
e)
Invoked when a window has been opened.
Specified by:
windowOpened
in interface
WindowListener
Parameters:
e
- the event to be processed
windowClosing
public
void
windowClosing
(
WindowEvent
e)
Invoked when a window is in the process of being closed.
 The close operation can be overridden at this point.
Specified by:
windowClosing
in interface
WindowListener
Parameters:
e
- the event to be processed
windowClosed
public
void
windowClosed
(
WindowEvent
e)
Invoked when a window has been closed.
Specified by:
windowClosed
in interface
WindowListener
Parameters:
e
- the event to be processed
windowIconified
public
void
windowIconified
(
WindowEvent
e)
Invoked when a window is iconified.
Specified by:
windowIconified
in interface
WindowListener
Parameters:
e
- the event to be processed
See Also:
Window.setIconImage(java.awt.Image)
windowDeiconified
public
void
windowDeiconified
(
WindowEvent
e)
Invoked when a window is de-iconified.
Specified by:
windowDeiconified
in interface
WindowListener
Parameters:
e
- the event to be processed
windowActivated
public
void
windowActivated
(
WindowEvent
e)
Invoked when a window is activated.
Specified by:
windowActivated
in interface
WindowListener
Parameters:
e
- the event to be processed
windowDeactivated
public
void
windowDeactivated
(
WindowEvent
e)
Invoked when a window is de-activated.
Specified by:
windowDeactivated
in interface
WindowListener
Parameters:
e
- the event to be processed
windowStateChanged
public
void
windowStateChanged
(
WindowEvent
e)
Invoked when a window state is changed.
Specified by:
windowStateChanged
in interface
WindowStateListener
Parameters:
e
- the event to be processed
Since:
1.4
windowGainedFocus
public
void
windowGainedFocus
(
WindowEvent
e)
Invoked when the Window is set to be the focused Window, which means
 that the Window, or one of its subcomponents, will receive keyboard
 events.
Specified by:
windowGainedFocus
in interface
WindowFocusListener
Parameters:
e
- the event to be processed
Since:
1.4
windowLostFocus
public
void
windowLostFocus
(
WindowEvent
e)
Invoked when the Window is no longer the focused Window, which means
 that keyboard events will no longer be delivered to the Window or any of
 its subcomponents.
Specified by:
windowLostFocus
in interface
WindowFocusListener
Parameters:
e
- the event to be processed
Since:
1.4
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.