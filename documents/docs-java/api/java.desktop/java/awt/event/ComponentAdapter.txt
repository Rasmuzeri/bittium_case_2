ComponentAdapter (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
java.awt.event
Class ComponentAdapter
java.lang.Object
java.awt.event.ComponentAdapter
All Implemented Interfaces:
ComponentListener
,
EventListener
Direct Known Subclasses:
BasicSliderUI.ComponentHandler
,
BasicTreeUI.ComponentHandler
,
JViewport.ViewListener
public abstract class
ComponentAdapter
extends
Object
implements
ComponentListener
An abstract adapter class for receiving component events.
 The methods in this class are empty. This class exists as
 convenience for creating listener objects.
Extend this class to create a
ComponentEvent
listener
 and override the methods for the events of interest. (If you implement the
ComponentListener
interface, you have to define all of
 the methods in it. This abstract class defines null methods for them
 all, so you can only have to define methods for events you care about.)
Create a listener object using your class and then register it with a
 component using the component's
addComponentListener
method. When the component's size, location, or visibility
 changes, the relevant method in the listener object is invoked,
 and the
ComponentEvent
is passed to it.
Since:
1.1
See Also:
ComponentEvent
ComponentListener
Tutorial: Writing a Component Listener
Constructor Summary
Constructors
Modifier
Constructor
Description
protected
ComponentAdapter
()
Constructs a
ComponentAdapter
.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
componentHidden
(
ComponentEvent
e)
Invoked when the component has been made invisible.
void
componentMoved
(
ComponentEvent
e)
Invoked when the component's position changes.
void
componentResized
(
ComponentEvent
e)
Invoked when the component's size changes.
void
componentShown
(
ComponentEvent
e)
Invoked when the component has been made visible.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
ComponentAdapter
protected
ComponentAdapter
()
Constructs a
ComponentAdapter
.
Method Details
componentResized
public
void
componentResized
(
ComponentEvent
e)
Invoked when the component's size changes.
Specified by:
componentResized
in interface
ComponentListener
Parameters:
e
- the event to be processed
componentMoved
public
void
componentMoved
(
ComponentEvent
e)
Invoked when the component's position changes.
Specified by:
componentMoved
in interface
ComponentListener
Parameters:
e
- the event to be processed
componentShown
public
void
componentShown
(
ComponentEvent
e)
Invoked when the component has been made visible.
Specified by:
componentShown
in interface
ComponentListener
Parameters:
e
- the event to be processed
componentHidden
public
void
componentHidden
(
ComponentEvent
e)
Invoked when the component has been made invisible.
Specified by:
componentHidden
in interface
ComponentListener
Parameters:
e
- the event to be processed
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.