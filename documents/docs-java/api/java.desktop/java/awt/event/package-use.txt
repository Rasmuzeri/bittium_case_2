Uses of Package java.awt.event (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Package
java.awt.event
Packages that use
java.awt.event
Package
Description
com.sun.java.accessibility.util
Provides a collection of interfaces and classes that compose the Java Accessibility
 Utilities.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
javax.accessibility
Defines a contract between user-interface components and an assistive
 technology that provides access to those components.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.event
Provides for events fired by Swing components.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
Classes in
java.awt.event
used by
com.sun.java.accessibility.util
Class
Description
ActionListener
The listener interface for receiving action events.
AdjustmentListener
The listener interface for receiving adjustment events.
AWTEventListener
The listener interface for receiving notification of events
 dispatched to objects that are instances of Component or
 MenuComponent or their subclasses.
ComponentListener
The listener interface for receiving component events.
ContainerListener
The listener interface for receiving container events.
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
ItemListener
The listener interface for receiving item events.
KeyListener
The listener interface for receiving keyboard events (keystrokes).
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
TextListener
The listener interface for receiving text events.
WindowListener
The listener interface for receiving window events.
Classes in
java.awt.event
used by
java.awt
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
ActionListener
The listener interface for receiving action events.
AdjustmentEvent
The adjustment event emitted by Adjustable objects like
Scrollbar
and
ScrollPane
.
AdjustmentListener
The listener interface for receiving adjustment events.
AWTEventListener
The listener interface for receiving notification of events
 dispatched to objects that are instances of Component or
 MenuComponent or their subclasses.
ComponentEvent
A low-level event which indicates that a component moved, changed
 size, or changed visibility (also, the root class for the other
 component-level events).
ComponentListener
The listener interface for receiving component events.
ContainerEvent
A low-level event which indicates that a container's contents
 changed because a component was added or removed.
ContainerListener
The listener interface for receiving container events.
FocusEvent
A low-level event which indicates that a Component has gained or lost the
 input focus.
FocusEvent.Cause
This enum represents the cause of a
FocusEvent
- the reason why it
 occurred.
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
HierarchyBoundsListener
The listener interface for receiving ancestor moved and resized events.
HierarchyEvent
An event which indicates a change to the
Component
hierarchy to which
Component
belongs.
HierarchyListener
The listener interface for receiving hierarchy changed events.
InputMethodEvent
Input method events contain information about text that is being
 composed using an input method.
InputMethodListener
The listener interface for receiving input method events.
ItemEvent
A semantic event which indicates that an item was selected or deselected.
ItemListener
The listener interface for receiving item events.
KeyEvent
An event which indicates that a keystroke occurred in a component.
KeyListener
The listener interface for receiving keyboard events (keystrokes).
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
MouseWheelEvent
An event which indicates that the mouse wheel was rotated in a component.
MouseWheelListener
The listener interface for receiving mouse wheel events on a component.
TextEvent
A semantic event which indicates that an object's text changed.
TextListener
The listener interface for receiving text events.
WindowEvent
A low-level event that indicates that a window has changed its status.
WindowFocusListener
The listener interface for receiving
WindowEvents
, including
WINDOW_GAINED_FOCUS
and
WINDOW_LOST_FOCUS
events.
WindowListener
The listener interface for receiving window events.
WindowStateListener
The listener interface for receiving window state events.
Classes in
java.awt.event
used by
java.awt.dnd
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
ActionListener
The listener interface for receiving action events.
InputEvent
The root event class for all component-level input events.
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
Classes in
java.awt.event
used by
java.awt.event
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
AdjustmentEvent
The adjustment event emitted by Adjustable objects like
Scrollbar
and
ScrollPane
.
AWTEventListener
The listener interface for receiving notification of events
 dispatched to objects that are instances of Component or
 MenuComponent or their subclasses.
ComponentEvent
A low-level event which indicates that a component moved, changed
 size, or changed visibility (also, the root class for the other
 component-level events).
ComponentListener
The listener interface for receiving component events.
ContainerEvent
A low-level event which indicates that a container's contents
 changed because a component was added or removed.
ContainerListener
The listener interface for receiving container events.
FocusEvent
A low-level event which indicates that a Component has gained or lost the
 input focus.
FocusEvent.Cause
This enum represents the cause of a
FocusEvent
- the reason why it
 occurred.
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
HierarchyBoundsListener
The listener interface for receiving ancestor moved and resized events.
HierarchyEvent
An event which indicates a change to the
Component
hierarchy to which
Component
belongs.
InputEvent
The root event class for all component-level input events.
InputMethodEvent
Input method events contain information about text that is being
 composed using an input method.
ItemEvent
A semantic event which indicates that an item was selected or deselected.
KeyEvent
An event which indicates that a keystroke occurred in a component.
KeyListener
The listener interface for receiving keyboard events (keystrokes).
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
MouseWheelEvent
An event which indicates that the mouse wheel was rotated in a component.
MouseWheelListener
The listener interface for receiving mouse wheel events on a component.
TextEvent
A semantic event which indicates that an object's text changed.
WindowEvent
A low-level event that indicates that a window has changed its status.
WindowFocusListener
The listener interface for receiving
WindowEvents
, including
WINDOW_GAINED_FOCUS
and
WINDOW_LOST_FOCUS
events.
WindowListener
The listener interface for receiving window events.
WindowStateListener
The listener interface for receiving window state events.
Classes in
java.awt.event
used by
javax.accessibility
Class
Description
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
Classes in
java.awt.event
used by
javax.swing
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
ActionListener
The listener interface for receiving action events.
AdjustmentListener
The listener interface for receiving adjustment events.
ComponentAdapter
An abstract adapter class for receiving component events.
ComponentListener
The listener interface for receiving component events.
ContainerEvent
A low-level event which indicates that a container's contents
 changed because a component was added or removed.
ContainerListener
The listener interface for receiving container events.
FocusEvent
A low-level event which indicates that a Component has gained or lost the
 input focus.
FocusEvent.Cause
This enum represents the cause of a
FocusEvent
- the reason why it
 occurred.
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
InputEvent
The root event class for all component-level input events.
InputMethodEvent
Input method events contain information about text that is being
 composed using an input method.
ItemEvent
A semantic event which indicates that an item was selected or deselected.
ItemListener
The listener interface for receiving item events.
KeyEvent
An event which indicates that a keystroke occurred in a component.
MouseAdapter
An abstract adapter class for receiving mouse events.
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
MouseWheelListener
The listener interface for receiving mouse wheel events on a component.
WindowAdapter
An abstract adapter class for receiving window events.
WindowEvent
A low-level event that indicates that a window has changed its status.
WindowFocusListener
The listener interface for receiving
WindowEvents
, including
WINDOW_GAINED_FOCUS
and
WINDOW_LOST_FOCUS
events.
WindowListener
The listener interface for receiving window events.
WindowStateListener
The listener interface for receiving window state events.
Classes in
java.awt.event
used by
javax.swing.event
Class
Description
ComponentEvent
A low-level event which indicates that a component moved, changed
 size, or changed visibility (also, the root class for the other
 component-level events).
InputEvent
The root event class for all component-level input events.
KeyEvent
An event which indicates that a keystroke occurred in a component.
MouseAdapter
An abstract adapter class for receiving mouse events.
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
MouseWheelListener
The listener interface for receiving mouse wheel events on a component.
Classes in
java.awt.event
used by
javax.swing.plaf
Class
Description
ComponentEvent
A low-level event which indicates that a component moved, changed
 size, or changed visibility (also, the root class for the other
 component-level events).
FocusEvent
A low-level event which indicates that a Component has gained or lost the
 input focus.
HierarchyEvent
An event which indicates a change to the
Component
hierarchy to which
Component
belongs.
InputMethodEvent
Input method events contain information about text that is being
 composed using an input method.
KeyEvent
An event which indicates that a keystroke occurred in a component.
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseWheelEvent
An event which indicates that the mouse wheel was rotated in a component.
Classes in
java.awt.event
used by
javax.swing.plaf.basic
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
ActionListener
The listener interface for receiving action events.
ComponentAdapter
An abstract adapter class for receiving component events.
ComponentEvent
A low-level event which indicates that a component moved, changed
 size, or changed visibility (also, the root class for the other
 component-level events).
ComponentListener
The listener interface for receiving component events.
ContainerEvent
A low-level event which indicates that a container's contents
 changed because a component was added or removed.
ContainerListener
The listener interface for receiving container events.
FocusAdapter
An abstract adapter class for receiving keyboard focus events.
FocusEvent
A low-level event which indicates that a Component has gained or lost the
 input focus.
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
ItemEvent
A semantic event which indicates that an item was selected or deselected.
ItemListener
The listener interface for receiving item events.
KeyAdapter
An abstract adapter class for receiving keyboard events.
KeyEvent
An event which indicates that a keystroke occurred in a component.
KeyListener
The listener interface for receiving keyboard events (keystrokes).
MouseAdapter
An abstract adapter class for receiving mouse events.
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionAdapter
An abstract adapter class for receiving mouse motion events.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
MouseWheelEvent
An event which indicates that the mouse wheel was rotated in a component.
MouseWheelListener
The listener interface for receiving mouse wheel events on a component.
WindowAdapter
An abstract adapter class for receiving window events.
WindowFocusListener
The listener interface for receiving
WindowEvents
, including
WINDOW_GAINED_FOCUS
and
WINDOW_LOST_FOCUS
events.
WindowListener
The listener interface for receiving window events.
WindowStateListener
The listener interface for receiving window state events.
Classes in
java.awt.event
used by
javax.swing.plaf.metal
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
ActionListener
The listener interface for receiving action events.
ContainerListener
The listener interface for receiving container events.
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
MouseAdapter
An abstract adapter class for receiving mouse events.
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
MouseWheelListener
The listener interface for receiving mouse wheel events on a component.
Classes in
java.awt.event
used by
javax.swing.plaf.multi
Class
Description
MouseEvent
An event which indicates that a mouse action occurred in a component.
Classes in
java.awt.event
used by
javax.swing.plaf.synth
Class
Description
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
Classes in
java.awt.event
used by
javax.swing.table
Class
Description
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
MouseEvent
An event which indicates that a mouse action occurred in a component.
Classes in
java.awt.event
used by
javax.swing.text
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
ActionListener
The listener interface for receiving action events.
FocusEvent
A low-level event which indicates that a Component has gained or lost the
 input focus.
FocusListener
The listener interface for receiving keyboard focus events on
 a component.
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
Classes in
java.awt.event
used by
javax.swing.text.html
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
ActionListener
The listener interface for receiving action events.
InputEvent
The root event class for all component-level input events.
MouseAdapter
An abstract adapter class for receiving mouse events.
MouseEvent
An event which indicates that a mouse action occurred in a component.
MouseListener
The listener interface for receiving "interesting" mouse events
 (press, release, click, enter, and exit) on a component.
MouseMotionListener
The listener interface for receiving mouse motion events on a component.
MouseWheelListener
The listener interface for receiving mouse wheel events on a component.
Classes in
java.awt.event
used by
javax.swing.tree
Class
Description
ActionEvent
A semantic event which indicates that a component-defined action occurred.
ActionListener
The listener interface for receiving action events.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.