Uses of Class java.awt.event.MouseEvent (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.event.MouseEvent
Packages that use
MouseEvent
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.event
Provides for events fired by Swing components.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
Uses of
MouseEvent
in
java.awt
Methods in
java.awt
with parameters of type
MouseEvent
Modifier and Type
Method
Description
void
AWTEventMulticaster.
mouseClicked
(
MouseEvent
e)
Handles the mouseClicked event by invoking the
 mouseClicked methods on listener-a and listener-b.
void
AWTEventMulticaster.
mouseDragged
(
MouseEvent
e)
Handles the mouseDragged event by invoking the
 mouseDragged methods on listener-a and listener-b.
void
AWTEventMulticaster.
mouseEntered
(
MouseEvent
e)
Handles the mouseEntered event by invoking the
 mouseEntered methods on listener-a and listener-b.
void
AWTEventMulticaster.
mouseExited
(
MouseEvent
e)
Handles the mouseExited event by invoking the
 mouseExited methods on listener-a and listener-b.
void
AWTEventMulticaster.
mouseMoved
(
MouseEvent
e)
Handles the mouseMoved event by invoking the
 mouseMoved methods on listener-a and listener-b.
void
AWTEventMulticaster.
mousePressed
(
MouseEvent
e)
Handles the mousePressed event by invoking the
 mousePressed methods on listener-a and listener-b.
void
AWTEventMulticaster.
mouseReleased
(
MouseEvent
e)
Handles the mouseReleased event by invoking the
 mouseReleased methods on listener-a and listener-b.
protected void
Component.
processMouseEvent
(
MouseEvent
e)
Processes mouse events occurring on this component by
 dispatching them to any registered
MouseListener
objects.
protected void
Component.
processMouseMotionEvent
(
MouseEvent
e)
Processes mouse motion events occurring on this component by
 dispatching them to any registered
MouseMotionListener
objects.
Uses of
MouseEvent
in
java.awt.dnd
Methods in
java.awt.dnd
with parameters of type
MouseEvent
Modifier and Type
Method
Description
void
MouseDragGestureRecognizer.
mouseClicked
(
MouseEvent
e)
Invoked when the mouse has been clicked on a component.
void
MouseDragGestureRecognizer.
mouseDragged
(
MouseEvent
e)
Invoked when a mouse button is pressed on a component.
void
MouseDragGestureRecognizer.
mouseEntered
(
MouseEvent
e)
Invoked when the mouse enters a component.
void
MouseDragGestureRecognizer.
mouseExited
(
MouseEvent
e)
Invoked when the mouse exits a component.
void
MouseDragGestureRecognizer.
mouseMoved
(
MouseEvent
e)
Invoked when the mouse button has been moved on a component
 (with no buttons no down).
void
MouseDragGestureRecognizer.
mousePressed
(
MouseEvent
e)
Invoked when a mouse button has been
 pressed on a
Component
.
void
MouseDragGestureRecognizer.
mouseReleased
(
MouseEvent
e)
Invoked when a mouse button has been released on a component.
Uses of
MouseEvent
in
java.awt.event
Subclasses of
MouseEvent
in
java.awt.event
Modifier and Type
Class
Description
class
MouseWheelEvent
An event which indicates that the mouse wheel was rotated in a component.
Methods in
java.awt.event
with parameters of type
MouseEvent
Modifier and Type
Method
Description
void
MouseAdapter.
mouseClicked
(
MouseEvent
e)
Invoked when the mouse button has been clicked (pressed
 and released) on a component.
void
MouseListener.
mouseClicked
(
MouseEvent
e)
Invoked when the mouse button has been clicked (pressed
 and released) on a component.
void
MouseAdapter.
mouseDragged
(
MouseEvent
e)
Invoked when a mouse button is pressed on a component and then
 dragged.
void
MouseMotionAdapter.
mouseDragged
(
MouseEvent
e)
Invoked when a mouse button is pressed on a component and then
 dragged.
void
MouseMotionListener.
mouseDragged
(
MouseEvent
e)
Invoked when a mouse button is pressed on a component and then
 dragged.
void
MouseAdapter.
mouseEntered
(
MouseEvent
e)
Invoked when the mouse enters a component.
void
MouseListener.
mouseEntered
(
MouseEvent
e)
Invoked when the mouse enters a component.
void
MouseAdapter.
mouseExited
(
MouseEvent
e)
Invoked when the mouse exits a component.
void
MouseListener.
mouseExited
(
MouseEvent
e)
Invoked when the mouse exits a component.
void
MouseAdapter.
mouseMoved
(
MouseEvent
e)
Invoked when the mouse cursor has been moved onto a component
 but no buttons have been pushed.
void
MouseMotionAdapter.
mouseMoved
(
MouseEvent
e)
Invoked when the mouse button has been moved on a component
 (with no buttons no down).
void
MouseMotionListener.
mouseMoved
(
MouseEvent
e)
Invoked when the mouse cursor has been moved onto a component
 but no buttons have been pushed.
void
MouseAdapter.
mousePressed
(
MouseEvent
e)
Invoked when a mouse button has been pressed on a component.
void
MouseListener.
mousePressed
(
MouseEvent
e)
Invoked when a mouse button has been pressed on a component.
void
MouseAdapter.
mouseReleased
(
MouseEvent
e)
Invoked when a mouse button has been released on a component.
void
MouseListener.
mouseReleased
(
MouseEvent
e)
Invoked when a mouse button has been released on a component.
Uses of
MouseEvent
in
javax.swing
Methods in
javax.swing
that return
MouseEvent
Modifier and Type
Method
Description
static
MouseEvent
SwingUtilities.
convertMouseEvent
(
Component
source,
MouseEvent
sourceEvent,
Component
destination)
Returns a MouseEvent similar to
sourceEvent
except that its x
 and y members have been converted to
destination
's coordinate
 system.
Methods in
javax.swing
with parameters of type
MouseEvent
Modifier and Type
Method
Description
static
MouseEvent
SwingUtilities.
convertMouseEvent
(
Component
source,
MouseEvent
sourceEvent,
Component
destination)
Returns a MouseEvent similar to
sourceEvent
except that its x
 and y members have been converted to
destination
's coordinate
 system.
Point
JComponent.
getPopupLocation
(
MouseEvent
event)
Returns the preferred location to display the popup menu in this
 component's coordinate system.
Point
JComponent.
getToolTipLocation
(
MouseEvent
event)
Returns the tooltip location in this component's coordinate system.
String
JComponent.
getToolTipText
(
MouseEvent
event)
Returns the string to be used as the tooltip for
event
.
String
JList.
getToolTipText
(
MouseEvent
event)
Returns the tooltip text to be used for the given event.
String
JTabbedPane.
getToolTipText
(
MouseEvent
event)
Returns the tooltip text for the component determined by the
 mouse event location.
String
JTable.
getToolTipText
(
MouseEvent
event)
Overrides
JComponent
's
getToolTipText
method in order to allow the renderer's tips to be used
 if it has text set.
String
JTree.
getToolTipText
(
MouseEvent
event)
Overrides
JComponent
's
getToolTipText
method in order to allow
 renderer's tips to be used if it has text set.
static boolean
SwingUtilities.
isLeftMouseButton
(
MouseEvent
anEvent)
Returns true if the mouse event specifies the left mouse button.
static boolean
SwingUtilities.
isMiddleMouseButton
(
MouseEvent
anEvent)
Returns true if the mouse event specifies the middle mouse button.
boolean
JPopupMenu.
isPopupTrigger
(
MouseEvent
e)
Returns true if the
MouseEvent
is considered a popup trigger
 by the
JPopupMenu
's currently installed UI.
static boolean
SwingUtilities.
isRightMouseButton
(
MouseEvent
anEvent)
Returns true if the mouse event specifies the right mouse button.
void
ToolTipManager.
mouseDragged
(
MouseEvent
event)
Called when the mouse is pressed and dragged.
void
ToolTipManager.
mouseEntered
(
MouseEvent
event)
Called when the mouse enters the region of a component.
void
ToolTipManager.
mouseExited
(
MouseEvent
event)
Called when the mouse exits the region of a component.
void
ToolTipManager.
mouseMoved
(
MouseEvent
event)
Called when the mouse is moved.
void
ToolTipManager.
mousePressed
(
MouseEvent
event)
Called when the mouse is pressed.
protected void
JComponent.
processMouseEvent
(
MouseEvent
e)
Processes mouse events occurring on this component by
 dispatching them to any registered
MouseListener
objects, refer to
Component.processMouseEvent(MouseEvent)
for a complete description of this method.
void
JMenuBar.
processMouseEvent
(
MouseEvent
event,
MenuElement
[] path,
MenuSelectionManager
manager)
Implemented to be a
MenuElement
-- does nothing.
void
JMenuItem.
processMouseEvent
(
MouseEvent
e,
MenuElement
[] path,
MenuSelectionManager
manager)
Processes a mouse event forwarded from the
MenuSelectionManager
and changes the menu
 selection, if necessary, by using the
MenuSelectionManager
's API.
void
JPopupMenu.
processMouseEvent
(
MouseEvent
event,
MenuElement
[] path,
MenuSelectionManager
manager)
This method is required to conform to the
MenuElement
interface, but it not implemented.
void
MenuElement.
processMouseEvent
(
MouseEvent
event,
MenuElement
[] path,
MenuSelectionManager
manager)
Processes a mouse event.
void
MenuSelectionManager.
processMouseEvent
(
MouseEvent
event)
When a MenuElement receives an event from a MouseListener, it should never process the event
 directly.
protected void
JComponent.
processMouseMotionEvent
(
MouseEvent
e)
Processes mouse motion events, such as MouseEvent.MOUSE_DRAGGED.
Uses of
MouseEvent
in
javax.swing.event
Subclasses of
MouseEvent
in
javax.swing.event
Modifier and Type
Class
Description
class
MenuDragMouseEvent
MenuDragMouseEvent is used to notify interested parties that
 the menu element has received a MouseEvent forwarded to it
 under drag conditions.
Uses of
MouseEvent
in
javax.swing.plaf
Methods in
javax.swing.plaf
with parameters of type
MouseEvent
Modifier and Type
Method
Description
boolean
PopupMenuUI.
isPopupTrigger
(
MouseEvent
e)
Returns whether or not the given
MouseEvent
is the popup menu
 trigger event for the platform
protected void
LayerUI.
processMouseEvent
(
MouseEvent
e,
JLayer
<? extends
V
> l)
Processes mouse events occurring on the
JLayer
or any of its subcomponents.
protected void
LayerUI.
processMouseMotionEvent
(
MouseEvent
e,
JLayer
<? extends
V
> l)
Processes mouse motion event occurring on the
JLayer
or any of its subcomponents.
Uses of
MouseEvent
in
javax.swing.plaf.basic
Methods in
javax.swing.plaf.basic
that return
MouseEvent
Modifier and Type
Method
Description
protected
MouseEvent
BasicComboPopup.
convertMouseEvent
(
MouseEvent
e)
Converts mouse event.
Methods in
javax.swing.plaf.basic
with parameters of type
MouseEvent
Modifier and Type
Method
Description
protected void
BasicSplitPaneDivider.DragController.
completeDrag
(
MouseEvent
e)
Messages finishDraggingTo with the new location for the mouse
 event.
protected void
BasicSplitPaneDivider.DragController.
continueDrag
(
MouseEvent
e)
Messages dragDividerTo with the new location for the mouse
 event.
protected
MouseEvent
BasicComboPopup.
convertMouseEvent
(
MouseEvent
e)
Converts mouse event.
protected void
BasicComboPopup.
delegateFocus
(
MouseEvent
e)
This is a utility method that helps event handlers figure out where to
 send the focus when the popup is brought up.
protected boolean
BasicTreeUI.
isMultiSelectEvent
(
MouseEvent
event)
Returning
true
signifies a mouse event on the node should select
 from the anchor point.
protected boolean
BasicTreeUI.
isToggleEvent
(
MouseEvent
event)
Returning
true
indicates the row under the mouse should be toggled
 based on the event.
protected boolean
BasicTreeUI.
isToggleSelectionEvent
(
MouseEvent
event)
Returning
true
signifies a mouse event on the node should toggle
 the selection of only the row under mouse.
void
BasicButtonListener.
mouseClicked
(
MouseEvent
e)
void
BasicInternalFrameUI.BorderListener.
mouseClicked
(
MouseEvent
e)
void
BasicInternalFrameUI.GlassPaneDispatcher.
mouseClicked
(
MouseEvent
e)
Invoked when the mouse button has been clicked (pressed
 and released) on a component.
void
BasicListUI.MouseInputHandler.
mouseClicked
(
MouseEvent
e)
void
BasicMenuItemUI.MouseInputHandler.
mouseClicked
(
MouseEvent
e)
Deprecated, for removal: This API element is subject to removal in a future version.
Invoked when the mouse button has been clicked (pressed
 and released) on a component.
void
BasicMenuUI.MouseInputHandler.
mouseClicked
(
MouseEvent
e)
void
BasicTableHeaderUI.MouseInputHandler.
mouseClicked
(
MouseEvent
e)
void
BasicTableUI.MouseInputHandler.
mouseClicked
(
MouseEvent
e)
void
BasicToolBarUI.DockingListener.
mouseClicked
(
MouseEvent
e)
void
BasicTreeUI.MouseInputHandler.
mouseClicked
(
MouseEvent
e)
void
BasicButtonListener.
mouseDragged
(
MouseEvent
e)
void
BasicDesktopIconUI.MouseInputHandler.
mouseDragged
(
MouseEvent
e)
void
BasicInternalFrameUI.BorderListener.
mouseDragged
(
MouseEvent
e)
void
BasicInternalFrameUI.GlassPaneDispatcher.
mouseDragged
(
MouseEvent
e)
Invoked when a mouse button is pressed on a component and then
 dragged.
void
BasicListUI.MouseInputHandler.
mouseDragged
(
MouseEvent
e)
void
BasicMenuItemUI.MouseInputHandler.
mouseDragged
(
MouseEvent
e)
Deprecated, for removal: This API element is subject to removal in a future version.
Invoked when a mouse button is pressed on a component and then
 dragged.
void
BasicMenuUI.MouseInputHandler.
mouseDragged
(
MouseEvent
e)
Invoked when a mouse button is pressed on the menu and then dragged.
void
BasicScrollBarUI.TrackListener.
mouseDragged
(
MouseEvent
e)
Set the models value to the position of the thumb's top of Vertical
 scrollbar, or the left/right of Horizontal scrollbar in
 left-to-right/right-to-left scrollbar relative to the origin of the
 track.
void
BasicSliderUI.TrackListener.
mouseDragged
(
MouseEvent
e)
Set the models value to the position of the top/left
 of the thumb relative to the origin of the track.
void
BasicSplitPaneDivider.MouseHandler.
mouseDragged
(
MouseEvent
e)
If dragger is not null it is messaged with continueDrag.
void
BasicTableHeaderUI.MouseInputHandler.
mouseDragged
(
MouseEvent
e)
void
BasicTableUI.MouseInputHandler.
mouseDragged
(
MouseEvent
e)
void
BasicToolBarUI.DockingListener.
mouseDragged
(
MouseEvent
e)
void
BasicTreeUI.MouseHandler.
mouseDragged
(
MouseEvent
e)
void
BasicTreeUI.MouseInputHandler.
mouseDragged
(
MouseEvent
e)
void
BasicButtonListener.
mouseEntered
(
MouseEvent
e)
void
BasicFileChooserUI.DoubleClickListener.
mouseEntered
(
MouseEvent
e)
The JList used for representing the files is created by subclasses, but the
 selection is monitored in this class.
void
BasicInternalFrameUI.BorderListener.
mouseEntered
(
MouseEvent
e)
void
BasicInternalFrameUI.GlassPaneDispatcher.
mouseEntered
(
MouseEvent
e)
Invoked when the mouse enters a component.
void
BasicListUI.MouseInputHandler.
mouseEntered
(
MouseEvent
e)
void
BasicMenuItemUI.MouseInputHandler.
mouseEntered
(
MouseEvent
e)
Deprecated, for removal: This API element is subject to removal in a future version.
Invoked when the mouse enters a component.
void
BasicMenuUI.MouseInputHandler.
mouseEntered
(
MouseEvent
e)
Invoked when the cursor enters the menu.
void
BasicSplitPaneDivider.MouseHandler.
mouseEntered
(
MouseEvent
e)
Invoked when the mouse enters a component.
void
BasicTableHeaderUI.MouseInputHandler.
mouseEntered
(
MouseEvent
e)
void
BasicTableUI.MouseInputHandler.
mouseEntered
(
MouseEvent
e)
void
BasicToolBarUI.DockingListener.
mouseEntered
(
MouseEvent
e)
void
BasicTreeUI.MouseInputHandler.
mouseEntered
(
MouseEvent
e)
void
BasicButtonListener.
mouseExited
(
MouseEvent
e)
void
BasicInternalFrameUI.BorderListener.
mouseExited
(
MouseEvent
e)
void
BasicInternalFrameUI.GlassPaneDispatcher.
mouseExited
(
MouseEvent
e)
Invoked when the mouse exits a component.
void
BasicListUI.MouseInputHandler.
mouseExited
(
MouseEvent
e)
void
BasicMenuItemUI.MouseInputHandler.
mouseExited
(
MouseEvent
e)
Deprecated, for removal: This API element is subject to removal in a future version.
Invoked when the mouse exits a component.
void
BasicMenuUI.MouseInputHandler.
mouseExited
(
MouseEvent
e)
void
BasicScrollBarUI.TrackListener.
mouseExited
(
MouseEvent
e)
Invoked when the mouse exits the scrollbar.
void
BasicSplitPaneDivider.MouseHandler.
mouseExited
(
MouseEvent
e)
Invoked when the mouse exits a component.
void
BasicTableHeaderUI.MouseInputHandler.
mouseExited
(
MouseEvent
e)
void
BasicTableUI.MouseInputHandler.
mouseExited
(
MouseEvent
e)
void
BasicToolBarUI.DockingListener.
mouseExited
(
MouseEvent
e)
void
BasicTreeUI.MouseInputHandler.
mouseExited
(
MouseEvent
e)
void
BasicButtonListener.
mouseMoved
(
MouseEvent
e)
void
BasicDesktopIconUI.MouseInputHandler.
mouseMoved
(
MouseEvent
e)
void
BasicInternalFrameUI.BorderListener.
mouseMoved
(
MouseEvent
e)
void
BasicInternalFrameUI.GlassPaneDispatcher.
mouseMoved
(
MouseEvent
e)
Invoked when the mouse cursor has been moved onto a component
 but no buttons have been pushed.
void
BasicListUI.MouseInputHandler.
mouseMoved
(
MouseEvent
e)
void
BasicMenuItemUI.MouseInputHandler.
mouseMoved
(
MouseEvent
e)
Deprecated, for removal: This API element is subject to removal in a future version.
Invoked when the mouse cursor has been moved onto a component
 but no buttons have been pushed.
void
BasicMenuUI.MouseInputHandler.
mouseMoved
(
MouseEvent
e)
void
BasicScrollBarUI.TrackListener.
mouseMoved
(
MouseEvent
e)
Invoked when the mouse cursor has been moved onto a component
 but no buttons have been pushed.
void
BasicSliderUI.TrackListener.
mouseMoved
(
MouseEvent
e)
Invoked when the mouse cursor has been moved onto a component
 but no buttons have been pushed.
void
BasicSplitPaneDivider.MouseHandler.
mouseMoved
(
MouseEvent
e)
Resets the cursor based on the orientation.
void
BasicTableHeaderUI.MouseInputHandler.
mouseMoved
(
MouseEvent
e)
void
BasicTableUI.MouseInputHandler.
mouseMoved
(
MouseEvent
e)
void
BasicToolBarUI.DockingListener.
mouseMoved
(
MouseEvent
e)
void
BasicTreeUI.MouseHandler.
mouseMoved
(
MouseEvent
e)
Invoked when the mouse button has been moved on a component
 (with no buttons no down).
void
BasicTreeUI.MouseInputHandler.
mouseMoved
(
MouseEvent
e)
void
BasicButtonListener.
mousePressed
(
MouseEvent
e)
void
BasicComboPopup.InvocationMouseHandler.
mousePressed
(
MouseEvent
e)
Responds to mouse-pressed events on the combo box.
void
BasicDesktopIconUI.MouseInputHandler.
mousePressed
(
MouseEvent
e)
void
BasicInternalFrameUI.BorderListener.
mousePressed
(
MouseEvent
e)
void
BasicInternalFrameUI.GlassPaneDispatcher.
mousePressed
(
MouseEvent
e)
Invoked when a mouse button has been pressed on a component.
void
BasicListUI.MouseInputHandler.
mousePressed
(
MouseEvent
e)
void
BasicMenuItemUI.MouseInputHandler.
mousePressed
(
MouseEvent
e)
Deprecated, for removal: This API element is subject to removal in a future version.
Invoked when a mouse button has been pressed on a component.
void
BasicMenuUI.MouseInputHandler.
mousePressed
(
MouseEvent
e)
Invoked when the mouse has been clicked on the menu.
void
BasicScrollBarUI.TrackListener.
mousePressed
(
MouseEvent
e)
If the mouse is pressed above the "thumb" component
 then reduce the scrollbars value by one page ("page up"),
 otherwise increase it by one page.
void
BasicSliderUI.TrackListener.
mousePressed
(
MouseEvent
e)
If the mouse is pressed above the "thumb" component
 then reduce the scrollbars value by one page ("page up"),
 otherwise increase it by one page.
void
BasicSplitPaneDivider.MouseHandler.
mousePressed
(
MouseEvent
e)
Starts the dragging session by creating the appropriate instance
 of DragController.
void
BasicTableHeaderUI.MouseInputHandler.
mousePressed
(
MouseEvent
e)
void
BasicTableUI.MouseInputHandler.
mousePressed
(
MouseEvent
e)
void
BasicToolBarUI.DockingListener.
mousePressed
(
MouseEvent
e)
void
BasicTreeUI.MouseHandler.
mousePressed
(
MouseEvent
e)
Invoked when a mouse button has been pressed on a component.
void
BasicTreeUI.MouseInputHandler.
mousePressed
(
MouseEvent
e)
void
BasicButtonListener.
mouseReleased
(
MouseEvent
e)
void
BasicComboPopup.InvocationMouseHandler.
mouseReleased
(
MouseEvent
e)
Responds to the user terminating
 a click or drag that began on the combo box.
void
BasicDesktopIconUI.MouseInputHandler.
mouseReleased
(
MouseEvent
e)
void
BasicInternalFrameUI.BorderListener.
mouseReleased
(
MouseEvent
e)
void
BasicInternalFrameUI.GlassPaneDispatcher.
mouseReleased
(
MouseEvent
e)
Invoked when a mouse button has been released on a component.
void
BasicListUI.MouseInputHandler.
mouseReleased
(
MouseEvent
e)
void
BasicMenuItemUI.MouseInputHandler.
mouseReleased
(
MouseEvent
e)
Deprecated, for removal: This API element is subject to removal in a future version.
Invoked when a mouse button has been released on a component.
void
BasicMenuUI.MouseInputHandler.
mouseReleased
(
MouseEvent
e)
Invoked when the mouse has been released on the menu.
void
BasicSliderUI.TrackListener.
mouseReleased
(
MouseEvent
e)
Invoked when a mouse button has been released on a component.
void
BasicSplitPaneDivider.MouseHandler.
mouseReleased
(
MouseEvent
e)
If dragger is not null it is messaged with completeDrag.
void
BasicTableHeaderUI.MouseInputHandler.
mouseReleased
(
MouseEvent
e)
void
BasicTableUI.MouseInputHandler.
mouseReleased
(
MouseEvent
e)
void
BasicToolBarUI.DockingListener.
mouseReleased
(
MouseEvent
e)
void
BasicTreeUI.MouseInputHandler.
mouseReleased
(
MouseEvent
e)
protected int
BasicSplitPaneDivider.DragController.
positionForMouseEvent
(
MouseEvent
e)
Returns the new position to put the divider at based on
 the passed in MouseEvent.
protected int
BasicSplitPaneDivider.VerticalDragController.
positionForMouseEvent
(
MouseEvent
e)
Returns the new position to put the divider at based on
 the passed in MouseEvent.
void
BasicCheckBoxMenuItemUI.
processMouseEvent
(
JMenuItem
item,
MouseEvent
e,
MenuElement
[] path,
MenuSelectionManager
manager)
Invoked when mouse event occurs.
void
BasicRadioButtonMenuItemUI.
processMouseEvent
(
JMenuItem
item,
MouseEvent
e,
MenuElement
[] path,
MenuSelectionManager
manager)
Invoked when mouse event occurs.
protected void
BasicTreeUI.
selectPathForEvent
(
TreePath
path,
MouseEvent
event)
Messaged to update the selection based on a
MouseEvent
over a
 particular row.
protected boolean
BasicTreeUI.
startEditing
(
TreePath
path,
MouseEvent
event)
Will start editing for node if there is a
cellEditor
and
shouldSelectCell
returns
true
.
protected void
BasicComboPopup.
updateListBoxSelectionForEvent
(
MouseEvent
anEvent,
 boolean shouldScroll)
A utility method used by the event listeners.
Constructors in
javax.swing.plaf.basic
with parameters of type
MouseEvent
Modifier
Constructor
Description
protected
DragController
(
MouseEvent
e)
Constructs a new instance of
DragController
.
MouseInputHandler
(
Component
source,
Component
destination,
MouseEvent
event)
Constructs a new instance of
MouseInputHandler
.
protected
VerticalDragController
(
MouseEvent
e)
Constructs a new instance of
VerticalDragController
.
Uses of
MouseEvent
in
javax.swing.plaf.metal
Methods in
javax.swing.plaf.metal
with parameters of type
MouseEvent
Modifier and Type
Method
Description
void
MetalComboBoxUI.MetalComboPopup.
delegateFocus
(
MouseEvent
e)
Deprecated.
Uses of
MouseEvent
in
javax.swing.plaf.multi
Methods in
javax.swing.plaf.multi
with parameters of type
MouseEvent
Modifier and Type
Method
Description
boolean
MultiPopupMenuUI.
isPopupTrigger
(
MouseEvent
a)
Invokes the
isPopupTrigger
method on each UI handled by this object.
Uses of
MouseEvent
in
javax.swing.table
Methods in
javax.swing.table
with parameters of type
MouseEvent
Modifier and Type
Method
Description
String
JTableHeader.
getToolTipText
(
MouseEvent
event)
Allows the renderer's tips to be used if there is text set.
Uses of
MouseEvent
in
javax.swing.text
Methods in
javax.swing.text
with parameters of type
MouseEvent
Modifier and Type
Method
Description
String
JTextComponent.
getToolTipText
(
MouseEvent
event)
Returns the string to be used as the tooltip for
event
.
void
DefaultCaret.
mouseClicked
(
MouseEvent
e)
Called when the mouse is clicked.
void
DefaultCaret.
mouseDragged
(
MouseEvent
e)
Moves the caret position
 according to the mouse pointer's current
 location.
void
DefaultCaret.
mouseEntered
(
MouseEvent
e)
Called when the mouse enters a region.
void
DefaultCaret.
mouseExited
(
MouseEvent
e)
Called when the mouse exits a region.
void
DefaultCaret.
mouseMoved
(
MouseEvent
e)
Called when the mouse is moved.
void
DefaultCaret.
mousePressed
(
MouseEvent
e)
If button 1 is pressed, this is implemented to
 request focus on the associated text component,
 and to set the caret position.
void
DefaultCaret.
mouseReleased
(
MouseEvent
e)
Called when the mouse is released.
protected void
DefaultCaret.
moveCaret
(
MouseEvent
e)
Tries to move the position of the caret from
 the coordinates of a mouse event, using viewToModel().
protected void
DefaultCaret.
positionCaret
(
MouseEvent
e)
Tries to set the position of the caret from
 the coordinates of a mouse event, using viewToModel().
Uses of
MouseEvent
in
javax.swing.text.html
Methods in
javax.swing.text.html
with parameters of type
MouseEvent
Modifier and Type
Method
Description
void
HTMLEditorKit.LinkController.
mouseClicked
(
MouseEvent
e)
Called for a mouse click event.
void
HTMLEditorKit.LinkController.
mouseDragged
(
MouseEvent
e)
void
HTMLEditorKit.LinkController.
mouseMoved
(
MouseEvent
e)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.