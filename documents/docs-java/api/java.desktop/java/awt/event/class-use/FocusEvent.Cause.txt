Uses of Enum Class java.awt.event.FocusEvent.Cause (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Enum Class
java.awt.event.FocusEvent.Cause
Packages that use
FocusEvent.Cause
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
Uses of
FocusEvent.Cause
in
java.awt
Methods in
java.awt
with parameters of type
FocusEvent.Cause
Modifier and Type
Method
Description
protected boolean
Component.
requestFocus
(boolean temporary,
FocusEvent.Cause
cause)
Requests by the reason of
cause
that this
Component
get
 the input focus, and that this
Component
's top-level ancestor
 become the focused
Window
.
void
Component.
requestFocus
(
FocusEvent.Cause
cause)
Requests by the reason of
cause
that this Component get the input
 focus, and that this Component's top-level ancestor become the
 focused Window.
boolean
Component.
requestFocusInWindow
(
FocusEvent.Cause
cause)
Requests by the reason of
cause
that this Component get the input
 focus, if this Component's top-level ancestor is already the focused
 Window.
Uses of
FocusEvent.Cause
in
java.awt.event
Methods in
java.awt.event
that return
FocusEvent.Cause
Modifier and Type
Method
Description
final
FocusEvent.Cause
FocusEvent.
getCause
()
Returns the event cause.
static
FocusEvent.Cause
FocusEvent.Cause.
valueOf
(
String
name)
Returns the enum constant of this class with the specified name.
static
FocusEvent.Cause
[]
FocusEvent.Cause.
values
()
Returns an array containing the constants of this enum class, in
the order they are declared.
Constructors in
java.awt.event
with parameters of type
FocusEvent.Cause
Modifier
Constructor
Description
FocusEvent
(
Component
source,
 int id,
 boolean temporary,
Component
opposite,
FocusEvent.Cause
cause)
Constructs a
FocusEvent
object with the
 specified temporary state, opposite
Component
and the cause.
Uses of
FocusEvent.Cause
in
javax.swing
Methods in
javax.swing
with parameters of type
FocusEvent.Cause
Modifier and Type
Method
Description
void
JToggleButton.
requestFocus
(
FocusEvent.Cause
cause)
If this toggle button is a member of the
ButtonGroup
which has
 another toggle button which is selected and can be the focus owner,
 and the focus cause argument denotes window activation or focus
 traversal action of any direction the result of the method execution
 is the same as calling
Component.requestFocus(FocusEvent.Cause)
on the toggle button
 selected in the group.
boolean
JToggleButton.
requestFocusInWindow
(
FocusEvent.Cause
cause)
If this toggle button is a member of the
ButtonGroup
which has
 another toggle button which is selected and can be the focus owner,
 and the focus cause argument denotes window activation or focus
 traversal action of any direction the result of the method execution
 is the same as calling
Component.requestFocusInWindow(FocusEvent.Cause)
on the toggle
 button selected in the group.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.