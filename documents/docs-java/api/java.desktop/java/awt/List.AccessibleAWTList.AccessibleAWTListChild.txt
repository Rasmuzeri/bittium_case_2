List.AccessibleAWTList.AccessibleAWTListChild (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field
|
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
java.awt
Class List.AccessibleAWTList.AccessibleAWTListChild
java.lang.Object
javax.accessibility.AccessibleContext
java.awt.Component.AccessibleAWTComponent
java.awt.List.AccessibleAWTList.AccessibleAWTListChild
All Implemented Interfaces:
Serializable
,
Accessible
,
AccessibleComponent
Enclosing class:
List.AccessibleAWTList
protected class
List.AccessibleAWTList.AccessibleAWTListChild
extends
Component.AccessibleAWTComponent
implements
Accessible
This class implements accessibility support for
 List children.  It provides an implementation of the
 Java Accessibility API appropriate to list children
 user-interface elements.
Since:
1.3
See Also:
Serialized Form
Nested Class Summary
Nested classes/interfaces declared in class java.awt.
Component.AccessibleAWTComponent
Component.AccessibleAWTComponent.AccessibleAWTComponentHandler
,
Component.AccessibleAWTComponent.AccessibleAWTFocusHandler
Field Summary
Fields declared in class java.awt.
Component.AccessibleAWTComponent
accessibleAWTComponentHandler
,
accessibleAWTFocusHandler
Fields declared in class javax.accessibility.
AccessibleContext
ACCESSIBLE_ACTION_PROPERTY
,
ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY
,
ACCESSIBLE_CARET_PROPERTY
,
ACCESSIBLE_CHILD_PROPERTY
,
ACCESSIBLE_COMPONENT_BOUNDS_CHANGED
,
ACCESSIBLE_DESCRIPTION_PROPERTY
,
ACCESSIBLE_HYPERTEXT_OFFSET
,
ACCESSIBLE_INVALIDATE_CHILDREN
,
ACCESSIBLE_NAME_PROPERTY
,
ACCESSIBLE_SELECTION_PROPERTY
,
ACCESSIBLE_STATE_PROPERTY
,
ACCESSIBLE_TABLE_CAPTION_CHANGED
,
ACCESSIBLE_TABLE_COLUMN_DESCRIPTION_CHANGED
,
ACCESSIBLE_TABLE_COLUMN_HEADER_CHANGED
,
ACCESSIBLE_TABLE_MODEL_CHANGED
,
ACCESSIBLE_TABLE_ROW_DESCRIPTION_CHANGED
,
ACCESSIBLE_TABLE_ROW_HEADER_CHANGED
,
ACCESSIBLE_TABLE_SUMMARY_CHANGED
,
ACCESSIBLE_TEXT_ATTRIBUTES_CHANGED
,
ACCESSIBLE_TEXT_PROPERTY
,
ACCESSIBLE_VALUE_PROPERTY
,
ACCESSIBLE_VISIBLE_DATA_PROPERTY
,
accessibleDescription
,
accessibleName
,
accessibleParent
Constructor Summary
Constructors
Constructor
Description
AccessibleAWTListChild
(
List
parent,
 int indexInParent)
Constructs new
AccessibleAWTListChild
with the given
 parent
List
and 0-based index of this object in the parent.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
addFocusListener
(
FocusListener
l)
Adds the specified focus listener to receive focus events from
 this component.
boolean
contains
(
Point
p)
Checks whether the specified point is within this object's
 bounds, where the point's x and y coordinates are defined to
 be relative to the coordinate system of the object.
Accessible
getAccessibleAt
(
Point
p)
Returns the
Accessible
child, if one exists,
 contained at the local coordinate
Point
.
Accessible
getAccessibleChild
(int i)
Return the specified Accessible child of the object.
int
getAccessibleChildrenCount
()
Returns the number of accessible children of the object.
AccessibleContext
getAccessibleContext
()
Gets the AccessibleContext for this object.
int
getAccessibleIndexInParent
()
Get the 0-based index of this object in its accessible parent.
AccessibleRole
getAccessibleRole
()
Get the role of this object.
AccessibleStateSet
getAccessibleStateSet
()
Get the state set of this object.
Color
getBackground
()
Get the background color of this object.
Rectangle
getBounds
()
Gets the bounds of this object in the form of a Rectangle object.
Cursor
getCursor
()
Get the Cursor of this object.
Font
getFont
()
Get the Font of this object.
FontMetrics
getFontMetrics
(
Font
f)
Get the FontMetrics of this object.
Color
getForeground
()
Get the foreground color of this object.
Locale
getLocale
()
Gets the locale of the component.
Point
getLocation
()
Gets the location of the object relative to the parent in the
 form of a point specifying the object's top-left corner in the
 screen's coordinate space.
Point
getLocationOnScreen
()
Returns the location of the object on the screen.
Dimension
getSize
()
Returns the size of this object in the form of a Dimension
 object.
boolean
isEnabled
()
Determine if the object is enabled.
boolean
isFocusTraversable
()
Returns whether this object can accept focus or not.
boolean
isShowing
()
Determine if the object is showing.
boolean
isVisible
()
Determine if the object is visible.
void
removeFocusListener
(
FocusListener
l)
Removes the specified focus listener so it no longer receives
 focus events from this component.
void
requestFocus
()
Requests focus for this object.
void
setBackground
(
Color
c)
Set the background color of this object.
void
setBounds
(
Rectangle
r)
Sets the bounds of this object in the form of a Rectangle
 object.
void
setCursor
(
Cursor
cursor)
Set the Cursor of this object.
void
setEnabled
(boolean b)
Set the enabled state of the object.
void
setFont
(
Font
f)
Set the Font of this object.
void
setForeground
(
Color
c)
Set the foreground color of this object.
void
setLocation
(
Point
p)
Sets the location of the object relative to the parent.
void
setSize
(
Dimension
d)
Resizes this object so that it has width and height.
void
setVisible
(boolean b)
Set the visible state of the object.
Methods declared in class java.awt.
Component.AccessibleAWTComponent
addPropertyChangeListener
,
getAccessibleComponent
,
getAccessibleDescription
,
getAccessibleName
,
getAccessibleParent
,
removePropertyChangeListener
Methods declared in class javax.accessibility.
AccessibleContext
firePropertyChange
,
getAccessibleAction
,
getAccessibleEditableText
,
getAccessibleIcon
,
getAccessibleRelationSet
,
getAccessibleSelection
,
getAccessibleTable
,
getAccessibleText
,
getAccessibleValue
,
setAccessibleDescription
,
setAccessibleName
,
setAccessibleParent
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
AccessibleAWTListChild
public
AccessibleAWTListChild
(
List
parent,
 int indexInParent)
Constructs new
AccessibleAWTListChild
with the given
 parent
List
and 0-based index of this object in the parent.
Parameters:
parent
- the parent
List
indexInParent
- the index in the parent
Method Details
getAccessibleContext
public
AccessibleContext
getAccessibleContext
()
Gets the AccessibleContext for this object.  In the
 implementation of the Java Accessibility API for this class,
 return this object, which acts as its own AccessibleContext.
Specified by:
getAccessibleContext
in interface
Accessible
Returns:
this object
getAccessibleRole
public
AccessibleRole
getAccessibleRole
()
Get the role of this object.
Overrides:
getAccessibleRole
in class
Component.AccessibleAWTComponent
Returns:
an instance of AccessibleRole describing the role of
 the object
See Also:
AccessibleRole
getAccessibleStateSet
public
AccessibleStateSet
getAccessibleStateSet
()
Get the state set of this object.  The AccessibleStateSet of an
 object is composed of a set of unique AccessibleState's.  A
 change in the AccessibleStateSet of an object will cause a
 PropertyChangeEvent to be fired for the
 ACCESSIBLE_STATE_PROPERTY property.
Overrides:
getAccessibleStateSet
in class
Component.AccessibleAWTComponent
Returns:
an instance of AccessibleStateSet containing the
 current state set of the object
See Also:
AccessibleStateSet
AccessibleState
Component.AccessibleAWTComponent.addPropertyChangeListener(java.beans.PropertyChangeListener)
getLocale
public
Locale
getLocale
()
Gets the locale of the component. If the component does not
 have a locale, then the locale of its parent is returned.
Overrides:
getLocale
in class
Component.AccessibleAWTComponent
Returns:
This component's locale.  If this component does not have
 a locale, the locale of its parent is returned.
Throws:
IllegalComponentStateException
- If the Component does not have its own locale and has not yet
 been added to a containment hierarchy such that the locale can
 be determined from the containing parent.
getAccessibleIndexInParent
public
int
getAccessibleIndexInParent
()
Get the 0-based index of this object in its accessible parent.
Overrides:
getAccessibleIndexInParent
in class
Component.AccessibleAWTComponent
Returns:
the 0-based index of this object in its parent; -1 if
 this object does not have an accessible parent.
See Also:
Component.AccessibleAWTComponent.getAccessibleParent()
getAccessibleChildrenCount()
getAccessibleChild(int)
getAccessibleChildrenCount
public
int
getAccessibleChildrenCount
()
Returns the number of accessible children of the object.
Overrides:
getAccessibleChildrenCount
in class
Component.AccessibleAWTComponent
Returns:
the number of accessible children of the object.
getAccessibleChild
public
Accessible
getAccessibleChild
(int i)
Return the specified Accessible child of the object.  The
 Accessible children of an Accessible object are zero-based,
 so the first child of an Accessible child is at index 0, the
 second child is at index 1, and so on.
Overrides:
getAccessibleChild
in class
Component.AccessibleAWTComponent
Parameters:
i
- zero-based index of child
Returns:
the Accessible child of the object
See Also:
getAccessibleChildrenCount()
getBackground
public
Color
getBackground
()
Get the background color of this object.
Specified by:
getBackground
in interface
AccessibleComponent
Overrides:
getBackground
in class
Component.AccessibleAWTComponent
Returns:
the background color, if supported, of the object;
 otherwise, null
See Also:
setBackground(java.awt.Color)
setBackground
public
void
setBackground
(
Color
c)
Set the background color of this object.
Specified by:
setBackground
in interface
AccessibleComponent
Overrides:
setBackground
in class
Component.AccessibleAWTComponent
Parameters:
c
- the new Color for the background
See Also:
getBackground()
getForeground
public
Color
getForeground
()
Get the foreground color of this object.
Specified by:
getForeground
in interface
AccessibleComponent
Overrides:
getForeground
in class
Component.AccessibleAWTComponent
Returns:
the foreground color, if supported, of the object;
 otherwise, null
See Also:
setForeground(java.awt.Color)
setForeground
public
void
setForeground
(
Color
c)
Set the foreground color of this object.
Specified by:
setForeground
in interface
AccessibleComponent
Overrides:
setForeground
in class
Component.AccessibleAWTComponent
Parameters:
c
- the new Color for the foreground
See Also:
getForeground()
getCursor
public
Cursor
getCursor
()
Get the Cursor of this object.
Specified by:
getCursor
in interface
AccessibleComponent
Overrides:
getCursor
in class
Component.AccessibleAWTComponent
Returns:
the Cursor, if supported, of the object; otherwise, null
See Also:
setCursor(java.awt.Cursor)
setCursor
public
void
setCursor
(
Cursor
cursor)
Set the Cursor of this object.
The method may have no visual effect if the Java platform
 implementation and/or the native system do not support
 changing the mouse cursor shape.
Specified by:
setCursor
in interface
AccessibleComponent
Overrides:
setCursor
in class
Component.AccessibleAWTComponent
Parameters:
cursor
- the new Cursor for the object
See Also:
getCursor()
getFont
public
Font
getFont
()
Get the Font of this object.
Specified by:
getFont
in interface
AccessibleComponent
Overrides:
getFont
in class
Component.AccessibleAWTComponent
Returns:
the Font, if supported, for the object; otherwise, null
See Also:
setFont(java.awt.Font)
setFont
public
void
setFont
(
Font
f)
Set the Font of this object.
Specified by:
setFont
in interface
AccessibleComponent
Overrides:
setFont
in class
Component.AccessibleAWTComponent
Parameters:
f
- the new Font for the object
See Also:
getFont()
getFontMetrics
public
FontMetrics
getFontMetrics
(
Font
f)
Get the FontMetrics of this object.
Specified by:
getFontMetrics
in interface
AccessibleComponent
Overrides:
getFontMetrics
in class
Component.AccessibleAWTComponent
Parameters:
f
- the Font
Returns:
the FontMetrics, if supported, the object; otherwise, null
See Also:
getFont()
isEnabled
public
boolean
isEnabled
()
Determine if the object is enabled.  Objects that are enabled
 will also have the AccessibleState.ENABLED state set in their
 AccessibleStateSet.
Specified by:
isEnabled
in interface
AccessibleComponent
Overrides:
isEnabled
in class
Component.AccessibleAWTComponent
Returns:
true if object is enabled; otherwise, false
See Also:
setEnabled(boolean)
AccessibleContext.getAccessibleStateSet()
AccessibleState.ENABLED
AccessibleStateSet
setEnabled
public
void
setEnabled
(boolean b)
Set the enabled state of the object.
Specified by:
setEnabled
in interface
AccessibleComponent
Overrides:
setEnabled
in class
Component.AccessibleAWTComponent
Parameters:
b
- if true, enables this object; otherwise, disables it
See Also:
isEnabled()
isVisible
public
boolean
isVisible
()
Determine if the object is visible.  Note: this means that the
 object intends to be visible; however, it may not be
 showing on the screen because one of the objects that this object
 is contained by is currently not visible.  To determine if an
 object is showing on the screen, use isShowing().
Objects that are visible will also have the
 AccessibleState.VISIBLE state set in their AccessibleStateSet.
Specified by:
isVisible
in interface
AccessibleComponent
Overrides:
isVisible
in class
Component.AccessibleAWTComponent
Returns:
true if object is visible; otherwise, false
See Also:
setVisible(boolean)
AccessibleContext.getAccessibleStateSet()
AccessibleState.VISIBLE
AccessibleStateSet
setVisible
public
void
setVisible
(boolean b)
Set the visible state of the object.
Specified by:
setVisible
in interface
AccessibleComponent
Overrides:
setVisible
in class
Component.AccessibleAWTComponent
Parameters:
b
- if true, shows this object; otherwise, hides it
See Also:
isVisible()
isShowing
public
boolean
isShowing
()
Determine if the object is showing.  This is determined by
 checking the visibility of the object and visibility of the
 object ancestors.
 Note: this will return true even if the object is obscured
 by another (for example, it to object is underneath a menu
 that was pulled down).
Specified by:
isShowing
in interface
AccessibleComponent
Overrides:
isShowing
in class
Component.AccessibleAWTComponent
Returns:
true if object is showing; otherwise, false
contains
public
boolean
contains
(
Point
p)
Checks whether the specified point is within this object's
 bounds, where the point's x and y coordinates are defined to
 be relative to the coordinate system of the object.
Specified by:
contains
in interface
AccessibleComponent
Overrides:
contains
in class
Component.AccessibleAWTComponent
Parameters:
p
- the Point relative to the coordinate system of the
 object
Returns:
true if object contains Point; otherwise false
See Also:
getBounds()
getLocationOnScreen
public
Point
getLocationOnScreen
()
Returns the location of the object on the screen.
Specified by:
getLocationOnScreen
in interface
AccessibleComponent
Overrides:
getLocationOnScreen
in class
Component.AccessibleAWTComponent
Returns:
location of object on screen; null if this object
 is not on the screen
See Also:
getBounds()
getLocation()
getLocation
public
Point
getLocation
()
Gets the location of the object relative to the parent in the
 form of a point specifying the object's top-left corner in the
 screen's coordinate space.
Specified by:
getLocation
in interface
AccessibleComponent
Overrides:
getLocation
in class
Component.AccessibleAWTComponent
Returns:
An instance of Point representing the top-left corner of
 the object's bounds in the coordinate space of the screen; null
 if this object or its parent are not on the screen
See Also:
getBounds()
getLocationOnScreen()
setLocation
public
void
setLocation
(
Point
p)
Sets the location of the object relative to the parent.
Specified by:
setLocation
in interface
AccessibleComponent
Overrides:
setLocation
in class
Component.AccessibleAWTComponent
Parameters:
p
- the new position for the top-left corner
See Also:
getLocation()
getBounds
public
Rectangle
getBounds
()
Gets the bounds of this object in the form of a Rectangle object.
 The bounds specify this object's width, height, and location
 relative to its parent.
Specified by:
getBounds
in interface
AccessibleComponent
Overrides:
getBounds
in class
Component.AccessibleAWTComponent
Returns:
A rectangle indicating this component's bounds; null if
 this object is not on the screen.
See Also:
contains(java.awt.Point)
setBounds
public
void
setBounds
(
Rectangle
r)
Sets the bounds of this object in the form of a Rectangle
 object.  The bounds specify this object's width, height, and
 location relative to its parent.
Specified by:
setBounds
in interface
AccessibleComponent
Overrides:
setBounds
in class
Component.AccessibleAWTComponent
Parameters:
r
- rectangle indicating this component's bounds
See Also:
getBounds()
getSize
public
Dimension
getSize
()
Returns the size of this object in the form of a Dimension
 object.  The height field of the Dimension object contains this
 object's height, and the width field of the Dimension object
 contains this object's width.
Specified by:
getSize
in interface
AccessibleComponent
Overrides:
getSize
in class
Component.AccessibleAWTComponent
Returns:
A Dimension object that indicates the size of this
 component; null if this object is not on the screen
See Also:
setSize(java.awt.Dimension)
setSize
public
void
setSize
(
Dimension
d)
Resizes this object so that it has width and height.
Specified by:
setSize
in interface
AccessibleComponent
Overrides:
setSize
in class
Component.AccessibleAWTComponent
Parameters:
d
- The dimension specifying the new size of the object.
See Also:
getSize()
getAccessibleAt
public
Accessible
getAccessibleAt
(
Point
p)
Returns the
Accessible
child, if one exists,
 contained at the local coordinate
Point
.
Specified by:
getAccessibleAt
in interface
AccessibleComponent
Overrides:
getAccessibleAt
in class
Component.AccessibleAWTComponent
Parameters:
p
- the point relative to the coordinate system of this
     object
Returns:
the
Accessible
, if it exists,
     at the specified location; otherwise
null
isFocusTraversable
public
boolean
isFocusTraversable
()
Returns whether this object can accept focus or not.   Objects
 that can accept focus will also have the
AccessibleState.FOCUSABLE
state set in their
AccessibleStateSet
.
Specified by:
isFocusTraversable
in interface
AccessibleComponent
Overrides:
isFocusTraversable
in class
Component.AccessibleAWTComponent
Returns:
true if object can accept focus; otherwise false
See Also:
AccessibleContext.getAccessibleStateSet()
AccessibleState.FOCUSABLE
AccessibleState.FOCUSED
AccessibleStateSet
requestFocus
public
void
requestFocus
()
Requests focus for this object.  If this object cannot accept
 focus, nothing will happen.  Otherwise, the object will attempt
 to take focus.
Specified by:
requestFocus
in interface
AccessibleComponent
Overrides:
requestFocus
in class
Component.AccessibleAWTComponent
See Also:
isFocusTraversable()
addFocusListener
public
void
addFocusListener
(
FocusListener
l)
Adds the specified focus listener to receive focus events from
 this component.
Specified by:
addFocusListener
in interface
AccessibleComponent
Overrides:
addFocusListener
in class
Component.AccessibleAWTComponent
Parameters:
l
- the focus listener
See Also:
removeFocusListener(java.awt.event.FocusListener)
removeFocusListener
public
void
removeFocusListener
(
FocusListener
l)
Removes the specified focus listener so it no longer receives
 focus events from this component.
Specified by:
removeFocusListener
in interface
AccessibleComponent
Overrides:
removeFocusListener
in class
Component.AccessibleAWTComponent
Parameters:
l
- the focus listener
See Also:
addFocusListener(java.awt.event.FocusListener)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.