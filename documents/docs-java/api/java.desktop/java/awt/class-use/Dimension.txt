Uses of Class java.awt.Dimension (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.Dimension
Packages that use
Dimension
Package
Description
com.sun.java.accessibility.util
Provides a collection of interfaces and classes that compose the Java Accessibility
 Utilities.
java.applet
Provides the classes necessary to create an applet and the classes an applet
 uses to communicate with its applet context.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
javax.accessibility
Defines a contract between user-interface components and an assistive
 technology that provides access to those components.
javax.imageio
The main package of the Java Image I/O API.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.border
Provides classes and interface for drawing specialized borders around a Swing
 component.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.plaf.nimbus
Provides user interface objects built according to the cross-platform Nimbus
 look and feel.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
Uses of
Dimension
in
com.sun.java.accessibility.util
Methods in
com.sun.java.accessibility.util
that return
Dimension
Modifier and Type
Method
Description
Dimension
Translator.
getSize
()
Returns the current size of this object.
Methods in
com.sun.java.accessibility.util
with parameters of type
Dimension
Modifier and Type
Method
Description
void
Translator.
setSize
(
Dimension
d)
Sets the current size of this object.
Uses of
Dimension
in
java.applet
Methods in
java.applet
with parameters of type
Dimension
Modifier and Type
Method
Description
void
Applet.
resize
(
Dimension
d)
Deprecated, for removal: This API element is subject to removal in a future version.
Requests that this applet be resized.
Uses of
Dimension
in
java.awt
Methods in
java.awt
that return
Dimension
Modifier and Type
Method
Description
Dimension
Toolkit.
getBestCursorSize
(int preferredWidth,
 int preferredHeight)
Returns the supported cursor dimension which is closest to the desired
 sizes.
Dimension
Component.
getMaximumSize
()
Gets the maximum size of this component.
Dimension
Container.
getMaximumSize
()
Returns the maximum size of this container.
Dimension
Component.
getMinimumSize
()
Gets the minimum size of this component.
Dimension
Container.
getMinimumSize
()
Returns the minimum size of this container.
Dimension
List.
getMinimumSize
()
Determines the minimum size of this scrolling list.
Dimension
List.
getMinimumSize
(int rows)
Gets the minimum dimensions for a list with the specified
 number of rows.
Dimension
TextArea.
getMinimumSize
()
Determines the minimum size of this text area.
Dimension
TextArea.
getMinimumSize
(int rows,
 int columns)
Determines the minimum size of a text area with the specified
 number of rows and columns.
Dimension
TextField.
getMinimumSize
()
Gets the minimum dimensions for this text field.
Dimension
TextField.
getMinimumSize
(int columns)
Gets the minimum dimensions for a text field with
 the specified number of columns.
protected
Dimension
GridBagLayout.
getMinSize
(
Container
parent,
GridBagLayoutInfo
info)
Figures out the minimum size of the
 parent based on the information from
getLayoutInfo
.
protected
Dimension
GridBagLayout.
GetMinSize
(
Container
parent,
GridBagLayoutInfo
info)
This method is obsolete and supplied for backwards
 compatibility only; new code should call
getMinSize
instead.
abstract
Dimension
PrintJob.
getPageDimension
()
Returns the dimensions of the page in pixels.
Dimension
Component.
getPreferredSize
()
Gets the preferred size of this component.
Dimension
Container.
getPreferredSize
()
Returns the preferred size of this container.
Dimension
List.
getPreferredSize
()
Gets the preferred size of this scrolling list.
Dimension
List.
getPreferredSize
(int rows)
Gets the preferred dimensions for a list with the specified
 number of rows.
Dimension
TextArea.
getPreferredSize
()
Determines the preferred size of this text area.
Dimension
TextArea.
getPreferredSize
(int rows,
 int columns)
Determines the preferred size of a text area with the specified
 number of rows and columns.
Dimension
TextField.
getPreferredSize
()
Gets the preferred size of this text field.
Dimension
TextField.
getPreferredSize
(int columns)
Gets the preferred size of this text field
 with the specified number of columns.
abstract
Dimension
Toolkit.
getScreenSize
()
Gets the size of the screen.
Dimension
Component.AccessibleAWTComponent.
getSize
()
Returns the size of this object in the form of a
Dimension
object.
Dimension
Component.
getSize
()
Returns the size of this component in the form of a
Dimension
object.
Dimension
Component.
getSize
(
Dimension
rv)
Stores the width/height of this component into "return value"
rv
and return
rv
.
Dimension
Dimension.
getSize
()
Gets the size of this
Dimension
object.
Dimension
List.AccessibleAWTList.AccessibleAWTListChild.
getSize
()
Returns the size of this object in the form of a Dimension
 object.
Dimension
MenuComponent.AccessibleAWTMenuComponent.
getSize
()
Returns the size of this object in the form of a
Dimension
object.
Dimension
Rectangle.
getSize
()
Gets the size of this
Rectangle
, represented by
 the returned
Dimension
.
Dimension
SplashScreen.
getSize
()
Returns the size of the splash screen window as a
Dimension
.
Dimension
TrayIcon.
getSize
()
Returns the size, in pixels, of the space that the tray icon
 occupies in the system tray.
Dimension
SystemTray.
getTrayIconSize
()
Returns the size, in pixels, of the space that a tray icon will
 occupy in the system tray.
Dimension
ScrollPane.
getViewportSize
()
Returns the current size of the scroll pane's view port.
Dimension
BorderLayout.
maximumLayoutSize
(
Container
target)
Returns the maximum dimensions for this layout given the components
 in the specified target container.
Dimension
CardLayout.
maximumLayoutSize
(
Container
target)
Returns the maximum dimensions for this layout given the components
 in the specified target container.
Dimension
GridBagLayout.
maximumLayoutSize
(
Container
target)
Returns the maximum dimensions for this layout given the components
 in the specified target container.
Dimension
LayoutManager2.
maximumLayoutSize
(
Container
target)
Calculates the maximum size dimensions for the specified container,
 given the components it contains.
Dimension
BorderLayout.
minimumLayoutSize
(
Container
target)
Determines the minimum size of the
target
container
 using this layout manager.
Dimension
CardLayout.
minimumLayoutSize
(
Container
parent)
Calculates the minimum size for the specified panel.
Dimension
FlowLayout.
minimumLayoutSize
(
Container
target)
Returns the minimum dimensions needed to layout the
visible
components contained in the specified target container.
Dimension
GridBagLayout.
minimumLayoutSize
(
Container
parent)
Determines the minimum size of the
parent
container
 using this grid bag layout.
Dimension
GridLayout.
minimumLayoutSize
(
Container
parent)
Determines the minimum size of the container argument using this
 grid layout.
Dimension
LayoutManager.
minimumLayoutSize
(
Container
parent)
Calculates the minimum size dimensions for the specified
 container, given the components it contains.
Dimension
Component.
minimumSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getMinimumSize()
.
Dimension
Container.
minimumSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getMinimumSize()
.
Dimension
List.
minimumSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getMinimumSize()
.
Dimension
List.
minimumSize
(int rows)
Deprecated.
As of JDK version 1.1,
 replaced by
getMinimumSize(int)
.
Dimension
TextArea.
minimumSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getMinimumSize()
.
Dimension
TextArea.
minimumSize
(int rows,
 int columns)
Deprecated.
As of JDK version 1.1,
 replaced by
getMinimumSize(int, int)
.
Dimension
TextField.
minimumSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getMinimumSize()
.
Dimension
TextField.
minimumSize
(int columns)
Deprecated.
As of JDK version 1.1,
 replaced by
getMinimumSize(int)
.
Dimension
BorderLayout.
preferredLayoutSize
(
Container
target)
Determines the preferred size of the
target
container using this layout manager, based on the components
 in the container.
Dimension
CardLayout.
preferredLayoutSize
(
Container
parent)
Determines the preferred size of the container argument using
 this card layout.
Dimension
FlowLayout.
preferredLayoutSize
(
Container
target)
Returns the preferred dimensions for this layout given the
visible
components in the specified target container.
Dimension
GridBagLayout.
preferredLayoutSize
(
Container
parent)
Determines the preferred size of the
parent
container using this grid bag layout.
Dimension
GridLayout.
preferredLayoutSize
(
Container
parent)
Determines the preferred size of the container argument using
 this grid layout.
Dimension
LayoutManager.
preferredLayoutSize
(
Container
parent)
Calculates the preferred size dimensions for the specified
 container, given the components it contains.
Dimension
Component.
preferredSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getPreferredSize()
.
Dimension
Container.
preferredSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getPreferredSize()
.
Dimension
List.
preferredSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getPreferredSize()
.
Dimension
List.
preferredSize
(int rows)
Deprecated.
As of JDK version 1.1,
 replaced by
getPreferredSize(int)
.
Dimension
TextArea.
preferredSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getPreferredSize()
.
Dimension
TextArea.
preferredSize
(int rows,
 int columns)
Deprecated.
As of JDK version 1.1,
 replaced by
getPreferredSize(int, int)
.
Dimension
TextField.
preferredSize
()
Deprecated.
As of JDK version 1.1,
 replaced by
getPreferredSize()
.
Dimension
TextField.
preferredSize
(int columns)
Deprecated.
As of JDK version 1.1,
 replaced by
getPreferredSize(int)
.
Dimension
Component.
size
()
Deprecated.
As of JDK version 1.1,
 replaced by
getSize()
.
Methods in
java.awt
with parameters of type
Dimension
Modifier and Type
Method
Description
Dimension
Component.
getSize
(
Dimension
rv)
Stores the width/height of this component into "return value"
rv
and return
rv
.
void
Component.
resize
(
Dimension
d)
Deprecated.
As of JDK version 1.1,
 replaced by
setSize(Dimension)
.
void
Component.
setMaximumSize
(
Dimension
maximumSize)
Sets the maximum size of this component to a constant
 value.
void
Component.
setMinimumSize
(
Dimension
minimumSize)
Sets the minimum size of this component to a constant
 value.
void
Window.
setMinimumSize
(
Dimension
minimumSize)
Sets the minimum size of this window to a constant
 value.
void
Component.
setPreferredSize
(
Dimension
preferredSize)
Sets the preferred size of this component to a constant
 value.
void
Component.AccessibleAWTComponent.
setSize
(
Dimension
d)
Resizes this object so that it has width and height.
void
Component.
setSize
(
Dimension
d)
Resizes this component so that it has width
d.width
and height
d.height
.
void
Dimension.
setSize
(
Dimension
d)
Sets the size of this
Dimension
object to the specified size.
void
List.AccessibleAWTList.AccessibleAWTListChild.
setSize
(
Dimension
d)
Resizes this object so that it has width and height.
void
MenuComponent.AccessibleAWTMenuComponent.
setSize
(
Dimension
d)
Resizes this object.
void
Rectangle.
setSize
(
Dimension
d)
Sets the size of this
Rectangle
to match the
 specified
Dimension
.
void
Window.
setSize
(
Dimension
d)
Resizes this component so that it has width
d.width
and height
d.height
.
Constructors in
java.awt
with parameters of type
Dimension
Modifier
Constructor
Description
Dimension
(
Dimension
d)
Creates an instance of
Dimension
whose width
 and height are the same as for the specified dimension.
Rectangle
(
Dimension
d)
Constructs a new
Rectangle
whose top left corner is
 (0, 0) and whose width and height are specified
 by the
Dimension
argument.
Rectangle
(
Point
p,
Dimension
d)
Constructs a new
Rectangle
whose upper-left corner is
 specified by the
Point
argument, and
 whose width and height are specified by the
Dimension
argument.
Uses of
Dimension
in
javax.accessibility
Methods in
javax.accessibility
that return
Dimension
Modifier and Type
Method
Description
Dimension
AccessibleComponent.
getSize
()
Returns the size of this object in the form of a
Dimension
object.
Methods in
javax.accessibility
with parameters of type
Dimension
Modifier and Type
Method
Description
void
AccessibleComponent.
setSize
(
Dimension
d)
Resizes this object so that it has width and height.
Uses of
Dimension
in
javax.imageio
Fields in
javax.imageio
declared as
Dimension
Modifier and Type
Field
Description
protected
Dimension
[]
ImageWriteParam.
preferredTileSizes
An array of preferred tile size range pairs.
protected
Dimension
ImageReadParam.
sourceRenderSize
The desired rendering width and height of the source, if
canSetSourceRenderSize
is
true
, or
null
.
Methods in
javax.imageio
that return
Dimension
Modifier and Type
Method
Description
Dimension
[]
ImageWriter.
getPreferredThumbnailSizes
(
ImageTypeSpecifier
imageType,
ImageWriteParam
param,
IIOMetadata
streamMetadata,
IIOMetadata
imageMetadata)
Returns an array of
Dimension
s indicating the
 legal size ranges for thumbnail images as they will be encoded
 in the output file or stream.
Dimension
[]
ImageWriteParam.
getPreferredTileSizes
()
Returns an array of
Dimension
s indicating the
 legal size ranges for tiles as they will be encoded in the
 output file or stream.
Dimension
ImageReadParam.
getSourceRenderSize
()
Returns the width and height of the source image as it
 will be rendered during decoding, if they have been set via the
setSourceRenderSize
method.
Methods in
javax.imageio
with parameters of type
Dimension
Modifier and Type
Method
Description
void
ImageReadParam.
setSourceRenderSize
(
Dimension
size)
If the image is able to be rendered at an arbitrary size, sets
 the source width and height to the supplied values.
Uses of
Dimension
in
javax.swing
Fields in
javax.swing
declared as
Dimension
Modifier and Type
Field
Description
protected
Dimension
JTable.
preferredViewportSize
Used by the
Scrollable
interface to determine the initial visible area.
Methods in
javax.swing
that return
Dimension
Modifier and Type
Method
Description
Dimension
UIDefaults.
getDimension
(
Object
key)
If the value of
key
is a
Dimension
return it,
 otherwise return
null
.
Dimension
UIDefaults.
getDimension
(
Object
key,
Locale
l)
If the value of
key
for the given
Locale
is a
Dimension
return it, otherwise return
null
.
static
Dimension
UIManager.
getDimension
(
Object
key)
Returns a dimension from the defaults.
static
Dimension
UIManager.
getDimension
(
Object
key,
Locale
l)
Returns a dimension from the defaults that is appropriate
 for the given locale.
Dimension
RepaintManager.
getDoubleBufferMaximumSize
()
Returns the maximum double buffer size.
Dimension
JViewport.
getExtentSize
()
Returns the size of the visible part of the view in view coordinates.
Dimension
JTable.
getIntercellSpacing
()
Returns the horizontal and vertical space between cells.
Dimension
JComponent.
getMaximumSize
()
If the maximum size has been set to a non-
null
value
 just returns it.
Dimension
JScrollBar.
getMaximumSize
()
The scrollbar is flexible along it's scrolling axis and
 rigid along the other axis.
Dimension
JToolBar.Separator.
getMaximumSize
()
Returns the maximum size for the separator.
Dimension
JComponent.
getMinimumSize
()
If the minimum size has been set to a non-
null
value
 just returns it.
Dimension
JScrollBar.
getMinimumSize
()
The scrollbar is flexible along it's scrolling axis and
 rigid along the other axis.
Dimension
JToolBar.Separator.
getMinimumSize
()
Returns the minimum size for the separator.
Dimension
JLayer.
getPreferredScrollableViewportSize
()
Returns the preferred size of the viewport for a view component.
Dimension
JList.
getPreferredScrollableViewportSize
()
Computes the size of viewport needed to display
visibleRowCount
rows.
Dimension
JTable.
getPreferredScrollableViewportSize
()
Returns the preferred size of the viewport for this table.
Dimension
JTextArea.
getPreferredScrollableViewportSize
()
Returns the preferred size of the viewport if this component
 is embedded in a JScrollPane.
Dimension
JTree.
getPreferredScrollableViewportSize
()
Returns the preferred display size of a
JTree
.
Dimension
Scrollable.
getPreferredScrollableViewportSize
()
Returns the preferred size of the viewport for a view component.
Dimension
JComponent.
getPreferredSize
()
If the
preferredSize
has been set to a
 non-
null
value just returns it.
Dimension
JEditorPane.
getPreferredSize
()
Returns the preferred size for the
JEditorPane
.
Dimension
JTextArea.
getPreferredSize
()
Returns the preferred size of the TextArea.
Dimension
JTextField.
getPreferredSize
()
Returns the preferred size
Dimensions
needed for this
TextField
.
Dimension
JToolBar.Separator.
getPreferredSize
()
Returns the preferred size for the separator.
Dimension
JToolBar.Separator.
getSeparatorSize
()
Returns the size of the separator
Dimension
JComponent.
getSize
(
Dimension
rv)
Stores the width/height of this component into "return value"
rv
and returns
rv
.
Dimension
JList.AccessibleJList.AccessibleJListChild.
getSize
()
Dimension
JTable.AccessibleJTable.AccessibleJTableCell.
getSize
()
Dimension
JTree.AccessibleJTree.AccessibleJTreeNode.
getSize
()
Dimension
JViewport.
getViewSize
()
If the view's size hasn't been explicitly set, return the
 preferred size, otherwise return the view's current size.
Dimension
BoxLayout.
maximumLayoutSize
(
Container
target)
Returns the maximum dimensions the target container can use
 to lay out the components it contains.
Dimension
GroupLayout.
maximumLayoutSize
(
Container
parent)
Returns the maximum size for the specified container.
Dimension
JRootPane.RootLayout.
maximumLayoutSize
(
Container
target)
Returns the maximum amount of space the layout can use.
Dimension
OverlayLayout.
maximumLayoutSize
(
Container
target)
Returns the maximum dimensions needed to lay out the components
 contained in the specified target container.
Dimension
SpringLayout.
maximumLayoutSize
(
Container
parent)
Dimension
BoxLayout.
minimumLayoutSize
(
Container
target)
Returns the minimum dimensions needed to lay out the components
 contained in the specified target container.
Dimension
GroupLayout.
minimumLayoutSize
(
Container
parent)
Returns the minimum size for the specified container.
Dimension
JRootPane.RootLayout.
minimumLayoutSize
(
Container
parent)
Returns the minimum amount of space the layout needs.
Dimension
JSpinner.DefaultEditor.
minimumLayoutSize
(
Container
parent)
Returns the minimum size of first (and only) child plus the
 size of the parents insets.
Dimension
OverlayLayout.
minimumLayoutSize
(
Container
target)
Returns the minimum dimensions needed to lay out the components
 contained in the specified target container.
Dimension
ScrollPaneLayout.
minimumLayoutSize
(
Container
parent)
The minimum size of a
ScrollPane
is the size of the insets
 plus minimum size of the viewport, plus the scrollpane's
 viewportBorder insets, plus the minimum size
 of the visible headers, plus the minimum size of the
 scrollbars whose displayPolicy isn't NEVER.
Dimension
SpringLayout.
minimumLayoutSize
(
Container
parent)
Dimension
ViewportLayout.
minimumLayoutSize
(
Container
parent)
Returns the minimum dimensions needed to layout the components
 contained in the specified target container.
Dimension
BoxLayout.
preferredLayoutSize
(
Container
target)
Returns the preferred dimensions for this layout, given the components
 in the specified target container.
Dimension
GroupLayout.
preferredLayoutSize
(
Container
parent)
Returns the preferred size for the specified container.
Dimension
JRootPane.RootLayout.
preferredLayoutSize
(
Container
parent)
Returns the amount of space the layout would like to have.
Dimension
JSpinner.DefaultEditor.
preferredLayoutSize
(
Container
parent)
Returns the preferred size of first (and only) child plus the
 size of the parents insets.
Dimension
OverlayLayout.
preferredLayoutSize
(
Container
target)
Returns the preferred dimensions for this layout given the components
 in the specified target container.
Dimension
ScrollPaneLayout.
preferredLayoutSize
(
Container
parent)
The preferred size of a
ScrollPane
is the size of the insets,
 plus the preferred size of the viewport, plus the preferred size of
 the visible headers, plus the preferred size of the scrollbars
 that will appear given the current view and the current
 scrollbar displayPolicies.
Dimension
SpringLayout.
preferredLayoutSize
(
Container
parent)
Dimension
ViewportLayout.
preferredLayoutSize
(
Container
parent)
Returns the preferred dimensions for this layout given the components
 in the specified target container.
Dimension
JViewport.
toViewCoordinates
(
Dimension
size)
Converts a size in pixel coordinates to view coordinates.
Methods in
javax.swing
with parameters of type
Dimension
Modifier and Type
Method
Description
void
JToolBar.
addSeparator
(
Dimension
size)
Appends a separator of a specified size to the end
 of the tool bar.
void
Box.Filler.
changeShape
(
Dimension
min,
Dimension
pref,
Dimension
max)
Change the size requests for this shape.
protected boolean
JViewport.
computeBlit
(int dx,
 int dy,
Point
blitFrom,
Point
blitTo,
Dimension
blitSize,
Rectangle
blitPaint)
Computes the parameters for a blit where the backing store image
 currently contains
oldLoc
in the upper left hand corner
 and we're scrolling to
newLoc
.
static
Component
Box.
createRigidArea
(
Dimension
d)
Creates an invisible component that's always the specified size.
Dimension
JComponent.
getSize
(
Dimension
rv)
Stores the width/height of this component into "return value"
rv
and returns
rv
.
void
RepaintManager.
setDoubleBufferMaximumSize
(
Dimension
d)
Set the maximum double buffer size.
void
JViewport.
setExtentSize
(
Dimension
newExtent)
Sets the size of the visible part of the view using view coordinates.
void
JTable.
setIntercellSpacing
(
Dimension
intercellSpacing)
Sets the
rowMargin
and the
columnMargin
--
 the height and width of the space between cells -- to
intercellSpacing
.
void
JComponent.
setMaximumSize
(
Dimension
maximumSize)
Sets the maximum size of this component to a constant
 value.
void
JComponent.
setMinimumSize
(
Dimension
minimumSize)
Sets the minimum size of this component to a constant
 value.
void
JPopupMenu.
setPopupSize
(
Dimension
d)
Sets the size of the Popup window using a
Dimension
object.
void
JTable.
setPreferredScrollableViewportSize
(
Dimension
size)
Sets the preferred size of the viewport for this table.
void
JComponent.
setPreferredSize
(
Dimension
preferredSize)
Sets the preferred size of this component.
void
JToolBar.Separator.
setSeparatorSize
(
Dimension
size)
Sets the size of the separator.
void
JList.AccessibleJList.AccessibleJListChild.
setSize
(
Dimension
d)
void
JTable.AccessibleJTable.AccessibleJTableCell.
setSize
(
Dimension
d)
void
JTree.AccessibleJTree.AccessibleJTreeNode.
setSize
(
Dimension
d)
void
JViewport.
setViewSize
(
Dimension
newSize)
Sets the size of the view.
Dimension
JViewport.
toViewCoordinates
(
Dimension
size)
Converts a size in pixel coordinates to view coordinates.
Constructors in
javax.swing
with parameters of type
Dimension
Modifier
Constructor
Description
Filler
(
Dimension
min,
Dimension
pref,
Dimension
max)
Constructor to create shape with the given size ranges.
Separator
(
Dimension
size)
Creates a new toolbar separator with the specified size.
Uses of
Dimension
in
javax.swing.border
Methods in
javax.swing.border
that return
Dimension
Modifier and Type
Method
Description
Dimension
TitledBorder.
getMinimumSize
(
Component
c)
Returns the minimum dimensions this border requires
 in order to fully display the border and title.
Uses of
Dimension
in
javax.swing.plaf
Subclasses of
Dimension
in
javax.swing.plaf
Modifier and Type
Class
Description
class
DimensionUIResource
A subclass of
Dimension
that implements
UIResource
.
Methods in
javax.swing.plaf
that return
Dimension
Modifier and Type
Method
Description
Dimension
ComponentUI.
getMaximumSize
(
JComponent
c)
Returns the specified component's maximum size appropriate for
 the look and feel.
Dimension
LayerUI.
getMaximumSize
(
JComponent
c)
If the
JLayer
's view component is not
null
,
 this returns the result of  the view's
getMaximumSize()
method.
Dimension
ComponentUI.
getMinimumSize
(
JComponent
c)
Returns the specified component's minimum size appropriate for
 the look and feel.
Dimension
LayerUI.
getMinimumSize
(
JComponent
c)
If the
JLayer
's view component is not
null
,
 this returns the result of  the view's
getMinimalSize()
method.
Dimension
ComponentUI.
getPreferredSize
(
JComponent
c)
Returns the specified component's preferred size appropriate for
 the look and feel.
Dimension
LayerUI.
getPreferredSize
(
JComponent
c)
If the
JLayer
's view component is not
null
,
 this returns the result of  the view's
getPreferredSize()
method.
Uses of
Dimension
in
javax.swing.plaf.basic
Fields in
javax.swing.plaf.basic
declared as
Dimension
Modifier and Type
Field
Description
protected
Dimension
BasicComboBoxUI.
cachedMinimumSize
The cached minimum preferred size.
protected
Dimension
BasicScrollBarUI.
maximumThumbSize
Maximum thumb size
protected
Dimension
BasicOptionPaneUI.
minimumSize
The size of
JOptionPane
.
protected
Dimension
BasicScrollBarUI.
minimumThumbSize
Minimum thumb size
protected
Dimension
BasicTreeUI.
preferredMinSize
Minimum preferred size.
protected
Dimension
BasicTreeUI.
preferredSize
Size needed to completely display all the nodes.
Methods in
javax.swing.plaf.basic
that return
Dimension
Modifier and Type
Method
Description
protected
Dimension
BasicTabbedPaneUI.TabbedPaneLayout.
calculateSize
(boolean minimum)
Returns the calculated size.
protected
Dimension
BasicComboBoxUI.
getDefaultSize
()
Return the default size of an empty display area of the combo box using
 the current renderer and font.
protected
Dimension
BasicComboBoxUI.
getDisplaySize
()
Returns the calculated size of the display area.
Dimension
BasicArrowButton.
getMaximumSize
()
Returns the maximum size of the
BasicArrowButton
.
Dimension
BasicDesktopIconUI.
getMaximumSize
(
JComponent
c)
Desktop icons can not be resized.
Dimension
BasicInternalFrameUI.
getMaximumSize
(
JComponent
x)
Returns the maximum size.
Dimension
BasicLabelUI.
getMaximumSize
(
JComponent
c)
Dimension
BasicScrollBarUI.
getMaximumSize
(
JComponent
c)
Dimension
BasicScrollPaneUI.
getMaximumSize
(
JComponent
c)
Dimension
BasicSliderUI.
getMaximumSize
(
JComponent
c)
Returns the maximum size.
Dimension
BasicSplitPaneUI.
getMaximumSize
(
JComponent
jc)
Returns the maximum size for the passed in component,
 This is passed off to the current layout manager.
Dimension
BasicTableHeaderUI.
getMaximumSize
(
JComponent
c)
Return the maximum size of the header.
Dimension
BasicTableUI.
getMaximumSize
(
JComponent
c)
Return the maximum size of the table.
Dimension
BasicTextUI.
getMaximumSize
(
JComponent
c)
Gets the maximum size for the editor component.
Dimension
BasicTreeUI.
getMaximumSize
(
JComponent
c)
Returns the maximum size for this component, which will be the
 preferred size if the instance is currently in a JTree, or 0, 0.
protected
Dimension
BasicScrollBarUI.
getMaximumThumbSize
()
Returns the largest acceptable size for the thumb.
Dimension
BasicSliderUI.
getMinimumHorizontalSize
()
Returns the minimum horizontal size.
Dimension
BasicOptionPaneUI.
getMinimumOptionPaneSize
()
Returns the minimum size the option pane should be.
Dimension
BasicArrowButton.
getMinimumSize
()
Returns the minimum size of the
BasicArrowButton
.
Dimension
BasicComboBoxUI.
getMinimumSize
(
JComponent
c)
The minimum size is the size of the display area plus insets plus the button.
Dimension
BasicInternalFrameUI.
getMinimumSize
(
JComponent
x)
Returns the minimum size.
Dimension
BasicLabelUI.
getMinimumSize
(
JComponent
c)
Dimension
BasicProgressBarUI.
getMinimumSize
(
JComponent
c)
The Minimum size for this component is 10.
Dimension
BasicSliderUI.
getMinimumSize
(
JComponent
c)
Returns the minimum size.
Dimension
BasicSplitPaneDivider.
getMinimumSize
()
Returns the minimum size of the divider.
Dimension
BasicSplitPaneUI.
getMinimumSize
(
JComponent
jc)
Returns the minimum size for the passed in component,
 This is passed off to the current layout manager.
Dimension
BasicTableHeaderUI.
getMinimumSize
(
JComponent
c)
Return the minimum size of the header.
Dimension
BasicTableUI.
getMinimumSize
(
JComponent
c)
Return the minimum size of the table.
Dimension
BasicTextAreaUI.
getMinimumSize
(
JComponent
c)
The method is overridden to take into account caret width.
Dimension
BasicTextUI.
getMinimumSize
(
JComponent
c)
Gets the minimum size for the editor component.
Dimension
BasicTreeUI.
getMinimumSize
(
JComponent
c)
Returns the minimum size for this component.
protected
Dimension
BasicScrollBarUI.
getMinimumThumbSize
()
Returns the smallest acceptable size for the thumb.
Dimension
BasicSliderUI.
getMinimumVerticalSize
()
Returns the minimum vertical size.
static
Dimension
BasicGraphicsUtils.
getPreferredButtonSize
(
AbstractButton
b,
 int textIconGap)
Returns the preferred size of the button.
Dimension
BasicSliderUI.
getPreferredHorizontalSize
()
Returns the preferred horizontal size.
protected
Dimension
BasicProgressBarUI.
getPreferredInnerHorizontal
()
Returns preferred size of the horizontal
JProgressBar
.
protected
Dimension
BasicProgressBarUI.
getPreferredInnerVertical
()
Returns preferred size of the vertical
JProgressBar
.
protected
Dimension
BasicMenuItemUI.
getPreferredMenuItemSize
(
JComponent
c,
Icon
checkIcon,
Icon
arrowIcon,
 int defaultTextIconGap)
Returns the preferred size of a menu item.
Dimension
BasicTreeUI.
getPreferredMinSize
()
Returns the minimum preferred size.
Dimension
BasicArrowButton.
getPreferredSize
()
Returns the preferred size of the
BasicArrowButton
.
Dimension
BasicInternalFrameUI.
getPreferredSize
(
JComponent
x)
Returns the preferred size.
Dimension
BasicListUI.
getPreferredSize
(
JComponent
c)
The preferredSize of the list depends upon the layout orientation.
Dimension
BasicOptionPaneUI.
getPreferredSize
(
JComponent
c)
If
c
is the
JOptionPane
the receiver
 is contained in, the preferred
 size that is returned is the maximum of the preferred size of
 the
LayoutManager
for the
JOptionPane
, and
getMinimumOptionPaneSize
.
Dimension
BasicRadioButtonUI.
getPreferredSize
(
JComponent
c)
The preferred size of the radio button
Dimension
BasicScrollBarUI.
getPreferredSize
(
JComponent
c)
A vertical scrollbar's preferred width is the maximum of
 preferred widths of the (non
null
)
 increment/decrement buttons,
 and the minimum width of the thumb.
Dimension
BasicSliderUI.
getPreferredSize
(
JComponent
c)
Returns the preferred size.
Dimension
BasicSplitPaneDivider.
getPreferredSize
()
Returns the preferred size of the divider.
Dimension
BasicSplitPaneUI.
getPreferredSize
(
JComponent
jc)
Returns the preferred size for the passed in component,
 This is passed off to the current layout manager.
Dimension
BasicTableHeaderUI.
getPreferredSize
(
JComponent
c)
Return the preferred size of the header.
Dimension
BasicTableUI.
getPreferredSize
(
JComponent
c)
Return the preferred size of the table.
Dimension
BasicTextAreaUI.
getPreferredSize
(
JComponent
c)
The method is overridden to take into account caret width.
Dimension
BasicTextUI.
getPreferredSize
(
JComponent
c)
Gets the preferred size for the editor component.
Dimension
BasicTreeUI.
getPreferredSize
(
JComponent
c)
Returns the preferred size to properly display the tree,
 this is a cover method for
getPreferredSize(c, true)
.
Dimension
BasicTreeUI.
getPreferredSize
(
JComponent
c,
 boolean checkConsistency)
Returns the preferred size to represent the tree in
c
.
Dimension
BasicSliderUI.
getPreferredVerticalSize
()
Returns the preferred vertical size.
protected
Dimension
BasicComboBoxUI.
getSizeForComponent
(
Component
comp)
Returns the size a component would have if used as a cell renderer.
protected
Dimension
BasicSliderUI.
getThumbSize
()
Returns the thumb size.
Dimension
BasicSplitPaneUI.BasicHorizontalLayoutManager.
maximumLayoutSize
(
Container
target)
Returns the maximum layout size, which is Integer.MAX_VALUE
 in both directions.
Dimension
BasicComboBoxUI.ComboBoxLayoutManager.
minimumLayoutSize
(
Container
parent)
Dimension
BasicInternalFrameTitlePane.TitlePaneLayout.
minimumLayoutSize
(
Container
c)
Dimension
BasicInternalFrameUI.InternalFrameLayout.
minimumLayoutSize
(
Container
c)
Calculates the minimum size dimensions for the specified
 container, given the components it contains.
Dimension
BasicOptionPaneUI.ButtonAreaLayout.
minimumLayoutSize
(
Container
c)
Dimension
BasicScrollBarUI.
minimumLayoutSize
(
Container
scrollbarContainer)
Dimension
BasicSplitPaneDivider.DividerLayout.
minimumLayoutSize
(
Container
c)
Dimension
BasicSplitPaneUI.BasicHorizontalLayoutManager.
minimumLayoutSize
(
Container
container)
Returns the minimum size needed to contain the children.
Dimension
BasicTabbedPaneUI.TabbedPaneLayout.
minimumLayoutSize
(
Container
parent)
Dimension
BasicComboBoxUI.ComboBoxLayoutManager.
preferredLayoutSize
(
Container
parent)
Dimension
BasicInternalFrameTitlePane.TitlePaneLayout.
preferredLayoutSize
(
Container
c)
Dimension
BasicInternalFrameUI.InternalFrameLayout.
preferredLayoutSize
(
Container
c)
Calculates the preferred size dimensions for the specified
 container, given the components it contains.
Dimension
BasicOptionPaneUI.ButtonAreaLayout.
preferredLayoutSize
(
Container
c)
Dimension
BasicScrollBarUI.
preferredLayoutSize
(
Container
scrollbarContainer)
Dimension
BasicSplitPaneDivider.DividerLayout.
preferredLayoutSize
(
Container
c)
Dimension
BasicSplitPaneUI.BasicHorizontalLayoutManager.
preferredLayoutSize
(
Container
container)
Returns the preferred size needed to contain the children.
Dimension
BasicTabbedPaneUI.TabbedPaneLayout.
preferredLayoutSize
(
Container
parent)
Methods in
javax.swing.plaf.basic
with parameters of type
Dimension
Modifier and Type
Method
Description
protected int
BasicSplitPaneUI.BasicHorizontalLayoutManager.
getAvailableSize
(
Dimension
containerSize,
Insets
insets)
Returns the available width based on the container size and
Insets
.
protected void
BasicRadioButtonUI.
paintFocus
(
Graphics
g,
Rectangle
textRect,
Dimension
size)
Paints focused radio button.
protected void
BasicSplitPaneUI.BasicHorizontalLayoutManager.
setComponentToSize
(
Component
c,
 int size,
 int location,
Insets
insets,
Dimension
containerSize)
Sets the width of the component
c
to be
size
, placing its
 x location at
location
, y to the
insets.top
and height
 to the
containerSize.height
less the top and bottom insets.
void
BasicTreeUI.
setPreferredMinSize
(
Dimension
newSize)
Sets the preferred minimum size.
Uses of
Dimension
in
javax.swing.plaf.metal
Methods in
javax.swing.plaf.metal
that return
Dimension
Modifier and Type
Method
Description
Dimension
MetalFileChooserUI.
getMaximumSize
(
JComponent
c)
Returns the maximum size of the
JFileChooser
.
Dimension
MetalFileChooserUI.
getMinimumSize
(
JComponent
c)
Returns the minimum size of the
JFileChooser
.
Dimension
MetalFileChooserUI.
getPreferredSize
(
JComponent
c)
Returns the preferred size of the specified
JFileChooser
.
Uses of
Dimension
in
javax.swing.plaf.multi
Methods in
javax.swing.plaf.multi
that return
Dimension
Modifier and Type
Method
Description
Dimension
MultiButtonUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiColorChooserUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiComboBoxUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiDesktopIconUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiDesktopPaneUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiFileChooserUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiInternalFrameUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiLabelUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiListUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiMenuBarUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiMenuItemUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiOptionPaneUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiPanelUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiPopupMenuUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiProgressBarUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiRootPaneUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiScrollBarUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiScrollPaneUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiSeparatorUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiSliderUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiSpinnerUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiSplitPaneUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiTabbedPaneUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiTableHeaderUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiTableUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiTextUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiToolBarUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiToolTipUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiTreeUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiViewportUI.
getMaximumSize
(
JComponent
a)
Invokes the
getMaximumSize
method on each UI handled by this object.
Dimension
MultiButtonUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiColorChooserUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiComboBoxUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiDesktopIconUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiDesktopPaneUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiFileChooserUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiInternalFrameUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiLabelUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiListUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiMenuBarUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiMenuItemUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiOptionPaneUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiPanelUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiPopupMenuUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiProgressBarUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiRootPaneUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiScrollBarUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiScrollPaneUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiSeparatorUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiSliderUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiSpinnerUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiSplitPaneUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiTabbedPaneUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiTableHeaderUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiTableUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiTextUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiToolBarUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiToolTipUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiTreeUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiViewportUI.
getMinimumSize
(
JComponent
a)
Invokes the
getMinimumSize
method on each UI handled by this object.
Dimension
MultiButtonUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiColorChooserUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiComboBoxUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiDesktopIconUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiDesktopPaneUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiFileChooserUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiInternalFrameUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiLabelUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiListUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiMenuBarUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiMenuItemUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiOptionPaneUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiPanelUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiPopupMenuUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiProgressBarUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiRootPaneUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiScrollBarUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiScrollPaneUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiSeparatorUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiSliderUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiSpinnerUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiSplitPaneUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiTabbedPaneUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiTableHeaderUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiTableUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiTextUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiToolBarUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiToolTipUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiTreeUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Dimension
MultiViewportUI.
getPreferredSize
(
JComponent
a)
Invokes the
getPreferredSize
method on each UI handled by this object.
Uses of
Dimension
in
javax.swing.plaf.nimbus
Constructors in
javax.swing.plaf.nimbus
with parameters of type
Dimension
Modifier
Constructor
Description
PaintContext
(
Insets
insets,
Dimension
canvasSize,
 boolean inverted)
Creates a new PaintContext which does not attempt to cache or scale any cached
 images.
PaintContext
(
Insets
insets,
Dimension
canvasSize,
 boolean inverted,
AbstractRegionPainter.PaintContext.CacheMode
cacheMode,
 double maxH,
 double maxV)
Creates a new PaintContext.
Uses of
Dimension
in
javax.swing.plaf.synth
Methods in
javax.swing.plaf.synth
that return
Dimension
Modifier and Type
Method
Description
protected
Dimension
SynthComboBoxUI.
getDefaultSize
()
Returns the default size of an empty display area of the combo box using
 the current renderer and font.
Dimension
SynthGraphicsUtils.
getMaximumSize
(
SynthContext
ss,
Font
font,
String
text,
Icon
icon,
 int hAlign,
 int vAlign,
 int hTextPosition,
 int vTextPosition,
 int iconTextGap,
 int mnemonicIndex)
Returns the maximum size needed to properly render an icon and text.
Dimension
SynthComboBoxUI.
getMinimumSize
(
JComponent
c)
The minimum size is the size of the display area plus insets plus the button.
Dimension
SynthGraphicsUtils.
getMinimumSize
(
SynthContext
ss,
Font
font,
String
text,
Icon
icon,
 int hAlign,
 int vAlign,
 int hTextPosition,
 int vTextPosition,
 int iconTextGap,
 int mnemonicIndex)
Returns the minimum size needed to properly render an icon and text.
Dimension
SynthGraphicsUtils.
getPreferredSize
(
SynthContext
ss,
Font
font,
String
text,
Icon
icon,
 int hAlign,
 int vAlign,
 int hTextPosition,
 int vTextPosition,
 int iconTextGap,
 int mnemonicIndex)
Returns the preferred size needed to properly render an icon and text.
Dimension
SynthScrollBarUI.
getPreferredSize
(
JComponent
c)
A vertical scrollbar's preferred width is the maximum of
 preferred widths of the (non
null
)
 increment/decrement buttons,
 and the minimum width of the thumb.
Uses of
Dimension
in
javax.swing.table
Methods in
javax.swing.table
that return
Dimension
Modifier and Type
Method
Description
Dimension
JTableHeader.
getPreferredSize
()
Returns the preferred size of the table header.
Dimension
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry.
getSize
()
Methods in
javax.swing.table
with parameters of type
Dimension
Modifier and Type
Method
Description
void
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry.
setSize
(
Dimension
d)
Uses of
Dimension
in
javax.swing.text
Methods in
javax.swing.text
that return
Dimension
Modifier and Type
Method
Description
Dimension
JTextComponent.
getPreferredScrollableViewportSize
()
Returns the preferred size of the viewport for a view component.
Uses of
Dimension
in
javax.swing.tree
Methods in
javax.swing.tree
that return
Dimension
Modifier and Type
Method
Description
Dimension
DefaultTreeCellEditor.DefaultTextField.
getPreferredSize
()
Overrides
JTextField.getPreferredSize
to
 return the preferred size based on current font, if set,
 or else use renderer's font.
Dimension
DefaultTreeCellEditor.EditorContainer.
getPreferredSize
()
Returns the preferred size for the
Container
.
Dimension
DefaultTreeCellRenderer.
getPreferredSize
()
Overrides
JComponent.getPreferredSize
to
 return slightly wider preferred size value.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.