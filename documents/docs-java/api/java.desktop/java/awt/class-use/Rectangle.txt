Uses of Class java.awt.Rectangle (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.Rectangle
Packages that use
Rectangle
Package
Description
com.sun.java.accessibility.util
Provides a collection of interfaces and classes that compose the Java Accessibility
 Utilities.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
java.awt.font
Provides classes and interface relating to fonts.
java.awt.geom
Provides the Java 2D classes for defining and performing operations on
 objects related to two-dimensional geometry.
java.awt.im
Provides classes and interfaces for the input method framework.
java.awt.im.spi
Provides interfaces that enable the development of input methods that can be
 used with any Java runtime environment.
java.awt.image
Provides classes for creating and modifying images.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
javax.accessibility
Defines a contract between user-interface components and an assistive
 technology that provides access to those components.
javax.imageio
The main package of the Java Image I/O API.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.border
Provides classes and interface for drawing specialized borders around a Swing
 component.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
Uses of
Rectangle
in
com.sun.java.accessibility.util
Methods in
com.sun.java.accessibility.util
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
Translator.
getBounds
()
Returns the current bounds of this object.
Methods in
com.sun.java.accessibility.util
with parameters of type
Rectangle
Modifier and Type
Method
Description
void
Translator.
setBounds
(
Rectangle
r)
Sets the current bounds of this object.
Uses of
Rectangle
in
java.awt
Fields in
java.awt
declared as
Rectangle
Modifier and Type
Field
Description
protected
Rectangle
Polygon.
bounds
The bounds of this
Polygon
.
Methods in
java.awt
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
Component.
bounds
()
Deprecated.
As of JDK version 1.1,
 replaced by
getBounds()
.
Rectangle
Polygon.
getBoundingBox
()
Deprecated.
As of JDK version 1.1,
 replaced by
getBounds()
.
Rectangle
Component.AccessibleAWTComponent.
getBounds
()
Gets the bounds of this object in the form of a Rectangle object.
Rectangle
Component.
getBounds
()
Gets the bounds of this component in the form of a
Rectangle
object.
Rectangle
Component.
getBounds
(
Rectangle
rv)
Stores the bounds of this component into "return value"
rv
and
 return
rv
.
abstract
Rectangle
GraphicsConfiguration.
getBounds
()
Returns the bounds of the
GraphicsConfiguration
in the device coordinates.
Rectangle
List.AccessibleAWTList.AccessibleAWTListChild.
getBounds
()
Gets the bounds of this object in the form of a Rectangle object.
Rectangle
MenuComponent.AccessibleAWTMenuComponent.
getBounds
()
Gets the bounds of this object in the form of a
Rectangle
object.
Rectangle
Polygon.
getBounds
()
Gets the bounding box of this
Polygon
.
Rectangle
Rectangle.
getBounds
()
Gets the bounding
Rectangle
of this
Rectangle
.
Rectangle
Shape.
getBounds
()
Returns an integer
Rectangle
that completely encloses the
Shape
.
Rectangle
SplashScreen.
getBounds
()
Returns the bounds of the splash screen window as a
Rectangle
.
Rectangle
TextComponent.AccessibleAWTTextComponent.
getCharacterBounds
(int i)
Determines the bounding box of the character at the given
 index into the string.
abstract
Rectangle
Graphics.
getClipBounds
()
Returns the bounding rectangle of the current clipping area.
Rectangle
Graphics.
getClipBounds
(
Rectangle
r)
Returns the bounding rectangle of the current clipping area.
Rectangle
Graphics.
getClipRect
()
Deprecated.
As of JDK version 1.1,
 replaced by
getClipBounds()
.
Rectangle
Frame.
getMaximizedBounds
()
Gets maximized bounds for this frame.
Rectangle
GraphicsEnvironment.
getMaximumWindowBounds
()
Returns the maximum bounds for centered Windows.
Rectangle
Rectangle.
intersection
(
Rectangle
r)
Computes the intersection of this
Rectangle
with the
 specified
Rectangle
.
Rectangle
Rectangle.
union
(
Rectangle
r)
Computes the union of this
Rectangle
with the
 specified
Rectangle
.
Methods in
java.awt
with parameters of type
Rectangle
Modifier and Type
Method
Description
void
Rectangle.
add
(
Rectangle
r)
Adds a
Rectangle
to this
Rectangle
.
protected void
GridBagLayout.
adjustForGravity
(
GridBagConstraints
constraints,
Rectangle
r)
Adjusts the x, y, width, and height fields to the correct
 values depending on the constraint geometry and pads.
protected void
GridBagLayout.
AdjustForGravity
(
GridBagConstraints
constraints,
Rectangle
r)
Adjusts the x, y, width, and height fields to the correct
 values depending on the constraint geometry and pads.
boolean
Rectangle.
contains
(
Rectangle
r)
Checks whether or not this
Rectangle
entirely contains
 the specified
Rectangle
.
PaintContext
Color.
createContext
(
ColorModel
cm,
Rectangle
r,
Rectangle2D
r2d,
AffineTransform
xform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a solid color field pattern.
PaintContext
GradientPaint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
xform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a linear color gradient pattern.
PaintContext
LinearGradientPaint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
transform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a linear color gradient pattern.
PaintContext
Paint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
xform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate the color pattern.
PaintContext
RadialGradientPaint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
transform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a circular radial color gradient pattern.
PaintContext
TexturePaint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
xform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a tiled image pattern.
MultiResolutionImage
Robot.
createMultiResolutionScreenCapture
(
Rectangle
screenRect)
Creates an image containing pixels read from the screen.
BufferedImage
Robot.
createScreenCapture
(
Rectangle
screenRect)
Creates an image containing pixels read from the screen.
Rectangle
Component.
getBounds
(
Rectangle
rv)
Stores the bounds of this component into "return value"
rv
and
 return
rv
.
Rectangle
Graphics.
getClipBounds
(
Rectangle
r)
Returns the bounding rectangle of the current clipping area.
abstract boolean
Graphics2D.
hit
(
Rectangle
rect,
Shape
s,
 boolean onStroke)
Checks whether or not the specified
Shape
intersects
 the specified
Rectangle
, which is in device
 space.
Rectangle
Rectangle.
intersection
(
Rectangle
r)
Computes the intersection of this
Rectangle
with the
 specified
Rectangle
.
boolean
Rectangle.
intersects
(
Rectangle
r)
Determines whether or not this
Rectangle
and the specified
Rectangle
intersect.
void
Component.AccessibleAWTComponent.
setBounds
(
Rectangle
r)
Sets the bounds of this object in the form of a
Rectangle
object.
void
Component.
setBounds
(
Rectangle
r)
Moves and resizes this component to conform to the new
 bounding rectangle
r
.
void
List.AccessibleAWTList.AccessibleAWTListChild.
setBounds
(
Rectangle
r)
Sets the bounds of this object in the form of a Rectangle
 object.
void
MenuComponent.AccessibleAWTMenuComponent.
setBounds
(
Rectangle
r)
Sets the bounds of this object in the form of a
Rectangle
object.
void
Rectangle.
setBounds
(
Rectangle
r)
Sets the bounding
Rectangle
of this
Rectangle
to match the specified
Rectangle
.
void
Window.
setBounds
(
Rectangle
r)
Moves and resizes this component to conform to the new
 bounding rectangle
r
.
void
Frame.
setMaximizedBounds
(
Rectangle
bounds)
Sets the maximized bounds for this frame.
Rectangle
Rectangle.
union
(
Rectangle
r)
Computes the union of this
Rectangle
with the
 specified
Rectangle
.
Constructors in
java.awt
with parameters of type
Rectangle
Modifier
Constructor
Description
Rectangle
(
Rectangle
r)
Constructs a new
Rectangle
, initialized to match
 the values of the specified
Rectangle
.
Uses of
Rectangle
in
java.awt.event
Methods in
java.awt.event
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
PaintEvent.
getUpdateRect
()
Returns the rectangle representing the area which needs to be
 repainted in response to this event.
Methods in
java.awt.event
with parameters of type
Rectangle
Modifier and Type
Method
Description
void
PaintEvent.
setUpdateRect
(
Rectangle
updateRect)
Sets the rectangle representing the area which needs to be
 repainted in response to this event.
Constructors in
java.awt.event
with parameters of type
Rectangle
Modifier
Constructor
Description
PaintEvent
(
Component
source,
 int id,
Rectangle
updateRect)
Constructs a
PaintEvent
object with the specified
 source component and type.
Uses of
Rectangle
in
java.awt.font
Methods in
java.awt.font
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
GlyphVector.
getGlyphPixelBounds
(int index,
FontRenderContext
renderFRC,
 float x,
 float y)
Returns the pixel bounds of the glyph at index when this
GlyphVector
is rendered in a
Graphics
with the
 given
FontRenderContext
at the given location.
Rectangle
GlyphVector.
getPixelBounds
(
FontRenderContext
renderFRC,
 float x,
 float y)
Returns the pixel bounds of this
GlyphVector
when
 rendered in a graphics with the given
FontRenderContext
at the given location.
Rectangle
TextLayout.
getPixelBounds
(
FontRenderContext
frc,
 float x,
 float y)
Returns the pixel bounds of this
TextLayout
when
 rendered in a graphics with the given
FontRenderContext
at the given location.
Uses of
Rectangle
in
java.awt.geom
Methods in
java.awt.geom
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
Area.
getBounds
()
Returns a bounding
Rectangle
that completely encloses
 this
Area
.
Rectangle
CubicCurve2D.
getBounds
()
Returns an integer
Rectangle
that completely encloses the
Shape
.
Rectangle
Line2D.
getBounds
()
Returns an integer
Rectangle
that completely encloses the
Shape
.
final
Rectangle
Path2D.
getBounds
()
Returns an integer
Rectangle
that completely encloses the
Shape
.
Rectangle
QuadCurve2D.
getBounds
()
Returns an integer
Rectangle
that completely encloses the
Shape
.
Rectangle
RectangularShape.
getBounds
()
Returns an integer
Rectangle
that completely encloses the
Shape
.
Uses of
Rectangle
in
java.awt.im
Methods in
java.awt.im
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
InputMethodRequests.
getTextLocation
(
TextHitInfo
offset)
Gets the location of a specified offset in the current composed text,
 or of the selection in committed text.
Uses of
Rectangle
in
java.awt.im.spi
Methods in
java.awt.im.spi
with parameters of type
Rectangle
Modifier and Type
Method
Description
void
InputMethod.
notifyClientWindowChange
(
Rectangle
bounds)
Notifies this input method of changes in the client window
 location or state.
Uses of
Rectangle
in
java.awt.image
Methods in
java.awt.image
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
Raster.
getBounds
()
Returns the bounding Rectangle of this Raster.
Methods in
java.awt.image
with parameters of type
Rectangle
Modifier and Type
Method
Description
WritableRaster
Raster.
createCompatibleWritableRaster
(
Rectangle
rect)
Create a compatible WritableRaster with location (minX, minY)
 and size (width, height) specified by rect, a
 new SampleModel, and a new initialized DataBuffer.
Raster
BufferedImage.
getData
(
Rectangle
rect)
Computes and returns an arbitrary region of the
BufferedImage
.
Raster
RenderedImage.
getData
(
Rectangle
rect)
Computes and returns an arbitrary region of the RenderedImage.
Constructors in
java.awt.image
with parameters of type
Rectangle
Modifier
Constructor
Description
protected
Raster
(
SampleModel
sampleModel,
DataBuffer
dataBuffer,
Rectangle
aRegion,
Point
sampleModelTranslate,
Raster
parent)
Constructs a Raster with the given SampleModel, DataBuffer, and
 parent.
protected
WritableRaster
(
SampleModel
sampleModel,
DataBuffer
dataBuffer,
Rectangle
aRegion,
Point
sampleModelTranslate,
WritableRaster
parent)
Constructs a WritableRaster with the given SampleModel, DataBuffer,
 and parent.
Uses of
Rectangle
in
java.beans
Methods in
java.beans
with parameters of type
Rectangle
Modifier and Type
Method
Description
void
PropertyEditor.
paintValue
(
Graphics
gfx,
Rectangle
box)
Paint a representation of the value into a given area of screen
 real estate.
void
PropertyEditorSupport.
paintValue
(
Graphics
gfx,
Rectangle
box)
Paint a representation of the value into a given area of screen
 real estate.
Uses of
Rectangle
in
javax.accessibility
Methods in
javax.accessibility
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
AccessibleComponent.
getBounds
()
Gets the bounds of this object in the form of a
Rectangle
object.
Rectangle
AccessibleText.
getCharacterBounds
(int i)
Determines the bounding box of the character at the given index into the
 string.
Rectangle
AccessibleExtendedText.
getTextBounds
(int startIndex,
 int endIndex)
Returns the bounding rectangle of the text between two indices.
Methods in
javax.accessibility
with parameters of type
Rectangle
Modifier and Type
Method
Description
void
AccessibleComponent.
setBounds
(
Rectangle
r)
Sets the bounds of this object in the form of a
Rectangle
object.
Uses of
Rectangle
in
javax.imageio
Fields in
javax.imageio
declared as
Rectangle
Modifier and Type
Field
Description
protected
Rectangle
IIOParam.
sourceRegion
The source region, on
null
if none is set.
Methods in
javax.imageio
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
IIOParam.
getSourceRegion
()
Returns the source region to be used.
protected static
Rectangle
ImageReader.
getSourceRegion
(
ImageReadParam
param,
 int srcWidth,
 int srcHeight)
A utility method that may be used by readers to compute the
 region of the source image that should be read, taking into
 account any source region and subsampling offset settings in
 the supplied
ImageReadParam
.
Methods in
javax.imageio
with parameters of type
Rectangle
Modifier and Type
Method
Description
protected static void
ImageReader.
computeRegions
(
ImageReadParam
param,
 int srcWidth,
 int srcHeight,
BufferedImage
image,
Rectangle
srcRegion,
Rectangle
destRegion)
Computes the source region of interest and the destination
 region of interest, taking the width and height of the source
 image, an optional destination image, and an optional
ImageReadParam
into account.
void
ImageWriter.
prepareReplacePixels
(int imageIndex,
Rectangle
region)
Prepares the writer to handle a series of calls to the
replacePixels
methods.
void
IIOParam.
setSourceRegion
(
Rectangle
sourceRegion)
Sets the source region of interest.
Uses of
Rectangle
in
javax.swing
Methods in
javax.swing
that return
Rectangle
Modifier and Type
Method
Description
static
Rectangle
SwingUtilities.
calculateInnerArea
(
JComponent
c,
Rectangle
r)
Stores the position and size of
 the inner painting area of the specified component
 in
r
and returns
r
.
static
Rectangle
[]
SwingUtilities.
computeDifference
(
Rectangle
rectA,
Rectangle
rectB)
Convenience returning an array of rect representing the regions within
rectA
that do not overlap with
rectB
.
static
Rectangle
SwingUtilities.
computeIntersection
(int x,
 int y,
 int width,
 int height,
Rectangle
dest)
Convenience to calculate the intersection of two rectangles
 without allocating a new rectangle.
static
Rectangle
SwingUtilities.
computeUnion
(int x,
 int y,
 int width,
 int height,
Rectangle
dest)
Convenience method that calculates the union of two rectangles
 without allocating a new rectangle.
static
Rectangle
SwingUtilities.
convertRectangle
(
Component
source,
Rectangle
aRectangle,
Component
destination)
Convert the rectangle
aRectangle
in
source
coordinate system to
destination
coordinate system.
Rectangle
JComponent.
getBounds
(
Rectangle
rv)
Stores the bounds of this component into "return value"
rv
and returns
rv
.
Rectangle
JList.AccessibleJList.AccessibleJListChild.
getBounds
()
Rectangle
JTable.AccessibleJTable.AccessibleJTableCell.
getBounds
()
Rectangle
JTree.AccessibleJTree.AccessibleJTreeNode.
getBounds
()
Rectangle
JTabbedPane.
getBoundsAt
(int index)
Returns the tab bounds at
index
.
protected
Rectangle
DefaultDesktopManager.
getBoundsForIconOf
(
JInternalFrame
f)
The
iconifyFrame()
code calls this to determine the proper bounds
 for the desktopIcon.
Rectangle
JList.
getCellBounds
(int index0,
 int index1)
Returns the bounding rectangle, in the list's coordinate system,
 for the range of cells specified by the two indices.
Rectangle
JTable.
getCellRect
(int row,
 int column,
 boolean includeSpacing)
Returns a rectangle for the cell that lies at the intersection of
row
and
column
.
Rectangle
AbstractButton.AccessibleAbstractButton.
getCharacterBounds
(int i)
Determine the bounding box of the character at the given
 index into the string.
Rectangle
JLabel.AccessibleJLabel.
getCharacterBounds
(int i)
Returns the bounding box of the character at the given
 index in the string.
Rectangle
JSpinner.AccessibleJSpinner.
getCharacterBounds
(int i)
Determines the bounding box of the character at the given
 index into the string.
Rectangle
ProgressMonitor.AccessibleProgressMonitor.
getCharacterBounds
(int i)
Determines the bounding box of the character at the given
 index into the string.
Rectangle
DebugGraphics.
getClipBounds
()
Overrides
Graphics.getClipBounds
.
Rectangle
RepaintManager.
getDirtyRegion
(
JComponent
aComponent)
Return the current dirty region for a component.
static
Rectangle
SwingUtilities.
getLocalBounds
(
Component
aComponent)
Return the rectangle (0,0,bounds.width,bounds.height) for the component
aComponent
Rectangle
JInternalFrame.
getNormalBounds
()
If the
JInternalFrame
is not in maximized state, returns
getBounds()
; otherwise, returns the bounds that the
JInternalFrame
would be restored to.
Rectangle
JTree.
getPathBounds
(
TreePath
path)
Returns the
Rectangle
that the specified node will be drawn
 into.
protected
Rectangle
DefaultDesktopManager.
getPreviousBounds
(
JInternalFrame
f)
Gets the normal bounds of the component prior to the component
 being maximized.
Rectangle
JTree.
getRowBounds
(int row)
Returns the
Rectangle
that the node at the specified row is
 drawn in.
Rectangle
JScrollPane.
getViewportBorderBounds
()
Returns the bounds of the viewport's border.
Rectangle
ScrollPaneLayout.
getViewportBorderBounds
(
JScrollPane
scrollpane)
Deprecated.
As of JDK version Swing1.1
    replaced by
JScrollPane.getViewportBorderBounds()
.
Rectangle
JViewport.
getViewRect
()
Returns a rectangle whose origin is
getViewPosition
and size is
getExtentSize
.
Rectangle
JComponent.
getVisibleRect
()
Returns the
Component
's "visible rectangle" -  the
 intersection of this component's visible rectangle,
new Rectangle(0, 0, getWidth(), getHeight())
,
 and all of its ancestors' visible rectangles.
Methods in
javax.swing
with parameters of type
Rectangle
Modifier and Type
Method
Description
static
Rectangle
SwingUtilities.
calculateInnerArea
(
JComponent
c,
Rectangle
r)
Stores the position and size of
 the inner painting area of the specified component
 in
r
and returns
r
.
protected boolean
JViewport.
computeBlit
(int dx,
 int dy,
Point
blitFrom,
Point
blitTo,
Dimension
blitSize,
Rectangle
blitPaint)
Computes the parameters for a blit where the backing store image
 currently contains
oldLoc
in the upper left hand corner
 and we're scrolling to
newLoc
.
static
Rectangle
[]
SwingUtilities.
computeDifference
(
Rectangle
rectA,
Rectangle
rectB)
Convenience returning an array of rect representing the regions within
rectA
that do not overlap with
rectB
.
static
Rectangle
SwingUtilities.
computeIntersection
(int x,
 int y,
 int width,
 int height,
Rectangle
dest)
Convenience to calculate the intersection of two rectangles
 without allocating a new rectangle.
static
Rectangle
SwingUtilities.
computeUnion
(int x,
 int y,
 int width,
 int height,
Rectangle
dest)
Convenience method that calculates the union of two rectangles
 without allocating a new rectangle.
void
JComponent.
computeVisibleRect
(
Rectangle
visibleRect)
Returns the
Component
's "visible rect rectangle" -  the
 intersection of the visible rectangles for this component
 and all of its ancestors.
static
Rectangle
SwingUtilities.
convertRectangle
(
Component
source,
Rectangle
aRectangle,
Component
destination)
Convert the rectangle
aRectangle
in
source
coordinate system to
destination
coordinate system.
Rectangle
JComponent.
getBounds
(
Rectangle
rv)
Stores the bounds of this component into "return value"
rv
and returns
rv
.
int
JLayer.
getScrollableBlockIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Returns a scroll increment, which is required for components
 that display logical rows or columns in order to completely expose
 one block of rows or columns, depending on the value of orientation.
int
JList.
getScrollableBlockIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Returns the distance to scroll to expose the next or previous block.
int
JTable.
getScrollableBlockIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Returns
visibleRect.height
or
visibleRect.width
,
 depending on this table's orientation.
int
JTree.
getScrollableBlockIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Returns the amount for a block increment, which is the height or
 width of
visibleRect
, based on
orientation
.
int
Scrollable.
getScrollableBlockIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one block
 of rows or columns, depending on the value of orientation.
int
JLayer.
getScrollableUnitIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Returns a scroll increment, which is required for components
 that display logical rows or columns in order to completely expose
 one new row or column, depending on the value of orientation.
int
JList.
getScrollableUnitIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Returns the distance to scroll to expose the next or previous
 row (for vertical scrolling) or column (for horizontal scrolling).
int
JTable.
getScrollableUnitIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Returns the scroll increment (in pixels) that completely exposes one new
 row or column (depending on the orientation).
int
JTextArea.
getScrollableUnitIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one new row
 or column, depending on the value of orientation.
int
JTree.
getScrollableUnitIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Returns the amount to increment when scrolling.
int
Scrollable.
getScrollableUnitIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one new row
 or column, depending on the value of orientation.
static final boolean
SwingUtilities.
isRectangleContainingRectangle
(
Rectangle
a,
Rectangle
b)
Return
true
if
a
contains
b
static
String
SwingUtilities.
layoutCompoundLabel
(
FontMetrics
fm,
String
text,
Icon
icon,
 int verticalAlignment,
 int horizontalAlignment,
 int verticalTextPosition,
 int horizontalTextPosition,
Rectangle
viewR,
Rectangle
iconR,
Rectangle
textR,
 int textIconGap)
Compute and return the location of the icons origin, the
 location of origin of the text baseline, and a possibly clipped
 version of the compound labels string.
static
String
SwingUtilities.
layoutCompoundLabel
(
JComponent
c,
FontMetrics
fm,
String
text,
Icon
icon,
 int verticalAlignment,
 int horizontalAlignment,
 int verticalTextPosition,
 int horizontalTextPosition,
Rectangle
viewR,
Rectangle
iconR,
Rectangle
textR,
 int textIconGap)
Compute and return the location of the icons origin, the
 location of origin of the text baseline, and a possibly clipped
 version of the compound labels string.
void
CellRendererPane.
paintComponent
(
Graphics
g,
Component
c,
Container
p,
Rectangle
r)
Calls this.paintComponent(g, c, p, r.x, r.y, r.width, r.height) where
r
is the input
Rectangle
parameter.
static void
SwingUtilities.
paintComponent
(
Graphics
g,
Component
c,
Container
p,
Rectangle
r)
Paints a component to the specified
Graphics
.
void
JComponent.
paintImmediately
(
Rectangle
r)
Paints the specified region now.
void
DefaultListCellRenderer.
repaint
(
Rectangle
r)
Overridden for performance reasons.
void
JComponent.
repaint
(
Rectangle
r)
Adds the specified region to the dirty region list if the component
 is showing.
void
JComponent.
scrollRectToVisible
(
Rectangle
aRect)
Forwards the
scrollRectToVisible()
message to the
JComponent
's parent.
void
JTextField.
scrollRectToVisible
(
Rectangle
r)
Scrolls the field left or right.
void
JViewport.
scrollRectToVisible
(
Rectangle
contentRect)
Scrolls the view so that
Rectangle
within the view becomes visible.
void
JList.AccessibleJList.AccessibleJListChild.
setBounds
(
Rectangle
r)
void
JTable.AccessibleJTable.AccessibleJTableCell.
setBounds
(
Rectangle
r)
void
JTree.AccessibleJTree.AccessibleJTreeNode.
setBounds
(
Rectangle
r)
void
JInternalFrame.
setNormalBounds
(
Rectangle
r)
Sets the normal bounds for this internal frame, the bounds that
 this internal frame would be restored to from its maximized state.
protected void
DefaultDesktopManager.
setPreviousBounds
(
JInternalFrame
f,
Rectangle
r)
Stores the bounds of the component just before a maximize call.
Uses of
Rectangle
in
javax.swing.border
Methods in
javax.swing.border
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
AbstractBorder.
getInteriorRectangle
(
Component
c,
 int x,
 int y,
 int width,
 int height)
This convenience method calls the static method.
static
Rectangle
AbstractBorder.
getInteriorRectangle
(
Component
c,
Border
b,
 int x,
 int y,
 int width,
 int height)
Returns a rectangle using the arguments minus the
 insets of the border.
Uses of
Rectangle
in
javax.swing.plaf
Methods in
javax.swing.plaf
that return
Rectangle
Modifier and Type
Method
Description
abstract
Rectangle
ListUI.
getCellBounds
(
JList
<?> list,
 int index1,
 int index2)
Returns the bounding rectangle, in the given list's coordinate system,
 for the range of cells specified by the two indices.
abstract
Rectangle
TreeUI.
getPathBounds
(
JTree
tree,
TreePath
path)
Returns the Rectangle enclosing the label portion that the
 last item in path will be drawn into.
abstract
Rectangle
TabbedPaneUI.
getTabBounds
(
JTabbedPane
pane,
 int index)
Returns the rectangle for the tab bounds.
abstract
Rectangle
TextUI.
modelToView
(
JTextComponent
t,
 int pos)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
abstract
Rectangle
TextUI.
modelToView
(
JTextComponent
t,
 int pos,
Position.Bias
bias)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Uses of
Rectangle
in
javax.swing.plaf.basic
Subclasses of
Rectangle
in
javax.swing.plaf.basic
Modifier and Type
Class
Description
static class
BasicTextUI.BasicCaret
Default implementation of the interface
Caret
.
Fields in
javax.swing.plaf.basic
declared as
Rectangle
Modifier and Type
Field
Description
protected
Rectangle
BasicProgressBarUI.
boxRect
Used to hold the location and size of the bouncing box (returned
 by getBox) to be painted.
protected
Rectangle
BasicTabbedPaneUI.
calcRect
A rectangle used for general layout calculations in order
 to avoid constructing many new Rectangles on the fly.
protected
Rectangle
BasicSliderUI.
contentRect
Content rectangle
protected
Rectangle
BasicSliderUI.
focusRect
Focus rectangle
protected
Rectangle
BasicSliderUI.
labelRect
Label rectangle
protected
Rectangle
[]
BasicTabbedPaneUI.
rects
Tab rects
protected
Rectangle
BasicScrollBarUI.
thumbRect
Thumb rectangle
protected
Rectangle
BasicSliderUI.
thumbRect
Thumb rectangle
protected
Rectangle
BasicSliderUI.
tickRect
Tick rectangle
protected
Rectangle
BasicScrollBarUI.
trackRect
Track rectangle
protected
Rectangle
BasicSliderUI.
trackRect
Track rectangle
Methods in
javax.swing.plaf.basic
that return
Rectangle
Modifier and Type
Method
Description
protected
Rectangle
BasicComboPopup.
computePopupBounds
(int px,
 int py,
 int pw,
 int ph)
Calculate the placement and size of the popup portion of the combo box based
 on the combo box location and the enclosing screen bounds.
protected
Rectangle
BasicProgressBarUI.
getBox
(
Rectangle
r)
Stores the position and size of
 the bouncing box that would be painted for the current animation index
 in
r
and returns
r
.
Rectangle
BasicListUI.
getCellBounds
(
JList
<?> list,
 int index1,
 int index2)
Returns the bounding rectangle, in the given list's coordinate system,
 for the range of cells specified by the two indices.
protected
Rectangle
BasicTreeUI.
getDropLineRect
(
JTree.DropLocation
loc)
Returns a unbounding box for the drop line.
Rectangle
BasicTreeUI.NodeDimensionsHandler.
getNodeDimensions
(
Object
value,
 int row,
 int depth,
 boolean expanded,
Rectangle
size)
Responsible for getting the size of a particular node.
Rectangle
BasicTreeUI.
getPathBounds
(
JTree
tree,
TreePath
path)
Returns the Rectangle enclosing the label portion that the
 last item in path will be drawn into.
protected
Rectangle
BasicTabbedPaneUI.
getTabBounds
(int tabIndex,
Rectangle
dest)
Returns the bounds of the specified tab in the coordinate space
 of the JTabbedPane component.
Rectangle
BasicTabbedPaneUI.
getTabBounds
(
JTabbedPane
pane,
 int i)
Returns the bounds of the specified tab index.
protected
Rectangle
BasicScrollBarUI.
getThumbBounds
()
Return the current size/location of the thumb.
protected
Rectangle
BasicScrollBarUI.
getTrackBounds
()
Returns the current bounds of the track, i.e. the space in between
 the increment and decrement buttons, less the insets.
protected
Rectangle
BasicTextUI.
getVisibleEditorRect
()
Gets the allocation to give the root View.
Rectangle
BasicTextUI.
modelToView
(
JTextComponent
tc,
 int pos)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Rectangle
BasicTextUI.
modelToView
(
JTextComponent
tc,
 int pos,
Position.Bias
bias)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
protected
Rectangle
BasicComboBoxUI.
rectangleForCurrentValue
()
Returns the area that is reserved for drawing the currently selected item.
Methods in
javax.swing.plaf.basic
with parameters of type
Rectangle
Modifier and Type
Method
Description
protected
Rectangle
BasicProgressBarUI.
getBox
(
Rectangle
r)
Stores the position and size of
 the bouncing box that would be painted for the current animation index
 in
r
and returns
r
.
Rectangle
BasicTreeUI.NodeDimensionsHandler.
getNodeDimensions
(
Object
value,
 int row,
 int depth,
 boolean expanded,
Rectangle
size)
Responsible for getting the size of a particular node.
protected
Rectangle
BasicTabbedPaneUI.
getTabBounds
(int tabIndex,
Rectangle
dest)
Returns the bounds of the specified tab in the coordinate space
 of the JTabbedPane component.
protected
String
BasicLabelUI.
layoutCL
(
JLabel
label,
FontMetrics
fontMetrics,
String
text,
Icon
icon,
Rectangle
viewR,
Rectangle
iconR,
Rectangle
textR)
Forwards the call to SwingUtilities.layoutCompoundLabel().
protected void
BasicTabbedPaneUI.
layoutLabel
(int tabPlacement,
FontMetrics
metrics,
 int tabIndex,
String
title,
Icon
icon,
Rectangle
tabRect,
Rectangle
iconRect,
Rectangle
textRect,
 boolean isSelected)
Lays out a label.
protected void
BasicListUI.
paintCell
(
Graphics
g,
 int row,
Rectangle
rowBounds,
ListCellRenderer
<
Object
> cellRenderer,
ListModel
<
Object
> dataModel,
ListSelectionModel
selModel,
 int leadIndex)
Paint one List cell: compute the relevant state, get the "rubber stamp"
 cell renderer component, and then use the
CellRendererPane
to paint it.
void
BasicComboBoxUI.
paintCurrentValue
(
Graphics
g,
Rectangle
bounds,
 boolean hasFocus)
Paints the currently selected item.
void
BasicComboBoxUI.
paintCurrentValueBackground
(
Graphics
g,
Rectangle
bounds,
 boolean hasFocus)
Paints the background of the currently selected item.
protected void
BasicTreeUI.
paintExpandControl
(
Graphics
g,
Rectangle
clipBounds,
Insets
insets,
Rectangle
bounds,
TreePath
path,
 int row,
 boolean isExpanded,
 boolean hasBeenExpanded,
 boolean isLeaf)
Paints the expand (toggle) part of a row.
protected void
BasicButtonUI.
paintFocus
(
Graphics
g,
AbstractButton
b,
Rectangle
viewRect,
Rectangle
textRect,
Rectangle
iconRect)
Paints a focused button.
protected void
BasicRadioButtonUI.
paintFocus
(
Graphics
g,
Rectangle
textRect,
Dimension
size)
Paints focused radio button.
protected void
BasicTabbedPaneUI.
paintFocusIndicator
(
Graphics
g,
 int tabPlacement,
Rectangle
[] rects,
 int tabIndex,
Rectangle
iconRect,
Rectangle
textRect,
 boolean isSelected)
Paints the focus indicator.
protected void
BasicTreeUI.
paintHorizontalPartOfLeg
(
Graphics
g,
Rectangle
clipBounds,
Insets
insets,
Rectangle
bounds,
TreePath
path,
 int row,
 boolean isExpanded,
 boolean hasBeenExpanded,
 boolean isLeaf)
Paints the horizontal part of the leg.
protected void
BasicButtonUI.
paintIcon
(
Graphics
g,
JComponent
c,
Rectangle
iconRect)
Paints an icon of the current button.
protected void
BasicTabbedPaneUI.
paintIcon
(
Graphics
g,
 int tabPlacement,
 int tabIndex,
Icon
icon,
Rectangle
iconRect,
 boolean isSelected)
Paints an icon.
protected void
BasicToggleButtonUI.
paintIcon
(
Graphics
g,
AbstractButton
b,
Rectangle
iconRect)
Paints an icon in the specified location.
protected void
BasicSliderUI.
paintMajorTickForHorizSlider
(
Graphics
g,
Rectangle
tickBounds,
 int x)
Paints major tick for horizontal slider.
protected void
BasicSliderUI.
paintMajorTickForVertSlider
(
Graphics
g,
Rectangle
tickBounds,
 int y)
Paints major tick for vertical slider.
protected void
BasicSliderUI.
paintMinorTickForHorizSlider
(
Graphics
g,
Rectangle
tickBounds,
 int x)
Paints minor tick for horizontal slider.
protected void
BasicSliderUI.
paintMinorTickForVertSlider
(
Graphics
g,
Rectangle
tickBounds,
 int y)
Paints minor tick for vertical slider.
protected void
BasicTreeUI.
paintRow
(
Graphics
g,
Rectangle
clipBounds,
Insets
insets,
Rectangle
bounds,
TreePath
path,
 int row,
 boolean isExpanded,
 boolean hasBeenExpanded,
 boolean isLeaf)
Paints the renderer part of a row.
protected void
BasicTabbedPaneUI.
paintTab
(
Graphics
g,
 int tabPlacement,
Rectangle
[] rects,
 int tabIndex,
Rectangle
iconRect,
Rectangle
textRect)
Paints a tab.
protected void
BasicButtonUI.
paintText
(
Graphics
g,
AbstractButton
b,
Rectangle
textRect,
String
text)
Method which renders the text of the current button.
protected void
BasicButtonUI.
paintText
(
Graphics
g,
JComponent
c,
Rectangle
textRect,
String
text)
Method which renders the text of the current button.
protected void
BasicMenuItemUI.
paintText
(
Graphics
g,
JMenuItem
menuItem,
Rectangle
textRect,
String
text)
Renders the text of the current menu item.
protected void
BasicTabbedPaneUI.
paintText
(
Graphics
g,
 int tabPlacement,
Font
font,
FontMetrics
metrics,
 int tabIndex,
String
title,
Rectangle
textRect,
 boolean isSelected)
Paints text.
protected void
BasicScrollBarUI.
paintThumb
(
Graphics
g,
JComponent
c,
Rectangle
thumbBounds)
Paints the thumb.
protected void
BasicScrollBarUI.
paintTrack
(
Graphics
g,
JComponent
c,
Rectangle
trackBounds)
Paints the track.
protected void
BasicTreeUI.
paintVerticalPartOfLeg
(
Graphics
g,
Rectangle
clipBounds,
Insets
insets,
TreePath
path)
Paints the vertical part of the leg.
Uses of
Rectangle
in
javax.swing.plaf.metal
Methods in
javax.swing.plaf.metal
with parameters of type
Rectangle
Modifier and Type
Method
Description
void
MetalComboBoxUI.
paintCurrentValue
(
Graphics
g,
Rectangle
bounds,
 boolean hasFocus)
If necessary paints the currently selected item.
void
MetalComboBoxUI.
paintCurrentValueBackground
(
Graphics
g,
Rectangle
bounds,
 boolean hasFocus)
If necessary paints the background of the currently selected item.
protected void
MetalToggleButtonUI.
paintIcon
(
Graphics
g,
AbstractButton
b,
Rectangle
iconRect)
Paints the appropriate icon of the button
b
in the
 space
iconRect
.
Uses of
Rectangle
in
javax.swing.plaf.multi
Methods in
javax.swing.plaf.multi
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
MultiListUI.
getCellBounds
(
JList
<?> a,
 int b,
 int c)
Invokes the
getCellBounds
method on each UI handled by this object.
Rectangle
MultiTreeUI.
getPathBounds
(
JTree
a,
TreePath
b)
Invokes the
getPathBounds
method on each UI handled by this object.
Rectangle
MultiTabbedPaneUI.
getTabBounds
(
JTabbedPane
a,
 int b)
Invokes the
getTabBounds
method on each UI handled by this object.
Rectangle
MultiTextUI.
modelToView
(
JTextComponent
a,
 int b)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Rectangle
MultiTextUI.
modelToView
(
JTextComponent
a,
 int b,
Position.Bias
c)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Uses of
Rectangle
in
javax.swing.plaf.synth
Methods in
javax.swing.plaf.synth
with parameters of type
Rectangle
Modifier and Type
Method
Description
String
SynthGraphicsUtils.
layoutText
(
SynthContext
ss,
FontMetrics
fm,
String
text,
Icon
icon,
 int hAlign,
 int vAlign,
 int hTextPosition,
 int vTextPosition,
Rectangle
viewR,
Rectangle
iconR,
Rectangle
textR,
 int iconTextGap)
Lays out text and an icon returning, by reference, the location to
 place the icon and text.
protected void
SynthToolBarUI.
paintContent
(
SynthContext
context,
Graphics
g,
Rectangle
bounds)
Paints the toolbar content.
void
SynthComboBoxUI.
paintCurrentValue
(
Graphics
g,
Rectangle
bounds,
 boolean hasFocus)
Paints the currently selected item.
void
SynthGraphicsUtils.
paintText
(
SynthContext
ss,
Graphics
g,
String
text,
Rectangle
bounds,
 int mnemonicIndex)
Paints text at the specified location.
protected void
SynthScrollBarUI.
paintThumb
(
SynthContext
context,
Graphics
g,
Rectangle
thumbBounds)
Paints the scrollbar thumb.
protected void
SynthSliderUI.
paintThumb
(
SynthContext
context,
Graphics
g,
Rectangle
thumbBounds)
Paints the slider thumb.
protected void
SynthScrollBarUI.
paintTrack
(
SynthContext
context,
Graphics
g,
Rectangle
trackBounds)
Paints the scrollbar track.
protected void
SynthSliderUI.
paintTrack
(
SynthContext
context,
Graphics
g,
Rectangle
trackBounds)
Paints the slider track.
Uses of
Rectangle
in
javax.swing.table
Methods in
javax.swing.table
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry.
getBounds
()
Rectangle
JTableHeader.
getHeaderRect
(int column)
Returns the rectangle containing the header tile at
column
.
Methods in
javax.swing.table
with parameters of type
Rectangle
Modifier and Type
Method
Description
void
DefaultTableCellRenderer.
repaint
(
Rectangle
r)
Overridden for performance reasons.
void
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry.
setBounds
(
Rectangle
r)
Uses of
Rectangle
in
javax.swing.text
Subclasses of
Rectangle
in
javax.swing.text
Modifier and Type
Class
Description
class
DefaultCaret
A default implementation of Caret.
Fields in
javax.swing.text
declared as
Rectangle
Modifier and Type
Field
Description
protected
Rectangle
AsyncBoxView.ChildLocator.
childAlloc
A shape to use for the child allocation to avoid
 creating a lot of garbage.
protected
Rectangle
AsyncBoxView.ChildLocator.
lastAlloc
The last seen allocation (for repainting when changes
 are flushed upward).
Methods in
javax.swing.text
that return
Rectangle
Modifier and Type
Method
Description
Rectangle
JTextComponent.AccessibleJTextComponent.
getCharacterBounds
(int i)
Determines the bounding box of the character at the given
 index into the string.
protected
Rectangle
CompositeView.
getInsideAllocation
(
Shape
a)
Translates the immutable allocation given to the view
 to a mutable allocation that represents the interior
 allocation (i.e. the bounds of the given allocation
 with the top, left, bottom, and right insets removed.
Rectangle
JTextComponent.AccessibleJTextComponent.
getTextBounds
(int startIndex,
 int endIndex)
Returns the
Rectangle
enclosing the text between
 two indices.
protected
Rectangle
PlainView.
lineToRect
(
Shape
a,
 int line)
Determine the rectangle that represents the given line.
Rectangle
JTextComponent.
modelToView
(int pos)
Deprecated.
replaced by
JTextComponent.modelToView2D(int)
Methods in
javax.swing.text
with parameters of type
Rectangle
Modifier and Type
Method
Description
protected void
DefaultCaret.
adjustVisibility
(
Rectangle
nloc)
Scrolls the associated view (if necessary) to make
 the caret visible.
void
FlowView.FlowStrategy.
changedUpdate
(
FlowView
fv,
DocumentEvent
e,
Rectangle
alloc)
Gives notification from the document that attributes were changed
 in a location that this view is responsible for.
protected void
BoxView.
childAllocation
(int index,
Rectangle
alloc)
Allocates a region for a child view.
protected abstract void
CompositeView.
childAllocation
(int index,
Rectangle
a)
Returns the allocation for a given child.
protected void
DefaultCaret.
damage
(
Rectangle
r)
Damages the area surrounding the caret to cause
 it to be repainted in a new location.
int
JTextComponent.
getScrollableBlockIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one block
 of rows or columns, depending on the value of orientation.
int
JTextComponent.
getScrollableUnitIncrement
(
Rectangle
visibleRect,
 int orientation,
 int direction)
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one new row
 or column, depending on the value of orientation.
protected
View
BoxView.
getViewAtPoint
(int x,
 int y,
Rectangle
alloc)
Fetches the child view at the given coordinates.
protected abstract
View
CompositeView.
getViewAtPoint
(int x,
 int y,
Rectangle
alloc)
Fetches the child view at the given coordinates.
protected
View
CompositeView.
getViewAtPosition
(int pos,
Rectangle
a)
Fetches the child view that represents the given position in
 the model.
protected
View
TableView.
getViewAtPosition
(int pos,
Rectangle
a)
Fetches the child view that represents the given position in
 the model.
protected
View
TableView.TableRow.
getViewAtPosition
(int pos,
Rectangle
a)
Fetches the child view that represents the given position in
 the model.
void
FlowView.FlowStrategy.
insertUpdate
(
FlowView
fv,
DocumentEvent
e,
Rectangle
alloc)
Gives notification that something was inserted into the document
 in a location that the given flow view is responsible for.
protected boolean
BoxView.
isAfter
(int x,
 int y,
Rectangle
innerAlloc)
Determines if a point falls after an allocated region.
protected abstract boolean
CompositeView.
isAfter
(int x,
 int y,
Rectangle
alloc)
Tests whether a point lies after the rectangle range.
protected boolean
BoxView.
isBefore
(int x,
 int y,
Rectangle
innerAlloc)
Determines if a point falls before an allocated region.
protected abstract boolean
CompositeView.
isBefore
(int x,
 int y,
Rectangle
alloc)
Tests whether a point lies before the rectangle range.
protected void
BoxView.
paintChild
(
Graphics
g,
Rectangle
alloc,
 int index)
Paints a child.
void
FlowView.FlowStrategy.
removeUpdate
(
FlowView
fv,
DocumentEvent
e,
Rectangle
alloc)
Gives notification that something was removed from the document
 in a location that the given flow view is responsible for.
Uses of
Rectangle
in
javax.swing.text.html
Methods in
javax.swing.text.html
with parameters of type
Rectangle
Modifier and Type
Method
Description
protected void
ListView.
paintChild
(
Graphics
g,
Rectangle
alloc,
 int index)
Paints one of the children; called by paint().
Uses of
Rectangle
in
javax.swing.tree
Methods in
javax.swing.tree
that return
Rectangle
Modifier and Type
Method
Description
abstract
Rectangle
AbstractLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns a rectangle giving the bounds needed to draw path.
Rectangle
FixedHeightLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns a rectangle giving the bounds needed to draw path.
Rectangle
VariableHeightLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns the
Rectangle
enclosing the label portion
 into which the item identified by
path
will be drawn.
protected
Rectangle
AbstractLayoutCache.
getNodeDimensions
(
Object
value,
 int row,
 int depth,
 boolean expanded,
Rectangle
placeIn)
Returns, by reference in
placeIn
,
 the size needed to represent
value
.
abstract
Rectangle
AbstractLayoutCache.NodeDimensions.
getNodeDimensions
(
Object
value,
 int row,
 int depth,
 boolean expanded,
Rectangle
bounds)
Returns, by reference in bounds, the size and x origin to
 place value at.
Methods in
javax.swing.tree
with parameters of type
Rectangle
Modifier and Type
Method
Description
abstract
Rectangle
AbstractLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns a rectangle giving the bounds needed to draw path.
Rectangle
FixedHeightLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns a rectangle giving the bounds needed to draw path.
Rectangle
VariableHeightLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns the
Rectangle
enclosing the label portion
 into which the item identified by
path
will be drawn.
protected
Rectangle
AbstractLayoutCache.
getNodeDimensions
(
Object
value,
 int row,
 int depth,
 boolean expanded,
Rectangle
placeIn)
Returns, by reference in
placeIn
,
 the size needed to represent
value
.
abstract
Rectangle
AbstractLayoutCache.NodeDimensions.
getNodeDimensions
(
Object
value,
 int row,
 int depth,
 boolean expanded,
Rectangle
bounds)
Returns, by reference in bounds, the size and x origin to
 place value at.
int
AbstractLayoutCache.
getPreferredWidth
(
Rectangle
bounds)
Returns the preferred width for the passed in region.
int
VariableHeightLayoutCache.
getPreferredWidth
(
Rectangle
bounds)
Returns the preferred width and height for the region in
visibleRegion
.
void
DefaultTreeCellRenderer.
repaint
(
Rectangle
r)
Overridden for performance reasons.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.