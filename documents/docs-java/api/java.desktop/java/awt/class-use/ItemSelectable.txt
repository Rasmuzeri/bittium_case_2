Uses of Interface java.awt.ItemSelectable (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.awt.ItemSelectable
Packages that use
ItemSelectable
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
Uses of
ItemSelectable
in
java.awt
Classes in
java.awt
that implement
ItemSelectable
Modifier and Type
Class
Description
class
Checkbox
A check box is a graphical component that can be in either an
 "on" (
true
) or "off" (
false
) state.
class
CheckboxMenuItem
This class represents a check box that can be included in a menu.
class
Choice
The
Choice
class presents a pop-up menu of choices.
class
List
The
List
component presents the user with a
 scrolling list of text items.
Uses of
ItemSelectable
in
java.awt.event
Methods in
java.awt.event
that return
ItemSelectable
Modifier and Type
Method
Description
ItemSelectable
ItemEvent.
getItemSelectable
()
Returns the originator of the event.
Constructors in
java.awt.event
with parameters of type
ItemSelectable
Modifier
Constructor
Description
ItemEvent
(
ItemSelectable
source,
 int id,
Object
item,
 int stateChange)
Constructs an
ItemEvent
object.
Uses of
ItemSelectable
in
javax.swing
Subinterfaces of
ItemSelectable
in
javax.swing
Modifier and Type
Interface
Description
interface
ButtonModel
State model for buttons.
Classes in
javax.swing
that implement
ItemSelectable
Modifier and Type
Class
Description
class
AbstractButton
Defines common behaviors for buttons and menu items.
class
DefaultButtonModel
The default implementation of a
Button
component's data model.
class
JButton
An implementation of a "push" button.
class
JCheckBox
An implementation of a check box -- an item that can be selected or
 deselected, and which displays its state to the user.
class
JCheckBoxMenuItem
A menu item that can be selected or deselected.
class
JComboBox
<E>
A component that combines a button or editable field and a drop-down list.
class
JMenu
An implementation of a menu -- a popup window containing
JMenuItem
s that
 is displayed when the user selects an item on the
JMenuBar
.
class
JMenuItem
An implementation of an item in a menu.
class
JRadioButton
An implementation of a radio button -- an item that can be selected or
 deselected, and which displays its state to the user.
class
JRadioButtonMenuItem
An implementation of a radio button menu item.
class
JToggleButton
An implementation of a two-state button.
static class
JToggleButton.ToggleButtonModel
The ToggleButton model
Uses of
ItemSelectable
in
javax.swing.plaf.basic
Classes in
javax.swing.plaf.basic
that implement
ItemSelectable
Modifier and Type
Class
Description
class
BasicArrowButton
JButton object that draws a scaled Arrow in one of the cardinal directions.
Uses of
ItemSelectable
in
javax.swing.plaf.metal
Classes in
javax.swing.plaf.metal
that implement
ItemSelectable
Modifier and Type
Class
Description
class
MetalComboBoxButton
JButton subclass to help out MetalComboBoxUI
class
MetalScrollButton
JButton object for Metal scrollbar arrows.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.