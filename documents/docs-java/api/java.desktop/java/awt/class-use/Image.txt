Uses of Class java.awt.Image (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.Image
Packages that use
Image
Package
Description
java.applet
Provides the classes necessary to create an applet and the classes an applet
 uses to communicate with its applet context.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.font
Provides classes and interface relating to fonts.
java.awt.im.spi
Provides interfaces that enable the development of input methods that can be
 used with any Java runtime environment.
java.awt.image
Provides classes for creating and modifying images.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
Uses of
Image
in
java.applet
Methods in
java.applet
that return
Image
Modifier and Type
Method
Description
Image
Applet.
getImage
(
URL
url)
Deprecated, for removal: This API element is subject to removal in a future version.
Returns an
Image
object that can then be painted on the screen.
Image
Applet.
getImage
(
URL
url,
String
name)
Deprecated, for removal: This API element is subject to removal in a future version.
Returns an
Image
object that can then be painted on the screen.
Image
AppletContext.
getImage
(
URL
url)
Deprecated, for removal: This API element is subject to removal in a future version.
Returns an
Image
object that can then be painted on the screen.
Uses of
Image
in
java.awt
Fields in
java.awt
declared as
Image
Modifier and Type
Field
Description
protected
Image
Component.FlipBufferStrategy.
drawBuffer
The drawing buffer
Methods in
java.awt
that return
Image
Modifier and Type
Method
Description
Image
Component.
createImage
(int width,
 int height)
Creates an off-screen drawable image to be used for double buffering.
Image
Component.
createImage
(
ImageProducer
producer)
Creates an image from the specified image producer.
Image
Toolkit.
createImage
(byte[] imagedata)
Creates an image which decodes the image stored in the specified
 byte array.
abstract
Image
Toolkit.
createImage
(byte[] imagedata,
 int imageoffset,
 int imagelength)
Creates an image which decodes the image stored in the specified
 byte array, and at the specified offset and length.
abstract
Image
Toolkit.
createImage
(
ImageProducer
producer)
Creates an image with the specified image producer.
abstract
Image
Toolkit.
createImage
(
String
filename)
Returns an image which gets pixel data from the specified file.
abstract
Image
Toolkit.
createImage
(
URL
url)
Returns an image which gets pixel data from the specified URL.
protected
Image
Component.FlipBufferStrategy.
getBackBuffer
()
Provides direct access to the back buffer as an image.
Image
Frame.
getIconImage
()
Returns the image to be displayed as the icon for this frame.
Image
Taskbar.
getIconImage
()
Obtains an image of this application's icon.
abstract
Image
Toolkit.
getImage
(
String
filename)
Returns an image which gets pixel data from the specified file,
 whose format can be either GIF, JPEG or PNG.
abstract
Image
Toolkit.
getImage
(
URL
url)
Returns an image which gets pixel data from the specified URL.
Image
TrayIcon.
getImage
()
Returns the current image used for this
TrayIcon
.
Image
Image.
getScaledInstance
(int width,
 int height,
 int hints)
Creates a scaled version of this image.
Methods in
java.awt
that return types with arguments of type
Image
Modifier and Type
Method
Description
List
<
Image
>
Window.
getIconImages
()
Returns the sequence of images to be displayed as the icon for this window.
Methods in
java.awt
with parameters of type
Image
Modifier and Type
Method
Description
void
MediaTracker.
addImage
(
Image
image,
 int id)
Adds an image to the list of images being tracked by this media
 tracker.
void
MediaTracker.
addImage
(
Image
image,
 int id,
 int w,
 int h)
Adds a scaled image to the list of images being tracked
 by this media tracker.
int
Component.
checkImage
(
Image
image,
 int width,
 int height,
ImageObserver
observer)
Returns the status of the construction of a screen representation
 of the specified image.
int
Component.
checkImage
(
Image
image,
ImageObserver
observer)
Returns the status of the construction of a screen representation
 of the specified image.
abstract int
Toolkit.
checkImage
(
Image
image,
 int width,
 int height,
ImageObserver
observer)
Indicates the construction status of a specified image that is
 being prepared for display.
Cursor
Toolkit.
createCustomCursor
(
Image
cursor,
Point
hotSpot,
String
name)
Creates a new custom cursor object.
abstract boolean
Graphics.
drawImage
(
Image
img,
 int dx1,
 int dy1,
 int dx2,
 int dy2,
 int sx1,
 int sy1,
 int sx2,
 int sy2,
Color
bgcolor,
ImageObserver
observer)
Draws as much of the specified area of the specified image as is
 currently available, scaling it on the fly to fit inside the
 specified area of the destination drawable surface.
abstract boolean
Graphics.
drawImage
(
Image
img,
 int dx1,
 int dy1,
 int dx2,
 int dy2,
 int sx1,
 int sy1,
 int sx2,
 int sy2,
ImageObserver
observer)
Draws as much of the specified area of the specified image as is
 currently available, scaling it on the fly to fit inside the
 specified area of the destination drawable surface.
abstract boolean
Graphics.
drawImage
(
Image
img,
 int x,
 int y,
 int width,
 int height,
Color
bgcolor,
ImageObserver
observer)
Draws as much of the specified image as has already been scaled
 to fit inside the specified rectangle.
abstract boolean
Graphics.
drawImage
(
Image
img,
 int x,
 int y,
 int width,
 int height,
ImageObserver
observer)
Draws as much of the specified image as has already been scaled
 to fit inside the specified rectangle.
abstract boolean
Graphics.
drawImage
(
Image
img,
 int x,
 int y,
Color
bgcolor,
ImageObserver
observer)
Draws as much of the specified image as is currently available.
abstract boolean
Graphics.
drawImage
(
Image
img,
 int x,
 int y,
ImageObserver
observer)
Draws as much of the specified image as is currently available.
abstract boolean
Graphics2D.
drawImage
(
Image
img,
AffineTransform
xform,
ImageObserver
obs)
Renders an image, applying a transform from image space into user space
 before drawing.
boolean
Component.
imageUpdate
(
Image
img,
 int infoflags,
 int x,
 int y,
 int w,
 int h)
Repaints the component when the image has changed.
boolean
Component.
prepareImage
(
Image
image,
 int width,
 int height,
ImageObserver
observer)
Prepares an image for rendering on this component at the
 specified width and height.
boolean
Component.
prepareImage
(
Image
image,
ImageObserver
observer)
Prepares an image for rendering on this component.
abstract boolean
Toolkit.
prepareImage
(
Image
image,
 int width,
 int height,
ImageObserver
observer)
Prepares an image for rendering.
void
MediaTracker.
removeImage
(
Image
image)
Removes the specified image from this media tracker.
void
MediaTracker.
removeImage
(
Image
image,
 int id)
Removes the specified image from the specified tracking
 ID of this media tracker.
void
MediaTracker.
removeImage
(
Image
image,
 int id,
 int width,
 int height)
Removes the specified image with the specified
 width, height, and ID from this media tracker.
void
Taskbar.
setIconImage
(
Image
image)
Requests the system to change this application's icon to the provided
image
.
void
Window.
setIconImage
(
Image
image)
Sets the image to be displayed as the icon for this window.
void
TrayIcon.
setImage
(
Image
image)
Sets the image for this
TrayIcon
.
void
Taskbar.
setWindowIconBadge
(
Window
w,
Image
badge)
Affixes a small badge to this application's icon in the task area
 for the specified window.
Method parameters in
java.awt
with type arguments of type
Image
Modifier and Type
Method
Description
void
Window.
setIconImages
(
List
<? extends
Image
> icons)
Sets the sequence of images to be displayed as the icon
 for this window.
Constructors in
java.awt
with parameters of type
Image
Modifier
Constructor
Description
TrayIcon
(
Image
image)
Creates a
TrayIcon
with the specified image.
TrayIcon
(
Image
image,
String
tooltip)
Creates a
TrayIcon
with the specified image and
 tooltip text.
TrayIcon
(
Image
image,
String
tooltip,
PopupMenu
popup)
Creates a
TrayIcon
with the specified image,
 tooltip and popup menu.
Uses of
Image
in
java.awt.dnd
Methods in
java.awt.dnd
with parameters of type
Image
Modifier and Type
Method
Description
protected
DragSourceContext
DragSource.
createDragSourceContext
(
DragGestureEvent
dgl,
Cursor
dragCursor,
Image
dragImage,
Point
imageOffset,
Transferable
t,
DragSourceListener
dsl)
Creates the
DragSourceContext
to handle the current drag
 operation.
void
DragGestureEvent.
startDrag
(
Cursor
dragCursor,
Image
dragImage,
Point
imageOffset,
Transferable
transferable,
DragSourceListener
dsl)
Start the drag given the initial
Cursor
to display,
 a drag
Image
, the offset of
 the
Image
,
 the
Transferable
object, and
 the
DragSourceListener
to use.
void
DragSource.
startDrag
(
DragGestureEvent
trigger,
Cursor
dragCursor,
Image
dragImage,
Point
dragOffset,
Transferable
transferable,
DragSourceListener
dsl)
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to use,
 the
Image
to drag,
 the offset of the
Image
origin
 from the hotspot of the
Cursor
at the instant of the trigger,
 the subject data of the drag, and
 the
DragSourceListener
.
void
DragSource.
startDrag
(
DragGestureEvent
trigger,
Cursor
dragCursor,
Image
dragImage,
Point
imageOffset,
Transferable
transferable,
DragSourceListener
dsl,
FlavorMap
flavorMap)
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to use,
 the
Image
to drag,
 the offset of the
Image
origin
 from the hotspot of the
Cursor
at
 the instant of the trigger,
 the
Transferable
subject data
 of the drag, the
DragSourceListener
,
 and the
FlavorMap
.
Constructors in
java.awt.dnd
with parameters of type
Image
Modifier
Constructor
Description
DragSourceContext
(
DragGestureEvent
trigger,
Cursor
dragCursor,
Image
dragImage,
Point
offset,
Transferable
t,
DragSourceListener
dsl)
Called from
DragSource
, this constructor creates a new
DragSourceContext
given the
DragSourceContextPeer
for this Drag, the
DragGestureEvent
that triggered the Drag, the initial
Cursor
to use for the Drag, an (optional)
Image
to display while the Drag is taking place, the offset
 of the
Image
origin from the hotspot at the instant of the
 triggering event, the
Transferable
subject data, and the
DragSourceListener
to use during the Drag and Drop
 operation.
Uses of
Image
in
java.awt.font
Constructors in
java.awt.font
with parameters of type
Image
Modifier
Constructor
Description
ImageGraphicAttribute
(
Image
image,
 int alignment)
Constructs an
ImageGraphicAttribute
from the specified
Image
.
ImageGraphicAttribute
(
Image
image,
 int alignment,
 float originX,
 float originY)
Constructs an
ImageGraphicAttribute
from the specified
Image
.
Uses of
Image
in
java.awt.im.spi
Methods in
java.awt.im.spi
that return
Image
Modifier and Type
Method
Description
Image
InputMethodDescriptor.
getInputMethodIcon
(
Locale
inputLocale)
Returns an icon for the corresponding input method.
Uses of
Image
in
java.awt.image
Subclasses of
Image
in
java.awt.image
Modifier and Type
Class
Description
class
AbstractMultiResolutionImage
This class provides default implementations of several
Image
methods
 for classes that want to implement the
MultiResolutionImage
interface.
class
BaseMultiResolutionImage
This class is an array-based implementation of
 the
AbstractMultiResolutionImage
class.
class
BufferedImage
The
BufferedImage
subclass describes an
Image
with an accessible buffer of image data.
class
VolatileImage
VolatileImage is an image which can lose its
 contents at any time due to circumstances beyond the control of the
 application (e.g., situations caused by the operating system or by
 other applications).
Methods in
java.awt.image
that return
Image
Modifier and Type
Method
Description
protected abstract
Image
AbstractMultiResolutionImage.
getBaseImage
()
Return the base image representing the best version of the image for
 rendering at the default width and height.
protected
Image
BaseMultiResolutionImage.
getBaseImage
()
Image
BaseMultiResolutionImage.
getResolutionVariant
(double destImageWidth,
 double destImageHeight)
Image
MultiResolutionImage.
getResolutionVariant
(double destImageWidth,
 double destImageHeight)
Gets a specific image that is the best variant to represent
 this logical image at the indicated size.
Methods in
java.awt.image
that return types with arguments of type
Image
Modifier and Type
Method
Description
List
<
Image
>
BaseMultiResolutionImage.
getResolutionVariants
()
List
<
Image
>
MultiResolutionImage.
getResolutionVariants
()
Gets a readable list of all resolution variants.
Methods in
java.awt.image
with parameters of type
Image
Modifier and Type
Method
Description
boolean
ImageObserver.
imageUpdate
(
Image
img,
 int infoflags,
 int x,
 int y,
 int width,
 int height)
This method is called when information about an image which was
 previously requested using an asynchronous interface becomes
 available.
Constructors in
java.awt.image
with parameters of type
Image
Modifier
Constructor
Description
BaseMultiResolutionImage
(int baseImageIndex,
Image
... resolutionVariants)
Creates a multi-resolution image with the given base image index and
 resolution variants.
BaseMultiResolutionImage
(
Image
... resolutionVariants)
Creates a multi-resolution image with the given resolution variants.
PixelGrabber
(
Image
img,
 int x,
 int y,
 int w,
 int h,
 boolean forceRGB)
Create a PixelGrabber object to grab the (x, y, w, h) rectangular
 section of pixels from the specified image.
PixelGrabber
(
Image
img,
 int x,
 int y,
 int w,
 int h,
 int[] pix,
 int off,
 int scansize)
Create a PixelGrabber object to grab the (x, y, w, h) rectangular
 section of pixels from the specified image into the given array.
Uses of
Image
in
java.beans
Methods in
java.beans
that return
Image
Modifier and Type
Method
Description
Image
BeanInfo.
getIcon
(int iconKind)
Returns an image that can be used to represent the bean in toolboxes or toolbars.
Image
SimpleBeanInfo.
getIcon
(int iconKind)
Claim there are no icons available.
Image
SimpleBeanInfo.
loadImage
(
String
resourceName)
This is a utility method to help in loading icon images.
Uses of
Image
in
javax.swing
Fields in
javax.swing
declared as
Image
Modifier and Type
Field
Description
protected
Image
JViewport.
backingStoreImage
The view image used for a backing store.
Methods in
javax.swing
that return
Image
Modifier and Type
Method
Description
static
Image
GrayFilter.
createDisabledImage
(
Image
i)
Creates a disabled image
Image
TransferHandler.
getDragImage
()
Returns the drag image.
Image
ImageIcon.
getImage
()
Returns this icon's
Image
.
Image
RepaintManager.
getOffscreenBuffer
(
Component
c,
 int proposedWidth,
 int proposedHeight)
Return the offscreen buffer that should be used as a double buffer with
 the component
c
.
Image
RepaintManager.
getVolatileOffscreenBuffer
(
Component
c,
 int proposedWidth,
 int proposedHeight)
Return a volatile offscreen buffer that should be used as a
 double buffer with the specified component
c
.
Methods in
javax.swing
with parameters of type
Image
Modifier and Type
Method
Description
static
Image
GrayFilter.
createDisabledImage
(
Image
i)
Creates a disabled image
boolean
DebugGraphics.
drawImage
(
Image
img,
 int dx1,
 int dy1,
 int dx2,
 int dy2,
 int sx1,
 int sy1,
 int sx2,
 int sy2,
Color
bgcolor,
ImageObserver
observer)
Overrides
Graphics.drawImage
.
boolean
DebugGraphics.
drawImage
(
Image
img,
 int dx1,
 int dy1,
 int dx2,
 int dy2,
 int sx1,
 int sy1,
 int sx2,
 int sy2,
ImageObserver
observer)
Overrides
Graphics.drawImage
.
boolean
DebugGraphics.
drawImage
(
Image
img,
 int x,
 int y,
 int width,
 int height,
Color
bgcolor,
ImageObserver
observer)
Overrides
Graphics.drawImage
.
boolean
DebugGraphics.
drawImage
(
Image
img,
 int x,
 int y,
 int width,
 int height,
ImageObserver
observer)
Overrides
Graphics.drawImage
.
boolean
DebugGraphics.
drawImage
(
Image
img,
 int x,
 int y,
Color
bgcolor,
ImageObserver
observer)
Overrides
Graphics.drawImage
.
boolean
DebugGraphics.
drawImage
(
Image
img,
 int x,
 int y,
ImageObserver
observer)
Overrides
Graphics.drawImage
.
boolean
AbstractButton.
imageUpdate
(
Image
img,
 int infoflags,
 int x,
 int y,
 int w,
 int h)
If the button icon for the current button state is either
null
or not an
ImageIcon
with an
Image
equal to the
 passed in
Image
, return
false
; otherwise it
 will delegate to the super-class.
boolean
JLabel.
imageUpdate
(
Image
img,
 int infoflags,
 int x,
 int y,
 int w,
 int h)
If the component is not showing or either the icon or disabled
 icon is not an
ImageIcon
with an
Image
equal to the passed in
Image
, return
false
;
 otherwise it will delegate to the super-class.
boolean
JLayer.
imageUpdate
(
Image
img,
 int infoflags,
 int x,
 int y,
 int w,
 int h)
Delegates its functionality to the
LayerUI.imageUpdate(java.awt.Image, int, int, int, int, int, JLayer)
method,
 if the
LayerUI
is set.
boolean
JSlider.
imageUpdate
(
Image
img,
 int infoflags,
 int x,
 int y,
 int w,
 int h)
Repaints the component when the image has changed.
protected void
ImageIcon.
loadImage
(
Image
image)
Loads the image, returning only when the image is loaded.
void
TransferHandler.
setDragImage
(
Image
img)
Sets the drag image parameter.
void
ImageIcon.
setImage
(
Image
image)
Sets the image displayed by this icon.
Constructors in
javax.swing
with parameters of type
Image
Modifier
Constructor
Description
ImageIcon
(
Image
image)
Creates an ImageIcon from an image object.
ImageIcon
(
Image
image,
String
description)
Creates an ImageIcon from the image.
Uses of
Image
in
javax.swing.plaf
Methods in
javax.swing.plaf
with parameters of type
Image
Modifier and Type
Method
Description
boolean
LayerUI.
imageUpdate
(
Image
img,
 int infoflags,
 int x,
 int y,
 int w,
 int h,
JLayer
<? extends
V
> l)
Delegates its functionality to the default implementation of the
JLayer.imageUpdate
method
 which is inherited from
JLayer
's base classes.
Uses of
Image
in
javax.swing.text.html
Methods in
javax.swing.text.html
that return
Image
Modifier and Type
Method
Description
Image
ImageView.
getImage
()
Returns the image to render.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.