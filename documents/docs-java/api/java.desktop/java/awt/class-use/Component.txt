Uses of Class java.awt.Component (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.Component
Packages that use
Component
Package
Description
com.sun.java.accessibility.util
Provides a collection of interfaces and classes that compose the Java Accessibility
 Utilities.
java.applet
Provides the classes necessary to create an applet and the classes an applet
 uses to communicate with its applet context.
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
java.awt.event
Provides interfaces and classes for dealing with different types of events
 fired by AWT components.
java.awt.im
Provides classes and interfaces for the input method framework.
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
java.beans.beancontext
Provides classes and interfaces relating to bean context.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.border
Provides classes and interface for drawing specialized borders around a Swing
 component.
javax.swing.colorchooser
Contains classes and interfaces used by the
JColorChooser
component.
javax.swing.event
Provides for events fired by Swing components.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
javax.swing.table
Provides classes and interfaces for dealing with
javax.swing.JTable
.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
Uses of
Component
in
com.sun.java.accessibility.util
Methods in
com.sun.java.accessibility.util
that return
Component
Modifier and Type
Method
Description
static
Component
AWTEventMonitor.
getComponentWithFocus
()
Returns the component that currently has keyboard focus.
Uses of
Component
in
java.applet
Subclasses of
Component
in
java.applet
Modifier and Type
Class
Description
class
Applet
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated, no replacement.
Uses of
Component
in
java.awt
Subclasses of
Component
in
java.awt
Modifier and Type
Class
Description
class
Button
This class creates a labeled button.
class
Canvas
A
Canvas
component represents a blank rectangular
 area of the screen onto which the application can draw or from
 which the application can trap input events from the user.
class
Checkbox
A check box is a graphical component that can be in either an
 "on" (
true
) or "off" (
false
) state.
class
Choice
The
Choice
class presents a pop-up menu of choices.
class
Container
A generic Abstract Window Toolkit(AWT) container object is a component
 that can contain other AWT components.
class
Dialog
A Dialog is a top-level window with a title and a border
 that is typically used to take some form of input from the user.
class
FileDialog
The
FileDialog
class displays a dialog window
 from which the user can select a file.
class
Frame
A
Frame
is a top-level window with a title and a border.
class
Label
A
Label
object is a component for placing text in a
 container.
class
List
The
List
component presents the user with a
 scrolling list of text items.
class
Panel
Panel
is the simplest container class.
class
Scrollbar
The
Scrollbar
class embodies a scroll bar, a
 familiar user-interface object.
class
ScrollPane
A container class which implements automatic horizontal and/or
 vertical scrolling for a single child component.
class
TextArea
A
TextArea
object is a multi-line region
 that displays text.
class
TextComponent
The
TextComponent
class is the superclass of
 any component that allows the editing of some text.
class
TextField
A
TextField
object is a text component
 that allows for the editing of a single line of text.
class
Window
A
Window
object is a top-level window with no borders and no
 menubar.
Fields in
java.awt
with type parameters of type
Component
Modifier and Type
Field
Description
protected
Hashtable
<
Component
,
GridBagConstraints
>
GridBagLayout.
comptable
This hashtable maintains the association between
 a component and its gridbag constraints.
Methods in
java.awt
that return
Component
Modifier and Type
Method
Description
Component
Container.
add
(
Component
comp)
Appends the specified component to the end of this container.
Component
Container.
add
(
Component
comp,
 int index)
Adds the specified component to this container at the given
 position.
Component
Container.
add
(
String
name,
Component
comp)
Adds the specified component to this container.
Component
Container.
findComponentAt
(int x,
 int y)
Locates the visible child component that contains the specified
 position.
Component
Container.
findComponentAt
(
Point
p)
Locates the visible child component that contains the specified
 point.
Component
Container.
getComponent
(int n)
Gets the nth component in this container.
Component
ContainerOrderFocusTraversalPolicy.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus after aComponent.
abstract
Component
FocusTraversalPolicy.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus after aComponent.
Component
Component.
getComponentAt
(int x,
 int y)
Determines if this component or one of its immediate
 subcomponents contains the (
x
,
y
) location,
 and if so, returns the containing component.
Component
Component.
getComponentAt
(
Point
p)
Returns the component or subcomponent that contains the
 specified point.
Component
Container.
getComponentAt
(int x,
 int y)
Locates the component that contains the x,y position.
Component
Container.
getComponentAt
(
Point
p)
Gets the component that contains the specified point.
Component
ContainerOrderFocusTraversalPolicy.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus before aComponent.
abstract
Component
FocusTraversalPolicy.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus before aComponent.
Component
[]
Container.
getComponents
()
Gets all the components in this container.
Component
ContainerOrderFocusTraversalPolicy.
getDefaultComponent
(
Container
aContainer)
Returns the default Component to focus.
abstract
Component
FocusTraversalPolicy.
getDefaultComponent
(
Container
aContainer)
Returns the default Component to focus.
Component
ContainerOrderFocusTraversalPolicy.
getFirstComponent
(
Container
aContainer)
Returns the first Component in the traversal cycle.
abstract
Component
FocusTraversalPolicy.
getFirstComponent
(
Container
aContainer)
Returns the first Component in the traversal cycle.
Component
KeyboardFocusManager.
getFocusOwner
()
Returns the focus owner, if the focus owner is in the same context as
 the calling thread.
Component
Window.
getFocusOwner
()
Returns the child Component of this Window that has focus if this Window
 is focused; returns null otherwise.
protected
Component
KeyboardFocusManager.
getGlobalFocusOwner
()
Returns the focus owner, even if the calling thread is in a different
 context than the focus owner.
protected
Component
KeyboardFocusManager.
getGlobalPermanentFocusOwner
()
Returns the permanent focus owner, even if the calling thread is in a
 different context than the permanent focus owner.
Component
FocusTraversalPolicy.
getInitialComponent
(
Window
window)
Returns the Component that should receive the focus when a Window is
 made visible for the first time.
Component
ContainerOrderFocusTraversalPolicy.
getLastComponent
(
Container
aContainer)
Returns the last Component in the traversal cycle.
abstract
Component
FocusTraversalPolicy.
getLastComponent
(
Container
aContainer)
Returns the last Component in the traversal cycle.
Component
BorderLayout.
getLayoutComponent
(
Container
target,
Object
constraints)
Returns the component that corresponds to the given constraint location
 based on the target
Container
's component orientation.
Component
BorderLayout.
getLayoutComponent
(
Object
constraints)
Gets the component that was added using the given constraint
Component
Window.
getMostRecentFocusOwner
()
Returns the child Component of this Window that will receive the focus
 when this Window is focused.
Component
KeyboardFocusManager.
getPermanentFocusOwner
()
Returns the permanent focus owner, if the permanent focus owner is in
 the same context as the calling thread.
Component
Component.
locate
(int x,
 int y)
Deprecated.
As of JDK version 1.1,
 replaced by getComponentAt(int, int).
Component
Container.
locate
(int x,
 int y)
Deprecated.
As of JDK version 1.1,
 replaced by
getComponentAt(int, int)
.
Methods in
java.awt
with parameters of type
Component
Modifier and Type
Method
Description
protected boolean
ContainerOrderFocusTraversalPolicy.
accept
(
Component
aComponent)
Determines whether a Component is an acceptable choice as the new
 focus owner.
protected boolean
DefaultFocusTraversalPolicy.
accept
(
Component
aComponent)
Determines whether a Component is an acceptable choice as the new
 focus owner.
Component
Container.
add
(
Component
comp)
Appends the specified component to the end of this container.
Component
Container.
add
(
Component
comp,
 int index)
Adds the specified component to this container at the given
 position.
void
Container.
add
(
Component
comp,
Object
constraints)
Adds the specified component to the end of this container.
void
Container.
add
(
Component
comp,
Object
constraints,
 int index)
Adds the specified component to this container with the specified
 constraints at the specified index.
Component
Container.
add
(
String
name,
Component
comp)
Adds the specified component to this container.
protected void
Container.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified component to this container at the specified
 index.
protected final void
ScrollPane.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified component to this scroll pane container.
void
BorderLayout.
addLayoutComponent
(
Component
comp,
Object
constraints)
Adds the specified component to the layout, using the specified
 constraint object.
void
BorderLayout.
addLayoutComponent
(
String
name,
Component
comp)
Deprecated.
replaced by
addLayoutComponent(Component, Object)
.
void
CardLayout.
addLayoutComponent
(
Component
comp,
Object
constraints)
Adds the specified component to this card layout's internal
 table of names.
void
CardLayout.
addLayoutComponent
(
String
name,
Component
comp)
Deprecated.
replaced by
addLayoutComponent(Component, Object)
.
void
FlowLayout.
addLayoutComponent
(
String
name,
Component
comp)
Adds the specified component to the layout.
void
GridBagLayout.
addLayoutComponent
(
Component
comp,
Object
constraints)
Adds the specified component to the layout, using the specified
constraints
object.
void
GridBagLayout.
addLayoutComponent
(
String
name,
Component
comp)
Has no effect, since this layout manager does not use a per-component string.
void
GridLayout.
addLayoutComponent
(
String
name,
Component
comp)
Adds the specified component with the specified name to the layout.
void
LayoutManager.
addLayoutComponent
(
String
name,
Component
comp)
If the layout manager uses a per-component string,
 adds the component
comp
to the layout,
 associating it
 with the string specified by
name
.
void
LayoutManager2.
addLayoutComponent
(
Component
comp,
Object
constraints)
Adds the specified component to the layout, using the specified
 constraint object.
<T extends
DragGestureRecognizer
>
T
Toolkit.
createDragGestureRecognizer
(
Class
<T> abstractRecognizerClass,
DragSource
ds,
Component
c,
 int srcActions,
DragGestureListener
dgl)
Creates a concrete, platform dependent, subclass of the abstract
 DragGestureRecognizer class requested, and associates it with the
 DragSource, Component and DragGestureListener specified.
protected void
DefaultKeyboardFocusManager.
dequeueKeyEvents
(long after,
Component
untilFocused)
Releases for normal dispatching to the current focus owner all
 KeyEvents which were enqueued because of a call to
enqueueKeyEvents
with the same timestamp and Component.
protected abstract void
KeyboardFocusManager.
dequeueKeyEvents
(long after,
Component
untilFocused)
Called by the AWT to notify the KeyboardFocusManager that it should
 cancel delayed dispatching of KeyEvents.
protected void
DefaultKeyboardFocusManager.
discardKeyEvents
(
Component
comp)
Discards all KeyEvents which were enqueued because of one or more calls
 to
enqueueKeyEvents
with the specified Component, or one of
 its descendants.
protected abstract void
KeyboardFocusManager.
discardKeyEvents
(
Component
comp)
Called by the AWT to notify the KeyboardFocusManager that it should
 cancel delayed dispatching of KeyEvents.
protected void
DefaultKeyboardFocusManager.
enqueueKeyEvents
(long after,
Component
untilFocused)
Delays dispatching of KeyEvents until the specified Component becomes
 the focus owner.
protected abstract void
KeyboardFocusManager.
enqueueKeyEvents
(long after,
Component
untilFocused)
Called by the AWT to notify the KeyboardFocusManager that it should
 delay dispatching of KeyEvents until the specified Component becomes
 the focus owner.
void
DefaultKeyboardFocusManager.
focusNextComponent
(
Component
aComponent)
Focuses the Component after aComponent, typically based on a
 FocusTraversalPolicy.
abstract void
KeyboardFocusManager.
focusNextComponent
(
Component
aComponent)
Focuses the Component after aComponent, typically based on a
 FocusTraversalPolicy.
void
DefaultKeyboardFocusManager.
focusPreviousComponent
(
Component
aComponent)
Focuses the Component before aComponent, typically based on a
 FocusTraversalPolicy.
abstract void
KeyboardFocusManager.
focusPreviousComponent
(
Component
aComponent)
Focuses the Component before aComponent, typically based on a
 FocusTraversalPolicy.
Component
ContainerOrderFocusTraversalPolicy.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus after aComponent.
abstract
Component
FocusTraversalPolicy.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus after aComponent.
Component
ContainerOrderFocusTraversalPolicy.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus before aComponent.
abstract
Component
FocusTraversalPolicy.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus before aComponent.
int
Container.
getComponentZOrder
(
Component
comp)
Returns the z-order index of the component inside the container.
Object
BorderLayout.
getConstraints
(
Component
comp)
Gets the constraints for the specified component
GridBagConstraints
GridBagLayout.
getConstraints
(
Component
comp)
Gets the constraints for the specified component.
protected static
Container
Toolkit.
getNativeContainer
(
Component
c)
Give native peers the ability to query the native container
 given a native component (eg the direct parent may be lightweight).
boolean
Container.
isAncestorOf
(
Component
c)
Checks if the component is contained in the component hierarchy of
 this container.
protected
GridBagConstraints
GridBagLayout.
lookupConstraints
(
Component
comp)
Retrieves the constraints for the specified component.
void
DefaultKeyboardFocusManager.
processKeyEvent
(
Component
focusedComponent,
KeyEvent
e)
This method initiates a focus traversal operation if and only if the
 KeyEvent represents a focus traversal key for the specified
 focusedComponent.
abstract void
KeyboardFocusManager.
processKeyEvent
(
Component
focusedComponent,
KeyEvent
e)
This method initiates a focus traversal operation if and only if the
 KeyEvent represents a focus traversal key for the specified
 focusedComponent.
final void
KeyboardFocusManager.
redispatchEvent
(
Component
target,
AWTEvent
e)
Redispatches an AWTEvent in such a way that the AWT event dispatcher
 will not recursively request that the KeyboardFocusManager, or any
 installed KeyEventDispatchers, dispatch the event again.
void
Container.
remove
(
Component
comp)
Removes the specified component from this container.
void
BorderLayout.
removeLayoutComponent
(
Component
comp)
Removes the specified component from this border layout.
void
CardLayout.
removeLayoutComponent
(
Component
comp)
Removes the specified component from the layout.
void
FlowLayout.
removeLayoutComponent
(
Component
comp)
Removes the specified component from the layout.
void
GridBagLayout.
removeLayoutComponent
(
Component
comp)
Removes the specified component from this layout.
void
GridLayout.
removeLayoutComponent
(
Component
comp)
Removes the specified component from the layout.
void
LayoutManager.
removeLayoutComponent
(
Component
comp)
Removes the specified component from the layout.
void
Container.
setComponentZOrder
(
Component
comp,
 int index)
Moves the specified component to the specified z-order index in
 the container.
void
GridBagLayout.
setConstraints
(
Component
comp,
GridBagConstraints
constraints)
Sets the constraints for the specified component in this layout.
protected void
KeyboardFocusManager.
setGlobalFocusOwner
(
Component
focusOwner)
Sets the focus owner.
protected void
KeyboardFocusManager.
setGlobalPermanentFocusOwner
(
Component
permanentFocusOwner)
Sets the permanent focus owner.
void
Window.
setLocationRelativeTo
(
Component
c)
Sets the location of the window relative to the specified
 component according to the following scenarios.
void
PopupMenu.
show
(
Component
origin,
 int x,
 int y)
Shows the popup menu at the x, y position relative to an origin
 component.
void
DefaultKeyboardFocusManager.
upFocusCycle
(
Component
aComponent)
Moves the focus up one focus traversal cycle.
abstract void
KeyboardFocusManager.
upFocusCycle
(
Component
aComponent)
Moves the focus up one focus traversal cycle.
Constructors in
java.awt
with parameters of type
Component
Modifier
Constructor
Description
MediaTracker
(
Component
comp)
Creates a media tracker to track images for a given component.
Uses of
Component
in
java.awt.dnd
Fields in
java.awt.dnd
declared as
Component
Modifier and Type
Field
Description
protected
Component
DragGestureRecognizer.
component
The
Component
associated with this
DragGestureRecognizer
.
Methods in
java.awt.dnd
that return
Component
Modifier and Type
Method
Description
Component
DragGestureEvent.
getComponent
()
Returns the
Component
associated
 with this
DragGestureEvent
.
Component
DragGestureRecognizer.
getComponent
()
This method returns the
Component
that is to be "observed" by the
DragGestureRecognizer
for drag initiating gestures.
Component
DragSourceContext.
getComponent
()
Returns the
Component
associated with this
DragSourceContext
.
Component
DropTarget.
getComponent
()
Gets the
Component
associated
 with this
DropTarget
.
Component
DropTargetContext.
getComponent
()
This method returns the
Component
associated with
 this
DropTargetContext
.
Methods in
java.awt.dnd
with parameters of type
Component
Modifier and Type
Method
Description
DragGestureRecognizer
DragSource.
createDefaultDragGestureRecognizer
(
Component
c,
 int actions,
DragGestureListener
dgl)
Creates a new
DragGestureRecognizer
that implements the default
 abstract subclass of
DragGestureRecognizer
for this
DragSource
,
 and sets the specified
Component
and
DragGestureListener
on the
 newly created object.
<T extends
DragGestureRecognizer
>
T
DragSource.
createDragGestureRecognizer
(
Class
<T> recognizerAbstractClass,
Component
c,
 int actions,
DragGestureListener
dgl)
Creates a new
DragGestureRecognizer
that implements the specified
 abstract subclass of
DragGestureRecognizer
, and
 sets the specified
Component
and
DragGestureListener
on
 the newly created object.
protected
DropTarget.DropTargetAutoScroller
DropTarget.
createDropTargetAutoScroller
(
Component
c,
Point
p)
create an embedded autoscroller
void
DragGestureRecognizer.
setComponent
(
Component
c)
set the Component that the DragGestureRecognizer is associated with

 registerListeners() and unregisterListeners() are called as a side
 effect as appropriate.
void
DropTarget.
setComponent
(
Component
c)
Note: this interface is required to permit the safe association
 of a DropTarget with a Component in one of two ways, either:
component.setDropTarget(droptarget);
or
droptarget.setComponent(component);
Constructors in
java.awt.dnd
with parameters of type
Component
Modifier
Constructor
Description
protected
DragGestureRecognizer
(
DragSource
ds,
Component
c)
Construct a new
DragGestureRecognizer
given the
DragSource
to be used
 in this Drag and Drop operation, and
 the
Component
this
DragGestureRecognizer
should "observe" for drag initiating gestures.
protected
DragGestureRecognizer
(
DragSource
ds,
Component
c,
 int sa)
Construct a new
DragGestureRecognizer
given the
DragSource
to be used in this
 Drag and Drop
 operation, the
Component
this
DragGestureRecognizer
should "observe"
 for drag initiating gestures, and the action(s)
 supported for this Drag and Drop operation.
protected
DragGestureRecognizer
(
DragSource
ds,
Component
c,
 int sa,
DragGestureListener
dgl)
Construct a new
DragGestureRecognizer
given the
DragSource
to be used
 in this Drag and Drop operation, the
Component
this
DragGestureRecognizer
should "observe"
 for drag initiating gestures, the action(s) supported
 for this Drag and Drop operation, and the
DragGestureListener
to notify
 once a drag initiating gesture has been detected.
DropTarget
(
Component
c,
 int ops,
DropTargetListener
dtl)
Creates a
DropTarget
given the
Component
to associate itself with, an
int
representing
 the default acceptable action(s) to support, and a
DropTargetListener
to handle event processing.
DropTarget
(
Component
c,
 int ops,
DropTargetListener
dtl,
 boolean act)
Creates a
DropTarget
given the
Component
to associate itself with, an
int
representing
 the default acceptable action(s)
 to support, a
DropTargetListener
to handle event processing, and a
boolean
indicating
 if the
DropTarget
is currently accepting drops.
DropTarget
(
Component
c,
 int ops,
DropTargetListener
dtl,
 boolean act,
FlavorMap
fm)
Creates a new DropTarget given the
Component
to associate itself with, an
int
representing
 the default acceptable action(s) to
 support, a
DropTargetListener
to handle event processing, a
boolean
indicating
 if the
DropTarget
is currently accepting drops, and
 a
FlavorMap
to use (or null for the default
FlavorMap
).
DropTarget
(
Component
c,
DropTargetListener
dtl)
Creates a
DropTarget
given the
Component
to associate itself with, and the
DropTargetListener
to handle event processing.
protected
DropTargetAutoScroller
(
Component
c,
Point
p)
construct a DropTargetAutoScroller
protected
MouseDragGestureRecognizer
(
DragSource
ds,
Component
c)
Construct a new
MouseDragGestureRecognizer
given the
DragSource
for the
Component
c, and the
Component
to observe.
protected
MouseDragGestureRecognizer
(
DragSource
ds,
Component
c,
 int act)
Construct a new
MouseDragGestureRecognizer
given the
DragSource
for
 the
Component
c,
 the
Component
to observe, and the action(s)
 permitted for this drag operation.
protected
MouseDragGestureRecognizer
(
DragSource
ds,
Component
c,
 int act,
DragGestureListener
dgl)
Construct a new
MouseDragGestureRecognizer
given the
DragSource
for the
Component
c, the
Component
to observe, the action(s)
 permitted for this drag operation, and
 the
DragGestureListener
to
 notify when a drag gesture is detected.
Uses of
Component
in
java.awt.event
Methods in
java.awt.event
that return
Component
Modifier and Type
Method
Description
Component
HierarchyEvent.
getChanged
()
Returns the Component at the top of the hierarchy which was
 changed.
Component
ContainerEvent.
getChild
()
Returns the component that was affected by the event.
Component
ComponentEvent.
getComponent
()
Returns the originator of the event.
Component
HierarchyEvent.
getComponent
()
Returns the originator of the event.
Component
FocusEvent.
getOppositeComponent
()
Returns the other Component involved in this focus change.
Constructors in
java.awt.event
with parameters of type
Component
Modifier
Constructor
Description
ComponentEvent
(
Component
source,
 int id)
Constructs a
ComponentEvent
object.
ContainerEvent
(
Component
source,
 int id,
Component
child)
Constructs a
ContainerEvent
object.
FocusEvent
(
Component
source,
 int id)
Constructs a
FocusEvent
object and identifies it
 as a permanent change in focus.
FocusEvent
(
Component
source,
 int id,
 boolean temporary)
Constructs a
FocusEvent
object and identifies
 whether or not the change is temporary.
FocusEvent
(
Component
source,
 int id,
 boolean temporary,
Component
opposite)
Constructs a
FocusEvent
object with the
 specified temporary state, opposite
Component
and the
Cause.UNKNOWN
cause.
FocusEvent
(
Component
source,
 int id,
 boolean temporary,
Component
opposite,
FocusEvent.Cause
cause)
Constructs a
FocusEvent
object with the
 specified temporary state, opposite
Component
and the cause.
HierarchyEvent
(
Component
source,
 int id,
Component
changed,
Container
changedParent)
Constructs an
HierarchyEvent
object to identify a
 change in the
Component
hierarchy.
HierarchyEvent
(
Component
source,
 int id,
Component
changed,
Container
changedParent,
 long changeFlags)
Constructs an
HierarchyEvent
object to identify
 a change in the
Component
hierarchy.
InputMethodEvent
(
Component
source,
 int id,
 long when,
AttributedCharacterIterator
text,
 int committedCharacterCount,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the specified
 source component, type, time, text, caret, and visiblePosition.
InputMethodEvent
(
Component
source,
 int id,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the
 specified source component, type, caret, and visiblePosition.
InputMethodEvent
(
Component
source,
 int id,
AttributedCharacterIterator
text,
 int committedCharacterCount,
TextHitInfo
caret,
TextHitInfo
visiblePosition)
Constructs an
InputMethodEvent
with the specified
 source component, type, text, caret, and visiblePosition.
KeyEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int keyCode)
Deprecated.
as of JDK1.1; use
KeyEvent(Component, int, long, int, int, char)
instead
KeyEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int keyCode,
 char keyChar)
Constructs a
KeyEvent
object.
KeyEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int keyCode,
 char keyChar,
 int keyLocation)
Constructs a
KeyEvent
object.
MouseEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int clickCount,
 boolean popupTrigger)
Constructs a
MouseEvent
object with the
 specified source component,
 type, modifiers, coordinates, click count, and popupTrigger flag.
MouseEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int clickCount,
 boolean popupTrigger,
 int button)
Constructs a
MouseEvent
object with the
 specified source component,
 type, time, modifiers, coordinates, click count, popupTrigger flag,
 and button number.
MouseEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int xAbs,
 int yAbs,
 int clickCount,
 boolean popupTrigger,
 int button)
Constructs a
MouseEvent
object with the
 specified source component,
 type, time, modifiers, coordinates, absolute coordinates, click count, popupTrigger flag,
 and button number.
MouseWheelEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int clickCount,
 boolean popupTrigger,
 int scrollType,
 int scrollAmount,
 int wheelRotation)
Constructs a
MouseWheelEvent
object with the
 specified source component, type, modifiers, coordinates,
 scroll type, scroll amount, and wheel rotation.
MouseWheelEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int xAbs,
 int yAbs,
 int clickCount,
 boolean popupTrigger,
 int scrollType,
 int scrollAmount,
 int wheelRotation)
Constructs a
MouseWheelEvent
object with the
 specified source component, type, modifiers, coordinates,
 absolute coordinates, scroll type, scroll amount, and wheel rotation.
MouseWheelEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int xAbs,
 int yAbs,
 int clickCount,
 boolean popupTrigger,
 int scrollType,
 int scrollAmount,
 int wheelRotation,
 double preciseWheelRotation)
Constructs a
MouseWheelEvent
object with the specified
 source component, type, modifiers, coordinates, absolute coordinates,
 scroll type, scroll amount, and wheel rotation.
PaintEvent
(
Component
source,
 int id,
Rectangle
updateRect)
Constructs a
PaintEvent
object with the specified
 source component and type.
Uses of
Component
in
java.awt.im
Methods in
java.awt.im
with parameters of type
Component
Modifier and Type
Method
Description
void
InputContext.
removeNotify
(
Component
client)
Notifies the input context that a client component has been
 removed from its containment hierarchy, or that input method
 support has been disabled for the component.
Uses of
Component
in
java.beans
Methods in
java.beans
that return
Component
Modifier and Type
Method
Description
Component
PropertyEditor.
getCustomEditor
()
A PropertyEditor may choose to make available a full custom Component
 that edits its property value.
Component
PropertyEditorSupport.
getCustomEditor
()
A PropertyEditor may chose to make available a full custom Component
 that edits its property value.
Uses of
Component
in
java.beans.beancontext
Methods in
java.beans.beancontext
that return
Component
Modifier and Type
Method
Description
Component
BeanContextChildComponentProxy.
getComponent
()
Gets the
java.awt.Component
associated with
 this
BeanContextChild
.
Uses of
Component
in
javax.swing
Classes in
javax.swing
with type parameters of type
Component
Modifier and Type
Class
Description
final class
JLayer
<V extends
Component
>
JLayer
is a universal decorator for Swing components
 which enables you to implement various advanced painting effects as well as
 receive notifications of all
AWTEvent
s generated within its borders.
Subclasses of
Component
in
javax.swing
Modifier and Type
Class
Description
class
AbstractButton
Defines common behaviors for buttons and menu items.
class
Box
A lightweight container
 that uses a BoxLayout object as its layout manager.
static class
Box.Filler
An implementation of a lightweight component that participates in
 layout but has no view.
class
CellRendererPane
This class is inserted in between cell renderers and the components that
 use them.
class
DefaultListCellRenderer
Renders an item in a list.
static class
DefaultListCellRenderer.UIResource
A subclass of DefaultListCellRenderer that implements UIResource.
class
JApplet
Deprecated, for removal: This API element is subject to removal in a future version.
The Applet API is deprecated, no replacement.
class
JButton
An implementation of a "push" button.
class
JCheckBox
An implementation of a check box -- an item that can be selected or
 deselected, and which displays its state to the user.
class
JCheckBoxMenuItem
A menu item that can be selected or deselected.
class
JColorChooser
JColorChooser
provides a pane of controls designed to allow
 a user to manipulate and select a color.
class
JComboBox
<E>
A component that combines a button or editable field and a drop-down list.
class
JComponent
The base class for all Swing components except top-level containers.
class
JDesktopPane
A container used to create a multiple-document interface or a virtual desktop.
class
JDialog
The main class for creating a dialog window.
class
JEditorPane
A text component to edit various kinds of content.
class
JFileChooser
JFileChooser
provides a simple mechanism for the user to
 choose a file.
class
JFormattedTextField
JFormattedTextField
extends
JTextField
adding
 support for formatting arbitrary values, as well as retrieving a particular
 object once the user has edited the text.
class
JFrame
An extended version of
java.awt.Frame
that adds support for
 the JFC/Swing component architecture.
class
JInternalFrame
A lightweight object that provides many of the features of
 a native frame, including dragging, closing, becoming an icon,
 resizing, title display, and support for a menu bar.
static class
JInternalFrame.JDesktopIcon
This component represents an iconified version of a
JInternalFrame
.
class
JLabel
A display area for a short text string or an image,
 or both.
final class
JLayer
<V extends
Component
>
JLayer
is a universal decorator for Swing components
 which enables you to implement various advanced painting effects as well as
 receive notifications of all
AWTEvent
s generated within its borders.
class
JLayeredPane
JLayeredPane
adds depth to a JFC/Swing container,
 allowing components to overlap each other when needed.
class
JList
<E>
A component that displays a list of objects and allows the user to select
 one or more items.
class
JMenu
An implementation of a menu -- a popup window containing
JMenuItem
s that
 is displayed when the user selects an item on the
JMenuBar
.
class
JMenuBar
An implementation of a menu bar.
class
JMenuItem
An implementation of an item in a menu.
class
JOptionPane
JOptionPane
makes it easy to pop up a standard dialog box that
 prompts users for a value or informs them of something.
class
JPanel
JPanel
is a generic lightweight container.
class
JPasswordField
JPasswordField
is a lightweight component that allows
 the editing of a single line of text where the view indicates
 something was typed, but does not show the original characters.
class
JPopupMenu
An implementation of a popup menu -- a small window that pops up
 and displays a series of choices.
static class
JPopupMenu.Separator
A popup menu-specific separator.
class
JProgressBar
A component that visually displays the progress of some task.
class
JRadioButton
An implementation of a radio button -- an item that can be selected or
 deselected, and which displays its state to the user.
class
JRadioButtonMenuItem
An implementation of a radio button menu item.
class
JRootPane
A lightweight container used behind the scenes by
JFrame
,
JDialog
,
JWindow
,
JApplet
, and
JInternalFrame
.
class
JScrollBar
An implementation of a scrollbar.
class
JScrollPane
Provides a scrollable view of a lightweight component.
protected class
JScrollPane.ScrollBar
By default
JScrollPane
creates scrollbars
 that are instances
 of this class.
class
JSeparator
JSeparator
provides a general purpose component for
 implementing divider lines - most commonly used as a divider
 between menu items that breaks them up into logical groupings.
class
JSlider
A component that lets the user graphically select a value by sliding
 a knob within a bounded interval.
class
JSpinner
A single line input field that lets the user select a
 number or an object value from an ordered sequence.
static class
JSpinner.DateEditor
An editor for a
JSpinner
whose model is a
SpinnerDateModel
.
static class
JSpinner.DefaultEditor
A simple base class for more specialized editors
 that displays a read-only view of the model's current
 value with a
JFormattedTextField
.
static class
JSpinner.ListEditor
An editor for a
JSpinner
whose model is a
SpinnerListModel
.
static class
JSpinner.NumberEditor
An editor for a
JSpinner
whose model is a
SpinnerNumberModel
.
class
JSplitPane
JSplitPane
is used to divide two (and only two)
Component
s.
class
JTabbedPane
A component that lets the user switch between a group of components by
 clicking on a tab with a given title and/or icon.
class
JTable
The
JTable
is used to display and edit regular two-dimensional tables
 of cells.
class
JTextArea
A
JTextArea
is a multi-line area that displays plain text.
class
JTextField
JTextField
is a lightweight component that allows the editing
 of a single line of text.
class
JTextPane
A text component that can be marked up with attributes that are
 represented graphically.
class
JToggleButton
An implementation of a two-state button.
class
JToolBar
JToolBar
provides a component that is useful for
 displaying commonly used
Action
s or controls.
static class
JToolBar.Separator
A toolbar-specific separator.
class
JToolTip
Used to display a "Tip" for a Component.
class
JTree
A control that displays a set of hierarchical data as an outline.
class
JViewport
The "viewport" or "porthole" through which you see the underlying
 information.
class
JWindow
A
JWindow
is a container that can be displayed anywhere on the
 user's desktop.
Fields in
javax.swing
declared as
Component
Modifier and Type
Field
Description
protected static final
Component
ImageIcon.
component
Deprecated.
since 1.8
protected
Component
JTable.
editorComp
If editing, the
Component
that is handling the editing.
protected
Component
JRootPane.
glassPane
The glass pane that overlays the menu bar and content pane,
  so it can intercept mouse movements and such.
protected
Component
JLabel.
labelFor
The Component this label is for; null if the label
 is not the label for a component
protected
Component
JSplitPane.
leftComponent
The left or top component.
protected
Component
JScrollPane.
lowerLeft
The component to display in the lower left corner.
protected
Component
ScrollPaneLayout.
lowerLeft
The component to display in the lower left corner.
protected
Component
JScrollPane.
lowerRight
The component to display in the lower right corner.
protected
Component
ScrollPaneLayout.
lowerRight
The component to display in the lower right corner.
protected
Component
JSplitPane.
rightComponent
The right or bottom component.
protected
Component
JScrollPane.
upperLeft
The component to display in the upper left corner.
protected
Component
ScrollPaneLayout.
upperLeft
The component to display in the upper left corner.
protected
Component
JScrollPane.
upperRight
The component to display in the upper right corner.
protected
Component
ScrollPaneLayout.
upperRight
The component to display in the upper right corner.
Methods in
javax.swing
that return
Component
Modifier and Type
Method
Description
Component
JMenu.
add
(
Component
c)
Appends a component to the end of this menu.
Component
JMenu.
add
(
Component
c,
 int index)
Adds the specified component to this container at the given
 position.
Component
JTabbedPane.
add
(
Component
component)
Adds a
component
with a tab title defaulting to
 the name of the component which is the result of calling
component.getName
.
Component
JTabbedPane.
add
(
Component
component,
 int index)
Adds a
component
at the specified tab index with a tab
 title defaulting to the name of the component.
Component
JTabbedPane.
add
(
String
title,
Component
component)
Adds a
component
with the specified tab title.
protected
Component
ScrollPaneLayout.
addSingletonComponent
(
Component
oldC,
Component
newC)
Removes an existing component.
Component
MenuSelectionManager.
componentForPoint
(
Component
source,
Point
sourcePoint)
Returns the component in the currently selected path
 which contains sourcePoint.
protected
Component
JRootPane.
createGlassPane
()
Called by the constructor methods to create the default
glassPane
.
static
Component
Box.
createGlue
()
Creates an invisible "glue" component
 that can be useful in a Box
 whose visible components have a maximum width
 (for a horizontal box)
 or height (for a vertical box).
static
Component
Box.
createHorizontalGlue
()
Creates a horizontal glue component.
static
Component
Box.
createHorizontalStrut
(int width)
Creates an invisible, fixed-width component.
static
Component
Box.
createRigidArea
(
Dimension
d)
Creates an invisible component that's always the specified size.
static
Component
Box.
createVerticalGlue
()
Creates a vertical glue component.
static
Component
Box.
createVerticalStrut
(int height)
Creates an invisible, fixed-height component.
static
Component
SwingUtilities.
findFocusOwner
(
Component
c)
Deprecated.
As of 1.4, replaced by
KeyboardFocusManager.getFocusOwner()
.
Component
JSplitPane.
getBottomComponent
()
Returns the component below, or to the right of the divider.
Component
DefaultCellEditor.
getComponent
()
Returns a reference to the editor component.
Component
JMenu.
getComponent
()
Returns the
java.awt.Component
used to
 paint this
MenuElement
.
Component
JMenuBar.
getComponent
()
Implemented to be a
MenuElement
.
Component
JMenuItem.
getComponent
()
Returns the
java.awt.Component
used to paint
 this object.
Component
JPopupMenu.
getComponent
()
Returns this
JPopupMenu
component.
Component
MenuElement.
getComponent
()
This method should return the
java.awt.Component
used to paint the
 receiving element.
Component
Renderer.
getComponent
()
Returns the component used to render the value.
Component
TransferHandler.TransferSupport.
getComponent
()
Returns the target component of this transfer.
Component
DefaultFocusManager.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the component after.
Component
LayoutFocusTraversalPolicy.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus after aComponent.
Component
SortingFocusTraversalPolicy.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus after aComponent.
Component
JTabbedPane.
getComponentAt
(int index)
Returns the component at
index
.
Component
JMenuBar.
getComponentAtIndex
(int i)
Deprecated.
replaced by
getComponent(int i)
Component
JPopupMenu.
getComponentAtIndex
(int i)
Deprecated.
replaced by
Container.getComponent(int)
Component
JToolBar.
getComponentAtIndex
(int i)
Returns the component at the specified index.
Component
DefaultFocusManager.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the component before.
Component
LayoutFocusTraversalPolicy.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus before aComponent.
Component
SortingFocusTraversalPolicy.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus before aComponent.
Component
[]
JLayeredPane.
getComponentsInLayer
(int layer)
Returns an array of the components in the specified layer.
Component
JScrollPane.
getCorner
(
String
key)
Returns the component at the specified corner.
Component
ScrollPaneLayout.
getCorner
(
String
key)
Returns the
Component
at the specified corner.
protected
Component
JTable.AccessibleJTable.AccessibleJTableCell.
getCurrentComponent
()
Gets the table cell renderer component.
static
Component
SwingUtilities.
getDeepestComponentAt
(
Component
parent,
 int x,
 int y)
Returns the deepest visible descendent Component of
parent
that contains the location
x
,
y
.
Component
SortingFocusTraversalPolicy.
getDefaultComponent
(
Container
aContainer)
Returns the default Component to focus.
Component
ComboBoxEditor.
getEditorComponent
()
Returns the component that should be added to the tree hierarchy for
 this editor
Component
JTable.
getEditorComponent
()
Returns the component that is handling the editing session.
Component
DefaultFocusManager.
getFirstComponent
(
Container
aContainer)
Returns the first component.
Component
LayoutFocusTraversalPolicy.
getFirstComponent
(
Container
aContainer)
Returns the first Component in the traversal cycle.
Component
SortingFocusTraversalPolicy.
getFirstComponent
(
Container
aContainer)
Returns the first Component in the traversal cycle.
Component
JInternalFrame.
getFocusOwner
()
If this
JInternalFrame
is active,
 returns the child that has focus.
Component
JApplet.
getGlassPane
()
Deprecated, for removal: This API element is subject to removal in a future version.
Returns the glassPane object for this applet.
Component
JDialog.
getGlassPane
()
Returns the
glassPane
object for this dialog.
Component
JFrame.
getGlassPane
()
Returns the
glassPane
object for this frame.
Component
JInternalFrame.
getGlassPane
()
Returns the glass pane for this internal frame.
Component
JRootPane.
getGlassPane
()
Returns the current glass pane for this
JRootPane
.
Component
JWindow.
getGlassPane
()
Returns the
glassPane Component
for this window.
Component
RootPaneContainer.
getGlassPane
()
Returns the glassPane.
Component
InternalFrameFocusTraversalPolicy.
getInitialComponent
(
JInternalFrame
frame)
Returns the Component that should receive the focus when a
 JInternalFrame is selected for the first time.
Component
JPopupMenu.
getInvoker
()
Returns the component which is the 'invoker' of this
 popup menu.
Component
JLabel.
getLabelFor
()
Get the component this is labelling.
Component
DefaultFocusManager.
getLastComponent
(
Container
aContainer)
Returns the last component.
Component
LayoutFocusTraversalPolicy.
getLastComponent
(
Container
aContainer)
Returns the last Component in the traversal cycle.
Component
SortingFocusTraversalPolicy.
getLastComponent
(
Container
aContainer)
Returns the last Component in the traversal cycle.
Component
JSplitPane.
getLeftComponent
()
Returns the component to the left (or above) the divider.
Component
DefaultListCellRenderer.
getListCellRendererComponent
(
JList
<?> list,
Object
value,
 int index,
 boolean isSelected,
 boolean cellHasFocus)
Component
ListCellRenderer.
getListCellRendererComponent
(
JList
<? extends
E
> list,
E
value,
 int index,
 boolean isSelected,
 boolean cellHasFocus)
Return a component that has been configured to display the specified
 value.
Component
JMenu.
getMenuComponent
(int n)
Returns the component at position
n
.
Component
[]
JMenu.
getMenuComponents
()
Returns an array of
Component
s of the menu's
 subcomponents.
Component
JInternalFrame.
getMostRecentFocusOwner
()
Returns the child component of this
JInternalFrame
that will receive the
 focus when this
JInternalFrame
is selected.
Component
JComponent.
getNextFocusableComponent
()
Deprecated.
As of 1.4, replaced by
FocusTraversalPolicy
.
Component
JSplitPane.
getRightComponent
()
Returns the component to the right (or below) the divider.
static
Component
SwingUtilities.
getRoot
(
Component
c)
Returns the root component for the current component tree.
Component
JTabbedPane.
getSelectedComponent
()
Returns the currently selected component for this tabbedpane.
Component
JTabbedPane.
getTabComponentAt
(int index)
Returns the tab component at
index
.
Component
DefaultCellEditor.
getTableCellEditorComponent
(
JTable
table,
Object
value,
 boolean isSelected,
 int row,
 int column)
Implements the
TableCellEditor
interface.
Component
JSplitPane.
getTopComponent
()
Returns the component above, or to the left of the divider.
Component
DefaultCellEditor.
getTreeCellEditorComponent
(
JTree
tree,
Object
value,
 boolean isSelected,
 boolean expanded,
 boolean leaf,
 int row)
Implements the
TreeCellEditor
interface.
static
Component
SwingUtilities.
getUnwrappedView
(
JViewport
viewport)
Returns the first
JViewport
's descendant
 which is not an instance of
JLayer
.
Component
JViewport.
getView
()
Returns the
JViewport
's one child or
null
.
Component
JTable.
prepareEditor
(
TableCellEditor
editor,
 int row,
 int column)
Prepares the editor by querying the data model for the value and
 selection state of the cell at
row
,
column
.
Component
JTable.
prepareRenderer
(
TableCellRenderer
renderer,
 int row,
 int column)
Prepares the renderer by querying the data model for the
 value and selection state
 of the cell at
row
,
column
.
Methods in
javax.swing
that return types with arguments of type
Component
Modifier and Type
Method
Description
protected
Comparator
<? super
Component
>
SortingFocusTraversalPolicy.
getComparator
()
Returns the Comparator which will be used to sort the Components in a
 focus traversal cycle.
protected
Hashtable
<
Component
,
Integer
>
JLayeredPane.
getComponentToLayer
()
Returns the hashtable that maps components to layers.
Methods in
javax.swing
with parameters of type
Component
Modifier and Type
Method
Description
protected boolean
LayoutFocusTraversalPolicy.
accept
(
Component
aComponent)
Determines whether the specified
Component
is an acceptable choice as the new focus owner.
protected boolean
SortingFocusTraversalPolicy.
accept
(
Component
aComponent)
Determines whether a Component is an acceptable choice as the new
 focus owner.
Component
JMenu.
add
(
Component
c)
Appends a component to the end of this menu.
Component
JMenu.
add
(
Component
c,
 int index)
Adds the specified component to this container at the given
 position.
Component
JTabbedPane.
add
(
Component
component)
Adds a
component
with a tab title defaulting to
 the name of the component which is the result of calling
component.getName
.
Component
JTabbedPane.
add
(
Component
component,
 int index)
Adds a
component
at the specified tab index with a tab
 title defaulting to the name of the component.
void
JTabbedPane.
add
(
Component
component,
Object
constraints)
Adds a
component
to the tabbed pane.
void
JTabbedPane.
add
(
Component
component,
Object
constraints,
 int index)
Adds a
component
at the specified tab index.
Component
JTabbedPane.
add
(
String
title,
Component
component)
Adds a
component
with the specified tab title.
GroupLayout.Group
GroupLayout.Group.
addComponent
(
Component
component)
Adds a
Component
to this
Group
.
GroupLayout.Group
GroupLayout.Group.
addComponent
(
Component
component,
 int min,
 int pref,
 int max)
Adds a
Component
to this
Group
with the specified size.
GroupLayout.ParallelGroup
GroupLayout.ParallelGroup.
addComponent
(
Component
component)
Adds a
Component
to this
Group
.
GroupLayout.ParallelGroup
GroupLayout.ParallelGroup.
addComponent
(
Component
component,
 int min,
 int pref,
 int max)
Adds a
Component
to this
Group
with the specified size.
GroupLayout.ParallelGroup
GroupLayout.ParallelGroup.
addComponent
(
Component
component,
GroupLayout.Alignment
alignment)
Adds a
Component
to this
ParallelGroup
with
 the specified alignment.
GroupLayout.ParallelGroup
GroupLayout.ParallelGroup.
addComponent
(
Component
component,
GroupLayout.Alignment
alignment,
 int min,
 int pref,
 int max)
Adds a
Component
to this
ParallelGroup
with the
 specified alignment and size.
GroupLayout.SequentialGroup
GroupLayout.SequentialGroup.
addComponent
(boolean useAsBaseline,
Component
component)
Adds a
Component
to this
Group
.
GroupLayout.SequentialGroup
GroupLayout.SequentialGroup.
addComponent
(boolean useAsBaseline,
Component
component,
 int min,
 int pref,
 int max)
Adds a
Component
to this
Group
with the specified size.
GroupLayout.SequentialGroup
GroupLayout.SequentialGroup.
addComponent
(
Component
component)
Adds a
Component
to this
Group
.
GroupLayout.SequentialGroup
GroupLayout.SequentialGroup.
addComponent
(
Component
component,
 int min,
 int pref,
 int max)
Adds a
Component
to this
Group
with the specified size.
protected void
AbstractButton.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified component to this container at the specified
 index, refer to
Container.addImpl(Component, Object, int)
for a complete description of this method.
protected void
CellRendererPane.
addImpl
(
Component
x,
Object
constraints,
 int index)
If the specified component is already a child of this then we don't
 bother doing anything - stacking order doesn't matter for cell
 renderer components (CellRendererPane doesn't paint anyway).
protected void
JApplet.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Deprecated, for removal: This API element is subject to removal in a future version.
Adds the specified child
Component
.
protected void
JDesktopPane.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified component to this container at the specified
 index.
protected void
JDialog.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified child
Component
.
protected void
JFrame.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified child
Component
.
protected void
JInternalFrame.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified child
Component
.
protected void
JLayer.
addImpl
(
Component
comp,
Object
constraints,
 int index)
This method is not supported by
JLayer
and always throws
UnsupportedOperationException
protected void
JRootPane.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Overridden to enforce the position of the glass component as
 the zero child.
protected void
JSplitPane.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified component to this split pane.
protected void
JToolBar.
addImpl
(
Component
comp,
Object
constraints,
 int index)
If a
JButton
is being added, it is initially
 set to be disabled.
protected void
JViewport.
addImpl
(
Component
child,
Object
constraints,
 int index)
Sets the
JViewport
's one lightweight child,
 which can be
null
.
protected void
JWindow.
addImpl
(
Component
comp,
Object
constraints,
 int index)
Adds the specified child
Component
.
void
BoxLayout.
addLayoutComponent
(
Component
comp,
Object
constraints)
Not used by this class.
void
BoxLayout.
addLayoutComponent
(
String
name,
Component
comp)
Not used by this class.
void
GroupLayout.
addLayoutComponent
(
Component
component,
Object
constraints)
Notification that a
Component
has been added to
 the parent container.
void
GroupLayout.
addLayoutComponent
(
String
name,
Component
component)
Notification that a
Component
has been added to
 the parent container.
void
JRootPane.RootLayout.
addLayoutComponent
(
Component
comp,
Object
constraints)
void
JRootPane.RootLayout.
addLayoutComponent
(
String
name,
Component
comp)
void
JSpinner.DefaultEditor.
addLayoutComponent
(
String
name,
Component
child)
This
LayoutManager
method does nothing.
void
OverlayLayout.
addLayoutComponent
(
Component
comp,
Object
constraints)
Adds the specified component to the layout, using the specified
 constraint object.
void
OverlayLayout.
addLayoutComponent
(
String
name,
Component
comp)
Adds the specified component to the layout.
void
ScrollPaneLayout.
addLayoutComponent
(
String
s,
Component
c)
Adds the specified component to the layout.
void
SpringLayout.
addLayoutComponent
(
Component
component,
Object
constraints)
If
constraints
is an instance of
SpringLayout.Constraints
,
 associates the constraints with the specified component.
void
SpringLayout.
addLayoutComponent
(
String
name,
Component
c)
Has no effect,
 since this layout manager does not
 use a per-component string.
void
ViewportLayout.
addLayoutComponent
(
String
name,
Component
c)
Adds the specified component to the layout.
protected
Component
ScrollPaneLayout.
addSingletonComponent
(
Component
oldC,
Component
newC)
Removes an existing component.
void
JTabbedPane.
addTab
(
String
title,
Component
component)
Adds a
component
represented by a
title
and no icon.
void
JTabbedPane.
addTab
(
String
title,
Icon
icon,
Component
component)
Adds a
component
represented by a
title
and/or
icon
, either of which can be
null
.
void
JTabbedPane.
addTab
(
String
title,
Icon
icon,
Component
component,
String
tip)
Adds a
component
and
tip
represented by a
title
and/or
icon
,
 either of which can be
null
.
boolean
DefaultFocusManager.
compareTabOrder
(
Component
a,
Component
b)
Compares the components by their focus traversal cycle order.
Component
MenuSelectionManager.
componentForPoint
(
Component
source,
Point
sourcePoint)
Returns the component in the currently selected path
 which contains sourcePoint.
static
MouseEvent
SwingUtilities.
convertMouseEvent
(
Component
source,
MouseEvent
sourceEvent,
Component
destination)
Returns a MouseEvent similar to
sourceEvent
except that its x
 and y members have been converted to
destination
's coordinate
 system.
static
Point
SwingUtilities.
convertPoint
(
Component
source,
 int x,
 int y,
Component
destination)
Convert the point
(x,y)
in
source
coordinate system to
destination
coordinate system.
static
Point
SwingUtilities.
convertPoint
(
Component
source,
Point
aPoint,
Component
destination)
Convert a
aPoint
in
source
coordinate system to
destination
coordinate system.
static void
SwingUtilities.
convertPointFromScreen
(
Point
p,
Component
c)
Convert a point from a screen coordinates to a component's
 coordinate system
static void
SwingUtilities.
convertPointToScreen
(
Point
p,
Component
c)
Convert a point from a component's coordinate system to
 screen coordinates.
static
Rectangle
SwingUtilities.
convertRectangle
(
Component
source,
Rectangle
aRectangle,
Component
destination)
Convert the rectangle
aRectangle
in
source
coordinate system to
destination
coordinate system.
static
JDialog
JColorChooser.
createDialog
(
Component
c,
String
title,
 boolean modal,
JColorChooser
chooserPane,
ActionListener
okListener,
ActionListener
cancelListener)
Creates and returns a new dialog containing the specified
ColorChooser
pane along with "OK", "Cancel", and "Reset"
 buttons.
protected
JDialog
JFileChooser.
createDialog
(
Component
parent)
Creates and returns a new
JDialog
wrapping
this
centered on the
parent
in the
parent
's frame.
JDialog
JOptionPane.
createDialog
(
Component
parentComponent,
String
title)
Creates and returns a new
JDialog
wrapping
this
centered on the
parentComponent
in the
parentComponent
's frame.
JInternalFrame
JOptionPane.
createInternalFrame
(
Component
parentComponent,
String
title)
Creates and returns an instance of
JInternalFrame
.
static
RepaintManager
RepaintManager.
currentManager
(
Component
c)
Return the RepaintManager for the calling thread given a Component.
static
Component
SwingUtilities.
findFocusOwner
(
Component
c)
Deprecated.
As of 1.4, replaced by
KeyboardFocusManager.getFocusOwner()
.
static
Accessible
SwingUtilities.
getAccessibleAt
(
Component
c,
Point
p)
Returns the
Accessible
child contained at the
 local coordinate
Point
, if one exists.
static
Accessible
SwingUtilities.
getAccessibleChild
(
Component
c,
 int i)
Return the nth Accessible child of the object.
static int
SwingUtilities.
getAccessibleChildrenCount
(
Component
c)
Returns the number of accessible children in the object.
static int
SwingUtilities.
getAccessibleIndexInParent
(
Component
c)
Get the index of this object in its accessible parent.
static
AccessibleStateSet
SwingUtilities.
getAccessibleStateSet
(
Component
c)
Get the state of this object.
static
Container
SwingUtilities.
getAncestorNamed
(
String
name,
Component
comp)
Convenience method for searching above
comp
in the
 component hierarchy and returns the first object of
name
it
 finds.
static
Container
SwingUtilities.
getAncestorOfClass
(
Class
<?> c,
Component
comp)
Convenience method for searching above
comp
in the
 component hierarchy and returns the first object of class
c
it
 finds.
Component
DefaultFocusManager.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the component after.
Component
LayoutFocusTraversalPolicy.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus after aComponent.
Component
SortingFocusTraversalPolicy.
getComponentAfter
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus after aComponent.
Component
DefaultFocusManager.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the component before.
Component
LayoutFocusTraversalPolicy.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus before aComponent.
Component
SortingFocusTraversalPolicy.
getComponentBefore
(
Container
aContainer,
Component
aComponent)
Returns the Component that should receive the focus before aComponent.
int
JMenuBar.
getComponentIndex
(
Component
c)
Returns the index of the specified component.
int
JPopupMenu.
getComponentIndex
(
Component
c)
Returns the index of the specified component.
int
JToolBar.
getComponentIndex
(
Component
c)
Returns the index of the specified component.
Spring
SpringLayout.
getConstraint
(
String
edgeName,
Component
c)
Returns the spring controlling the distance between
 the specified edge of
 the component and the top or left edge of its parent.
SpringLayout.Constraints
SpringLayout.
getConstraints
(
Component
c)
Returns the constraints for the specified component.
static
Component
SwingUtilities.
getDeepestComponentAt
(
Component
parent,
 int x,
 int y)
Returns the deepest visible descendent Component of
parent
that contains the location
x
,
y
.
static
JDesktopPane
JOptionPane.
getDesktopPaneForComponent
(
Component
parentComponent)
Returns the specified component's desktop pane.
static
Frame
JOptionPane.
getFrameForComponent
(
Component
parentComponent)
Returns the specified component's
Frame
.
int
JLayeredPane.
getIndexOf
(
Component
c)
Returns the index of the specified Component.
int
JLayeredPane.
getLayer
(
Component
c)
Returns the layer attribute for the specified Component.
static
JLayeredPane
JLayeredPane.
getLayeredPaneAbove
(
Component
c)
Convenience method that returns the first JLayeredPane which
 contains the specified component.
static
Rectangle
SwingUtilities.
getLocalBounds
(
Component
aComponent)
Return the rectangle (0,0,bounds.width,bounds.height) for the component
aComponent
Image
RepaintManager.
getOffscreenBuffer
(
Component
c,
 int proposedWidth,
 int proposedHeight)
Return the offscreen buffer that should be used as a double buffer with
 the component
c
.
Popup
PopupFactory.
getPopup
(
Component
owner,
Component
contents,
 int x,
 int y)
Creates a
Popup
for the Component
owner
containing the Component
contents
.
protected
Popup
PopupFactory.
getPopup
(
Component
owner,
Component
contents,
 int x,
 int y,
 boolean isHeavyWeightPopup)
Creates a
Popup
for the Component
owner
containing the Component
contents
.
int
JLayeredPane.
getPosition
(
Component
c)
Get the relative position of the component within its layer.
static
Component
SwingUtilities.
getRoot
(
Component
c)
Returns the root component for the current component tree.
static
JRootPane
SwingUtilities.
getRootPane
(
Component
c)
If c is a JRootPane descendant return its JRootPane ancestor.
static
Container
SwingUtilities.
getUnwrappedParent
(
Component
component)
Returns the first ancestor of the
component
which is not an instance of
JLayer
.
Image
RepaintManager.
getVolatileOffscreenBuffer
(
Component
c,
 int proposedWidth,
 int proposedHeight)
Return a volatile offscreen buffer that should be used as a
 double buffer with the specified component
c
.
static
Window
SwingUtilities.
getWindowAncestor
(
Component
c)
Returns the first
Window
ancestor of
c
, or
null
if
c
is not contained inside a
Window
.
static
Spring
Spring.
height
(
Component
c)
Returns a spring whose
minimum
,
preferred
,
maximum
and
value
properties are defined by the heights of the
minimumSize
,
preferredSize
,
maximumSize
and
size
properties
 of the supplied component.
int
JTabbedPane.
indexOfComponent
(
Component
component)
Returns the index of the tab for the specified component.
int
JTabbedPane.
indexOfTabComponent
(
Component
tabComponent)
Returns the index of the tab for the specified tab component.
void
JPopupMenu.
insert
(
Component
component,
 int index)
Inserts the specified component into the menu at a given
 position.
void
JTextPane.
insertComponent
(
Component
c)
Inserts a component into the document as a replacement
 for the currently selected content.
void
JTabbedPane.
insertTab
(
String
title,
Icon
icon,
Component
component,
String
tip,
 int index)
Inserts a new tab for the given component, at the given index,
 represented by the given title and/or icon, either of which may
 be
null
.
boolean
MenuSelectionManager.
isComponentPartOfCurrentMenu
(
Component
c)
Return true if
c
is part of the currently used menu
static boolean
SwingUtilities.
isDescendingFrom
(
Component
a,
Component
b)
Return
true
if a component
a
descends from a component
b
static boolean
JComponent.
isLightweightComponent
(
Component
c)
Returns true if this component is lightweight, that is, if it doesn't
 have a native window system peer.
boolean
JMenu.
isMenuComponent
(
Component
c)
Returns true if the specified component exists in the
 submenu hierarchy.
void
GroupLayout.
linkSize
(int axis,
Component
... components)
Forces the specified components to have the same size along the
 specified axis regardless of their preferred, minimum or
 maximum sizes.
void
GroupLayout.
linkSize
(
Component
... components)
Forces the specified components to have the same size
 regardless of their preferred, minimum or maximum sizes.
void
JLayeredPane.
moveToBack
(
Component
c)
Moves the component to the bottom of the components in its current layer
 (position -1).
void
JLayeredPane.
moveToFront
(
Component
c)
Moves the component to the top of the components in its current layer
 (position 0).
void
CellRendererPane.
paintComponent
(
Graphics
g,
Component
c,
Container
p,
 int x,
 int y,
 int w,
 int h)
Calls this.paintComponent(g, c, p, x, y, w, h, false).
void
CellRendererPane.
paintComponent
(
Graphics
g,
Component
c,
Container
p,
 int x,
 int y,
 int w,
 int h,
 boolean shouldValidate)
Paint a cell renderer component c on graphics object g.
void
CellRendererPane.
paintComponent
(
Graphics
g,
Component
c,
Container
p,
Rectangle
r)
Calls this.paintComponent(g, c, p, r.x, r.y, r.width, r.height) where
r
is the input
Rectangle
parameter.
static void
SwingUtilities.
paintComponent
(
Graphics
g,
Component
c,
Container
p,
 int x,
 int y,
 int w,
 int h)
Paints a component to the specified
Graphics
.
static void
SwingUtilities.
paintComponent
(
Graphics
g,
Component
c,
Container
p,
Rectangle
r)
Paints a component to the specified
Graphics
.
void
Icon.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
Draw the icon at the specified location.
void
ImageIcon.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
Paints the icon.
void
LookAndFeel.
provideErrorFeedback
(
Component
component)
Invoked when the user attempts an invalid operation,
 such as pasting into an uneditable
JTextField
that has focus.
void
SpringLayout.
putConstraint
(
String
e1,
Component
c1,
 int pad,
String
e2,
Component
c2)
Links edge
e1
of component
c1
to
 edge
e2
of component
c2
,
 with a fixed distance between the edges.
void
SpringLayout.
putConstraint
(
String
e1,
Component
c1,
Spring
s,
String
e2,
Component
c2)
Links edge
e1
of component
c1
to
 edge
e2
of component
c2
.
void
JApplet.
remove
(
Component
comp)
Deprecated, for removal: This API element is subject to removal in a future version.
Removes the specified component from the container.
void
JDialog.
remove
(
Component
comp)
Removes the specified component from the container.
void
JFrame.
remove
(
Component
comp)
Removes the specified component from the container.
void
JInternalFrame.
remove
(
Component
comp)
Removes the specified component from the container.
void
JMenu.
remove
(
Component
c)
Removes the component
c
from this menu.
void
JSplitPane.
remove
(
Component
component)
Removes the child component,
component
from the
 pane.
void
JTabbedPane.
remove
(
Component
component)
Removes the specified
Component
from the
JTabbedPane
.
void
JViewport.
remove
(
Component
child)
Removes the
Viewport
s one lightweight child.
void
JWindow.
remove
(
Component
comp)
Removes the specified component from the container.
void
BoxLayout.
removeLayoutComponent
(
Component
comp)
Not used by this class.
void
GroupLayout.
removeLayoutComponent
(
Component
component)
Notification that a
Component
has been removed from
 the parent container.
void
JRootPane.RootLayout.
removeLayoutComponent
(
Component
comp)
void
JSpinner.DefaultEditor.
removeLayoutComponent
(
Component
child)
This
LayoutManager
method does nothing.
void
OverlayLayout.
removeLayoutComponent
(
Component
comp)
Removes the specified component from the layout.
void
ScrollPaneLayout.
removeLayoutComponent
(
Component
c)
Removes the specified component from the layout.
void
SpringLayout.
removeLayoutComponent
(
Component
c)
Removes the constraints associated with the specified component.
void
ViewportLayout.
removeLayoutComponent
(
Component
c)
Removes the specified component from the layout.
void
GroupLayout.
replace
(
Component
existingComponent,
Component
newComponent)
Replaces an existing component with a new one.
void
JSplitPane.
setBottomComponent
(
Component
comp)
Sets the component below, or to the right of the divider.
void
JScrollPane.
setColumnHeaderView
(
Component
view)
Creates a column-header viewport if necessary, sets
 its view, and then adds the column-header viewport
 to the scrollpane.
void
JTabbedPane.
setComponentAt
(int index,
Component
component)
Sets the component at
index
to
component
.
void
JDesktopPane.
setComponentZOrder
(
Component
comp,
 int index)
Moves the specified component to the specified z-order index in
 the container.
void
JScrollPane.
setCorner
(
String
key,
Component
corner)
Adds a child that will appear in one of the scroll panes
 corners, if there's room.
void
JApplet.
setGlassPane
(
Component
glassPane)
Deprecated, for removal: This API element is subject to removal in a future version.
Sets the glassPane property.
void
JDialog.
setGlassPane
(
Component
glassPane)
Sets the
glassPane
property.
void
JFrame.
setGlassPane
(
Component
glassPane)
Sets the
glassPane
property.
void
JInternalFrame.
setGlassPane
(
Component
glass)
Sets this
JInternalFrame
's
glassPane
property.
void
JRootPane.
setGlassPane
(
Component
glass)
Sets a specified
Component
to be the glass pane for this
 root pane.
void
JWindow.
setGlassPane
(
Component
glassPane)
Sets the
glassPane
property.
void
RootPaneContainer.
setGlassPane
(
Component
glassPane)
The glassPane is always the first child of the rootPane
 and the rootPanes layout manager ensures that it's always
 as big as the rootPane.
void
GroupLayout.
setHonorsVisibility
(
Component
component,
Boolean
honorsVisibility)
Sets whether the component's visibility is considered for
 sizing and positioning.
void
JPopupMenu.
setInvoker
(
Component
invoker)
Sets the invoker of this popup menu -- the component in which
 the popup menu menu is to be displayed.
void
JLabel.
setLabelFor
(
Component
c)
Set the component this is labelling.
void
JLayeredPane.
setLayer
(
Component
c,
 int layer)
Sets the layer attribute on the specified component,
 making it the bottommost component in that layer.
void
JLayeredPane.
setLayer
(
Component
c,
 int layer,
 int position)
Sets the layer attribute for the specified component and
 also sets its position within that layer.
void
JSplitPane.
setLeftComponent
(
Component
comp)
Sets the component to the left (or above) the divider.
void
JComponent.
setNextFocusableComponent
(
Component
aComponent)
Deprecated.
As of 1.4, replaced by
FocusTraversalPolicy
void
JLayeredPane.
setPosition
(
Component
c,
 int position)
Moves the component to
position
within its current layer,
 where 0 is the topmost position within the layer and -1 is the bottommost
 position.
void
JSplitPane.
setRightComponent
(
Component
comp)
Sets the component to the right (or below) the divider.
void
JScrollPane.
setRowHeaderView
(
Component
view)
Creates a row-header viewport if necessary, sets
 its view and then adds the row-header viewport
 to the scrollpane.
void
JMenuBar.
setSelected
(
Component
sel)
Sets the currently selected component, producing a
 a change to the selection model.
void
JPopupMenu.
setSelected
(
Component
sel)
Sets the currently selected component,  This will result
 in a change to the selection model.
void
JTabbedPane.
setSelectedComponent
(
Component
c)
Sets the selected component for this tabbedpane.
void
JTabbedPane.
setTabComponentAt
(int index,
Component
component)
Sets the component that is responsible for rendering the
 title for the specified tab.
void
JSplitPane.
setTopComponent
(
Component
comp)
Sets the component above, or to the left of the divider.
void
JViewport.
setView
(
Component
view)
Sets the
JViewport
's one lightweight child
 (
view
), which can be
null
.
void
JScrollPane.
setViewportView
(
Component
view)
Creates a viewport if necessary and then sets its view.
void
JPopupMenu.
show
(
Component
invoker,
 int x,
 int y)
Displays the popup menu at the position x,y in the coordinate
 space of the component invoker.
static int
JOptionPane.
showConfirmDialog
(
Component
parentComponent,
Object
message)
Brings up a dialog with the options
Yes
,
No
and
Cancel
; with the
 title,
Select an Option
.
static int
JOptionPane.
showConfirmDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType)
Brings up a dialog where the number of choices is determined
 by the
optionType
parameter.
static int
JOptionPane.
showConfirmDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType,
 int messageType)
Brings up a dialog where the number of choices is determined
 by the
optionType
parameter, where the
messageType
parameter determines the icon to display.
static int
JOptionPane.
showConfirmDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType,
 int messageType,
Icon
icon)
Brings up a dialog with a specified icon, where the number of
 choices is determined by the
optionType
parameter.
static
Color
JColorChooser.
showDialog
(
Component
component,
String
title,
Color
initialColor)
Shows a modal color-chooser dialog and blocks until the
 dialog is hidden.
static
Color
JColorChooser.
showDialog
(
Component
component,
String
title,
Color
initialColor,
 boolean colorTransparencySelectionEnabled)
Shows a modal color-chooser dialog and blocks until the
 dialog is hidden.
int
JFileChooser.
showDialog
(
Component
parent,
String
approveButtonText)
Pops a custom file chooser dialog with a custom approve button.
static
String
JOptionPane.
showInputDialog
(
Component
parentComponent,
Object
message)
Shows a question-message dialog requesting input from the user
 parented to
parentComponent
.
static
String
JOptionPane.
showInputDialog
(
Component
parentComponent,
Object
message,
Object
initialSelectionValue)
Shows a question-message dialog requesting input from the user and
 parented to
parentComponent
.
static
String
JOptionPane.
showInputDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType)
Shows a dialog requesting input from the user parented to
parentComponent
with the dialog having the title
title
and message type
messageType
.
static
Object
JOptionPane.
showInputDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType,
Icon
icon,
Object
[] selectionValues,
Object
initialSelectionValue)
Prompts the user for input in a blocking dialog where the
 initial selection, possible selections, and all other options can
 be specified.
static int
JOptionPane.
showInternalConfirmDialog
(
Component
parentComponent,
Object
message)
Brings up an internal dialog panel with the options
Yes
,
No
and
Cancel
; with the title,
Select an Option
.
static int
JOptionPane.
showInternalConfirmDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType)
Brings up a internal dialog panel where the number of choices
 is determined by the
optionType
parameter.
static int
JOptionPane.
showInternalConfirmDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType,
 int messageType)
Brings up an internal dialog panel where the number of choices
 is determined by the
optionType
parameter, where
 the
messageType
parameter determines the icon to display.
static int
JOptionPane.
showInternalConfirmDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType,
 int messageType,
Icon
icon)
Brings up an internal dialog panel with a specified icon, where
 the number of choices is determined by the
optionType
parameter.
static
String
JOptionPane.
showInternalInputDialog
(
Component
parentComponent,
Object
message)
Shows an internal question-message dialog requesting input from
 the user parented to
parentComponent
.
static
String
JOptionPane.
showInternalInputDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType)
Shows an internal dialog requesting input from the user parented
 to
parentComponent
with the dialog having the title
title
and message type
messageType
.
static
Object
JOptionPane.
showInternalInputDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType,
Icon
icon,
Object
[] selectionValues,
Object
initialSelectionValue)
Prompts the user for input in a blocking internal dialog where
 the initial selection, possible selections, and all other
 options can be specified.
static void
JOptionPane.
showInternalMessageDialog
(
Component
parentComponent,
Object
message)
Brings up an internal confirmation dialog panel.
static void
JOptionPane.
showInternalMessageDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType)
Brings up an internal dialog panel that displays a message
 using a default icon determined by the
messageType
parameter.
static void
JOptionPane.
showInternalMessageDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType,
Icon
icon)
Brings up an internal dialog panel displaying a message,
 specifying all parameters.
static int
JOptionPane.
showInternalOptionDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType,
 int messageType,
Icon
icon,
Object
[] options,
Object
initialValue)
Brings up an internal dialog panel with a specified icon, where
 the initial choice is determined by the
initialValue
parameter and the number of choices is determined by the
optionType
parameter.
static void
JOptionPane.
showMessageDialog
(
Component
parentComponent,
Object
message)
Brings up an information-message dialog titled "Message".
static void
JOptionPane.
showMessageDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType)
Brings up a dialog that displays a message using a default
 icon determined by the
messageType
parameter.
static void
JOptionPane.
showMessageDialog
(
Component
parentComponent,
Object
message,
String
title,
 int messageType,
Icon
icon)
Brings up a dialog displaying a message, specifying all parameters.
int
JFileChooser.
showOpenDialog
(
Component
parent)
Pops up an "Open File" file chooser dialog.
static int
JOptionPane.
showOptionDialog
(
Component
parentComponent,
Object
message,
String
title,
 int optionType,
 int messageType,
Icon
icon,
Object
[] options,
Object
initialValue)
Brings up a dialog with a specified icon, where the initial
 choice is determined by the
initialValue
parameter and
 the number of choices is determined by the
optionType
parameter.
int
JFileChooser.
showSaveDialog
(
Component
parent)
Pops up a "Save File" file chooser dialog.
static void
SwingUtilities.
updateComponentTreeUI
(
Component
c)
A simple minded look and feel change: ask each node in the tree
 to
updateUI()
-- that is, to initialize its UI property
 with the current look and feel.
static
Spring
Spring.
width
(
Component
c)
Returns a spring whose
minimum
,
preferred
,
maximum
and
value
properties are defined by the widths of the
minimumSize
,
preferredSize
,
maximumSize
and
size
properties
 of the supplied component.
static
Window
SwingUtilities.
windowForComponent
(
Component
c)
Returns the first
Window
ancestor of
c
, or
null
if
c
is not contained inside a
Window
.
Method parameters in
javax.swing
with type arguments of type
Component
Modifier and Type
Method
Description
protected void
SortingFocusTraversalPolicy.
setComparator
(
Comparator
<? super
Component
> comparator)
Sets the Comparator which will be used to sort the Components in a
 focus traversal cycle.
Constructors in
javax.swing
with parameters of type
Component
Modifier
Constructor
Description
Constraints
(
Component
c)
Creates a
Constraints
object with
 suitable
x
,
y
,
width
and
height
springs for component,
c
.
JScrollPane
(
Component
view)
Creates a
JScrollPane
that displays the
 contents of the specified
 component, where both horizontal and vertical scrollbars appear
 whenever the component's contents are larger than the view.
JScrollPane
(
Component
view,
 int vsbPolicy,
 int hsbPolicy)
Creates a
JScrollPane
that displays the view
 component in a viewport
 whose view position can be controlled with a pair of scrollbars.
JSplitPane
(int newOrientation,
 boolean newContinuousLayout,
Component
newLeftComponent,
Component
newRightComponent)
Creates a new
JSplitPane
with the specified
 orientation and
 redrawing style, and with the specified components.
JSplitPane
(int newOrientation,
Component
newLeftComponent,
Component
newRightComponent)
Creates a new
JSplitPane
with the specified
 orientation and the specified components.
protected
Popup
(
Component
owner,
Component
contents,
 int x,
 int y)
Creates a
Popup
for the Component
owner
containing the Component
contents
.
ProgressMonitor
(
Component
parentComponent,
Object
message,
String
note,
 int min,
 int max)
Constructs a graphic object that shows progress, typically by filling
 in a rectangular bar as the process nears completion.
ProgressMonitorInputStream
(
Component
parentComponent,
Object
message,
InputStream
in)
Constructs an object to monitor the progress of an input stream.
TransferSupport
(
Component
component,
Transferable
transferable)
Create a
TransferSupport
with
isDrop()
false
for the given component and
Transferable
.
Constructor parameters in
javax.swing
with type arguments of type
Component
Modifier
Constructor
Description
SortingFocusTraversalPolicy
(
Comparator
<? super
Component
> comparator)
Constructs a SortingFocusTraversalPolicy with the specified Comparator.
Uses of
Component
in
javax.swing.border
Methods in
javax.swing.border
with parameters of type
Component
Modifier and Type
Method
Description
int
AbstractBorder.
getBaseline
(
Component
c,
 int width,
 int height)
Returns the baseline.
int
TitledBorder.
getBaseline
(
Component
c,
 int width,
 int height)
Returns the baseline.
Component.BaselineResizeBehavior
AbstractBorder.
getBaselineResizeBehavior
(
Component
c)
Returns an enum indicating how the baseline of a component
 changes as the size changes.
Component.BaselineResizeBehavior
TitledBorder.
getBaselineResizeBehavior
(
Component
c)
Returns an enum indicating how the baseline of the border
 changes as the size changes.
Insets
AbstractBorder.
getBorderInsets
(
Component
c)
This default implementation returns a new
Insets
object
 that is initialized by the
AbstractBorder.getBorderInsets(Component,Insets)
method.
Insets
AbstractBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitializes the insets parameter with this Border's current Insets.
Insets
BevelBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitialize the insets parameter with this Border's current Insets.
Insets
Border.
getBorderInsets
(
Component
c)
Returns the insets of the border.
Insets
CompoundBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitialize the insets parameter with this Border's current Insets.
Insets
EmptyBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitialize the insets parameter with this Border's current Insets.
Insets
EtchedBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitialize the insets parameter with this Border's current Insets.
Insets
LineBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitialize the insets parameter with this Border's current Insets.
Insets
MatteBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitialize the insets parameter with this Border's current Insets.
Insets
SoftBevelBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitialize the insets parameter with this Border's current Insets.
Insets
StrokeBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitializes the
insets
parameter
 with this border's current insets.
Insets
TitledBorder.
getBorderInsets
(
Component
c,
Insets
insets)
Reinitialize the insets parameter with this Border's current Insets.
protected
Font
TitledBorder.
getFont
(
Component
c)
Returns default font of the titled border.
Color
EtchedBorder.
getHighlightColor
(
Component
c)
Returns the highlight color of the etched border
 when rendered on the specified component.
Color
BevelBorder.
getHighlightInnerColor
(
Component
c)
Returns the inner highlight color of the bevel border
 when rendered on the specified component.
Color
BevelBorder.
getHighlightOuterColor
(
Component
c)
Returns the outer highlight color of the bevel border
 when rendered on the specified component.
Rectangle
AbstractBorder.
getInteriorRectangle
(
Component
c,
 int x,
 int y,
 int width,
 int height)
This convenience method calls the static method.
static
Rectangle
AbstractBorder.
getInteriorRectangle
(
Component
c,
Border
b,
 int x,
 int y,
 int width,
 int height)
Returns a rectangle using the arguments minus the
 insets of the border.
Dimension
TitledBorder.
getMinimumSize
(
Component
c)
Returns the minimum dimensions this border requires
 in order to fully display the border and title.
Color
EtchedBorder.
getShadowColor
(
Component
c)
Returns the shadow color of the etched border
 when rendered on the specified component.
Color
BevelBorder.
getShadowInnerColor
(
Component
c)
Returns the inner shadow color of the bevel border
 when rendered on the specified component.
Color
BevelBorder.
getShadowOuterColor
(
Component
c)
Returns the outer shadow color of the bevel border
 when rendered on the specified component.
void
AbstractBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
This default implementation does no painting.
void
BevelBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the border for the specified component with the specified
 position and size.
void
Border.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the border for the specified component with the specified
 position and size.
void
CompoundBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the compound border by painting the outside border
 with the specified position and size and then painting the
 inside border at the specified position and size offset by
 the insets of the outside border.
void
EmptyBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Does no drawing by default.
void
EtchedBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the border for the specified component with the
 specified position and size.
void
LineBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the border for the specified component with the
 specified position and size.
void
MatteBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the matte border.
void
SoftBevelBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the border for the specified component with the specified
 position and size.
void
StrokeBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the border for the specified component
 with the specified position and size.
void
TitledBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints the border for the specified component with the
 specified position and size.
protected void
BevelBorder.
paintLoweredBevel
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints a lowered bevel for the specified component with the specified
 position and size.
protected void
BevelBorder.
paintRaisedBevel
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
Paints a raised bevel for the specified component with the specified
 position and size.
Uses of
Component
in
javax.swing.colorchooser
Subclasses of
Component
in
javax.swing.colorchooser
Modifier and Type
Class
Description
class
AbstractColorChooserPanel
This is the abstract superclass for color choosers.
Uses of
Component
in
javax.swing.event
Constructors in
javax.swing.event
with parameters of type
Component
Modifier
Constructor
Description
MenuDragMouseEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int clickCount,
 boolean popupTrigger,
MenuElement
[] p,
MenuSelectionManager
m)
Constructs a MenuDragMouseEvent object.
MenuDragMouseEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int x,
 int y,
 int xAbs,
 int yAbs,
 int clickCount,
 boolean popupTrigger,
MenuElement
[] p,
MenuSelectionManager
m)
Constructs a MenuDragMouseEvent object.
MenuKeyEvent
(
Component
source,
 int id,
 long when,
 int modifiers,
 int keyCode,
 char keyChar,
MenuElement
[] p,
MenuSelectionManager
m)
Constructs a MenuKeyEvent object.
Uses of
Component
in
javax.swing.plaf
Classes in
javax.swing.plaf
with type parameters of type
Component
Modifier and Type
Class
Description
class
LayerUI
<V extends
Component
>
The base class for all
JLayer
's UI delegates.
Methods in
javax.swing.plaf
with parameters of type
Component
Modifier and Type
Method
Description
Insets
BorderUIResource.
getBorderInsets
(
Component
c)
void
BorderUIResource.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
void
IconUIResource.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
Uses of
Component
in
javax.swing.plaf.basic
Subclasses of
Component
in
javax.swing.plaf.basic
Modifier and Type
Class
Description
class
BasicArrowButton
JButton object that draws a scaled Arrow in one of the cardinal directions.
class
BasicComboBoxRenderer
ComboBox renderer
static class
BasicComboBoxRenderer.UIResource
A subclass of BasicComboBoxRenderer that implements UIResource.
class
BasicComboPopup
This is a basic implementation of the
ComboPopup
interface.
class
BasicInternalFrameTitlePane
The class that manages a basic title bar
class
BasicInternalFrameTitlePane.SystemMenuBar
This class should be treated as a "protected" inner class.
class
BasicSplitPaneDivider
Divider used by BasicSplitPaneUI.
protected class
BasicToolBarUI.DragWindow
The window which appears during dragging the
JToolBar
.
Fields in
javax.swing.plaf.basic
declared as
Component
Modifier and Type
Field
Description
protected
Component
[]
BasicSplitPaneUI.BasicHorizontalLayoutManager.
components
The components.
protected
Component
BasicTreeUI.MouseInputHandler.
destination
Destination that receives all events.
protected
Component
BasicTreeUI.
editingComponent
When editing, this will be the Component that is doing the actual
 editing.
protected
Component
BasicComboBoxUI.
editor
The Component that the
ComboBoxEditor
uses for editing.
protected
Component
BasicSplitPaneDivider.
hiddenDivider
Divider that is used for noncontinuous layout mode.
protected
Component
BasicOptionPaneUI.
initialFocusComponent
Component to receive focus when messaged with selectInitialValue.
protected
Component
BasicSplitPaneUI.
nonContinuousLayoutDivider
Instance for the shadow of the divider when non continuous layout
 is being used.
protected
Component
BasicTreeUI.MouseInputHandler.
source
Source that events are coming from.
Component
BasicMenuUI.ChangeHandler.
wasFocused
The component that was focused.
Methods in
javax.swing.plaf.basic
that return
Component
Modifier and Type
Method
Description
protected
Component
BasicSplitPaneUI.
createDefaultNonContinuousLayoutDivider
()
Returns the default non continuous layout divider, which is an
 instance of
Canvas
that fills in the background with dark gray.
protected
Component
BasicSpinnerUI.
createNextButton
()
Creates an increment button, i.e. component that replaces the spinner
 value with the object returned by
spinner.getNextValue
.
protected
Component
BasicSpinnerUI.
createPreviousButton
()
Creates a decrement button, i.e. component that replaces the spinner
 value with the object returned by
spinner.getPreviousValue
.
Component
BasicComboBoxEditor.
getEditorComponent
()
protected
Component
BasicSliderUI.
getHighestValueLabel
()
Returns the label that corresponds to the lowest slider value in the
 label table.
Component
BasicComboBoxRenderer.
getListCellRendererComponent
(
JList
<?> list,
Object
value,
 int index,
 boolean isSelected,
 boolean cellHasFocus)
protected
Component
BasicSliderUI.
getLowestValueLabel
()
Returns the label that corresponds to the highest slider value in the
 label table.
Component
BasicSplitPaneUI.
getNonContinuousLayoutDivider
()
Returns the divider to use when the
JSplitPane
is configured to
 not continuously layout.
protected
Component
BasicTabbedPaneUI.
getVisibleComponent
()
Returns the visible component.
Methods in
javax.swing.plaf.basic
with parameters of type
Component
Modifier and Type
Method
Description
void
BasicComboBoxUI.ComboBoxLayoutManager.
addLayoutComponent
(
String
name,
Component
comp)
void
BasicInternalFrameTitlePane.TitlePaneLayout.
addLayoutComponent
(
String
name,
Component
c)
void
BasicInternalFrameUI.InternalFrameLayout.
addLayoutComponent
(
String
name,
Component
c)
If the layout manager uses a per-component string,
 adds the component
comp
to the layout,
 associating it
 with the string specified by
name
.
void
BasicOptionPaneUI.ButtonAreaLayout.
addLayoutComponent
(
String
string,
Component
comp)
void
BasicScrollBarUI.
addLayoutComponent
(
String
name,
Component
child)
void
BasicSplitPaneDivider.DividerLayout.
addLayoutComponent
(
String
string,
Component
c)
void
BasicSplitPaneUI.BasicHorizontalLayoutManager.
addLayoutComponent
(
Component
comp,
Object
constraints)
Adds the specified component to the layout, using the specified
 constraint object.
void
BasicSplitPaneUI.BasicHorizontalLayoutManager.
addLayoutComponent
(
String
place,
Component
component)
Adds the component at place.
void
BasicTabbedPaneUI.TabbedPaneLayout.
addLayoutComponent
(
String
name,
Component
comp)
boolean
BasicToolBarUI.
canDock
(
Component
c,
Point
p)
Returns
true
if the
JToolBar
can dock at the given position.
protected void
BasicTreeUI.
drawCentered
(
Component
c,
Graphics
graphics,
Icon
icon,
 int x,
 int y)
Draws the
icon
centered at (x,y).
Insets
BasicBorders.SplitPaneBorder.
getBorderInsets
(
Component
c)
protected int
BasicSplitPaneUI.BasicHorizontalLayoutManager.
getPreferredSizeOfComponent
(
Component
c)
Returns the width of the passed in Components preferred size.
protected
Dimension
BasicComboBoxUI.
getSizeForComponent
(
Component
comp)
Returns the size a component would have if used as a cell renderer.
protected int
BasicSplitPaneUI.BasicHorizontalLayoutManager.
getSizeOfComponent
(
Component
c)
Returns the width of the passed in component.
protected void
BasicSpinnerUI.
installNextButtonListeners
(
Component
c)
Installs the necessary listeners on the next button,
c
,
 to update the
JSpinner
in response to a user gesture.
protected void
BasicSpinnerUI.
installPreviousButtonListeners
(
Component
c)
Installs the necessary listeners on the previous button,
c
,
 to update the
JSpinner
in response to a user gesture.
void
BasicBorders.SplitPaneBorder.
paintBorder
(
Component
c,
Graphics
g,
 int x,
 int y,
 int width,
 int height)
protected void
BasicSliderUI.
paintHorizontalLabel
(
Graphics
g,
 int value,
Component
label)
Called for every label in the label table.
protected void
BasicSliderUI.
paintVerticalLabel
(
Graphics
g,
 int value,
Component
label)
Called for every label in the label table.
void
BasicComboBoxUI.ComboBoxLayoutManager.
removeLayoutComponent
(
Component
comp)
void
BasicInternalFrameTitlePane.TitlePaneLayout.
removeLayoutComponent
(
Component
c)
void
BasicInternalFrameUI.InternalFrameLayout.
removeLayoutComponent
(
Component
c)
Removes the specified component from the layout.
void
BasicOptionPaneUI.ButtonAreaLayout.
removeLayoutComponent
(
Component
c)
void
BasicScrollBarUI.
removeLayoutComponent
(
Component
child)
void
BasicSplitPaneDivider.DividerLayout.
removeLayoutComponent
(
Component
c)
void
BasicSplitPaneUI.BasicHorizontalLayoutManager.
removeLayoutComponent
(
Component
component)
Removes the specified component from our knowledge.
void
BasicTabbedPaneUI.TabbedPaneLayout.
removeLayoutComponent
(
Component
comp)
protected void
BasicToolBarUI.
setBorderToNonRollover
(
Component
c)
Sets the border of the component to have a non-rollover border which
 was created by the
BasicToolBarUI.createNonRolloverBorder()
method.
protected void
BasicToolBarUI.
setBorderToNormal
(
Component
c)
Sets the border of the component to have a normal border.
protected void
BasicToolBarUI.
setBorderToRollover
(
Component
c)
Sets the border of the component to have a rollover border which
 was created by the
BasicToolBarUI.createRolloverBorder()
method.
protected void
BasicSplitPaneUI.BasicHorizontalLayoutManager.
setComponentToSize
(
Component
c,
 int size,
 int location,
Insets
insets,
Dimension
containerSize)
Sets the width of the component
c
to be
size
, placing its
 x location at
location
, y to the
insets.top
and height
 to the
containerSize.height
less the top and bottom insets.
protected void
BasicSplitPaneUI.
setNonContinuousLayoutDivider
(
Component
newDivider)
Sets the divider to use when the
JSplitPane
is configured to
 not continuously layout.
protected void
BasicSplitPaneUI.
setNonContinuousLayoutDivider
(
Component
newDivider,
 boolean rememberSizes)
Sets the divider to use.
protected void
BasicTabbedPaneUI.
setVisibleComponent
(
Component
component)
Sets the visible component.
Constructors in
javax.swing.plaf.basic
with parameters of type
Component
Modifier
Constructor
Description
MouseInputHandler
(
Component
source,
Component
destination,
MouseEvent
event)
Constructs a new instance of
MouseInputHandler
.
Uses of
Component
in
javax.swing.plaf.metal
Subclasses of
Component
in
javax.swing.plaf.metal
Modifier and Type
Class
Description
class
MetalComboBoxButton
JButton subclass to help out MetalComboBoxUI
class
MetalComboBoxUI.MetalComboPopup
Deprecated.
As of Java 2 platform v1.4.
protected class
MetalFileChooserUI.FileRenderer
Deprecated.
As of JDK version 9.
class
MetalFileChooserUI.FilterComboBoxRenderer
Render different type sizes and styles.
class
MetalInternalFrameTitlePane
Class that manages a JLF title bar
class
MetalScrollButton
JButton object for Metal scrollbar arrows.
Methods in
javax.swing.plaf.metal
with parameters of type
Component
Modifier and Type
Method
Description
protected void
MetalCheckBoxIcon.
drawCheck
(
Component
c,
Graphics
g,
 int x,
 int y)
Paints
MetalCheckBoxIcon
.
void
MetalCheckBoxIcon.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
void
MetalComboBoxIcon.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
Paints the horizontal bars for the
void
MetalIconFactory.FileIcon16.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
void
MetalIconFactory.FolderIcon16.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
void
MetalIconFactory.PaletteCloseIcon.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
void
MetalIconFactory.TreeControlIcon.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
void
MetalIconFactory.TreeControlIcon.
paintMe
(
Component
c,
Graphics
g,
 int x,
 int y)
Paints the
TreeControlIcon
.
void
MetalLookAndFeel.
provideErrorFeedback
(
Component
component)
Invoked when the user attempts an invalid operation,
 such as pasting into an uneditable
JTextField
that has focus.
Uses of
Component
in
javax.swing.plaf.synth
Methods in
javax.swing.plaf.synth
with parameters of type
Component
Modifier and Type
Method
Description
default void
SynthIcon.
paintIcon
(
Component
c,
Graphics
g,
 int x,
 int y)
protected void
SynthToolBarUI.
setBorderToNonRollover
(
Component
c)
This implementation does nothing, because the
rollover
property of the
JToolBar
class is not used
 in the Synth Look and Feel.
protected void
SynthToolBarUI.
setBorderToNormal
(
Component
c)
This implementation does nothing, because the
rollover
property of the
JToolBar
class is not used
 in the Synth Look and Feel.
protected void
SynthToolBarUI.
setBorderToRollover
(
Component
c)
This implementation does nothing, because the
rollover
property of the
JToolBar
class is not used
 in the Synth Look and Feel.
static void
SynthLookAndFeel.
updateStyles
(
Component
c)
Updates the style associated with
c
, and all its children.
Uses of
Component
in
javax.swing.table
Subclasses of
Component
in
javax.swing.table
Modifier and Type
Class
Description
class
DefaultTableCellRenderer
The standard class for rendering (displaying) individual cells
 in a
JTable
.
static class
DefaultTableCellRenderer.UIResource
A subclass of
DefaultTableCellRenderer
that
 implements
UIResource
.
class
JTableHeader
This is the object which manages the header of the
JTable
.
Methods in
javax.swing.table
that return
Component
Modifier and Type
Method
Description
Component
TableCellEditor.
getTableCellEditorComponent
(
JTable
table,
Object
value,
 boolean isSelected,
 int row,
 int column)
Sets an initial
value
for the editor.
Component
DefaultTableCellRenderer.
getTableCellRendererComponent
(
JTable
table,
Object
value,
 boolean isSelected,
 boolean hasFocus,
 int row,
 int column)
Returns the default table cell renderer.
Component
TableCellRenderer.
getTableCellRendererComponent
(
JTable
table,
Object
value,
 boolean isSelected,
 boolean hasFocus,
 int row,
 int column)
Returns the component used for drawing the cell.
Uses of
Component
in
javax.swing.text
Subclasses of
Component
in
javax.swing.text
Modifier and Type
Class
Description
class
JTextComponent
JTextComponent
is the base class for swing text
 components.
Methods in
javax.swing.text
that return
Component
Modifier and Type
Method
Description
protected
Component
ComponentView.
createComponent
()
Create the component that is associated with
 this view.
final
Component
ComponentView.
getComponent
()
Fetch the component associated with the view.
static
Component
StyleConstants.
getComponent
(
AttributeSet
a)
Gets the component setting from the attribute list.
Methods in
javax.swing.text
with parameters of type
Component
Modifier and Type
Method
Description
protected void
PlainView.
damageLineRange
(int line0,
 int line1,
Shape
a,
Component
host)
Repaint the given line range.
static void
StyleConstants.
setComponent
(
MutableAttributeSet
a,
Component
c)
Sets the component attribute.
Uses of
Component
in
javax.swing.text.html
Methods in
javax.swing.text.html
that return
Component
Modifier and Type
Method
Description
protected
Component
FormView.
createComponent
()
Create the component.
protected
Component
ObjectView.
createComponent
()
Create the component.
Uses of
Component
in
javax.swing.tree
Subclasses of
Component
in
javax.swing.tree
Modifier and Type
Class
Description
class
DefaultTreeCellEditor.DefaultTextField
TextField
used when no editor is supplied.
class
DefaultTreeCellEditor.EditorContainer
Container responsible for placing the
editingComponent
.
class
DefaultTreeCellRenderer
Displays an entry in a tree.
Fields in
javax.swing.tree
declared as
Component
Modifier and Type
Field
Description
protected
Component
DefaultTreeCellEditor.
editingComponent
Component used in editing, obtained from the
editingContainer
.
Methods in
javax.swing.tree
that return
Component
Modifier and Type
Method
Description
Component
DefaultTreeCellEditor.
getTreeCellEditorComponent
(
JTree
tree,
Object
value,
 boolean isSelected,
 boolean expanded,
 boolean leaf,
 int row)
Configures the editor.
Component
TreeCellEditor.
getTreeCellEditorComponent
(
JTree
tree,
Object
value,
 boolean isSelected,
 boolean expanded,
 boolean leaf,
 int row)
Sets an initial
value
for the editor.
Component
DefaultTreeCellRenderer.
getTreeCellRendererComponent
(
JTree
tree,
Object
value,
 boolean sel,
 boolean expanded,
 boolean leaf,
 int row,
 boolean hasFocus)
Configures the renderer based on the passed in components.
Component
TreeCellRenderer.
getTreeCellRendererComponent
(
JTree
tree,
Object
value,
 boolean selected,
 boolean expanded,
 boolean leaf,
 int row,
 boolean hasFocus)
Sets the value of the current tree cell to
value
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.