Uses of Class java.awt.Graphics2D (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.Graphics2D
Packages that use
Graphics2D
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.font
Provides classes and interface relating to fonts.
java.awt.image
Provides classes for creating and modifying images.
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.nimbus
Provides user interface objects built according to the cross-platform Nimbus
 look and feel.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
Uses of
Graphics2D
in
java.awt
Methods in
java.awt
that return
Graphics2D
Modifier and Type
Method
Description
abstract
Graphics2D
GraphicsEnvironment.
createGraphics
(
BufferedImage
img)
Returns a
Graphics2D
object for rendering into the
 specified
BufferedImage
.
Graphics2D
SplashScreen.
createGraphics
()
Creates a graphics context (as a
Graphics2D
object) for the splash
 screen overlay image, which allows you to draw over the splash screen.
Uses of
Graphics2D
in
java.awt.font
Methods in
java.awt.font
with parameters of type
Graphics2D
Modifier and Type
Method
Description
abstract void
GraphicAttribute.
draw
(
Graphics2D
graphics,
 float x,
 float y)
Renders this
GraphicAttribute
at the specified
 location.
void
ImageGraphicAttribute.
draw
(
Graphics2D
graphics,
 float x,
 float y)
Renders this
GraphicAttribute
at the specified
 location.
void
ShapeGraphicAttribute.
draw
(
Graphics2D
graphics,
 float x,
 float y)
Renders this
GraphicAttribute
at the specified
 location.
void
TextLayout.
draw
(
Graphics2D
g2,
 float x,
 float y)
Renders this
TextLayout
at the specified location in
 the specified
Graphics2D
context.
Uses of
Graphics2D
in
java.awt.image
Methods in
java.awt.image
that return
Graphics2D
Modifier and Type
Method
Description
Graphics2D
BufferedImage.
createGraphics
()
Creates a
Graphics2D
, which can be used to draw into
 this
BufferedImage
.
abstract
Graphics2D
VolatileImage.
createGraphics
()
Creates a
Graphics2D
, which can be used to draw into
 this
VolatileImage
.
Uses of
Graphics2D
in
javax.swing
Methods in
javax.swing
with parameters of type
Graphics2D
Modifier and Type
Method
Description
void
Painter.
paint
(
Graphics2D
g,
T
object,
 int width,
 int height)
Renders to the given
Graphics2D
object.
Uses of
Graphics2D
in
javax.swing.plaf.basic
Methods in
javax.swing.plaf.basic
with parameters of type
Graphics2D
Modifier and Type
Method
Description
static void
BasicGraphicsUtils.
drawString
(
JComponent
c,
Graphics2D
g,
String
string,
 float x,
 float y)
Draws the given string at the specified location using text properties
 and anti-aliasing hints from the provided component.
static void
BasicGraphicsUtils.
drawStringUnderlineCharAt
(
JComponent
c,
Graphics2D
g,
String
string,
 int underlinedIndex,
 float x,
 float y)
Draws the given string at the specified location underlining
 the specified character.
Uses of
Graphics2D
in
javax.swing.plaf.nimbus
Methods in
javax.swing.plaf.nimbus
with parameters of type
Graphics2D
Modifier and Type
Method
Description
protected void
AbstractRegionPainter.
configureGraphics
(
Graphics2D
g)
Configures the given Graphics2D.
protected abstract void
AbstractRegionPainter.
doPaint
(
Graphics2D
g,
JComponent
c,
 int width,
 int height,
Object
[] extendedCacheKeys)
Actually performs the painting operation.
final void
AbstractRegionPainter.
paint
(
Graphics2D
g,
JComponent
c,
 int w,
 int h)
Renders to the given
Graphics2D
object.
Uses of
Graphics2D
in
javax.swing.text
Methods in
javax.swing.text
with parameters of type
Graphics2D
Modifier and Type
Method
Description
protected float
PasswordView.
drawEchoCharacter
(
Graphics2D
g,
 float x,
 float y,
 char c)
Renders the echo character, or whatever graphic should be used
 to display the password characters.
protected void
PlainView.
drawLine
(int lineIndex,
Graphics2D
g,
 float x,
 float y)
Renders a line of text, suppressing whitespace at the end
 and expanding any tabs.
protected void
WrappedPlainView.
drawLine
(int p0,
 int p1,
Graphics2D
g,
 float x,
 float y)
Renders a line of text, suppressing whitespace at the end
 and expanding any tabs.
protected float
PlainView.
drawSelectedText
(
Graphics2D
g,
 float x,
 float y,
 int p0,
 int p1)
Renders the given range in the model as selected text.
protected float
WrappedPlainView.
drawSelectedText
(
Graphics2D
g,
 float x,
 float y,
 int p0,
 int p1)
Renders the given range in the model as selected text.
static final float
Utilities.
drawTabbedText
(
Segment
s,
 float x,
 float y,
Graphics2D
g,
TabExpander
e,
 int startOffset)
Draws the given text, expanding any tabs that are contained
 using the given tab expansion technique.
protected float
PlainView.
drawUnselectedText
(
Graphics2D
g,
 float x,
 float y,
 int p0,
 int p1)
Renders the given range in the model as normal unselected
 text.
protected float
WrappedPlainView.
drawUnselectedText
(
Graphics2D
g,
 float x,
 float y,
 int p0,
 int p1)
Renders the given range in the model as normal unselected
 text.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.