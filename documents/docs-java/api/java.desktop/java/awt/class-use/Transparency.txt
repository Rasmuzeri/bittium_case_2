Uses of Interface java.awt.Transparency (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
java.awt.Transparency
Packages that use
Transparency
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.image
Provides classes for creating and modifying images.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
Uses of
Transparency
in
java.awt
Subinterfaces of
Transparency
in
java.awt
Modifier and Type
Interface
Description
interface
Paint
This
Paint
interface defines how color patterns
 can be generated for
Graphics2D
operations.
Classes in
java.awt
that implement
Transparency
Modifier and Type
Class
Description
class
Color
The
Color
class is used to encapsulate colors in the default
 sRGB color space or colors in arbitrary color spaces identified by a
ColorSpace
.
class
GradientPaint
The
GradientPaint
class provides a way to fill
 a
Shape
with a linear color gradient pattern.
final class
LinearGradientPaint
The
LinearGradientPaint
class provides a way to fill
 a
Shape
with a linear color gradient pattern.
class
MultipleGradientPaint
This is the superclass for Paints which use a multiple color
 gradient to fill in their raster.
final class
RadialGradientPaint
The
RadialGradientPaint
class provides a way to fill a shape with
 a circular radial color gradient pattern.
final class
SystemColor
A class to encapsulate symbolic colors representing the color of
 native GUI objects on a system.
class
TexturePaint
The
TexturePaint
class provides a way to fill a
Shape
with a texture that is specified as
 a
BufferedImage
.
Uses of
Transparency
in
java.awt.image
Classes in
java.awt.image
that implement
Transparency
Modifier and Type
Class
Description
class
BufferedImage
The
BufferedImage
subclass describes an
Image
with an accessible buffer of image data.
class
ColorModel
The
ColorModel
abstract class encapsulates the
 methods for translating a pixel value to color components
 (for example, red, green, and blue) and an alpha component.
class
ComponentColorModel
A
ColorModel
class that works with pixel values that
 represent color and alpha information as separate samples and that
 store each sample in a separate data element.
class
DirectColorModel
The
DirectColorModel
class is a
ColorModel
class that works with pixel values that represent RGB
 color and alpha information as separate samples and that pack all
 samples for a single pixel into a single int, short, or byte quantity.
class
IndexColorModel
The
IndexColorModel
class is a
ColorModel
class that works with pixel values consisting of a
 single sample that is an index into a fixed colormap in the default
 sRGB color space.
class
PackedColorModel
The
PackedColorModel
class is an abstract
ColorModel
class that works with pixel values which represent
 color and alpha information as separate samples and which pack all
 samples for a single pixel into a single int, short, or byte quantity.
class
VolatileImage
VolatileImage is an image which can lose its
 contents at any time due to circumstances beyond the control of the
 application (e.g., situations caused by the operating system or by
 other applications).
Uses of
Transparency
in
javax.swing.plaf
Classes in
javax.swing.plaf
that implement
Transparency
Modifier and Type
Class
Description
class
ColorUIResource
A subclass of Color that implements UIResource.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.