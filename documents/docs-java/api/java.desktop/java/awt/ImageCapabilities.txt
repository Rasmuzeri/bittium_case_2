ImageCapabilities (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
java.awt
Class ImageCapabilities
java.lang.Object
java.awt.ImageCapabilities
All Implemented Interfaces:
Cloneable
public class
ImageCapabilities
extends
Object
implements
Cloneable
Capabilities and properties of images.
Since:
1.4
Constructor Summary
Constructors
Constructor
Description
ImageCapabilities
(boolean accelerated)
Creates a new object for specifying image capabilities.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
Object
clone
()
Creates and returns a copy of this object.
boolean
isAccelerated
()
Returns
true
if the object whose capabilities are
 encapsulated in this
ImageCapabilities
can be or is
 accelerated.
boolean
isTrueVolatile
()
Returns
true
if the
VolatileImage
described by this
ImageCapabilities
can lose
 its surfaces.
Methods declared in class java.lang.
Object
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
ImageCapabilities
public
ImageCapabilities
(boolean accelerated)
Creates a new object for specifying image capabilities.
Parameters:
accelerated
- whether or not an accelerated image is desired
Method Details
isAccelerated
public
boolean
isAccelerated
()
Returns
true
if the object whose capabilities are
 encapsulated in this
ImageCapabilities
can be or is
 accelerated.
Returns:
whether or not an image can be, or is, accelerated.  There are
 various platform-specific ways to accelerate an image, including
 pixmaps, VRAM, AGP.  This is the general acceleration method (as
 opposed to residing in system memory).
isTrueVolatile
public
boolean
isTrueVolatile
()
Returns
true
if the
VolatileImage
described by this
ImageCapabilities
can lose
 its surfaces.
Returns:
whether or not a volatile image is subject to losing its surfaces
 at the whim of the operating system.
clone
public
Object
clone
()
Description copied from class:
Object
Creates and returns a copy of this object.  The precise meaning
 of "copy" may depend on the class of the object. The general
 intent is that, for any object
x
, the expression:
x.clone() != x
will be true, and that the expression:
x.clone().getClass() == x.getClass()
will be
true
, but these are not absolute requirements.
 While it is typically the case that:
x.clone().equals(x)
will be
true
, this is not an absolute requirement.
By convention, the returned object should be obtained by calling
super.clone
.  If a class and all of its superclasses (except
Object
) obey this convention, it will be the case that
x.clone().getClass() == x.getClass()
.
By convention, the object returned by this method should be independent
 of this object (which is being cloned).  To achieve this independence,
 it may be necessary to modify one or more fields of the object returned
 by
super.clone
before returning it.  Typically, this means
 copying any mutable objects that comprise the internal "deep structure"
 of the object being cloned and replacing the references to these
 objects with references to the copies.  If a class contains only
 primitive fields or references to immutable objects, then it is usually
 the case that no fields in the object returned by
super.clone
need to be modified.
Overrides:
clone
in class
Object
Returns:
a copy of this ImageCapabilities object.
See Also:
Cloneable
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.