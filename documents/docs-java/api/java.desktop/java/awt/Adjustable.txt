Adjustable (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr |
Method
Detail:
Field
|
Constr |
Method
SEARCH
Module
java.desktop
Package
java.awt
Interface Adjustable
All Known Implementing Classes:
JScrollBar
,
JScrollPane.ScrollBar
,
Scrollbar
,
ScrollPaneAdjustable
public interface
Adjustable
The interface for objects which have an adjustable numeric value
 contained within a bounded range of values.
Field Summary
Fields
Modifier and Type
Field
Description
static final int
HORIZONTAL
Indicates that the
Adjustable
has horizontal orientation.
static final int
NO_ORIENTATION
Indicates that the
Adjustable
has no orientation.
static final int
VERTICAL
Indicates that the
Adjustable
has vertical orientation.
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
void
addAdjustmentListener
(
AdjustmentListener
l)
Adds a listener to receive adjustment events when the value of
 the adjustable object changes.
int
getBlockIncrement
()
Gets the block value increment for the adjustable object.
int
getMaximum
()
Gets the maximum value of the adjustable object.
int
getMinimum
()
Gets the minimum value of the adjustable object.
int
getOrientation
()
Gets the orientation of the adjustable object.
int
getUnitIncrement
()
Gets the unit value increment for the adjustable object.
int
getValue
()
Gets the current value of the adjustable object.
int
getVisibleAmount
()
Gets the length of the proportional indicator.
void
removeAdjustmentListener
(
AdjustmentListener
l)
Removes an adjustment listener.
void
setBlockIncrement
(int b)
Sets the block value increment for the adjustable object.
void
setMaximum
(int max)
Sets the maximum value of the adjustable object.
void
setMinimum
(int min)
Sets the minimum value of the adjustable object.
void
setUnitIncrement
(int u)
Sets the unit value increment for the adjustable object.
void
setValue
(int v)
Sets the current value of the adjustable object.
void
setVisibleAmount
(int v)
Sets the length of the proportional indicator of the
 adjustable object.
Field Details
HORIZONTAL
@Native
static final
int
HORIZONTAL
Indicates that the
Adjustable
has horizontal orientation.
See Also:
Constant Field Values
VERTICAL
@Native
static final
int
VERTICAL
Indicates that the
Adjustable
has vertical orientation.
See Also:
Constant Field Values
NO_ORIENTATION
@Native
static final
int
NO_ORIENTATION
Indicates that the
Adjustable
has no orientation.
See Also:
Constant Field Values
Method Details
getOrientation
int
getOrientation
()
Gets the orientation of the adjustable object.
Returns:
the orientation of the adjustable object;
   either
HORIZONTAL
,
VERTICAL
,
   or
NO_ORIENTATION
setMinimum
void
setMinimum
(int min)
Sets the minimum value of the adjustable object.
Parameters:
min
- the minimum value
getMinimum
int
getMinimum
()
Gets the minimum value of the adjustable object.
Returns:
the minimum value of the adjustable object
setMaximum
void
setMaximum
(int max)
Sets the maximum value of the adjustable object.
Parameters:
max
- the maximum value
getMaximum
int
getMaximum
()
Gets the maximum value of the adjustable object.
Returns:
the maximum value of the adjustable object
setUnitIncrement
void
setUnitIncrement
(int u)
Sets the unit value increment for the adjustable object.
Parameters:
u
- the unit increment
getUnitIncrement
int
getUnitIncrement
()
Gets the unit value increment for the adjustable object.
Returns:
the unit value increment for the adjustable object
setBlockIncrement
void
setBlockIncrement
(int b)
Sets the block value increment for the adjustable object.
Parameters:
b
- the block increment
getBlockIncrement
int
getBlockIncrement
()
Gets the block value increment for the adjustable object.
Returns:
the block value increment for the adjustable object
setVisibleAmount
void
setVisibleAmount
(int v)
Sets the length of the proportional indicator of the
 adjustable object.
Parameters:
v
- the length of the indicator
getVisibleAmount
int
getVisibleAmount
()
Gets the length of the proportional indicator.
Returns:
the length of the proportional indicator
setValue
void
setValue
(int v)
Sets the current value of the adjustable object. If
 the value supplied is less than
minimum
or greater than
maximum
-
visibleAmount
,
 then one of those values is substituted, as appropriate.
Calling this method does not fire an
AdjustmentEvent
.
Parameters:
v
- the current value, between
minimum
and
maximum
-
visibleAmount
getValue
int
getValue
()
Gets the current value of the adjustable object.
Returns:
the current value of the adjustable object
addAdjustmentListener
void
addAdjustmentListener
(
AdjustmentListener
l)
Adds a listener to receive adjustment events when the value of
 the adjustable object changes.
Parameters:
l
- the listener to receive events
See Also:
AdjustmentEvent
removeAdjustmentListener
void
removeAdjustmentListener
(
AdjustmentListener
l)
Removes an adjustment listener.
Parameters:
l
- the listener being removed
See Also:
AdjustmentEvent
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.