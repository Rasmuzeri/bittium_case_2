ScrollPaneAdjustable (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.desktop
Package
java.awt
Class ScrollPaneAdjustable
java.lang.Object
java.awt.ScrollPaneAdjustable
All Implemented Interfaces:
Adjustable
,
Serializable
public final class
ScrollPaneAdjustable
extends
Object
implements
Adjustable
,
Serializable
This class represents the state of a horizontal or vertical
 scrollbar of a
ScrollPane
.  Objects of this class are
 returned by
ScrollPane
methods.
Since:
1.4
See Also:
Serialized Form
Field Summary
Fields declared in interface java.awt.
Adjustable
HORIZONTAL
,
NO_ORIENTATION
,
VERTICAL
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
addAdjustmentListener
(
AdjustmentListener
l)
Adds the specified adjustment listener to receive adjustment
 events from this
ScrollPaneAdjustable
.
AdjustmentListener
[]
getAdjustmentListeners
()
Returns an array of all the adjustment listeners
 registered on this
ScrollPaneAdjustable
.
int
getBlockIncrement
()
Gets the block value increment for the adjustable object.
int
getMaximum
()
Gets the maximum value of the adjustable object.
int
getMinimum
()
Gets the minimum value of the adjustable object.
int
getOrientation
()
Returns the orientation of this scrollbar.
int
getUnitIncrement
()
Gets the unit value increment for the adjustable object.
int
getValue
()
Gets the current value of the adjustable object.
boolean
getValueIsAdjusting
()
Returns true if the value is in the process of changing as a
 result of actions being taken by the user.
int
getVisibleAmount
()
Gets the length of the proportional indicator.
String
paramString
()
Returns a string representing the state of this scrollbar.
void
removeAdjustmentListener
(
AdjustmentListener
l)
Removes the specified adjustment listener so that it no longer
 receives adjustment events from this
ScrollPaneAdjustable
.
void
setBlockIncrement
(int b)
Sets the block value increment for the adjustable object.
void
setMaximum
(int max)
This method should
NOT
be called by user code.
void
setMinimum
(int min)
This method should
NOT
be called by user code.
void
setUnitIncrement
(int u)
Sets the unit value increment for the adjustable object.
void
setValue
(int v)
Sets the value of this scrollbar to the specified value.
void
setValueIsAdjusting
(boolean b)
Sets the
valueIsAdjusting
property.
void
setVisibleAmount
(int v)
This method should
NOT
be called by user code.
String
toString
()
Returns a string representation of this scrollbar and its values.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Method Details
getOrientation
public
int
getOrientation
()
Returns the orientation of this scrollbar.
Specified by:
getOrientation
in interface
Adjustable
Returns:
the orientation of this scrollbar, either
Adjustable.HORIZONTAL
or
Adjustable.VERTICAL
setMinimum
public
void
setMinimum
(int min)
This method should
NOT
be called by user code.
 This method is public for this class to properly implement
Adjustable
interface.
Specified by:
setMinimum
in interface
Adjustable
Parameters:
min
- the minimum value
Throws:
AWTError
- Always throws an error when called.
getMinimum
public
int
getMinimum
()
Description copied from interface:
Adjustable
Gets the minimum value of the adjustable object.
Specified by:
getMinimum
in interface
Adjustable
Returns:
the minimum value of the adjustable object
setMaximum
public
void
setMaximum
(int max)
This method should
NOT
be called by user code.
 This method is public for this class to properly implement
Adjustable
interface.
Specified by:
setMaximum
in interface
Adjustable
Parameters:
max
- the maximum value
Throws:
AWTError
- Always throws an error when called.
getMaximum
public
int
getMaximum
()
Description copied from interface:
Adjustable
Gets the maximum value of the adjustable object.
Specified by:
getMaximum
in interface
Adjustable
Returns:
the maximum value of the adjustable object
setUnitIncrement
public
void
setUnitIncrement
(int u)
Description copied from interface:
Adjustable
Sets the unit value increment for the adjustable object.
Specified by:
setUnitIncrement
in interface
Adjustable
Parameters:
u
- the unit increment
getUnitIncrement
public
int
getUnitIncrement
()
Description copied from interface:
Adjustable
Gets the unit value increment for the adjustable object.
Specified by:
getUnitIncrement
in interface
Adjustable
Returns:
the unit value increment for the adjustable object
setBlockIncrement
public
void
setBlockIncrement
(int b)
Description copied from interface:
Adjustable
Sets the block value increment for the adjustable object.
Specified by:
setBlockIncrement
in interface
Adjustable
Parameters:
b
- the block increment
getBlockIncrement
public
int
getBlockIncrement
()
Description copied from interface:
Adjustable
Gets the block value increment for the adjustable object.
Specified by:
getBlockIncrement
in interface
Adjustable
Returns:
the block value increment for the adjustable object
setVisibleAmount
public
void
setVisibleAmount
(int v)
This method should
NOT
be called by user code.
 This method is public for this class to properly implement
Adjustable
interface.
Specified by:
setVisibleAmount
in interface
Adjustable
Parameters:
v
- the length of the indicator
Throws:
AWTError
- Always throws an error when called.
getVisibleAmount
public
int
getVisibleAmount
()
Description copied from interface:
Adjustable
Gets the length of the proportional indicator.
Specified by:
getVisibleAmount
in interface
Adjustable
Returns:
the length of the proportional indicator
setValueIsAdjusting
public
void
setValueIsAdjusting
(boolean b)
Sets the
valueIsAdjusting
property.
Parameters:
b
- new adjustment-in-progress status
Since:
1.4
See Also:
getValueIsAdjusting()
getValueIsAdjusting
public
boolean
getValueIsAdjusting
()
Returns true if the value is in the process of changing as a
 result of actions being taken by the user.
Returns:
the value of the
valueIsAdjusting
property
See Also:
setValueIsAdjusting(boolean)
setValue
public
void
setValue
(int v)
Sets the value of this scrollbar to the specified value.
If the value supplied is less than the current minimum or
 greater than the current maximum, then one of those values is
 substituted, as appropriate.
Specified by:
setValue
in interface
Adjustable
Parameters:
v
- the new value of the scrollbar
getValue
public
int
getValue
()
Description copied from interface:
Adjustable
Gets the current value of the adjustable object.
Specified by:
getValue
in interface
Adjustable
Returns:
the current value of the adjustable object
addAdjustmentListener
public
void
addAdjustmentListener
(
AdjustmentListener
l)
Adds the specified adjustment listener to receive adjustment
 events from this
ScrollPaneAdjustable
.
 If
l
is
null
, no exception is thrown
 and no action is performed.
Refer to
AWT Threading Issues
for details on AWT's threading model.
Specified by:
addAdjustmentListener
in interface
Adjustable
Parameters:
l
- the adjustment listener.
See Also:
removeAdjustmentListener(java.awt.event.AdjustmentListener)
getAdjustmentListeners()
AdjustmentListener
AdjustmentEvent
removeAdjustmentListener
public
void
removeAdjustmentListener
(
AdjustmentListener
l)
Removes the specified adjustment listener so that it no longer
 receives adjustment events from this
ScrollPaneAdjustable
.
 If
l
is
null
, no exception is thrown
 and no action is performed.
Refer to
AWT Threading Issues
for details on AWT's threading model.
Specified by:
removeAdjustmentListener
in interface
Adjustable
Parameters:
l
- the adjustment listener.
Since:
1.1
See Also:
addAdjustmentListener(java.awt.event.AdjustmentListener)
getAdjustmentListeners()
AdjustmentListener
AdjustmentEvent
getAdjustmentListeners
public
AdjustmentListener
[]
getAdjustmentListeners
()
Returns an array of all the adjustment listeners
 registered on this
ScrollPaneAdjustable
.
Returns:
all of this
ScrollPaneAdjustable
's
AdjustmentListener
s
         or an empty array if no adjustment
         listeners are currently registered
Since:
1.4
See Also:
addAdjustmentListener(java.awt.event.AdjustmentListener)
removeAdjustmentListener(java.awt.event.AdjustmentListener)
AdjustmentListener
AdjustmentEvent
toString
public
String
toString
()
Returns a string representation of this scrollbar and its values.
Overrides:
toString
in class
Object
Returns:
a string representation of this scrollbar.
paramString
public
String
paramString
()
Returns a string representing the state of this scrollbar.
 This method is intended to be used only for debugging purposes,
 and the content and format of the returned string may vary
 between implementations.  The returned string may be empty but
 may not be
null
.
Returns:
the parameter string of this scrollbar.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.