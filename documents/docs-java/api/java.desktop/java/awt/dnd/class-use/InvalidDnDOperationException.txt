Uses of Class java.awt.dnd.InvalidDnDOperationException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.dnd.InvalidDnDOperationException
Packages that use
InvalidDnDOperationException
Package
Description
java.awt.dnd
Drag and Drop is a direct manipulation gesture found in many Graphical User
 Interface systems that provides a mechanism to transfer information between
 two entities logically associated with presentation elements in the GUI.
Uses of
InvalidDnDOperationException
in
java.awt.dnd
Methods in
java.awt.dnd
that throw
InvalidDnDOperationException
Modifier and Type
Method
Description
void
DropTargetContext.
dropComplete
(boolean success)
This method signals that the drop is completed and
 if it was successful or not.
protected
Transferable
DropTargetContext.
getTransferable
()
get the Transferable (proxy) operand of this operation
void
DragGestureEvent.
startDrag
(
Cursor
dragCursor,
Transferable
transferable)
Starts the drag operation given the
Cursor
for this drag
 operation and the
Transferable
representing the source data
 for this drag operation.
void
DragGestureEvent.
startDrag
(
Cursor
dragCursor,
Transferable
transferable,
DragSourceListener
dsl)
Starts the drag given the initial
Cursor
to display,
 the
Transferable
object,
 and the
DragSourceListener
to use.
void
DragGestureEvent.
startDrag
(
Cursor
dragCursor,
Image
dragImage,
Point
imageOffset,
Transferable
transferable,
DragSourceListener
dsl)
Start the drag given the initial
Cursor
to display,
 a drag
Image
, the offset of
 the
Image
,
 the
Transferable
object, and
 the
DragSourceListener
to use.
void
DragSource.
startDrag
(
DragGestureEvent
trigger,
Cursor
dragCursor,
Transferable
transferable,
DragSourceListener
dsl)
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to
 use,
 the
Transferable
subject data
 of the drag, and the
DragSourceListener
.
void
DragSource.
startDrag
(
DragGestureEvent
trigger,
Cursor
dragCursor,
Transferable
transferable,
DragSourceListener
dsl,
FlavorMap
flavorMap)
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to use,
 the
Transferable
subject data
 of the drag, the
DragSourceListener
,
 and the
FlavorMap
.
void
DragSource.
startDrag
(
DragGestureEvent
trigger,
Cursor
dragCursor,
Image
dragImage,
Point
dragOffset,
Transferable
transferable,
DragSourceListener
dsl)
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to use,
 the
Image
to drag,
 the offset of the
Image
origin
 from the hotspot of the
Cursor
at the instant of the trigger,
 the subject data of the drag, and
 the
DragSourceListener
.
void
DragSource.
startDrag
(
DragGestureEvent
trigger,
Cursor
dragCursor,
Image
dragImage,
Point
imageOffset,
Transferable
transferable,
DragSourceListener
dsl,
FlavorMap
flavorMap)
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to use,
 the
Image
to drag,
 the offset of the
Image
origin
 from the hotspot of the
Cursor
at
 the instant of the trigger,
 the
Transferable
subject data
 of the drag, the
DragSourceListener
,
 and the
FlavorMap
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.