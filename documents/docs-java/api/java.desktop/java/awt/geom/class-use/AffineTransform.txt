Uses of Class java.awt.geom.AffineTransform (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.awt.geom.AffineTransform
Packages that use
AffineTransform
Package
Description
java.awt
Contains all of the classes for creating user interfaces and for painting
 graphics and images.
java.awt.font
Provides classes and interface relating to fonts.
java.awt.geom
Provides the Java 2D classes for defining and performing operations on
 objects related to two-dimensional geometry.
java.awt.image
Provides classes for creating and modifying images.
java.awt.image.renderable
Provides classes and interfaces for producing rendering-independent images.
Uses of
AffineTransform
in
java.awt
Methods in
java.awt
that return
AffineTransform
Modifier and Type
Method
Description
abstract
AffineTransform
GraphicsConfiguration.
getDefaultTransform
()
Returns the default
AffineTransform
for this
GraphicsConfiguration
.
abstract
AffineTransform
GraphicsConfiguration.
getNormalizingTransform
()
Returns an
AffineTransform
that can be concatenated
 with the default
AffineTransform
of a
GraphicsConfiguration
so that 72 units in user
 space equals 1 inch in device space.
AffineTransform
Font.
getTransform
()
Returns a copy of the transform associated with this
Font
.
abstract
AffineTransform
Graphics2D.
getTransform
()
Returns a copy of the current
Transform
in the
Graphics2D
context.
final
AffineTransform
MultipleGradientPaint.
getTransform
()
Returns a copy of the transform applied to the gradient.
Methods in
java.awt
with parameters of type
AffineTransform
Modifier and Type
Method
Description
PaintContext
Color.
createContext
(
ColorModel
cm,
Rectangle
r,
Rectangle2D
r2d,
AffineTransform
xform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a solid color field pattern.
PaintContext
GradientPaint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
xform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a linear color gradient pattern.
PaintContext
LinearGradientPaint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
transform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a linear color gradient pattern.
PaintContext
Paint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
xform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate the color pattern.
PaintContext
RadialGradientPaint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
transform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a circular radial color gradient pattern.
PaintContext
TexturePaint.
createContext
(
ColorModel
cm,
Rectangle
deviceBounds,
Rectangle2D
userBounds,
AffineTransform
xform,
RenderingHints
hints)
Creates and returns a
PaintContext
used to
 generate a tiled image pattern.
Font
Font.
deriveFont
(int style,
AffineTransform
trans)
Creates a new
Font
object by replicating this
Font
object and applying a new style and transform.
Font
Font.
deriveFont
(
AffineTransform
trans)
Creates a new
Font
object by replicating the current
Font
object and applying a new transform to it.
abstract boolean
Graphics2D.
drawImage
(
Image
img,
AffineTransform
xform,
ImageObserver
obs)
Renders an image, applying a transform from image space into user space
 before drawing.
abstract void
Graphics2D.
drawRenderableImage
(
RenderableImage
img,
AffineTransform
xform)
Renders a
RenderableImage
,
 applying a transform from image space into user space before drawing.
abstract void
Graphics2D.
drawRenderedImage
(
RenderedImage
img,
AffineTransform
xform)
Renders a
RenderedImage
,
 applying a transform from image
 space into user space before drawing.
PathIterator
Polygon.
getPathIterator
(
AffineTransform
at)
Returns an iterator object that iterates along the boundary of this
Polygon
and provides access to the geometry
 of the outline of this
Polygon
.
PathIterator
Polygon.
getPathIterator
(
AffineTransform
at,
 double flatness)
Returns an iterator object that iterates along the boundary of
 the
Shape
and provides access to the geometry of the
 outline of the
Shape
.
PathIterator
Shape.
getPathIterator
(
AffineTransform
at)
Returns an iterator object that iterates along the
Shape
boundary and provides access to the geometry of the
Shape
outline.
PathIterator
Shape.
getPathIterator
(
AffineTransform
at,
 double flatness)
Returns an iterator object that iterates along the
Shape
boundary and provides access to a flattened view of the
Shape
outline geometry.
abstract void
Graphics2D.
setTransform
(
AffineTransform
Tx)
Overwrites the Transform in the
Graphics2D
context.
abstract void
Graphics2D.
transform
(
AffineTransform
Tx)
Composes an
AffineTransform
object with the
Transform
in this
Graphics2D
according
 to the rule last-specified-first-applied.
Constructors in
java.awt
with parameters of type
AffineTransform
Modifier
Constructor
Description
LinearGradientPaint
(
Point2D
start,
Point2D
end,
 float[] fractions,
Color
[] colors,
MultipleGradientPaint.CycleMethod
cycleMethod,
MultipleGradientPaint.ColorSpaceType
colorSpace,
AffineTransform
gradientTransform)
Constructs a
LinearGradientPaint
.
RadialGradientPaint
(
Point2D
center,
 float radius,
Point2D
focus,
 float[] fractions,
Color
[] colors,
MultipleGradientPaint.CycleMethod
cycleMethod,
MultipleGradientPaint.ColorSpaceType
colorSpace,
AffineTransform
gradientTransform)
Constructs a
RadialGradientPaint
.
Uses of
AffineTransform
in
java.awt.font
Methods in
java.awt.font
that return
AffineTransform
Modifier and Type
Method
Description
abstract
AffineTransform
GlyphVector.
getGlyphTransform
(int glyphIndex)
Returns the transform of the specified glyph within this
GlyphVector
.
AffineTransform
FontRenderContext.
getTransform
()
Gets the transform that is used to scale typographical points
   to pixels in this
FontRenderContext
.
AffineTransform
TransformAttribute.
getTransform
()
Returns a copy of the wrapped transform.
Methods in
java.awt.font
with parameters of type
AffineTransform
Modifier and Type
Method
Description
Shape
GraphicAttribute.
getOutline
(
AffineTransform
tx)
Return a
Shape
that represents the region that
 this
GraphicAttribute
renders.
Shape
ShapeGraphicAttribute.
getOutline
(
AffineTransform
tx)
Return a
Shape
that represents the region that
 this
ShapeGraphicAttribute
renders.
Shape
TextLayout.
getOutline
(
AffineTransform
tx)
Returns a
Shape
representing the outline of this
TextLayout
.
abstract void
GlyphVector.
setGlyphTransform
(int glyphIndex,
AffineTransform
newTX)
Sets the transform of the specified glyph within this
GlyphVector
.
Constructors in
java.awt.font
with parameters of type
AffineTransform
Modifier
Constructor
Description
FontRenderContext
(
AffineTransform
tx,
 boolean isAntiAliased,
 boolean usesFractionalMetrics)
Constructs a
FontRenderContext
object from an
 optional
AffineTransform
and two
boolean
values that determine if the newly constructed object has
 anti-aliasing or fractional metrics.
FontRenderContext
(
AffineTransform
tx,
Object
aaHint,
Object
fmHint)
Constructs a
FontRenderContext
object from an
 optional
AffineTransform
and two
Object
values that determine if the newly constructed object has
 anti-aliasing or fractional metrics.
TransformAttribute
(
AffineTransform
transform)
Wraps the specified transform.
Uses of
AffineTransform
in
java.awt.geom
Methods in
java.awt.geom
that return
AffineTransform
Modifier and Type
Method
Description
AffineTransform
AffineTransform.
createInverse
()
Returns an
AffineTransform
object representing the
 inverse transformation.
static
AffineTransform
AffineTransform.
getQuadrantRotateInstance
(int numquadrants)
Returns a transform that rotates coordinates by the specified
 number of quadrants.
static
AffineTransform
AffineTransform.
getQuadrantRotateInstance
(int numquadrants,
 double anchorx,
 double anchory)
Returns a transform that rotates coordinates by the specified
 number of quadrants around the specified anchor point.
static
AffineTransform
AffineTransform.
getRotateInstance
(double theta)
Returns a transform representing a rotation transformation.
static
AffineTransform
AffineTransform.
getRotateInstance
(double vecx,
 double vecy)
Returns a transform that rotates coordinates according to
 a rotation vector.
static
AffineTransform
AffineTransform.
getRotateInstance
(double theta,
 double anchorx,
 double anchory)
Returns a transform that rotates coordinates around an anchor point.
static
AffineTransform
AffineTransform.
getRotateInstance
(double vecx,
 double vecy,
 double anchorx,
 double anchory)
Returns a transform that rotates coordinates around an anchor
 point according to a rotation vector.
static
AffineTransform
AffineTransform.
getScaleInstance
(double sx,
 double sy)
Returns a transform representing a scaling transformation.
static
AffineTransform
AffineTransform.
getShearInstance
(double shx,
 double shy)
Returns a transform representing a shearing transformation.
static
AffineTransform
AffineTransform.
getTranslateInstance
(double tx,
 double ty)
Returns a transform representing a translation transformation.
Methods in
java.awt.geom
with parameters of type
AffineTransform
Modifier and Type
Method
Description
void
AffineTransform.
concatenate
(
AffineTransform
Tx)
Concatenates an
AffineTransform Tx
to
 this
AffineTransform
Cx in the most commonly useful
 way to provide a new user space
 that is mapped to the former user space by
Tx
.
Area
Area.
createTransformedArea
(
AffineTransform
t)
Creates a new
Area
object that contains the same
 geometry as this
Area
transformed by the specified
AffineTransform
.
final
Shape
Path2D.
createTransformedShape
(
AffineTransform
at)
Returns a new
Shape
representing a transformed version
 of this
Path2D
.
PathIterator
Arc2D.
getPathIterator
(
AffineTransform
at)
Returns an iteration object that defines the boundary of the
 arc.
PathIterator
Area.
getPathIterator
(
AffineTransform
at)
Creates a
PathIterator
for the outline of this
Area
object.
PathIterator
Area.
getPathIterator
(
AffineTransform
at,
 double flatness)
Creates a
PathIterator
for the flattened outline of
 this
Area
object.
PathIterator
CubicCurve2D.
getPathIterator
(
AffineTransform
at)
Returns an iteration object that defines the boundary of the
 shape.
PathIterator
CubicCurve2D.
getPathIterator
(
AffineTransform
at,
 double flatness)
Return an iteration object that defines the boundary of the
 flattened shape.
PathIterator
Ellipse2D.
getPathIterator
(
AffineTransform
at)
Returns an iteration object that defines the boundary of this
Ellipse2D
.
PathIterator
Line2D.
getPathIterator
(
AffineTransform
at)
Returns an iteration object that defines the boundary of this
Line2D
.
PathIterator
Line2D.
getPathIterator
(
AffineTransform
at,
 double flatness)
Returns an iteration object that defines the boundary of this
 flattened
Line2D
.
final
PathIterator
Path2D.Double.
getPathIterator
(
AffineTransform
at)
Returns an iterator object that iterates along the
Shape
boundary and provides access to the geometry of the
Shape
outline.
final
PathIterator
Path2D.Float.
getPathIterator
(
AffineTransform
at)
Returns an iterator object that iterates along the
Shape
boundary and provides access to the geometry of the
Shape
outline.
final
PathIterator
Path2D.
getPathIterator
(
AffineTransform
at,
 double flatness)
Returns an iterator object that iterates along the
Shape
boundary and provides access to a flattened view of the
Shape
outline geometry.
PathIterator
QuadCurve2D.
getPathIterator
(
AffineTransform
at)
Returns an iteration object that defines the boundary of the
 shape of this
QuadCurve2D
.
PathIterator
QuadCurve2D.
getPathIterator
(
AffineTransform
at,
 double flatness)
Returns an iteration object that defines the boundary of the
 flattened shape of this
QuadCurve2D
.
PathIterator
Rectangle2D.
getPathIterator
(
AffineTransform
at)
Returns an iteration object that defines the boundary of this
Rectangle2D
.
PathIterator
Rectangle2D.
getPathIterator
(
AffineTransform
at,
 double flatness)
Returns an iteration object that defines the boundary of the
 flattened
Rectangle2D
.
PathIterator
RectangularShape.
getPathIterator
(
AffineTransform
at,
 double flatness)
Returns an iterator object that iterates along the
Shape
object's boundary and provides access to a
 flattened view of the outline of the
Shape
object's geometry.
PathIterator
RoundRectangle2D.
getPathIterator
(
AffineTransform
at)
Returns an iteration object that defines the boundary of this
RoundRectangle2D
.
void
AffineTransform.
preConcatenate
(
AffineTransform
Tx)
Concatenates an
AffineTransform Tx
to
 this
AffineTransform
Cx
 in a less commonly used way such that
Tx
modifies the
 coordinate transformation relative to the absolute pixel
 space rather than relative to the existing user space.
void
AffineTransform.
setTransform
(
AffineTransform
Tx)
Sets this transform to a copy of the transform in the specified
AffineTransform
object.
void
Area.
transform
(
AffineTransform
t)
Transforms the geometry of this
Area
using the specified
AffineTransform
.
final void
Path2D.Double.
transform
(
AffineTransform
at)
Transforms the geometry of this path using the specified
AffineTransform
.
final void
Path2D.Float.
transform
(
AffineTransform
at)
Transforms the geometry of this path using the specified
AffineTransform
.
abstract void
Path2D.
transform
(
AffineTransform
at)
Transforms the geometry of this path using the specified
AffineTransform
.
Constructors in
java.awt.geom
with parameters of type
AffineTransform
Modifier
Constructor
Description
AffineTransform
(
AffineTransform
Tx)
Constructs a new
AffineTransform
that is a copy of
 the specified
AffineTransform
object.
Double
(
Shape
s,
AffineTransform
at)
Constructs a new double precision
Path2D
object
 from an arbitrary
Shape
object, transformed by an
AffineTransform
object.
Float
(
Shape
s,
AffineTransform
at)
Constructs a new single precision
Path2D
object
 from an arbitrary
Shape
object, transformed by an
AffineTransform
object.
Uses of
AffineTransform
in
java.awt.image
Methods in
java.awt.image
that return
AffineTransform
Modifier and Type
Method
Description
final
AffineTransform
AffineTransformOp.
getTransform
()
Returns the affine transform used by this transform operation.
Constructors in
java.awt.image
with parameters of type
AffineTransform
Modifier
Constructor
Description
AffineTransformOp
(
AffineTransform
xform,
 int interpolationType)
Constructs an
AffineTransformOp
given an affine transform
 and the interpolation type.
AffineTransformOp
(
AffineTransform
xform,
RenderingHints
hints)
Constructs an
AffineTransformOp
given an affine transform.
Uses of
AffineTransform
in
java.awt.image.renderable
Methods in
java.awt.image.renderable
that return
AffineTransform
Modifier and Type
Method
Description
AffineTransform
RenderContext.
getTransform
()
Gets the current user-to-device AffineTransform.
Methods in
java.awt.image.renderable
with parameters of type
AffineTransform
Modifier and Type
Method
Description
void
RenderContext.
concatenateTransform
(
AffineTransform
modTransform)
Modifies the current user-to-device transform by appending another
 transform.
void
RenderContext.
concetenateTransform
(
AffineTransform
modTransform)
Deprecated.
replaced by
concatenateTransform(AffineTransform)
.
void
RenderContext.
preConcatenateTransform
(
AffineTransform
modTransform)
Modifies the current user-to-device transform by prepending another
 transform.
void
RenderContext.
preConcetenateTransform
(
AffineTransform
modTransform)
Deprecated.
replaced by
preConcatenateTransform(AffineTransform)
.
void
RenderContext.
setTransform
(
AffineTransform
newTransform)
Sets the current user-to-device AffineTransform contained
 in the RenderContext to a given transform.
Constructors in
java.awt.image.renderable
with parameters of type
AffineTransform
Modifier
Constructor
Description
RenderContext
(
AffineTransform
usr2dev)
Constructs a RenderContext with a given transform.
RenderContext
(
AffineTransform
usr2dev,
RenderingHints
hints)
Constructs a RenderContext with a given transform and rendering hints.
RenderContext
(
AffineTransform
usr2dev,
Shape
aoi)
Constructs a RenderContext with a given transform and area of interest.
RenderContext
(
AffineTransform
usr2dev,
Shape
aoi,
RenderingHints
hints)
Constructs a RenderContext with a given transform.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.