Uses of Class java.beans.IntrospectionException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
java.beans.IntrospectionException
Packages that use
IntrospectionException
Package
Description
java.beans
Contains classes related to developing
beans
-- components based on
 the JavaBeans architecture.
Uses of
IntrospectionException
in
java.beans
Methods in
java.beans
that throw
IntrospectionException
Modifier and Type
Method
Description
static
BeanInfo
Introspector.
getBeanInfo
(
Class
<?> beanClass)
Introspect on a Java Bean and learn about all its properties, exposed
 methods, and events.
static
BeanInfo
Introspector.
getBeanInfo
(
Class
<?> beanClass,
 int flags)
Introspect on a Java bean and learn about all its properties, exposed
 methods, and events, subject to some control flags.
static
BeanInfo
Introspector.
getBeanInfo
(
Class
<?> beanClass,
Class
<?> stopClass)
Introspect on a Java bean and learn all about its properties, exposed
 methods, below a given "stop" point.
static
BeanInfo
Introspector.
getBeanInfo
(
Class
<?> beanClass,
Class
<?> stopClass,
 int flags)
Introspect on a Java Bean and learn about all its properties,
 exposed methods and events, below a given
stopClass
point
 subject to some control
flags
.
void
IndexedPropertyDescriptor.
setIndexedReadMethod
(
Method
readMethod)
Sets the method that should be used to read an indexed property value.
void
IndexedPropertyDescriptor.
setIndexedWriteMethod
(
Method
writeMethod)
Sets the method that should be used to write an indexed property value.
void
PropertyDescriptor.
setReadMethod
(
Method
readMethod)
Sets the method that should be used to read the property value.
void
PropertyDescriptor.
setWriteMethod
(
Method
writeMethod)
Sets the method that should be used to write the property value.
Constructors in
java.beans
that throw
IntrospectionException
Modifier
Constructor
Description
EventSetDescriptor
(
Class
<?> sourceClass,
String
eventSetName,
Class
<?> listenerType,
String
listenerMethodName)
Creates an
EventSetDescriptor
assuming that you are
 following the most simple standard design pattern where a named
 event "fred" is (1) delivered as a call on the single method of
 interface FredListener, (2) has a single argument of type FredEvent,
 and (3) where the FredListener may be registered with a call on an
 addFredListener method of the source component and removed with a
 call on a removeFredListener method.
EventSetDescriptor
(
Class
<?> sourceClass,
String
eventSetName,
Class
<?> listenerType,
String
[] listenerMethodNames,
String
addListenerMethodName,
String
removeListenerMethodName)
Creates an
EventSetDescriptor
from scratch using
 string names.
EventSetDescriptor
(
Class
<?> sourceClass,
String
eventSetName,
Class
<?> listenerType,
String
[] listenerMethodNames,
String
addListenerMethodName,
String
removeListenerMethodName,
String
getListenerMethodName)
This constructor creates an EventSetDescriptor from scratch using
 string names.
EventSetDescriptor
(
String
eventSetName,
Class
<?> listenerType,
MethodDescriptor
[] listenerMethodDescriptors,
Method
addListenerMethod,
Method
removeListenerMethod)
Creates an
EventSetDescriptor
from scratch using
java.lang.reflect.MethodDescriptor
and
java.lang.Class
objects.
EventSetDescriptor
(
String
eventSetName,
Class
<?> listenerType,
Method
[] listenerMethods,
Method
addListenerMethod,
Method
removeListenerMethod)
Creates an
EventSetDescriptor
from scratch using
java.lang.reflect.Method
and
java.lang.Class
objects.
EventSetDescriptor
(
String
eventSetName,
Class
<?> listenerType,
Method
[] listenerMethods,
Method
addListenerMethod,
Method
removeListenerMethod,
Method
getListenerMethod)
This constructor creates an EventSetDescriptor from scratch using
 java.lang.reflect.Method and java.lang.Class objects.
IndexedPropertyDescriptor
(
String
propertyName,
Class
<?> beanClass)
This constructor constructs an IndexedPropertyDescriptor for a property
 that follows the standard Java conventions by having getFoo and setFoo
 accessor methods, for both indexed access and array access.
IndexedPropertyDescriptor
(
String
propertyName,
Class
<?> beanClass,
String
readMethodName,
String
writeMethodName,
String
indexedReadMethodName,
String
indexedWriteMethodName)
This constructor takes the name of a simple property, and method
 names for reading and writing the property, both indexed
 and non-indexed.
IndexedPropertyDescriptor
(
String
propertyName,
Method
readMethod,
Method
writeMethod,
Method
indexedReadMethod,
Method
indexedWriteMethod)
This constructor takes the name of a simple property, and Method
 objects for reading and writing the property.
PropertyDescriptor
(
String
propertyName,
Class
<?> beanClass)
Constructs a PropertyDescriptor for a property that follows
 the standard Java convention by having getFoo and setFoo
 accessor methods.
PropertyDescriptor
(
String
propertyName,
Class
<?> beanClass,
String
readMethodName,
String
writeMethodName)
This constructor takes the name of a simple property, and method
 names for reading and writing the property.
PropertyDescriptor
(
String
propertyName,
Method
readMethod,
Method
writeMethod)
This constructor takes the name of a simple property, and Method
 objects for reading and writing the property.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.