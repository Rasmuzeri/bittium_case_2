Transient (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Field
Required
Optional
Detail:
Field
Element
Summary:
Field |
Required |
Optional
Detail:
Field |
Element
SEARCH
Module
java.desktop
Package
java.beans
Annotation Interface Transient
@Target
(
METHOD
)
@Retention
(
RUNTIME
)
public @interface
Transient
Indicates that an attribute called "transient"
 should be declared with the given
value
when the
Introspector
constructs
 a
PropertyDescriptor
or
EventSetDescriptor
classes associated with the annotated code element.
 A
true
value for the "transient" attribute
 indicates to encoders derived from
Encoder
that this feature should be ignored.
The
Transient
annotation may be used
 in any of the methods that are involved
 in a
FeatureDescriptor
subclass
 to identify the transient feature in the annotated class and its subclasses.
 Normally, the method that starts with "get" is the best place
 to put the annotation and it is this declaration
 that takes precedence in the case of multiple annotations
 being defined for the same feature.
To declare a feature non-transient in a class
 whose superclass declares it transient,
 use
@Transient(false)
.
 In all cases, the
Introspector
decides
 if a feature is transient by referring to the annotation
 on the most specific superclass.
 If no
Transient
annotation is present
 in any superclass the feature is not transient.
Since:
1.7
Optional Element Summary
Optional Elements
Modifier and Type
Optional Element
Description
boolean
value
Returns whether or not the
Introspector
should
 construct artifacts for the annotated method.
Element Details
value
boolean
value
Returns whether or not the
Introspector
should
 construct artifacts for the annotated method.
Returns:
whether or not the
Introspector
should
 construct artifacts for the annotated method
Default:
true
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.