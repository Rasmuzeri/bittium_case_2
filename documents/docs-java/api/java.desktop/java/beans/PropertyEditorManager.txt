PropertyEditorManager (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
java.beans
Class PropertyEditorManager
java.lang.Object
java.beans.PropertyEditorManager
public class
PropertyEditorManager
extends
Object
The PropertyEditorManager can be used to locate a property editor for
 any given type name.  This property editor must support the
 java.beans.PropertyEditor interface for editing a given object.
The PropertyEditorManager uses three techniques for locating an editor
 for a given type.  First, it provides a registerEditor method to allow
 an editor to be specifically registered for a given type.  Second it
 tries to locate a suitable class by adding "Editor" to the full
 qualified classname of the given type (e.g. "foo.bah.FozEditor").
 Finally it takes the simple classname (without the package name) adds
 "Editor" to it and looks in a search-path of packages for a matching
 class.
So for an input class foo.bah.Fred, the PropertyEditorManager would
 first look in its tables to see if an editor had been registered for
 foo.bah.Fred and if so use that.  Then it will look for a
 foo.bah.FredEditor class.  Then it will look for (say)
 standardEditorsPackage.FredEditor class.
Default PropertyEditors will be provided for the Java primitive types
 "boolean", "byte", "short", "int", "long", "float", and "double"; and
 for the classes java.lang.String. java.awt.Color, and java.awt.Font.
Since:
1.1
Constructor Summary
Constructors
Constructor
Description
PropertyEditorManager
()
Constructs a
PropertyEditorManager
.
Method Summary
All Methods
Static Methods
Concrete Methods
Modifier and Type
Method
Description
static
PropertyEditor
findEditor
(
Class
<?> targetType)
Locate a value editor for a given target type.
static
String
[]
getEditorSearchPath
()
Gets the package names that will be searched for property editors.
static void
registerEditor
(
Class
<?> targetType,
Class
<?> editorClass)
Registers an editor class to edit values of the given target class.
static void
setEditorSearchPath
(
String
[] path)
Change the list of package names that will be used for
          finding property editors.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
PropertyEditorManager
public
PropertyEditorManager
()
Constructs a
PropertyEditorManager
.
Method Details
registerEditor
public static
void
registerEditor
(
Class
<?> targetType,
Class
<?> editorClass)
Registers an editor class to edit values of the given target class.
 If the editor class is
null
,
 then any existing definition will be removed.
 Thus this method can be used to cancel the registration.
 The registration is canceled automatically
 if either the target or editor class is unloaded.
If there is a security manager, its
checkPropertiesAccess
method is called. This could result in a
SecurityException
.
Parameters:
targetType
- the class object of the type to be edited
editorClass
- the class object of the editor class
Throws:
SecurityException
- if a security manager exists and
                            its
checkPropertiesAccess
method
                            doesn't allow setting of system properties
See Also:
SecurityManager.checkPropertiesAccess()
findEditor
public static
PropertyEditor
findEditor
(
Class
<?> targetType)
Locate a value editor for a given target type.
Parameters:
targetType
- The Class object for the type to be edited
Returns:
An editor object for the given target class.
 The result is null if no suitable editor can be found.
getEditorSearchPath
public static
String
[]
getEditorSearchPath
()
Gets the package names that will be searched for property editors.
Returns:
The array of package names that will be searched in
          order to find property editors.
The default value for this array is implementation-dependent,
         e.g. Sun implementation initially sets to  {"sun.beans.editors"}.
setEditorSearchPath
public static
void
setEditorSearchPath
(
String
[] path)
Change the list of package names that will be used for
          finding property editors.
First, if there is a security manager, its
checkPropertiesAccess
method is called. This could result in a SecurityException.
Parameters:
path
- Array of package names.
Throws:
SecurityException
- if a security manager exists and its
checkPropertiesAccess
method doesn't allow setting
              of system properties.
See Also:
SecurityManager.checkPropertiesAccess()
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.