Uses of Class javax.sound.midi.Sequence (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.sound.midi.Sequence
Packages that use
Sequence
Package
Description
javax.sound.midi
Provides interfaces and classes for I/O, sequencing, and synthesis of MIDI
 (Musical Instrument Digital Interface) data.
javax.sound.midi.spi
Supplies interfaces for service providers to implement when offering new MIDI
 devices, MIDI file readers and writers, or sound bank readers.
Uses of
Sequence
in
javax.sound.midi
Methods in
javax.sound.midi
that return
Sequence
Modifier and Type
Method
Description
static
Sequence
MidiSystem.
getSequence
(
File
file)
Obtains a MIDI sequence from the specified
File
.
static
Sequence
MidiSystem.
getSequence
(
InputStream
stream)
Obtains a MIDI sequence from the specified input stream.
static
Sequence
MidiSystem.
getSequence
(
URL
url)
Obtains a MIDI sequence from the specified URL.
Sequence
Sequencer.
getSequence
()
Obtains the sequence on which the Sequencer is currently operating.
Methods in
javax.sound.midi
with parameters of type
Sequence
Modifier and Type
Method
Description
static int[]
MidiSystem.
getMidiFileTypes
(
Sequence
sequence)
Obtains the set of MIDI file types that the system can write from the
 sequence specified.
static boolean
MidiSystem.
isFileTypeSupported
(int fileType,
Sequence
sequence)
Indicates whether a MIDI file of the file type specified can be written
 from the sequence indicated.
void
Sequencer.
setSequence
(
Sequence
sequence)
Sets the current sequence on which the sequencer operates.
static int
MidiSystem.
write
(
Sequence
in,
 int type,
File
out)
Writes a stream of bytes representing a file of the MIDI file type
 indicated to the external file provided.
static int
MidiSystem.
write
(
Sequence
in,
 int fileType,
OutputStream
out)
Writes a stream of bytes representing a file of the MIDI file type
 indicated to the output stream provided.
Uses of
Sequence
in
javax.sound.midi.spi
Methods in
javax.sound.midi.spi
that return
Sequence
Modifier and Type
Method
Description
abstract
Sequence
MidiFileReader.
getSequence
(
File
file)
Obtains a MIDI sequence from the
File
provided.
abstract
Sequence
MidiFileReader.
getSequence
(
InputStream
stream)
Obtains a MIDI sequence from the input stream provided.
abstract
Sequence
MidiFileReader.
getSequence
(
URL
url)
Obtains a MIDI sequence from the
URL
provided.
Methods in
javax.sound.midi.spi
with parameters of type
Sequence
Modifier and Type
Method
Description
abstract int[]
MidiFileWriter.
getMidiFileTypes
(
Sequence
sequence)
Obtains the file types that this file writer can write from the sequence
 specified.
boolean
MidiFileWriter.
isFileTypeSupported
(int fileType,
Sequence
sequence)
Indicates whether a MIDI file of the file type specified can be written
 from the sequence indicated.
abstract int
MidiFileWriter.
write
(
Sequence
in,
 int fileType,
File
out)
Writes a stream of bytes representing a MIDI file of the file type
 indicated to the external file provided.
abstract int
MidiFileWriter.
write
(
Sequence
in,
 int fileType,
OutputStream
out)
Writes a stream of bytes representing a MIDI file of the file type
 indicated to the output stream provided.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.