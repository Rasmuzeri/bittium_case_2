Uses of Interface javax.sound.midi.Transmitter (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
javax.sound.midi.Transmitter
Packages that use
Transmitter
Package
Description
javax.sound.midi
Provides interfaces and classes for I/O, sequencing, and synthesis of MIDI
 (Musical Instrument Digital Interface) data.
Uses of
Transmitter
in
javax.sound.midi
Subinterfaces of
Transmitter
in
javax.sound.midi
Modifier and Type
Interface
Description
interface
MidiDeviceTransmitter
MidiDeviceTransmitter
is a
Transmitter
which represents a
 MIDI input connector of a
MidiDevice
(see
MidiDevice.getTransmitter()
).
Methods in
javax.sound.midi
that return
Transmitter
Modifier and Type
Method
Description
Transmitter
MidiDevice.
getTransmitter
()
Obtains a MIDI OUT connection from which the MIDI device will transmit
 MIDI data.
static
Transmitter
MidiSystem.
getTransmitter
()
Obtains a MIDI transmitter from an external MIDI port or other default
 source.
Methods in
javax.sound.midi
that return types with arguments of type
Transmitter
Modifier and Type
Method
Description
List
<
Transmitter
>
MidiDevice.
getTransmitters
()
Returns all currently active, non-closed transmitters connected with this
MidiDevice
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.