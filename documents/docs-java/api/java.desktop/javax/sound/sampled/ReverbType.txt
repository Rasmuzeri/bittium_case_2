ReverbType (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.sound.sampled
Class ReverbType
java.lang.Object
javax.sound.sampled.ReverbType
public class
ReverbType
extends
Object
The
ReverbType
class provides methods for accessing various
 reverberation settings to be applied to an audio signal.
Reverberation simulates the reflection of sound off of the walls, ceiling,
 and floor of a room. Depending on the size of the room, and how absorbent or
 reflective the materials in the room's surfaces are, the sound might bounce
 around for a long time before dying away.
The reverberation parameters provided by
ReverbType
consist of the
 delay time and intensity of early reflections, the delay time and intensity
 of late reflections, and an overall decay time. Early reflections are the
 initial individual low-order reflections of the direct signal off the
 surfaces in the room. The late reflections are the dense, high-order
 reflections that characterize the room's reverberation. The delay times for
 the start of these two reflection types give the listener a sense of the
 overall size and complexity of the room's shape and contents. The larger the
 room, the longer the reflection delay times. The early and late reflections'
 intensities define the gain (in decibels) of the reflected signals as
 compared to the direct signal. These intensities give the listener an
 impression of the absorptive nature of the surfaces and objects in the room.
 The decay time defines how long the reverberation takes to exponentially
 decay until it is no longer perceptible ("effective zero"). The larger and
 less absorbent the surfaces, the longer the decay time.
The set of parameters defined here may not include all aspects of
 reverberation as specified by some systems. For example, the Midi
 Manufacturer's Association (MMA) has an Interactive Audio Special Interest
 Group (IASIG), which has a 3-D Working Group that has defined a Level 2 Spec
 (I3DL2). I3DL2 supports filtering of reverberation and control of reverb
 density. These properties are not included in the JavaSound 1.0 definition of
 a reverb control. In such a case, the implementing system should either
 extend the defined reverb control to include additional parameters, or else
 interpret the system's additional capabilities in a way that fits the model
 described here.
If implementing JavaSound on a I3DL2-compliant device:
Filtering is disabled (high-frequency attenuations are set to 0.0 dB)
Density parameters are set to midway between minimum and maximum
The following table shows what parameter values an implementation might use
 for a representative set of reverberation settings.
Reverb types and params: decay time, late intensity, late delay,
 early intensity, and early delay
Type
Decay Time (ms)
Late Intensity (dB)
Late Delay (ms)
Early Intensity (dB)
Early Delay(ms)
Cavern
2250
-2.0
41.3
-1.4
10.3
Dungeon
1600
-1.0
10.3
-0.7
2.6
Garage
900
-6.0
14.7
-4.0
3.9
Acoustic Lab
280
-3.0
8.0
-2.0
2.0
Closet
150
-10.0
2.5
-7.0
0.6
Since:
1.3
Constructor Summary
Constructors
Modifier
Constructor
Description
protected
ReverbType
(
String
name,
 int earlyReflectionDelay,
 float earlyReflectionIntensity,
 int lateReflectionDelay,
 float lateReflectionIntensity,
 int decayTime)
Constructs a new reverb type that has the specified reverberation
 parameter values.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
final boolean
equals
(
Object
obj)
Indicates whether the specified object is equal to this reverb type,
 returning
true
if the objects are the same.
final int
getDecayTime
()
Obtains the decay time, which is the amount of time over which the late
 reflections attenuate to effective zero.
final int
getEarlyReflectionDelay
()
Returns the early reflection delay time in microseconds.
final float
getEarlyReflectionIntensity
()
Returns the early reflection intensity in decibels.
final int
getLateReflectionDelay
()
Returns the late reflection delay time in microseconds.
final float
getLateReflectionIntensity
()
Returns the late reflection intensity in decibels.
String
getName
()
Obtains the name of this reverb type.
final int
hashCode
()
Returns a hash code value for this reverb type.
final
String
toString
()
Returns a string representation of the reverb type, including its name
 and its parameter settings.
Methods declared in class java.lang.
Object
clone
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Constructor Details
ReverbType
protected
ReverbType
(
String
name,
 int earlyReflectionDelay,
 float earlyReflectionIntensity,
 int lateReflectionDelay,
 float lateReflectionIntensity,
 int decayTime)
Constructs a new reverb type that has the specified reverberation
 parameter values.
Parameters:
name
- the name of the new reverb type, or a zero-length
String
earlyReflectionDelay
- the new type's early reflection delay time
         in microseconds
earlyReflectionIntensity
- the new type's early reflection
         intensity in dB
lateReflectionDelay
- the new type's late reflection delay time in
         microseconds
lateReflectionIntensity
- the new type's late reflection intensity
         in dB
decayTime
- the new type's decay time in microseconds
Method Details
getName
public
String
getName
()
Obtains the name of this reverb type.
Returns:
the name of this reverb type
Since:
1.5
getEarlyReflectionDelay
public final
int
getEarlyReflectionDelay
()
Returns the early reflection delay time in microseconds. This is the
 amount of time between when the direct signal is heard and when the first
 early reflections are heard.
Returns:
early reflection delay time for this reverb type, in microseconds
getEarlyReflectionIntensity
public final
float
getEarlyReflectionIntensity
()
Returns the early reflection intensity in decibels. This is the amplitude
 attenuation of the first early reflections relative to the direct signal.
Returns:
early reflection intensity for this reverb type, in dB
getLateReflectionDelay
public final
int
getLateReflectionDelay
()
Returns the late reflection delay time in microseconds. This is the
 amount of time between when the first early reflections are heard and
 when the first late reflections are heard.
Returns:
late reflection delay time for this reverb type, in microseconds
getLateReflectionIntensity
public final
float
getLateReflectionIntensity
()
Returns the late reflection intensity in decibels. This is the amplitude
 attenuation of the first late reflections relative to the direct signal.
Returns:
late reflection intensity for this reverb type, in dB
getDecayTime
public final
int
getDecayTime
()
Obtains the decay time, which is the amount of time over which the late
 reflections attenuate to effective zero. The effective zero value is
 implementation-dependent.
Returns:
the decay time of the late reflections, in microseconds
equals
public final
boolean
equals
(
Object
obj)
Indicates whether the specified object is equal to this reverb type,
 returning
true
if the objects are the same.
Overrides:
equals
in class
Object
Parameters:
obj
- the reference object with which to compare
Returns:
true
if the specified object is equal to this reverb
         type;
false
otherwise
See Also:
Object.hashCode()
HashMap
hashCode
public final
int
hashCode
()
Returns a hash code value for this reverb type.
Overrides:
hashCode
in class
Object
Returns:
a hash code value for this reverb type
See Also:
Object.equals(java.lang.Object)
System.identityHashCode(java.lang.Object)
toString
public final
String
toString
()
Returns a string representation of the reverb type, including its name
 and its parameter settings. The exact contents of the string may vary
 between implementations of Java Sound.
Overrides:
toString
in class
Object
Returns:
a string representation of the reverb type
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.