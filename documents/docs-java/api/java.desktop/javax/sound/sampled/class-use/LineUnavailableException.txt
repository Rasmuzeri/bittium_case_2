Uses of Class javax.sound.sampled.LineUnavailableException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.sound.sampled.LineUnavailableException
Packages that use
LineUnavailableException
Package
Description
javax.sound.sampled
Provides interfaces and classes for capture, processing, and playback of
 sampled audio data.
Uses of
LineUnavailableException
in
javax.sound.sampled
Methods in
javax.sound.sampled
that throw
LineUnavailableException
Modifier and Type
Method
Description
static
Clip
AudioSystem.
getClip
()
Obtains a clip that can be used for playing back an audio file or an
 audio stream.
static
Clip
AudioSystem.
getClip
(
Mixer.Info
mixerInfo)
Obtains a clip from the specified mixer that can be used for playing back
 an audio file or an audio stream.
static
Line
AudioSystem.
getLine
(
Line.Info
info)
Obtains a line that matches the description in the specified
Line.Info
object.
Line
Mixer.
getLine
(
Line.Info
info)
Obtains a line that is available for use and that matches the description
 in the specified
Line.Info
object.
static
SourceDataLine
AudioSystem.
getSourceDataLine
(
AudioFormat
format)
Obtains a source data line that can be used for playing back audio data
 in the format specified by the
AudioFormat
object.
static
SourceDataLine
AudioSystem.
getSourceDataLine
(
AudioFormat
format,
Mixer.Info
mixerinfo)
Obtains a source data line that can be used for playing back audio data
 in the format specified by the
AudioFormat
object, provided by
 the mixer specified by the
Mixer.Info
object.
static
TargetDataLine
AudioSystem.
getTargetDataLine
(
AudioFormat
format)
Obtains a target data line that can be used for recording audio data in
 the format specified by the
AudioFormat
object.
static
TargetDataLine
AudioSystem.
getTargetDataLine
(
AudioFormat
format,
Mixer.Info
mixerinfo)
Obtains a target data line that can be used for recording audio data in
 the format specified by the
AudioFormat
object, provided by the
 mixer specified by the
Mixer.Info
object.
void
Clip.
open
(
AudioFormat
format,
 byte[] data,
 int offset,
 int bufferSize)
Opens the clip, meaning that it should acquire any required system
 resources and become operational.
void
Clip.
open
(
AudioInputStream
stream)
Opens the clip with the format and audio data present in the provided
 audio input stream.
void
Line.
open
()
Opens the line, indicating that it should acquire any required system
 resources and become operational.
void
SourceDataLine.
open
(
AudioFormat
format)
Opens the line with the specified format, causing the line to acquire any
 required system resources and become operational.
void
SourceDataLine.
open
(
AudioFormat
format,
 int bufferSize)
Opens the line with the specified format and suggested buffer size,
 causing the line to acquire any required system resources and become
 operational.
void
TargetDataLine.
open
(
AudioFormat
format)
Opens the line with the specified format, causing the line to acquire any
 required system resources and become operational.
void
TargetDataLine.
open
(
AudioFormat
format,
 int bufferSize)
Opens the line with the specified format and requested buffer size,
 causing the line to acquire any required system resources and become
 operational.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.