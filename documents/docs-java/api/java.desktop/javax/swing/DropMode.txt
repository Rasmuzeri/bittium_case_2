DropMode (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Enum Constants
Field
Method
Detail:
Enum Constants
Field
Method
Summary:
Nested
|
Enum Constants
|
Field |
Method
Detail:
Enum Constants
|
Field |
Method
SEARCH
Module
java.desktop
Package
javax.swing
Enum Class DropMode
java.lang.Object
java.lang.Enum
<
DropMode
>
javax.swing.DropMode
All Implemented Interfaces:
Serializable
,
Comparable
<
DropMode
>
,
Constable
public enum
DropMode
extends
Enum
<
DropMode
>
Drop modes, used to determine the method by which a component
 tracks and indicates a drop location during drag and drop.
Since:
1.6
See Also:
JTable.setDropMode(javax.swing.DropMode)
JList.setDropMode(javax.swing.DropMode)
JTree.setDropMode(javax.swing.DropMode)
JTextComponent.setDropMode(javax.swing.DropMode)
Nested Class Summary
Nested classes/interfaces declared in class java.lang.
Enum
Enum.EnumDesc
<
E
extends
Enum
<
E
>>
Enum Constant Summary
Enum Constants
Enum Constant
Description
INSERT
The drop location should be tracked in terms of the position
 where new data should be inserted.
INSERT_COLS
The drop location should be tracked in terms of the column index
 where new columns should be inserted to accommodate the dropped
 data.
INSERT_ROWS
The drop location should be tracked in terms of the row index
 where new rows should be inserted to accommodate the dropped
 data.
ON
The drop location should be tracked in terms of the index of
 existing items.
ON_OR_INSERT
This mode is a combination of
ON
and
INSERT
, specifying that data can be
 dropped on existing items, or in insert locations
 as specified by
INSERT
.
ON_OR_INSERT_COLS
This mode is a combination of
ON
and
INSERT_COLS
, specifying that data can be
 dropped on existing items, or as insert columns
 as specified by
INSERT_COLS
.
ON_OR_INSERT_ROWS
This mode is a combination of
ON
and
INSERT_ROWS
, specifying that data can be
 dropped on existing items, or as insert rows
 as specified by
INSERT_ROWS
.
USE_SELECTION
A component's own internal selection mechanism (or caret for text
 components) should be used to track the drop location.
Method Summary
All Methods
Static Methods
Concrete Methods
Modifier and Type
Method
Description
static
DropMode
valueOf
(
String
name)
Returns the enum constant of this class with the specified name.
static
DropMode
[]
values
()
Returns an array containing the constants of this enum class, in
the order they are declared.
Methods declared in class java.lang.
Enum
clone
,
compareTo
,
describeConstable
,
equals
,
finalize
,
getDeclaringClass
,
hashCode
,
name
,
ordinal
,
toString
,
valueOf
Methods declared in class java.lang.
Object
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Enum Constant Details
USE_SELECTION
public static final
DropMode
USE_SELECTION
A component's own internal selection mechanism (or caret for text
 components) should be used to track the drop location.
ON
public static final
DropMode
ON
The drop location should be tracked in terms of the index of
 existing items. Useful for dropping on items in tables, lists,
 and trees.
INSERT
public static final
DropMode
INSERT
The drop location should be tracked in terms of the position
 where new data should be inserted. For components that manage
 a list of items (list and tree for example), the drop location
 should indicate the index where new data should be inserted.
 For text components the location should represent a position
 between characters. For components that manage tabular data
 (table for example), the drop location should indicate
 where to insert new rows, columns, or both, to accommodate
 the dropped data.
INSERT_ROWS
public static final
DropMode
INSERT_ROWS
The drop location should be tracked in terms of the row index
 where new rows should be inserted to accommodate the dropped
 data. This is useful for components that manage tabular data.
INSERT_COLS
public static final
DropMode
INSERT_COLS
The drop location should be tracked in terms of the column index
 where new columns should be inserted to accommodate the dropped
 data. This is useful for components that manage tabular data.
ON_OR_INSERT
public static final
DropMode
ON_OR_INSERT
This mode is a combination of
ON
and
INSERT
, specifying that data can be
 dropped on existing items, or in insert locations
 as specified by
INSERT
.
ON_OR_INSERT_ROWS
public static final
DropMode
ON_OR_INSERT_ROWS
This mode is a combination of
ON
and
INSERT_ROWS
, specifying that data can be
 dropped on existing items, or as insert rows
 as specified by
INSERT_ROWS
.
ON_OR_INSERT_COLS
public static final
DropMode
ON_OR_INSERT_COLS
This mode is a combination of
ON
and
INSERT_COLS
, specifying that data can be
 dropped on existing items, or as insert columns
 as specified by
INSERT_COLS
.
Method Details
values
public static
DropMode
[]
values
()
Returns an array containing the constants of this enum class, in
the order they are declared.
Returns:
an array containing the constants of this enum class, in the order they are declared
valueOf
public static
DropMode
valueOf
(
String
name)
Returns the enum constant of this class with the specified name.
The string must match
exactly
an identifier used to declare an
enum constant in this class.  (Extraneous whitespace characters are 
not permitted.)
Parameters:
name
- the name of the enum constant to be returned.
Returns:
the enum constant with the specified name
Throws:
IllegalArgumentException
- if this enum class has no constant with the specified name
NullPointerException
- if the argument is null
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.