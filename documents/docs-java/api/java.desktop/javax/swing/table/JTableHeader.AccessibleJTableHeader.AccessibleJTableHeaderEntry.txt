JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing.table
Class JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
java.lang.Object
javax.accessibility.AccessibleContext
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
All Implemented Interfaces:
Accessible
,
AccessibleComponent
Enclosing class:
JTableHeader.AccessibleJTableHeader
protected class
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
extends
AccessibleContext
implements
Accessible
,
AccessibleComponent
This class provides an implementation of the Java Accessibility
 API appropriate for JTableHeader entries.
Field Summary
Fields declared in class javax.accessibility.
AccessibleContext
ACCESSIBLE_ACTION_PROPERTY
,
ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY
,
ACCESSIBLE_CARET_PROPERTY
,
ACCESSIBLE_CHILD_PROPERTY
,
ACCESSIBLE_COMPONENT_BOUNDS_CHANGED
,
ACCESSIBLE_DESCRIPTION_PROPERTY
,
ACCESSIBLE_HYPERTEXT_OFFSET
,
ACCESSIBLE_INVALIDATE_CHILDREN
,
ACCESSIBLE_NAME_PROPERTY
,
ACCESSIBLE_SELECTION_PROPERTY
,
ACCESSIBLE_STATE_PROPERTY
,
ACCESSIBLE_TABLE_CAPTION_CHANGED
,
ACCESSIBLE_TABLE_COLUMN_DESCRIPTION_CHANGED
,
ACCESSIBLE_TABLE_COLUMN_HEADER_CHANGED
,
ACCESSIBLE_TABLE_MODEL_CHANGED
,
ACCESSIBLE_TABLE_ROW_DESCRIPTION_CHANGED
,
ACCESSIBLE_TABLE_ROW_HEADER_CHANGED
,
ACCESSIBLE_TABLE_SUMMARY_CHANGED
,
ACCESSIBLE_TEXT_ATTRIBUTES_CHANGED
,
ACCESSIBLE_TEXT_PROPERTY
,
ACCESSIBLE_VALUE_PROPERTY
,
ACCESSIBLE_VISIBLE_DATA_PROPERTY
,
accessibleDescription
,
accessibleName
,
accessibleParent
Constructor Summary
Constructors
Constructor
Description
AccessibleJTableHeaderEntry
(int c,
JTableHeader
p,
JTable
t)
Constructs an AccessibleJTableHeaderEntry
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
addFocusListener
(
FocusListener
l)
Adds the specified focus listener to receive focus events from this
 component.
boolean
contains
(
Point
p)
Checks whether the specified point is within this object's bounds, where
 the point's x and y coordinates are defined to be relative to the
 coordinate system of the object.
Accessible
getAccessibleAt
(
Point
p)
Returns the
Accessible
child, if one exists, contained at the
 local coordinate
Point
.
Accessible
getAccessibleChild
(int i)
Returns the specified
Accessible
child of the object.
int
getAccessibleChildrenCount
()
Returns the number of accessible children of the object.
AccessibleComponent
getAccessibleComponent
()
Get the AccessibleComponent associated with this object.
AccessibleContext
getAccessibleContext
()
Get the AccessibleContext associated with this object.
int
getAccessibleIndexInParent
()
Gets the 0-based index of this object in its accessible parent.
AccessibleRole
getAccessibleRole
()
Gets the role of this object.
AccessibleStateSet
getAccessibleStateSet
()
Gets the state set of this object.
Color
getBackground
()
Gets the background color of this object.
Rectangle
getBounds
()
Gets the bounds of this object in the form of a
Rectangle
object.
Cursor
getCursor
()
Gets the cursor of this object.
Font
getFont
()
Gets the font of this object.
FontMetrics
getFontMetrics
(
Font
f)
Gets the
FontMetrics
of this object.
Color
getForeground
()
Gets the foreground color of this object.
Locale
getLocale
()
Gets the locale of the component.
Point
getLocation
()
Gets the location of the object relative to the parent in the form of a
 point specifying the object's top-left corner in the screen's coordinate
 space.
Point
getLocationOnScreen
()
Returns the location of the object on the screen.
Dimension
getSize
()
Returns the size of this object in the form of a
Dimension
object.
boolean
isEnabled
()
Determines if the object is enabled.
boolean
isFocusTraversable
()
Returns whether this object can accept focus or not.
boolean
isShowing
()
Determines if the object is showing.
boolean
isVisible
()
Determines if the object is visible.
void
removeFocusListener
(
FocusListener
l)
Removes the specified focus listener so it no longer receives focus
 events from this component.
void
requestFocus
()
Requests focus for this object.
void
setAccessibleDescription
(
String
s)
Sets the accessible description of this object.
void
setAccessibleName
(
String
s)
Sets the localized accessible name of this object.
void
setBackground
(
Color
c)
Sets the background color of this object.
void
setBounds
(
Rectangle
r)
Sets the bounds of this object in the form of a
Rectangle
object.
void
setCursor
(
Cursor
c)
Sets the cursor of this object.
void
setEnabled
(boolean b)
Sets the enabled state of the object.
void
setFont
(
Font
f)
Sets the font of this object.
void
setForeground
(
Color
c)
Sets the foreground color of this object.
void
setLocation
(
Point
p)
Sets the location of the object relative to the parent.
void
setSize
(
Dimension
d)
Resizes this object so that it has width and height.
void
setVisible
(boolean b)
Sets the visible state of the object.
Methods declared in class javax.accessibility.
AccessibleContext
addPropertyChangeListener
,
firePropertyChange
,
getAccessibleAction
,
getAccessibleDescription
,
getAccessibleEditableText
,
getAccessibleIcon
,
getAccessibleName
,
getAccessibleParent
,
getAccessibleRelationSet
,
getAccessibleSelection
,
getAccessibleTable
,
getAccessibleText
,
getAccessibleValue
,
removePropertyChangeListener
,
setAccessibleParent
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
AccessibleJTableHeaderEntry
public
AccessibleJTableHeaderEntry
(int c,
JTableHeader
p,
JTable
t)
Constructs an AccessibleJTableHeaderEntry
Parameters:
c
- the column index
p
- the parent
JTableHeader
t
- the table
JTable
Since:
1.4
Method Details
getAccessibleContext
public
AccessibleContext
getAccessibleContext
()
Get the AccessibleContext associated with this object.
 In the implementation of the Java Accessibility API
 for this class, returns this object, which serves as
 its own AccessibleContext.
Specified by:
getAccessibleContext
in interface
Accessible
Returns:
this object
setAccessibleName
public
void
setAccessibleName
(
String
s)
Description copied from class:
AccessibleContext
Sets the localized accessible name of this object. Changing the name will
 cause a
PropertyChangeEvent
to be fired for the
ACCESSIBLE_NAME_PROPERTY
property.
Overrides:
setAccessibleName
in class
AccessibleContext
Parameters:
s
- the new localized name of the object
See Also:
AccessibleContext.getAccessibleName()
AccessibleContext.addPropertyChangeListener(java.beans.PropertyChangeListener)
setAccessibleDescription
public
void
setAccessibleDescription
(
String
s)
Description copied from class:
AccessibleContext
Sets the accessible description of this object. Changing the name will
 cause a
PropertyChangeEvent
to be fired for the
ACCESSIBLE_DESCRIPTION_PROPERTY
property.
Overrides:
setAccessibleDescription
in class
AccessibleContext
Parameters:
s
- the new localized description of the object
See Also:
AccessibleContext.setAccessibleName(java.lang.String)
AccessibleContext.addPropertyChangeListener(java.beans.PropertyChangeListener)
getAccessibleRole
public
AccessibleRole
getAccessibleRole
()
Description copied from class:
AccessibleContext
Gets the role of this object. The role of the object is the generic
 purpose or use of the class of this object. For example, the role of a
 push button is
AccessibleRole.PUSH_BUTTON
. The roles in
AccessibleRole
are provided so component developers can pick from
 a set of predefined roles. This enables assistive technologies to provide
 a consistent interface to various tweaked subclasses of components (e.g.,
 use
AccessibleRole.PUSH_BUTTON
for all components that act like a
 push button) as well as distinguish between subclasses that behave
 differently (e.g.,
AccessibleRole.CHECK_BOX
for check boxes and
AccessibleRole.RADIO_BUTTON
for radio buttons).
Note that the
AccessibleRole
class is also extensible, so custom
 component developers can define their own
AccessibleRole
's if the
 set of predefined roles is inadequate.
Specified by:
getAccessibleRole
in class
AccessibleContext
Returns:
an instance of
AccessibleRole
describing the role of the
         object
See Also:
AccessibleRole
getAccessibleStateSet
public
AccessibleStateSet
getAccessibleStateSet
()
Description copied from class:
AccessibleContext
Gets the state set of this object. The
AccessibleStateSet
of an
 object is composed of a set of unique
AccessibleStates
. A change
 in the
AccessibleStateSet
of an object will cause a
PropertyChangeEvent
to be fired for the
ACCESSIBLE_STATE_PROPERTY
property.
Specified by:
getAccessibleStateSet
in class
AccessibleContext
Returns:
an instance of
AccessibleStateSet
containing the current
         state set of the object
See Also:
AccessibleStateSet
AccessibleState
AccessibleContext.addPropertyChangeListener(java.beans.PropertyChangeListener)
getAccessibleIndexInParent
public
int
getAccessibleIndexInParent
()
Description copied from class:
AccessibleContext
Gets the 0-based index of this object in its accessible parent.
Specified by:
getAccessibleIndexInParent
in class
AccessibleContext
Returns:
the 0-based index of this object in its parent; -1 if this object
         does not have an accessible parent.
See Also:
AccessibleContext.getAccessibleParent()
AccessibleContext.getAccessibleChildrenCount()
AccessibleContext.getAccessibleChild(int)
getAccessibleChildrenCount
public
int
getAccessibleChildrenCount
()
Description copied from class:
AccessibleContext
Returns the number of accessible children of the object.
Specified by:
getAccessibleChildrenCount
in class
AccessibleContext
Returns:
the number of accessible children of the object.
getAccessibleChild
public
Accessible
getAccessibleChild
(int i)
Description copied from class:
AccessibleContext
Returns the specified
Accessible
child of the object. The
Accessible
children of an
Accessible
object are
 zero-based, so the first child of an
Accessible
child is at index
 0, the second child is at index 1, and so on.
Specified by:
getAccessibleChild
in class
AccessibleContext
Parameters:
i
- zero-based index of child
Returns:
the
Accessible
child of the object
See Also:
AccessibleContext.getAccessibleChildrenCount()
getLocale
public
Locale
getLocale
()
Description copied from class:
AccessibleContext
Gets the locale of the component. If the component does not have a
 locale, then the locale of its parent is returned.
Specified by:
getLocale
in class
AccessibleContext
Returns:
this component's locale. If this component does not have a
         locale, the locale of its parent is returned.
getAccessibleComponent
public
AccessibleComponent
getAccessibleComponent
()
Get the AccessibleComponent associated with this object.  In the
 implementation of the Java Accessibility API for this class,
 return this object, which is responsible for implementing the
 AccessibleComponent interface on behalf of itself.
Overrides:
getAccessibleComponent
in class
AccessibleContext
Returns:
this object
See Also:
AccessibleComponent
getBackground
public
Color
getBackground
()
Description copied from interface:
AccessibleComponent
Gets the background color of this object.
Specified by:
getBackground
in interface
AccessibleComponent
Returns:
the background color, if supported, of the object; otherwise,
null
See Also:
AccessibleComponent.setBackground(java.awt.Color)
setBackground
public
void
setBackground
(
Color
c)
Description copied from interface:
AccessibleComponent
Sets the background color of this object.
Specified by:
setBackground
in interface
AccessibleComponent
Parameters:
c
- the new color for the background
See Also:
AccessibleComponent.getBackground()
getForeground
public
Color
getForeground
()
Description copied from interface:
AccessibleComponent
Gets the foreground color of this object.
Specified by:
getForeground
in interface
AccessibleComponent
Returns:
the foreground color, if supported, of the object; otherwise,
null
See Also:
AccessibleComponent.setForeground(java.awt.Color)
setForeground
public
void
setForeground
(
Color
c)
Description copied from interface:
AccessibleComponent
Sets the foreground color of this object.
Specified by:
setForeground
in interface
AccessibleComponent
Parameters:
c
- the new color for the foreground
See Also:
AccessibleComponent.getForeground()
getCursor
public
Cursor
getCursor
()
Description copied from interface:
AccessibleComponent
Gets the cursor of this object.
Specified by:
getCursor
in interface
AccessibleComponent
Returns:
the cursor, if supported, of the object; otherwise,
null
See Also:
AccessibleComponent.setCursor(java.awt.Cursor)
setCursor
public
void
setCursor
(
Cursor
c)
Description copied from interface:
AccessibleComponent
Sets the cursor of this object.
Specified by:
setCursor
in interface
AccessibleComponent
Parameters:
c
- the new cursor for the object
See Also:
AccessibleComponent.getCursor()
getFont
public
Font
getFont
()
Description copied from interface:
AccessibleComponent
Gets the font of this object.
Specified by:
getFont
in interface
AccessibleComponent
Returns:
the font, if supported, for the object; otherwise,
null
See Also:
AccessibleComponent.setFont(java.awt.Font)
setFont
public
void
setFont
(
Font
f)
Description copied from interface:
AccessibleComponent
Sets the font of this object.
Specified by:
setFont
in interface
AccessibleComponent
Parameters:
f
- the new font for the object
See Also:
AccessibleComponent.getFont()
getFontMetrics
public
FontMetrics
getFontMetrics
(
Font
f)
Description copied from interface:
AccessibleComponent
Gets the
FontMetrics
of this object.
Specified by:
getFontMetrics
in interface
AccessibleComponent
Parameters:
f
- the font for which font metrics is to be obtained
Returns:
the
FontMetrics
, if supported, the object; otherwise,
null
See Also:
AccessibleComponent.getFont()
isEnabled
public
boolean
isEnabled
()
Description copied from interface:
AccessibleComponent
Determines if the object is enabled. Objects that are enabled will also
 have the
AccessibleState.ENABLED
state set in their
AccessibleStateSets
.
Specified by:
isEnabled
in interface
AccessibleComponent
Returns:
true
if object is enabled; otherwise,
false
See Also:
AccessibleComponent.setEnabled(boolean)
AccessibleContext.getAccessibleStateSet()
AccessibleState.ENABLED
AccessibleStateSet
setEnabled
public
void
setEnabled
(boolean b)
Description copied from interface:
AccessibleComponent
Sets the enabled state of the object.
Specified by:
setEnabled
in interface
AccessibleComponent
Parameters:
b
- if
true
, enables this object; otherwise, disables it
See Also:
AccessibleComponent.isEnabled()
isVisible
public
boolean
isVisible
()
Description copied from interface:
AccessibleComponent
Determines if the object is visible. Note: this means that the object
 intends to be visible; however, it may not be showing on the screen
 because one of the objects that this object is contained by is currently
 not visible. To determine if an object is showing on the screen, use
AccessibleComponent.isShowing()
Objects that are visible will also have the
AccessibleState.VISIBLE
state set in their
AccessibleStateSets
.
Specified by:
isVisible
in interface
AccessibleComponent
Returns:
true
if object is visible; otherwise,
false
See Also:
AccessibleComponent.setVisible(boolean)
AccessibleContext.getAccessibleStateSet()
AccessibleState.VISIBLE
AccessibleStateSet
setVisible
public
void
setVisible
(boolean b)
Description copied from interface:
AccessibleComponent
Sets the visible state of the object.
Specified by:
setVisible
in interface
AccessibleComponent
Parameters:
b
- if
true
, shows this object; otherwise, hides it
See Also:
AccessibleComponent.isVisible()
isShowing
public
boolean
isShowing
()
Description copied from interface:
AccessibleComponent
Determines if the object is showing. This is determined by checking the
 visibility of the object and its ancestors. Note: this will return
true
even if the object is obscured by another (for example, it
 is underneath a menu that was pulled down).
Specified by:
isShowing
in interface
AccessibleComponent
Returns:
true
if object is showing; otherwise,
false
contains
public
boolean
contains
(
Point
p)
Description copied from interface:
AccessibleComponent
Checks whether the specified point is within this object's bounds, where
 the point's x and y coordinates are defined to be relative to the
 coordinate system of the object.
Specified by:
contains
in interface
AccessibleComponent
Parameters:
p
- the point relative to the coordinate system of the object
Returns:
true
if object contains point; otherwise
false
See Also:
AccessibleComponent.getBounds()
getLocationOnScreen
public
Point
getLocationOnScreen
()
Description copied from interface:
AccessibleComponent
Returns the location of the object on the screen.
Specified by:
getLocationOnScreen
in interface
AccessibleComponent
Returns:
the location of the object on screen;
null
if this object
         is not on the screen
See Also:
AccessibleComponent.getBounds()
AccessibleComponent.getLocation()
getLocation
public
Point
getLocation
()
Description copied from interface:
AccessibleComponent
Gets the location of the object relative to the parent in the form of a
 point specifying the object's top-left corner in the screen's coordinate
 space.
Specified by:
getLocation
in interface
AccessibleComponent
Returns:
An instance of
Point
representing the top-left corner of
         the object's bounds in the coordinate space of the screen;
null
if this object or its parent are not on the screen
See Also:
AccessibleComponent.getBounds()
AccessibleComponent.getLocationOnScreen()
setLocation
public
void
setLocation
(
Point
p)
Description copied from interface:
AccessibleComponent
Sets the location of the object relative to the parent.
Specified by:
setLocation
in interface
AccessibleComponent
Parameters:
p
- the new position for the top-left corner
See Also:
AccessibleComponent.getLocation()
getBounds
public
Rectangle
getBounds
()
Description copied from interface:
AccessibleComponent
Gets the bounds of this object in the form of a
Rectangle
object.
 The bounds specify this object's width, height, and location relative to
 its parent.
Specified by:
getBounds
in interface
AccessibleComponent
Returns:
A rectangle indicating this component's bounds;
null
if
         this object is not on the screen.
See Also:
AccessibleComponent.contains(java.awt.Point)
setBounds
public
void
setBounds
(
Rectangle
r)
Description copied from interface:
AccessibleComponent
Sets the bounds of this object in the form of a
Rectangle
object.
 The bounds specify this object's width, height, and location relative to
 its parent.
Specified by:
setBounds
in interface
AccessibleComponent
Parameters:
r
- rectangle indicating this component's bounds
See Also:
AccessibleComponent.getBounds()
getSize
public
Dimension
getSize
()
Description copied from interface:
AccessibleComponent
Returns the size of this object in the form of a
Dimension
object. The
height
field of the
Dimension
object contains
 this object's height, and the
width
field of the
Dimension
object contains this object's width.
Specified by:
getSize
in interface
AccessibleComponent
Returns:
A
Dimension
object that indicates the size of this
         component;
null
if this object is not on the screen
See Also:
AccessibleComponent.setSize(java.awt.Dimension)
setSize
public
void
setSize
(
Dimension
d)
Description copied from interface:
AccessibleComponent
Resizes this object so that it has width and height.
Specified by:
setSize
in interface
AccessibleComponent
Parameters:
d
- The dimension specifying the new size of the object
See Also:
AccessibleComponent.getSize()
getAccessibleAt
public
Accessible
getAccessibleAt
(
Point
p)
Description copied from interface:
AccessibleComponent
Returns the
Accessible
child, if one exists, contained at the
 local coordinate
Point
.
Specified by:
getAccessibleAt
in interface
AccessibleComponent
Parameters:
p
- The point relative to the coordinate system of this object
Returns:
the
Accessible
, if it exists, at the specified location;
         otherwise
null
isFocusTraversable
public
boolean
isFocusTraversable
()
Description copied from interface:
AccessibleComponent
Returns whether this object can accept focus or not. Objects that can
 accept focus will also have the
AccessibleState.FOCUSABLE
state
 set in their
AccessibleStateSets
.
Specified by:
isFocusTraversable
in interface
AccessibleComponent
Returns:
true
if object can accept focus; otherwise
false
See Also:
AccessibleContext.getAccessibleStateSet()
AccessibleState.FOCUSABLE
AccessibleState.FOCUSED
AccessibleStateSet
requestFocus
public
void
requestFocus
()
Description copied from interface:
AccessibleComponent
Requests focus for this object. If this object cannot accept focus,
 nothing will happen. Otherwise, the object will attempt to take focus.
Specified by:
requestFocus
in interface
AccessibleComponent
See Also:
AccessibleComponent.isFocusTraversable()
addFocusListener
public
void
addFocusListener
(
FocusListener
l)
Description copied from interface:
AccessibleComponent
Adds the specified focus listener to receive focus events from this
 component.
Specified by:
addFocusListener
in interface
AccessibleComponent
Parameters:
l
- the focus listener
See Also:
AccessibleComponent.removeFocusListener(java.awt.event.FocusListener)
removeFocusListener
public
void
removeFocusListener
(
FocusListener
l)
Description copied from interface:
AccessibleComponent
Removes the specified focus listener so it no longer receives focus
 events from this component.
Specified by:
removeFocusListener
in interface
AccessibleComponent
Parameters:
l
- the focus listener
See Also:
AccessibleComponent.addFocusListener(java.awt.event.FocusListener)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.