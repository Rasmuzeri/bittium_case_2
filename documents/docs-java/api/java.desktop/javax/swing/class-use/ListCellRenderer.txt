Uses of Interface javax.swing.ListCellRenderer (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
javax.swing.ListCellRenderer
Packages that use
ListCellRenderer
Package
Description
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
Uses of
ListCellRenderer
in
javax.swing
Classes in
javax.swing
that implement
ListCellRenderer
Modifier and Type
Class
Description
class
DefaultListCellRenderer
Renders an item in a list.
static class
DefaultListCellRenderer.UIResource
A subclass of DefaultListCellRenderer that implements UIResource.
Fields in
javax.swing
declared as
ListCellRenderer
Modifier and Type
Field
Description
protected
ListCellRenderer
<? super
E
>
JComboBox.
renderer
This protected field is implementation specific.
Methods in
javax.swing
that return
ListCellRenderer
Modifier and Type
Method
Description
ListCellRenderer
<? super
E
>
JList.
getCellRenderer
()
Returns the object responsible for painting list items.
ListCellRenderer
<? super
E
>
JComboBox.
getRenderer
()
Returns the renderer used to display the selected item in the
JComboBox
field.
Methods in
javax.swing
with parameters of type
ListCellRenderer
Modifier and Type
Method
Description
void
JList.
setCellRenderer
(
ListCellRenderer
<? super
E
> cellRenderer)
Sets the delegate that is used to paint each cell in the list.
void
JComboBox.
setRenderer
(
ListCellRenderer
<? super
E
> aRenderer)
Sets the renderer that paints the list items and the item selected from the list in
 the JComboBox field.
Uses of
ListCellRenderer
in
javax.swing.plaf.basic
Classes in
javax.swing.plaf.basic
that implement
ListCellRenderer
Modifier and Type
Class
Description
class
BasicComboBoxRenderer
ComboBox renderer
static class
BasicComboBoxRenderer.UIResource
A subclass of BasicComboBoxRenderer that implements UIResource.
Methods in
javax.swing.plaf.basic
that return
ListCellRenderer
Modifier and Type
Method
Description
protected
ListCellRenderer
<
Object
>
BasicComboBoxUI.
createRenderer
()
Creates the default renderer that will be used in a non-editiable combo
 box.
Methods in
javax.swing.plaf.basic
with parameters of type
ListCellRenderer
Modifier and Type
Method
Description
protected void
BasicListUI.
paintCell
(
Graphics
g,
 int row,
Rectangle
rowBounds,
ListCellRenderer
<
Object
> cellRenderer,
ListModel
<
Object
> dataModel,
ListSelectionModel
selModel,
 int leadIndex)
Paint one List cell: compute the relevant state, get the "rubber stamp"
 cell renderer component, and then use the
CellRendererPane
to paint it.
Uses of
ListCellRenderer
in
javax.swing.plaf.metal
Classes in
javax.swing.plaf.metal
that implement
ListCellRenderer
Modifier and Type
Class
Description
protected class
MetalFileChooserUI.FileRenderer
Deprecated.
As of JDK version 9.
class
MetalFileChooserUI.FilterComboBoxRenderer
Render different type sizes and styles.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.