Uses of Interface javax.swing.Action (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
javax.swing.Action
Packages that use
Action
Package
Description
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
Uses of
Action
in
javax.swing
Classes in
javax.swing
that implement
Action
Modifier and Type
Class
Description
class
AbstractAction
This class provides default implementations for the JFC
Action
interface.
Methods in
javax.swing
that return
Action
Modifier and Type
Method
Description
Action
ActionMap.
get
(
Object
key)
Returns the binding for
key
, messaging the
 parent
ActionMap
if the binding is not locally defined.
Action
AbstractButton.
getAction
()
Returns the currently set
Action
for this
ActionEvent
source, or
null
if no
Action
is set.
Action
JComboBox.
getAction
()
Returns the currently set
Action
for this
ActionEvent
source, or
null
if no
Action
is set.
Action
JTextField.
getAction
()
Returns the currently set
Action
for this
ActionEvent
source, or
null
if no
Action
is set.
protected
Action
[]
JFormattedTextField.AbstractFormatter.
getActions
()
Subclass and override if you wish to provide a custom set of
Action
s.
Action
[]
JFormattedTextField.
getActions
()
Fetches the command list for the editor.
Action
[]
JTextField.
getActions
()
Fetches the command list for the editor.
static
Action
TransferHandler.
getCopyAction
()
Returns an
Action
that performs copy operations to the
 clipboard.
static
Action
TransferHandler.
getCutAction
()
Returns an
Action
that performs cut operations to the
 clipboard.
static
Action
TransferHandler.
getPasteAction
()
Returns an
Action
that performs paste operations from the
 clipboard.
Methods in
javax.swing
with parameters of type
Action
Modifier and Type
Method
Description
protected void
AbstractButton.
actionPropertyChanged
(
Action
action,
String
propertyName)
Updates the button's state in response to property changes in the
 associated action.
protected void
JComboBox.
actionPropertyChanged
(
Action
action,
String
propertyName)
Updates the combobox's state in response to property changes in
 associated action.
protected void
JMenuItem.
actionPropertyChanged
(
Action
action,
String
propertyName)
Updates the button's state in response to property changes in the
 associated action.
protected void
JTextField.
actionPropertyChanged
(
Action
action,
String
propertyName)
Updates the textfield's state in response to property changes in
 associated action.
JMenuItem
JMenu.
add
(
Action
a)
Creates a new menu item attached to the specified
Action
object
 and appends it to the end of this menu.
JMenuItem
JPopupMenu.
add
(
Action
a)
Appends a new menu item to the end of the menu which
 dispatches the specified
Action
object.
JButton
JToolBar.
add
(
Action
a)
Adds a new
JButton
which dispatches the action.
protected void
AbstractButton.
configurePropertiesFromAction
(
Action
a)
Sets the properties on this button to match those in the specified
Action
.
protected void
JComboBox.
configurePropertiesFromAction
(
Action
a)
Sets the properties on this combobox to match those in the specified
Action
.
protected void
JMenuItem.
configurePropertiesFromAction
(
Action
a)
Sets the properties on this button to match those in the specified
Action
.
protected void
JTextField.
configurePropertiesFromAction
(
Action
a)
Sets the properties on this textfield to match those in the specified
Action
.
protected
JMenuItem
JMenu.
createActionComponent
(
Action
a)
Factory method which creates the
JMenuItem
for
Action
s added to the
JMenu
.
protected
JMenuItem
JPopupMenu.
createActionComponent
(
Action
a)
Factory method which creates the
JMenuItem
for
Actions
added to the
JPopupMenu
.
protected
JButton
JToolBar.
createActionComponent
(
Action
a)
Factory method which creates the
JButton
for
Action
s added to the
JToolBar
.
protected
PropertyChangeListener
AbstractButton.
createActionPropertyChangeListener
(
Action
a)
Creates and returns a
PropertyChangeListener
that is
 responsible for listening for changes from the specified
Action
and updating the appropriate properties.
protected
PropertyChangeListener
JComboBox.
createActionPropertyChangeListener
(
Action
a)
Creates and returns a
PropertyChangeListener
that is
 responsible for listening for changes from the specified
Action
and updating the appropriate properties.
protected
PropertyChangeListener
JTextField.
createActionPropertyChangeListener
(
Action
a)
Creates and returns a
PropertyChangeListener
that is
 responsible for listening for changes from the specified
Action
and updating the appropriate properties.
JMenuItem
JMenu.
insert
(
Action
a,
 int pos)
Inserts a new menu item attached to the specified
Action
object at a given position.
void
JPopupMenu.
insert
(
Action
a,
 int index)
Inserts a menu item for the specified
Action
object at
 a given position.
static boolean
SwingUtilities.
notifyAction
(
Action
action,
KeyStroke
ks,
KeyEvent
event,
Object
sender,
 int modifiers)
Invokes
actionPerformed
on
action
if
action
is non-
null
and accepts the sender object.
void
ActionMap.
put
(
Object
key,
Action
action)
Adds a binding for
key
to
action
.
void
AbstractButton.
setAction
(
Action
a)
Sets the
Action
.
void
JComboBox.
setAction
(
Action
a)
Sets the
Action
for the
ActionEvent
source.
void
JTextField.
setAction
(
Action
a)
Sets the
Action
for the
ActionEvent
source.
Constructors in
javax.swing
with parameters of type
Action
Modifier
Constructor
Description
JButton
(
Action
a)
Creates a button where properties are taken from the
Action
supplied.
JCheckBox
(
Action
a)
Creates a check box where properties are taken from the
 Action supplied.
JCheckBoxMenuItem
(
Action
a)
Creates a menu item whose properties are taken from the
 Action supplied.
JMenu
(
Action
a)
Constructs a menu whose properties are taken from the
Action
supplied.
JMenuItem
(
Action
a)
Creates a menu item whose properties are taken from the
 specified
Action
.
JRadioButton
(
Action
a)
Creates a radiobutton where properties are taken from the
 Action supplied.
JRadioButtonMenuItem
(
Action
a)
Creates a radio button menu item whose properties are taken from the
Action
supplied.
JToggleButton
(
Action
a)
Creates a toggle button where properties are taken from the
 Action supplied.
Uses of
Action
in
javax.swing.plaf.basic
Classes in
javax.swing.plaf.basic
that implement
Action
Modifier and Type
Class
Description
protected class
BasicDesktopPaneUI.CloseAction
Handles closing an internal frame.
protected class
BasicDesktopPaneUI.MaximizeAction
Handles maximizing an internal frame.
protected class
BasicDesktopPaneUI.MinimizeAction
Handles minimizing an internal frame.
protected class
BasicDesktopPaneUI.NavigateAction
Handles navigating to the next internal frame.
protected class
BasicDesktopPaneUI.OpenAction
Handles restoring a minimized or maximized internal frame.
protected class
BasicFileChooserUI.ApproveSelectionAction
Responds to an Open or Save request
protected class
BasicFileChooserUI.CancelSelectionAction
Responds to a cancel request.
protected class
BasicFileChooserUI.ChangeToParentDirectoryAction
Change to parent directory action.
protected class
BasicFileChooserUI.GoHomeAction
Acts on the "home" key event or equivalent event.
protected class
BasicFileChooserUI.NewFolderAction
Creates a new folder.
protected class
BasicFileChooserUI.UpdateAction
Rescans the files in the current directory
class
BasicInternalFrameTitlePane.CloseAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.IconifyAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.MaximizeAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.MoveAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.RestoreAction
This class should be treated as a "protected" inner class.
class
BasicInternalFrameTitlePane.SizeAction
This class should be treated as a "protected" inner class.
class
BasicSliderUI.ActionScroller
As of Java 2 platform v1.3 this undocumented class is no longer used.
class
BasicTreeUI.TreeCancelEditingAction
ActionListener that invokes cancelEditing when action performed.
class
BasicTreeUI.TreeHomeAction
TreeHomeAction is used to handle end/home actions.
class
BasicTreeUI.TreeIncrementAction
TreeIncrementAction is used to handle up/down actions.
class
BasicTreeUI.TreePageAction
TreePageAction handles page up and page down events.
class
BasicTreeUI.TreeToggleAction
For the first selected row expandedness will be toggled.
class
BasicTreeUI.TreeTraverseAction
TreeTraverseAction
is the action used for left/right keys.
Fields in
javax.swing.plaf.basic
declared as
Action
Modifier and Type
Field
Description
protected
Action
BasicInternalFrameTitlePane.
closeAction
The instance of a
CloseAction
.
protected
Action
BasicInternalFrameTitlePane.
iconifyAction
The instance of an
IconifyAction
.
protected
Action
BasicInternalFrameTitlePane.
maximizeAction
The instance of a
MaximizeAction
.
protected
Action
BasicInternalFrameTitlePane.
moveAction
The instance of a
MoveAction
.
protected
Action
BasicTreeUI.KeyHandler.
repeatKeyAction
Key code that is being generated for.
protected
Action
BasicInternalFrameTitlePane.
restoreAction
The instance of a
RestoreAction
.
protected
Action
BasicInternalFrameTitlePane.
sizeAction
The instance of a
SizeAction
.
Methods in
javax.swing.plaf.basic
that return
Action
Modifier and Type
Method
Description
protected
Action
BasicLookAndFeel.
createAudioAction
(
Object
key)
Creates and returns an
Action
used to play a sound.
Action
BasicFileChooserUI.
getApproveSelectionAction
()
Returns an approve selection action.
Action
BasicFileChooserUI.
getCancelSelectionAction
()
Returns a cancel selection action.
Action
BasicFileChooserUI.
getChangeToParentDirectoryAction
()
Returns a change to parent directory action.
Action
BasicFileChooserUI.
getGoHomeAction
()
Returns a go home action.
Action
BasicFileChooserUI.
getNewFolderAction
()
Returns a new folder action.
Action
BasicFileChooserUI.
getUpdateAction
()
Returns an update action.
Methods in
javax.swing.plaf.basic
with parameters of type
Action
Modifier and Type
Method
Description
protected void
BasicLookAndFeel.
playSound
(
Action
audioAction)
If necessary, invokes
actionPerformed
on
audioAction
to play a sound.
Uses of
Action
in
javax.swing.plaf.metal
Classes in
javax.swing.plaf.metal
that implement
Action
Modifier and Type
Class
Description
protected class
MetalFileChooserUI.DirectoryComboBoxAction
Acts when DirectoryComboBox has changed the selected item.
Uses of
Action
in
javax.swing.text
Classes in
javax.swing.text
that implement
Action
Modifier and Type
Class
Description
static class
DefaultEditorKit.BeepAction
Creates a beep.
static class
DefaultEditorKit.CopyAction
Copies the selected region and place its contents
 into the system clipboard.
static class
DefaultEditorKit.CutAction
Cuts the selected region and place its contents
 into the system clipboard.
static class
DefaultEditorKit.DefaultKeyTypedAction
The action that is executed by default if
 a
key typed event
is received and there
 is no keymap entry.
static class
DefaultEditorKit.InsertBreakAction
Places a line/paragraph break into the document.
static class
DefaultEditorKit.InsertContentAction
Places content into the associated document.
static class
DefaultEditorKit.InsertTabAction
Places a tab character into the document.
static class
DefaultEditorKit.PasteAction
Pastes the contents of the system clipboard into the
 selected region, or before the caret if nothing is
 selected.
static class
StyledEditorKit.AlignmentAction
An action to set paragraph alignment.
static class
StyledEditorKit.BoldAction
An action to toggle the bold attribute.
static class
StyledEditorKit.FontFamilyAction
An action to set the font family in the associated
 JEditorPane.
static class
StyledEditorKit.FontSizeAction
An action to set the font size in the associated
 JEditorPane.
static class
StyledEditorKit.ForegroundAction
An action to set foreground color.
static class
StyledEditorKit.ItalicAction
An action to toggle the italic attribute.
static class
StyledEditorKit.StyledTextAction
An action that assumes it's being fired on a JEditorPane
 with a StyledEditorKit (or subclass) installed.
static class
StyledEditorKit.UnderlineAction
An action to toggle the underline attribute.
class
TextAction
An Action implementation useful for key bindings that are
 shared across a number of different text components.
Methods in
javax.swing.text
that return
Action
Modifier and Type
Method
Description
static final
Action
[]
TextAction.
augmentList
(
Action
[] list1,
Action
[] list2)
Takes one list of
 commands and augments it with another list
 of commands.
Action
Keymap.
getAction
(
KeyStroke
key)
Fetches the action appropriate for the given symbolic
 event sequence.
Action
[]
DefaultEditorKit.
getActions
()
Fetches the set of commands that can be used
 on a text component that is using a model and
 view produced by this kit.
abstract
Action
[]
EditorKit.
getActions
()
Fetches the set of commands that can be used
 on a text component that is using a model and
 view produced by this kit.
protected
Action
[]
InternationalFormatter.
getActions
()
If
getSupportsIncrement
returns true, this returns
 two Actions suitable for incrementing/decrementing the value.
Action
[]
JTextComponent.
getActions
()
Fetches the command list for the editor.
Action
[]
StyledEditorKit.
getActions
()
Fetches the command list for the editor.
Action
[]
Keymap.
getBoundActions
()
Fetches all of the actions defined in this keymap.
Action
Keymap.
getDefaultAction
()
Fetches the default action to fire if a
 key is typed (i.e. a KEY_TYPED KeyEvent is received)
 and there is no binding for it.
Methods in
javax.swing.text
with parameters of type
Action
Modifier and Type
Method
Description
void
Keymap.
addActionForKeyStroke
(
KeyStroke
key,
Action
a)
Adds a binding to the keymap.
static final
Action
[]
TextAction.
augmentList
(
Action
[] list1,
Action
[] list2)
Takes one list of
 commands and augments it with another list
 of commands.
KeyStroke
[]
Keymap.
getKeyStrokesForAction
(
Action
a)
Fetches the keystrokes that will result in
 the given action.
static void
JTextComponent.
loadKeymap
(
Keymap
map,
JTextComponent.KeyBinding
[] bindings,
Action
[] actions)
Loads a keymap with a bunch of
 bindings.
void
Keymap.
setDefaultAction
(
Action
a)
Set the default action to fire if a key is typed.
Uses of
Action
in
javax.swing.text.html
Classes in
javax.swing.text.html
that implement
Action
Modifier and Type
Class
Description
static class
HTMLEditorKit.HTMLTextAction
An abstract Action providing some convenience methods that may
 be useful in inserting HTML into an existing document.
static class
HTMLEditorKit.InsertHTMLTextAction
InsertHTMLTextAction can be used to insert an arbitrary string of HTML
 into an existing HTML document.
Methods in
javax.swing.text.html
that return
Action
Modifier and Type
Method
Description
Action
[]
HTMLEditorKit.
getActions
()
Fetches the command list for the editor.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.