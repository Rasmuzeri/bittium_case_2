Uses of Interface javax.swing.ButtonModel (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
javax.swing.ButtonModel
Packages that use
ButtonModel
Package
Description
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
Uses of
ButtonModel
in
javax.swing
Classes in
javax.swing
that implement
ButtonModel
Modifier and Type
Class
Description
class
DefaultButtonModel
The default implementation of a
Button
component's data model.
static class
JToggleButton.ToggleButtonModel
The ToggleButton model
Fields in
javax.swing
declared as
ButtonModel
Modifier and Type
Field
Description
protected
ButtonModel
AbstractButton.
model
The data model that determines the button's state.
Methods in
javax.swing
that return
ButtonModel
Modifier and Type
Method
Description
ButtonModel
AbstractButton.
getModel
()
Returns the model that this button represents.
ButtonModel
ButtonGroup.
getSelection
()
Returns the model of the selected button.
Methods in
javax.swing
with parameters of type
ButtonModel
Modifier and Type
Method
Description
boolean
ButtonGroup.
isSelected
(
ButtonModel
m)
Returns whether a
ButtonModel
is selected.
void
AbstractButton.
setModel
(
ButtonModel
newModel)
Sets the model that this button represents.
void
JMenu.
setModel
(
ButtonModel
newModel)
Sets the data model for the "menu button" -- the label
 that the user clicks to open or close the menu.
void
JMenuItem.
setModel
(
ButtonModel
newModel)
Sets the model that this button represents.
void
ButtonGroup.
setSelected
(
ButtonModel
m,
 boolean b)
Sets the selected value for the
ButtonModel
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.