Uses of Class javax.swing.JInternalFrame (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.swing.JInternalFrame
Packages that use
JInternalFrame
Package
Description
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.event
Provides for events fired by Swing components.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.metal
Provides user interface objects built according to the Java look and feel
 (once codenamed
Metal
), which is the default look and feel.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
Uses of
JInternalFrame
in
javax.swing
Methods in
javax.swing
that return
JInternalFrame
Modifier and Type
Method
Description
JInternalFrame
JOptionPane.
createInternalFrame
(
Component
parentComponent,
String
title)
Creates and returns an instance of
JInternalFrame
.
JInternalFrame
[]
JDesktopPane.
getAllFrames
()
Returns all
JInternalFrames
currently displayed in the
 desktop.
JInternalFrame
[]
JDesktopPane.
getAllFramesInLayer
(int layer)
Returns all
JInternalFrames
currently displayed in the
 specified layer of the desktop.
JInternalFrame
JInternalFrame.JDesktopIcon.
getInternalFrame
()
Returns the
JInternalFrame
that this
DesktopIcon
is associated with.
JInternalFrame
JDesktopPane.
getSelectedFrame
()
Returns the currently active
JInternalFrame
in this
JDesktopPane
, or
null
if no
JInternalFrame
is currently active.
JInternalFrame
JDesktopPane.
selectFrame
(boolean forward)
Selects the next
JInternalFrame
in this desktop pane.
Methods in
javax.swing
with parameters of type
JInternalFrame
Modifier and Type
Method
Description
void
DefaultDesktopManager.
activateFrame
(
JInternalFrame
f)
This will activate
f
moving it to the front.
void
DesktopManager.
activateFrame
(
JInternalFrame
f)
Generally, indicate that this frame has focus.
void
DefaultDesktopManager.
closeFrame
(
JInternalFrame
f)
Removes the frame, and, if necessary, the
desktopIcon
, from its parent.
void
DesktopManager.
closeFrame
(
JInternalFrame
f)
Generally, this call should remove the frame from its parent.
void
DefaultDesktopManager.
deactivateFrame
(
JInternalFrame
f)
void
DesktopManager.
deactivateFrame
(
JInternalFrame
f)
Generally, indicate that this frame has lost focus.
void
DefaultDesktopManager.
deiconifyFrame
(
JInternalFrame
f)
Removes the desktopIcon from its parent and adds its frame
 to the parent.
void
DesktopManager.
deiconifyFrame
(
JInternalFrame
f)
Generally, remove any iconic representation that is present and restore the
 frame to it's original size and location.
protected
Rectangle
DefaultDesktopManager.
getBoundsForIconOf
(
JInternalFrame
f)
The
iconifyFrame()
code calls this to determine the proper bounds
 for the desktopIcon.
Component
InternalFrameFocusTraversalPolicy.
getInitialComponent
(
JInternalFrame
frame)
Returns the Component that should receive the focus when a
 JInternalFrame is selected for the first time.
protected
Rectangle
DefaultDesktopManager.
getPreviousBounds
(
JInternalFrame
f)
Gets the normal bounds of the component prior to the component
 being maximized.
void
DefaultDesktopManager.
iconifyFrame
(
JInternalFrame
f)
Removes the frame from its parent and adds its
desktopIcon
to the parent.
void
DesktopManager.
iconifyFrame
(
JInternalFrame
f)
Generally, remove this frame from its parent and add an iconic representation.
void
DefaultDesktopManager.
maximizeFrame
(
JInternalFrame
f)
Resizes the frame to fill its parents bounds.
void
DesktopManager.
maximizeFrame
(
JInternalFrame
f)
Generally, the frame should be resized to match its parents bounds.
void
DefaultDesktopManager.
minimizeFrame
(
JInternalFrame
f)
Restores the frame back to its size and position prior
 to a
maximizeFrame
call.
void
DesktopManager.
minimizeFrame
(
JInternalFrame
f)
Generally, this indicates that the frame should be restored to its
 size and position prior to a maximizeFrame() call.
void
DefaultDesktopManager.
openFrame
(
JInternalFrame
f)
Normally this method will not be called.
void
DesktopManager.
openFrame
(
JInternalFrame
f)
If possible, display this frame in an appropriate location.
protected void
DefaultDesktopManager.
removeIconFor
(
JInternalFrame
f)
Convenience method to remove the desktopIcon of
f
is necessary.
void
JInternalFrame.JDesktopIcon.
setInternalFrame
(
JInternalFrame
f)
Sets the
JInternalFrame
with which this
DesktopIcon
is associated.
protected void
DefaultDesktopManager.
setPreviousBounds
(
JInternalFrame
f,
Rectangle
r)
Stores the bounds of the component just before a maximize call.
void
JDesktopPane.
setSelectedFrame
(
JInternalFrame
f)
Sets the currently active
JInternalFrame
in this
JDesktopPane
.
protected void
DefaultDesktopManager.
setWasIcon
(
JInternalFrame
f,
Boolean
value)
Sets that the component has been iconized and the bounds of the
desktopIcon
are valid.
protected boolean
DefaultDesktopManager.
wasIcon
(
JInternalFrame
f)
Returns
true
if the component has been iconized
 and the bounds of the
desktopIcon
are valid,
 otherwise returns
false
.
Constructors in
javax.swing
with parameters of type
JInternalFrame
Modifier
Constructor
Description
JDesktopIcon
(
JInternalFrame
f)
Creates an icon for an internal frame.
Uses of
JInternalFrame
in
javax.swing.event
Methods in
javax.swing.event
that return
JInternalFrame
Modifier and Type
Method
Description
JInternalFrame
InternalFrameEvent.
getInternalFrame
()
Returns the originator of the event.
Constructors in
javax.swing.event
with parameters of type
JInternalFrame
Modifier
Constructor
Description
InternalFrameEvent
(
JInternalFrame
source,
 int id)
Constructs an
InternalFrameEvent
object.
Uses of
JInternalFrame
in
javax.swing.plaf.basic
Fields in
javax.swing.plaf.basic
declared as
JInternalFrame
Modifier and Type
Field
Description
protected
JInternalFrame
BasicDesktopIconUI.
frame
The instance of
JInternalFrame
.
protected
JInternalFrame
BasicInternalFrameTitlePane.
frame
The instance of
JInternalFrame
.
protected
JInternalFrame
BasicInternalFrameUI.
frame
frame
Methods in
javax.swing.plaf.basic
with parameters of type
JInternalFrame
Modifier and Type
Method
Description
protected void
BasicInternalFrameUI.
activateFrame
(
JInternalFrame
f)
This method is called when the frame becomes selected.
protected void
BasicInternalFrameUI.
closeFrame
(
JInternalFrame
f)
This method is called when the user wants to close the frame.
protected
MouseInputAdapter
BasicInternalFrameUI.
createBorderListener
(
JInternalFrame
w)
Creates the border listener.
protected
JComponent
BasicInternalFrameUI.
createEastPane
(
JInternalFrame
w)
Creates the east pane.
protected
JComponent
BasicInternalFrameUI.
createNorthPane
(
JInternalFrame
w)
Creates the north pane.
protected
JComponent
BasicInternalFrameUI.
createSouthPane
(
JInternalFrame
w)
Creates the north pane.
protected
JComponent
BasicInternalFrameUI.
createWestPane
(
JInternalFrame
w)
Creates the west pane.
protected void
BasicInternalFrameUI.
deactivateFrame
(
JInternalFrame
f)
This method is called when the frame is no longer selected.
protected void
BasicInternalFrameUI.
deiconifyFrame
(
JInternalFrame
f)
This method is called when the user wants to deiconify the frame.
protected void
BasicInternalFrameUI.
iconifyFrame
(
JInternalFrame
f)
This method is called when the user wants to iconify the frame.
protected void
BasicInternalFrameUI.
maximizeFrame
(
JInternalFrame
f)
This method is called when the user wants to maximize the frame.
protected void
BasicInternalFrameUI.
minimizeFrame
(
JInternalFrame
f)
This method is called when the user wants to minimize the frame.
protected void
BasicInternalFrameTitlePane.
postClosingEvent
(
JInternalFrame
frame)
Post a WINDOW_CLOSING-like event to the frame, so that it can
 be treated like a regular
Frame
.
Constructors in
javax.swing.plaf.basic
with parameters of type
JInternalFrame
Modifier
Constructor
Description
BasicInternalFrameTitlePane
(
JInternalFrame
f)
Constructs a new instance of
BasicInternalFrameTitlePane
.
BasicInternalFrameUI
(
JInternalFrame
b)
Constructs a
BasicInternalFrameUI
.
Uses of
JInternalFrame
in
javax.swing.plaf.metal
Methods in
javax.swing.plaf.metal
with parameters of type
JInternalFrame
Modifier and Type
Method
Description
protected
MouseInputAdapter
MetalInternalFrameUI.
createBorderListener
(
JInternalFrame
w)
Returns the
MouseInputAdapter
that will be installed
 on the TitlePane.
Constructors in
javax.swing.plaf.metal
with parameters of type
JInternalFrame
Modifier
Constructor
Description
MetalInternalFrameTitlePane
(
JInternalFrame
f)
Constructs a new instance of
MetalInternalFrameTitlePane
MetalInternalFrameUI
(
JInternalFrame
b)
Constructs a new
MetalInternalFrameUI
instance.
Uses of
JInternalFrame
in
javax.swing.plaf.synth
Constructors in
javax.swing.plaf.synth
with parameters of type
JInternalFrame
Modifier
Constructor
Description
protected
SynthInternalFrameUI
(
JInternalFrame
b)
Constructs a
SynthInternalFrameUI
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.