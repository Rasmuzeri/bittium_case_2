UIDefaults.ProxyLazyValue (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing
Class UIDefaults.ProxyLazyValue
java.lang.Object
javax.swing.UIDefaults.ProxyLazyValue
All Implemented Interfaces:
UIDefaults.LazyValue
Enclosing class:
UIDefaults
public static class
UIDefaults.ProxyLazyValue
extends
Object
implements
UIDefaults.LazyValue
This class provides an implementation of
LazyValue
which can be
 used to delay loading of the Class for the instance to be created.
 It also avoids creation of an anonymous inner class for the
LazyValue
subclass.  Both of these improve performance at the time that a
 a Look and Feel is loaded, at the cost of a slight performance
 reduction the first time
createValue
is called
 (since Reflection APIs are used).
Since:
1.3
Constructor Summary
Constructors
Constructor
Description
ProxyLazyValue
(
String
c)
Creates a
LazyValue
which will construct an instance
 when asked.
ProxyLazyValue
(
String
c,
Object
[] o)
Creates a
LazyValue
which will construct an instance
 when asked.
ProxyLazyValue
(
String
c,
String
m)
Creates a
LazyValue
which will construct an instance
 when asked.
ProxyLazyValue
(
String
c,
String
m,
Object
[] o)
Creates a
LazyValue
which will construct an instance
 when asked.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
Object
createValue
(
UIDefaults
table)
Creates the value retrieved from the
UIDefaults
table.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
ProxyLazyValue
public
ProxyLazyValue
(
String
c)
Creates a
LazyValue
which will construct an instance
 when asked.
Parameters:
c
- a
String
specifying the classname
             of the instance to be created on demand
ProxyLazyValue
public
ProxyLazyValue
(
String
c,
String
m)
Creates a
LazyValue
which will construct an instance
 when asked.
Parameters:
c
- a
String
specifying the classname of
              the class
              containing a static method to be called for
              instance creation
m
- a
String
specifying the static
              method to be called on class c
ProxyLazyValue
public
ProxyLazyValue
(
String
c,
Object
[] o)
Creates a
LazyValue
which will construct an instance
 when asked.
Parameters:
c
- a
String
specifying the classname
              of the instance to be created on demand
o
- an array of
Objects
to be passed as
              parameters to the constructor in class c
ProxyLazyValue
public
ProxyLazyValue
(
String
c,
String
m,
Object
[] o)
Creates a
LazyValue
which will construct an instance
 when asked.
Parameters:
c
- a
String
specifying the classname
              of the class
              containing a static method to be called for
              instance creation.
m
- a
String
specifying the static method
              to be called on class c
o
- an array of
Objects
to be passed as
              parameters to the static method in class c
Method Details
createValue
public
Object
createValue
(
UIDefaults
table)
Creates the value retrieved from the
UIDefaults
table.
 The object is created each time it is accessed.
Specified by:
createValue
in interface
UIDefaults.LazyValue
Parameters:
table
- a
UIDefaults
table
Returns:
the created
Object
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.