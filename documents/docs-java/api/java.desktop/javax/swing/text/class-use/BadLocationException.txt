Uses of Class javax.swing.text.BadLocationException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.swing.text.BadLocationException
Packages that use
BadLocationException
Package
Description
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
javax.swing.text.rtf
Provides a class (
RTFEditorKit
) for creating Rich-Text-Format text
 editors.
Uses of
BadLocationException
in
javax.swing
Methods in
javax.swing
that throw
BadLocationException
Modifier and Type
Method
Description
int
JTextArea.
getLineEndOffset
(int line)
Determines the offset of the end of the given line.
int
JTextArea.
getLineOfOffset
(int offset)
Translates an offset into the components text to a
 line number.
int
JTextArea.
getLineStartOffset
(int line)
Determines the offset of the start of the given line.
String
JPasswordField.
getText
(int offs,
 int len)
Deprecated.
As of Java 2 platform v1.2,
 replaced by
getPassword
.
Uses of
BadLocationException
in
javax.swing.plaf
Methods in
javax.swing.plaf
that throw
BadLocationException
Modifier and Type
Method
Description
abstract int
TextUI.
getNextVisualPositionFrom
(
JTextComponent
t,
 int pos,
Position.Bias
b,
 int direction,
Position.Bias
[] biasRet)
Provides a way to determine the next visually represented model
 location that one might place a caret.
abstract
Rectangle
TextUI.
modelToView
(
JTextComponent
t,
 int pos)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
abstract
Rectangle
TextUI.
modelToView
(
JTextComponent
t,
 int pos,
Position.Bias
bias)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Rectangle2D
TextUI.
modelToView2D
(
JTextComponent
t,
 int pos,
Position.Bias
bias)
Converts the given location in the model to a place in
 the view coordinate system.
Uses of
BadLocationException
in
javax.swing.plaf.basic
Methods in
javax.swing.plaf.basic
that throw
BadLocationException
Modifier and Type
Method
Description
int
BasicTextUI.
getNextVisualPositionFrom
(
JTextComponent
t,
 int pos,
Position.Bias
b,
 int direction,
Position.Bias
[] biasRet)
Provides a way to determine the next visually represented model
 location that one might place a caret.
Rectangle
BasicTextUI.
modelToView
(
JTextComponent
tc,
 int pos)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Rectangle
BasicTextUI.
modelToView
(
JTextComponent
tc,
 int pos,
Position.Bias
bias)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Uses of
BadLocationException
in
javax.swing.plaf.multi
Methods in
javax.swing.plaf.multi
that throw
BadLocationException
Modifier and Type
Method
Description
int
MultiTextUI.
getNextVisualPositionFrom
(
JTextComponent
a,
 int b,
Position.Bias
c,
 int d,
Position.Bias
[] e)
Invokes the
getNextVisualPositionFrom
method on each UI handled by this object.
Rectangle
MultiTextUI.
modelToView
(
JTextComponent
a,
 int b)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Rectangle
MultiTextUI.
modelToView
(
JTextComponent
a,
 int b,
Position.Bias
c)
Deprecated.
replaced by
TextUI.modelToView2D(JTextComponent, int, Position.Bias)
Uses of
BadLocationException
in
javax.swing.text
Methods in
javax.swing.text
that throw
BadLocationException
Modifier and Type
Method
Description
Object
DefaultHighlighter.
addHighlight
(int p0,
 int p1,
Highlighter.HighlightPainter
p)
Adds a highlight to the view.
Object
Highlighter.
addHighlight
(int p0,
 int p1,
Highlighter.HighlightPainter
p)
Adds a highlight to the view.
void
DefaultHighlighter.
changeHighlight
(
Object
tag,
 int p0,
 int p1)
Changes a highlight.
void
Highlighter.
changeHighlight
(
Object
tag,
 int p0,
 int p1)
Changes the given highlight to span a different portion of
 the document.
Position
AbstractDocument.Content.
createPosition
(int offset)
Creates a position within the content that will
 track change as the content is mutated.
Position
AbstractDocument.
createPosition
(int offs)
Returns a position that will track change as the document
 is altered.
Position
Document.
createPosition
(int offs)
This method allows an application to mark a place in
 a sequence of character content.
Position
GapContent.
createPosition
(int offset)
Creates a position within the content that will
 track change as the content is mutated.
Position
StringContent.
createPosition
(int offset)
Creates a position within the content that will
 track change as the content is mutated.
protected int
PasswordView.
drawSelectedText
(
Graphics
g,
 int x,
 int y,
 int p0,
 int p1)
Deprecated.
replaced by
PlainView.drawSelectedText(Graphics2D, float, float, int, int)
protected float
PlainView.
drawSelectedText
(
Graphics2D
g,
 float x,
 float y,
 int p0,
 int p1)
Renders the given range in the model as selected text.
protected int
PlainView.
drawSelectedText
(
Graphics
g,
 int x,
 int y,
 int p0,
 int p1)
Deprecated.
replaced by
PlainView.drawSelectedText(Graphics2D, float, float, int, int)
protected float
WrappedPlainView.
drawSelectedText
(
Graphics2D
g,
 float x,
 float y,
 int p0,
 int p1)
Renders the given range in the model as selected text.
protected int
WrappedPlainView.
drawSelectedText
(
Graphics
g,
 int x,
 int y,
 int p0,
 int p1)
Deprecated.
replaced by
WrappedPlainView.drawSelectedText(Graphics2D, float, float, int, int)
protected int
PasswordView.
drawUnselectedText
(
Graphics
g,
 int x,
 int y,
 int p0,
 int p1)
Deprecated.
replaced by
PlainView.drawUnselectedText(Graphics2D, float, float, int, int)
protected float
PlainView.
drawUnselectedText
(
Graphics2D
g,
 float x,
 float y,
 int p0,
 int p1)
Renders the given range in the model as normal unselected
 text.
protected int
PlainView.
drawUnselectedText
(
Graphics
g,
 int x,
 int y,
 int p0,
 int p1)
Deprecated.
replaced by
PlainView.drawUnselectedText(Graphics2D, float, float, int, int)
protected float
WrappedPlainView.
drawUnselectedText
(
Graphics2D
g,
 float x,
 float y,
 int p0,
 int p1)
Renders the given range in the model as normal unselected
 text.
protected int
WrappedPlainView.
drawUnselectedText
(
Graphics
g,
 int x,
 int y,
 int p0,
 int p1)
Deprecated.
replaced by
WrappedPlainView.drawUnselectedText(Graphics2D, float, float, int, int)
void
AbstractDocument.Content.
getChars
(int where,
 int len,
Segment
txt)
Gets a sequence of characters and copies them into a Segment.
void
GapContent.
getChars
(int where,
 int len,
Segment
chars)
Retrieves a portion of the content.
void
StringContent.
getChars
(int where,
 int len,
Segment
chars)
Retrieves a portion of the content.
protected int
ParagraphView.
getClosestPositionTo
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet,
 int rowIndex,
 int x)
Returns the closest model position to
x
.
protected int
CompositeView.
getNextEastWestVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Returns the next visual position for the cursor, in either the
 east or west direction.
protected int
CompositeView.
getNextNorthSouthVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Returns the next visual position for the cursor, in either the
 north or south direction.
protected int
ParagraphView.
getNextNorthSouthVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Returns the next visual position for the cursor, in
 either the east or west direction.
int
AsyncBoxView.
getNextVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Provides a way to determine the next visually represented model
 location that one might place a caret.
int
CompositeView.
getNextVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Provides a way to determine the next visually represented model
 location that one might place a caret.
int
GlyphView.
getNextVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Provides a way to determine the next visually represented model
 location that one might place a caret.
int
GlyphView.GlyphPainter.
getNextVisualPositionFrom
(
GlyphView
v,
 int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Provides a way to determine the next visually represented model
 location that one might place a caret.
int
NavigationFilter.
getNextVisualPositionFrom
(
JTextComponent
text,
 int pos,
Position.Bias
bias,
 int direction,
Position.Bias
[] biasRet)
Returns the next visual position to place the caret at from an
 existing position.
int
View.
getNextVisualPositionFrom
(int pos,
Position.Bias
b,
Shape
a,
 int direction,
Position.Bias
[] biasRet)
Provides a way to determine the next visually represented model
 location at which one might place a caret.
static final int
Utilities.
getNextWord
(
JTextComponent
c,
 int offs)
Determines the start of the next word for the given location.
static final int
Utilities.
getPositionAbove
(
JTextComponent
c,
 int offs,
 float x)
Determines the position in the model that is closest to the given
 view location in the row above.
static final int
Utilities.
getPositionAbove
(
JTextComponent
c,
 int offs,
 int x)
Deprecated.
replaced by
Utilities.getPositionAbove(JTextComponent, int, float)
static final int
Utilities.
getPositionBelow
(
JTextComponent
c,
 int offs,
 float x)
Determines the position in the model that is closest to the given
 view location in the row below.
static final int
Utilities.
getPositionBelow
(
JTextComponent
c,
 int offs,
 int x)
Deprecated.
replaced by
Utilities.getPositionBelow(JTextComponent, int, float)
static final int
Utilities.
getPreviousWord
(
JTextComponent
c,
 int offs)
Determine the start of the prev word for the given location.
static final int
Utilities.
getRowEnd
(
JTextComponent
c,
 int offs)
Determines the ending row model position of the row that contains
 the specified model position.
static final int
Utilities.
getRowStart
(
JTextComponent
c,
 int offs)
Determines the starting row model position of the row that contains
 the specified model position.
String
AbstractDocument.Content.
getString
(int where,
 int len)
Fetches a string of characters contained in the sequence.
String
GapContent.
getString
(int where,
 int len)
Retrieves a portion of the content.
String
StringContent.
getString
(int where,
 int len)
Retrieves a portion of the content.
String
AbstractDocument.
getText
(int offset,
 int length)
Gets a sequence of text from the document.
void
AbstractDocument.
getText
(int offset,
 int length,
Segment
txt)
Fetches the text contained within the given portion
 of the document.
protected
String
AbstractWriter.
getText
(
Element
elem)
Returns the text associated with the element.
String
Document.
getText
(int offset,
 int length)
Fetches the text contained within the given portion
 of the document.
void
Document.
getText
(int offset,
 int length,
Segment
txt)
Fetches the text contained within the given portion
 of the document.
String
JTextComponent.
getText
(int offs,
 int len)
Fetches a portion of the text represented by the
 component.
static final int
Utilities.
getWordEnd
(
JTextComponent
c,
 int offs)
Determines the end of a word for the given location.
static final int
Utilities.
getWordStart
(
JTextComponent
c,
 int offs)
Determines the start of a word for the given model location.
protected void
DefaultStyledDocument.
insert
(int offset,
DefaultStyledDocument.ElementSpec
[] data)
Inserts new elements in bulk.
UndoableEdit
AbstractDocument.Content.
insertString
(int where,
String
str)
Inserts a string of characters into the sequence.
void
AbstractDocument.
insertString
(int offs,
String
str,
AttributeSet
a)
Inserts some content into the document.
void
Document.
insertString
(int offset,
String
str,
AttributeSet
a)
Inserts a string of content.
abstract void
DocumentFilter.FilterBypass.
insertString
(int offset,
String
string,
AttributeSet
attr)
Inserts the specified text, bypassing the
 DocumentFilter.
void
DocumentFilter.
insertString
(
DocumentFilter.FilterBypass
fb,
 int offset,
String
string,
AttributeSet
attr)
Invoked prior to insertion of text into the
 specified Document.
UndoableEdit
GapContent.
insertString
(int where,
String
str)
Inserts a string into the content.
void
PlainDocument.
insertString
(int offs,
String
str,
AttributeSet
a)
Inserts some content into the document.
UndoableEdit
StringContent.
insertString
(int where,
String
str)
Inserts a string into the content.
Shape
AsyncBoxView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Shape
BoxView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Shape
ComponentView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the coordinate space of the model to
 that of the view.
Shape
CompositeView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Shape
CompositeView.
modelToView
(int p0,
Position.Bias
b0,
 int p1,
Position.Bias
b1,
Shape
a)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Shape
FieldView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
abstract
Shape
GlyphView.GlyphPainter.
modelToView
(
GlyphView
v,
 int pos,
Position.Bias
bias,
Shape
a)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Shape
GlyphView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Shape
IconView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Rectangle
JTextComponent.
modelToView
(int pos)
Deprecated.
replaced by
JTextComponent.modelToView2D(int)
Shape
PasswordView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Shape
PlainView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
Shape
View.
modelToView
(int pos,
Shape
a)
Deprecated.
abstract
Shape
View.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping, for a given character,
 from the document model coordinate space
 to the view coordinate space.
Shape
View.
modelToView
(int p0,
Position.Bias
b0,
 int p1,
Position.Bias
b1,
Shape
a)
Provides a mapping, for a given region,
 from the document model coordinate space
 to the view coordinate space.
Rectangle2D
JTextComponent.
modelToView2D
(int pos)
Converts the given location in the model to a place in
 the view coordinate system.
void
DefaultEditorKit.
read
(
InputStream
in,
Document
doc,
 int pos)
Inserts content from the given stream which is expected
 to be in a format appropriate for this kind of content
 handler.
void
DefaultEditorKit.
read
(
Reader
in,
Document
doc,
 int pos)
Inserts content from the given stream, which will be
 treated as plain text.
abstract void
EditorKit.
read
(
InputStream
in,
Document
doc,
 int pos)
Inserts content from the given stream which is expected
 to be in a format appropriate for this kind of content
 handler.
abstract void
EditorKit.
read
(
Reader
in,
Document
doc,
 int pos)
Inserts content from the given stream which is expected
 to be in a format appropriate for this kind of content
 handler.
UndoableEdit
AbstractDocument.Content.
remove
(int where,
 int nitems)
Removes some portion of the sequence.
void
AbstractDocument.
remove
(int offs,
 int len)
Removes some content from the document.
void
Document.
remove
(int offs,
 int len)
Removes a portion of the content of the document.
abstract void
DocumentFilter.FilterBypass.
remove
(int offset,
 int length)
Removes the specified region of text, bypassing the
 DocumentFilter.
void
DocumentFilter.
remove
(
DocumentFilter.FilterBypass
fb,
 int offset,
 int length)
Invoked prior to removal of the specified region in the
 specified Document.
UndoableEdit
GapContent.
remove
(int where,
 int nitems)
Removes part of the content.
UndoableEdit
StringContent.
remove
(int where,
 int nitems)
Removes part of the content.
void
AbstractDocument.
replace
(int offset,
 int length,
String
text,
AttributeSet
attrs)
Deletes the region of text from
offset
to
offset + length
, and replaces it with
text
.
abstract void
DocumentFilter.FilterBypass.
replace
(int offset,
 int length,
String
string,
AttributeSet
attrs)
Deletes the region of text from
offset
to
offset + length
, and replaces it with
text
.
void
DocumentFilter.
replace
(
DocumentFilter.FilterBypass
fb,
 int offset,
 int length,
String
text,
AttributeSet
attrs)
Invoked prior to replacing a region of text in the
 specified Document.
protected void
AbstractWriter.
text
(
Element
elem)
Writes out text.
protected abstract void
AbstractWriter.
write
()
This abstract method needs to be implemented
 by subclasses.
void
DefaultEditorKit.
write
(
OutputStream
out,
Document
doc,
 int pos,
 int len)
Writes content from a document to the given stream
 in a format appropriate for this kind of content handler.
void
DefaultEditorKit.
write
(
Writer
out,
Document
doc,
 int pos,
 int len)
Writes content from a document to the given stream
 as plain text.
abstract void
EditorKit.
write
(
OutputStream
out,
Document
doc,
 int pos,
 int len)
Writes content from a document to the given stream
 in a format appropriate for this kind of content handler.
abstract void
EditorKit.
write
(
Writer
out,
Document
doc,
 int pos,
 int len)
Writes content from a document to the given stream
 in a format appropriate for this kind of content handler.
Uses of
BadLocationException
in
javax.swing.text.html
Methods in
javax.swing.text.html
that throw
BadLocationException
Modifier and Type
Method
Description
protected void
HTMLWriter.
comment
(
Element
elem)
Writes out comments.
protected void
HTMLWriter.
emptyTag
(
Element
elem)
Writes out all empty elements (all tags that have no
 corresponding end tag).
void
HTMLDocument.HTMLReader.
flush
()
The last method called on the reader.
void
HTMLEditorKit.ParserCallback.
flush
()
The last method called on the reader.
protected void
HTMLDocument.
insert
(int offset,
DefaultStyledDocument.ElementSpec
[] data)
Inserts new elements in bulk.
void
HTMLDocument.
insertAfterEnd
(
Element
elem,
String
htmlText)
Inserts the HTML specified as a string after the end of the
 given element.
void
HTMLDocument.
insertAfterStart
(
Element
elem,
String
htmlText)
Inserts the HTML specified as a string at the start
 of the element.
void
HTMLDocument.
insertBeforeEnd
(
Element
elem,
String
htmlText)
Inserts the HTML specified as a string at the end of
 the element.
void
HTMLDocument.
insertBeforeStart
(
Element
elem,
String
htmlText)
Inserts the HTML specified as a string before the start of
 the given element.
void
HTMLEditorKit.
insertHTML
(
HTMLDocument
doc,
 int offset,
String
html,
 int popDepth,
 int pushDepth,
HTML.Tag
insertTag)
Inserts HTML into an existing document.
Shape
ImageView.
modelToView
(int pos,
Shape
a,
Position.Bias
b)
Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.
void
HTMLEditorKit.
read
(
Reader
in,
Document
doc,
 int pos)
Inserts content from the given stream.
void
HTMLDocument.
setInnerHTML
(
Element
elem,
String
htmlText)
Replaces the children of the given element with the contents
 specified as an HTML string.
void
HTMLDocument.
setOuterHTML
(
Element
elem,
String
htmlText)
Replaces the given element in the parent with the contents
 specified as an HTML string.
protected void
HTMLWriter.
startTag
(
Element
elem)
Writes out a start tag for the element.
protected void
HTMLWriter.
text
(
Element
elem)
Writes out text.
protected void
MinimalHTMLWriter.
text
(
Element
elem)
Writes out text.
protected void
HTMLWriter.
textAreaContent
(
AttributeSet
attr)
Writes out text that is contained in a TEXTAREA form
 element.
void
HTMLEditorKit.
write
(
Writer
out,
Document
doc,
 int pos,
 int len)
Write content from a document to the given stream
 in a format appropriate for this kind of content handler.
void
HTMLWriter.
write
()
Iterates over the
 Element tree and controls the writing out of
 all the tags and its attributes.
void
MinimalHTMLWriter.
write
()
Generates HTML output
 from a StyledDocument.
protected void
MinimalHTMLWriter.
writeBody
()
Iterates over the elements in the document
 and processes elements based on whether they are
 branch elements or leaf elements.
protected void
MinimalHTMLWriter.
writeContent
(
Element
elem,
 boolean needsIndenting)
Writes out the attribute set
 in an HTML-compliant manner.
Uses of
BadLocationException
in
javax.swing.text.rtf
Methods in
javax.swing.text.rtf
that throw
BadLocationException
Modifier and Type
Method
Description
void
RTFEditorKit.
read
(
InputStream
in,
Document
doc,
 int pos)
Insert content from the given stream which is expected
 to be in a format appropriate for this kind of content
 handler.
void
RTFEditorKit.
read
(
Reader
in,
Document
doc,
 int pos)
Insert content from the given stream, which will be
 treated as plain text.
void
RTFEditorKit.
write
(
OutputStream
out,
Document
doc,
 int pos,
 int len)
Write content from a document to the given stream
 in a format appropriate for this kind of content handler.
void
RTFEditorKit.
write
(
Writer
out,
Document
doc,
 int pos,
 int len)
Write content from a document to the given stream
 as plain text.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.