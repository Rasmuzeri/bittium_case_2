Uses of Class javax.swing.text.View (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.swing.text.View
Packages that use
View
Package
Description
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.plaf.synth
Synth is a skinnable look and feel in which all painting is delegated.
javax.swing.text
Provides classes and interfaces that deal with editable and noneditable text
 components.
javax.swing.text.html
Provides the class
HTMLEditorKit
and supporting classes for creating
 HTML text editors.
Uses of
View
in
javax.swing.plaf
Methods in
javax.swing.plaf
that return
View
Modifier and Type
Method
Description
abstract
View
TextUI.
getRootView
(
JTextComponent
t)
Fetches a View with the allocation of the associated
 text component (i.e. the root of the hierarchy) that
 can be traversed to determine how the model is being
 represented spatially.
Uses of
View
in
javax.swing.plaf.basic
Methods in
javax.swing.plaf.basic
that return
View
Modifier and Type
Method
Description
View
BasicPasswordFieldUI.
create
(
Element
elem)
Creates a view (PasswordView) for an element.
View
BasicTextAreaUI.
create
(
Element
elem)
Creates a view for an element.
View
BasicTextFieldUI.
create
(
Element
elem)
Creates a view for an element.
View
BasicTextUI.
create
(
Element
elem)
Creates a view for an element.
View
BasicTextUI.
create
(
Element
elem,
 int p0,
 int p1)
Creates a view for an element.
static
View
BasicHTML.
createHTMLView
(
JComponent
c,
String
html)
Create an html renderer for the given component and
 string of html.
View
BasicTextUI.
getRootView
(
JTextComponent
tc)
Fetches a View with the allocation of the associated
 text component (i.e. the root of the hierarchy) that
 can be traversed to determine how the model is being
 represented spatially.
protected
View
BasicTabbedPaneUI.
getTextViewForTab
(int tabIndex)
Returns the text View object required to render stylized text (HTML) for
 the specified tab or null if no specialized text rendering is needed
 for this tab.
Methods in
javax.swing.plaf.basic
with parameters of type
View
Modifier and Type
Method
Description
static int
BasicHTML.
getHTMLBaseline
(
View
view,
 int w,
 int h)
Returns the baseline for the html renderer.
protected final void
BasicTextUI.
setView
(
View
v)
Sets the current root of the view hierarchy and calls invalidate().
Uses of
View
in
javax.swing.plaf.multi
Methods in
javax.swing.plaf.multi
that return
View
Modifier and Type
Method
Description
View
MultiTextUI.
getRootView
(
JTextComponent
a)
Invokes the
getRootView
method on each UI handled by this object.
Uses of
View
in
javax.swing.plaf.synth
Methods in
javax.swing.plaf.synth
that return
View
Modifier and Type
Method
Description
View
SynthPasswordFieldUI.
create
(
Element
elem)
Creates a view (PasswordView) for an element.
Uses of
View
in
javax.swing.text
Subclasses of
View
in
javax.swing.text
Modifier and Type
Class
Description
class
AsyncBoxView
A box that does layout asynchronously.
class
BoxView
A view that arranges its children into a box shape by tiling
 its children along an axis.
class
ComponentView
Component decorator that implements the view interface.
class
CompositeView
CompositeView
is an abstract
View
implementation which manages one or more child views.
class
FieldView
Extends the multi-line plain text view to be suitable
 for a single-line editor view.
class
FlowView
A View that tries to flow it's children into some
 partially constrained space.
class
GlyphView
A GlyphView is a styled chunk of text that represents a view
 mapped over an element in the text model.
class
IconView
Icon decorator that implements the view interface.
class
LabelView
A
LabelView
is a styled chunk of text
 that represents a view mapped over an element in the
 text model.
class
ParagraphView
View of a simple line-wrapping paragraph that supports
 multiple fonts, colors, components, icons, etc.
class
PasswordView
Implements a View suitable for use in JPasswordField
 UI implementations.
class
PlainView
Implements View interface for a simple multi-line text view
 that has text in one font and color.
class
TableView
Implements View interface for a table, that is composed of an
 element structure where the child elements of the element
 this view is responsible for represent rows and the child
 elements of the row elements are cells.
class
TableView.TableCell
Deprecated.
A table cell can now be any View implementation.
class
TableView.TableRow
View of a row in a row-centric table.
class
WrappedPlainView
View of plain text (text with only one font and color)
 that does line-wrapping.
class
ZoneView
ZoneView is a View implementation that creates zones for which
 the child views are not created or stored until they are needed
 for display or model/view translations.
Fields in
javax.swing.text
declared as
View
Modifier and Type
Field
Description
protected
View
FlowView.
layoutPool
These are the views that represent the child elements
 of the element this view represents (The logical view
 to translate to a physical view).
Methods in
javax.swing.text
that return
View
Modifier and Type
Method
Description
View
GlyphView.
breakView
(int axis,
 int p0,
 float pos,
 float len)
Breaks this view on the given axis at the given length.
View
ParagraphView.
breakView
(int axis,
 float len,
Shape
a)
Breaks this view on the given axis at the given length.
View
View.
breakView
(int axis,
 int offset,
 float pos,
 float len)
Tries to break this view on the given axis.
View
ViewFactory.
create
(
Element
elem)
Creates a view from the given structural element of a
 document.
View
GlyphView.
createFragment
(int p0,
 int p1)
Creates a view that represents a portion of the element.
View
View.
createFragment
(int p0,
 int p1)
Creates a view that represents a portion of the element.
protected abstract
View
FlowView.
createRow
()
Create a View that should be used to hold a
 a rows worth of children in a flow.
protected
View
ParagraphView.
createRow
()
Create a
View
that should be used to hold a
 a row's worth of children in a flow.
protected
View
FlowView.FlowStrategy.
createView
(
FlowView
fv,
 int startOffset,
 int spanLeft,
 int rowIndex)
Creates a view that can be used to represent the current piece
 of the flow.
protected
View
ZoneView.
createZone
(int p0,
 int p1)
Create a view to represent a zone for the given
 range within the model (which should be within
 the range of this objects responsibility).
View
AsyncBoxView.ChildState.
getChildView
()
Fetch the child view this record represents.
protected
View
ParagraphView.
getLayoutView
(int index)
Returns the view at a given
index
.
protected
View
FlowView.FlowStrategy.
getLogicalView
(
FlowView
fv)
This method gives flow strategies access to the logical
 view of the FlowView.
View
View.
getParent
()
Returns the parent of the view.
View
AsyncBoxView.
getView
(int n)
Gets the nth child view.
View
CompositeView.
getView
(int n)
Returns the n-th view in this container.
View
View.
getView
(int n)
Gets the
n
th child view.
protected
View
BoxView.
getViewAtPoint
(int x,
 int y,
Rectangle
alloc)
Fetches the child view at the given coordinates.
protected abstract
View
CompositeView.
getViewAtPoint
(int x,
 int y,
Rectangle
alloc)
Fetches the child view at the given coordinates.
protected
View
CompositeView.
getViewAtPosition
(int pos,
Rectangle
a)
Fetches the child view that represents the given position in
 the model.
protected
View
TableView.
getViewAtPosition
(int pos,
Rectangle
a)
Fetches the child view that represents the given position in
 the model.
protected
View
TableView.TableRow.
getViewAtPosition
(int pos,
Rectangle
a)
Fetches the child view that represents the given position in
 the model.
Methods in
javax.swing.text
with parameters of type
View
Modifier and Type
Method
Description
void
View.
append
(
View
v)
Appends a single child view.
protected
AsyncBoxView.ChildState
AsyncBoxView.
createChildState
(
View
v)
New ChildState records are created through
 this method to allow subclasses the extend
 the ChildState records to do/hold more.
protected void
View.
forwardUpdateToView
(
View
v,
DocumentEvent
e,
Shape
a,
ViewFactory
f)
Forwards the
DocumentEvent
to the give child view.
void
View.
insert
(int offs,
View
v)
Inserts a single child view.
protected boolean
ZoneView.
isZoneLoaded
(
View
zone)
Determine if a zone is in the loaded state.
Shape
DefaultHighlighter.DefaultHighlightPainter.
paintLayer
(
Graphics
g,
 int offs0,
 int offs1,
Shape
bounds,
JTextComponent
c,
View
view)
Paints a portion of a highlight.
abstract
Shape
LayeredHighlighter.LayerPainter.
paintLayer
(
Graphics
g,
 int p0,
 int p1,
Shape
viewBounds,
JTextComponent
editor,
View
view)
Paints a portion of a highlight.
void
DefaultHighlighter.
paintLayeredHighlights
(
Graphics
g,
 int p0,
 int p1,
Shape
viewBounds,
JTextComponent
editor,
View
view)
When leaf Views (such as LabelView) are rendering they should
 call into this method.
abstract void
LayeredHighlighter.
paintLayeredHighlights
(
Graphics
g,
 int p0,
 int p1,
Shape
viewBounds,
JTextComponent
editor,
View
view)
When leaf Views (such as LabelView) are rendering they should
 call into this method.
void
AsyncBoxView.
preferenceChanged
(
View
child,
 boolean width,
 boolean height)
Child views can call this on the parent to indicate that
 the preference has changed and should be reconsidered
 for layout.
void
BoxView.
preferenceChanged
(
View
child,
 boolean width,
 boolean height)
This is called by a child to indicate its
 preferred span has changed.
void
View.
preferenceChanged
(
View
child,
 boolean width,
 boolean height)
Child views can call this on the parent to indicate that
 the preference has changed and should be reconsidered
 for layout.
void
AsyncBoxView.
replace
(int offset,
 int length,
View
[] views)
Calls the superclass to update the child views, and
 updates the status records for the children.
void
BoxView.
replace
(int index,
 int length,
View
[] elems)
Invalidates the layout and resizes the cache of
 requests/allocations.
void
CompositeView.
replace
(int offset,
 int length,
View
[] views)
Replaces child views.
void
TableView.
replace
(int offset,
 int length,
View
[] views)
Change the child views.
void
TableView.TableRow.
replace
(int offset,
 int length,
View
[] views)
Change the child views.
void
View.
replace
(int offset,
 int length,
View
[] views)
Replaces child views.
void
AsyncBoxView.
setParent
(
View
parent)
Sets the parent of the view.
void
ComponentView.
setParent
(
View
p)
Sets the parent for a child view.
void
CompositeView.
setParent
(
View
parent)
Sets the parent of the view.
void
View.
setParent
(
View
parent)
Establishes the parent view for this view.
protected void
ZoneView.
unloadZone
(
View
zone)
Unload a zone (Convert the zone to its memory saving state).
protected void
ZoneView.
zoneWasLoaded
(
View
zone)
Called by a zone when it gets loaded.
Constructors in
javax.swing.text
with parameters of type
View
Modifier
Constructor
Description
ChildState
(
View
v)
Construct a child status.
Uses of
View
in
javax.swing.text.html
Subclasses of
View
in
javax.swing.text.html
Modifier and Type
Class
Description
class
BlockView
A view implementation to display a block (as a box)
 with CSS specifications.
class
FormView
Component decorator that implements the view interface
 for form elements, <input>, <textarea>,
 and <select>.
class
ImageView
View of an Image, intended to support the HTML <IMG> tag.
class
InlineView
Displays the
inline element
styles
 based upon css attributes.
class
ListView
A view implementation to display an html list
class
ObjectView
Component decorator that implements the view interface
 for <object> elements.
class
ParagraphView
Displays the paragraph and uses CSS attributes for its
 configuration.
Methods in
javax.swing.text.html
that return
View
Modifier and Type
Method
Description
View
InlineView.
breakView
(int axis,
 int offset,
 float pos,
 float len)
Tries to break this view on the given axis.
View
HTMLEditorKit.HTMLFactory.
create
(
Element
elem)
Creates a view from an element.
Methods in
javax.swing.text.html
with parameters of type
View
Modifier and Type
Method
Description
float
StyleSheet.BoxPainter.
getInset
(int side,
View
v)
Fetches the inset needed on a given side to
 account for the margin, border, and padding.
AttributeSet
StyleSheet.
getViewAttributes
(
View
v)
Fetches a set of attributes to use in the view for
 displaying.
void
StyleSheet.BoxPainter.
paint
(
Graphics
g,
 float x,
 float y,
 float w,
 float h,
View
v)
Paints the CSS box according to the attributes
 given.
void
StyleSheet.ListPainter.
paint
(
Graphics
g,
 float x,
 float y,
 float w,
 float h,
View
v,
 int item)
Paints the CSS list decoration according to the
 attributes given.
void
BlockView.
setParent
(
View
parent)
Establishes the parent view for this view.
void
ImageView.
setParent
(
View
parent)
Establishes the parent view for this view.
void
ParagraphView.
setParent
(
View
parent)
Establishes the parent view for this view.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.