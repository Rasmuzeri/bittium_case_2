ParagraphView (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field
|
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing.text.html
Class ParagraphView
java.lang.Object
javax.swing.text.View
javax.swing.text.CompositeView
javax.swing.text.BoxView
javax.swing.text.FlowView
javax.swing.text.ParagraphView
javax.swing.text.html.ParagraphView
All Implemented Interfaces:
SwingConstants
,
TabExpander
public class
ParagraphView
extends
ParagraphView
Displays the paragraph and uses CSS attributes for its
 configuration.
Nested Class Summary
Nested classes/interfaces declared in class javax.swing.text.
FlowView
FlowView.FlowStrategy
Field Summary
Fields declared in class javax.swing.text.
ParagraphView
firstLineIndent
Fields declared in class javax.swing.text.
FlowView
layoutPool
,
layoutSpan
,
strategy
Fields declared in class javax.swing.text.
View
BadBreakWeight
,
ExcellentBreakWeight
,
ForcedBreakWeight
,
GoodBreakWeight
,
X_AXIS
,
Y_AXIS
Fields declared in interface javax.swing.
SwingConstants
BOTTOM
,
CENTER
,
EAST
,
HORIZONTAL
,
LEADING
,
LEFT
,
NEXT
,
NORTH
,
NORTH_EAST
,
NORTH_WEST
,
PREVIOUS
,
RIGHT
,
SOUTH
,
SOUTH_EAST
,
SOUTH_WEST
,
TOP
,
TRAILING
,
VERTICAL
,
WEST
Constructor Summary
Constructors
Constructor
Description
ParagraphView
(
Element
elem)
Constructs a ParagraphView for the given element.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
protected
SizeRequirements
calculateMinorAxisRequirements
(int axis,
SizeRequirements
r)
Calculate the needs for the paragraph along the minor axis.
AttributeSet
getAttributes
()
Fetches the attributes to use when rendering.
float
getMaximumSpan
(int axis)
Determines the maximum span for this view along an
 axis.
float
getMinimumSpan
(int axis)
Determines the minimum span for this view along an
 axis.
float
getPreferredSpan
(int axis)
Determines the preferred span for this view.
protected
StyleSheet
getStyleSheet
()
Convenient method to get the StyleSheet.
boolean
isVisible
()
Indicates whether or not this view should be
 displayed.
void
paint
(
Graphics
g,
Shape
a)
Renders using the given rendering surface and area on that
 surface.
void
setParent
(
View
parent)
Establishes the parent view for this view.
protected void
setPropertiesFromAttributes
()
Sets up the paragraph from css attributes instead of
 the values found in StyleConstants (i.e. which are used
 by the superclass).
Methods declared in class javax.swing.text.
ParagraphView
breakView
,
changedUpdate
,
createRow
,
findOffsetToCharactersInString
,
flipEastAndWestAtEnds
,
getAlignment
,
getBreakWeight
,
getClosestPositionTo
,
getFlowSpan
,
getFlowStart
,
getLayoutView
,
getLayoutViewCount
,
getNextNorthSouthVisualPositionFrom
,
getPartialSize
,
getTabBase
,
getTabSet
,
nextTabStop
,
setFirstLineIndent
,
setJustification
,
setLineSpacing
Methods declared in class javax.swing.text.
FlowView
getFlowAxis
,
getViewIndexAtPosition
,
insertUpdate
,
layout
,
loadChildren
,
removeUpdate
Methods declared in class javax.swing.text.
BoxView
baselineLayout
,
baselineRequirements
,
calculateMajorAxisRequirements
,
childAllocation
,
forwardUpdate
,
getAxis
,
getChildAllocation
,
getHeight
,
getOffset
,
getResizeWeight
,
getSpan
,
getViewAtPoint
,
getWidth
,
isAfter
,
isAllocationValid
,
isBefore
,
isLayoutValid
,
layoutChanged
,
layoutMajorAxis
,
layoutMinorAxis
,
modelToView
,
paintChild
,
preferenceChanged
,
replace
,
setAxis
,
setSize
,
viewToModel
Methods declared in class javax.swing.text.
CompositeView
getBottomInset
,
getInsideAllocation
,
getLeftInset
,
getNextEastWestVisualPositionFrom
,
getNextVisualPositionFrom
,
getRightInset
,
getTopInset
,
getView
,
getViewAtPosition
,
getViewCount
,
getViewIndex
,
modelToView
,
setInsets
,
setParagraphInsets
Methods declared in class javax.swing.text.
View
append
,
breakView
,
createFragment
,
forwardUpdateToView
,
getBreakWeight
,
getContainer
,
getDocument
,
getElement
,
getEndOffset
,
getGraphics
,
getParent
,
getStartOffset
,
getToolTipText
,
getViewFactory
,
getViewIndex
,
insert
,
modelToView
,
remove
,
removeAll
,
updateChildren
,
updateLayout
,
viewToModel
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
ParagraphView
public
ParagraphView
(
Element
elem)
Constructs a ParagraphView for the given element.
Parameters:
elem
- the element that this view is responsible for
Method Details
setParent
public
void
setParent
(
View
parent)
Establishes the parent view for this view.  This is
 guaranteed to be called before any other methods if the
 parent view is functioning properly.
This is implemented
 to forward to the superclass as well as call the
setPropertiesFromAttributes
method to set the paragraph properties from the css
 attributes.  The call is made at this time to ensure
 the ability to resolve upward through the parents
 view attributes.
Overrides:
setParent
in class
CompositeView
Parameters:
parent
- the new parent, or null if the view is
  being removed from a parent it was previously added
  to
getAttributes
public
AttributeSet
getAttributes
()
Fetches the attributes to use when rendering.  This is
 implemented to multiplex the attributes specified in the
 model with a StyleSheet.
Overrides:
getAttributes
in class
View
Returns:
the attributes to use when rendering
setPropertiesFromAttributes
protected
void
setPropertiesFromAttributes
()
Sets up the paragraph from css attributes instead of
 the values found in StyleConstants (i.e. which are used
 by the superclass).  Since
Overrides:
setPropertiesFromAttributes
in class
ParagraphView
getStyleSheet
protected
StyleSheet
getStyleSheet
()
Convenient method to get the StyleSheet.
Returns:
the StyleSheet
calculateMinorAxisRequirements
protected
SizeRequirements
calculateMinorAxisRequirements
(int axis,
SizeRequirements
r)
Calculate the needs for the paragraph along the minor axis.
If size requirements are explicitly specified for the paragraph,
 use that requirements.  Otherwise, use the requirements of the
 superclass
ParagraphView
.
If the
axis
parameter is neither
View.X_AXIS
nor
View.Y_AXIS
,
IllegalArgumentException
is thrown.  If the
r
parameter is
null,
a new
SizeRequirements
object is created, otherwise the supplied
SizeRequirements
object is returned.
Overrides:
calculateMinorAxisRequirements
in class
ParagraphView
Parameters:
axis
- the minor axis
r
- the input
SizeRequirements
object
Returns:
the new or adjusted
SizeRequirements
object
Throws:
IllegalArgumentException
- if the
axis
parameter is invalid
See Also:
SizeRequirements
isVisible
public
boolean
isVisible
()
Indicates whether or not this view should be
 displayed.  If none of the children wish to be
 displayed and the only visible child is the
 break that ends the paragraph, the paragraph
 will not be considered visible.  Otherwise,
 it will be considered visible and return true.
Overrides:
isVisible
in class
View
Returns:
true if the paragraph should be displayed
paint
public
void
paint
(
Graphics
g,
Shape
a)
Renders using the given rendering surface and area on that
 surface.  This is implemented to delegate to the superclass
 after stashing the base coordinate for tab calculations.
Overrides:
paint
in class
ParagraphView
Parameters:
g
- the rendering surface to use
a
- the allocated region to render into
See Also:
View.paint(java.awt.Graphics, java.awt.Shape)
getPreferredSpan
public
float
getPreferredSpan
(int axis)
Determines the preferred span for this view.  Returns
 0 if the view is not visible, otherwise it calls the
 superclass method to get the preferred span.
 axis.
Overrides:
getPreferredSpan
in class
BoxView
Parameters:
axis
- may be either View.X_AXIS or View.Y_AXIS
Returns:
the span the view would like to be rendered into;
           typically the view is told to render into the span
           that is returned, although there is no guarantee;
           the parent may choose to resize or break the view
See Also:
BoxView.getPreferredSpan(int)
getMinimumSpan
public
float
getMinimumSpan
(int axis)
Determines the minimum span for this view along an
 axis.  Returns 0 if the view is not visible, otherwise
 it calls the superclass method to get the minimum span.
Overrides:
getMinimumSpan
in class
BoxView
Parameters:
axis
- may be either
View.X_AXIS
or
View.Y_AXIS
Returns:
the minimum span the view can be rendered into
See Also:
BoxView.getMinimumSpan(int)
getMaximumSpan
public
float
getMaximumSpan
(int axis)
Determines the maximum span for this view along an
 axis.  Returns 0 if the view is not visible, otherwise
 it calls the superclass method ot get the maximum span.
Overrides:
getMaximumSpan
in class
BoxView
Parameters:
axis
- may be either
View.X_AXIS
or
View.Y_AXIS
Returns:
the maximum span the view can be rendered into
See Also:
BoxView.getMaximumSpan(int)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.