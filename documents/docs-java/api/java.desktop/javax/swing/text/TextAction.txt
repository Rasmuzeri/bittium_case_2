TextAction (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing.text
Class TextAction
java.lang.Object
javax.swing.AbstractAction
javax.swing.text.TextAction
All Implemented Interfaces:
ActionListener
,
Serializable
,
Cloneable
,
EventListener
,
Action
Direct Known Subclasses:
DefaultEditorKit.BeepAction
,
DefaultEditorKit.CopyAction
,
DefaultEditorKit.CutAction
,
DefaultEditorKit.DefaultKeyTypedAction
,
DefaultEditorKit.InsertBreakAction
,
DefaultEditorKit.InsertContentAction
,
DefaultEditorKit.InsertTabAction
,
DefaultEditorKit.PasteAction
,
StyledEditorKit.StyledTextAction
public abstract class
TextAction
extends
AbstractAction
An Action implementation useful for key bindings that are
 shared across a number of different text components.  Because
 the action is shared, it must have a way of getting it's
 target to act upon.  This class provides support to try and
 find a text component to operate on.  The preferred way of
 getting the component to act upon is through the ActionEvent
 that is received.  If the Object returned by getSource can
 be narrowed to a text component, it will be used.  If the
 action event is null or can't be narrowed, the last focused
 text component is tried.  This is determined by being
 used in conjunction with a JTextController which
 arranges to share that information with a TextAction.
Warning:
Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans
 has been added to the
java.beans
package.
 Please see
XMLEncoder
.
Field Summary
Fields declared in class javax.swing.
AbstractAction
changeSupport
,
enabled
Fields declared in interface javax.swing.
Action
ACCELERATOR_KEY
,
ACTION_COMMAND_KEY
,
DEFAULT
,
DISPLAYED_MNEMONIC_INDEX_KEY
,
LARGE_ICON_KEY
,
LONG_DESCRIPTION
,
MNEMONIC_KEY
,
NAME
,
SELECTED_KEY
,
SHORT_DESCRIPTION
,
SMALL_ICON
Constructor Summary
Constructors
Constructor
Description
TextAction
(
String
name)
Creates a new JTextAction object.
Method Summary
All Methods
Static Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
static final
Action
[]
augmentList
(
Action
[] list1,
Action
[] list2)
Takes one list of
 commands and augments it with another list
 of commands.
protected final
JTextComponent
getFocusedComponent
()
Fetches the text component that currently has focus.
protected final
JTextComponent
getTextComponent
(
ActionEvent
e)
Determines the component to use for the action.
Methods declared in class javax.swing.
AbstractAction
addPropertyChangeListener
,
clone
,
firePropertyChange
,
getKeys
,
getPropertyChangeListeners
,
getValue
,
isEnabled
,
putValue
,
removePropertyChangeListener
,
setEnabled
Methods declared in class java.lang.
Object
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Methods declared in interface javax.swing.
Action
accept
Methods declared in interface java.awt.event.
ActionListener
actionPerformed
Constructor Details
TextAction
public
TextAction
(
String
name)
Creates a new JTextAction object.
Parameters:
name
- the name of the action
Method Details
getTextComponent
protected final
JTextComponent
getTextComponent
(
ActionEvent
e)
Determines the component to use for the action.
 This if fetched from the source of the ActionEvent
 if it's not null and can be narrowed.  Otherwise,
 the last focused component is used.
Parameters:
e
- the ActionEvent
Returns:
the component
augmentList
public static final
Action
[]
augmentList
(
Action
[] list1,
Action
[] list2)
Takes one list of
 commands and augments it with another list
 of commands.  The second list takes precedence
 over the first list; that is, when both lists
 contain a command with the same name, the command
 from the second list is used.
Parameters:
list1
- the first list, may be empty but not
null
list2
- the second list, may be empty but not
null
Returns:
the augmented list
getFocusedComponent
protected final
JTextComponent
getFocusedComponent
()
Fetches the text component that currently has focus.
 This allows actions to be shared across text components
 which is useful for key-bindings where a large set of
 actions are defined, but generally used the same way
 across many different components.
Returns:
the component
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.