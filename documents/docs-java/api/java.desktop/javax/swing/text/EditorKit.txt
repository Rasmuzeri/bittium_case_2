EditorKit (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing.text
Class EditorKit
java.lang.Object
javax.swing.text.EditorKit
All Implemented Interfaces:
Serializable
,
Cloneable
Direct Known Subclasses:
DefaultEditorKit
public abstract class
EditorKit
extends
Object
implements
Cloneable
,
Serializable
Establishes the set of things needed by a text component
 to be a reasonably functioning editor for some
type
of text content.  The EditorKit acts as a factory for some
 kind of policy.  For example, an implementation
 of html and rtf can be provided that is replaceable
 with other implementations.
A kit can safely store editing state as an instance
 of the kit will be dedicated to a text component.
 New kits will normally be created by cloning a
 prototype kit.  The kit will have its
setComponent
method called to establish
 its relationship with a JTextComponent.
Constructor Summary
Constructors
Constructor
Description
EditorKit
()
Construct an EditorKit.
Method Summary
All Methods
Instance Methods
Abstract Methods
Concrete Methods
Modifier and Type
Method
Description
Object
clone
()
Creates a copy of the editor kit.
abstract
Caret
createCaret
()
Fetches a caret that can navigate through views
 produced by the associated ViewFactory.
abstract
Document
createDefaultDocument
()
Creates an uninitialized text storage model
 that is appropriate for this type of editor.
void
deinstall
(
JEditorPane
c)
Called when the kit is being removed from the
 JEditorPane.
abstract
Action
[]
getActions
()
Fetches the set of commands that can be used
 on a text component that is using a model and
 view produced by this kit.
abstract
String
getContentType
()
Gets the MIME type of the data that this
 kit represents support for.
abstract
ViewFactory
getViewFactory
()
Fetches a factory that is suitable for producing
 views of any models that are produced by this
 kit.
void
install
(
JEditorPane
c)
Called when the kit is being installed into the
 a JEditorPane.
abstract void
read
(
InputStream
in,
Document
doc,
 int pos)
Inserts content from the given stream which is expected
 to be in a format appropriate for this kind of content
 handler.
abstract void
read
(
Reader
in,
Document
doc,
 int pos)
Inserts content from the given stream which is expected
 to be in a format appropriate for this kind of content
 handler.
abstract void
write
(
OutputStream
out,
Document
doc,
 int pos,
 int len)
Writes content from a document to the given stream
 in a format appropriate for this kind of content handler.
abstract void
write
(
Writer
out,
Document
doc,
 int pos,
 int len)
Writes content from a document to the given stream
 in a format appropriate for this kind of content handler.
Methods declared in class java.lang.
Object
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
EditorKit
public
EditorKit
()
Construct an EditorKit.
Method Details
clone
public
Object
clone
()
Creates a copy of the editor kit.  This is implemented
 to use
Object.clone()
.  If the kit cannot be cloned,
 null is returned.
Overrides:
clone
in class
Object
Returns:
the copy
See Also:
Cloneable
install
public
void
install
(
JEditorPane
c)
Called when the kit is being installed into the
 a JEditorPane.
Parameters:
c
- the JEditorPane
deinstall
public
void
deinstall
(
JEditorPane
c)
Called when the kit is being removed from the
 JEditorPane.  This is used to unregister any
 listeners that were attached.
Parameters:
c
- the JEditorPane
getContentType
public abstract
String
getContentType
()
Gets the MIME type of the data that this
 kit represents support for.
Returns:
the type
getViewFactory
public abstract
ViewFactory
getViewFactory
()
Fetches a factory that is suitable for producing
 views of any models that are produced by this
 kit.
Returns:
the factory
getActions
public abstract
Action
[]
getActions
()
Fetches the set of commands that can be used
 on a text component that is using a model and
 view produced by this kit.
Returns:
the set of actions
createCaret
public abstract
Caret
createCaret
()
Fetches a caret that can navigate through views
 produced by the associated ViewFactory.
Returns:
the caret
createDefaultDocument
public abstract
Document
createDefaultDocument
()
Creates an uninitialized text storage model
 that is appropriate for this type of editor.
Returns:
the model
read
public abstract
void
read
(
InputStream
in,
Document
doc,
 int pos)
throws
IOException
,
BadLocationException
Inserts content from the given stream which is expected
 to be in a format appropriate for this kind of content
 handler.
Parameters:
in
- The stream to read from
doc
- The destination for the insertion.
pos
- The location in the document to place the
   content >= 0.
Throws:
IOException
- on any I/O error
BadLocationException
- if pos represents an invalid
   location within the document.
write
public abstract
void
write
(
OutputStream
out,
Document
doc,
 int pos,
 int len)
throws
IOException
,
BadLocationException
Writes content from a document to the given stream
 in a format appropriate for this kind of content handler.
Parameters:
out
- The stream to write to
doc
- The source for the write.
pos
- The location in the document to fetch the
   content from >= 0.
len
- The amount to write out >= 0.
Throws:
IOException
- on any I/O error
BadLocationException
- if pos represents an invalid
   location within the document.
read
public abstract
void
read
(
Reader
in,
Document
doc,
 int pos)
throws
IOException
,
BadLocationException
Inserts content from the given stream which is expected
 to be in a format appropriate for this kind of content
 handler.
Since actual text editing is unicode based, this would
 generally be the preferred way to read in the data.
 Some types of content are stored in an 8-bit form however,
 and will favor the InputStream.
Parameters:
in
- The stream to read from
doc
- The destination for the insertion.
pos
- The location in the document to place the
   content >= 0.
Throws:
IOException
- on any I/O error
BadLocationException
- if pos represents an invalid
   location within the document.
write
public abstract
void
write
(
Writer
out,
Document
doc,
 int pos,
 int len)
throws
IOException
,
BadLocationException
Writes content from a document to the given stream
 in a format appropriate for this kind of content handler.
Since actual text editing is unicode based, this would
 generally be the preferred way to write the data.
 Some types of content are stored in an 8-bit form however,
 and will favor the OutputStream.
Parameters:
out
- The stream to write to
doc
- The source for the write.
pos
- The location in the document to fetch the
   content >= 0.
len
- The amount to write out >= 0.
Throws:
IOException
- on any I/O error
BadLocationException
- if pos represents an invalid
   location within the document.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.