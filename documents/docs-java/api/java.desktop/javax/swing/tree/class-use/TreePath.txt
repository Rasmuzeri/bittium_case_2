Uses of Class javax.swing.tree.TreePath (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.swing.tree.TreePath
Packages that use
TreePath
Package
Description
javax.swing
Provides a set of "lightweight" (all-Java language) components
 that, to the maximum degree possible, work the same on all platforms.
javax.swing.event
Provides for events fired by Swing components.
javax.swing.plaf
Provides one interface and many abstract classes that Swing uses to provide
 its pluggable look-and-feel capabilities.
javax.swing.plaf.basic
Provides user interface objects built according to the Basic look and feel.
javax.swing.plaf.multi
Provides user interface objects that combine two or more look and feels.
javax.swing.tree
Provides classes and interfaces for dealing with
javax.swing.JTree
.
Uses of
TreePath
in
javax.swing
Methods in
javax.swing
that return
TreePath
Modifier and Type
Method
Description
TreePath
JTree.
getAnchorSelectionPath
()
Returns the path identified as the anchor.
TreePath
JTree.
getClosestPathForLocation
(int x,
 int y)
Returns the path to the node that is closest to x,y.
TreePath
JTree.
getEditingPath
()
Returns the path to the element that is currently being edited.
TreePath
JTree.
getLeadSelectionPath
()
Returns the path identified as the lead.
TreePath
JTree.
getNextMatch
(
String
prefix,
 int startingRow,
Position.Bias
bias)
Returns the TreePath to the next tree element that
 begins with a prefix.
TreePath
JTree.DropLocation.
getPath
()
Returns the path where dropped data should be placed in the
 tree.
protected
TreePath
[]
JTree.
getPathBetweenRows
(int index0,
 int index1)
Returns the paths (inclusive) between the specified rows.
TreePath
JTree.
getPathForLocation
(int x,
 int y)
Returns the path for the node at the specified location.
TreePath
JTree.
getPathForRow
(int row)
Returns the path for the specified row.
TreePath
JTree.
getSelectionPath
()
Returns the path to the first selected node.
TreePath
[]
JTree.
getSelectionPaths
()
Returns the paths of all selected values.
Methods in
javax.swing
that return types with arguments of type
TreePath
Modifier and Type
Method
Description
protected
Enumeration
<
TreePath
>
JTree.
getDescendantToggledPaths
(
TreePath
parent)
Returns an
Enumeration
of
TreePaths
that have been expanded that
 are descendants of
parent
.
Enumeration
<
TreePath
>
JTree.
getExpandedDescendants
(
TreePath
parent)
Returns an
Enumeration
of the descendants of the
 path
parent
that
 are currently expanded.
Methods in
javax.swing
with parameters of type
TreePath
Modifier and Type
Method
Description
void
JTree.
addSelectionPath
(
TreePath
path)
Adds the node identified by the specified
TreePath
to the current selection.
void
JTree.
addSelectionPaths
(
TreePath
[] paths)
Adds each path in the array of paths to the current selection.
void
JTree.EmptySelectionModel.
addSelectionPaths
(
TreePath
[] paths)
This is overridden to do nothing;
EmptySelectionModel
does not allow a selection.
void
JTree.
collapsePath
(
TreePath
path)
Ensures that the node identified by the specified path is
 collapsed and viewable.
void
JTree.
expandPath
(
TreePath
path)
Ensures that the node identified by the specified path is
 expanded and viewable.
void
JTree.
fireTreeCollapsed
(
TreePath
path)
Notifies all listeners that have registered interest for
 notification on this event type.
void
JTree.
fireTreeExpanded
(
TreePath
path)
Notifies all listeners that have registered interest for
 notification on this event type.
void
JTree.
fireTreeWillCollapse
(
TreePath
path)
Notifies all listeners that have registered interest for
 notification on this event type.
void
JTree.
fireTreeWillExpand
(
TreePath
path)
Notifies all listeners that have registered interest for
 notification on this event type.
protected
Enumeration
<
TreePath
>
JTree.
getDescendantToggledPaths
(
TreePath
parent)
Returns an
Enumeration
of
TreePaths
that have been expanded that
 are descendants of
parent
.
Enumeration
<
TreePath
>
JTree.
getExpandedDescendants
(
TreePath
parent)
Returns an
Enumeration
of the descendants of the
 path
parent
that
 are currently expanded.
Rectangle
JTree.
getPathBounds
(
TreePath
path)
Returns the
Rectangle
that the specified node will be drawn
 into.
int
JTree.
getRowForPath
(
TreePath
path)
Returns the row that displays the node identified by the specified
 path.
boolean
JTree.
hasBeenExpanded
(
TreePath
path)
Returns true if the node identified by the path has ever been
 expanded.
boolean
JTree.
isCollapsed
(
TreePath
path)
Returns true if the value identified by path is currently collapsed,
 this will return false if any of the values in path are currently
 not being displayed.
boolean
JTree.
isExpanded
(
TreePath
path)
Returns true if the node identified by the path is currently expanded,
boolean
JTree.
isPathEditable
(
TreePath
path)
Returns
isEditable
.
boolean
JTree.
isPathSelected
(
TreePath
path)
Returns true if the item identified by the path is currently selected.
boolean
JTree.
isVisible
(
TreePath
path)
Returns true if the value identified by path is currently viewable,
 which means it is either the root or all of its parents are expanded.
void
JTree.
makeVisible
(
TreePath
path)
Ensures that the node identified by path is currently viewable.
protected boolean
JTree.
removeDescendantSelectedPaths
(
TreePath
path,
 boolean includePath)
Removes any paths in the selection that are descendants of
path
.
void
JTree.
removeSelectionPath
(
TreePath
path)
Removes the node identified by the specified path from the current
 selection.
void
JTree.EmptySelectionModel.
removeSelectionPaths
(
TreePath
[] paths)
This is overridden to do nothing;
EmptySelectionModel
does not allow a selection.
void
JTree.
removeSelectionPaths
(
TreePath
[] paths)
Removes the nodes identified by the specified paths from the
 current selection.
void
JTree.
scrollPathToVisible
(
TreePath
path)
Makes sure all the path components in path are expanded (except
 for the last path component) and scrolls so that the
 node identified by the path is displayed.
void
JTree.
setAnchorSelectionPath
(
TreePath
newPath)
Sets the path identified as the anchor.
protected void
JTree.
setExpandedState
(
TreePath
path,
 boolean state)
Sets the expanded state of this
JTree
.
void
JTree.
setLeadSelectionPath
(
TreePath
newPath)
Sets the path identifies as the lead.
void
JTree.
setSelectionPath
(
TreePath
path)
Selects the node identified by the specified path.
void
JTree.EmptySelectionModel.
setSelectionPaths
(
TreePath
[] paths)
This is overridden to do nothing;
EmptySelectionModel
does not allow a selection.
void
JTree.
setSelectionPaths
(
TreePath
[] paths)
Selects the nodes identified by the specified array of paths.
void
JTree.
startEditingAtPath
(
TreePath
path)
Selects the node identified by the specified path and initiates
 editing.
Method parameters in
javax.swing
with type arguments of type
TreePath
Modifier and Type
Method
Description
protected void
JTree.
removeDescendantToggledPaths
(
Enumeration
<
TreePath
> toRemove)
Removes any descendants of the
TreePaths
in
toRemove
that have been expanded.
Constructors in
javax.swing
with parameters of type
TreePath
Modifier
Constructor
Description
AccessibleJTreeNode
(
JTree
t,
TreePath
p,
Accessible
ap)
Constructs an AccessibleJTreeNode
Uses of
TreePath
in
javax.swing.event
Fields in
javax.swing.event
declared as
TreePath
Modifier and Type
Field
Description
protected
TreePath
TreeSelectionEvent.
newLeadSelectionPath
leadSelectionPath after the paths changed, may be null.
protected
TreePath
TreeSelectionEvent.
oldLeadSelectionPath
leadSelectionPath before the paths changed, may be null.
protected
TreePath
TreeExpansionEvent.
path
Path to the value this event represents.
protected
TreePath
TreeModelEvent.
path
Path to the parent of the nodes that have changed.
protected
TreePath
[]
TreeSelectionEvent.
paths
Paths this event represents.
Methods in
javax.swing.event
that return
TreePath
Modifier and Type
Method
Description
TreePath
TreeSelectionEvent.
getNewLeadSelectionPath
()
Returns the current lead path.
TreePath
TreeSelectionEvent.
getOldLeadSelectionPath
()
Returns the path that was previously the lead path.
TreePath
TreeExpansionEvent.
getPath
()
Returns the path to the value that has been expanded/collapsed.
TreePath
TreeSelectionEvent.
getPath
()
Returns the first path element.
TreePath
[]
TreeSelectionEvent.
getPaths
()
Returns the paths that have been added or removed from the selection.
TreePath
TreeModelEvent.
getTreePath
()
For all events, except treeStructureChanged,
 returns the parent of the changed nodes.
Methods in
javax.swing.event
with parameters of type
TreePath
Modifier and Type
Method
Description
boolean
TreeSelectionEvent.
isAddedPath
(
TreePath
path)
Returns whether the specified path was added to the selection.
Constructors in
javax.swing.event
with parameters of type
TreePath
Modifier
Constructor
Description
TreeExpansionEvent
(
Object
source,
TreePath
path)
Constructs a TreeExpansionEvent object.
TreeModelEvent
(
Object
source,
TreePath
path)
Used to create an event when the node structure has changed in some way,
 identifying the path to the root of the modified subtree as a TreePath
 object.
TreeModelEvent
(
Object
source,
TreePath
path,
 int[] childIndices,
Object
[] children)
Used to create an event when nodes have been changed, inserted, or
 removed, identifying the path to the parent of the modified items as
 a TreePath object.
TreeSelectionEvent
(
Object
source,
TreePath
[] paths,
 boolean[] areNew,
TreePath
oldLeadSelectionPath,
TreePath
newLeadSelectionPath)
Represents a change in the selection of a
TreeSelectionModel
.
TreeSelectionEvent
(
Object
source,
TreePath
path,
 boolean isNew,
TreePath
oldLeadSelectionPath,
TreePath
newLeadSelectionPath)
Represents a change in the selection of a
TreeSelectionModel
.
Uses of
TreePath
in
javax.swing.plaf
Methods in
javax.swing.plaf
that return
TreePath
Modifier and Type
Method
Description
abstract
TreePath
TreeUI.
getClosestPathForLocation
(
JTree
tree,
 int x,
 int y)
Returns the path to the node that is closest to x,y.
abstract
TreePath
TreeUI.
getEditingPath
(
JTree
tree)
Returns the path to the element that is being edited.
abstract
TreePath
TreeUI.
getPathForRow
(
JTree
tree,
 int row)
Returns the path for passed in row.
Methods in
javax.swing.plaf
with parameters of type
TreePath
Modifier and Type
Method
Description
abstract
Rectangle
TreeUI.
getPathBounds
(
JTree
tree,
TreePath
path)
Returns the Rectangle enclosing the label portion that the
 last item in path will be drawn into.
abstract int
TreeUI.
getRowForPath
(
JTree
tree,
TreePath
path)
Returns the row that the last item identified in path is visible
 at.
abstract void
TreeUI.
startEditingAtPath
(
JTree
tree,
TreePath
path)
Selects the last item in path and tries to edit it.
Uses of
TreePath
in
javax.swing.plaf.basic
Fields in
javax.swing.plaf.basic
declared as
TreePath
Modifier and Type
Field
Description
protected
TreePath
BasicTreeUI.
editingPath
Path that is being edited.
Fields in
javax.swing.plaf.basic
with type parameters of type
TreePath
Modifier and Type
Field
Description
protected
Hashtable
<
TreePath
,
Boolean
>
BasicTreeUI.
drawingCache
Used for minimizing the drawing of vertical lines.
Methods in
javax.swing.plaf.basic
that return
TreePath
Modifier and Type
Method
Description
TreePath
BasicTreeUI.
getClosestPathForLocation
(
JTree
tree,
 int x,
 int y)
Returns the path to the node that is closest to x,y.
TreePath
BasicTreeUI.
getEditingPath
(
JTree
tree)
Returns the path to the element that is being edited.
protected
TreePath
BasicTreeUI.
getLastChildPath
(
TreePath
parent)
Returns a path to the last child of
parent
.
TreePath
BasicTreeUI.
getPathForRow
(
JTree
tree,
 int row)
Returns the path for passed in row.
Methods in
javax.swing.plaf.basic
with parameters of type
TreePath
Modifier and Type
Method
Description
protected void
BasicTreeUI.
checkForClickInExpandControl
(
TreePath
path,
 int mouseX,
 int mouseY)
If the
mouseX
and
mouseY
are in the
 expand/collapse region of the
row
, this will toggle
 the row.
protected
TreePath
BasicTreeUI.
getLastChildPath
(
TreePath
parent)
Returns a path to the last child of
parent
.
Rectangle
BasicTreeUI.
getPathBounds
(
JTree
tree,
TreePath
path)
Returns the Rectangle enclosing the label portion that the
 last item in path will be drawn into.
int
BasicTreeUI.
getRowForPath
(
JTree
tree,
TreePath
path)
Returns the row that the last item identified in path is visible
 at.
protected void
BasicTreeUI.
handleExpandControlClick
(
TreePath
path,
 int mouseX,
 int mouseY)
Messaged when the user clicks the particular row, this invokes
toggleExpandState
.
protected boolean
BasicTreeUI.
isLocationInExpandControl
(
TreePath
path,
 int mouseX,
 int mouseY)
Returns
true
if
mouseX
and
mouseY
fall
 in the area of row that is used to expand/collapse the node and
 the node at
row
does not represent a leaf.
protected void
BasicTreeUI.
paintExpandControl
(
Graphics
g,
Rectangle
clipBounds,
Insets
insets,
Rectangle
bounds,
TreePath
path,
 int row,
 boolean isExpanded,
 boolean hasBeenExpanded,
 boolean isLeaf)
Paints the expand (toggle) part of a row.
protected void
BasicTreeUI.
paintHorizontalPartOfLeg
(
Graphics
g,
Rectangle
clipBounds,
Insets
insets,
Rectangle
bounds,
TreePath
path,
 int row,
 boolean isExpanded,
 boolean hasBeenExpanded,
 boolean isLeaf)
Paints the horizontal part of the leg.
protected void
BasicTreeUI.
paintRow
(
Graphics
g,
Rectangle
clipBounds,
Insets
insets,
Rectangle
bounds,
TreePath
path,
 int row,
 boolean isExpanded,
 boolean hasBeenExpanded,
 boolean isLeaf)
Paints the renderer part of a row.
protected void
BasicTreeUI.
paintVerticalPartOfLeg
(
Graphics
g,
Rectangle
clipBounds,
Insets
insets,
TreePath
path)
Paints the vertical part of the leg.
protected void
BasicTreeUI.
pathWasCollapsed
(
TreePath
path)
Messaged from the
VisibleTreeNode
after it has collapsed.
protected void
BasicTreeUI.
pathWasExpanded
(
TreePath
path)
Messaged from the
VisibleTreeNode
after it has been expanded.
protected void
BasicTreeUI.
selectPathForEvent
(
TreePath
path,
MouseEvent
event)
Messaged to update the selection based on a
MouseEvent
over a
 particular row.
protected boolean
BasicTreeUI.
shouldPaintExpandControl
(
TreePath
path,
 int row,
 boolean isExpanded,
 boolean hasBeenExpanded,
 boolean isLeaf)
Returns
true
if the expand (toggle) control should be drawn for
 the specified row.
protected boolean
BasicTreeUI.
startEditing
(
TreePath
path,
MouseEvent
event)
Will start editing for node if there is a
cellEditor
and
shouldSelectCell
returns
true
.
void
BasicTreeUI.
startEditingAtPath
(
JTree
tree,
TreePath
path)
Selects the last item in path and tries to edit it.
protected void
BasicTreeUI.
toggleExpandState
(
TreePath
path)
Expands path if it is not expanded, or collapses row if it is expanded.
protected void
BasicTreeUI.
updateExpandedDescendants
(
TreePath
path)
Updates the expanded state of all the descendants of
path
by getting the expanded descendants from the tree and forwarding
 to the tree state.
Uses of
TreePath
in
javax.swing.plaf.multi
Methods in
javax.swing.plaf.multi
that return
TreePath
Modifier and Type
Method
Description
TreePath
MultiTreeUI.
getClosestPathForLocation
(
JTree
a,
 int b,
 int c)
Invokes the
getClosestPathForLocation
method on each UI handled by this object.
TreePath
MultiTreeUI.
getEditingPath
(
JTree
a)
Invokes the
getEditingPath
method on each UI handled by this object.
TreePath
MultiTreeUI.
getPathForRow
(
JTree
a,
 int b)
Invokes the
getPathForRow
method on each UI handled by this object.
Methods in
javax.swing.plaf.multi
with parameters of type
TreePath
Modifier and Type
Method
Description
Rectangle
MultiTreeUI.
getPathBounds
(
JTree
a,
TreePath
b)
Invokes the
getPathBounds
method on each UI handled by this object.
int
MultiTreeUI.
getRowForPath
(
JTree
a,
TreePath
b)
Invokes the
getRowForPath
method on each UI handled by this object.
void
MultiTreeUI.
startEditingAtPath
(
JTree
a,
TreePath
b)
Invokes the
startEditingAtPath
method on each UI handled by this object.
Uses of
TreePath
in
javax.swing.tree
Fields in
javax.swing.tree
declared as
TreePath
Modifier and Type
Field
Description
protected
TreePath
DefaultTreeCellEditor.
lastPath
Last path that was selected.
protected
TreePath
DefaultTreeSelectionModel.
leadPath
Last path that was added.
protected
TreePath
[]
DefaultTreeSelectionModel.
selection
Paths that are currently selected.
Methods in
javax.swing.tree
that return
TreePath
Modifier and Type
Method
Description
TreePath
DefaultTreeSelectionModel.
getLeadSelectionPath
()
Returns the last path that was added.
TreePath
TreeSelectionModel.
getLeadSelectionPath
()
Returns the last path that was added.
TreePath
TreePath.
getParentPath
()
Returns the
TreePath
of the parent.
abstract
TreePath
AbstractLayoutCache.
getPathClosestTo
(int x,
 int y)
Returns the path to the node that is closest to x,y.
TreePath
FixedHeightLayoutCache.
getPathClosestTo
(int x,
 int y)
Returns the path to the node that is closest to x,y.
TreePath
VariableHeightLayoutCache.
getPathClosestTo
(int x,
 int y)
Returns the path to the node that is closest to x,y.
abstract
TreePath
AbstractLayoutCache.
getPathForRow
(int row)
Returns the path for passed in row.
TreePath
FixedHeightLayoutCache.
getPathForRow
(int row)
Returns the path for passed in row.
TreePath
VariableHeightLayoutCache.
getPathForRow
(int row)
Returns the path for
row
.
TreePath
DefaultTreeSelectionModel.
getSelectionPath
()
Returns the first path in the selection.
TreePath
TreeSelectionModel.
getSelectionPath
()
Returns the first path in the selection.
TreePath
[]
DefaultTreeSelectionModel.
getSelectionPaths
()
Returns the selection.
TreePath
[]
TreeSelectionModel.
getSelectionPaths
()
Returns the paths in the selection.
TreePath
TreePath.
pathByAddingChild
(
Object
child)
Returns a new path containing all the elements of this path
 plus
child
.
Methods in
javax.swing.tree
that return types with arguments of type
TreePath
Modifier and Type
Method
Description
abstract
Enumeration
<
TreePath
>
AbstractLayoutCache.
getVisiblePathsFrom
(
TreePath
path)
Returns an
Enumerator
that increments over the visible
 paths starting at the passed in location.
Enumeration
<
TreePath
>
FixedHeightLayoutCache.
getVisiblePathsFrom
(
TreePath
path)
Returns an Enumerator that increments over the visible paths
 starting at the passed in location.
Enumeration
<
TreePath
>
VariableHeightLayoutCache.
getVisiblePathsFrom
(
TreePath
path)
Returns an
Enumerator
that increments over the visible paths
 starting at the passed in location.
Methods in
javax.swing.tree
with parameters of type
TreePath
Modifier and Type
Method
Description
void
DefaultTreeSelectionModel.
addSelectionPath
(
TreePath
path)
Adds path to the current selection.
void
TreeSelectionModel.
addSelectionPath
(
TreePath
path)
Adds path to the current selection.
void
DefaultTreeSelectionModel.
addSelectionPaths
(
TreePath
[] paths)
Adds paths to the current selection.
void
TreeSelectionModel.
addSelectionPaths
(
TreePath
[] paths)
Adds paths to the current selection.
protected boolean
DefaultTreeSelectionModel.
arePathsContiguous
(
TreePath
[] paths)
Returns true if the paths are contiguous,
 or this object has no RowMapper.
protected boolean
DefaultTreeSelectionModel.
canPathsBeAdded
(
TreePath
[] paths)
Used to test if a particular set of
TreePath
s can
 be added.
protected boolean
DefaultTreeSelectionModel.
canPathsBeRemoved
(
TreePath
[] paths)
Returns true if the paths can be removed without breaking the
 continuity of the model.
abstract
Rectangle
AbstractLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns a rectangle giving the bounds needed to draw path.
Rectangle
FixedHeightLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns a rectangle giving the bounds needed to draw path.
Rectangle
VariableHeightLayoutCache.
getBounds
(
TreePath
path,
Rectangle
placeIn)
Returns the
Rectangle
enclosing the label portion
 into which the item identified by
path
will be drawn.
abstract boolean
AbstractLayoutCache.
getExpandedState
(
TreePath
path)
Returns true if the path is expanded, and visible.
boolean
FixedHeightLayoutCache.
getExpandedState
(
TreePath
path)
Returns true if the path is expanded, and visible.
boolean
VariableHeightLayoutCache.
getExpandedState
(
TreePath
path)
Returns true if the path is expanded, and visible.
abstract int
AbstractLayoutCache.
getRowForPath
(
TreePath
path)
Returns the row that the last item identified in path is visible
 at.
int
FixedHeightLayoutCache.
getRowForPath
(
TreePath
path)
Returns the row that the last item identified in path is visible
 at.
int
VariableHeightLayoutCache.
getRowForPath
(
TreePath
path)
Returns the row where the last item identified in path is visible.
int[]
AbstractLayoutCache.
getRowsForPaths
(
TreePath
[] paths)
Returns the rows that the
TreePath
instances in
path
are being displayed at.
int[]
RowMapper.
getRowsForPaths
(
TreePath
[] path)
Returns the rows that the TreePath instances in
path
are being displayed at.
abstract int
AbstractLayoutCache.
getVisibleChildCount
(
TreePath
path)
Returns the number of visible children for row.
int
FixedHeightLayoutCache.
getVisibleChildCount
(
TreePath
path)
Returns the number of visible children for row.
int
VariableHeightLayoutCache.
getVisibleChildCount
(
TreePath
path)
Returns the number of visible children for
path
.
abstract
Enumeration
<
TreePath
>
AbstractLayoutCache.
getVisiblePathsFrom
(
TreePath
path)
Returns an
Enumerator
that increments over the visible
 paths starting at the passed in location.
Enumeration
<
TreePath
>
FixedHeightLayoutCache.
getVisiblePathsFrom
(
TreePath
path)
Returns an Enumerator that increments over the visible paths
 starting at the passed in location.
Enumeration
<
TreePath
>
VariableHeightLayoutCache.
getVisiblePathsFrom
(
TreePath
path)
Returns an
Enumerator
that increments over the visible paths
 starting at the passed in location.
abstract void
AbstractLayoutCache.
invalidatePathBounds
(
TreePath
path)
Instructs the
LayoutCache
that the bounds for
path
are invalid, and need to be updated.
void
FixedHeightLayoutCache.
invalidatePathBounds
(
TreePath
path)
Does nothing, FixedHeightLayoutCache doesn't cache width, and that
 is all that could change.
void
VariableHeightLayoutCache.
invalidatePathBounds
(
TreePath
path)
Instructs the
LayoutCache
that the bounds for
path
are invalid, and need to be updated.
boolean
TreePath.
isDescendant
(
TreePath
aTreePath)
Returns true if
aTreePath
is a
 descendant of this
TreePath
.
abstract boolean
AbstractLayoutCache.
isExpanded
(
TreePath
path)
Returns true if the value identified by row is currently expanded.
boolean
FixedHeightLayoutCache.
isExpanded
(
TreePath
path)
Returns true if the value identified by row is currently expanded.
boolean
VariableHeightLayoutCache.
isExpanded
(
TreePath
path)
Returns true if the value identified by
path
is
 currently expanded.
boolean
DefaultTreeSelectionModel.
isPathSelected
(
TreePath
path)
Returns true if the path,
path
,
 is in the current selection.
boolean
TreeSelectionModel.
isPathSelected
(
TreePath
path)
Returns true if the path,
path
, is in the current
 selection.
protected void
DefaultTreeSelectionModel.
notifyPathChange
(
Vector
<?> changedPaths,
TreePath
oldLeadSelection)
Deprecated.
As of JDK version 1.7
void
DefaultTreeSelectionModel.
removeSelectionPath
(
TreePath
path)
Removes path from the selection.
void
TreeSelectionModel.
removeSelectionPath
(
TreePath
path)
Removes path from the selection.
void
DefaultTreeSelectionModel.
removeSelectionPaths
(
TreePath
[] paths)
Removes paths from the selection.
void
TreeSelectionModel.
removeSelectionPaths
(
TreePath
[] paths)
Removes paths from the selection.
abstract void
AbstractLayoutCache.
setExpandedState
(
TreePath
path,
 boolean isExpanded)
Marks the path
path
expanded state to
isExpanded
.
void
FixedHeightLayoutCache.
setExpandedState
(
TreePath
path,
 boolean isExpanded)
Marks the path
path
expanded state to
isExpanded
.
void
VariableHeightLayoutCache.
setExpandedState
(
TreePath
path,
 boolean isExpanded)
Marks the path
path
expanded state to
isExpanded
.
void
DefaultTreeSelectionModel.
setSelectionPath
(
TreePath
path)
Sets the selection to path.
void
TreeSelectionModel.
setSelectionPath
(
TreePath
path)
Sets the selection to path.
void
DefaultTreeSelectionModel.
setSelectionPaths
(
TreePath
[] pPaths)
Sets the selection.
void
TreeSelectionModel.
setSelectionPaths
(
TreePath
[] paths)
Sets the selection to path.
void
DefaultTreeModel.
valueForPathChanged
(
TreePath
path,
Object
newValue)
This sets the user object of the TreeNode identified by path
 and posts a node changed.
void
TreeModel.
valueForPathChanged
(
TreePath
path,
Object
newValue)
Messaged when the user has altered the value for the item identified
 by
path
to
newValue
.
Constructors in
javax.swing.tree
with parameters of type
TreePath
Modifier
Constructor
Description
protected
TreePath
(
TreePath
parent,
Object
lastPathComponent)
Creates a
TreePath
with the specified parent and element.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.