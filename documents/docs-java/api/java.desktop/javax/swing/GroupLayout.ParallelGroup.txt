GroupLayout.ParallelGroup (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.desktop
Package
javax.swing
Class GroupLayout.ParallelGroup
java.lang.Object
javax.swing.GroupLayout.Group
javax.swing.GroupLayout.ParallelGroup
Enclosing class:
GroupLayout
public sealed class
GroupLayout.ParallelGroup
extends
GroupLayout.Group
A
Group
that aligns and sizes its children.
ParallelGroup
aligns its children in
 four possible ways: along the baseline, centered, anchored to the
 leading edge, or anchored to the trailing edge.
Baseline
A
ParallelGroup
that aligns its children along the
 baseline must first decide where the baseline is
 anchored. The baseline can either be anchored to the top, or
 anchored to the bottom of the group. That is, the distance between the
 baseline and the beginning of the group can be a constant
 distance, or the distance between the end of the group and the
 baseline can be a constant distance. The possible choices
 correspond to the
BaselineResizeBehavior
constants
CONSTANT_ASCENT
and
CONSTANT_DESCENT
.
The baseline anchor may be explicitly specified by the
createBaselineGroup
method, or determined based on the elements.
 If not explicitly specified, the baseline will be anchored to
 the bottom if all the elements with a baseline, and that are
 aligned to the baseline, have a baseline resize behavior of
CONSTANT_DESCENT
; otherwise the baseline is anchored to the top
 of the group.
Elements aligned to the baseline are resizable if they have
 a baseline resize behavior of
CONSTANT_ASCENT
or
CONSTANT_DESCENT
. Elements with a baseline resize
 behavior of
OTHER
or
CENTER_OFFSET
are not resizable.
The baseline is calculated based on the preferred height of each
 of the elements that have a baseline. The baseline is
 calculated using the following algorithm:
max(maxNonBaselineHeight, maxAscent + maxDescent)
, where the
maxNonBaselineHeight
is the maximum height of all elements
 that do not have a baseline, or are not aligned along the baseline.
maxAscent
is the maximum ascent (baseline) of all elements that
 have a baseline and are aligned along the baseline.
maxDescent
is the maximum descent (preferred height - baseline)
 of all elements that have a baseline and are aligned along the baseline.
A
ParallelGroup
that aligns its elements along the baseline
 is only useful along the vertical axis. If you create a
 baseline group and use it along the horizontal axis an
IllegalStateException
is thrown when you ask
GroupLayout
for the minimum, preferred or maximum size or
 attempt to layout the components.
Elements that are not aligned to the baseline and smaller than the size
 of the
ParallelGroup
are positioned in one of three
 ways: centered, anchored to the leading edge, or anchored to the
 trailing edge.
Non-baseline
ParallelGroup
ParallelGroup
s created with an alignment other than
BASELINE
align elements that are smaller than the size
 of the group in one of three ways: centered, anchored to the
 leading edge, or anchored to the trailing edge.
The leading edge is based on the axis and
ComponentOrientation
.  For the vertical axis the top edge is
 always the leading edge, and the bottom edge is always the
 trailing edge. When the
ComponentOrientation
is
LEFT_TO_RIGHT
, the leading edge is the left edge and the
 trailing edge the right edge. A
ComponentOrientation
of
RIGHT_TO_LEFT
flips the left and right edges. Child
 elements are aligned based on the specified alignment the
 element was added with. If you do not specify an alignment, the
 alignment specified for the
ParallelGroup
is used.
To align elements along the baseline you
createBaselineGroup
,
 or
createParallelGroup
with an alignment of
BASELINE
.
 If the group was not created with a baseline alignment, and you attempt
 to add an element specifying a baseline alignment, an
IllegalArgumentException
is thrown.
Since:
1.6
See Also:
GroupLayout.createParallelGroup()
GroupLayout.createBaselineGroup(boolean,boolean)
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
GroupLayout.ParallelGroup
addComponent
(
Component
component)
Adds a
Component
to this
Group
.
GroupLayout.ParallelGroup
addComponent
(
Component
component,
 int min,
 int pref,
 int max)
Adds a
Component
to this
Group
with the specified size.
GroupLayout.ParallelGroup
addComponent
(
Component
component,
GroupLayout.Alignment
alignment)
Adds a
Component
to this
ParallelGroup
with
 the specified alignment.
GroupLayout.ParallelGroup
addComponent
(
Component
component,
GroupLayout.Alignment
alignment,
 int min,
 int pref,
 int max)
Adds a
Component
to this
ParallelGroup
with the
 specified alignment and size.
GroupLayout.ParallelGroup
addGap
(int pref)
Adds a rigid gap to this
Group
.
GroupLayout.ParallelGroup
addGap
(int min,
 int pref,
 int max)
Adds a gap to this
Group
with the specified size.
GroupLayout.ParallelGroup
addGroup
(
GroupLayout.Alignment
alignment,
GroupLayout.Group
group)
Adds a
Group
to this
ParallelGroup
with the
 specified alignment.
GroupLayout.ParallelGroup
addGroup
(
GroupLayout.Group
group)
Adds a
Group
to this
Group
.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Method Details
addGroup
public
GroupLayout.ParallelGroup
addGroup
(
GroupLayout.Group
group)
Adds a
Group
to this
Group
.
Overrides:
addGroup
in class
GroupLayout.Group
Parameters:
group
- the
Group
to add
Returns:
this
Group
addComponent
public
GroupLayout.ParallelGroup
addComponent
(
Component
component)
Adds a
Component
to this
Group
.
Overrides:
addComponent
in class
GroupLayout.Group
Parameters:
component
- the
Component
to add
Returns:
this
Group
addComponent
public
GroupLayout.ParallelGroup
addComponent
(
Component
component,
 int min,
 int pref,
 int max)
Adds a
Component
to this
Group
with the specified size.
Overrides:
addComponent
in class
GroupLayout.Group
Parameters:
component
- the
Component
to add
min
- the minimum size or one of
DEFAULT_SIZE
or
PREFERRED_SIZE
pref
- the preferred size or one of
DEFAULT_SIZE
or
PREFERRED_SIZE
max
- the maximum size or one of
DEFAULT_SIZE
or
PREFERRED_SIZE
Returns:
this
Group
addGap
public
GroupLayout.ParallelGroup
addGap
(int pref)
Adds a rigid gap to this
Group
.
Overrides:
addGap
in class
GroupLayout.Group
Parameters:
pref
- the size of the gap
Returns:
this
Group
addGap
public
GroupLayout.ParallelGroup
addGap
(int min,
 int pref,
 int max)
Adds a gap to this
Group
with the specified size.
Overrides:
addGap
in class
GroupLayout.Group
Parameters:
min
- the minimum size of the gap
pref
- the preferred size of the gap
max
- the maximum size of the gap
Returns:
this
Group
addGroup
public
GroupLayout.ParallelGroup
addGroup
(
GroupLayout.Alignment
alignment,
GroupLayout.Group
group)
Adds a
Group
to this
ParallelGroup
with the
 specified alignment. If the child is smaller than the
Group
it is aligned based on the specified
 alignment.
Parameters:
alignment
- the alignment
group
- the
Group
to add
Returns:
this
ParallelGroup
Throws:
IllegalArgumentException
- if
alignment
is
null
addComponent
public
GroupLayout.ParallelGroup
addComponent
(
Component
component,
GroupLayout.Alignment
alignment)
Adds a
Component
to this
ParallelGroup
with
 the specified alignment.
Parameters:
component
- the
Component
to add
alignment
- the alignment
Returns:
this
Group
Throws:
IllegalArgumentException
- if
alignment
is
null
addComponent
public
GroupLayout.ParallelGroup
addComponent
(
Component
component,
GroupLayout.Alignment
alignment,
 int min,
 int pref,
 int max)
Adds a
Component
to this
ParallelGroup
with the
 specified alignment and size.
Parameters:
component
- the
Component
to add
alignment
- the alignment
min
- the minimum size
pref
- the preferred size
max
- the maximum size
Returns:
this
Group
Throws:
IllegalArgumentException
- if
alignment
is
null
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.