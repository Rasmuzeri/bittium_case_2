BasicSplitPaneDivider.MouseHandler (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing.plaf.basic
Class BasicSplitPaneDivider.MouseHandler
java.lang.Object
java.awt.event.MouseAdapter
javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler
All Implemented Interfaces:
MouseListener
,
MouseMotionListener
,
MouseWheelListener
,
EventListener
Enclosing class:
BasicSplitPaneDivider
protected class
BasicSplitPaneDivider.MouseHandler
extends
MouseAdapter
implements
MouseMotionListener
MouseHandler is responsible for converting mouse events
 (released, dragged...) into the appropriate DragController
 methods.
Constructor Summary
Constructors
Modifier
Constructor
Description
protected
MouseHandler
()
Constructs a
MouseHandler
.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
mouseDragged
(
MouseEvent
e)
If dragger is not null it is messaged with continueDrag.
void
mouseEntered
(
MouseEvent
e)
Invoked when the mouse enters a component.
void
mouseExited
(
MouseEvent
e)
Invoked when the mouse exits a component.
void
mouseMoved
(
MouseEvent
e)
Resets the cursor based on the orientation.
void
mousePressed
(
MouseEvent
e)
Starts the dragging session by creating the appropriate instance
 of DragController.
void
mouseReleased
(
MouseEvent
e)
If dragger is not null it is messaged with completeDrag.
Methods declared in class java.awt.event.
MouseAdapter
mouseClicked
,
mouseWheelMoved
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
MouseHandler
protected
MouseHandler
()
Constructs a
MouseHandler
.
Method Details
mousePressed
public
void
mousePressed
(
MouseEvent
e)
Starts the dragging session by creating the appropriate instance
 of DragController.
Specified by:
mousePressed
in interface
MouseListener
Parameters:
e
- the event to be processed
mouseReleased
public
void
mouseReleased
(
MouseEvent
e)
If dragger is not null it is messaged with completeDrag.
Specified by:
mouseReleased
in interface
MouseListener
Parameters:
e
- the event to be processed
mouseDragged
public
void
mouseDragged
(
MouseEvent
e)
If dragger is not null it is messaged with continueDrag.
Specified by:
mouseDragged
in interface
MouseMotionListener
Overrides:
mouseDragged
in class
MouseAdapter
Parameters:
e
- the event to be processed
mouseMoved
public
void
mouseMoved
(
MouseEvent
e)
Resets the cursor based on the orientation.
Specified by:
mouseMoved
in interface
MouseMotionListener
Overrides:
mouseMoved
in class
MouseAdapter
Parameters:
e
- the event to be processed
mouseEntered
public
void
mouseEntered
(
MouseEvent
e)
Invoked when the mouse enters a component.
Specified by:
mouseEntered
in interface
MouseListener
Parameters:
e
- MouseEvent describing the details of the enter event.
Since:
1.5
mouseExited
public
void
mouseExited
(
MouseEvent
e)
Invoked when the mouse exits a component.
Specified by:
mouseExited
in interface
MouseListener
Parameters:
e
- MouseEvent describing the details of the exit event.
Since:
1.5
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.