BasicInternalFrameUI.InternalFrameLayout (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing.plaf.basic
Class BasicInternalFrameUI.InternalFrameLayout
java.lang.Object
javax.swing.plaf.basic.BasicInternalFrameUI.InternalFrameLayout
All Implemented Interfaces:
LayoutManager
Enclosing class:
BasicInternalFrameUI
public class
BasicInternalFrameUI.InternalFrameLayout
extends
Object
implements
LayoutManager
Internal frame layout.
Constructor Summary
Constructors
Constructor
Description
InternalFrameLayout
()
Constructs an
InternalFrameLayout
.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
addLayoutComponent
(
String
name,
Component
c)
If the layout manager uses a per-component string,
 adds the component
comp
to the layout,
 associating it
 with the string specified by
name
.
void
layoutContainer
(
Container
c)
Lays out the specified container.
Dimension
minimumLayoutSize
(
Container
c)
Calculates the minimum size dimensions for the specified
 container, given the components it contains.
Dimension
preferredLayoutSize
(
Container
c)
Calculates the preferred size dimensions for the specified
 container, given the components it contains.
void
removeLayoutComponent
(
Component
c)
Removes the specified component from the layout.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
InternalFrameLayout
public
InternalFrameLayout
()
Constructs an
InternalFrameLayout
.
Method Details
addLayoutComponent
public
void
addLayoutComponent
(
String
name,
Component
c)
If the layout manager uses a per-component string,
 adds the component
comp
to the layout,
 associating it
 with the string specified by
name
.
Specified by:
addLayoutComponent
in interface
LayoutManager
Parameters:
name
- the string to be associated with the component
c
- the component to be added
removeLayoutComponent
public
void
removeLayoutComponent
(
Component
c)
Removes the specified component from the layout.
Specified by:
removeLayoutComponent
in interface
LayoutManager
Parameters:
c
- the component to be removed
preferredLayoutSize
public
Dimension
preferredLayoutSize
(
Container
c)
Calculates the preferred size dimensions for the specified
 container, given the components it contains.
Specified by:
preferredLayoutSize
in interface
LayoutManager
Parameters:
c
- the container to be laid out
Returns:
the preferred dimension for the container
See Also:
LayoutManager.minimumLayoutSize(java.awt.Container)
minimumLayoutSize
public
Dimension
minimumLayoutSize
(
Container
c)
Calculates the minimum size dimensions for the specified
 container, given the components it contains.
Specified by:
minimumLayoutSize
in interface
LayoutManager
Parameters:
c
- the component to be laid out
Returns:
the minimum dimension for the container
See Also:
LayoutManager.preferredLayoutSize(java.awt.Container)
layoutContainer
public
void
layoutContainer
(
Container
c)
Lays out the specified container.
Specified by:
layoutContainer
in interface
LayoutManager
Parameters:
c
- the container to be laid out
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.