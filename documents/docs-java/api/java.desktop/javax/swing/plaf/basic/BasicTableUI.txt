BasicTableUI (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field
|
Constr
|
Method
Detail:
Field
|
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing.plaf.basic
Class BasicTableUI
java.lang.Object
javax.swing.plaf.ComponentUI
javax.swing.plaf.TableUI
javax.swing.plaf.basic.BasicTableUI
Direct Known Subclasses:
SynthTableUI
public class
BasicTableUI
extends
TableUI
BasicTableUI implementation
Nested Class Summary
Nested Classes
Modifier and Type
Class
Description
class
BasicTableUI.FocusHandler
This class should be treated as a "protected" inner class.
class
BasicTableUI.KeyHandler
This class should be treated as a "protected" inner class.
class
BasicTableUI.MouseInputHandler
This class should be treated as a "protected" inner class.
Field Summary
Fields
Modifier and Type
Field
Description
protected
FocusListener
focusListener
FocusListener
that are attached to the
JTable
.
protected
KeyListener
keyListener
KeyListener
that are attached to the
JTable
.
protected
MouseInputListener
mouseInputListener
MouseInputListener
that are attached to the
JTable
.
protected
CellRendererPane
rendererPane
The instance of
CellRendererPane
.
protected
JTable
table
The instance of
JTable
.
Constructor Summary
Constructors
Constructor
Description
BasicTableUI
()
Constructs a
BasicTableUI
.
Method Summary
All Methods
Static Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
protected
FocusListener
createFocusListener
()
Creates the focus listener for handling keyboard navigation in the
JTable
.
protected
KeyListener
createKeyListener
()
Creates the key listener for handling keyboard navigation in the
JTable
.
protected
MouseInputListener
createMouseInputListener
()
Creates the mouse listener for the
JTable
.
static
ComponentUI
createUI
(
JComponent
c)
Returns a new instance of
BasicTableUI
.
int
getBaseline
(
JComponent
c,
 int width,
 int height)
Returns the baseline.
Component.BaselineResizeBehavior
getBaselineResizeBehavior
(
JComponent
c)
Returns an enum indicating how the baseline of the component
 changes as the size changes.
Dimension
getMaximumSize
(
JComponent
c)
Return the maximum size of the table.
Dimension
getMinimumSize
(
JComponent
c)
Return the minimum size of the table.
Dimension
getPreferredSize
(
JComponent
c)
Return the preferred size of the table.
protected void
installDefaults
()
Initialize JTable properties, e.g. font, foreground, and background.
protected void
installKeyboardActions
()
Register all keyboard actions on the JTable.
protected void
installListeners
()
Attaches listeners to the JTable.
void
paint
(
Graphics
g,
JComponent
c)
Paint a representation of the
table
instance
 that was set in installUI().
protected void
uninstallDefaults
()
Uninstalls default properties.
protected void
uninstallKeyboardActions
()
Unregisters keyboard actions.
protected void
uninstallListeners
()
Unregisters listeners.
Methods declared in class javax.swing.plaf.
ComponentUI
contains
,
getAccessibleChild
,
getAccessibleChildrenCount
,
installUI
,
uninstallUI
,
update
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Field Details
table
protected
JTable
table
The instance of
JTable
.
rendererPane
protected
CellRendererPane
rendererPane
The instance of
CellRendererPane
.
keyListener
protected
KeyListener
keyListener
KeyListener
that are attached to the
JTable
.
focusListener
protected
FocusListener
focusListener
FocusListener
that are attached to the
JTable
.
mouseInputListener
protected
MouseInputListener
mouseInputListener
MouseInputListener
that are attached to the
JTable
.
Constructor Details
BasicTableUI
public
BasicTableUI
()
Constructs a
BasicTableUI
.
Method Details
createKeyListener
protected
KeyListener
createKeyListener
()
Creates the key listener for handling keyboard navigation in the
JTable
.
Returns:
the key listener for handling keyboard navigation in the
JTable
createFocusListener
protected
FocusListener
createFocusListener
()
Creates the focus listener for handling keyboard navigation in the
JTable
.
Returns:
the focus listener for handling keyboard navigation in the
JTable
createMouseInputListener
protected
MouseInputListener
createMouseInputListener
()
Creates the mouse listener for the
JTable
.
Returns:
the mouse listener for the
JTable
createUI
public static
ComponentUI
createUI
(
JComponent
c)
Returns a new instance of
BasicTableUI
.
Parameters:
c
- a component
Returns:
a new instance of
BasicTableUI
installDefaults
protected
void
installDefaults
()
Initialize JTable properties, e.g. font, foreground, and background.
 The font, foreground, and background properties are only set if their
 current value is either null or a UIResource, other properties are set
 if the current value is null.
See Also:
ComponentUI.installUI(javax.swing.JComponent)
installListeners
protected
void
installListeners
()
Attaches listeners to the JTable.
installKeyboardActions
protected
void
installKeyboardActions
()
Register all keyboard actions on the JTable.
uninstallDefaults
protected
void
uninstallDefaults
()
Uninstalls default properties.
uninstallListeners
protected
void
uninstallListeners
()
Unregisters listeners.
uninstallKeyboardActions
protected
void
uninstallKeyboardActions
()
Unregisters keyboard actions.
getBaseline
public
int
getBaseline
(
JComponent
c,
 int width,
 int height)
Returns the baseline.
Overrides:
getBaseline
in class
ComponentUI
Parameters:
c
-
JComponent
baseline is being requested for
width
- the width to get the baseline for
height
- the height to get the baseline for
Returns:
baseline or a value < 0 indicating there is no reasonable
                  baseline
Throws:
NullPointerException
- if
c
is
null
IllegalArgumentException
- if width or height is < 0
Since:
1.6
See Also:
JComponent.getBaseline(int, int)
getBaselineResizeBehavior
public
Component.BaselineResizeBehavior
getBaselineResizeBehavior
(
JComponent
c)
Returns an enum indicating how the baseline of the component
 changes as the size changes.
Overrides:
getBaselineResizeBehavior
in class
ComponentUI
Parameters:
c
-
JComponent
to return baseline resize behavior for
Returns:
an enum indicating how the baseline changes as the component
         size changes
Throws:
NullPointerException
- if
c
is
null
Since:
1.6
See Also:
JComponent.getBaseline(int, int)
getMinimumSize
public
Dimension
getMinimumSize
(
JComponent
c)
Return the minimum size of the table. The minimum height is the
 row height times the number of rows.
 The minimum width is the sum of the minimum widths of each column.
Overrides:
getMinimumSize
in class
ComponentUI
Parameters:
c
- the component whose minimum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a
Dimension
object or
null
See Also:
JComponent.getMinimumSize()
LayoutManager.minimumLayoutSize(java.awt.Container)
ComponentUI.getPreferredSize(javax.swing.JComponent)
getPreferredSize
public
Dimension
getPreferredSize
(
JComponent
c)
Return the preferred size of the table. The preferred height is the
 row height times the number of rows.
 The preferred width is the sum of the preferred widths of each column.
Overrides:
getPreferredSize
in class
ComponentUI
Parameters:
c
- the component whose preferred size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a
Dimension
object containing given component's preferred
         size appropriate for the look and feel
See Also:
JComponent.getPreferredSize()
LayoutManager.preferredLayoutSize(java.awt.Container)
getMaximumSize
public
Dimension
getMaximumSize
(
JComponent
c)
Return the maximum size of the table. The maximum height is the
 row heighttimes the number of rows.
 The maximum width is the sum of the maximum widths of each column.
Overrides:
getMaximumSize
in class
ComponentUI
Parameters:
c
- the component whose maximum size is being queried;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
Returns:
a
Dimension
object or
null
See Also:
JComponent.getMaximumSize()
LayoutManager2.maximumLayoutSize(java.awt.Container)
paint
public
void
paint
(
Graphics
g,
JComponent
c)
Paint a representation of the
table
instance
 that was set in installUI().
Overrides:
paint
in class
ComponentUI
Parameters:
g
- the
Graphics
context in which to paint
c
- the component being painted;
          this argument is often ignored,
          but might be used if the UI object is stateless
          and shared by multiple components
See Also:
ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.