UIDefaults.LazyInputMap (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.swing
Class UIDefaults.LazyInputMap
java.lang.Object
javax.swing.UIDefaults.LazyInputMap
All Implemented Interfaces:
UIDefaults.LazyValue
Enclosing class:
UIDefaults
public static class
UIDefaults.LazyInputMap
extends
Object
implements
UIDefaults.LazyValue
LazyInputMap
will create a
InputMap
in its
createValue
method. The bindings are passed in the constructor.
 The bindings are an array with
 the even number entries being string
KeyStrokes
(eg "alt SPACE") and
 the odd number entries being the value to use in the
InputMap
(and the key in the
ActionMap
).
Since:
1.3
Constructor Summary
Constructors
Constructor
Description
LazyInputMap
(
Object
[] bindings)
Constructs a
LazyInputMap
.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
Object
createValue
(
UIDefaults
table)
Creates an
InputMap
with the bindings that are
 passed in.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
LazyInputMap
public
LazyInputMap
(
Object
[] bindings)
Constructs a
LazyInputMap
.
Parameters:
bindings
- the bindings
Method Details
createValue
public
Object
createValue
(
UIDefaults
table)
Creates an
InputMap
with the bindings that are
 passed in.
Specified by:
createValue
in interface
UIDefaults.LazyValue
Parameters:
table
- a
UIDefaults
table
Returns:
the
InputMap
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.