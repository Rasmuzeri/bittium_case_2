Uses of Class javax.imageio.metadata.IIOMetadata (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.imageio.metadata.IIOMetadata
Packages that use
IIOMetadata
Package
Description
javax.imageio
The main package of the Java Image I/O API.
javax.imageio.metadata
A package of the Java Image I/O API dealing with reading and writing
 metadata.
javax.imageio.plugins.tiff
Public classes used by the built-in TIFF plug-ins.
Uses of
IIOMetadata
in
javax.imageio
Fields in
javax.imageio
declared as
IIOMetadata
Modifier and Type
Field
Description
protected
IIOMetadata
IIOImage.
metadata
An
IIOMetadata
object containing metadata
 associated with the image.
Methods in
javax.imageio
that return
IIOMetadata
Modifier and Type
Method
Description
IIOMetadata
ImageTranscoder.
convertImageMetadata
(
IIOMetadata
inData,
ImageTypeSpecifier
imageType,
ImageWriteParam
param)
Returns an
IIOMetadata
object that may be used for
 encoding and optionally modified using its document interfaces
 or other interfaces specific to the writer plug-in that will be
 used for encoding.
IIOMetadata
ImageTranscoder.
convertStreamMetadata
(
IIOMetadata
inData,
ImageWriteParam
param)
Returns an
IIOMetadata
object that may be used for
 encoding and optionally modified using its document interfaces
 or other interfaces specific to the writer plug-in that will be
 used for encoding.
abstract
IIOMetadata
ImageWriter.
getDefaultImageMetadata
(
ImageTypeSpecifier
imageType,
ImageWriteParam
param)
Returns an
IIOMetadata
object containing default
 values for encoding an image of the given type.
abstract
IIOMetadata
ImageWriter.
getDefaultStreamMetadata
(
ImageWriteParam
param)
Returns an
IIOMetadata
object containing default
 values for encoding a stream of images.
abstract
IIOMetadata
ImageReader.
getImageMetadata
(int imageIndex)
Returns an
IIOMetadata
object containing metadata
 associated with the given image, or
null
if the
 reader does not support reading metadata, is set to ignore
 metadata, or if no metadata is available.
IIOMetadata
ImageReader.
getImageMetadata
(int imageIndex,
String
formatName,
Set
<
String
> nodeNames)
Returns an
IIOMetadata
object representing the
 metadata associated with the given image, or
null
if the reader does not support reading metadata or none
 is available.
IIOMetadata
IIOImage.
getMetadata
()
Returns a reference to the current
IIOMetadata
object, or
null
is none is set.
abstract
IIOMetadata
ImageReader.
getStreamMetadata
()
Returns an
IIOMetadata
object representing the
 metadata associated with the input source as a whole (i.e., not
 associated with any particular image), or
null
if
 the reader does not support reading metadata, is set to ignore
 metadata, or if no metadata is available.
IIOMetadata
ImageReader.
getStreamMetadata
(
String
formatName,
Set
<
String
> nodeNames)
Returns an
IIOMetadata
object representing the
 metadata associated with the input source as a whole (i.e.,
 not associated with any particular image).
Methods in
javax.imageio
with parameters of type
IIOMetadata
Modifier and Type
Method
Description
IIOMetadata
ImageTranscoder.
convertImageMetadata
(
IIOMetadata
inData,
ImageTypeSpecifier
imageType,
ImageWriteParam
param)
Returns an
IIOMetadata
object that may be used for
 encoding and optionally modified using its document interfaces
 or other interfaces specific to the writer plug-in that will be
 used for encoding.
IIOMetadata
ImageTranscoder.
convertStreamMetadata
(
IIOMetadata
inData,
ImageWriteParam
param)
Returns an
IIOMetadata
object that may be used for
 encoding and optionally modified using its document interfaces
 or other interfaces specific to the writer plug-in that will be
 used for encoding.
int
ImageWriter.
getNumThumbnailsSupported
(
ImageTypeSpecifier
imageType,
ImageWriteParam
param,
IIOMetadata
streamMetadata,
IIOMetadata
imageMetadata)
Returns the number of thumbnails supported by the format being
 written, given the image type and any additional write
 parameters and metadata objects that will be used during
 encoding.
Dimension
[]
ImageWriter.
getPreferredThumbnailSizes
(
ImageTypeSpecifier
imageType,
ImageWriteParam
param,
IIOMetadata
streamMetadata,
IIOMetadata
imageMetadata)
Returns an array of
Dimension
s indicating the
 legal size ranges for thumbnail images as they will be encoded
 in the output file or stream.
void
ImageWriter.
prepareInsertEmpty
(int imageIndex,
ImageTypeSpecifier
imageType,
 int width,
 int height,
IIOMetadata
imageMetadata,
List
<? extends
BufferedImage
> thumbnails,
ImageWriteParam
param)
Begins the insertion of a new image with undefined pixel values
 into an existing image stream.
void
ImageWriter.
prepareWriteEmpty
(
IIOMetadata
streamMetadata,
ImageTypeSpecifier
imageType,
 int width,
 int height,
IIOMetadata
imageMetadata,
List
<? extends
BufferedImage
> thumbnails,
ImageWriteParam
param)
Begins the writing of a complete image stream, consisting of a
 single image with undefined pixel values and associated
 metadata and thumbnails, to the output.
void
ImageWriter.
prepareWriteSequence
(
IIOMetadata
streamMetadata)
Prepares a stream to accept a series of subsequent
writeToSequence
calls, using the provided stream
 metadata object.
void
ImageWriter.
replaceImageMetadata
(int imageIndex,
IIOMetadata
imageMetadata)
Replaces the image metadata associated with an existing image.
void
ImageWriter.
replaceStreamMetadata
(
IIOMetadata
streamMetadata)
Replaces the stream metadata in the output with new
 information.
void
IIOImage.
setMetadata
(
IIOMetadata
metadata)
Sets the
IIOMetadata
to a new object, or
null
.
abstract void
ImageWriter.
write
(
IIOMetadata
streamMetadata,
IIOImage
image,
ImageWriteParam
param)
Appends a complete image stream containing a single image and
 associated stream and image metadata and thumbnails to the
 output.
Constructors in
javax.imageio
with parameters of type
IIOMetadata
Modifier
Constructor
Description
IIOImage
(
Raster
raster,
List
<? extends
BufferedImage
> thumbnails,
IIOMetadata
metadata)
Constructs an
IIOImage
containing a
Raster
, and thumbnails and metadata
 associated with it.
IIOImage
(
RenderedImage
image,
List
<? extends
BufferedImage
> thumbnails,
IIOMetadata
metadata)
Constructs an
IIOImage
containing a
RenderedImage
, and thumbnails and metadata
 associated with it.
Uses of
IIOMetadata
in
javax.imageio.metadata
Methods in
javax.imageio.metadata
with parameters of type
IIOMetadata
Modifier and Type
Method
Description
boolean
IIOMetadataController.
activate
(
IIOMetadata
metadata)
Activates the controller.
Uses of
IIOMetadata
in
javax.imageio.plugins.tiff
Methods in
javax.imageio.plugins.tiff
that return
IIOMetadata
Modifier and Type
Method
Description
IIOMetadata
TIFFDirectory.
getAsMetadata
()
Converts the directory to a metadata object.
Methods in
javax.imageio.plugins.tiff
with parameters of type
IIOMetadata
Modifier and Type
Method
Description
static
TIFFDirectory
TIFFDirectory.
createFromMetadata
(
IIOMetadata
tiffImageMetadata)
Creates a
TIFFDirectory
instance from the contents of
 an image metadata object.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.