MemoryCacheImageInputStream (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.imageio.stream
Class MemoryCacheImageInputStream
java.lang.Object
javax.imageio.stream.ImageInputStreamImpl
javax.imageio.stream.MemoryCacheImageInputStream
All Implemented Interfaces:
Closeable
,
DataInput
,
AutoCloseable
,
ImageInputStream
public class
MemoryCacheImageInputStream
extends
ImageInputStreamImpl
An implementation of
ImageInputStream
that gets its
 input from a regular
InputStream
.  A memory buffer is
 used to cache at least the data between the discard position and
 the current read position.
In general, it is preferable to use a
FileCacheImageInputStream
when reading from a regular
InputStream
.  This class is provided for cases where
 it is not possible to create a writable temporary file.
Field Summary
Fields declared in class javax.imageio.stream.
ImageInputStreamImpl
bitOffset
,
byteOrder
,
flushedPos
,
streamPos
Constructor Summary
Constructors
Constructor
Description
MemoryCacheImageInputStream
(
InputStream
stream)
Constructs a
MemoryCacheImageInputStream
that will read
 from a given
InputStream
.
Method Summary
All Methods
Instance Methods
Concrete Methods
Deprecated Methods
Modifier and Type
Method
Description
void
close
()
Closes this
MemoryCacheImageInputStream
, freeing
 the cache.
protected void
finalize
()
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.
boolean
isCached
()
Returns
true
since this
ImageInputStream
caches data in order to allow
 seeking backwards.
boolean
isCachedFile
()
Returns
false
since this
ImageInputStream
does not maintain a file cache.
boolean
isCachedMemory
()
Returns
true
since this
ImageInputStream
maintains a main memory cache.
int
read
()
Reads a single byte from the stream and returns it as an
int
between 0 and 255.
int
read
(byte[] b,
 int off,
 int len)
Reads up to
len
bytes from the stream, and stores
 them into
b
starting at index
off
.
Methods declared in class javax.imageio.stream.
ImageInputStreamImpl
checkClosed
,
flush
,
flushBefore
,
getBitOffset
,
getByteOrder
,
getFlushedPosition
,
getStreamPosition
,
length
,
mark
,
read
,
readBit
,
readBits
,
readBoolean
,
readByte
,
readBytes
,
readChar
,
readDouble
,
readFloat
,
readFully
,
readFully
,
readFully
,
readFully
,
readFully
,
readFully
,
readFully
,
readFully
,
readInt
,
readLine
,
readLong
,
readShort
,
readUnsignedByte
,
readUnsignedInt
,
readUnsignedShort
,
readUTF
,
reset
,
seek
,
setBitOffset
,
setByteOrder
,
skipBytes
,
skipBytes
Methods declared in class java.lang.
Object
clone
,
equals
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
MemoryCacheImageInputStream
public
MemoryCacheImageInputStream
(
InputStream
stream)
Constructs a
MemoryCacheImageInputStream
that will read
 from a given
InputStream
.
Parameters:
stream
- an
InputStream
to read from.
Throws:
IllegalArgumentException
- if
stream
is
null
.
Method Details
read
public
int
read
()
         throws
IOException
Description copied from class:
ImageInputStreamImpl
Reads a single byte from the stream and returns it as an
int
between 0 and 255.  If EOF is reached,
-1
is returned.
Subclasses must provide an implementation for this method.
 The subclass implementation should update the stream position
 before exiting.
The bit offset within the stream must be reset to zero before
 the read occurs.
Specified by:
read
in interface
ImageInputStream
Specified by:
read
in class
ImageInputStreamImpl
Returns:
the value of the next byte in the stream, or
-1
if EOF is reached.
Throws:
IOException
- if the stream has been closed.
read
public
int
read
(byte[] b,
 int off,
 int len)
throws
IOException
Description copied from class:
ImageInputStreamImpl
Reads up to
len
bytes from the stream, and stores
 them into
b
starting at index
off
.
 If no bytes can be read because the end of the stream has been
 reached,
-1
is returned.
The bit offset within the stream must be reset to zero before
 the read occurs.
Subclasses must provide an implementation for this method.
 The subclass implementation should update the stream position
 before exiting.
Specified by:
read
in interface
ImageInputStream
Specified by:
read
in class
ImageInputStreamImpl
Parameters:
b
- an array of bytes to be written to.
off
- the starting position within
b
to write to.
len
- the maximum number of bytes to read.
Returns:
the number of bytes actually read, or
-1
to indicate EOF.
Throws:
IOException
- if an I/O error occurs.
isCached
public
boolean
isCached
()
Returns
true
since this
ImageInputStream
caches data in order to allow
 seeking backwards.
Specified by:
isCached
in interface
ImageInputStream
Overrides:
isCached
in class
ImageInputStreamImpl
Returns:
true
.
See Also:
isCachedMemory()
isCachedFile()
isCachedFile
public
boolean
isCachedFile
()
Returns
false
since this
ImageInputStream
does not maintain a file cache.
Specified by:
isCachedFile
in interface
ImageInputStream
Overrides:
isCachedFile
in class
ImageInputStreamImpl
Returns:
false
.
See Also:
isCached()
isCachedMemory()
isCachedMemory
public
boolean
isCachedMemory
()
Returns
true
since this
ImageInputStream
maintains a main memory cache.
Specified by:
isCachedMemory
in interface
ImageInputStream
Overrides:
isCachedMemory
in class
ImageInputStreamImpl
Returns:
true
.
See Also:
isCached()
isCachedFile()
close
public
void
close
()
           throws
IOException
Closes this
MemoryCacheImageInputStream
, freeing
 the cache.  The source
InputStream
is not closed.
Throws:
IOException
- if an I/O error occurs.
finalize
@Deprecated
(
since
="9",
forRemoval
=true)
protected
void
finalize
()
                 throws
Throwable
Deprecated, for removal: This API element is subject to removal in a future version.
Finalization has been deprecated for removal.  See
Object.finalize()
for background information and details
 about migration options.
Finalizes this object prior to garbage collection.  The
close
method is called to close any open input
 source.  This method should not be called from application
 code.
Overrides:
finalize
in class
ImageInputStreamImpl
Throws:
Throwable
- if an error occurs during superclass
 finalization.
See Also:
WeakReference
PhantomReference
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.