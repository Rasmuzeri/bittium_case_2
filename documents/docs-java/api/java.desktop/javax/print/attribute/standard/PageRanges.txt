PageRanges (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.print.attribute.standard
Class PageRanges
java.lang.Object
javax.print.attribute.SetOfIntegerSyntax
javax.print.attribute.standard.PageRanges
All Implemented Interfaces:
Serializable
,
Cloneable
,
Attribute
,
DocAttribute
,
PrintJobAttribute
,
PrintRequestAttribute
public final class
PageRanges
extends
SetOfIntegerSyntax
implements
DocAttribute
,
PrintRequestAttribute
,
PrintJobAttribute
Class
PageRanges
is a printing attribute class, a set of integers,
 that identifies the range(s) of print-stream pages that the Printer object
 uses for each copy of each document which are to be printed. Nothing is
 printed for any pages identified that do not exist in the document(s). The
 attribute is associated with
print-stream
pages, not
 application-numbered pages (for example, the page numbers found in the
 headers and or footers for certain word processing applications).
In most cases, the exact pages to be printed will be generated by a device
 driver and this attribute would not be required. However, when printing an
 archived document which has already been formatted, the end user may elect to
 print just a subset of the pages contained in the document. In this case, if
 a page range of
"
n
-
m
"
is specified, the first page
 to be printed will be page
n.
All subsequent pages of the document
 will be printed through and including page
m.
If a
PageRanges
attribute is not specified for a print job, all pages
 of the document will be printed. In other words, the default value for the
PageRanges
attribute is always
{{1, Integer.MAX_VALUE}}
.
The effect of a
PageRanges
attribute on a multidoc print job (a job
 with multiple documents) depends on whether all the docs have the same page
 ranges specified or whether different docs have different page ranges
 specified, and on the (perhaps defaulted) value of the
MultipleDocumentHandling
attribute.
If all the docs have the same page ranges specified, then any value of
MultipleDocumentHandling
makes sense, and
   the printer's processing depends on the
MultipleDocumentHandling
value:
SINGLE_DOCUMENT
-- All the input docs will be combined
     together into one output document. The specified page ranges of that
     output document will be printed.
SINGLE_DOCUMENT_NEW_SHEET
-- All the input docs will be
     combined together into one output document, and the first impression of
     each input doc will always start on a new media sheet. The specified page
     ranges of that output document will be printed.
SEPARATE_DOCUMENTS_UNCOLLATED_COPIES
-- For each separate
     input doc, the specified page ranges will be printed.
SEPARATE_DOCUMENTS_COLLATED_COPIES
-- For each separate input
     doc, the specified page ranges will be printed.
SEPARATE_DOCUMENTS_UNCOLLATED_COPIES
-- For each separate
     input doc, its own specified page ranges will be printed.
SEPARATE_DOCUMENTS_COLLATED_COPIES
-- For each separate input
     doc, its own specified page ranges will be printed.
IPP Compatibility:
The PageRanges attribute's canonical array form
 gives the lower and upper bound for each range of pages to be included in and
 IPP "page-ranges" attribute. See class
SetOfIntegerSyntax
for an explanation of canonical
 array form. The category name returned by
getName()
gives the IPP
 attribute name.
See Also:
Serialized Form
Constructor Summary
Constructors
Constructor
Description
PageRanges
(int member)
Construct a new page ranges attribute containing a single integer.
PageRanges
(int[][] members)
Construct a new page ranges attribute with the given members.
PageRanges
(int lowerBound,
 int upperBound)
Construct a new page ranges attribute containing a single range of
 integers.
PageRanges
(
String
members)
Construct a new page ranges attribute with the given members in string
 form.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
boolean
equals
(
Object
object)
Returns whether this page ranges attribute is equivalent to the passed in
 object.
final
Class
<? extends
Attribute
>
getCategory
()
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
final
String
getName
()
Get the name of the category of which this attribute value is an
 instance.
Methods declared in class javax.print.attribute.
SetOfIntegerSyntax
contains
,
contains
,
getMembers
,
hashCode
,
next
,
toString
Methods declared in class java.lang.
Object
clone
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Constructor Details
PageRanges
public
PageRanges
(int[][] members)
Construct a new page ranges attribute with the given members. The members
 are specified in "array form;" see class
SetOfIntegerSyntax
for an explanation of array
 form.
Parameters:
members
- set members in array form
Throws:
NullPointerException
- if
members
is
null
or any
         element of
members
is
null
IllegalArgumentException
- if any element of
members
is not
         a length-one or length-two array. Also if
members
is a
         zero-length array or if any member of the set is less than 1.
PageRanges
public
PageRanges
(
String
members)
Construct a new page ranges attribute with the given members in string
 form. See class
SetOfIntegerSyntax
for
 explanation of the syntax.
Parameters:
members
- set members in string form
Throws:
NullPointerException
- if
members
is
null
or any
 element of
members
is
null
IllegalArgumentException
- if
members
does not obey the
         proper syntax. Also if the constructed set-of-integer is a
         zero-length array or if any member of the set is less than 1.
PageRanges
public
PageRanges
(int member)
Construct a new page ranges attribute containing a single integer. That
 is, only the one page is to be printed.
Parameters:
member
- set member
Throws:
IllegalArgumentException
- if
member < 1
PageRanges
public
PageRanges
(int lowerBound,
 int upperBound)
Construct a new page ranges attribute containing a single range of
 integers. That is, only those pages in the one range are to be printed.
Parameters:
lowerBound
- lower bound of the range
upperBound
- upper bound of the range
Throws:
IllegalArgumentException
- if a
null
range is specified or
         if a
non-null
range is specified with
lowerBound
less than 1
Method Details
equals
public
boolean
equals
(
Object
object)
Returns whether this page ranges attribute is equivalent to the passed in
 object. To be equivalent, all of the following conditions must be true:
object
is not
null
.
object
is an instance of class
PageRanges
.
This page ranges attribute's members and
object
's members
   are the same.
Overrides:
equals
in class
SetOfIntegerSyntax
Parameters:
object
-
Object
to compare to
Returns:
true
if
object
is equivalent to this page ranges
         attribute,
false
otherwise
See Also:
Object.hashCode()
HashMap
getCategory
public final
Class
<? extends
Attribute
>
getCategory
()
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
For class
PageRanges
, the category is class
PageRanges
itself.
Specified by:
getCategory
in interface
Attribute
Returns:
printing attribute class (category), an instance of class
java.lang.Class
getName
public final
String
getName
()
Get the name of the category of which this attribute value is an
 instance.
For class
PageRanges
, the category name is
"page-ranges"
.
Specified by:
getName
in interface
Attribute
Returns:
attribute category name
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.