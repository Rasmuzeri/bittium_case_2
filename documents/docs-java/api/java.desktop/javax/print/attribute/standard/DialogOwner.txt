DialogOwner (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.print.attribute.standard
Class DialogOwner
java.lang.Object
javax.print.attribute.standard.DialogOwner
All Implemented Interfaces:
Serializable
,
Attribute
,
PrintRequestAttribute
public final class
DialogOwner
extends
Object
implements
PrintRequestAttribute
An attribute class used to support requesting a print or page setup dialog
 be kept displayed on top of all windows or some specific window.
Constructed without any arguments it will request that a print or page
 setup dialog be configured as if the application directly was to specify
java.awt.Window.setAlwaysOnTop(true)
, subject to permission checks.
Constructed with a
Window
parameter, it requests that
 the dialog be owned by the specified window.
Since:
11
See Also:
Serialized Form
Constructor Summary
Constructors
Constructor
Description
DialogOwner
()
Constructs an instance which can be used to request
java.awt.Window.setAlwaysOnTop(true)
behaviour.
DialogOwner
(
Window
owner)
Constructs an instance which can be used to request that the
 specified
Window
be the owner of the dialog.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
final
Class
<? extends
Attribute
>
getCategory
()
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
final
String
getName
()
Get the name of the category of which this attribute value is an
 instance.
Window
getOwner
()
Returns a
Window owner
, if one was specified,
 otherwise
null
.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
DialogOwner
public
DialogOwner
()
Constructs an instance which can be used to request
java.awt.Window.setAlwaysOnTop(true)
behaviour.
 This should be used where there is no application preferred owner window.
 Whether this has any effect depends on if always on top is supported
 for this platform and the particular dialog to be displayed.
DialogOwner
public
DialogOwner
(
Window
owner)
Constructs an instance which can be used to request that the
 specified
Window
be the owner of the dialog.
Parameters:
owner
- window.
Method Details
getOwner
public
Window
getOwner
()
Returns a
Window owner
, if one was specified,
 otherwise
null
.
Returns:
an owner window.
getCategory
public final
Class
<? extends
Attribute
>
getCategory
()
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
For class
DialogOwner
, the category is class
DialogOwner
itself.
Specified by:
getCategory
in interface
Attribute
Returns:
printing attribute class (category), an instance of class
java.lang.Class
getName
public final
String
getName
()
Get the name of the category of which this attribute value is an
 instance.
For class
DialogOwner
, the category name is
"dialog-owner"
.
Specified by:
getName
in interface
Attribute
Returns:
attribute category name
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.