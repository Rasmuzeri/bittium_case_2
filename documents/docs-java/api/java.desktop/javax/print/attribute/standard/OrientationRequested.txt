OrientationRequested (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field
|
Constr
|
Method
SEARCH
Module
java.desktop
Package
javax.print.attribute.standard
Class OrientationRequested
java.lang.Object
javax.print.attribute.EnumSyntax
javax.print.attribute.standard.OrientationRequested
All Implemented Interfaces:
Serializable
,
Cloneable
,
Attribute
,
DocAttribute
,
PrintJobAttribute
,
PrintRequestAttribute
public final class
OrientationRequested
extends
EnumSyntax
implements
DocAttribute
,
PrintRequestAttribute
,
PrintJobAttribute
Class
OrientationRequested
is a printing attribute class, an
 enumeration, that indicates the desired orientation for printed print-stream
 pages; it does not describe the orientation of the client-supplied
 print-stream pages.
For some document formats (such as
"application/postscript"
), the
 desired orientation of the print-stream pages is specified within the
 document data. This information is generated by a device driver prior to the
 submission of the print job. Other document formats (such as
"text/plain"
) do not include the notion of desired orientation within
 the document data. In the latter case it is possible for the printer to bind
 the desired orientation to the document data after it has been submitted. It
 is expected that a printer would only support the
OrientationRequested
attribute for some document formats (e.g.,
"text/plain"
or
"text/html"
) but not others (e.g.
"application/postscript"
). This is no different from any other job
 template attribute, since a print job can always impose constraints among the
 values of different job template attributes. However, a special mention is
 made here since it is very likely that a printer will support the
OrientationRequested
attribute for only a subset of the supported
 document formats.
IPP Compatibility:
The category name returned by
getName()
is
 the IPP attribute name. The enumeration's integer value is the IPP enum
 value. The
toString()
method returns the IPP string representation of
 the attribute value.
See Also:
Serialized Form
Field Summary
Fields
Modifier and Type
Field
Description
static final
OrientationRequested
LANDSCAPE
The content will be imaged across the long edge of the medium.
static final
OrientationRequested
PORTRAIT
The content will be imaged across the short edge of the medium.
static final
OrientationRequested
REVERSE_LANDSCAPE
The content will be imaged across the long edge of the medium, but in the
 opposite manner from landscape.
static final
OrientationRequested
REVERSE_PORTRAIT
The content will be imaged across the short edge of the medium, but in
 the opposite manner from portrait.
Constructor Summary
Constructors
Modifier
Constructor
Description
protected
OrientationRequested
(int value)
Construct a new orientation requested enumeration value with the given
 integer value.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
final
Class
<? extends
Attribute
>
getCategory
()
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
protected
EnumSyntax
[]
getEnumValueTable
()
Returns the enumeration value table for class
OrientationRequested
.
final
String
getName
()
Get the name of the category of which this attribute value is an
 instance.
protected int
getOffset
()
Returns the lowest integer value used by class
OrientationRequested
.
protected
String
[]
getStringTable
()
Returns the string table for class
OrientationRequested
.
Methods declared in class javax.print.attribute.
EnumSyntax
clone
,
getValue
,
hashCode
,
readResolve
,
toString
Methods declared in class java.lang.
Object
equals
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Field Details
PORTRAIT
public static final
OrientationRequested
PORTRAIT
The content will be imaged across the short edge of the medium.
LANDSCAPE
public static final
OrientationRequested
LANDSCAPE
The content will be imaged across the long edge of the medium. Landscape
 is defined to be a rotation of the print-stream page to be imaged by +90
 degrees with respect to the medium (i.e. anti-clockwise) from the
 portrait orientation.
Note:
The +90 direction was chosen because
 simple finishing on the long edge is the same edge whether portrait or
 landscape.
REVERSE_LANDSCAPE
public static final
OrientationRequested
REVERSE_LANDSCAPE
The content will be imaged across the long edge of the medium, but in the
 opposite manner from landscape. Reverse-landscape is defined to be a
 rotation of the print-stream page to be imaged by -90 degrees with
 respect to the medium (i.e. clockwise) from the portrait orientation.
Note:
The REVERSE_LANDSCAPE value was added because some
 applications rotate landscape -90 degrees from portrait, rather than +90
 degrees.
REVERSE_PORTRAIT
public static final
OrientationRequested
REVERSE_PORTRAIT
The content will be imaged across the short edge of the medium, but in
 the opposite manner from portrait. Reverse-portrait is defined to be a
 rotation of the print-stream page to be imaged by 180 degrees with
 respect to the medium from the portrait orientation.
Note:
The
 REVERSE_PORTRAIT value was added for use with the
Finishings
attribute in cases where the opposite edge
 is desired for finishing a portrait document on simple finishing devices
 that have only one finishing position. Thus a
"text/plain"
portrait document can be stapled "on the right" by a simple finishing
 device as is common use with some Middle Eastern languages such as
 Hebrew.
Constructor Details
OrientationRequested
protected
OrientationRequested
(int value)
Construct a new orientation requested enumeration value with the given
 integer value.
Parameters:
value
- Integer value
Method Details
getStringTable
protected
String
[]
getStringTable
()
Returns the string table for class
OrientationRequested
.
Overrides:
getStringTable
in class
EnumSyntax
Returns:
the string table
getEnumValueTable
protected
EnumSyntax
[]
getEnumValueTable
()
Returns the enumeration value table for class
OrientationRequested
.
Overrides:
getEnumValueTable
in class
EnumSyntax
Returns:
the value table
getOffset
protected
int
getOffset
()
Returns the lowest integer value used by class
OrientationRequested
.
Overrides:
getOffset
in class
EnumSyntax
Returns:
the offset of the lowest enumeration value
getCategory
public final
Class
<? extends
Attribute
>
getCategory
()
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
For class
OrientationRequested
, the category is class
OrientationRequested
itself.
Specified by:
getCategory
in interface
Attribute
Returns:
printing attribute class (category), an instance of class
java.lang.Class
getName
public final
String
getName
()
Get the name of the category of which this attribute value is an
 instance.
For class
OrientationRequested
, the category name is
"orientation-requested"
.
Specified by:
getName
in interface
Attribute
Returns:
attribute category name
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.