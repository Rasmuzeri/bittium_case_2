Uses of Package javax.management.relation (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Package
javax.management.relation
Packages that use
javax.management.relation
Package
Description
javax.management.relation
Provides the definition of the Relation Service.
Classes in
javax.management.relation
used by
javax.management.relation
Class
Description
InvalidRelationIdException
This exception is raised when relation id provided for a relation is already
 used.
InvalidRelationServiceException
This exception is raised when an invalid Relation Service is provided.
InvalidRelationTypeException
Invalid relation type.
InvalidRoleInfoException
This exception is raised when, in a role info, its minimum degree is greater
 than its maximum degree.
InvalidRoleValueException
Role value is invalid.
Relation
This interface has to be implemented by any MBean class expected to
 represent a relation managed using the Relation Service.
RelationException
This class is the superclass of any exception which can be raised during
 relation management.
RelationNotFoundException
This exception is raised when there is no relation for a given relation id
 in a Relation Service.
RelationServiceMBean
The Relation Service is in charge of creating and deleting relation types
 and relations, of handling the consistency and of providing query
 mechanisms.
RelationServiceNotRegisteredException
This exception is raised when an access is done to the Relation Service and
 that one is not registered.
RelationSupportMBean
A RelationSupport object is used internally by the Relation Service to
 represent simple relations (only roles, no properties or methods), with an
 unlimited number of roles, of any relation type.
RelationType
The RelationType interface has to be implemented by any class expected to
 represent a relation type.
RelationTypeNotFoundException
This exception is raised when there is no relation type with given name in
 Relation Service.
Role
Represents a role: includes a role name and referenced MBeans (via their
 ObjectNames).
RoleInfo
A RoleInfo object summarises a role in a relation type.
RoleInfoNotFoundException
This exception is raised when there is no role info with given name in a
 given relation type.
RoleList
A RoleList represents a list of roles (Role objects).
RoleNotFoundException
This exception is raised when a role in a relation does not exist, or is not
 readable, or is not settable.
RoleResult
Represents the result of a multiple access to several roles of a relation
 (either for reading or writing).
RoleUnresolved
Represents an unresolved role: a role not retrieved from a relation due
 to a problem.
RoleUnresolvedList
A RoleUnresolvedList represents a list of RoleUnresolved objects,
 representing roles not retrieved from a relation due to a problem
 encountered when trying to access (read or write) the roles.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.