Uses of Class javax.management.relation.RelationNotFoundException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.management.relation.RelationNotFoundException
Packages that use
RelationNotFoundException
Package
Description
javax.management.relation
Provides the definition of the Relation Service.
Uses of
RelationNotFoundException
in
javax.management.relation
Methods in
javax.management.relation
that throw
RelationNotFoundException
Modifier and Type
Method
Description
RoleResult
RelationService.
getAllRoles
(
String
relationId)
Returns all roles present in the relation.
RoleResult
RelationServiceMBean.
getAllRoles
(
String
relationId)
Returns all roles present in the relation.
Map
<
ObjectName
,
List
<
String
>>
RelationService.
getReferencedMBeans
(
String
relationId)
Retrieves MBeans referenced in the various roles of the relation.
Map
<
ObjectName
,
List
<
String
>>
RelationServiceMBean.
getReferencedMBeans
(
String
relationId)
Retrieves MBeans referenced in the various roles of the relation.
String
RelationService.
getRelationTypeName
(
String
relationId)
Returns name of associated relation type for given relation.
String
RelationServiceMBean.
getRelationTypeName
(
String
relationId)
Returns name of associated relation type for given relation.
List
<
ObjectName
>
RelationService.
getRole
(
String
relationId,
String
roleName)
Retrieves role value for given role name in given relation.
List
<
ObjectName
>
RelationServiceMBean.
getRole
(
String
relationId,
String
roleName)
Retrieves role value for given role name in given relation.
Integer
RelationService.
getRoleCardinality
(
String
relationId,
String
roleName)
Retrieves the number of MBeans currently referenced in the given role.
Integer
RelationServiceMBean.
getRoleCardinality
(
String
relationId,
String
roleName)
Retrieves the number of MBeans currently referenced in the
 given role.
RoleResult
RelationService.
getRoles
(
String
relationId,
String
[] roleNameArray)
Retrieves values of roles with given names in given relation.
RoleResult
RelationServiceMBean.
getRoles
(
String
relationId,
String
[] roleNameArray)
Retrieves values of roles with given names in given relation.
void
Relation.
handleMBeanUnregistration
(
ObjectName
objectName,
String
roleName)
Callback used by the Relation Service when a MBean referenced in a role
 is unregistered.
void
RelationSupport.
handleMBeanUnregistration
(
ObjectName
objectName,
String
roleName)
Callback used by the Relation Service when a MBean referenced in a role
 is unregistered.
ObjectName
RelationService.
isRelationMBean
(
String
relationId)
If the relation is represented by an MBean (created by the user and
 added as a relation in the Relation Service), returns the ObjectName of
 the MBean.
ObjectName
RelationServiceMBean.
isRelationMBean
(
String
relationId)
If the relation is represented by an MBean (created by the user and
 added as a relation in the Relation Service), returns the ObjectName of
 the MBean.
void
RelationService.
removeRelation
(
String
relationId)
Removes given relation from the Relation Service.
void
RelationServiceMBean.
removeRelation
(
String
relationId)
Removes given relation from the Relation Service.
void
RelationService.
sendRelationCreationNotification
(
String
relationId)
Sends a notification (RelationNotification) for a relation creation.
void
RelationServiceMBean.
sendRelationCreationNotification
(
String
relationId)
Sends a notification (RelationNotification) for a relation creation.
void
RelationService.
sendRelationRemovalNotification
(
String
relationId,
List
<
ObjectName
> unregMBeanList)
Sends a notification (RelationNotification) for a relation removal.
void
RelationServiceMBean.
sendRelationRemovalNotification
(
String
relationId,
List
<
ObjectName
> unregMBeanList)
Sends a notification (RelationNotification) for a relation removal.
void
RelationService.
sendRoleUpdateNotification
(
String
relationId,
Role
newRole,
List
<
ObjectName
> oldValue)
Sends a notification (RelationNotification) for a role update in the
 given relation.
void
RelationServiceMBean.
sendRoleUpdateNotification
(
String
relationId,
Role
newRole,
List
<
ObjectName
> oldRoleValue)
Sends a notification (RelationNotification) for a role update in the
 given relation.
void
Relation.
setRole
(
Role
role)
Sets the given role.
void
RelationService.
setRole
(
String
relationId,
Role
role)
Sets the given role in given relation.
void
RelationServiceMBean.
setRole
(
String
relationId,
Role
role)
Sets the given role in given relation.
void
RelationSupport.
setRole
(
Role
role)
Sets the given role.
RoleResult
Relation.
setRoles
(
RoleList
roleList)
Sets the given roles.
RoleResult
RelationService.
setRoles
(
String
relationId,
RoleList
roleList)
Sets the given roles in given relation.
RoleResult
RelationServiceMBean.
setRoles
(
String
relationId,
RoleList
roleList)
Sets the given roles in given relation.
RoleResult
RelationSupport.
setRoles
(
RoleList
list)
Sets the given roles.
void
RelationService.
updateRoleMap
(
String
relationId,
Role
newRole,
List
<
ObjectName
> oldValue)
Handles update of the Relation Service role map for the update of given
 role in given relation.
void
RelationServiceMBean.
updateRoleMap
(
String
relationId,
Role
newRole,
List
<
ObjectName
> oldRoleValue)
Handles update of the Relation Service role map for the update of given
 role in given relation.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.