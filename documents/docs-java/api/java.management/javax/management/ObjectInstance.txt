ObjectInstance (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.management
Package
javax.management
Class ObjectInstance
java.lang.Object
javax.management.ObjectInstance
All Implemented Interfaces:
Serializable
public class
ObjectInstance
extends
Object
implements
Serializable
Used to represent the object name of an MBean and its class name.
 If the MBean is a Dynamic MBean the class name should be retrieved from
 the
MBeanInfo
it provides.
Since:
1.5
See Also:
Serialized Form
Constructor Summary
Constructors
Constructor
Description
ObjectInstance
(
String
objectName,
String
className)
Allows an object instance to be created given a string representation of
 an object name and the full class name, including the package name.
ObjectInstance
(
ObjectName
objectName,
String
className)
Allows an object instance to be created given an object name and
 the full class name, including the package name.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
boolean
equals
(
Object
object)
Compares the current object instance with another object instance.
String
getClassName
()
Returns the class part.
ObjectName
getObjectName
()
Returns the object name part.
String
toString
()
Returns a string representing this ObjectInstance object.
Methods declared in class java.lang.
Object
clone
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Constructor Details
ObjectInstance
public
ObjectInstance
(
String
objectName,
String
className)
throws
MalformedObjectNameException
Allows an object instance to be created given a string representation of
 an object name and the full class name, including the package name.
Parameters:
objectName
- A string representation of the object name.
className
- The full class name, including the package
 name, of the object instance.  If the MBean is a Dynamic MBean
 the class name corresponds to its
getMBeanInfo()
.getClassName()
.
Throws:
MalformedObjectNameException
- The string passed as a
 parameter does not have the right format.
ObjectInstance
public
ObjectInstance
(
ObjectName
objectName,
String
className)
Allows an object instance to be created given an object name and
 the full class name, including the package name.
Parameters:
objectName
- The object name.
className
- The full class name, including the package
 name, of the object instance.  If the MBean is a Dynamic MBean
 the class name corresponds to its
getMBeanInfo()
.getClassName()
.
 If the MBean is a Dynamic MBean the class name should be retrieved
 from the
MBeanInfo
it provides.
Method Details
equals
public
boolean
equals
(
Object
object)
Compares the current object instance with another object instance.
Overrides:
equals
in class
Object
Parameters:
object
- The object instance that the current object instance is
     to be compared with.
Returns:
True if the two object instances are equal, otherwise false.
See Also:
Object.hashCode()
HashMap
getObjectName
public
ObjectName
getObjectName
()
Returns the object name part.
Returns:
the object name.
getClassName
public
String
getClassName
()
Returns the class part.
Returns:
the class name.
toString
public
String
toString
()
Returns a string representing this ObjectInstance object. The format of this string
 is not specified, but users can expect that two ObjectInstances return the same
 string if and only if they are equal.
Overrides:
toString
in class
Object
Returns:
a string representation of the object.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.