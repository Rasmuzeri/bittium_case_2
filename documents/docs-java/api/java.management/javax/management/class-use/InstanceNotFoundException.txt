Uses of Class javax.management.InstanceNotFoundException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.management.InstanceNotFoundException
Packages that use
InstanceNotFoundException
Package
Description
javax.management
Provides the core classes for the Java Management Extensions.
javax.management.modelmbean
Provides the definition of the ModelMBean classes.
javax.management.relation
Provides the definition of the Relation Service.
javax.management.remote.rmi
The RMI connector is a connector for the JMX Remote API that
      uses RMI to transmit client requests to a remote MBean server.
javax.management.timer
Provides the definition of the Timer MBean.
Uses of
InstanceNotFoundException
in
javax.management
Methods in
javax.management
that throw
InstanceNotFoundException
Modifier and Type
Method
Description
void
MBeanServer.
addNotificationListener
(
ObjectName
name,
NotificationListener
listener,
NotificationFilter
filter,
Object
handback)
Adds a listener to a registered MBean.
void
MBeanServer.
addNotificationListener
(
ObjectName
name,
ObjectName
listener,
NotificationFilter
filter,
Object
handback)
Adds a listener to a registered MBean.
void
MBeanServerConnection.
addNotificationListener
(
ObjectName
name,
NotificationListener
listener,
NotificationFilter
filter,
Object
handback)
Adds a listener to a registered MBean.
void
MBeanServerConnection.
addNotificationListener
(
ObjectName
name,
ObjectName
listener,
NotificationFilter
filter,
Object
handback)
Adds a listener to a registered MBean.
ObjectInstance
MBeanServer.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName)
Instantiates and registers an MBean in the MBean server.
ObjectInstance
MBeanServer.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName,
Object
[] params,
String
[] signature)
Instantiates and registers an MBean in the MBean server.
ObjectInstance
MBeanServerConnection.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName)
Instantiates and registers an MBean in the MBean server.
ObjectInstance
MBeanServerConnection.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName,
Object
[] params,
String
[] signature)
Instantiates and registers an MBean in the MBean server.
default
ObjectInputStream
MBeanServer.
deserialize
(
String
className,
ObjectName
loaderName,
 byte[] data)
Deprecated.
Use
getClassLoader
to obtain
 the class loader for deserialization.
default
ObjectInputStream
MBeanServer.
deserialize
(
ObjectName
name,
 byte[] data)
Deprecated.
Use
getClassLoaderFor
to
 obtain the appropriate class loader for deserialization.
Object
MBeanServer.
getAttribute
(
ObjectName
name,
String
attribute)
Object
MBeanServerConnection.
getAttribute
(
ObjectName
name,
String
attribute)
Gets the value of a specific attribute of a named MBean.
AttributeList
MBeanServer.
getAttributes
(
ObjectName
name,
String
[] attributes)
AttributeList
MBeanServerConnection.
getAttributes
(
ObjectName
name,
String
[] attributes)
Retrieves the values of several attributes of a named MBean.
ClassLoader
MBeanServer.
getClassLoader
(
ObjectName
loaderName)
Return the named
ClassLoader
.
ClassLoader
MBeanServer.
getClassLoaderFor
(
ObjectName
mbeanName)
Return the
ClassLoader
that was used for
 loading the class of the named MBean.
MBeanInfo
MBeanServer.
getMBeanInfo
(
ObjectName
name)
MBeanInfo
MBeanServerConnection.
getMBeanInfo
(
ObjectName
name)
This method discovers the attributes and operations that an
 MBean exposes for management.
ObjectInstance
MBeanServer.
getObjectInstance
(
ObjectName
name)
ObjectInstance
MBeanServerConnection.
getObjectInstance
(
ObjectName
name)
Gets the
ObjectInstance
for a given MBean
 registered with the MBean server.
Object
MBeanServer.
instantiate
(
String
className,
ObjectName
loaderName)
Instantiates an object using the class Loader specified by its
ObjectName
.
Object
MBeanServer.
instantiate
(
String
className,
ObjectName
loaderName,
Object
[] params,
String
[] signature)
Instantiates an object.
Object
MBeanServer.
invoke
(
ObjectName
name,
String
operationName,
Object
[] params,
String
[] signature)
Object
MBeanServerConnection.
invoke
(
ObjectName
name,
String
operationName,
Object
[] params,
String
[] signature)
Invokes an operation on an MBean.
boolean
MBeanServer.
isInstanceOf
(
ObjectName
name,
String
className)
boolean
MBeanServerConnection.
isInstanceOf
(
ObjectName
name,
String
className)
Returns true if the MBean specified is an instance of the
 specified class, false otherwise.
void
PersistentMBean.
load
()
Instantiates thisMBean instance with the data found for
 the MBean in the persistent store.
void
MBeanServer.
removeNotificationListener
(
ObjectName
name,
NotificationListener
listener)
void
MBeanServer.
removeNotificationListener
(
ObjectName
name,
NotificationListener
listener,
NotificationFilter
filter,
Object
handback)
void
MBeanServer.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener)
void
MBeanServer.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener,
NotificationFilter
filter,
Object
handback)
void
MBeanServerConnection.
removeNotificationListener
(
ObjectName
name,
NotificationListener
listener)
Removes a listener from a registered MBean.
void
MBeanServerConnection.
removeNotificationListener
(
ObjectName
name,
NotificationListener
listener,
NotificationFilter
filter,
Object
handback)
Removes a listener from a registered MBean.
void
MBeanServerConnection.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener)
Removes a listener from a registered MBean.
void
MBeanServerConnection.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener,
NotificationFilter
filter,
Object
handback)
Removes a listener from a registered MBean.
void
MBeanServer.
setAttribute
(
ObjectName
name,
Attribute
attribute)
void
MBeanServerConnection.
setAttribute
(
ObjectName
name,
Attribute
attribute)
Sets the value of a specific attribute of a named MBean.
AttributeList
MBeanServer.
setAttributes
(
ObjectName
name,
AttributeList
attributes)
AttributeList
MBeanServerConnection.
setAttributes
(
ObjectName
name,
AttributeList
attributes)
Sets the values of several attributes of a named MBean.
void
PersistentMBean.
store
()
Captures the current state of this MBean instance and
 writes it out to the persistent store.
void
MBeanServer.
unregisterMBean
(
ObjectName
name)
Unregisters an MBean from the MBean server.
void
MBeanServerConnection.
unregisterMBean
(
ObjectName
name)
Unregisters an MBean from the MBean server.
Uses of
InstanceNotFoundException
in
javax.management.modelmbean
Methods in
javax.management.modelmbean
that throw
InstanceNotFoundException
Modifier and Type
Method
Description
void
RequiredModelMBean.
load
()
Instantiates this MBean instance with the data found for
 the MBean in the persistent store.
void
ModelMBean.
setManagedResource
(
Object
mr,
String
mr_type)
Sets the instance handle of the object against which to
 execute all methods in this ModelMBean management interface
 (MBeanInfo and Descriptors).
void
RequiredModelMBean.
setManagedResource
(
Object
mr,
String
mr_type)
Sets the instance handle of the object against which to
 execute all methods in this ModelMBean management interface
 (MBeanInfo and Descriptors).
void
RequiredModelMBean.
store
()
Captures the current state of this MBean instance and writes
 it out to the persistent store.
Uses of
InstanceNotFoundException
in
javax.management.relation
Methods in
javax.management.relation
that throw
InstanceNotFoundException
Modifier and Type
Method
Description
void
RelationService.
addRelation
(
ObjectName
relationObjectName)
Adds an MBean created by the user (and registered by him in the MBean
 Server) as a relation in the Relation Service.
void
RelationServiceMBean.
addRelation
(
ObjectName
relationObjectName)
Adds an MBean created by the user (and registered by him in the MBean
 Server) as a relation in the Relation Service.
Uses of
InstanceNotFoundException
in
javax.management.remote.rmi
Methods in
javax.management.remote.rmi
that throw
InstanceNotFoundException
Modifier and Type
Method
Description
void
RMIConnection.
addNotificationListener
(
ObjectName
name,
ObjectName
listener,
MarshalledObject
filter,
MarshalledObject
handback,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)
.
void
RMIConnectionImpl_Stub.
addNotificationListener
(
ObjectName
$param_ObjectName_1,
ObjectName
$param_ObjectName_2,
MarshalledObject
$param_MarshalledObject_3,
MarshalledObject
$param_MarshalledObject_4,
Subject
$param_Subject_5)
void
RMIConnectionImpl.
addNotificationListener
(
ObjectName
name,
ObjectName
listener,
MarshalledObject
filter,
MarshalledObject
handback,
Subject
delegationSubject)
Integer
[]
RMIConnection.
addNotificationListeners
(
ObjectName
[] names,
MarshalledObject
[] filters,
Subject
[] delegationSubjects)
Handles the method
MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)
.
Integer
[]
RMIConnectionImpl_Stub.
addNotificationListeners
(
ObjectName
[] $param_arrayOf_ObjectName_1,
MarshalledObject
[] $param_arrayOf_MarshalledObject_2,
Subject
[] $param_arrayOf_Subject_3)
Integer
[]
RMIConnectionImpl.
addNotificationListeners
(
ObjectName
[] names,
MarshalledObject
[] filters,
Subject
[] delegationSubjects)
ObjectInstance
RMIConnection.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName,
MarshalledObject
params,
String
[] signature,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.createMBean(String, ObjectName, ObjectName, Object[], String[])
.
ObjectInstance
RMIConnection.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.createMBean(String, ObjectName, ObjectName)
.
ObjectInstance
RMIConnectionImpl_Stub.
createMBean
(
String
$param_String_1,
ObjectName
$param_ObjectName_2,
ObjectName
$param_ObjectName_3,
MarshalledObject
$param_MarshalledObject_4,
String
[] $param_arrayOf_String_5,
Subject
$param_Subject_6)
ObjectInstance
RMIConnectionImpl_Stub.
createMBean
(
String
$param_String_1,
ObjectName
$param_ObjectName_2,
ObjectName
$param_ObjectName_3,
Subject
$param_Subject_4)
ObjectInstance
RMIConnectionImpl.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName,
MarshalledObject
params,
String
[] signature,
Subject
delegationSubject)
ObjectInstance
RMIConnectionImpl.
createMBean
(
String
className,
ObjectName
name,
ObjectName
loaderName,
Subject
delegationSubject)
Object
RMIConnection.
getAttribute
(
ObjectName
name,
String
attribute,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.getAttribute(ObjectName, String)
.
Object
RMIConnectionImpl_Stub.
getAttribute
(
ObjectName
$param_ObjectName_1,
String
$param_String_2,
Subject
$param_Subject_3)
Object
RMIConnectionImpl.
getAttribute
(
ObjectName
name,
String
attribute,
Subject
delegationSubject)
AttributeList
RMIConnection.
getAttributes
(
ObjectName
name,
String
[] attributes,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.getAttributes(ObjectName, String[])
.
AttributeList
RMIConnectionImpl_Stub.
getAttributes
(
ObjectName
$param_ObjectName_1,
String
[] $param_arrayOf_String_2,
Subject
$param_Subject_3)
AttributeList
RMIConnectionImpl.
getAttributes
(
ObjectName
name,
String
[] attributes,
Subject
delegationSubject)
MBeanInfo
RMIConnection.
getMBeanInfo
(
ObjectName
name,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.getMBeanInfo(ObjectName)
.
MBeanInfo
RMIConnectionImpl_Stub.
getMBeanInfo
(
ObjectName
$param_ObjectName_1,
Subject
$param_Subject_2)
MBeanInfo
RMIConnectionImpl.
getMBeanInfo
(
ObjectName
name,
Subject
delegationSubject)
ObjectInstance
RMIConnection.
getObjectInstance
(
ObjectName
name,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.getObjectInstance(ObjectName)
.
ObjectInstance
RMIConnectionImpl_Stub.
getObjectInstance
(
ObjectName
$param_ObjectName_1,
Subject
$param_Subject_2)
ObjectInstance
RMIConnectionImpl.
getObjectInstance
(
ObjectName
name,
Subject
delegationSubject)
Object
RMIConnection.
invoke
(
ObjectName
name,
String
operationName,
MarshalledObject
params,
String
[] signature,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.invoke(ObjectName, String, Object[], String[])
.
Object
RMIConnectionImpl_Stub.
invoke
(
ObjectName
$param_ObjectName_1,
String
$param_String_2,
MarshalledObject
$param_MarshalledObject_3,
String
[] $param_arrayOf_String_4,
Subject
$param_Subject_5)
Object
RMIConnectionImpl.
invoke
(
ObjectName
name,
String
operationName,
MarshalledObject
params,
String
[] signature,
Subject
delegationSubject)
boolean
RMIConnection.
isInstanceOf
(
ObjectName
name,
String
className,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.isInstanceOf(ObjectName, String)
.
boolean
RMIConnectionImpl_Stub.
isInstanceOf
(
ObjectName
$param_ObjectName_1,
String
$param_String_2,
Subject
$param_Subject_3)
boolean
RMIConnectionImpl.
isInstanceOf
(
ObjectName
name,
String
className,
Subject
delegationSubject)
void
RMIConnection.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener,
MarshalledObject
filter,
MarshalledObject
handback,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.removeNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)
.
void
RMIConnection.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.removeNotificationListener(ObjectName, ObjectName)
.
void
RMIConnectionImpl_Stub.
removeNotificationListener
(
ObjectName
$param_ObjectName_1,
ObjectName
$param_ObjectName_2,
MarshalledObject
$param_MarshalledObject_3,
MarshalledObject
$param_MarshalledObject_4,
Subject
$param_Subject_5)
void
RMIConnectionImpl_Stub.
removeNotificationListener
(
ObjectName
$param_ObjectName_1,
ObjectName
$param_ObjectName_2,
Subject
$param_Subject_3)
void
RMIConnectionImpl.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener,
MarshalledObject
filter,
MarshalledObject
handback,
Subject
delegationSubject)
void
RMIConnectionImpl.
removeNotificationListener
(
ObjectName
name,
ObjectName
listener,
Subject
delegationSubject)
void
RMIConnection.
removeNotificationListeners
(
ObjectName
name,
Integer
[] listenerIDs,
Subject
delegationSubject)
Handles the
removeNotificationListener(ObjectName, NotificationListener)
and
removeNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)
methods.
void
RMIConnectionImpl_Stub.
removeNotificationListeners
(
ObjectName
$param_ObjectName_1,
Integer
[] $param_arrayOf_Integer_2,
Subject
$param_Subject_3)
void
RMIConnectionImpl.
removeNotificationListeners
(
ObjectName
name,
Integer
[] listenerIDs,
Subject
delegationSubject)
void
RMIConnection.
setAttribute
(
ObjectName
name,
MarshalledObject
attribute,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.setAttribute(ObjectName, Attribute)
.
void
RMIConnectionImpl_Stub.
setAttribute
(
ObjectName
$param_ObjectName_1,
MarshalledObject
$param_MarshalledObject_2,
Subject
$param_Subject_3)
void
RMIConnectionImpl.
setAttribute
(
ObjectName
name,
MarshalledObject
attribute,
Subject
delegationSubject)
AttributeList
RMIConnection.
setAttributes
(
ObjectName
name,
MarshalledObject
attributes,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.setAttributes(ObjectName, AttributeList)
.
AttributeList
RMIConnectionImpl_Stub.
setAttributes
(
ObjectName
$param_ObjectName_1,
MarshalledObject
$param_MarshalledObject_2,
Subject
$param_Subject_3)
AttributeList
RMIConnectionImpl.
setAttributes
(
ObjectName
name,
MarshalledObject
attributes,
Subject
delegationSubject)
void
RMIConnection.
unregisterMBean
(
ObjectName
name,
Subject
delegationSubject)
Handles the method
MBeanServerConnection.unregisterMBean(ObjectName)
.
void
RMIConnectionImpl_Stub.
unregisterMBean
(
ObjectName
$param_ObjectName_1,
Subject
$param_Subject_2)
void
RMIConnectionImpl.
unregisterMBean
(
ObjectName
name,
Subject
delegationSubject)
Uses of
InstanceNotFoundException
in
javax.management.timer
Methods in
javax.management.timer
that throw
InstanceNotFoundException
Modifier and Type
Method
Description
void
Timer.
removeNotification
(
Integer
id)
Removes the timer notification corresponding to the specified identifier from the list of notifications.
void
TimerMBean.
removeNotification
(
Integer
id)
Removes the timer notification corresponding to the specified identifier from the list of notifications.
void
Timer.
removeNotifications
(
String
type)
Removes all the timer notifications corresponding to the specified type from the list of notifications.
void
TimerMBean.
removeNotifications
(
String
type)
Removes all the timer notifications corresponding to the specified type from the list of notifications.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.