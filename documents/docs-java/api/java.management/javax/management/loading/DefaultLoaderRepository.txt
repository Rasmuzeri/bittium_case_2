DefaultLoaderRepository (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.management
Package
javax.management.loading
Class DefaultLoaderRepository
java.lang.Object
javax.management.loading.DefaultLoaderRepository
@Deprecated
public class
DefaultLoaderRepository
extends
Object
Deprecated.
Use
MBeanServer.getClassLoaderRepository()
instead.
Keeps the list of Class Loaders registered in the MBean Server.
 It provides the necessary methods to load classes using the registered
 Class Loaders.
This deprecated class is maintained for compatibility.  In
 previous versions of JMX, there was one
DefaultLoaderRepository
shared by all MBean servers.
 As of JMX 1.2, that functionality is approximated by using
MBeanServerFactory.findMBeanServer(java.lang.String)
to find all known MBean
 servers, and consulting the
ClassLoaderRepository
of each
 one.  It is strongly recommended that code referencing
DefaultLoaderRepository
be rewritten.
Since:
1.5
Constructor Summary
Constructors
Constructor
Description
DefaultLoaderRepository
()
Deprecated.
Constructs a
DefaultLoaderRepository
.
Method Summary
All Methods
Static Methods
Concrete Methods
Deprecated Methods
Modifier and Type
Method
Description
static
Class
<?>
loadClass
(
String
className)
Deprecated.
Go through the list of class loaders and try to load the requested
 class.
static
Class
<?>
loadClassWithout
(
ClassLoader
loader,
String
className)
Deprecated.
Go through the list of class loaders but exclude the given
 class loader, then try to load
 the requested class.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
DefaultLoaderRepository
public
DefaultLoaderRepository
()
Deprecated.
Constructs a
DefaultLoaderRepository
.
Method Details
loadClass
public static
Class
<?>
loadClass
(
String
className)
throws
ClassNotFoundException
Deprecated.
Go through the list of class loaders and try to load the requested
 class.
 The method will stop as soon as the class is found. If the class
 is not found the method will throw a
ClassNotFoundException
exception.
Parameters:
className
- The name of the class to be loaded.
Returns:
the loaded class.
Throws:
ClassNotFoundException
- The specified class could not be
            found.
loadClassWithout
public static
Class
<?>
loadClassWithout
(
ClassLoader
loader,
String
className)
throws
ClassNotFoundException
Deprecated.
Go through the list of class loaders but exclude the given
 class loader, then try to load
 the requested class.
 The method will stop as soon as the class is found. If the class
 is not found the method will throw a
ClassNotFoundException
exception.
Parameters:
loader
- The class loader to be excluded.
className
- The name of the class to be loaded.
Returns:
the loaded class.
Throws:
ClassNotFoundException
- The specified class could not be
    found.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.