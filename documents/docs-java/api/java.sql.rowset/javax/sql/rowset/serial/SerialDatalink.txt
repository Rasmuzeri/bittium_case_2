SerialDatalink (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr
|
Method
Detail:
Field |
Constr
|
Method
SEARCH
Module
java.sql.rowset
Package
javax.sql.rowset.serial
Class SerialDatalink
java.lang.Object
javax.sql.rowset.serial.SerialDatalink
All Implemented Interfaces:
Serializable
,
Cloneable
public class
SerialDatalink
extends
Object
implements
Serializable
,
Cloneable
A serialized mapping in the Java programming language of an SQL
DATALINK
value. A
DATALINK
value
 references a file outside of the underlying data source that the
 data source manages.
RowSet
implementations can use the method
RowSet.getURL
to retrieve a
java.net.URL
object, which can be used
 to manipulate the external data.
java.net.URL url = rowset.getURL(1);
Thread safety
A SerialDatalink is not safe for use by multiple concurrent threads.  If a
 SerialDatalink is to be used by more than one thread then access to the
 SerialDatalink should be controlled by appropriate synchronization.
Since:
1.5
See Also:
Serialized Form
Constructor Summary
Constructors
Constructor
Description
SerialDatalink
(
URL
url)
Constructs a new
SerialDatalink
object from the given
java.net.URL
object.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
Object
clone
()
Returns a clone of this
SerialDatalink
.
boolean
equals
(
Object
obj)
Compares this
SerialDatalink
to the specified object.
URL
getDatalink
()
Returns a new URL that is a copy of this
SerialDatalink
object.
int
hashCode
()
Returns a hash code for this
SerialDatalink
.
Methods declared in class java.lang.
Object
finalize
,
getClass
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
SerialDatalink
public
SerialDatalink
(
URL
url)
throws
SerialException
Constructs a new
SerialDatalink
object from the given
java.net.URL
object.
Parameters:
url
- the
URL
to create the
SerialDataLink
from
Throws:
SerialException
- if url parameter is a null
Method Details
getDatalink
public
URL
getDatalink
()
                throws
SerialException
Returns a new URL that is a copy of this
SerialDatalink
object.
Returns:
a copy of this
SerialDatalink
object as a
URL
object in the Java programming language.
Throws:
SerialException
- if the
URL
object cannot be de-serialized
equals
public
boolean
equals
(
Object
obj)
Compares this
SerialDatalink
to the specified object.
 The result is
true
if and only if the argument is not
null
and is a
SerialDatalink
object whose URL is
 identical to this object's URL
Overrides:
equals
in class
Object
Parameters:
obj
- The object to compare this
SerialDatalink
against
Returns:
true
if the given object represents a
SerialDatalink
equivalent to this SerialDatalink,
false
otherwise
See Also:
Object.hashCode()
HashMap
hashCode
public
int
hashCode
()
Returns a hash code for this
SerialDatalink
. The hash code for a
SerialDatalink
object is taken as the hash code of
 the
URL
it stores
Overrides:
hashCode
in class
Object
Returns:
a hash code value for this object.
See Also:
Object.equals(java.lang.Object)
System.identityHashCode(java.lang.Object)
clone
public
Object
clone
()
Returns a clone of this
SerialDatalink
.
Overrides:
clone
in class
Object
Returns:
a clone of this SerialDatalink
See Also:
Cloneable
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.