Uses of Class javax.sql.rowset.spi.SyncProvider (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.sql.rowset.spi.SyncProvider
Packages that use
SyncProvider
Package
Description
javax.sql.rowset
Standard interfaces and base classes for JDBC
RowSet
implementations.
javax.sql.rowset.spi
The standard classes and interfaces that a third party vendor has to
 use in its implementation of a synchronization provider.
Uses of
SyncProvider
in
javax.sql.rowset
Methods in
javax.sql.rowset
that return
SyncProvider
Modifier and Type
Method
Description
SyncProvider
CachedRowSet.
getSyncProvider
()
Retrieves the
SyncProvider
implementation for this
CachedRowSet
object.
Uses of
SyncProvider
in
javax.sql.rowset.spi
Methods in
javax.sql.rowset.spi
that return
SyncProvider
Modifier and Type
Method
Description
static
SyncProvider
SyncFactory.
getInstance
(
String
providerID)
Returns the
SyncProvider
instance identified by
providerID
.
Methods in
javax.sql.rowset.spi
that return types with arguments of type
SyncProvider
Modifier and Type
Method
Description
static
Enumeration
<
SyncProvider
>
SyncFactory.
getRegisteredProviders
()
Returns an Enumeration of currently registered synchronization
 providers.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.