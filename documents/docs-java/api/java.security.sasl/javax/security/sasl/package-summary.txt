javax.security.sasl (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Package:
Description
Related Packages
Classes and Interfaces
Package:
Description
|
Related Packages |
Classes and Interfaces
SEARCH
Module
java.security.sasl
Package javax.security.sasl
package
javax.security.sasl
Contains class and interfaces for supporting SASL.

 This package defines classes and interfaces for SASL mechanisms.
 It is used by developers to add authentication support for
 connection-based protocols that use SASL.
SASL Overview
Simple Authentication and Security Layer (SASL) specifies a
 challenge-response protocol in which data is exchanged between the
 client and the server for the purposes of
 authentication and (optional) establishment of a security layer on
 which to carry on subsequent communications.  It is used with
 connection-based protocols such as LDAPv3 or IMAPv4.  SASL is
 described in
RFC 2222
.


 There are various
mechanisms
defined for SASL.
 Each mechanism defines the data that must be exchanged between the
 client and server in order for the authentication to succeed.
 This data exchange required for a particular mechanism is referred to
 to as its
protocol profile
.
 The following are some examples of mechanisms that have been defined by
 the Internet standards community.
DIGEST-MD5 (
RFC 2831
).
 This mechanism defines how HTTP Digest Authentication can be used as a SASL
 mechanism.
Anonymous (
RFC 2245
).
 This mechanism is anonymous authentication in which no credentials are
 necessary.
External (
RFC 2222
).
 This mechanism obtains authentication information
 from an external source (such as TLS or IPsec).
S/Key (
RFC 2222
).
 This mechanism uses the MD4 digest algorithm to exchange data based on
 a shared secret.
GSSAPI (
RFC 2222
).
 This mechanism uses the
GSSAPI
for obtaining authentication information.
Some of these mechanisms provide both authentication and establishment
 of a security layer, others only authentication.  Anonymous and
 S/Key do not provide for any security layers.  GSSAPI and DIGEST-MD5
 allow negotiation of the security layer.  For External, the
 security layer is determined by the external protocol.
Usage
Users of this API are typically developers who produce
 client library implementations for connection-based protocols,
 such as LDAPv3 and IMAPv4,
 and developers who write servers (such as LDAP servers and IMAP servers).
 Developers who write client libraries use the
SaslClient
and
SaslClientFactory
interfaces.
 Developers who write servers use the
SaslServer
and
SaslServerFactory
interfaces.

 Among these two groups of users, each can be further divided into two groups:
 those who
produce
the SASL mechanisms and those
 who
use
the SASL mechanisms.
 The producers of SASL mechanisms need to provide implementations
 for these interfaces, while users of the SASL mechanisms use
 the APIs in this package to access those implementations.
Related Documentation
Please refer to the
Java SASL Programming Guide
for information on how to use this API.
Since:
1.5
All Classes and Interfaces
Interfaces
Classes
Exception Classes
Class
Description
AuthenticationException
This exception is thrown by a SASL mechanism implementation
 to indicate that the SASL
 exchange has failed due to reasons related to authentication, such as
 an invalid identity, passphrase, or key.
AuthorizeCallback
This callback is used by
SaslServer
to determine whether
 one entity (identified by an authenticated authentication id)
 can act on
 behalf of another entity (identified by an authorization id).
RealmCallback
This callback is used by
SaslClient
and
SaslServer
to retrieve realm information.
RealmChoiceCallback
This callback is used by
SaslClient
and
SaslServer
to obtain a realm given a list of realm choices.
Sasl
A static class for creating SASL clients and servers.
SaslClient
Performs SASL authentication as a client.
SaslClientFactory
An interface for creating instances of
SaslClient
.
SaslException
This class represents an error that has occurred when using SASL.
SaslServer
Performs SASL authentication as a server.
SaslServerFactory
An interface for creating instances of
SaslServer
.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.