Uses of Class javax.security.sasl.SaslException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.security.sasl.SaslException
Packages that use
SaslException
Package
Description
javax.security.sasl
Contains class and interfaces for supporting SASL.
Uses of
SaslException
in
javax.security.sasl
Subclasses of
SaslException
in
javax.security.sasl
Modifier and Type
Class
Description
class
AuthenticationException
This exception is thrown by a SASL mechanism implementation
 to indicate that the SASL
 exchange has failed due to reasons related to authentication, such as
 an invalid identity, passphrase, or key.
Methods in
javax.security.sasl
that throw
SaslException
Modifier and Type
Method
Description
static
SaslClient
Sasl.
createSaslClient
(
String
[] mechanisms,
String
authorizationId,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslClient
using the parameters supplied.
SaslClient
SaslClientFactory.
createSaslClient
(
String
[] mechanisms,
String
authorizationId,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a SaslClient using the parameters supplied.
static
SaslServer
Sasl.
createSaslServer
(
String
mechanism,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslServer
for the specified mechanism.
SaslServer
SaslServerFactory.
createSaslServer
(
String
mechanism,
String
protocol,
String
serverName,
Map
<
String
,
?> props,
CallbackHandler
cbh)
Creates a
SaslServer
using the parameters supplied.
void
SaslClient.
dispose
()
Disposes of any system resources or security-sensitive information
 the SaslClient might be using.
void
SaslServer.
dispose
()
Disposes of any system resources or security-sensitive information
 the SaslServer might be using.
byte[]
SaslClient.
evaluateChallenge
(byte[] challenge)
Evaluates the challenge data and generates a response.
byte[]
SaslServer.
evaluateResponse
(byte[] response)
Evaluates the response data and generates a challenge.
byte[]
SaslClient.
unwrap
(byte[] incoming,
 int offset,
 int len)
Unwraps a byte array received from the server.
byte[]
SaslServer.
unwrap
(byte[] incoming,
 int offset,
 int len)
Unwraps a byte array received from the client.
byte[]
SaslClient.
wrap
(byte[] outgoing,
 int offset,
 int len)
Wraps a byte array to be sent to the server.
byte[]
SaslServer.
wrap
(byte[] outgoing,
 int offset,
 int len)
Wraps a byte array to be sent to the client.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.