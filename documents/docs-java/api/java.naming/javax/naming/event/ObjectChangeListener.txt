ObjectChangeListener (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
java.naming
Package
javax.naming.event
Interface ObjectChangeListener
All Superinterfaces:
EventListener
,
NamingListener
public interface
ObjectChangeListener
extends
NamingListener
Specifies the method that a listener of a
NamingEvent
with event type of
OBJECT_CHANGED
must implement.
An
OBJECT_CHANGED
event type is fired when (the contents of)
 an object has changed. This might mean that its attributes have been modified,
 added, or removed, and/or that the object itself has been replaced.
 How the object has changed can be determined by examining the
NamingEvent
's old and new bindings.
A listener interested in
OBJECT_CHANGED
event types must:
Implement this interface and its method (
objectChanged()
)
Implement
NamingListener.namingExceptionThrown()
so that
 it will be notified of exceptions thrown while attempting to
 collect information about the events.
Register with the source using the source's
addNamingListener()
method.
A listener that wants to be notified of namespace change events
 should also implement the
NamespaceChangeListener
interface.
Since:
1.3
See Also:
NamingEvent
NamespaceChangeListener
EventContext
EventDirContext
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
void
objectChanged
(
NamingEvent
evt)
Called when an object has been changed.
Methods declared in interface javax.naming.event.
NamingListener
namingExceptionThrown
Method Details
objectChanged
void
objectChanged
(
NamingEvent
evt)
Called when an object has been changed.
The binding of the changed object can be obtained using
evt.getNewBinding()
. Its old binding (before the change)
 can be obtained using
evt.getOldBinding()
.
Parameters:
evt
- The nonnull naming event.
See Also:
NamingEvent.OBJECT_CHANGED
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.