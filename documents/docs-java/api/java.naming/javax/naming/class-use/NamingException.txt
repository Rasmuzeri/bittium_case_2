Uses of Class javax.naming.NamingException (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Class
javax.naming.NamingException
Packages that use
NamingException
Package
Description
javax.naming
Provides the classes and interfaces for accessing naming services.
javax.naming.directory
Extends the
javax.naming
package to provide functionality
for accessing directory services.
javax.naming.event
Provides support for event notification when accessing naming and
directory services.
javax.naming.ldap
Provides support for LDAPv3 extended operations and controls.
javax.naming.ldap.spi
javax.naming.spi
Provides the means for dynamically plugging in support for accessing
naming and directory services through the
javax.naming
and related packages.
Uses of
NamingException
in
javax.naming
Subclasses of
NamingException
in
javax.naming
Modifier and Type
Class
Description
class
AuthenticationException
This exception is thrown when an authentication error occurs while
 accessing the naming or directory service.
class
AuthenticationNotSupportedException
This exception is thrown when
 the particular flavor of authentication requested is not supported.
class
CannotProceedException
This exception is thrown to indicate that the operation reached
 a point in the name where the operation cannot proceed any further.
class
CommunicationException
This exception is thrown when the client is
 unable to communicate with the directory or naming service.
class
ConfigurationException
This exception is thrown when there is a configuration problem.
class
ContextNotEmptyException
This exception is thrown when attempting to destroy a context that
 is not empty.
class
InsufficientResourcesException
This exception is thrown when resources are not available to complete
 the requested operation.
class
InterruptedNamingException
This exception is thrown when the naming operation
 being invoked has been interrupted.
class
InvalidNameException
This exception indicates that the name being specified does
 not conform to the naming syntax of a naming system.
class
LimitExceededException
This exception is thrown when a method
 terminates abnormally due to a user or system specified limit.
class
LinkException
This exception is used to describe problems encountered while resolving links.
class
LinkLoopException
This exception is thrown when
 a loop was detected while attempting to resolve a link, or an implementation
 specific limit on link counts has been reached.
class
MalformedLinkException
This exception is thrown when a malformed link was encountered while
 resolving or constructing a link.
class
NameAlreadyBoundException
This exception is thrown by methods to indicate that
 a binding cannot be added because the name is already bound to
 another object.
class
NameNotFoundException
This exception is thrown when a component of the name cannot be resolved
 because it is not bound.
class
NamingSecurityException
This is the superclass of security-related exceptions
 thrown by operations in the Context and DirContext interfaces.
class
NoInitialContextException
This exception is thrown when no initial context implementation
 can be created.
class
NoPermissionException
This exception is thrown when attempting to perform an operation
 for which the client has no permission.
class
NotContextException
This exception is thrown when a naming operation proceeds to a point
 where a context is required to continue the operation, but the
 resolved object is not a context.
class
OperationNotSupportedException
This exception is thrown when a context implementation does not support
 the operation being invoked.
class
PartialResultException
This exception is thrown to indicate that the result being returned
 or returned so far is partial, and that the operation cannot
 be completed.
class
ReferralException
This abstract class is used to represent a referral exception,
 which is generated in response to a
referral
such as that returned by LDAP v3 servers.
class
ServiceUnavailableException
This exception is thrown when attempting to communicate with a
 directory or naming service and that service is not available.
class
SizeLimitExceededException
This exception is thrown when a method
 produces a result that exceeds a size-related limit.
class
TimeLimitExceededException
This exception is thrown when a method
 does not terminate within the specified time limit.
Methods in
javax.naming
that throw
NamingException
Modifier and Type
Method
Description
Object
Context.
addToEnvironment
(
String
propName,
Object
propVal)
Adds a new environment property to the environment of this
 context.
Object
InitialContext.
addToEnvironment
(
String
propName,
Object
propVal)
void
Context.
bind
(
String
name,
Object
obj)
Binds a name to an object.
void
Context.
bind
(
Name
name,
Object
obj)
Binds a name to an object.
void
InitialContext.
bind
(
String
name,
Object
obj)
void
InitialContext.
bind
(
Name
name,
Object
obj)
void
Context.
close
()
Closes this context.
void
InitialContext.
close
()
void
NamingEnumeration.
close
()
Closes this enumeration.
String
Context.
composeName
(
String
name,
String
prefix)
Composes the name of this context with a name relative to
 this context.
Name
Context.
composeName
(
Name
name,
Name
prefix)
Composes the name of this context with a name relative to
 this context.
String
InitialContext.
composeName
(
String
name,
String
prefix)
Composes the name of this context with a name relative to
 this context.
Name
InitialContext.
composeName
(
Name
name,
Name
prefix)
Composes the name of this context with a name relative to
 this context.
Context
Context.
createSubcontext
(
String
name)
Creates and binds a new context.
Context
Context.
createSubcontext
(
Name
name)
Creates and binds a new context.
Context
InitialContext.
createSubcontext
(
String
name)
Context
InitialContext.
createSubcontext
(
Name
name)
void
Context.
destroySubcontext
(
String
name)
Destroys the named context and removes it from the namespace.
void
Context.
destroySubcontext
(
Name
name)
Destroys the named context and removes it from the namespace.
void
InitialContext.
destroySubcontext
(
String
name)
void
InitialContext.
destroySubcontext
(
Name
name)
static <T> T
InitialContext.
doLookup
(
String
name)
A static method to retrieve the named object.
static <T> T
InitialContext.
doLookup
(
Name
name)
A static method to retrieve the named object.
protected
Context
InitialContext.
getDefaultInitCtx
()
Retrieves the initial context by calling
NamingManager.getInitialContext()
and cache it in defaultInitCtx.
Hashtable
<?,
?>
Context.
getEnvironment
()
Retrieves the environment in effect for this context.
Hashtable
<?,
?>
InitialContext.
getEnvironment
()
String
LinkRef.
getLinkName
()
Retrieves the name of this link.
String
Context.
getNameInNamespace
()
Retrieves the full name of this context within its own namespace.
String
InitialContext.
getNameInNamespace
()
NameParser
Context.
getNameParser
(
String
name)
Retrieves the parser associated with the named context.
NameParser
Context.
getNameParser
(
Name
name)
Retrieves the parser associated with the named context.
NameParser
InitialContext.
getNameParser
(
String
name)
NameParser
InitialContext.
getNameParser
(
Name
name)
Reference
Referenceable.
getReference
()
Retrieves the Reference of this object.
abstract
Context
ReferralException.
getReferralContext
()
Retrieves the context at which to continue the method.
abstract
Context
ReferralException.
getReferralContext
(
Hashtable
<?,
?> env)
Retrieves the context at which to continue the method using
 environment properties.
protected
Context
InitialContext.
getURLOrDefaultInitCtx
(
String
name)
Retrieves a context for resolving the string name
name
.
protected
Context
InitialContext.
getURLOrDefaultInitCtx
(
Name
name)
Retrieves a context for resolving
name
.
boolean
NamingEnumeration.
hasMore
()
Determines whether there are any more elements in the enumeration.
protected void
InitialContext.
init
(
Hashtable
<?,
?> environment)
Initializes the initial context using the supplied environment.
NamingEnumeration
<
NameClassPair
>
Context.
list
(
String
name)
Enumerates the names bound in the named context, along with the
 class names of objects bound to them.
NamingEnumeration
<
NameClassPair
>
Context.
list
(
Name
name)
Enumerates the names bound in the named context, along with the
 class names of objects bound to them.
NamingEnumeration
<
NameClassPair
>
InitialContext.
list
(
String
name)
NamingEnumeration
<
NameClassPair
>
InitialContext.
list
(
Name
name)
NamingEnumeration
<
Binding
>
Context.
listBindings
(
String
name)
Enumerates the names bound in the named context, along with the
 objects bound to them.
NamingEnumeration
<
Binding
>
Context.
listBindings
(
Name
name)
Enumerates the names bound in the named context, along with the
 objects bound to them.
NamingEnumeration
<
Binding
>
InitialContext.
listBindings
(
String
name)
NamingEnumeration
<
Binding
>
InitialContext.
listBindings
(
Name
name)
Object
Context.
lookup
(
String
name)
Retrieves the named object.
Object
Context.
lookup
(
Name
name)
Retrieves the named object.
Object
InitialContext.
lookup
(
String
name)
Object
InitialContext.
lookup
(
Name
name)
Object
Context.
lookupLink
(
String
name)
Retrieves the named object, following links except
 for the terminal atomic component of the name.
Object
Context.
lookupLink
(
Name
name)
Retrieves the named object, following links except
 for the terminal atomic component of the name.
Object
InitialContext.
lookupLink
(
String
name)
Object
InitialContext.
lookupLink
(
Name
name)
T
NamingEnumeration.
next
()
Retrieves the next element in the enumeration.
Name
NameParser.
parse
(
String
name)
Parses a name into its components.
void
Context.
rebind
(
String
name,
Object
obj)
Binds a name to an object, overwriting any existing binding.
void
Context.
rebind
(
Name
name,
Object
obj)
Binds a name to an object, overwriting any existing binding.
void
InitialContext.
rebind
(
String
name,
Object
obj)
void
InitialContext.
rebind
(
Name
name,
Object
obj)
Object
Context.
removeFromEnvironment
(
String
propName)
Removes an environment property from the environment of this
 context.
Object
InitialContext.
removeFromEnvironment
(
String
propName)
void
Context.
rename
(
String
oldName,
String
newName)
Binds a new name to the object bound to an old name, and unbinds
 the old name.
void
Context.
rename
(
Name
oldName,
Name
newName)
Binds a new name to the object bound to an old name, and unbinds
 the old name.
void
InitialContext.
rename
(
String
oldName,
String
newName)
void
InitialContext.
rename
(
Name
oldName,
Name
newName)
void
Context.
unbind
(
String
name)
Unbinds the named object.
void
Context.
unbind
(
Name
name)
Unbinds the named object.
void
InitialContext.
unbind
(
String
name)
void
InitialContext.
unbind
(
Name
name)
Constructors in
javax.naming
that throw
NamingException
Modifier
Constructor
Description
InitialContext
()
Constructs an initial context.
protected
InitialContext
(boolean lazy)
Constructs an initial context with the option of not
 initializing it.
InitialContext
(
Hashtable
<?,
?> environment)
Constructs an initial context using the supplied environment.
Uses of
NamingException
in
javax.naming.directory
Subclasses of
NamingException
in
javax.naming.directory
Modifier and Type
Class
Description
class
AttributeInUseException
This exception is thrown when an operation attempts
 to add an attribute that already exists.
class
AttributeModificationException
This exception is thrown when an attempt is
 made to add, or remove, or modify an attribute, its identifier,
 or its values that conflicts with the attribute's (schema) definition
 or the attribute's state.
class
InvalidAttributeIdentifierException
This exception is thrown when an attempt is
 made to add to create an attribute with an invalid attribute identifier.
class
InvalidAttributesException
This exception is thrown when an attempt is
 made to add or modify an attribute set that has been specified
 incompletely or incorrectly.
class
InvalidAttributeValueException
This class is thrown when an attempt is
 made to add to an attribute a value that conflicts with the attribute's
 schema definition.
class
InvalidSearchControlsException
This exception is thrown when the specification of
 the SearchControls for a search operation is invalid.
class
InvalidSearchFilterException
This exception is thrown when the specification of
 a search filter is invalid.
class
NoSuchAttributeException
This exception is thrown when attempting to access
 an attribute that does not exist.
class
SchemaViolationException
This exception is thrown when a method
 in some ways violates the schema.
Methods in
javax.naming.directory
that throw
NamingException
Modifier and Type
Method
Description
void
DirContext.
bind
(
String
name,
Object
obj,
Attributes
attrs)
Binds a name to an object, along with associated attributes.
void
DirContext.
bind
(
Name
name,
Object
obj,
Attributes
attrs)
Binds a name to an object, along with associated attributes.
void
InitialDirContext.
bind
(
String
name,
Object
obj,
Attributes
attrs)
void
InitialDirContext.
bind
(
Name
name,
Object
obj,
Attributes
attrs)
DirContext
DirContext.
createSubcontext
(
String
name,
Attributes
attrs)
Creates and binds a new context, along with associated attributes.
DirContext
DirContext.
createSubcontext
(
Name
name,
Attributes
attrs)
Creates and binds a new context, along with associated attributes.
DirContext
InitialDirContext.
createSubcontext
(
String
name,
Attributes
attrs)
DirContext
InitialDirContext.
createSubcontext
(
Name
name,
Attributes
attrs)
Object
Attribute.
get
()
Retrieves one of this attribute's values.
Object
Attribute.
get
(int ix)
Retrieves the attribute value from the ordered list of attribute values.
Object
BasicAttribute.
get
()
Retrieves one of this attribute's values.
Object
BasicAttribute.
get
(int ix)
NamingEnumeration
<?>
Attribute.
getAll
()
Retrieves an enumeration of the attribute's values.
NamingEnumeration
<?>
BasicAttribute.
getAll
()
Retrieves an enumeration of this attribute's values.
DirContext
Attribute.
getAttributeDefinition
()
Retrieves the attribute's schema definition.
DirContext
BasicAttribute.
getAttributeDefinition
()
Retrieves this attribute's schema definition.
Attributes
DirContext.
getAttributes
(
String
name)
Retrieves all of the attributes associated with a named object.
Attributes
DirContext.
getAttributes
(
String
name,
String
[] attrIds)
Retrieves selected attributes associated with a named object.
Attributes
DirContext.
getAttributes
(
Name
name)
Retrieves all of the attributes associated with a named object.
Attributes
DirContext.
getAttributes
(
Name
name,
String
[] attrIds)
Retrieves selected attributes associated with a named object.
Attributes
InitialDirContext.
getAttributes
(
String
name)
Attributes
InitialDirContext.
getAttributes
(
String
name,
String
[] attrIds)
Attributes
InitialDirContext.
getAttributes
(
Name
name)
Attributes
InitialDirContext.
getAttributes
(
Name
name,
String
[] attrIds)
DirContext
Attribute.
getAttributeSyntaxDefinition
()
Retrieves the syntax definition associated with the attribute.
DirContext
BasicAttribute.
getAttributeSyntaxDefinition
()
Retrieves the syntax definition associated with this attribute.
DirContext
DirContext.
getSchema
(
String
name)
Retrieves the schema associated with the named object.
DirContext
DirContext.
getSchema
(
Name
name)
Retrieves the schema associated with the named object.
DirContext
InitialDirContext.
getSchema
(
String
name)
DirContext
InitialDirContext.
getSchema
(
Name
name)
DirContext
DirContext.
getSchemaClassDefinition
(
String
name)
Retrieves a context containing the schema objects of the
 named object's class definitions.
DirContext
DirContext.
getSchemaClassDefinition
(
Name
name)
Retrieves a context containing the schema objects of the
 named object's class definitions.
DirContext
InitialDirContext.
getSchemaClassDefinition
(
String
name)
DirContext
InitialDirContext.
getSchemaClassDefinition
(
Name
name)
void
DirContext.
modifyAttributes
(
String
name,
 int mod_op,
Attributes
attrs)
Modifies the attributes associated with a named object.
void
DirContext.
modifyAttributes
(
String
name,
ModificationItem
[] mods)
Modifies the attributes associated with a named object using
 an ordered list of modifications.
void
DirContext.
modifyAttributes
(
Name
name,
 int mod_op,
Attributes
attrs)
Modifies the attributes associated with a named object.
void
DirContext.
modifyAttributes
(
Name
name,
ModificationItem
[] mods)
Modifies the attributes associated with a named object using
 an ordered list of modifications.
void
InitialDirContext.
modifyAttributes
(
String
name,
 int mod_op,
Attributes
attrs)
void
InitialDirContext.
modifyAttributes
(
String
name,
ModificationItem
[] mods)
void
InitialDirContext.
modifyAttributes
(
Name
name,
 int mod_op,
Attributes
attrs)
void
InitialDirContext.
modifyAttributes
(
Name
name,
ModificationItem
[] mods)
void
DirContext.
rebind
(
String
name,
Object
obj,
Attributes
attrs)
Binds a name to an object, along with associated attributes,
 overwriting any existing binding.
void
DirContext.
rebind
(
Name
name,
Object
obj,
Attributes
attrs)
Binds a name to an object, along with associated attributes,
 overwriting any existing binding.
void
InitialDirContext.
rebind
(
String
name,
Object
obj,
Attributes
attrs)
void
InitialDirContext.
rebind
(
Name
name,
Object
obj,
Attributes
attrs)
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
String
name,
String
filterExpr,
Object
[] filterArgs,
SearchControls
cons)
Searches in the named context or object for entries that satisfy the
 given search filter.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
String
name,
String
filter,
SearchControls
cons)
Searches in the named context or object for entries that satisfy the
 given search filter.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
String
name,
Attributes
matchingAttributes)
Searches in a single context for objects that contain a
 specified set of attributes.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
String
name,
Attributes
matchingAttributes,
String
[] attributesToReturn)
Searches in a single context for objects that contain a
 specified set of attributes, and retrieves selected attributes.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
Name
name,
String
filterExpr,
Object
[] filterArgs,
SearchControls
cons)
Searches in the named context or object for entries that satisfy the
 given search filter.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
Name
name,
String
filter,
SearchControls
cons)
Searches in the named context or object for entries that satisfy the
 given search filter.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
Name
name,
Attributes
matchingAttributes)
Searches in a single context for objects that contain a
 specified set of attributes.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
Name
name,
Attributes
matchingAttributes,
String
[] attributesToReturn)
Searches in a single context for objects that contain a
 specified set of attributes, and retrieves selected attributes.
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
String
name,
String
filterExpr,
Object
[] filterArgs,
SearchControls
cons)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
String
name,
String
filter,
SearchControls
cons)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
String
name,
Attributes
matchingAttributes)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
String
name,
Attributes
matchingAttributes,
String
[] attributesToReturn)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
Name
name,
String
filterExpr,
Object
[] filterArgs,
SearchControls
cons)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
Name
name,
String
filter,
SearchControls
cons)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
Name
name,
Attributes
matchingAttributes)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
Name
name,
Attributes
matchingAttributes,
String
[] attributesToReturn)
Constructors in
javax.naming.directory
that throw
NamingException
Modifier
Constructor
Description
InitialDirContext
()
Constructs an initial DirContext.
protected
InitialDirContext
(boolean lazy)
Constructs an initial DirContext with the option of not
 initializing it.
InitialDirContext
(
Hashtable
<?,
?> environment)
Constructs an initial DirContext using the supplied environment.
Uses of
NamingException
in
javax.naming.event
Methods in
javax.naming.event
that return
NamingException
Modifier and Type
Method
Description
NamingException
NamingExceptionEvent.
getException
()
Retrieves the exception that was thrown.
Methods in
javax.naming.event
that throw
NamingException
Modifier and Type
Method
Description
void
EventContext.
addNamingListener
(
String
target,
 int scope,
NamingListener
l)
Adds a listener for receiving naming events fired
 when the object named by the string target name and scope changes.
void
EventContext.
addNamingListener
(
Name
target,
 int scope,
NamingListener
l)
Adds a listener for receiving naming events fired
 when the object(s) identified by a target and scope changes.
void
EventDirContext.
addNamingListener
(
String
target,
String
filter,
Object
[] filterArgs,
SearchControls
ctls,
NamingListener
l)
Adds a listener for receiving naming events fired when
 objects identified by the search filter
filter
and filter arguments at the
 object named by the string target name are modified.
void
EventDirContext.
addNamingListener
(
String
target,
String
filter,
SearchControls
ctls,
NamingListener
l)
Adds a listener for receiving naming events fired when
 objects identified by the search filter
filter
at the
 object named by the string target name are modified.
void
EventDirContext.
addNamingListener
(
Name
target,
String
filter,
Object
[] filterArgs,
SearchControls
ctls,
NamingListener
l)
Adds a listener for receiving naming events fired
 when objects identified by the search filter
filter
and
 filter arguments at the object named by the target are modified.
void
EventDirContext.
addNamingListener
(
Name
target,
String
filter,
SearchControls
ctls,
NamingListener
l)
Adds a listener for receiving naming events fired
 when objects identified by the search filter
filter
at
 the object named by target are modified.
void
EventContext.
removeNamingListener
(
NamingListener
l)
Removes a listener from receiving naming events fired
 by this
EventContext
.
boolean
EventContext.
targetMustExist
()
Determines whether a listener can register interest in a target
 that does not exist.
Constructors in
javax.naming.event
with parameters of type
NamingException
Modifier
Constructor
Description
NamingExceptionEvent
(
EventContext
source,
NamingException
exc)
Constructs an instance of
NamingExceptionEvent
using
 the context in which the
NamingException
was thrown and the exception
 that was thrown.
Uses of
NamingException
in
javax.naming.ldap
Subclasses of
NamingException
in
javax.naming.ldap
Modifier and Type
Class
Description
class
LdapReferralException
This abstract class is used to represent an LDAP referral exception.
Methods in
javax.naming.ldap
that return
NamingException
Modifier and Type
Method
Description
NamingException
SortResponseControl.
getException
()
Retrieves the NamingException appropriate for the result code.
NamingException
UnsolicitedNotification.
getException
()
Retrieves the exception as constructed using information
 sent by the server.
Methods in
javax.naming.ldap
that throw
NamingException
Modifier and Type
Method
Description
ExtendedResponse
ExtendedRequest.
createExtendedResponse
(
String
id,
 byte[] berValue,
 int offset,
 int length)
Creates the response object that corresponds to this request.
ExtendedResponse
StartTlsRequest.
createExtendedResponse
(
String
id,
 byte[] berValue,
 int offset,
 int length)
Creates an extended response object that corresponds to the
 LDAP StartTLS extended request.
ExtendedResponse
InitialLdapContext.
extendedOperation
(
ExtendedRequest
request)
ExtendedResponse
LdapContext.
extendedOperation
(
ExtendedRequest
request)
Performs an extended operation.
Control
[]
InitialLdapContext.
getConnectControls
()
Control
[]
LdapContext.
getConnectControls
()
Retrieves the connection request controls in effect for this context.
abstract
Control
ControlFactory.
getControlInstance
(
Control
ctl)
Creates a control using this control factory.
static
Control
ControlFactory.
getControlInstance
(
Control
ctl,
Context
ctx,
Hashtable
<?,
?> env)
Creates a control using known control factories.
Control
[]
HasControls.
getControls
()
Retrieves an array of
Control
s from the object that
 implements this interface.
abstract
Context
LdapReferralException.
getReferralContext
()
Retrieves the context at which to continue the method using the
 context's environment and no controls.
abstract
Context
LdapReferralException.
getReferralContext
(
Hashtable
<?,
?> env)
Retrieves the context at which to continue the method using
 environment properties and no controls.
abstract
Context
LdapReferralException.
getReferralContext
(
Hashtable
<?,
?> env,
Control
[] reqCtls)
Retrieves the context at which to continue the method using
 request controls and environment properties.
Control
[]
InitialLdapContext.
getRequestControls
()
Control
[]
LdapContext.
getRequestControls
()
Retrieves the request controls in effect for this context.
Control
[]
InitialLdapContext.
getResponseControls
()
Control
[]
LdapContext.
getResponseControls
()
Retrieves the response controls produced as a result of the last
 method invoked on this context.
LdapContext
InitialLdapContext.
newInstance
(
Control
[] reqCtls)
LdapContext
LdapContext.
newInstance
(
Control
[] requestControls)
Creates a new instance of this context initialized using request controls.
void
InitialLdapContext.
reconnect
(
Control
[] connCtls)
void
LdapContext.
reconnect
(
Control
[] connCtls)
Reconnects to the LDAP server using the supplied controls and
 this context's environment.
void
InitialLdapContext.
setRequestControls
(
Control
[] requestControls)
void
LdapContext.
setRequestControls
(
Control
[] requestControls)
Sets the request controls for methods subsequently
 invoked on this context.
Constructors in
javax.naming.ldap
that throw
NamingException
Modifier
Constructor
Description
InitialLdapContext
()
Constructs an initial context using no environment properties or
 connection request controls.
InitialLdapContext
(
Hashtable
<?,
?> environment,
Control
[] connCtls)
Constructs an initial context
 using environment properties and connection request controls.
Uses of
NamingException
in
javax.naming.ldap.spi
Methods in
javax.naming.ldap.spi
that throw
NamingException
Modifier and Type
Method
Description
abstract
Optional
<
LdapDnsProviderResult
>
LdapDnsProvider.
lookupEndpoints
(
String
url,
Map
<?,
?> env)
Lookup the endpoints and domain name for the given
Context
provider URL
and environment.
Uses of
NamingException
in
javax.naming.spi
Methods in
javax.naming.spi
that throw
NamingException
Modifier and Type
Method
Description
InitialContextFactory
InitialContextFactoryBuilder.
createInitialContextFactory
(
Hashtable
<?,
?> environment)
Creates an initial context factory using the specified
 environment.
ObjectFactory
ObjectFactoryBuilder.
createObjectFactory
(
Object
obj,
Hashtable
<?,
?> environment)
Creates a new object factory using the environment supplied.
static
Context
NamingManager.
getContinuationContext
(
CannotProceedException
cpe)
Creates a context in which to continue a context operation.
static
DirContext
DirectoryManager.
getContinuationDirContext
(
CannotProceedException
cpe)
Creates a context in which to continue a
DirContext
operation.
Context
InitialContextFactory.
getInitialContext
(
Hashtable
<?,
?> environment)
Creates an Initial Context for beginning name resolution.
static
Context
NamingManager.
getInitialContext
(
Hashtable
<?,
?> env)
Creates an initial context using the specified environment
 properties.
static
DirStateFactory.Result
DirectoryManager.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
attrs)
Retrieves the state of an object for binding when given the original
 object and its attributes.
DirStateFactory.Result
DirStateFactory.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
inAttrs)
Retrieves the state of an object for binding given the object and attributes
 to be transformed.
static
Object
NamingManager.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Retrieves the state of an object for binding.
Object
StateFactory.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Retrieves the state of an object for binding.
static
Context
NamingManager.
getURLContext
(
String
scheme,
Hashtable
<?,
?> environment)
Creates a context for the given URL scheme id.
ResolveResult
Resolver.
resolveToClass
(
String
name,
Class
<? extends
Context
> contextType)
Partially resolves a name.
ResolveResult
Resolver.
resolveToClass
(
Name
name,
Class
<? extends
Context
> contextType)
Partially resolves a name.
static void
NamingManager.
setInitialContextFactoryBuilder
(
InitialContextFactoryBuilder
builder)
Sets the InitialContextFactory builder to be builder.
static void
NamingManager.
setObjectFactoryBuilder
(
ObjectFactoryBuilder
builder)
The ObjectFactoryBuilder determines the policy used when
 trying to load object factories.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.