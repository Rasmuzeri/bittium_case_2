Uses of Interface javax.naming.Name (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
javax.naming.Name
Packages that use
Name
Package
Description
javax.naming
Provides the classes and interfaces for accessing naming services.
javax.naming.directory
Extends the
javax.naming
package to provide functionality
for accessing directory services.
javax.naming.event
Provides support for event notification when accessing naming and
directory services.
javax.naming.ldap
Provides support for LDAPv3 extended operations and controls.
javax.naming.spi
Provides the means for dynamically plugging in support for accessing
naming and directory services through the
javax.naming
and related packages.
Uses of
Name
in
javax.naming
Classes in
javax.naming
that implement
Name
Modifier and Type
Class
Description
class
CompositeName
This class represents a composite name -- a sequence of
 component names spanning multiple namespaces.
class
CompoundName
This class represents a compound name -- a name from
 a hierarchical name space.
Fields in
javax.naming
declared as
Name
Modifier and Type
Field
Description
protected
Name
CannotProceedException.
altName
Contains the name of the resolved object, relative
 to the context
altNameCtx
.
protected
Name
LinkException.
linkRemainingName
Contains the remaining link name that has not been resolved yet.
protected
Name
LinkException.
linkResolvedName
Contains the part of the link that has been successfully resolved.
protected
Name
NamingException.
remainingName
Contains the remaining name that has not been resolved yet.
protected
Name
CannotProceedException.
remainingNewName
Contains the remaining unresolved part of the second
 "name" argument to Context.rename().
protected
Name
NamingException.
resolvedName
Contains the part of the name that has been successfully resolved.
Methods in
javax.naming
that return
Name
Modifier and Type
Method
Description
Name
CompositeName.
add
(int posn,
String
comp)
Adds a single component at a specified position within this
 composite name.
Name
CompositeName.
add
(
String
comp)
Adds a single component to the end of this composite name.
Name
CompoundName.
add
(int posn,
String
comp)
Adds a single component at a specified position within this
 compound name.
Name
CompoundName.
add
(
String
comp)
Adds a single component to the end of this compound name.
Name
Name.
add
(int posn,
String
comp)
Adds a single component at a specified position within this name.
Name
Name.
add
(
String
comp)
Adds a single component to the end of this name.
Name
CompositeName.
addAll
(int posn,
Name
n)
Adds the components of a composite name -- in order -- at a specified
 position within this composite name.
Name
CompositeName.
addAll
(
Name
suffix)
Adds the components of a composite name -- in order -- to the end of
 this composite name.
Name
CompoundName.
addAll
(int posn,
Name
n)
Adds the components of a compound name -- in order -- at a specified
 position within this compound name.
Name
CompoundName.
addAll
(
Name
suffix)
Adds the components of a compound name -- in order -- to the end of
 this compound name.
Name
Name.
addAll
(int posn,
Name
n)
Adds the components of a name -- in order -- at a specified position
 within this name.
Name
Name.
addAll
(
Name
suffix)
Adds the components of a name -- in order -- to the end of this name.
Name
Context.
composeName
(
Name
name,
Name
prefix)
Composes the name of this context with a name relative to
 this context.
Name
InitialContext.
composeName
(
Name
name,
Name
prefix)
Composes the name of this context with a name relative to
 this context.
Name
CannotProceedException.
getAltName
()
Retrieves the
altName
field of this exception.
Name
LinkException.
getLinkRemainingName
()
Retrieves the remaining unresolved portion of the link name.
Name
LinkException.
getLinkResolvedName
()
Retrieves the leading portion of the link name that was resolved
 successfully.
Name
CompositeName.
getPrefix
(int posn)
Creates a composite name whose components consist of a prefix of the
 components in this composite name.
Name
CompoundName.
getPrefix
(int posn)
Creates a compound name whose components consist of a prefix of the
 components in this compound name.
Name
Name.
getPrefix
(int posn)
Creates a name whose components consist of a prefix of the
 components of this name.
Name
NamingException.
getRemainingName
()
Retrieves the remaining unresolved portion of the name.
Name
CannotProceedException.
getRemainingNewName
()
Retrieves the "remaining new name" field of this exception, which is
 used when this exception is thrown during a rename() operation.
Name
NamingException.
getResolvedName
()
Retrieves the leading portion of the name that was resolved
 successfully.
Name
CompositeName.
getSuffix
(int posn)
Creates a composite name whose components consist of a suffix of the
 components in this composite name.
Name
CompoundName.
getSuffix
(int posn)
Creates a compound name whose components consist of a suffix of the
 components in this compound name.
Name
Name.
getSuffix
(int posn)
Creates a name whose components consist of a suffix of the
 components in this name.
Name
NameParser.
parse
(
String
name)
Parses a name into its components.
Methods in
javax.naming
with parameters of type
Name
Modifier and Type
Method
Description
Name
CompositeName.
addAll
(int posn,
Name
n)
Adds the components of a composite name -- in order -- at a specified
 position within this composite name.
Name
CompositeName.
addAll
(
Name
suffix)
Adds the components of a composite name -- in order -- to the end of
 this composite name.
Name
CompoundName.
addAll
(int posn,
Name
n)
Adds the components of a compound name -- in order -- at a specified
 position within this compound name.
Name
CompoundName.
addAll
(
Name
suffix)
Adds the components of a compound name -- in order -- to the end of
 this compound name.
Name
Name.
addAll
(int posn,
Name
n)
Adds the components of a name -- in order -- at a specified position
 within this name.
Name
Name.
addAll
(
Name
suffix)
Adds the components of a name -- in order -- to the end of this name.
void
NamingException.
appendRemainingName
(
Name
name)
Add components from 'name' as the last components in
 remaining name.
void
Context.
bind
(
Name
name,
Object
obj)
Binds a name to an object.
void
InitialContext.
bind
(
Name
name,
Object
obj)
Name
Context.
composeName
(
Name
name,
Name
prefix)
Composes the name of this context with a name relative to
 this context.
Name
InitialContext.
composeName
(
Name
name,
Name
prefix)
Composes the name of this context with a name relative to
 this context.
Context
Context.
createSubcontext
(
Name
name)
Creates and binds a new context.
Context
InitialContext.
createSubcontext
(
Name
name)
void
Context.
destroySubcontext
(
Name
name)
Destroys the named context and removes it from the namespace.
void
InitialContext.
destroySubcontext
(
Name
name)
static <T> T
InitialContext.
doLookup
(
Name
name)
A static method to retrieve the named object.
boolean
CompositeName.
endsWith
(
Name
n)
Determines whether a composite name is a suffix of this composite name.
boolean
CompoundName.
endsWith
(
Name
n)
Determines whether a compound name is a suffix of this compound name.
boolean
Name.
endsWith
(
Name
n)
Determines whether this name ends with a specified suffix.
NameParser
Context.
getNameParser
(
Name
name)
Retrieves the parser associated with the named context.
NameParser
InitialContext.
getNameParser
(
Name
name)
protected
Context
InitialContext.
getURLOrDefaultInitCtx
(
Name
name)
Retrieves a context for resolving
name
.
NamingEnumeration
<
NameClassPair
>
Context.
list
(
Name
name)
Enumerates the names bound in the named context, along with the
 class names of objects bound to them.
NamingEnumeration
<
NameClassPair
>
InitialContext.
list
(
Name
name)
NamingEnumeration
<
Binding
>
Context.
listBindings
(
Name
name)
Enumerates the names bound in the named context, along with the
 objects bound to them.
NamingEnumeration
<
Binding
>
InitialContext.
listBindings
(
Name
name)
Object
Context.
lookup
(
Name
name)
Retrieves the named object.
Object
InitialContext.
lookup
(
Name
name)
Object
Context.
lookupLink
(
Name
name)
Retrieves the named object, following links except
 for the terminal atomic component of the name.
Object
InitialContext.
lookupLink
(
Name
name)
void
Context.
rebind
(
Name
name,
Object
obj)
Binds a name to an object, overwriting any existing binding.
void
InitialContext.
rebind
(
Name
name,
Object
obj)
void
Context.
rename
(
Name
oldName,
Name
newName)
Binds a new name to the object bound to an old name, and unbinds
 the old name.
void
InitialContext.
rename
(
Name
oldName,
Name
newName)
void
CannotProceedException.
setAltName
(
Name
altName)
Sets the
altName
field of this exception.
void
LinkException.
setLinkRemainingName
(
Name
name)
Sets the remaining link name field of this exception.
void
LinkException.
setLinkResolvedName
(
Name
name)
Sets the resolved link name field of this exception.
void
NamingException.
setRemainingName
(
Name
name)
Sets the remaining name field of this exception.
void
CannotProceedException.
setRemainingNewName
(
Name
newName)
Sets the "remaining new name" field of this exception.
void
NamingException.
setResolvedName
(
Name
name)
Sets the resolved name field of this exception.
boolean
CompositeName.
startsWith
(
Name
n)
Determines whether a composite name is a prefix of this composite name.
boolean
CompoundName.
startsWith
(
Name
n)
Determines whether a compound name is a prefix of this compound name.
boolean
Name.
startsWith
(
Name
n)
Determines whether this name starts with a specified prefix.
void
Context.
unbind
(
Name
name)
Unbinds the named object.
void
InitialContext.
unbind
(
Name
name)
Constructors in
javax.naming
with parameters of type
Name
Modifier
Constructor
Description
LinkRef
(
Name
linkName)
Constructs a LinkRef for a name.
Uses of
Name
in
javax.naming.directory
Methods in
javax.naming.directory
with parameters of type
Name
Modifier and Type
Method
Description
void
DirContext.
bind
(
Name
name,
Object
obj,
Attributes
attrs)
Binds a name to an object, along with associated attributes.
void
InitialDirContext.
bind
(
Name
name,
Object
obj,
Attributes
attrs)
DirContext
DirContext.
createSubcontext
(
Name
name,
Attributes
attrs)
Creates and binds a new context, along with associated attributes.
DirContext
InitialDirContext.
createSubcontext
(
Name
name,
Attributes
attrs)
Attributes
DirContext.
getAttributes
(
Name
name)
Retrieves all of the attributes associated with a named object.
Attributes
DirContext.
getAttributes
(
Name
name,
String
[] attrIds)
Retrieves selected attributes associated with a named object.
Attributes
InitialDirContext.
getAttributes
(
Name
name)
Attributes
InitialDirContext.
getAttributes
(
Name
name,
String
[] attrIds)
DirContext
DirContext.
getSchema
(
Name
name)
Retrieves the schema associated with the named object.
DirContext
InitialDirContext.
getSchema
(
Name
name)
DirContext
DirContext.
getSchemaClassDefinition
(
Name
name)
Retrieves a context containing the schema objects of the
 named object's class definitions.
DirContext
InitialDirContext.
getSchemaClassDefinition
(
Name
name)
void
DirContext.
modifyAttributes
(
Name
name,
 int mod_op,
Attributes
attrs)
Modifies the attributes associated with a named object.
void
DirContext.
modifyAttributes
(
Name
name,
ModificationItem
[] mods)
Modifies the attributes associated with a named object using
 an ordered list of modifications.
void
InitialDirContext.
modifyAttributes
(
Name
name,
 int mod_op,
Attributes
attrs)
void
InitialDirContext.
modifyAttributes
(
Name
name,
ModificationItem
[] mods)
void
DirContext.
rebind
(
Name
name,
Object
obj,
Attributes
attrs)
Binds a name to an object, along with associated attributes,
 overwriting any existing binding.
void
InitialDirContext.
rebind
(
Name
name,
Object
obj,
Attributes
attrs)
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
Name
name,
String
filterExpr,
Object
[] filterArgs,
SearchControls
cons)
Searches in the named context or object for entries that satisfy the
 given search filter.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
Name
name,
String
filter,
SearchControls
cons)
Searches in the named context or object for entries that satisfy the
 given search filter.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
Name
name,
Attributes
matchingAttributes)
Searches in a single context for objects that contain a
 specified set of attributes.
NamingEnumeration
<
SearchResult
>
DirContext.
search
(
Name
name,
Attributes
matchingAttributes,
String
[] attributesToReturn)
Searches in a single context for objects that contain a
 specified set of attributes, and retrieves selected attributes.
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
Name
name,
String
filterExpr,
Object
[] filterArgs,
SearchControls
cons)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
Name
name,
String
filter,
SearchControls
cons)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
Name
name,
Attributes
matchingAttributes)
NamingEnumeration
<
SearchResult
>
InitialDirContext.
search
(
Name
name,
Attributes
matchingAttributes,
String
[] attributesToReturn)
Uses of
Name
in
javax.naming.event
Methods in
javax.naming.event
with parameters of type
Name
Modifier and Type
Method
Description
void
EventContext.
addNamingListener
(
Name
target,
 int scope,
NamingListener
l)
Adds a listener for receiving naming events fired
 when the object(s) identified by a target and scope changes.
void
EventDirContext.
addNamingListener
(
Name
target,
String
filter,
Object
[] filterArgs,
SearchControls
ctls,
NamingListener
l)
Adds a listener for receiving naming events fired
 when objects identified by the search filter
filter
and
 filter arguments at the object named by the target are modified.
void
EventDirContext.
addNamingListener
(
Name
target,
String
filter,
SearchControls
ctls,
NamingListener
l)
Adds a listener for receiving naming events fired
 when objects identified by the search filter
filter
at
 the object named by target are modified.
Uses of
Name
in
javax.naming.ldap
Classes in
javax.naming.ldap
that implement
Name
Modifier and Type
Class
Description
class
LdapName
This class represents a distinguished name as specified by
RFC 2253
.
Methods in
javax.naming.ldap
that return
Name
Modifier and Type
Method
Description
Name
LdapName.
add
(int posn,
String
comp)
Adds a single component at a specified position within this
 LDAP name.
Name
LdapName.
add
(int posn,
Rdn
comp)
Adds a single RDN at a specified position within this
 LDAP name.
Name
LdapName.
add
(
String
comp)
Adds a single component to the end of this LDAP name.
Name
LdapName.
add
(
Rdn
comp)
Adds a single RDN to the end of this LDAP name.
Name
LdapName.
addAll
(int posn,
List
<
Rdn
> suffixRdns)
Adds the RDNs of a name -- in order -- at a specified position
 within this name.
Name
LdapName.
addAll
(int posn,
Name
suffix)
Adds the components of a name -- in order -- at a specified position
 within this name.
Name
LdapName.
addAll
(
List
<
Rdn
> suffixRdns)
Adds the RDNs of a name -- in order -- to the end of this name.
Name
LdapName.
addAll
(
Name
suffix)
Adds the components of a name -- in order -- to the end of this name.
Name
LdapName.
getPrefix
(int posn)
Creates a name whose components consist of a prefix of the
 components of this LDAP name.
Name
LdapName.
getSuffix
(int posn)
Creates a name whose components consist of a suffix of the
 components in this LDAP name.
Methods in
javax.naming.ldap
with parameters of type
Name
Modifier and Type
Method
Description
Name
LdapName.
addAll
(int posn,
Name
suffix)
Adds the components of a name -- in order -- at a specified position
 within this name.
Name
LdapName.
addAll
(
Name
suffix)
Adds the components of a name -- in order -- to the end of this name.
boolean
LdapName.
endsWith
(
Name
n)
Determines whether this LDAP name ends with a specified
 LDAP name suffix.
boolean
LdapName.
startsWith
(
Name
n)
Determines whether this LDAP name starts with a specified LDAP name
 prefix.
Uses of
Name
in
javax.naming.spi
Fields in
javax.naming.spi
declared as
Name
Modifier and Type
Field
Description
protected
Name
ResolveResult.
remainingName
Field containing the remaining name yet to be resolved.
Methods in
javax.naming.spi
that return
Name
Modifier and Type
Method
Description
Name
ResolveResult.
getRemainingName
()
Retrieves the remaining unresolved portion of the name.
Methods in
javax.naming.spi
with parameters of type
Name
Modifier and Type
Method
Description
void
ResolveResult.
appendRemainingName
(
Name
name)
Adds components to the end of remaining name.
static
Object
DirectoryManager.
getObjectInstance
(
Object
refInfo,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
attrs)
Creates an instance of an object for the specified object,
 attributes, and environment.
Object
DirObjectFactory.
getObjectInstance
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
attrs)
Creates an object using the location or reference information, and attributes
 specified.
static
Object
NamingManager.
getObjectInstance
(
Object
refInfo,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Creates an instance of an object for the specified object
 and environment.
Object
ObjectFactory.
getObjectInstance
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Creates an object using the location or reference information
 specified.
static
DirStateFactory.Result
DirectoryManager.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
attrs)
Retrieves the state of an object for binding when given the original
 object and its attributes.
DirStateFactory.Result
DirStateFactory.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment,
Attributes
inAttrs)
Retrieves the state of an object for binding given the object and attributes
 to be transformed.
static
Object
NamingManager.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Retrieves the state of an object for binding.
Object
StateFactory.
getStateToBind
(
Object
obj,
Name
name,
Context
nameCtx,
Hashtable
<?,
?> environment)
Retrieves the state of an object for binding.
ResolveResult
Resolver.
resolveToClass
(
Name
name,
Class
<? extends
Context
> contextType)
Partially resolves a name.
void
ResolveResult.
setRemainingName
(
Name
name)
Sets the remaining name field of this result to name.
Constructors in
javax.naming.spi
with parameters of type
Name
Modifier
Constructor
Description
ResolveResult
(
Object
robj,
Name
rname)
Constructs a new instance of ResolveResult consisting of
 the resolved Object and the remaining name.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.