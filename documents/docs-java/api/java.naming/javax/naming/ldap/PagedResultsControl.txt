PagedResultsControl (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field
|
Constr
|
Method
SEARCH
Module
java.naming
Package
javax.naming.ldap
Class PagedResultsControl
java.lang.Object
javax.naming.ldap.BasicControl
javax.naming.ldap.PagedResultsControl
All Implemented Interfaces:
Serializable
,
Control
public final class
PagedResultsControl
extends
BasicControl
Requests that the results of a search operation be returned by the LDAP
 server in batches of a specified size.
 The requestor controls the rate at which batches are returned by the rate
 at which it invokes search operations.
The following code sample shows how the class may be used:
// Open an LDAP association
     LdapContext ctx = new InitialLdapContext();

     // Activate paged results
     int pageSize = 20; // 20 entries per page
     byte[] cookie = null;
     int total;
     ctx.setRequestControls(new Control[]{
         new PagedResultsControl(pageSize, Control.CRITICAL) });

     do {
         // Perform the search
         NamingEnumeration results =
             ctx.search("", "(objectclass=*)", new SearchControls());

         // Iterate over a batch of search results
         while (results != null && results.hasMore()) {
             // Display an entry
             SearchResult entry = (SearchResult)results.next();
             System.out.println(entry.getName());
             System.out.println(entry.getAttributes());

             // Handle the entry's response controls (if any)
             if (entry instanceof HasControls) {
                 // ((HasControls)entry).getControls();
             }
         }
         // Examine the paged results control response
         Control[] controls = ctx.getResponseControls();
         if (controls != null) {
             for (int i = 0; i < controls.length; i++) {
                 if (controls[i] instanceof PagedResultsResponseControl) {
                     PagedResultsResponseControl prrc =
                         (PagedResultsResponseControl)controls[i];
                     total = prrc.getResultSize();
                     cookie = prrc.getCookie();
                 } else {
                     // Handle other response controls (if any)
                 }
             }
         }

         // Re-activate paged results
         ctx.setRequestControls(new Control[]{
             new PagedResultsControl(pageSize, cookie, Control.CRITICAL) });
     } while (cookie != null);

     // Close the LDAP association
     ctx.close();
     ...
This class implements the LDAPv3 Control for paged-results as defined in
RFC 2696
.

 The control's value has the following ASN.1 definition:
realSearchControlValue ::= SEQUENCE {
         size      INTEGER (0..maxInt),
                           -- requested page size from client
                           -- result set size estimate from server
         cookie    OCTET STRING
     }
Since:
1.5
See Also:
PagedResultsResponseControl
Serialized Form
Field Summary
Fields
Modifier and Type
Field
Description
static final
String
OID
The paged-results control's assigned object identifier
 is 1.2.840.113556.1.4.319.
Fields declared in class javax.naming.ldap.
BasicControl
criticality
,
id
,
value
Fields declared in interface javax.naming.ldap.
Control
CRITICAL
,
NONCRITICAL
Constructor Summary
Constructors
Constructor
Description
PagedResultsControl
(int pageSize,
 boolean criticality)
Constructs a control to set the number of entries to be returned per
 page of results.
PagedResultsControl
(int pageSize,
 byte[] cookie,
 boolean criticality)
Constructs a control to set the number of entries to be returned per
 page of results.
Method Summary
Methods declared in class javax.naming.ldap.
BasicControl
getEncodedValue
,
getID
,
isCritical
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Field Details
OID
public static final
String
OID
The paged-results control's assigned object identifier
 is 1.2.840.113556.1.4.319.
See Also:
Constant Field Values
Constructor Details
PagedResultsControl
public
PagedResultsControl
(int pageSize,
 boolean criticality)
throws
IOException
Constructs a control to set the number of entries to be returned per
 page of results.
Parameters:
pageSize
- The number of entries to return in a page.
criticality
- If true then the server must honor the control
                          and return search results as indicated by
                          pageSize or refuse to perform the search.
                          If false, then the server need not honor the
                          control.
Throws:
IOException
- If an error was encountered while encoding the
                          supplied arguments into a control.
PagedResultsControl
public
PagedResultsControl
(int pageSize,
 byte[] cookie,
 boolean criticality)
throws
IOException
Constructs a control to set the number of entries to be returned per
 page of results. The cookie is provided by the server and may be
 obtained from the paged-results response control.
A sequence of paged-results can be abandoned by setting the pageSize
 to zero and setting the cookie to the last cookie received from the
 server.
Parameters:
pageSize
- The number of entries to return in a page.
cookie
- A possibly null server-generated cookie.
criticality
- If true then the server must honor the control
                          and return search results as indicated by
                          pageSize or refuse to perform the search.
                          If false, then the server need not honor the
                          control.
Throws:
IOException
- If an error was encountered while encoding the
                          supplied arguments into a control.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.