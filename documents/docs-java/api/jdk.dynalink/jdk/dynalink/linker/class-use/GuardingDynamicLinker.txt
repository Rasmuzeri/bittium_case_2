Uses of Interface jdk.dynalink.linker.GuardingDynamicLinker (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
jdk.dynalink.linker.GuardingDynamicLinker
Packages that use
GuardingDynamicLinker
Package
Description
jdk.dynalink
Contains interfaces and classes that are used to link an
invokedynamic
call site.
jdk.dynalink.beans
Contains the linker for ordinary Java objects.
jdk.dynalink.linker
Contains interfaces and classes needed by language runtimes to implement
 their own language-specific object models and type conversions.
jdk.dynalink.linker.support
Contains classes that make it more convenient for language runtimes to
 implement their own language-specific object models and type conversions
 by providing basic implementations of some classes as well as various
 utilities.
Uses of
GuardingDynamicLinker
in
jdk.dynalink
Methods in
jdk.dynalink
with parameters of type
GuardingDynamicLinker
Modifier and Type
Method
Description
void
DynamicLinkerFactory.
setFallbackLinkers
(
GuardingDynamicLinker
... fallbackLinkers)
Sets the fallback guarding dynamic linkers.
void
DynamicLinkerFactory.
setPrioritizedLinker
(
GuardingDynamicLinker
prioritizedLinker)
Sets a single prioritized linker.
void
DynamicLinkerFactory.
setPrioritizedLinkers
(
GuardingDynamicLinker
... prioritizedLinkers)
Sets the prioritized guarding dynamic linkers.
Method parameters in
jdk.dynalink
with type arguments of type
GuardingDynamicLinker
Modifier and Type
Method
Description
void
DynamicLinkerFactory.
setFallbackLinkers
(
List
<? extends
GuardingDynamicLinker
> fallbackLinkers)
Sets the fallback guarding dynamic linkers.
void
DynamicLinkerFactory.
setPrioritizedLinkers
(
List
<? extends
GuardingDynamicLinker
> prioritizedLinkers)
Sets the prioritized guarding dynamic linkers.
Uses of
GuardingDynamicLinker
in
jdk.dynalink.beans
Classes in
jdk.dynalink.beans
that implement
GuardingDynamicLinker
Modifier and Type
Class
Description
class
BeansLinker
A linker for ordinary Java objects.
Uses of
GuardingDynamicLinker
in
jdk.dynalink.linker
Subinterfaces of
GuardingDynamicLinker
in
jdk.dynalink.linker
Modifier and Type
Interface
Description
interface
TypeBasedGuardingDynamicLinker
A guarding dynamic linker that can determine whether it can link the call site solely based on the type of the first
 argument at linking invocation time.
Uses of
GuardingDynamicLinker
in
jdk.dynalink.linker.support
Classes in
jdk.dynalink.linker.support
that implement
GuardingDynamicLinker
Modifier and Type
Class
Description
class
CompositeGuardingDynamicLinker
A
GuardingDynamicLinker
that delegates sequentially to a list of
 other guarding dynamic linkers in its
CompositeGuardingDynamicLinker.getGuardedInvocation(LinkRequest, LinkerServices)
.
class
CompositeTypeBasedGuardingDynamicLinker
A composite type-based guarding dynamic linker.
Methods in
jdk.dynalink.linker.support
that return types with arguments of type
GuardingDynamicLinker
Modifier and Type
Method
Description
static
List
<
GuardingDynamicLinker
>
CompositeTypeBasedGuardingDynamicLinker.
optimize
(
Iterable
<? extends
GuardingDynamicLinker
> linkers)
Optimizes a list of type-based linkers.
Method parameters in
jdk.dynalink.linker.support
with type arguments of type
GuardingDynamicLinker
Modifier and Type
Method
Description
static
List
<
GuardingDynamicLinker
>
CompositeTypeBasedGuardingDynamicLinker.
optimize
(
Iterable
<? extends
GuardingDynamicLinker
> linkers)
Optimizes a list of type-based linkers.
Constructor parameters in
jdk.dynalink.linker.support
with type arguments of type
GuardingDynamicLinker
Modifier
Constructor
Description
CompositeGuardingDynamicLinker
(
Iterable
<? extends
GuardingDynamicLinker
> linkers)
Creates a new composite linker.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.