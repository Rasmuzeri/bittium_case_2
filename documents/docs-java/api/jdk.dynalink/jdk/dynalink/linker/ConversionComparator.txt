ConversionComparator (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested
|
Field |
Constr |
Method
Detail:
Field |
Constr |
Method
SEARCH
Module
jdk.dynalink
Package
jdk.dynalink.linker
Interface ConversionComparator
public interface
ConversionComparator
Optional interface to be implemented by
GuardingTypeConverterFactory
implementers. Language-specific conversions can cause increased overloaded
 method resolution ambiguity, as many methods can become applicable because of
 additional conversions. The static way of selecting the "most specific"
 method will fail more often, because there will be multiple maximally
 specific method with unrelated signatures. In these cases, language runtimes
 can be asked to resolve the ambiguity by expressing preferences for one
 conversion over the other.
Nested Class Summary
Nested Classes
Modifier and Type
Interface
Description
static enum
ConversionComparator.Comparison
Enumeration of possible outcomes of comparing one conversion to another.
Method Summary
All Methods
Instance Methods
Abstract Methods
Modifier and Type
Method
Description
ConversionComparator.Comparison
compareConversion
(
Class
<?> sourceType,
Class
<?> targetType1,
Class
<?> targetType2)
Determines which of the two target types is the preferred conversion
 target from a source type.
Method Details
compareConversion
ConversionComparator.Comparison
compareConversion
(
Class
<?> sourceType,
Class
<?> targetType1,
Class
<?> targetType2)
Determines which of the two target types is the preferred conversion
 target from a source type.
Parameters:
sourceType
- the source type.
targetType1
- one potential target type
targetType2
- another potential target type.
Returns:
one of Comparison constants that establish which - if any - of
 the target types is preferred for the conversion.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.