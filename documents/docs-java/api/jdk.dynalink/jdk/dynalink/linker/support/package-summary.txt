jdk.dynalink.linker.support (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Package:
Description
Related Packages
Classes and Interfaces
Package:
Description
|
Related Packages
|
Classes and Interfaces
SEARCH
Module
jdk.dynalink
Package jdk.dynalink.linker.support
package
jdk.dynalink.linker.support
Contains classes that make it more convenient for language runtimes to
 implement their own language-specific object models and type conversions
 by providing basic implementations of some classes as well as various
 utilities.
Since:
9
Related Packages
Package
Description
jdk.dynalink.linker
Contains interfaces and classes needed by language runtimes to implement
 their own language-specific object models and type conversions.
Classes
Class
Description
CompositeGuardingDynamicLinker
A
GuardingDynamicLinker
that delegates sequentially to a list of
 other guarding dynamic linkers in its
CompositeGuardingDynamicLinker.getGuardedInvocation(LinkRequest, LinkerServices)
.
CompositeTypeBasedGuardingDynamicLinker
A composite type-based guarding dynamic linker.
DefaultInternalObjectFilter
Default implementation for a
DynamicLinkerFactory.setInternalObjectsFilter(MethodHandleTransformer)
that delegates to a pair of filtering method handles.
Guards
Utility methods for creating typical guards for
MethodHandles.guardWithTest(MethodHandle, MethodHandle, MethodHandle)
and for adjusting their method types.
Lookup
A wrapper around
MethodHandles.Lookup
that masks
 checked exceptions.
SimpleLinkRequest
Default simple implementation of
LinkRequest
.
TypeUtilities
Various static utility methods for working with Java types.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.