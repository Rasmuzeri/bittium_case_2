ErrorManager (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Summary:
Nested
Field
Constr
Method
Detail:
Field
Constr
Method
Summary:
Nested |
Field
|
Constr
|
Method
Detail:
Field
|
Constr
|
Method
SEARCH
Module
java.logging
Package
java.util.logging
Class ErrorManager
java.lang.Object
java.util.logging.ErrorManager
public class
ErrorManager
extends
Object
ErrorManager objects can be attached to Handlers to process
 any error that occurs on a Handler during Logging.
When processing logging output, if a Handler encounters problems
 then rather than throwing an Exception back to the issuer of
 the logging call (who is unlikely to be interested) the Handler
 should call its associated ErrorManager.
Field Summary
Fields
Modifier and Type
Field
Description
static final int
CLOSE_FAILURE
CLOSE_FAILURE is used when a close of an output stream fails.
static final int
FLUSH_FAILURE
FLUSH_FAILURE is used when a flush to an output stream fails.
static final int
FORMAT_FAILURE
FORMAT_FAILURE is used when formatting fails for any reason.
static final int
GENERIC_FAILURE
GENERIC_FAILURE is used for failure that don't fit
 into one of the other categories.
static final int
OPEN_FAILURE
OPEN_FAILURE is used when an open of an output stream fails.
static final int
WRITE_FAILURE
WRITE_FAILURE is used when a write to an output stream fails.
Constructor Summary
Constructors
Constructor
Description
ErrorManager
()
Create an
ErrorManager
.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
error
(
String
msg,
Exception
ex,
 int code)
The error method is called when a Handler failure occurs.
Methods declared in class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Field Details
GENERIC_FAILURE
public static final
int
GENERIC_FAILURE
GENERIC_FAILURE is used for failure that don't fit
 into one of the other categories.
See Also:
Constant Field Values
WRITE_FAILURE
public static final
int
WRITE_FAILURE
WRITE_FAILURE is used when a write to an output stream fails.
See Also:
Constant Field Values
FLUSH_FAILURE
public static final
int
FLUSH_FAILURE
FLUSH_FAILURE is used when a flush to an output stream fails.
See Also:
Constant Field Values
CLOSE_FAILURE
public static final
int
CLOSE_FAILURE
CLOSE_FAILURE is used when a close of an output stream fails.
See Also:
Constant Field Values
OPEN_FAILURE
public static final
int
OPEN_FAILURE
OPEN_FAILURE is used when an open of an output stream fails.
See Also:
Constant Field Values
FORMAT_FAILURE
public static final
int
FORMAT_FAILURE
FORMAT_FAILURE is used when formatting fails for any reason.
See Also:
Constant Field Values
Constructor Details
ErrorManager
public
ErrorManager
()
Create an
ErrorManager
.
Method Details
error
public
void
error
(
String
msg,
Exception
ex,
 int code)
The error method is called when a Handler failure occurs.
This method may be overridden in subclasses.  The default
 behavior in this base class is that the first call is
 reported to System.err, and subsequent calls are ignored.
Parameters:
msg
- a descriptive string (may be null)
ex
- an exception (may be null)
code
- an error code defined in ErrorManager
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.