S-Index (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Index
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
S
1.0 SerialArray
- Search tag in package javax.sql.rowset.serial
Section
10.0 SQLOutputImpl
- Search tag in package javax.sql.rowset.serial
Section
2.0 SerialBlob
- Search tag in package javax.sql.rowset.serial
Section
2.0 Service Provider Interface Architecture
- Search tag in package javax.sql.rowset.spi
Section
2.0 Setting Properties
- Search tag in class javax.sql.rowset.BaseRowSet
Section
2.0 Standard RowSet Definitions
- Search tag in package javax.sql.rowset
Section
2.1 State 1 - Outputting a WebRowSet Object to XML
- Search tag in interface javax.sql.rowset.WebRowSet
Section
2.2 State 2 - Deleting a Row
- Search tag in interface javax.sql.rowset.WebRowSet
Section
2.3 State 3 - Inserting a Row
- Search tag in interface javax.sql.rowset.WebRowSet
Section
2.4 State 4 - Modifying a Row
- Search tag in interface javax.sql.rowset.WebRowSet
Section
3.0 Sample Usage
- Search tag in interface javax.sql.rowset.JoinRowSet
Section
3.0 SerialClob
- Search tag in package javax.sql.rowset.serial
Section
3.0 Setting the Command and Its Parameters
- Search tag in class javax.sql.rowset.BaseRowSet
Section
3.0 SyncProvider Implementer's Guide
- Search tag in package javax.sql.rowset.spi
Section
5.0 SerialDatalink
- Search tag in package javax.sql.rowset.serial
Section
5.0 SyncProvider Constants
- Search tag in class javax.sql.rowset.spi.SyncProvider
Section
6.0 SerialJavaObject
- Search tag in package javax.sql.rowset.serial
Section
7.0 Scrolling and Updating
- Search tag in interface javax.sql.rowset.CachedRowSet
Section
7.0 SerialRef
- Search tag in package javax.sql.rowset.serial
Section
8.0 SerialStruct
- Search tag in package javax.sql.rowset.serial
Section
9.0 Setting Properties
- Search tag in interface javax.sql.rowset.CachedRowSet
Section
9.0 SQLInputImpl
- Search tag in package javax.sql.rowset.serial
Section
S
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <s>
S_128_BIT
- Enum constant in enum class jdk.incubator.vector.
VectorShape
Shape of length 128 bits
S_256_BIT
- Enum constant in enum class jdk.incubator.vector.
VectorShape
Shape of length 256 bits
S_512_BIT
- Enum constant in enum class jdk.incubator.vector.
VectorShape
Shape of length 512 bits
S_64_BIT
- Enum constant in enum class jdk.incubator.vector.
VectorShape
Shape of length 64 bits
S_Max_BIT
- Enum constant in enum class jdk.incubator.vector.
VectorShape
Shape of maximum length supported on the platform
S_RESIZE_CURSOR
- Static variable in class java.awt.
Cursor
The south-resize cursor type.
S_RESIZE_CURSOR
- Static variable in class java.awt.
Frame
Deprecated.
replaced by
Cursor.S_RESIZE_CURSOR
.
S2B
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
shortVal
to
(byte)shortVal
.
S2D
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
shortVal
to
(double)shortVal
.
S2F
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
shortVal
to
(float)shortVal
.
S2I
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
shortVal
to
(int)shortVal
.
S2L
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
shortVal
to
(long)shortVal
.
SADDLE_STITCH
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with one or more staples (wire stitches) along the
 middle fold.
Safety and thread-confinement
- Search tag in interface java.lang.foreign.Arena
Section
Safety considerations
- Search tag in interface java.lang.foreign.Linker
Section
SafeVarargs
- Annotation Interface in
java.lang
A programmer assertion that the body of the annotated method or
 constructor does not perform potentially unsafe operations on its
 varargs parameter.
SAMARITAN
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Samaritan".
SAMARITAN
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Samaritan" Unicode character block.
sameFile(URL)
- Method in class java.net.
URL
Compares two URLs, excluding the fragment component.
sameFile(URL, URL)
- Method in class java.net.
URLStreamHandler
Compare two urls to see whether they refer to the same file,
 i.e., having the same protocol, host, port, and path.
SAMP
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <samp>
SAMPLE_FORMAT_FLOATING_POINT
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "SampleFormat" tag.
SAMPLE_FORMAT_SIGNED_INTEGER
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "SampleFormat" tag.
SAMPLE_FORMAT_UNDEFINED
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "SampleFormat" tag.
SAMPLE_FORMAT_UNSIGNED_INTEGER
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "SampleFormat" tag.
SAMPLE_RATE
- Static variable in class javax.sound.sampled.
FloatControl.Type
Represents a control that changes the sample rate of audio playback.
sampleModel
- Variable in class java.awt.image.
Raster
The SampleModel that describes how pixels from this Raster
 are stored in the DataBuffer.
sampleModel
- Variable in class javax.imageio.
ImageTypeSpecifier
A
SampleModel
to be used as a prototype.
SampleModel
- Class in
java.awt.image
This abstract class defines an interface for extracting samples of pixels
  in an image.
SampleModel(int, int, int, int)
- Constructor for class java.awt.image.
SampleModel
Constructs a SampleModel with the specified parameters.
sampleModelTranslateX
- Variable in class java.awt.image.
Raster
The X translation from the coordinate space of the
 Raster's SampleModel to that of the Raster.
sampleModelTranslateY
- Variable in class java.awt.image.
Raster
The Y translation from the coordinate space of the
 Raster's SampleModel to that of the Raster.
sampleRate
- Variable in class javax.sound.sampled.
AudioFormat
The number of samples played or recorded per second, for sounds that have
 this format.
sampleSizeInBits
- Variable in class javax.sound.sampled.
AudioFormat
The number of bits in each sample of a sound that has this format.
SANS_SERIF
- Static variable in class java.awt.
Font
A String constant for the canonical family name of the
 logical font "SansSerif".
Sasl
- Class in
javax.security.sasl
A static class for creating SASL clients and servers.
SaslClient
- Interface in
javax.security.sasl
Performs SASL authentication as a client.
SaslClientFactory
- Interface in
javax.security.sasl
An interface for creating instances of
SaslClient
.
SaslException
- Exception Class in
javax.security.sasl
This class represents an error that has occurred when using SASL.
SaslException()
- Constructor for exception class javax.security.sasl.
SaslException
Constructs a new instance of
SaslException
.
SaslException(String)
- Constructor for exception class javax.security.sasl.
SaslException
Constructs a new instance of
SaslException
with a detailed message.
SaslException(String, Throwable)
- Constructor for exception class javax.security.sasl.
SaslException
Constructs a new instance of
SaslException
with a detailed message
 and a root exception.
SASL Overview
- Search tag in package javax.security.sasl
Section
SaslServer
- Interface in
javax.security.sasl
Performs SASL authentication as a server.
SaslServerFactory
- Interface in
javax.security.sasl
An interface for creating instances of
SaslServer
.
SATURATION_HIGH
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "Saturation" tag.
SATURATION_LOW
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "Saturation" tag.
SATURATION_NORMAL
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "Saturation" tag.
SATURDAY
- Enum constant in enum class java.time.
DayOfWeek
The singleton instance for the day-of-week of Saturday.
SATURDAY
- Static variable in class java.util.
Calendar
Value of the
Calendar.DAY_OF_WEEK
field indicating
 Saturday.
SAURASHTRA
- Enum constant in enum class java.awt.font.
NumericShaper.Range
The Saurashtra range with the Saurashtra digits.
SAURASHTRA
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Saurashtra".
SAURASHTRA
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Saurashtra" Unicode character block.
save(ObjectOutputStream, String, EventListener)
- Static method in class java.awt.
AWTEventMulticaster
Saves a Serializable listener chain to a serialization stream.
save(OutputStream, String)
- Method in class java.util.
Properties
Deprecated.
This method does not throw an IOException if an I/O error
 occurs while saving the property list.  The preferred way to save a
 properties list is via the
store(OutputStream out,
 String comments)
method or the
storeToXML(OutputStream os, String comment)
method.
SAVE
- Static variable in class java.awt.
FileDialog
This constant value indicates that the purpose of the file
 dialog window is to locate a file to which to write.
SAVE_DIALOG
- Static variable in class javax.swing.
JFileChooser
Type value indicating that the
JFileChooser
supports a
 "Save" file operation.
SAVE_FILE
- Static variable in class java.awt.
Event
Deprecated.
A file saving event.
saveButtonMnemonic
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Save button mnemonic
saveButtonText
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Save button text
saveButtonToolTipText
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Save button tool tip text
saveComposedText(int)
- Method in class javax.swing.text.
JTextComponent
Saves composed text around the specified position.
saveInternal(ObjectOutputStream, String)
- Method in class java.awt.
AWTEventMulticaster
Serialization support.
Savepoint
- Interface in
java.sql
The representation of a savepoint, which is a point within
 the current transaction that can be referenced from the
Connection.rollback
method.
Saving and restoring Graphics State
- Search tag in package java.awt
Section
SAX2 Standard Feature Flags
- Search tag in package org.xml.sax
Section
SAX2 Standard Handler and Property IDs
- Search tag in package org.xml.sax
Section
SAXException
- Exception Class in
org.xml.sax
Encapsulate a general SAX error or warning.
SAXException()
- Constructor for exception class org.xml.sax.
SAXException
Create a new SAXException.
SAXException(Exception)
- Constructor for exception class org.xml.sax.
SAXException
Create a new SAXException wrapping an existing exception.
SAXException(String)
- Constructor for exception class org.xml.sax.
SAXException
Create a new SAXException.
SAXException(String, Exception)
- Constructor for exception class org.xml.sax.
SAXException
Create a new SAXException from an existing exception.
SAXNotRecognizedException
- Exception Class in
org.xml.sax
Exception class for an unrecognized identifier.
SAXNotRecognizedException()
- Constructor for exception class org.xml.sax.
SAXNotRecognizedException
Default constructor.
SAXNotRecognizedException(String)
- Constructor for exception class org.xml.sax.
SAXNotRecognizedException
Construct a new exception with the given message.
SAXNotSupportedException
- Exception Class in
org.xml.sax
Exception class for an unsupported operation.
SAXNotSupportedException()
- Constructor for exception class org.xml.sax.
SAXNotSupportedException
Construct a new exception with no message.
SAXNotSupportedException(String)
- Constructor for exception class org.xml.sax.
SAXNotSupportedException
Construct a new exception with the given message.
SAXParseException
- Exception Class in
org.xml.sax
Encapsulate an XML parse error or warning.
SAXParseException(String, String, String, int, int)
- Constructor for exception class org.xml.sax.
SAXParseException
Create a new SAXParseException.
SAXParseException(String, String, String, int, int, Exception)
- Constructor for exception class org.xml.sax.
SAXParseException
Create a new SAXParseException with an embedded exception.
SAXParseException(String, Locator)
- Constructor for exception class org.xml.sax.
SAXParseException
Create a new SAXParseException from a message and a Locator.
SAXParseException(String, Locator, Exception)
- Constructor for exception class org.xml.sax.
SAXParseException
Wrap an existing exception in a SAXParseException.
SAXParser
- Class in
javax.xml.parsers
Defines the API that wraps an
XMLReader
implementation class.
SAXParser()
- Constructor for class javax.xml.parsers.
SAXParser
Protected constructor to prevent instantiation.
SAXParserFactory
- Class in
javax.xml.parsers
Defines a factory API that enables applications to configure and
 obtain a SAX based parser to parse XML documents.
SAXParserFactory()
- Constructor for class javax.xml.parsers.
SAXParserFactory
Protected constructor to force use of
SAXParserFactory.newInstance()
.
SAXResult
- Class in
javax.xml.transform.sax
Acts as an holder for a transformation Result.
SAXResult()
- Constructor for class javax.xml.transform.sax.
SAXResult
Zero-argument default constructor.
SAXResult(ContentHandler)
- Constructor for class javax.xml.transform.sax.
SAXResult
Create a SAXResult that targets a SAX2
ContentHandler
.
SAXSource
- Class in
javax.xml.transform.sax
Acts as an holder for SAX-style Source.
SAXSource()
- Constructor for class javax.xml.transform.sax.
SAXSource
Zero-argument default constructor.
SAXSource(InputSource)
- Constructor for class javax.xml.transform.sax.
SAXSource
Create a
SAXSource
, using a SAX
InputSource
.
SAXSource(XMLReader, InputSource)
- Constructor for class javax.xml.transform.sax.
SAXSource
Create a
SAXSource
, using an
XMLReader
and a SAX InputSource.
SAXTransformerFactory
- Class in
javax.xml.transform.sax
This class extends TransformerFactory to provide SAX-specific
 factory methods.
SAXTransformerFactory()
- Constructor for class javax.xml.transform.sax.
SAXTransformerFactory
The default constructor is protected on purpose.
SC_BLOCK_DATA
- Static variable in interface java.io.
ObjectStreamConstants
Bit mask for ObjectStreamClass flag.
SC_ENUM
- Static variable in interface java.io.
ObjectStreamConstants
Bit mask for ObjectStreamClass flag.
SC_EXTERNALIZABLE
- Static variable in interface java.io.
ObjectStreamConstants
Bit mask for ObjectStreamClass flag.
SC_SERIALIZABLE
- Static variable in interface java.io.
ObjectStreamConstants
Bit mask for ObjectStreamClass flag.
SC_WRITE_METHOD
- Static variable in interface java.io.
ObjectStreamConstants
Bit mask for ObjectStreamClass flag.
scalb(double, int)
- Static method in class java.lang.
Math
Returns
d
× 2
scaleFactor
rounded as if performed by a single correctly rounded
 floating-point multiply.
scalb(double, int)
- Static method in class java.lang.
StrictMath
Returns
d
× 2
scaleFactor
rounded as if performed by a single correctly rounded
 floating-point multiply.
scalb(float, int)
- Static method in class java.lang.
Math
Returns
f
× 2
scaleFactor
rounded as if performed by a single correctly rounded
 floating-point multiply.
scalb(float, int)
- Static method in class java.lang.
StrictMath
Returns
f
× 2
scaleFactor
rounded as if performed by a single correctly rounded
 floating-point multiply.
scale()
- Method in class java.math.
BigDecimal
Returns the
scale
of this
BigDecimal
.
scale(double, double)
- Method in class java.awt.geom.
AffineTransform
Concatenates this transform with a scaling transformation.
scale(double, double)
- Method in class java.awt.
Graphics2D
Concatenates the current
Graphics2D
Transform
with a scaling transformation
 Subsequent rendering is resized according to the specified scaling
 factors relative to the previous scaling.
scale(Spring, float)
- Static method in class javax.swing.
Spring
Returns a spring whose
minimum
,
preferred
,
maximum
and
value
properties are each multiples of the properties of the
 argument spring,
s
.
SCALE_AREA_AVERAGING
- Static variable in class java.awt.
Image
Use the Area Averaging image scaling algorithm.
SCALE_DEFAULT
- Static variable in class java.awt.
Image
Use the default image-scaling algorithm.
SCALE_FAST
- Static variable in class java.awt.
Image
Choose an image-scaling algorithm that gives higher priority
 to scaling speed than smoothness of the scaled image.
SCALE_REPLICATE
- Static variable in class java.awt.
Image
Use the image scaling algorithm embodied in the
ReplicateScaleFilter
class.
SCALE_SMOOTH
- Static variable in class java.awt.
Image
Choose an image-scaling algorithm that gives higher priority
 to image smoothness than scaling speed.
scaleByPowerOfTen(int)
- Method in class java.math.
BigDecimal
Returns a BigDecimal whose numerical value is equal to
 (
this
* 10
n
).
scan(DocTree, P)
- Method in class com.sun.source.util.
DocTreePathScanner
Scans a single node.
scan(DocTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Scans a single node.
scan(Tree, P)
- Method in class com.sun.source.util.
TreePathScanner
Scans a single node.
scan(Tree, P)
- Method in class com.sun.source.util.
TreeScanner
Scans a single node.
scan(DocTreePath, P)
- Method in class com.sun.source.util.
DocTreePathScanner
Scans a tree from a position identified by a tree path.
scan(TreePath, P)
- Method in class com.sun.source.util.
TreePathScanner
Scans a tree from a position identified by a TreePath.
scan(Iterable<? extends DocTree>, P)
- Method in class com.sun.source.util.
DocTreeScanner
Scans a sequence of nodes.
scan(Iterable<? extends Tree>, P)
- Method in class com.sun.source.util.
TreeScanner
Scans a sequence of nodes.
scan(Iterable<? extends Element>, P)
- Method in class javax.lang.model.util.
ElementScanner6
Iterates over the given elements and calls
scan(Element, P)
on each one.
scan(Element)
- Method in class javax.lang.model.util.
ElementScanner6
Convenience method equivalent to
v.scan(e, null)
.
scan(Element, P)
- Method in class javax.lang.model.util.
ElementScanner6
Processes an element by calling
e.accept(this, p)
;
 this method may be overridden by subclasses.
scanForPlugins()
- Static method in class javax.imageio.
ImageIO
Scans for plug-ins on the application class path,
 loads their service provider classes, and registers a service
 provider instance for each one found with the
IIORegistry
.
scanlineStride
- Variable in class java.awt.image.
ComponentSampleModel
Line stride (in data array elements) of the region of image
  data described by this ComponentSampleModel.
Scanner
- Class in
java.util
A simple text scanner which can parse primitive types and strings using
 regular expressions.
Scanner(File)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified file.
Scanner(File, String)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified file.
Scanner(File, Charset)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified file.
Scanner(InputStream)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified input stream.
Scanner(InputStream, String)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified input stream.
Scanner(InputStream, Charset)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified input stream.
Scanner(Readable)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified source.
Scanner(String)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified string.
Scanner(ReadableByteChannel)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified channel.
Scanner(ReadableByteChannel, String)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified channel.
Scanner(ReadableByteChannel, Charset)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified channel.
Scanner(Path)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified file.
Scanner(Path, String)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified file.
Scanner(Path, Charset)
- Constructor for class java.util.
Scanner
Constructs a new
Scanner
that produces values scanned
 from the specified file.
ScatteringByteChannel
- Interface in
java.nio.channels
A channel that can read bytes into a sequence of buffers.
SCENE_CAPTURE_TYPE_LANDSCAPE
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SceneCaptureType" tag.
SCENE_CAPTURE_TYPE_NIGHT_SCENE
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SceneCaptureType" tag.
SCENE_CAPTURE_TYPE_PORTRAIT
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SceneCaptureType" tag.
SCENE_CAPTURE_TYPE_STANDARD
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SceneCaptureType" tag.
SCENE_TYPE_DSC
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SceneType" tag.
schedule(Runnable, long, TimeUnit)
- Method in interface java.util.concurrent.
ScheduledExecutorService
Submits a one-shot task that becomes enabled after the given delay.
schedule(Runnable, long, TimeUnit)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
schedule(Callable<V>, long, TimeUnit)
- Method in interface java.util.concurrent.
ScheduledExecutorService
Submits a value-returning one-shot task that becomes enabled
 after the given delay.
schedule(Callable<V>, long, TimeUnit)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
schedule(TimerTask, long)
- Method in class java.util.
Timer
Schedules the specified task for execution after the specified delay.
schedule(TimerTask, long, long)
- Method in class java.util.
Timer
Schedules the specified task for repeated
fixed-delay execution
,
 beginning after the specified delay.
schedule(TimerTask, Date)
- Method in class java.util.
Timer
Schedules the specified task for execution at the specified time.
schedule(TimerTask, Date, long)
- Method in class java.util.
Timer
Schedules the specified task for repeated
fixed-delay execution
,
 beginning at the specified time.
scheduleAtFixedRate(Runnable, long, long, TimeUnit)
- Method in interface java.util.concurrent.
ScheduledExecutorService
Submits a periodic action that becomes enabled first after the
 given initial delay, and subsequently with the given period;
 that is, executions will commence after
initialDelay
, then
initialDelay + period
, then
initialDelay + 2 * period
, and so on.
scheduleAtFixedRate(Runnable, long, long, TimeUnit)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Submits a periodic action that becomes enabled first after the
 given initial delay, and subsequently with the given period;
 that is, executions will commence after
initialDelay
, then
initialDelay + period
, then
initialDelay + 2 * period
, and so on.
scheduleAtFixedRate(TimerTask, long, long)
- Method in class java.util.
Timer
Schedules the specified task for repeated
fixed-rate execution
,
 beginning after the specified delay.
scheduleAtFixedRate(TimerTask, Date, long)
- Method in class java.util.
Timer
Schedules the specified task for repeated
fixed-rate execution
,
 beginning at the specified time.
scheduledExecutionTime()
- Method in class java.util.
TimerTask
Returns the
scheduled
execution time of the most recent
actual
execution of this task.
ScheduledExecutorService
- Interface in
java.util.concurrent
An
ExecutorService
that can schedule commands to run after a given
 delay, or to execute periodically.
ScheduledFuture<V>
- Interface in
java.util.concurrent
A delayed result-bearing action that can be cancelled.
ScheduledThreadPoolExecutor
- Class in
java.util.concurrent
A
ThreadPoolExecutor
that can additionally schedule
 commands to run after a given delay, or to execute periodically.
ScheduledThreadPoolExecutor(int)
- Constructor for class java.util.concurrent.
ScheduledThreadPoolExecutor
Creates a new
ScheduledThreadPoolExecutor
with the
 given core pool size.
ScheduledThreadPoolExecutor(int, RejectedExecutionHandler)
- Constructor for class java.util.concurrent.
ScheduledThreadPoolExecutor
Creates a new
ScheduledThreadPoolExecutor
with the
 given initial parameters.
ScheduledThreadPoolExecutor(int, ThreadFactory)
- Constructor for class java.util.concurrent.
ScheduledThreadPoolExecutor
Creates a new
ScheduledThreadPoolExecutor
with the
 given initial parameters.
ScheduledThreadPoolExecutor(int, ThreadFactory, RejectedExecutionHandler)
- Constructor for class java.util.concurrent.
ScheduledThreadPoolExecutor
Creates a new
ScheduledThreadPoolExecutor
with the
 given initial parameters.
scheduleStart(Duration)
- Method in class jdk.jfr.
Recording
Starts this recording after a delay.
scheduleWithFixedDelay(Runnable, long, long, TimeUnit)
- Method in interface java.util.concurrent.
ScheduledExecutorService
Submits a periodic action that becomes enabled first after the
 given initial delay, and subsequently with the given delay
 between the termination of one execution and the commencement of
 the next.
scheduleWithFixedDelay(Runnable, long, long, TimeUnit)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Submits a periodic action that becomes enabled first after the
 given initial delay, and subsequently with the given delay
 between the termination of one execution and the commencement of
 the next.
Schema
- Class in
javax.xml.validation
Immutable in-memory representation of grammar.
Schema()
- Constructor for class javax.xml.validation.
Schema
Constructor for the derived class.
SCHEMA_SYSTEM_ID
- Static variable in interface javax.sql.rowset.
WebRowSet
The URL for the XML Schema definition file that defines the XML tags and
 their valid values for a
WebRowSet
implementation.
SchemaFactory
- Search tag in module java.xml
Section
SchemaFactory
- Search tag in module java.xml
Section
SchemaFactory
- Class in
javax.xml.validation
Factory that creates
Schema
objects.
SchemaFactory()
- Constructor for class javax.xml.validation.
SchemaFactory
Constructor for derived classes.
SchemaFactoryConfigurationError
- Exception Class in
javax.xml.validation
Thrown when a problem with configuration with the Schema Factories
 exists.
SchemaFactoryConfigurationError()
- Constructor for exception class javax.xml.validation.
SchemaFactoryConfigurationError
Create a new
SchemaFactoryConfigurationError
with no
 detail message.
SchemaFactoryConfigurationError(String)
- Constructor for exception class javax.xml.validation.
SchemaFactoryConfigurationError
Create a new
SchemaFactoryConfigurationError
with
 the
String
specified as an error message.
SchemaFactoryConfigurationError(String, Throwable)
- Constructor for exception class javax.xml.validation.
SchemaFactoryConfigurationError
Create a new
SchemaFactoryConfigurationError
with the
 given
Throwable
base cause and detail message.
SchemaFactoryConfigurationError(Throwable)
- Constructor for exception class javax.xml.validation.
SchemaFactoryConfigurationError
Create a new
SchemaFactoryConfigurationError
with the
 given
Throwable
base cause.
SchemaFactoryLoader
- Class in
javax.xml.validation
Factory that creates
SchemaFactory
.
SchemaFactoryLoader()
- Constructor for class javax.xml.validation.
SchemaFactoryLoader
A do-nothing constructor.
Schema Language
- Search tag in class javax.xml.validation.SchemaFactory
Section
SchemaViolationException
- Exception Class in
javax.naming.directory
This exception is thrown when a method
 in some ways violates the schema.
SchemaViolationException()
- Constructor for exception class javax.naming.directory.
SchemaViolationException
Constructs a new instance of SchemaViolationException.
SchemaViolationException(String)
- Constructor for exception class javax.naming.directory.
SchemaViolationException
Constructs a new instance of SchemaViolationException
 using the explanation supplied.
SCIENTIFIC
- Enum constant in enum class java.util.
Formatter.BigDecimalLayoutForm
Format the
BigDecimal
in computerized scientific notation.
Scientific Notation
- Search tag in class java.text.DecimalFormat
Section
scope()
- Method in interface java.lang.foreign.
Arena
PREVIEW
Returns the arena scope.
scope()
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Returns the scope associated with this memory segment.
Scope
- Interface in
com.sun.source.tree
Interface for determining locally available program elements, such as
 local variables and imports.
ScopedValue<T>
PREVIEW
- Class in
java.lang
A value that may be safely and efficiently shared to methods without using method
 parameters.
ScopedValue.Carrier
PREVIEW
- Class in
java.lang
A mapping of scoped values, as
keys
, to values.
Scoped values as capabilities
- Search tag in class java.lang.ScopedValue
Section
screenAboutToSleep(ScreenSleepEvent)
- Method in interface java.awt.desktop.
ScreenSleepListener
Called when the system displays have entered power save sleep.
screenAwoke(ScreenSleepEvent)
- Method in interface java.awt.desktop.
ScreenSleepListener
Called when the system displays have awoken from power save sleep.
ScreenSleepEvent
- Class in
java.awt.desktop
Event sent when the displays attached to the system enter and exit power save
 sleep.
ScreenSleepEvent()
- Constructor for class java.awt.desktop.
ScreenSleepEvent
Constructs a
ScreenSleepEvent
.
ScreenSleepListener
- Interface in
java.awt.desktop
Implementors receive notification when the displays attached to the system
 have entered power save sleep.
SCRIPT
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <script>
ScriptContext
- Interface in
javax.script
The interface whose implementing classes are used to connect Script Engines
 with objects, such as scoped Bindings, in hosting applications.
ScriptEngine
- Interface in
javax.script
ScriptEngine
is the fundamental interface whose methods must be
 fully functional in every implementation of this specification.
ScriptEngineFactory
- Interface in
javax.script
ScriptEngineFactory
is used to describe and instantiate
ScriptEngines
.
ScriptEngineManager
- Class in
javax.script
The
ScriptEngineManager
implements a discovery and instantiation
 mechanism for
ScriptEngine
classes and also maintains a
 collection of key/value pairs storing state shared by all engines created
 by the Manager.
ScriptEngineManager()
- Constructor for class javax.script.
ScriptEngineManager
The effect of calling this constructor is the same as calling
ScriptEngineManager(Thread.currentThread().getContextClassLoader())
.
ScriptEngineManager(ClassLoader)
- Constructor for class javax.script.
ScriptEngineManager
This constructor loads the implementations of
ScriptEngineFactory
visible to the given
ClassLoader
using the service provider mechanism.
If loader is
null
, the script engine factories that are
 bundled with the platform are loaded.
ScriptException
- Exception Class in
javax.script
The generic
Exception
class for the Scripting APIs.
ScriptException(Exception)
- Constructor for exception class javax.script.
ScriptException
Creates a
ScriptException
wrapping an
Exception
thrown by an underlying
 interpreter.
ScriptException(String)
- Constructor for exception class javax.script.
ScriptException
Creates a
ScriptException
with a String to be used in its message.
ScriptException(String, String, int)
- Constructor for exception class javax.script.
ScriptException
Creates a
ScriptException
with message, filename and linenumber to
 be used in error messages.
ScriptException(String, String, int, int)
- Constructor for exception class javax.script.
ScriptException
ScriptException
constructor specifying message, filename, line number
 and column number.
SCROLL_ABSOLUTE
- Static variable in class java.awt.
Event
Deprecated.
The user has moved the bubble (thumb) in a scroll bar,
 moving to an "absolute" position, rather than to
 an offset from the last position.
SCROLL_BAR
- Static variable in class javax.accessibility.
AccessibleRole
An object usually used to allow a user to incrementally view a large
 amount of data.
SCROLL_BAR
- Static variable in class javax.swing.plaf.synth.
Region
ScrollBar region.
SCROLL_BAR_THUMB
- Static variable in class javax.swing.plaf.synth.
Region
Thumb of the ScrollBar.
SCROLL_BAR_TRACK
- Static variable in class javax.swing.plaf.synth.
Region
Track of the ScrollBar.
SCROLL_BEGIN
- Static variable in class java.awt.
Event
Deprecated.
The scroll begin event.
SCROLL_DOWN
- Static variable in class javax.swing.plaf.basic.
BasicComboPopup
The direction of scrolling down.
SCROLL_END
- Static variable in class java.awt.
Event
Deprecated.
The scroll end event.
SCROLL_LINE_DOWN
- Static variable in class java.awt.
Event
Deprecated.
The user has activated the
line down
area of a scroll bar.
SCROLL_LINE_UP
- Static variable in class java.awt.
Event
Deprecated.
The user has activated the
line up
area of a scroll bar.
SCROLL_LOCK
- Static variable in class java.awt.
Event
Deprecated.
The Scroll Lock key, a non-ASCII action key.
SCROLL_PAGE_DOWN
- Static variable in class java.awt.
Event
Deprecated.
The user has activated the
page down
area of a scroll bar.
SCROLL_PAGE_UP
- Static variable in class java.awt.
Event
Deprecated.
The user has activated the
page up
area of a scroll bar.
SCROLL_PANE
- Static variable in class javax.accessibility.
AccessibleRole
An object that allows a user to incrementally view a large amount of
 information.
SCROLL_PANE
- Static variable in class javax.swing.plaf.synth.
Region
ScrollPane region.
SCROLL_TAB_LAYOUT
- Static variable in class javax.swing.
JTabbedPane
Tab layout policy for providing a subset of available tabs when all
 the tabs will not fit within a single run.
SCROLL_UP
- Static variable in class javax.swing.plaf.basic.
BasicComboPopup
The direction of scrolling up.
Scrollable
- Interface in
javax.swing
An interface that provides information to a scrolling container
 like JScrollPane.
scrollbar
- Static variable in class java.awt.
SystemColor
The color rendered for the background of scrollbars.
scrollbar
- Variable in class javax.swing.plaf.basic.
BasicScrollBarUI
Scrollbar
scrollBar
- Variable in class javax.swing.plaf.basic.
BasicTreeUI.ComponentHandler
ScrollBar that is being adjusted.
Scrollbar
- Class in
java.awt
The
Scrollbar
class embodies a scroll bar, a
 familiar user-interface object.
Scrollbar()
- Constructor for class java.awt.
Scrollbar
Constructs a new vertical scroll bar.
Scrollbar(int)
- Constructor for class java.awt.
Scrollbar
Constructs a new scroll bar with the specified orientation.
Scrollbar(int, int, int, int, int)
- Constructor for class java.awt.
Scrollbar
Constructs a new scroll bar with the specified orientation,
 initial value, visible amount, and minimum and maximum values.
ScrollBar(int)
- Constructor for class javax.swing.
JScrollPane.ScrollBar
Creates a scrollbar with the specified orientation.
SCROLLBAR
- Static variable in class java.awt.
SystemColor
The array index for the
SystemColor.scrollbar
system color.
Scrollbar.AccessibleAWTScrollBar
- Class in
java.awt
This class implements accessibility support for the
Scrollbar
class.
SCROLLBARS_ALWAYS
- Static variable in class java.awt.
ScrollPane
Specifies that horizontal/vertical scrollbars should always be
 shown regardless of the respective sizes of the scrollpane and child.
SCROLLBARS_AS_NEEDED
- Static variable in class java.awt.
ScrollPane
Specifies that horizontal/vertical scrollbar should be shown
 only when the size of the child exceeds the size of the scrollpane
 in the horizontal/vertical dimension.
SCROLLBARS_BOTH
- Static variable in class java.awt.
TextArea
Create and display both vertical and horizontal scrollbars.
SCROLLBARS_HORIZONTAL_ONLY
- Static variable in class java.awt.
TextArea
Create and display horizontal scrollbar only.
SCROLLBARS_NEVER
- Static variable in class java.awt.
ScrollPane
Specifies that horizontal/vertical scrollbars should never be shown
 regardless of the respective sizes of the scrollpane and child.
SCROLLBARS_NONE
- Static variable in class java.awt.
TextArea
Do not create or display any scrollbars for the text area.
SCROLLBARS_VERTICAL_ONLY
- Static variable in class java.awt.
TextArea
Create and display vertical scrollbar only.
ScrollBarUI
- Class in
javax.swing.plaf
Pluggable look and feel interface for JScrollBar.
ScrollBarUI()
- Constructor for class javax.swing.plaf.
ScrollBarUI
Constructor for subclasses to call.
scrollBarWidth
- Variable in class javax.swing.plaf.basic.
BasicScrollBarUI
Hint as to what width (when vertical) or height (when horizontal)
 should be.
scrollBarWidth
- Variable in class javax.swing.plaf.metal.
MetalScrollBarUI
The width of the scroll bar.
scrollByBlock(int)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Scrolls by block.
scrollByBlock(int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Scrolls by block.
scrollByUnit(int)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Scrolls by unit.
scrollByUnit(int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Scrolls by unit.
scrollDirection
- Variable in class javax.swing.plaf.basic.
BasicComboPopup
The direction of scrolling.
scrollDueToClickInTrack(int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
This function is called when a mousePressed was detected in the track,
 not in the thumb.
scroller
- Variable in class javax.swing.plaf.basic.
BasicComboPopup
This protected field is implementation specific.
SCROLLING
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "scrolling"
scrollListener
- Variable in class javax.swing.plaf.basic.
BasicScrollBarUI
Scroll listener
scrollListener
- Variable in class javax.swing.plaf.basic.
BasicSliderUI
Scroll listener
ScrollListener()
- Constructor for class javax.swing.plaf.basic.
BasicScrollBarUI.ScrollListener
Constructs a
ScrollListener
.
ScrollListener()
- Constructor for class javax.swing.plaf.basic.
BasicSliderUI.ScrollListener
Constructs a
ScrollListener
ScrollListener(int, boolean)
- Constructor for class javax.swing.plaf.basic.
BasicScrollBarUI.ScrollListener
Constructs a
ScrollListener
.
ScrollListener(int, boolean)
- Constructor for class javax.swing.plaf.basic.
BasicSliderUI.ScrollListener
Constructs a
ScrollListener
scrollpane
- Variable in class javax.swing.plaf.basic.
BasicScrollPaneUI
The instance of
JScrollPane
.
ScrollPane
- Class in
java.awt
A container class which implements automatic horizontal and/or
 vertical scrolling for a single child component.
ScrollPane()
- Constructor for class java.awt.
ScrollPane
Create a new scrollpane container with a scrollbar display
 policy of "as needed".
ScrollPane(int)
- Constructor for class java.awt.
ScrollPane
Create a new scrollpane container.
ScrollPane.AccessibleAWTScrollPane
- Class in
java.awt
This class implements accessibility support for the
ScrollPane
class.
ScrollPaneAdjustable
- Class in
java.awt
This class represents the state of a horizontal or vertical
 scrollbar of a
ScrollPane
.
ScrollPaneBorder()
- Constructor for class javax.swing.plaf.metal.
MetalBorders.ScrollPaneBorder
Constructs a
ScrollPaneBorder
.
ScrollPaneConstants
- Interface in
javax.swing
Constants used with the JScrollPane component.
ScrollPaneLayout
- Class in
javax.swing
The layout manager used by
JScrollPane
.
ScrollPaneLayout()
- Constructor for class javax.swing.
ScrollPaneLayout
Constructs a
ScrollPaneLayout
.
ScrollPaneLayout.UIResource
- Class in
javax.swing
The UI resource version of
ScrollPaneLayout
.
ScrollPaneUI
- Class in
javax.swing.plaf
Pluggable look and feel interface for JScrollPane.
ScrollPaneUI()
- Constructor for class javax.swing.plaf.
ScrollPaneUI
Constructor for subclasses to call.
scrollPathToVisible(TreePath)
- Method in class javax.swing.
JTree
Makes sure all the path components in path are expanded (except
 for the last path component) and scrolls so that the
 node identified by the path is displayed.
scrollRectToVisible(Rectangle)
- Method in class javax.swing.
JComponent
Forwards the
scrollRectToVisible()
message to the
JComponent
's parent.
scrollRectToVisible(Rectangle)
- Method in class javax.swing.
JTextField
Scrolls the field left or right.
scrollRectToVisible(Rectangle)
- Method in class javax.swing.
JViewport
Scrolls the view so that
Rectangle
within the view becomes visible.
scrollRowToVisible(int)
- Method in class javax.swing.
JTree
Scrolls the item identified by row until it is displayed.
SCROLLS_ON_EXPAND_PROPERTY
- Static variable in class javax.swing.
JTree
Bound property name for
scrollsOnExpand
.
scrollsOnExpand
- Variable in class javax.swing.
JTree
If true, when a node is expanded, as many of the descendants are
 scrolled to be visible.
scrollTimer
- Variable in class javax.swing.plaf.basic.
BasicScrollBarUI
Scroll timer
scrollTimer
- Variable in class javax.swing.plaf.basic.
BasicSliderUI
Scroll timer
scrollToReference(String)
- Method in class javax.swing.
JEditorPane
Scrolls the view to the given reference location
 (that is, the value returned by the
URL.getRef
method for the URL being displayed).
scrollUnderway
- Variable in class javax.swing.
JViewport
The
scrollUnderway
flag is used for components like
JList
.
SCTP_DISABLE_FRAGMENTS
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
Enables or disables message fragmentation.
SCTP_EXPLICIT_COMPLETE
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
Enables or disables explicit message completion.
SCTP_FRAGMENT_INTERLEAVE
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
Fragmented interleave controls how the presentation of messages occur
 for the message receiver.
SCTP_INIT_MAXSTREAMS
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
The maximum number of streams requested by the local endpoint during
 association initialization.
SCTP_NODELAY
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
Enables or disables a Nagle-like algorithm.
SCTP_PRIMARY_ADDR
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
Requests that the local SCTP stack use the given peer address as
 the association primary.
SCTP_SET_PEER_PRIMARY_ADDR
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
Requests that the peer mark the enclosed address as the association
 primary.
SctpChannel
- Class in
com.sun.nio.sctp
A selectable channel for message-oriented connected SCTP sockets.
SctpChannel(SelectorProvider)
- Constructor for class com.sun.nio.sctp.
SctpChannel
Initializes a new instance of this class.
SctpMultiChannel
- Class in
com.sun.nio.sctp
A selectable channel for message-oriented SCTP sockets.
SctpMultiChannel(SelectorProvider)
- Constructor for class com.sun.nio.sctp.
SctpMultiChannel
Initializes a new instance of this class.
SctpServerChannel
- Class in
com.sun.nio.sctp
A selectable channel for message-oriented listening SCTP sockets.
SctpServerChannel(SelectorProvider)
- Constructor for class com.sun.nio.sctp.
SctpServerChannel
Initializes a new instance of this class.
SctpSocketOption<T>
- Interface in
com.sun.nio.sctp
A socket option associated with an SCTP channel.
SctpStandardSocketOptions
- Class in
com.sun.nio.sctp
SCTP channels supports the socket options defined by this class
 (as well as those listed in the particular channel class) and may support
 additional Implementation specific socket options.
SctpStandardSocketOptions.InitMaxStreams
- Class in
com.sun.nio.sctp
This class is used to set the maximum number of inbound/outbound streams
 used by the local endpoint during association initialization.
SDATA
- Static variable in interface javax.swing.text.html.parser.
DTDConstants
The DTD constant corresponds to SDATA
SE_RESIZE_CURSOR
- Static variable in class java.awt.
Cursor
The south-east-resize cursor type.
SE_RESIZE_CURSOR
- Static variable in class java.awt.
Frame
Deprecated.
replaced by
Cursor.SE_RESIZE_CURSOR
.
SEALED
- Enum constant in enum class javax.lang.model.element.
Modifier
The modifier
sealed
SEALED
- Static variable in class java.util.jar.
Attributes.Name
Name
object for
Sealed
manifest attribute
 used for sealing.
SealedObject
- Class in
javax.crypto
This class enables a programmer to create an object and protect its
 confidentiality with a cryptographic algorithm.
SealedObject(Serializable, Cipher)
- Constructor for class javax.crypto.
SealedObject
Constructs a
SealedObject
from any
Serializable
object.
SealedObject(SealedObject)
- Constructor for class javax.crypto.
SealedObject
Constructs a
SealedObject
object from the passed-in
SealedObject
.
search(long, BiFunction<? super K, ? super V, ? extends U>)
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns a non-null result from applying the given search
 function on each (key, value), or null if none.
search(Object)
- Method in class java.util.
Stack
Returns the 1-based position where an object is on this stack.
search(String, String, Object[], SearchControls)
- Method in interface javax.naming.directory.
DirContext
Searches in the named context or object for entries that satisfy the
 given search filter.
search(String, String, Object[], SearchControls)
- Method in class javax.naming.directory.
InitialDirContext
search(String, String, SearchControls)
- Method in interface javax.naming.directory.
DirContext
Searches in the named context or object for entries that satisfy the
 given search filter.
search(String, String, SearchControls)
- Method in class javax.naming.directory.
InitialDirContext
search(String, Attributes)
- Method in interface javax.naming.directory.
DirContext
Searches in a single context for objects that contain a
 specified set of attributes.
search(String, Attributes)
- Method in class javax.naming.directory.
InitialDirContext
search(String, Attributes, String[])
- Method in interface javax.naming.directory.
DirContext
Searches in a single context for objects that contain a
 specified set of attributes, and retrieves selected attributes.
search(String, Attributes, String[])
- Method in class javax.naming.directory.
InitialDirContext
search(Name, String, Object[], SearchControls)
- Method in interface javax.naming.directory.
DirContext
Searches in the named context or object for entries that satisfy the
 given search filter.
search(Name, String, Object[], SearchControls)
- Method in class javax.naming.directory.
InitialDirContext
search(Name, String, SearchControls)
- Method in interface javax.naming.directory.
DirContext
Searches in the named context or object for entries that satisfy the
 given search filter.
search(Name, String, SearchControls)
- Method in class javax.naming.directory.
InitialDirContext
search(Name, Attributes)
- Method in interface javax.naming.directory.
DirContext
Searches in a single context for objects that contain a
 specified set of attributes.
search(Name, Attributes)
- Method in class javax.naming.directory.
InitialDirContext
search(Name, Attributes, String[])
- Method in interface javax.naming.directory.
DirContext
Searches in a single context for objects that contain a
 specified set of attributes, and retrieves selected attributes.
search(Name, Attributes, String[])
- Method in class javax.naming.directory.
InitialDirContext
Search Algorithm for Properties
- Search tag in interface javax.naming.Context
Section
SearchControls
- Class in
javax.naming.directory
This class encapsulates
 factors that determine scope of search and what gets returned
 as a result of the search.
SearchControls()
- Constructor for class javax.naming.directory.
SearchControls
Constructs a search constraints using defaults.
SearchControls(int, long, int, String[], boolean, boolean)
- Constructor for class javax.naming.directory.
SearchControls
Constructs a search constraints using arguments.
searchEntries(long, Function<Map.Entry<K, V>, ? extends U>)
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns a non-null result from applying the given search
 function on each entry, or null if none.
Searches
- Search tag in package javax.naming.directory
Section
searchKeys(long, Function<? super K, ? extends U>)
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns a non-null result from applying the given search
 function on each key, or null if none.
Search Order
- Search tag in interface javax.xml.catalog.CatalogResolver
Section
SearchResult
- Class in
javax.naming.directory
This class represents an item in the NamingEnumeration returned as a
 result of the DirContext.search() methods.
SearchResult(String, Object, Attributes)
- Constructor for class javax.naming.directory.
SearchResult
Constructs a search result using the result's name, its bound object, and
 its attributes.
SearchResult(String, Object, Attributes, boolean)
- Constructor for class javax.naming.directory.
SearchResult
Constructs a search result using the result's name, its bound object, and
 its attributes, and whether the name is relative.
SearchResult(String, String, Object, Attributes)
- Constructor for class javax.naming.directory.
SearchResult
Constructs a search result using the result's name, its class name,
 its bound object, and its attributes.
SearchResult(String, String, Object, Attributes, boolean)
- Constructor for class javax.naming.directory.
SearchResult
Constructs a search result using the result's name, its class name,
 its bound object, its attributes, and whether the name is relative.
searchValues(long, Function<? super V, ? extends U>)
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns a non-null result from applying the given search
 function on each value, or null if none.
SECOND
- Static variable in class java.text.
DateFormat.Field
Constant identifying the second field.
SECOND
- Static variable in class java.util.
Calendar
Field number for
get
and
set
indicating the
 second within the minute.
SECOND_FIELD
- Static variable in class java.text.
DateFormat
Useful constant for SECOND field alignment.
SECOND_OF_DAY
- Enum constant in enum class java.time.temporal.
ChronoField
The second-of-day.
SECOND_OF_MINUTE
- Enum constant in enum class java.time.temporal.
ChronoField
The second-of-minute.
SECONDARY
- Static variable in class java.text.
Collator
Collator strength value.
Secondary Colors
- Search tag in package javax.swing.plaf.nimbus
Section
SecondaryLoop
- Interface in
java.awt
A helper interface to run the nested event loop.
secondaryOrder(int)
- Static method in class java.text.
CollationElementIterator
Return the secondary component of a collation element.
SECONDS
- Enum constant in enum class java.time.temporal.
ChronoUnit
Unit that represents the concept of a second.
SECONDS
- Enum constant in enum class java.util.concurrent.
TimeUnit
Time unit representing one second.
SECONDS
- Static variable in class javax.xml.datatype.
DatatypeConstants
A constant that represents the seconds field.
SECONDS
- Static variable in annotation interface jdk.jfr.
Timespan
Unit for seconds.
SECRET
- Enum constant in enum class java.security.
KeyRep.Type
Type for secret keys.
SECRET_KEY
- Static variable in class javax.crypto.
Cipher
Constant used to indicate the to-be-unwrapped key is a "secret key".
SecretKey
- Interface in
javax.crypto
A secret (symmetric) key.
SecretKeyEntry(SecretKey)
- Constructor for class java.security.
KeyStore.SecretKeyEntry
Constructs a
SecretKeyEntry
with a
SecretKey
.
SecretKeyEntry(SecretKey, Set<KeyStore.Entry.Attribute>)
- Constructor for class java.security.
KeyStore.SecretKeyEntry
Constructs a
SecretKeyEntry
with a
SecretKey
and
 associated entry attributes.
SecretKeyFactory
- Class in
javax.crypto
This class represents a factory for secret keys.
SecretKeyFactory(SecretKeyFactorySpi, Provider, String)
- Constructor for class javax.crypto.
SecretKeyFactory
Creates a
SecretKeyFactory
object.
SecretKeyFactorySpi
- Class in
javax.crypto
This class defines the
Service Provider Interface
(
SPI
)
 for the
SecretKeyFactory
class.
SecretKeyFactorySpi()
- Constructor for class javax.crypto.
SecretKeyFactorySpi
Constructor for subclasses to call.
SecretKeySpec
- Class in
javax.crypto.spec
This class specifies a secret key in a provider-independent fashion.
SecretKeySpec(byte[], int, int, String)
- Constructor for class javax.crypto.spec.
SecretKeySpec
Constructs a secret key from the given byte array, using the first
len
bytes of
key
, starting at
offset
inclusive.
SecretKeySpec(byte[], String)
- Constructor for class javax.crypto.spec.
SecretKeySpec
Constructs a secret key from the given byte array.
secretSize()
- Method in class javax.crypto.
KEM.Decapsulator
Returns the size of the shared secret.
secretSize()
- Method in class javax.crypto.
KEM.Encapsulator
Returns the size of the shared secret.
SectionElement()
- Constructor for class javax.swing.text.
DefaultStyledDocument.SectionElement
Creates a new SectionElement.
SectionElementName
- Static variable in class javax.swing.text.
AbstractDocument
Name of elements used to hold sections (lines/paragraphs).
SECURE_RANDOM
- Enum constant in enum class java.security.
CryptoPrimitive
Cryptographic random number generator
SecureCacheResponse
- Class in
java.net
Represents a cache response originally retrieved through secure
 means, such as TLS.
SecureCacheResponse()
- Constructor for class java.net.
SecureCacheResponse
Constructor for subclasses to call.
SecureClassLoader
- Class in
java.security
This class extends
ClassLoader
with additional support for defining
 classes with an associated code source and permissions which are
 retrieved by the system policy by default.
SecureClassLoader()
- Constructor for class java.security.
SecureClassLoader
Creates a new
SecureClassLoader
using the default parent class
 loader for delegation.
SecureClassLoader(ClassLoader)
- Constructor for class java.security.
SecureClassLoader
Creates a new
SecureClassLoader
using the specified parent
 class loader for delegation.
SecureClassLoader(String, ClassLoader)
- Constructor for class java.security.
SecureClassLoader
Creates a new
SecureClassLoader
of the specified name and
 using the specified parent class loader for delegation.
SecureDirectoryStream<T>
- Interface in
java.nio.file
A
DirectoryStream
that defines operations on files that are located
 relative to an open directory.
SecureLookupSupplier
- Class in
jdk.dynalink
Provides security-checked access to a
MethodHandles.Lookup
object.
SecureLookupSupplier(MethodHandles.Lookup)
- Constructor for class jdk.dynalink.
SecureLookupSupplier
Creates a new secure lookup supplier, securing the passed lookup.
SecureRandom
- Class in
java.security
This class provides a cryptographically strong random number
 generator (RNG).
SecureRandom()
- Constructor for class java.security.
SecureRandom
Constructs a secure random number generator (RNG) implementing the
 default random number algorithm.
SecureRandom(byte[])
- Constructor for class java.security.
SecureRandom
Constructs a secure random number generator (RNG) implementing the
 default random number algorithm.
SecureRandom(SecureRandomSpi, Provider)
- Constructor for class java.security.
SecureRandom
Creates a
SecureRandom
object.
SecureRandomParameters
- Interface in
java.security
A marker interface for parameters used in various
SecureRandom
methods.
SecureRandomSpi
- Class in
java.security
This class defines the
Service Provider Interface
(
SPI
)
 for the
SecureRandom
class.
SecureRandomSpi()
- Constructor for class java.security.
SecureRandomSpi
Constructor without a parameter.
SecureRandomSpi(SecureRandomParameters)
- Constructor for class java.security.
SecureRandomSpi
Constructor with a parameter.
security()
- Method in class java.lang.
Runtime.Version
Deprecated.
As of Java SE 10, the third element of a version
 number is not the security level but the update-release counter,
 incremented for every update release.  Use the
Runtime.Version.update()
method in preference to this method.  For compatibility, this method
 returns the value of the
update
element, or
 zero if it is absent.
Security
- Search tag in class java.util.ServiceLoader
Section
Security
- Search tag in package java.awt
Section
Security
- Class in
java.security
This class centralizes all security properties and common security
 methods.
SECURITY_AUTHENTICATION
- Static variable in interface javax.naming.
Context
Constant that holds the name of the environment property for
 specifying the security level to use.
SECURITY_CREDENTIALS
- Static variable in interface javax.naming.
Context
Constant that holds the name of the environment property for
 specifying the credentials of the principal for authenticating
 the caller to the service.
SECURITY_PRINCIPAL
- Static variable in interface javax.naming.
Context
Constant that holds the name of the environment property for
 specifying the identity of the principal for authenticating
 the caller to the service.
SECURITY_PROTOCOL
- Static variable in interface javax.naming.
Context
Constant that holds the name of the environment property for
 specifying the security protocol to use.
SecurityException
- Exception Class in
java.lang
Thrown by the security manager to indicate a security violation.
SecurityException()
- Constructor for exception class java.lang.
SecurityException
Constructs a
SecurityException
with no detail message.
SecurityException(String)
- Constructor for exception class java.lang.
SecurityException
Constructs a
SecurityException
with the specified
 detail message.
SecurityException(String, Throwable)
- Constructor for exception class java.lang.
SecurityException
Creates a
SecurityException
with the specified
 detail message and cause.
SecurityException(Throwable)
- Constructor for exception class java.lang.
SecurityException
Creates a
SecurityException
with the specified cause
 and a detail message of
(cause==null ? null : cause.toString())
(which typically contains the class and detail message of
cause
).
SecurityManager
- Class in
java.lang
Deprecated, for removal: This API element is subject to removal in a future version.
The Security Manager is deprecated and subject to removal in a
       future release. There is no replacement for the Security Manager.
       See
JEP 411
for
       discussion and alternatives.
SecurityManager()
- Constructor for class java.lang.
SecurityManager
Deprecated.
Constructs a new
SecurityManager
.
Security manager interactions
- Search tag in class java.lang.invoke.MethodHandles.Lookup
Section
SecurityPermission
- Class in
java.security
This class is for security permissions.
SecurityPermission(String)
- Constructor for class java.security.
SecurityPermission
Creates a new
SecurityPermission
with the specified name.
SecurityPermission(String, String)
- Constructor for class java.security.
SecurityPermission
Creates a new
SecurityPermission
object with the specified name.
SEE
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SeeTree
representing an
@see
tag.
seek(long)
- Method in class java.io.
RandomAccessFile
Sets the file-pointer offset, measured from the beginning of this
 file, at which the next read or write occurs.
seek(long)
- Method in class javax.imageio.stream.
FileCacheImageOutputStream
Sets the current stream position and resets the bit offset to
 0.
seek(long)
- Method in class javax.imageio.stream.
FileImageOutputStream
Sets the current stream position and resets the bit offset to
 0.
seek(long)
- Method in interface javax.imageio.stream.
ImageInputStream
Sets the current stream position to the desired location.
seek(long)
- Method in class javax.imageio.stream.
ImageInputStreamImpl
SeekableByteChannel
- Interface in
java.nio.channels
A byte channel that maintains a current
position
and allows the
 position to be changed.
seekForwardOnly
- Variable in class javax.imageio.
ImageReader
true
if the current input source has been marked
 as allowing only forward seeking by
setInput
.
SeeTree
- Interface in
com.sun.source.doctree
A tree node for an
@see
block tag.
SEG_CLOSE
- Static variable in interface java.awt.geom.
PathIterator
The segment type constant that specifies that
 the preceding subpath should be closed by appending a line segment
 back to the point corresponding to the most recent SEG_MOVETO.
SEG_CUBICTO
- Static variable in interface java.awt.geom.
PathIterator
The segment type constant for the set of 3 points that specify
 a cubic parametric curve to be drawn from the most recently
 specified point.
SEG_LINETO
- Static variable in interface java.awt.geom.
PathIterator
The segment type constant for a point that specifies the
 end point of a line to be drawn from the most recently
 specified point.
SEG_MOVETO
- Static variable in interface java.awt.geom.
PathIterator
The segment type constant for a point that specifies the
 starting location for a new subpath.
SEG_QUADTO
- Static variable in interface java.awt.geom.
PathIterator
The segment type constant for the pair of points that specify
 a quadratic parametric curve to be drawn from the most recently
 specified point.
Segment
- Class in
javax.swing.text
A segment of a character array representing a fragment
 of text.
Segment()
- Constructor for class javax.swing.text.
Segment
Creates a new segment.
Segment(char[], int, int)
- Constructor for class javax.swing.text.
Segment
Creates a new segment referring to an existing array.
SegmentAllocator
PREVIEW
- Interface in
java.lang.foreign
An object that may be used to allocate
memory segments
PREVIEW
.
segmentOffset(MemorySegment)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Returns the offset, in bytes, of the provided segment, relative to this
 segment.
select()
- Method in class java.nio.channels.
Selector
Selects a set of keys whose corresponding channels are ready for I/O
 operations.
select()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Select the contents of the text area.
select()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Select the contents of the
TEXTAREA
.
select(int)
- Method in class java.awt.
Choice
Sets the selected item in this
Choice
menu to be the
 item at the specified position.
select(int)
- Method in class java.awt.
List
Selects the item at the specified index in the scrolling list.
select(int, int)
- Method in class java.awt.
TextComponent
Selects the text between the specified start and end positions.
select(int, int)
- Method in class javax.swing.text.
JTextComponent
Selects the text between the specified start and end positions.
select(long)
- Method in class java.nio.channels.
Selector
Selects a set of keys whose corresponding channels are ready for I/O
 operations.
select(MemoryLayout.PathElement...)
- Method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Returns the layout selected from the provided path, where the initial layout in the path is this layout.
select(String)
- Method in class java.awt.
Choice
Sets the selected item in this
Choice
menu
 to be the item whose name is equal to the specified string.
select(URI)
- Method in class java.net.
ProxySelector
Selects all the applicable proxies based on the protocol to
 access the resource with and a destination address to access
 the resource at.
select(Consumer<SelectionKey>)
- Method in class java.nio.channels.
Selector
Selects and performs an action on the keys whose corresponding channels
 are ready for I/O operations.
select(Consumer<SelectionKey>, long)
- Method in class java.nio.channels.
Selector
Selects and performs an action on the keys whose corresponding channels
 are ready for I/O operations.
select(KeyInfo, KeySelector.Purpose, AlgorithmMethod, XMLCryptoContext)
- Method in class javax.xml.crypto.
KeySelector
Attempts to find a key that satisfies the specified constraints.
SELECT
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <select>
SELECT_LIST_ONLY
- Enum constant in enum class java.sql.
PseudoColumnUsage
The pseudo/hidden column may only be used in a SELECT list.
SELECTABLE
- Static variable in class javax.accessibility.
AccessibleState
Indicates this object is the child of an object that allows its children
 to be selected, and that this child is one of those children that can be
 selected.
SelectableChannel
- Class in
java.nio.channels
A channel that can be multiplexed via a
Selector
.
SelectableChannel()
- Constructor for class java.nio.channels.
SelectableChannel
Initializes a new instance of this class.
selectAdjacentRunTab(int, int, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Selects an adjacent run of tabs.
selectAll()
- Method in class java.awt.
TextComponent
Selects all the text in this text component.
selectAll()
- Method in interface javax.swing.
ComboBoxEditor
Ask the editor to start editing and to select everything
selectAll()
- Method in class javax.swing.
JTable
Selects all rows, columns, and cells in the table.
selectAll()
- Method in class javax.swing.plaf.basic.
BasicComboBoxEditor
selectAll()
- Method in class javax.swing.text.
JTextComponent
Selects all the text in the
TextComponent
.
selectAllAccessibleSelection()
- Method in class java.awt.
List.AccessibleAWTList
Causes every selected item in the object to be selected
 if the object supports multiple selections.
selectAllAccessibleSelection()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Causes every child of the object to be selected
 if the object supports multiple selections.
selectAllAccessibleSelection()
- Method in interface javax.accessibility.
AccessibleSelection
Causes every child of the object to be selected if the object supports
 multiple selections.
selectAllAccessibleSelection()
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Causes every child of the object to be selected
 if the object supports multiple selections.
selectAllAccessibleSelection()
- Method in class javax.swing.
JList.AccessibleJList
Causes every selected item in the object to be selected
 if the object supports multiple selections.
selectAllAccessibleSelection()
- Method in class javax.swing.
JMenu.AccessibleJMenu
Normally causes every selected item in the object to be selected
 if the object supports multiple selections.
selectAllAccessibleSelection()
- Method in class javax.swing.
JMenuBar.AccessibleJMenuBar
Normally causes every selected item in the object to be selected
 if the object supports multiple selections.
selectAllAccessibleSelection()
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
selectAllAccessibleSelection()
- Method in class javax.swing.
JTable.AccessibleJTable
Causes every child of the object to be selected, but only
 if the
JTable
supports multiple selections,
 and if individual cell selection is enabled.
selectAllAccessibleSelection()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Causes every selected item in the object to be selected
 if the object supports multiple selections.
selectAllAccessibleSelection()
- Method in class javax.swing.
JTree.AccessibleJTree
Causes every selected item in the object to be selected
 if the object supports multiple selections.
selectAllAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for selecting the entire document
selectBestTextFlavor(DataFlavor[])
- Static method in class java.awt.datatransfer.
DataFlavor
Selects the best text
DataFlavor
from an array of
DataFlavor
s.
selectColor
- Variable in class javax.swing.plaf.metal.
MetalButtonUI
The color of the selected button.
selectColor
- Variable in class javax.swing.plaf.metal.
MetalRadioButtonUI
The color of the selected radio button.
selectColor
- Variable in class javax.swing.plaf.metal.
MetalTabbedPaneUI
The color of the selected pane.
selectColor
- Variable in class javax.swing.plaf.metal.
MetalToggleButtonUI
The color of a selected button.
selectContent(AttributeSet)
- Method in class javax.swing.text.html.
HTMLWriter
Writes out the content of the SELECT form element.
selected
- Variable in class javax.swing.tree.
DefaultTreeCellRenderer
Is the value currently selected.
SELECTED
- Static variable in class java.awt.event.
ItemEvent
This state-change value indicates that an item was selected.
SELECTED
- Static variable in class javax.accessibility.
AccessibleState
Indicates this object is the child of an object that allows its children
 to be selected, and that this child is one of those children that has
 been selected.
SELECTED
- Static variable in class javax.swing.
DefaultButtonModel
Identifies the "selected" bit in the bitmask, which
 indicates that the button has been selected.
SELECTED
- Static variable in interface javax.swing.plaf.synth.
SynthConstants
Indicates the region is selected.
SELECTED
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "selected"
SELECTED_CONVERTED_TEXT_HIGHLIGHT
- Static variable in class java.awt.im.
InputMethodHighlight
Constant for the default highlight for selected converted text.
SELECTED_FILE_CHANGED_PROPERTY
- Static variable in class javax.swing.
JFileChooser
Identifies change in user's single-file selection.
SELECTED_FILES_CHANGED_PROPERTY
- Static variable in class javax.swing.
JFileChooser
Identifies change in user's multiple-file selection.
SELECTED_ICON_CHANGED_PROPERTY
- Static variable in class javax.swing.
AbstractButton
Identifies a change to the icon used when the button has
 been selected.
SELECTED_KEY
- Static variable in interface javax.swing.
Action
The key used for storing a
Boolean
that corresponds
 to the selected state.
SELECTED_RAW_TEXT_HIGHLIGHT
- Static variable in class java.awt.im.
InputMethodHighlight
Constant for the default highlight for selected raw text.
selectedItemChanged()
- Method in class javax.swing.
JComboBox
This protected method is implementation specific.
selectedItemReminder
- Variable in class javax.swing.
JComboBox
This protected field is implementation specific.
selectedKeys()
- Method in class java.nio.channels.
Selector
Returns this selector's selected-key set.
selectedRun
- Variable in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Selected run
selectedTabPadInsets
- Variable in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Selected tab insets
selectedTextColor
- Variable in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
The color of a selected text.
selectedTitleColor
- Variable in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
The color of a selected title.
selectFrame(boolean)
- Method in class javax.swing.
JDesktopPane
Selects the next
JInternalFrame
in this desktop pane.
selectFrom(Vector<E>)
- Method in class jdk.incubator.vector.
Vector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector
v
.
selectFrom(Vector<E>, VectorMask<E>)
- Method in class jdk.incubator.vector.
Vector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
selectFrom(Vector<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector
v
.
selectFrom(Vector<Byte>, VectorMask<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
selectFrom(Vector<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector
v
.
selectFrom(Vector<Double>, VectorMask<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
selectFrom(Vector<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector
v
.
selectFrom(Vector<Float>, VectorMask<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
selectFrom(Vector<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector
v
.
selectFrom(Vector<Integer>, VectorMask<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
selectFrom(Vector<Long>)
- Method in class jdk.incubator.vector.
LongVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector
v
.
selectFrom(Vector<Long>, VectorMask<Long>)
- Method in class jdk.incubator.vector.
LongVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
selectFrom(Vector<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector
v
.
selectFrom(Vector<Short>, VectorMask<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Using index values stored in the lanes of this vector,
 assemble values stored in second vector, under the control
 of a mask.
selectHighlight
- Variable in class javax.swing.plaf.metal.
MetalTabbedPaneUI
The color of the highlight.
selectInitialValue()
- Method in class javax.swing.
JOptionPane
Requests that the initial value be selected, which will set
 focus to the initial value.
selectInitialValue(JOptionPane)
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
If inputComponent is non-null, the focus is requested on that,
 otherwise request focus on the default value
selectInitialValue(JOptionPane)
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Invokes the
selectInitialValue
method on each UI handled by this object.
selectInitialValue(JOptionPane)
- Method in class javax.swing.plaf.
OptionPaneUI
Requests the component representing the default value to have
 focus.
selectInputMethod(Locale)
- Method in class java.awt.im.
InputContext
Attempts to select an input method or keyboard layout that
 supports the given locale, and returns a value indicating whether such
 an input method or keyboard layout has been successfully selected.
selection
- Variable in class javax.swing.tree.
DefaultTreeSelectionModel
Paths that are currently selected.
Selection
- Search tag in class java.nio.channels.Selector
Section
SELECTION
- Static variable in class java.awt.
JobAttributes.DefaultSelectionType
The
DefaultSelectionType
instance to use for
 specifying that the current selection should be printed.
SELECTION_MODE_PROPERTY
- Static variable in class javax.swing.tree.
DefaultTreeSelectionModel
Property name for selectionMode.
SELECTION_MODEL_PROPERTY
- Static variable in class javax.swing.
JColorChooser
The selection model property name.
SELECTION_MODEL_PROPERTY
- Static variable in class javax.swing.
JTree
Bound property name for selectionModel.
SELECTION_VALUES_PROPERTY
- Static variable in class javax.swing.
JOptionPane
Bound property name for
selectionValues
.
selectionBackground
- Variable in class javax.swing.
JTable
The background color of selected cells.
selectionBackground
- Variable in class javax.swing.plaf.basic.
BasicMenuItemUI
The color of the selection background.
selectionBackwardAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for extending the selection
 by moving the caret logically backward one position.
selectionBeginAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of the document.
selectionBeginLineAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of a line, extending the selection.
selectionBeginParagraphAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of a paragraph, extending the selection.
selectionBeginWordAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of a word, extending the selection.
selectionDownAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for moving the caret
 logically downward one position, extending the selection.
selectionEndAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for moving the caret
 to the end of the document.
selectionEndLineAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the end of a line, extending the selection.
selectionEndParagraphAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the end of a paragraph, extending the selection.
selectionEndWordAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for moving the caret
 to the end of a word, extending the selection.
selectionForeground
- Variable in class javax.swing.
JTable
The foreground color of selected cells.
selectionForeground
- Variable in class javax.swing.plaf.basic.
BasicMenuItemUI
The color of the selection foreground.
selectionForKey(char, ComboBoxModel<?>)
- Method in interface javax.swing.
JComboBox.KeySelectionManager
Given
aKey
and the model, returns the row
  that should become selected.
selectionForwardAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for extending the selection
 by moving the caret logically forward one position.
selectionHtmlFlavor
- Static variable in class java.awt.datatransfer.
DataFlavor
Represents a piece of an HTML markup.
SelectionKey
- Class in
java.nio.channels
A token representing the registration of a
SelectableChannel
with a
Selector
.
SelectionKey()
- Constructor for class java.nio.channels.
SelectionKey
Constructs an instance of this class.
SelectionListener()
- Constructor for class javax.swing.plaf.basic.
BasicFileChooserUI.SelectionListener
Constructs a
SelectionListener
.
selectionMode
- Variable in class javax.swing.tree.
DefaultTreeSelectionModel
Mode for the selection, will be either SINGLE_TREE_SELECTION,
 CONTIGUOUS_TREE_SELECTION or DISCONTIGUOUS_TREE_SELECTION.
selectionModel
- Variable in class javax.swing.
JTable
The
ListSelectionModel
of the table, used to keep track of row selections.
selectionModel
- Variable in class javax.swing.
JTree
Models the set of selected nodes in this tree.
selectionModel
- Variable in class javax.swing.table.
DefaultTableColumnModel
Model for keeping track of column selections
selectionModelChanged
- Static variable in class javax.swing.plaf.basic.
BasicListUI
The bit relates to selection model changed property.
SelectionModelPropertyChangeHandler()
- Constructor for class javax.swing.plaf.basic.
BasicTreeUI.SelectionModelPropertyChangeHandler
Constructs a
SelectionModelPropertyChangeHandler
.
selectionNextWordAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the selection to the
 beginning of the next word, extending the selection.
Selection operations that add to the selected-key set
- Search tag in class java.nio.channels.Selector
Section
Selection operations that perform an action on selected keys
- Search tag in class java.nio.channels.Selector
Section
selectionPreviousWordAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the selection to the
 beginning of the previous word, extending the selection.
selectionRedirector
- Variable in class javax.swing.
JTree
Creates a new event and passed it off the
selectionListeners
.
selectionUpAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for moving the caret
 logically upward one position, extending the selection.
selectionValues
- Variable in class javax.swing.
JOptionPane
Array of values the user can choose from.
selectLineAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for selecting a line around the caret.
selectNextIndex()
- Method in class javax.swing.plaf.basic.
BasicListUI
Selected the previous row and force it to be visible.
selectNextPossibleValue()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Selects the next item in the list.
selectNextTab(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Selects the next tab.
selectNextTabInRun(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Selects the next tab in the run.
selectNode(Node)
- Method in interface org.w3c.dom.ranges.
Range
Select a node and its contents
selectNodeContents(Node)
- Method in interface org.w3c.dom.ranges.
Range
Select the contents within a node
selectNow()
- Method in class java.nio.channels.
Selector
Selects a set of keys whose corresponding channels are ready for I/O
 operations.
selectNow(Consumer<SelectionKey>)
- Method in class java.nio.channels.
Selector
Selects and performs an action on the keys whose corresponding channels
 are ready for I/O operations.
selector()
- Method in class java.nio.channels.
SelectionKey
Returns the selector for which this key was created.
Selector
- Class in
java.nio.channels
A multiplexor of
SelectableChannel
objects.
Selector()
- Constructor for class java.nio.channels.
Selector
Initializes a new instance of this class.
SelectorProvider
- Class in
java.nio.channels.spi
Service-provider class for selectors and selectable channels.
SelectorProvider()
- Constructor for class java.nio.channels.spi.
SelectorProvider
Initializes a new instance of this class.
selectParagraphAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for selecting a paragraph around the caret.
selectPathForEvent(TreePath, MouseEvent)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Messaged to update the selection based on a
MouseEvent
over a
 particular row.
selectPreviousIndex()
- Method in class javax.swing.plaf.basic.
BasicListUI
Selected the previous row and force it to be visible.
selectPreviousPossibleValue()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Selects the previous item in the list.
selectPreviousTab(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Selects the previous tab.
selectPreviousTabInRun(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Selects the previous tab in the run.
selectText(int, int)
- Method in interface javax.accessibility.
AccessibleEditableText
Selects the text between two indices.
selectText(int, int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Selects the text between two indices.
selectText(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Selects the text between two indices.
selectWithKeyChar(char)
- Method in class javax.swing.
JComboBox
Selects the list item that corresponds to the specified keyboard
 character and returns true, if there is an item corresponding
 to that character.
selectWordAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for selecting a word around the caret.
Semaphore
- Class in
java.util.concurrent
A counting semaphore.
Semaphore(int)
- Constructor for class java.util.concurrent.
Semaphore
Creates a
Semaphore
with the given number of
 permits and nonfair fairness setting.
Semaphore(int, boolean)
- Constructor for class java.util.concurrent.
Semaphore
Creates a
Semaphore
with the given number of
 permits and the given fairness setting.
send(DatagramPacket)
- Method in class java.net.
DatagramSocket
Sends a datagram packet from this socket.
send(DatagramPacket)
- Method in class java.net.
DatagramSocketImpl
Sends a datagram packet.
send(DatagramPacket, byte)
- Method in class java.net.
MulticastSocket
Deprecated.
Use the following code or its equivalent instead:
......
  int ttl = mcastSocket.getOption(StandardSocketOptions.IP_MULTICAST_TTL);
  mcastSocket.setOption(StandardSocketOptions.IP_MULTICAST_TTL, newttl);
  mcastSocket.send(p);
  mcastSocket.setOption(StandardSocketOptions.IP_MULTICAST_TTL, ttl);
  ......
send(HttpRequest, HttpResponse.BodyHandler<T>)
- Method in class java.net.http.
HttpClient
Sends the given request using this client, blocking if necessary to get
 the response.
send(ByteBuffer, MessageInfo)
- Method in class com.sun.nio.sctp.
SctpChannel
Sends a message via this channel.
send(ByteBuffer, MessageInfo)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Sends a message via this channel.
send(ByteBuffer, SocketAddress)
- Method in class java.nio.channels.
DatagramChannel
Sends a datagram via this channel.
send(MidiMessage, long)
- Method in interface javax.sound.midi.
Receiver
Sends a MIDI message and time-stamp to this receiver.
sendAsync(HttpRequest, HttpResponse.BodyHandler<T>)
- Method in class java.net.http.
HttpClient
Sends the given request asynchronously using this client with the given
 response body handler.
sendAsync(HttpRequest, HttpResponse.BodyHandler<T>, HttpResponse.PushPromiseHandler<T>)
- Method in class java.net.http.
HttpClient
Sends the given request asynchronously using this client with the given
 response body handler and push promise handler.
sendAttributeChangeNotification(AttributeChangeNotification)
- Method in interface javax.management.modelmbean.
ModelMBeanNotificationBroadcaster
Sends an attributeChangeNotification which is passed in to
 the registered attributeChangeNotification listeners on the
 ModelMBean.
sendAttributeChangeNotification(AttributeChangeNotification)
- Method in class javax.management.modelmbean.
RequiredModelMBean
sendAttributeChangeNotification(Attribute, Attribute)
- Method in interface javax.management.modelmbean.
ModelMBeanNotificationBroadcaster
Sends an attributeChangeNotification which contains the old value and new value for the
 attribute to the registered AttributeChangeNotification listeners on the ModelMBean.
sendAttributeChangeNotification(Attribute, Attribute)
- Method in class javax.management.modelmbean.
RequiredModelMBean
sendBinary(ByteBuffer, boolean)
- Method in interface java.net.http.
WebSocket
Sends binary data with bytes from the given buffer.
sendClose(int, String)
- Method in interface java.net.http.
WebSocket
Initiates an orderly closure of this WebSocket's output by
 sending a Close message with the given status code and the reason.
SendFailedNotification
- Class in
com.sun.nio.sctp
Notification emitted when a send failed notification has been received.
SendFailedNotification()
- Constructor for class com.sun.nio.sctp.
SendFailedNotification
Initializes a new instance of this class.
sendNotification(String)
- Method in interface javax.management.modelmbean.
ModelMBeanNotificationBroadcaster
Sends a Notification which contains the text string that is passed in
 to the registered Notification listeners on the ModelMBean.
sendNotification(String)
- Method in class javax.management.modelmbean.
RequiredModelMBean
sendNotification(Notification)
- Method in class javax.management.
MBeanServerDelegate
Enables the MBean server to send a notification.
sendNotification(Notification)
- Method in interface javax.management.modelmbean.
ModelMBeanNotificationBroadcaster
Sends a Notification which is passed in to the registered
 Notification listeners on the ModelMBean as a
 jmx.modelmbean.generic notification.
sendNotification(Notification)
- Method in class javax.management.modelmbean.
RequiredModelMBean
sendNotification(Notification)
- Method in class javax.management.
NotificationBroadcasterSupport
Sends a notification.
sendNotification(Notification)
- Method in class javax.management.
StandardEmitterMBean
Sends a notification.
sendPing(ByteBuffer)
- Method in interface java.net.http.
WebSocket
Sends a Ping message with bytes from the given buffer.
sendPong(ByteBuffer)
- Method in interface java.net.http.
WebSocket
Sends a Pong message with bytes from the given buffer.
sendRelationCreationNotification(String)
- Method in class javax.management.relation.
RelationService
Sends a notification (RelationNotification) for a relation creation.
sendRelationCreationNotification(String)
- Method in interface javax.management.relation.
RelationServiceMBean
Sends a notification (RelationNotification) for a relation creation.
sendRelationRemovalNotification(String, List<ObjectName>)
- Method in class javax.management.relation.
RelationService
Sends a notification (RelationNotification) for a relation removal.
sendRelationRemovalNotification(String, List<ObjectName>)
- Method in interface javax.management.relation.
RelationServiceMBean
Sends a notification (RelationNotification) for a relation removal.
sendResponseHeaders(int, long)
- Method in class com.sun.net.httpserver.
HttpExchange
Starts sending the response back to the client using the current set of
 response headers and the numeric response code as specified in this
 method.
sendRoleUpdateNotification(String, Role, List<ObjectName>)
- Method in class javax.management.relation.
RelationService
Sends a notification (RelationNotification) for a role update in the
 given relation.
sendRoleUpdateNotification(String, Role, List<ObjectName>)
- Method in interface javax.management.relation.
RelationServiceMBean
Sends a notification (RelationNotification) for a role update in the
 given relation.
sendText(CharSequence, boolean)
- Method in interface java.net.http.
WebSocket
Sends textual data with characters from the given character sequence.
sendUrgentData(int)
- Method in class java.net.
Socket
Send one byte of urgent data on the socket.
sendUrgentData(int)
- Method in class java.net.
SocketImpl
Send one byte of urgent data on the socket.
SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSOR
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SensingMethod" tag.
SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSOR
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SensingMethod" tag.
SENSING_METHOD_NOT_DEFINED
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SensingMethod" tag.
SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSOR
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SensingMethod" tag.
SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSOR
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SensingMethod" tag.
SENSING_METHOD_TRILINEAR_SENSOR
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SensingMethod" tag.
SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSOR
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SensingMethod" tag.
SENTENCE
- Static variable in interface javax.accessibility.
AccessibleText
Constant used to indicate that the part of the text that should be
 retrieved is a sentence.
SEPARATE_DOCUMENTS_COLLATED_COPIES
- Static variable in class java.awt.
JobAttributes.MultipleDocumentHandlingType
The
MultipleDocumentHandlingType
instance to use for specifying
 that the job should be divided into separate, collated copies.
SEPARATE_DOCUMENTS_COLLATED_COPIES
- Static variable in class javax.print.attribute.standard.
MultipleDocumentHandling
Separate documents collated copies -- see above for
further information
.
SEPARATE_DOCUMENTS_UNCOLLATED_COPIES
- Static variable in class java.awt.
JobAttributes.MultipleDocumentHandlingType
The
MultipleDocumentHandlingType
instance to use for specifying
 that the job should be divided into separate, uncollated copies.
SEPARATE_DOCUMENTS_UNCOLLATED_COPIES
- Static variable in class javax.print.attribute.standard.
MultipleDocumentHandling
Separate documents uncollated copies -- see above for
further information
.
separator
- Static variable in class java.io.
File
The system-dependent default name-separator character, represented as a
 string for convenience.
Separator()
- Constructor for class javax.swing.
JPopupMenu.Separator
Constructs a popup menu-specific Separator.
Separator()
- Constructor for class javax.swing.
JToolBar.Separator
Creates a new toolbar separator with the default size
 as defined by the current look and feel.
Separator(Dimension)
- Constructor for class javax.swing.
JToolBar.Separator
Creates a new toolbar separator with the specified size.
SEPARATOR
- Static variable in class javax.accessibility.
AccessibleRole
An object usually contained in a menu to provide a visual and logical
 separation of the contents in a menu.
SEPARATOR
- Static variable in class javax.swing.plaf.synth.
Region
Separator region.
separatorChar
- Static variable in class java.io.
File
The system-dependent default name-separator character.
Separators
- Search tag in package javax.swing.plaf.synth
Section
SeparatorUI
- Class in
javax.swing.plaf
Pluggable look and feel interface for JSeparator.
SeparatorUI()
- Constructor for class javax.swing.plaf.
SeparatorUI
Constructor for subclasses to call.
SEPTEMBER
- Enum constant in enum class java.time.
Month
The singleton instance for the month of September with 30 days.
SEPTEMBER
- Static variable in class java.util.
Calendar
Value of the
Calendar.MONTH
field indicating the
 ninth month of the year in the Gregorian and Julian calendars.
SEPTEMBER
- Static variable in class javax.xml.datatype.
DatatypeConstants
Value for ninth month of year.
Sequence
- Class in
javax.sound.midi
A
Sequence
is a data structure containing musical information (often
 an entire song or composition) that can be played back by a
Sequencer
object.
Sequence(float, int)
- Constructor for class javax.sound.midi.
Sequence
Constructs a new MIDI sequence with the specified timing division type
 and timing resolution.
Sequence(float, int, int)
- Constructor for class javax.sound.midi.
Sequence
Constructs a new MIDI sequence with the specified timing division type,
 timing resolution, and number of tracks.
sequenceComplete(ImageReader)
- Method in interface javax.imageio.event.
IIOReadProgressListener
Reports that a sequence of read operations has completed.
SequencedCollection<E>
- Interface in
java.util
A collection that has a well-defined encounter order, that supports operations at both ends,
 and that is reversible.
sequencedEntrySet()
- Method in class java.util.
LinkedHashMap
Returns a
SequencedSet
view of this map's
entrySet
.
sequencedEntrySet()
- Method in interface java.util.
SequencedMap
Returns a
SequencedSet
view of this map's
entrySet
.
sequencedKeySet()
- Method in class java.util.
LinkedHashMap
Returns a
SequencedSet
view of this map's
keySet
.
sequencedKeySet()
- Method in interface java.util.
SequencedMap
Returns a
SequencedSet
view of this map's
keySet
.
SequencedMap<K,
V>
- Interface in
java.util
A Map that has a well-defined encounter order, that supports operations at both ends, and
 that is reversible.
SequencedSet<E>
- Interface in
java.util
A collection that is both a
SequencedCollection
and a
Set
.
sequencedValues()
- Method in class java.util.
LinkedHashMap
Returns a
SequencedCollection
view of this map's
values
collection.
sequencedValues()
- Method in interface java.util.
SequencedMap
Returns a
SequencedCollection
view of this map's
values
collection.
sequenceElement()
- Static method in interface java.lang.foreign.
MemoryLayout.PathElement
PREVIEW
Returns an
open path element
which selects an unspecified
 element layout in a sequence layout.
sequenceElement(long)
- Static method in interface java.lang.foreign.
MemoryLayout.PathElement
PREVIEW
Returns a path element which selects the element layout at the specified position in a sequence layout.
sequenceElement(long, long)
- Static method in interface java.lang.foreign.
MemoryLayout.PathElement
PREVIEW
Returns an
open path element
which selects the element
 layout in a
range
of positions in a sequence layout.
SequenceInputStream
- Class in
java.io
A
SequenceInputStream
represents
 the logical concatenation of other input
 streams.
SequenceInputStream(InputStream, InputStream)
- Constructor for class java.io.
SequenceInputStream
Initializes a newly
 created
SequenceInputStream
by remembering the two arguments, which
 will be read in order, first
s1
and then
s2
, to provide the
 bytes to be read from this
SequenceInputStream
.
SequenceInputStream(Enumeration<? extends InputStream>)
- Constructor for class java.io.
SequenceInputStream
Initializes a newly created
SequenceInputStream
by remembering the argument, which must
 be an
Enumeration
that produces
 objects whose run-time type is
InputStream
.
sequenceLayout(long, MemoryLayout)
- Static method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Creates a sequence layout with the given element layout and element count.
sequenceLayout(MemoryLayout)
- Static method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Creates a sequence layout with the given element layout and the maximum element
 count such that it does not overflow a
long
.
SequenceLayout
PREVIEW
- Interface in
java.lang.foreign
A compound layout that denotes a homogeneous repetition of a given
element layout
.
sequenceNumber()
- Method in class javax.net.ssl.
SSLEngineResult
Returns the sequence number of the produced or consumed SSL/TLS/DTLS
 record (optional operation).
Sequencer
- Interface in
javax.sound.midi
A hardware or software device that plays back a MIDI
sequence
is known as a
sequencer
.
Sequencer.SyncMode
- Class in
javax.sound.midi
A
SyncMode
object represents one of the ways in which a MIDI
 sequencer's notion of time can be synchronized with a master or slave
 device.
sequenceStarted(ImageReader, int)
- Method in interface javax.imageio.event.
IIOReadProgressListener
Reports that a sequence of read operations is beginning.
sequential()
- Method in interface java.util.stream.
BaseStream
Returns an equivalent stream that is sequential.
Serial
- Annotation Interface in
java.io
Indicates that an annotated field or method is part of the
serialization mechanism
defined by the
Java Object Serialization Specification
.
SERIAL
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SerialTree
representing an
@serial
tag.
SERIAL_DATA
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SerialDataTree
representing an
@serialData
tag.
SERIAL_FIELD
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SerialFieldTree
representing an
@serialField
tag.
SERIAL_FILTER_PATTERN
- Static variable in class javax.management.remote.rmi.
RMIConnectorServer
This attribute defines a pattern from which to create a
ObjectInputFilter
that will be used when deserializing
 objects sent to the
JMXConnectorServer
by any client.
SERIAL_FILTER_PERMISSION
- Static variable in interface java.io.
ObjectStreamConstants
Enable setting the system-wide serial filter.
SerialArray
- Class in
javax.sql.rowset.serial
A serialized version of an
Array
object, which is the mapping in the Java programming language of an SQL
ARRAY
value.
SerialArray(Array)
- Constructor for class javax.sql.rowset.serial.
SerialArray
Constructs a new
SerialArray
object from the given
Array
object.
SerialArray(Array, Map<String, Class<?>>)
- Constructor for class javax.sql.rowset.serial.
SerialArray
Constructs a new
SerialArray
object from the given
Array
object, using the given type map for the custom
 mapping of each element when the elements are SQL UDTs.
SerialBlob
- Class in
javax.sql.rowset.serial
A serialized mapping in the Java programming language of an SQL
BLOB
value.
SerialBlob(byte[])
- Constructor for class javax.sql.rowset.serial.
SerialBlob
Constructs a
SerialBlob
object that is a serialized version of
 the given
byte
array.
SerialBlob(Blob)
- Constructor for class javax.sql.rowset.serial.
SerialBlob
Constructs a
SerialBlob
object that is a serialized
 version of the given
Blob
object.
serialClass()
- Method in interface java.io.
ObjectInputFilter.FilterInfo
The class of an object being deserialized.
SerialClob
- Class in
javax.sql.rowset.serial
A serialized mapping in the Java programming language of an SQL
CLOB
value.
SerialClob(char[])
- Constructor for class javax.sql.rowset.serial.
SerialClob
Constructs a
SerialClob
object that is a serialized version of
 the given
char
array.
SerialClob(Clob)
- Constructor for class javax.sql.rowset.serial.
SerialClob
Constructs a
SerialClob
object that is a serialized
 version of the given
Clob
object.
SerialDatalink
- Class in
javax.sql.rowset.serial
A serialized mapping in the Java programming language of an SQL
DATALINK
value.
SerialDatalink(URL)
- Constructor for class javax.sql.rowset.serial.
SerialDatalink
Constructs a new
SerialDatalink
object from the given
java.net.URL
object.
SerialDataTree
- Interface in
com.sun.source.doctree
A tree node for an
@serialData
block tag.
SerialException
- Exception Class in
javax.sql.rowset.serial
Indicates and an error with the serialization or de-serialization of
 SQL types such as
BLOB, CLOB, STRUCT or ARRAY
in
 addition to SQL types such as
DATALINK and JAVAOBJECT
SerialException()
- Constructor for exception class javax.sql.rowset.serial.
SerialException
Creates a new
SerialException
without a
 message.
SerialException(String)
- Constructor for exception class javax.sql.rowset.serial.
SerialException
Creates a new
SerialException
with the
 specified message.
SerialFieldTree
- Interface in
com.sun.source.doctree
A tree node for an
@serialField
block tag.
Serializability of Collections
- Search tag in interface java.util.Collection
Section
serializable
- Variable in class java.beans.beancontext.
BeanContextServicesSupport
The number of instances of a serializable
BeanContextServceProvider
.
Serializable
- Interface in
java.io
Serializability of a class is enabled by the class implementing the
 java.io.Serializable interface.
SerializablePermission
- Class in
java.io
This class is for Serializable permissions.
SerializablePermission(String)
- Constructor for class java.io.
SerializablePermission
Creates a new SerializablePermission with the specified name.
SerializablePermission(String, String)
- Constructor for class java.io.
SerializablePermission
Creates a new SerializablePermission object with the specified name.
Serialization
- Search tag in class java.awt.Component
Section
Serialization
- Search tag in class java.time.ZoneId
Section
Serialization
- Search tag in class java.util.Locale
Section
serialize(ObjectOutputStream, Collection<?>)
- Method in class java.beans.beancontext.
BeanContextSupport
Used by writeObject to serialize a Collection.
SERIALIZE_ERR
- Static variable in exception class org.w3c.dom.ls.
LSException
If an attempt was made to serialize a
Node
using
LSSerializer
and the processing has been stopped.
SerializedLambda
- Class in
java.lang.invoke
Serialized form of a lambda expression.
SerializedLambda(Class<?>, String, String, String, int, String, String, String, String, Object[])
- Constructor for class java.lang.invoke.
SerializedLambda
Create a
SerializedLambda
from the low-level information present
 at the lambda factory site.
SerialJavaObject
- Class in
javax.sql.rowset.serial
A serializable mapping in the Java programming language of an SQL
JAVA_OBJECT
value.
SerialJavaObject(Object)
- Constructor for class javax.sql.rowset.serial.
SerialJavaObject
Constructor for
SerialJavaObject
helper class.
SerialRef
- Class in
javax.sql.rowset.serial
A serialized mapping of a
Ref
object, which is the mapping in the
 Java programming language of an SQL
REF
value.
SerialRef(Ref)
- Constructor for class javax.sql.rowset.serial.
SerialRef
Constructs a
SerialRef
object from the given
Ref
object.
SerialStruct
- Class in
javax.sql.rowset.serial
A serialized mapping in the Java programming language of an SQL
 structured type.
SerialStruct(SQLData, Map<String, Class<?>>)
- Constructor for class javax.sql.rowset.serial.
SerialStruct
Constructs a
SerialStruct
object from the
 given
SQLData
object, using the given type
 map to custom map it to a class in the Java programming
 language.
SerialStruct(Struct, Map<String, Class<?>>)
- Constructor for class javax.sql.rowset.serial.
SerialStruct
Constructs a
SerialStruct
object from the given
Struct
object, using the given
java.util.Map
object for custom mapping the SQL structured type or any of its
 attributes that are SQL structured types.
SerialTree
- Interface in
com.sun.source.doctree
A tree node for an
@serial
block tag.
serialVersionUID
- Static variable in interface java.rmi.server.
RemoteRef
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.rmi.server.
ServerRef
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.interfaces.
DSAPrivateKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.interfaces.
DSAPublicKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.interfaces.
ECPrivateKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.interfaces.
ECPublicKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.interfaces.
RSAMultiPrimePrivateCrtKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.interfaces.
RSAPrivateCrtKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.interfaces.
RSAPrivateKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.interfaces.
RSAPublicKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.
Key
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.
PrivateKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface java.security.
PublicKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface javax.crypto.interfaces.
DHPrivateKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface javax.crypto.interfaces.
DHPublicKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface javax.crypto.interfaces.
PBEKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface javax.crypto.
SecretKey
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface javax.naming.directory.
Attribute
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
serialVersionUID
- Static variable in interface javax.naming.
Name
Deprecated.
A
serialVersionUID
field in an interface is
 ineffectual. Do not use; no replacement.
SERIF
- Static variable in class java.awt.
Font
A String constant for the canonical family name of the
 logical font "Serif".
server
- Variable in class javax.management.monitor.
Monitor
Reference to the MBean server.
SERVER
- Enum constant in enum class java.net.
Authenticator.RequestorType
Entity requesting authentication is a HTTP origin server.
SERVER_AUTH
- Static variable in class javax.security.sasl.
Sasl
The name of a property that specifies whether the
 server must authenticate to the client.
ServerCloneException
- Exception Class in
java.rmi.server
A
ServerCloneException
is thrown if a remote exception occurs
 during the cloning of a
UnicastRemoteObject
.
ServerCloneException(String)
- Constructor for exception class java.rmi.server.
ServerCloneException
Constructs a
ServerCloneException
with the specified
 detail message.
ServerCloneException(String, Exception)
- Constructor for exception class java.rmi.server.
ServerCloneException
Constructs a
ServerCloneException
with the specified
 detail message and cause.
ServerError
- Exception Class in
java.rmi
A
ServerError
is thrown as a result of a remote method
 invocation when an
Error
is thrown while processing
 the invocation on the server, either while unmarshalling the arguments,
 executing the remote method itself, or marshalling the return value.
ServerError(String, Error)
- Constructor for exception class java.rmi.
ServerError
Constructs a
ServerError
with the specified
 detail message and nested error.
ServerException
- Exception Class in
java.rmi
A
ServerException
is thrown as a result of a remote method
 invocation when a
RemoteException
is thrown while processing
 the invocation on the server, either while unmarshalling the arguments or
 executing the remote method itself.
ServerException(String)
- Constructor for exception class java.rmi.
ServerException
Constructs a
ServerException
with the specified
 detail message.
ServerException(String, Exception)
- Constructor for exception class java.rmi.
ServerException
Constructs a
ServerException
with the specified
 detail message and nested exception.
ServerNotActiveException
- Exception Class in
java.rmi.server
An
ServerNotActiveException
is an
Exception
thrown during a call to
RemoteServer.getClientHost
if
 the getClientHost method is called outside of servicing a remote
 method call.
ServerNotActiveException()
- Constructor for exception class java.rmi.server.
ServerNotActiveException
Constructs an
ServerNotActiveException
with no specified
 detail message.
ServerNotActiveException(String)
- Constructor for exception class java.rmi.server.
ServerNotActiveException
Constructs an
ServerNotActiveException
with the specified
 detail message.
ServerRef
- Interface in
java.rmi.server
Deprecated.
No replacement. This interface is unused and is obsolete.
ServerRuntimeException
- Exception Class in
java.rmi
Deprecated.
no replacement
ServerRuntimeException(String, Exception)
- Constructor for exception class java.rmi.
ServerRuntimeException
Deprecated.
no replacement
ServerSocket
- Class in
java.net
This class implements server sockets.
ServerSocket()
- Constructor for class java.net.
ServerSocket
Creates an unbound server socket.
ServerSocket(int)
- Constructor for class java.net.
ServerSocket
Creates a server socket, bound to the specified port.
ServerSocket(int, int)
- Constructor for class java.net.
ServerSocket
Creates a server socket and binds it to the specified local port
 number, with the specified backlog.
ServerSocket(int, int, InetAddress)
- Constructor for class java.net.
ServerSocket
Create a server with the specified port, listen backlog, and
 local IP address to bind to.
ServerSocket(SocketImpl)
- Constructor for class java.net.
ServerSocket
Creates a server socket with a user-specified
SocketImpl
.
ServerSocketChannel
- Class in
java.nio.channels
A selectable channel for stream-oriented listening sockets.
ServerSocketChannel(SelectorProvider)
- Constructor for class java.nio.channels.
ServerSocketChannel
Initializes a new instance of this class.
ServerSocketFactory
- Class in
javax.net
This class creates server sockets.
ServerSocketFactory()
- Constructor for class javax.net.
ServerSocketFactory
Creates a server socket factory.
service()
- Method in class java.lang.module.
ModuleDescriptor.Provides
Returns the fully qualified class name of the service type.
Service(Provider, String, String, String, List<String>, Map<String, String>)
- Constructor for class java.security.
Provider.Service
Construct a new service.
SERVICE_FORMATTED(String)
- Constructor for class javax.print.
DocFlavor.SERVICE_FORMATTED
Constructs a new doc flavor with a MIME type of
"application/x-java-jvm-local-objectref"
indicating service
 formatted print data and the given print data representation class
 name.
SERVICE_OFF_LINE
- Static variable in class javax.print.attribute.standard.
JobStateReason
The printer is off-line and accepting no jobs.
serviceAvailable(BeanContextServiceAvailableEvent)
- Method in class java.beans.beancontext.
BeanContextChildSupport
A new service is available from the nesting BeanContext.
serviceAvailable(BeanContextServiceAvailableEvent)
- Method in interface java.beans.beancontext.
BeanContextServicesListener
The service named has been registered. getService requests for
 this service may now be made.
serviceAvailable(BeanContextServiceAvailableEvent)
- Method in class java.beans.beancontext.
BeanContextServicesSupport
BeanContextServicesListener callback, propagates event to all
 currently registered listeners and BeanContextServices children,
 if this BeanContextService does not already implement this service
 itself.
serviceClass
- Variable in class java.beans.beancontext.
BeanContextServiceAvailableEvent
A
Class
reference to the newly available service
serviceClass
- Variable in class java.beans.beancontext.
BeanContextServiceRevokedEvent
A
Class
reference to the service that is being revoked.
ServiceConfigurationError
- Exception Class in
java.util
Error thrown when something goes wrong while locating, loading, or
 instantiating a service provider.
ServiceConfigurationError(String)
- Constructor for exception class java.util.
ServiceConfigurationError
Constructs a new instance with the specified message.
ServiceConfigurationError(String, Throwable)
- Constructor for exception class java.util.
ServiceConfigurationError
Constructs a new instance with the specified message and cause.
Service Formatted Print Data
- Search tag in class javax.print.DocFlavor
Section
ServiceLoader<S>
- Class in
java.util
A facility to load implementations of a service.
ServiceLoader.Provider<S>
- Interface in
java.util
Represents a service provider located by
ServiceLoader
.
ServiceNotFoundException
- Exception Class in
javax.management
Represents exceptions raised when a requested service is not supported.
ServiceNotFoundException()
- Constructor for exception class javax.management.
ServiceNotFoundException
Default constructor.
ServiceNotFoundException(String)
- Constructor for exception class javax.management.
ServiceNotFoundException
Constructor that allows a specific error message to be specified.
ServicePermission
- Class in
javax.security.auth.kerberos
This class is used to protect Kerberos services and the
 credentials necessary to access those services.
ServicePermission(String, String)
- Constructor for class javax.security.auth.kerberos.
ServicePermission
Create a new
ServicePermission
with the specified
servicePrincipal
and
action
.
serviceProvider
- Variable in class java.beans.beancontext.
BeanContextServicesSupport.BCSSServiceProvider
The service provider.
Service Provider Requirements
- Search tag in interface javax.naming.ldap.LdapContext
Section
Service Providers
- Search tag in package javax.xml.crypto.dsig
Section
ServiceRegistry
- Class in
javax.imageio.spi
A registry for service provider instances for Image I/O service types.
ServiceRegistry(Iterator<Class<?>>)
- Constructor for class javax.imageio.spi.
ServiceRegistry
Constructs a
ServiceRegistry
instance with a
 set of categories taken from the
categories
argument.
ServiceRegistry.Filter
- Interface in
javax.imageio.spi
A simple filter interface used by
ServiceRegistry.getServiceProviders
to select
 providers matching an arbitrary criterion.
serviceRevoked(BeanContextServiceRevokedEvent)
- Method in class java.beans.beancontext.
BeanContextChildSupport
A service provided by the nesting BeanContext has been revoked.
serviceRevoked(BeanContextServiceRevokedEvent)
- Method in interface java.beans.beancontext.
BeanContextServiceRevokedListener
The service named has been revoked. getService requests for
 this service will no longer be satisfied.
serviceRevoked(BeanContextServiceRevokedEvent)
- Method in class java.beans.beancontext.
BeanContextServicesSupport.BCSSProxyServiceProvider
serviceRevoked(BeanContextServiceRevokedEvent)
- Method in class java.beans.beancontext.
BeanContextServicesSupport
BeanContextServicesListener callback, propagates event to all
 currently registered listeners and BeanContextServices children,
 if this BeanContextService does not already implement this service
 itself.
services
- Variable in class java.beans.beancontext.
BeanContextServicesSupport
all accesses to the
protected transient HashMap services
field should be synchronized on that object
ServiceUI
- Class in
javax.print
This class is a collection of UI convenience methods which provide a
 graphical user dialog for browsing print services looked up through the Java
 Print Service API.
ServiceUI()
- Constructor for class javax.print.
ServiceUI
Constructs a
ServiceUI
.
ServiceUIFactory
- Class in
javax.print
Services may optionally provide UIs which allow different styles of
 interaction in different roles.
ServiceUIFactory()
- Constructor for class javax.print.
ServiceUIFactory
Constructor for subclasses to call.
ServiceUnavailableException
- Exception Class in
javax.naming
This exception is thrown when attempting to communicate with a
 directory or naming service and that service is not available.
ServiceUnavailableException()
- Constructor for exception class javax.naming.
ServiceUnavailableException
Constructs a new instance of ServiceUnavailableException.
ServiceUnavailableException(String)
- Constructor for exception class javax.naming.
ServiceUnavailableException
Constructs a new instance of ServiceUnavailableException using an
 explanation.
set(boolean)
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setVolatile(java.lang.Object...)
.
set(byte, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an Object in the list of parameters with a Byte.
set(char, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an Object in the list of parameters with a Character.
set(double, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an Object in the list of parameters with a Double.
set(float, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an Object in the list of parameters with a Float.
set(int)
- Method in class java.util.
BitSet
Sets the bit at the specified index to
true
.
set(int)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setVolatile(java.lang.Object...)
.
set(int, boolean)
- Method in class java.util.
BitSet
Sets the bit at the specified index to the specified value.
set(int, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an Object in the list of parameters with an Integer.
set(int, int)
- Method in class java.util.
BitSet
Sets the bits from the specified
fromIndex
(inclusive) to the
 specified
toIndex
(exclusive) to
true
.
set(int, int)
- Method in class java.util.
Calendar.Builder
Sets the
field
parameter to the given
value
.
set(int, int)
- Method in class java.util.
Calendar
Sets the given calendar field to the given value.
set(int, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setVolatile(java.lang.Object...)
.
set(int, int, boolean)
- Method in class java.util.
BitSet
Sets the bits from the specified
fromIndex
(inclusive) to the
 specified
toIndex
(exclusive) to the specified value.
set(int, int, int)
- Method in class java.util.
Calendar
Sets the values for the calendar fields
YEAR
,
MONTH
, and
DAY_OF_MONTH
.
set(int, int, int, int)
- Method in class java.awt.
Insets
Set top, left, bottom, and right to the specified values
set(int, int, int, int, int)
- Method in class java.util.
Calendar
Sets the values for the calendar fields
YEAR
,
MONTH
,
DAY_OF_MONTH
,
HOUR_OF_DAY
, and
MINUTE
.
set(int, int, int, int, int, int)
- Method in class java.util.
Calendar
Sets the values for the fields
YEAR
,
MONTH
,
DAY_OF_MONTH
,
HOUR_OF_DAY
,
MINUTE
, and
SECOND
.
set(int, long)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setVolatile(java.lang.Object...)
.
set(int, E)
- Method in class java.util.
AbstractList
Replaces the element at the specified position in this list with the
 specified element (optional operation).
set(int, E)
- Method in class java.util.
AbstractSequentialList
Replaces the element at the specified position in this list with the
 specified element (optional operation).
set(int, E)
- Method in class java.util.
ArrayList
Replaces the element at the specified position in this list with
 the specified element.
set(int, E)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setVolatile(java.lang.Object...)
.
set(int, E)
- Method in class java.util.concurrent.
CopyOnWriteArrayList
Replaces the element at the specified position in this list with the
 specified element.
set(int, E)
- Method in class java.util.
LinkedList
Replaces the element at the specified position in this list with the
 specified element.
set(int, E)
- Method in interface java.util.
List
Replaces the element at the specified position in this list with the
 specified element (optional operation).
set(int, E)
- Method in class java.util.
Vector
Replaces the element at the specified position in this Vector with the
 specified element.
set(int, E)
- Method in class javax.swing.
DefaultListModel
Replaces the element at the specified position in this list with the
 specified element.
set(int, Object)
- Method in class javax.management.
AttributeList
Replaces the element at the specified position in this list with
 the specified element.
set(int, Object)
- Method in interface javax.naming.directory.
Attribute
Sets an attribute value in the ordered list of attribute values.
set(int, Object)
- Method in class javax.naming.directory.
BasicAttribute
set(int, Object)
- Method in class jdk.jfr.
Event
Sets a field value.
set(int, Attribute)
- Method in class javax.management.
AttributeList
Sets the element at the position specified to be the attribute specified.
set(int, Role)
- Method in class javax.management.relation.
RoleList
Sets the element at the position specified to be the role
 specified.
set(int, RoleUnresolved)
- Method in class javax.management.relation.
RoleUnresolvedList
Sets the element at the position specified to be the unresolved role
 specified.
set(long)
- Method in class java.util.concurrent.atomic.
AtomicLong
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setVolatile(java.lang.Object...)
.
set(long, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an Object in the list of parameters with a Long.
set(short, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an Object in the list of parameters with a Short.
set(E)
- Method in interface java.util.
ListIterator
Replaces the last element returned by
ListIterator.next()
or
ListIterator.previous()
with the specified element (optional operation).
set(JobAttributes)
- Method in class java.awt.
JobAttributes
Sets all of the attributes of this
JobAttributes
to
 the same values as the attributes of obj.
set(PageAttributes)
- Method in class java.awt.
PageAttributes
Sets all of the attributes of this PageAttributes to the same values as
 the attributes of obj.
set(AddressLayout, long, MemorySegment)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes an address into this segment at the given offset, with the given layout.
set(ValueLayout.OfBoolean, long, boolean)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a boolean into this segment at the given offset, with the given layout.
set(ValueLayout.OfByte, long, byte)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a byte into this segment at the given offset, with the given layout.
set(ValueLayout.OfChar, long, char)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a char into this segment at the given offset, with the given layout.
set(ValueLayout.OfDouble, long, double)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a double into this segment at the given offset, with the given layout.
set(ValueLayout.OfFloat, long, float)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a float into this segment at the given offset, with the given layout.
set(ValueLayout.OfInt, long, int)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes an int into this segment at the given offset, with the given layout.
set(ValueLayout.OfLong, long, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a long into this segment at the given offset, with the given layout.
set(ValueLayout.OfShort, long, short)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a short into this segment at the given offset, with the given layout.
set(Object...)
- Method in class java.lang.invoke.
VarHandle
Sets the value of a variable to the
newValue
, with memory
 semantics of setting as if the variable was declared non-
volatile
and non-
final
.
set(Object, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an Object in the list of parameters.
set(Object, int, Object)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified new value.
set(Object, Object)
- Method in class java.lang.reflect.
Field
Sets the field represented by this
Field
object on the
 specified object argument to the specified new value.
set(String, String)
- Method in class com.sun.net.httpserver.
Headers
Sets the given
value
as the sole header value for the given
key
.
set(T)
- Method in class java.lang.
ThreadLocal
Sets the current thread's copy of this thread-local variable
 to the specified value.
set(T, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Sets the field of the given object managed by this updater to the
 given updated value.
set(T, long)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Sets the field of the given object managed by this updater to the
 given updated value.
set(T, V)
- Method in class java.util.concurrent.atomic.
AtomicReferenceFieldUpdater
Sets the field of the given object managed by this updater to the
 given updated value.
set(V)
- Method in class java.util.concurrent.atomic.
AtomicReference
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setVolatile(java.lang.Object...)
.
set(V)
- Method in class java.util.concurrent.
FutureTask
Sets the result of this future to the given value unless
 this future has already been set or has been cancelled.
set(V, boolean)
- Method in class java.util.concurrent.atomic.
AtomicMarkableReference
Unconditionally sets the value of both the reference and mark.
set(V, int)
- Method in class java.util.concurrent.atomic.
AtomicStampedReference
Unconditionally sets the value of both the reference and stamp.
Set<E>
- Interface in
java.util
A collection that contains no duplicate elements.
SET
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.set
SET
- Enum constant in enum class jdk.dynalink.
StandardOperation
Set the value in a namespace defined on an object.
SET_OPAQUE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.setOpaque
SET_RELEASE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.setRelease
SET_VOLATILE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.setVolatile
set2DigitYearStart(Date)
- Method in class java.text.
SimpleDateFormat
Sets the 100-year period 2-digit years will be interpreted as being in
 to begin on the date the user specifies.
setAbbr(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setAboutHandler(AboutHandler)
- Method in class java.awt.
Desktop
Installs a handler to show a custom About window for your application.
setAccelerationPriority(float)
- Method in class java.awt.
Image
Sets a hint for this image about how important acceleration is.
setAccelerator(KeyStroke)
- Method in class javax.swing.
JMenu
setAccelerator
is not defined for
JMenu
.
setAccelerator(KeyStroke)
- Method in class javax.swing.
JMenuItem
Sets the key combination which invokes the menu item's
 action listeners without navigating the menu hierarchy.
setAccept(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setAcceptAllFileFilterUsed(boolean)
- Method in class javax.swing.
JFileChooser
Determines whether the
AcceptAll FileFilter
is used
 as an available choice in the choosable filter list.
setAcceptCharset(String)
- Method in interface org.w3c.dom.html.
HTMLFormElement
setAccessible(boolean)
- Method in class java.lang.reflect.
AccessibleObject
Set the
accessible
flag for this reflected object to
 the indicated boolean value.
setAccessible(boolean)
- Method in class java.lang.reflect.
Constructor
Set the
accessible
flag for this reflected object to
 the indicated boolean value.
setAccessible(boolean)
- Method in class java.lang.reflect.
Field
setAccessible(boolean)
- Method in class java.lang.reflect.
Method
setAccessible(AccessibleObject[], boolean)
- Static method in class java.lang.reflect.
AccessibleObject
Convenience method to set the
accessible
flag for an
 array of reflected objects with a single security check (for efficiency).
setAccessibleCaption(Accessible)
- Method in interface javax.accessibility.
AccessibleTable
Sets the caption for the table.
setAccessibleCaption(Accessible)
- Method in class javax.swing.
JTable.AccessibleJTable
Sets the caption for the table.
setAccessibleColumnDescription(int, Accessible)
- Method in interface javax.accessibility.
AccessibleTable
Sets the description text of the specified column in the table.
setAccessibleColumnDescription(int, Accessible)
- Method in class javax.swing.
JTable.AccessibleJTable
Sets the description text of the specified column of the table.
setAccessibleColumnHeader(AccessibleTable)
- Method in interface javax.accessibility.
AccessibleTable
Sets the column headers.
setAccessibleColumnHeader(AccessibleTable)
- Method in class javax.swing.
JTable.AccessibleJTable
Sets the column headers as an
AccessibleTable
.
setAccessibleDescription(String)
- Method in class com.sun.java.accessibility.util.
Translator
Set the accessible description of this object.
setAccessibleDescription(String)
- Method in class javax.accessibility.
AccessibleContext
Sets the accessible description of this object.
setAccessibleDescription(String)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setAccessibleDescription(String)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the accessible description of this object.
setAccessibleDescription(String)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Set the accessible description of this object.
setAccessibleDescription(String)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setAccessibleIconDescription(String)
- Method in interface javax.accessibility.
AccessibleIcon
Sets the description of the icon.
setAccessibleIconDescription(String)
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Sets the description of the icon.
setAccessibleName(String)
- Method in class com.sun.java.accessibility.util.
Translator
Set the name of this object.
setAccessibleName(String)
- Method in class javax.accessibility.
AccessibleContext
Sets the localized accessible name of this object.
setAccessibleName(String)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setAccessibleName(String)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the localized accessible name of this object.
setAccessibleName(String)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Set the localized accessible name of this object.
setAccessibleName(String)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setAccessibleParent(Accessible)
- Method in class javax.accessibility.
AccessibleContext
Sets the
Accessible
parent of this object.
setAccessibleRowDescription(int, Accessible)
- Method in interface javax.accessibility.
AccessibleTable
Sets the description text of the specified row of the table.
setAccessibleRowDescription(int, Accessible)
- Method in class javax.swing.
JTable.AccessibleJTable
Sets the description text of the specified row of the table.
setAccessibleRowHeader(AccessibleTable)
- Method in interface javax.accessibility.
AccessibleTable
Sets the row headers.
setAccessibleRowHeader(AccessibleTable)
- Method in class javax.swing.
JTable.AccessibleJTable
Sets the row headers as an
AccessibleTable
.
setAccessibleSummary(Accessible)
- Method in interface javax.accessibility.
AccessibleTable
Sets the summary description of the table.
setAccessibleSummary(Accessible)
- Method in class javax.swing.
JTable.AccessibleJTable
Sets the summary description of the table.
setAccessKey(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setAccessKey(String)
- Method in interface org.w3c.dom.html.
HTMLAreaElement
setAccessKey(String)
- Method in interface org.w3c.dom.html.
HTMLButtonElement
setAccessKey(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setAccessKey(String)
- Method in interface org.w3c.dom.html.
HTMLLabelElement
setAccessKey(String)
- Method in interface org.w3c.dom.html.
HTMLLegendElement
setAccessKey(String)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setAccessory(JComponent)
- Method in class javax.swing.
JFileChooser
Sets the accessory component.
setAcl(List<AclEntry>)
- Method in interface java.nio.file.attribute.
AclFileAttributeView
Updates (replace) the access control list.
setAction(String)
- Method in interface org.w3c.dom.html.
HTMLFormElement
setAction(Action)
- Method in class javax.swing.
AbstractButton
Sets the
Action
.
setAction(Action)
- Method in class javax.swing.
JComboBox
Sets the
Action
for the
ActionEvent
source.
setAction(Action)
- Method in class javax.swing.
JTextField
Sets the
Action
for the
ActionEvent
source.
setActionCommand(String)
- Method in class java.awt.
Button
Sets the command name for the action event fired
 by this button.
setActionCommand(String)
- Method in class java.awt.
MenuItem
Sets the command name of the action event that is fired
 by this menu item.
setActionCommand(String)
- Method in class java.awt.
TrayIcon
Sets the command name for the action event fired by this tray
 icon.
setActionCommand(String)
- Method in class javax.swing.
AbstractButton
Sets the action command for this button.
setActionCommand(String)
- Method in interface javax.swing.
ButtonModel
Sets the action command string that gets sent as part of the
ActionEvent
when the button is triggered.
setActionCommand(String)
- Method in class javax.swing.
DefaultButtonModel
Sets the action command string that gets sent as part of the
ActionEvent
when the button is triggered.
setActionCommand(String)
- Method in class javax.swing.
JComboBox
Sets the action command that should be included in the event
 sent to action listeners.
setActionCommand(String)
- Method in class javax.swing.
JTextField
Sets the command string used for action events.
setActionCommand(String)
- Method in class javax.swing.
Timer
Sets the string that will be delivered as the action command
 in
ActionEvent
s fired by this timer.
setActionMap(ActionMap)
- Method in class javax.swing.
JComponent
Sets the
ActionMap
to
am
.
setActive(boolean)
- Method in class java.awt.dnd.
DropTarget
Sets the DropTarget active if
true
,
 inactive if
false
.
setAddress(InetAddress)
- Method in class java.net.
DatagramPacket
Sets the IP address of the machine to which this datagram
 is being sent.
setAlgorithmConstraints(AlgorithmConstraints)
- Method in class javax.net.ssl.
SSLParameters
Sets the cryptographic algorithm constraints, which will be used
 in addition to any configured by the runtime environment.
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLDivElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLHeadingElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLHRElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLLegendElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLParagraphElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableCaptionElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableColElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
setAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
setAlignment(int)
- Method in class java.awt.
FlowLayout
Sets the alignment for this layout.
setAlignment(int)
- Method in class java.awt.
Label
Sets the alignment for this label to the specified alignment.
setAlignment(MutableAttributeSet, int)
- Static method in class javax.swing.text.
StyleConstants
Sets alignment.
setAlignmentX(float)
- Method in class javax.swing.
JComponent
Sets the horizontal alignment.
setAlignmentY(float)
- Method in class javax.swing.
JComponent
Sets the vertical alignment.
setAlignOnBaseline(boolean)
- Method in class java.awt.
FlowLayout
Sets whether or not components should be vertically aligned along their
 baseline.
setALink(String)
- Method in interface org.w3c.dom.html.
HTMLBodyElement
setAll(double[], IntToDoubleFunction)
- Static method in class java.util.
Arrays
Set all elements of the specified array, using the provided
 generator function to compute each element.
setAll(int[], IntUnaryOperator)
- Static method in class java.util.
Arrays
Set all elements of the specified array, using the provided
 generator function to compute each element.
setAll(long[], IntToLongFunction)
- Static method in class java.util.
Arrays
Set all elements of the specified array, using the provided
 generator function to compute each element.
setAll(T[], IntFunction<? extends T>)
- Static method in class java.util.
Arrays
Set all elements of the specified array, using the provided
 generator function to compute each element.
setAllocation(Shape)
- Method in class javax.swing.text.
AsyncBoxView.ChildLocator
Copy the currently allocated shape into the Rectangle
 used to store the current allocation.
setAllowsChildren(boolean)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Determines whether or not this node is allowed to have children.
setAllowsInvalid(boolean)
- Method in class javax.swing.text.
DefaultFormatter
Sets whether or not the value being edited is allowed to be invalid
 for a length of time (that is,
stringToValue
throws
 a
ParseException
).
setAllowUserInteraction(boolean)
- Method in class java.net.
URLConnection
Set the value of the
allowUserInteraction
field of
 this
URLConnection
.
setAlt(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setAlt(String)
- Method in interface org.w3c.dom.html.
HTMLAreaElement
setAlt(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setAlt(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setAltName(Name)
- Method in exception class javax.naming.
CannotProceedException
Sets the
altName
field of this exception.
setAltNameCtx(Context)
- Method in exception class javax.naming.
CannotProceedException
Sets the
altNameCtx
field of this exception.
setAlwaysOnTop(boolean)
- Method in class java.awt.
Window
Sets whether this window should always be above other windows.
setAmPmStrings(String[])
- Method in class java.text.
DateFormatSymbols
Sets ampm strings.
setAnchorSelectionIndex(int)
- Method in class javax.swing.
DefaultListSelectionModel
Set the anchor selection index, leaving all selection values unchanged.
setAnchorSelectionIndex(int)
- Method in interface javax.swing.
ListSelectionModel
Set the anchor selection index.
setAnchorSelectionPath(TreePath)
- Method in class javax.swing.
JTree
Sets the path identified as the anchor.
setAngleExtent(double)
- Method in class java.awt.geom.
Arc2D.Double
Sets the angular extent of this arc to the specified double
 value.
setAngleExtent(double)
- Method in class java.awt.geom.
Arc2D.Float
Sets the angular extent of this arc to the specified double
 value.
setAngleExtent(double)
- Method in class java.awt.geom.
Arc2D
Sets the angular extent of this arc to the specified double
 value.
setAngles(double, double, double, double)
- Method in class java.awt.geom.
Arc2D
Sets the starting angle and angular extent of this arc using two
 sets of coordinates.
setAngles(Point2D, Point2D)
- Method in class java.awt.geom.
Arc2D
Sets the starting angle and angular extent of this arc using
 two points.
setAngleStart(double)
- Method in class java.awt.geom.
Arc2D.Double
Sets the starting angle of this arc to the specified double
 value.
setAngleStart(double)
- Method in class java.awt.geom.
Arc2D.Float
Sets the starting angle of this arc to the specified double
 value.
setAngleStart(double)
- Method in class java.awt.geom.
Arc2D
Sets the starting angle of this arc to the specified double
 value.
setAngleStart(Point2D)
- Method in class java.awt.geom.
Arc2D
Sets the starting angle of this arc to the angle that the
 specified point defines relative to the center of this arc.
setAnimated(boolean)
- Method in class java.awt.image.
MemoryImageSource
Changes this memory image into a multi-frame animation or a
 single-frame static image depending on the animated parameter.
setAnimationIndex(int)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Sets the index of the current animation frame
 to the specified value and requests that the
 progress bar be repainted.
setAnyPolicyInhibited(boolean)
- Method in class java.security.cert.
PKIXParameters
Sets state to determine if the any policy OID should be processed
 if it is included in a certificate.
setApplicationProtocols(String[])
- Method in class javax.net.ssl.
SSLParameters
Sets the prioritized array of application-layer protocol names that
 can be negotiated over the SSL/TLS/DTLS protocols.
setApproveButtonMnemonic(char)
- Method in class javax.swing.
JFileChooser
Sets the approve button's mnemonic using a character.
setApproveButtonMnemonic(int)
- Method in class javax.swing.
JFileChooser
Sets the approve button's mnemonic using a numeric keycode.
setApproveButtonText(String)
- Method in class javax.swing.
JFileChooser
Sets the text used in the
ApproveButton
in the
FileChooserUI
.
setApproveButtonToolTipText(String)
- Method in class javax.swing.
JFileChooser
Sets the tooltip text used in the
ApproveButton
.
setArc(double, double, double, double, double, double, int)
- Method in class java.awt.geom.
Arc2D.Double
Sets the location, size, angular extents, and closure type of
 this arc to the specified double values.
setArc(double, double, double, double, double, double, int)
- Method in class java.awt.geom.
Arc2D.Float
Sets the location, size, angular extents, and closure type of
 this arc to the specified double values.
setArc(double, double, double, double, double, double, int)
- Method in class java.awt.geom.
Arc2D
Sets the location, size, angular extents, and closure type of
 this arc to the specified double values.
setArc(Arc2D)
- Method in class java.awt.geom.
Arc2D
Sets this arc to be the same as the specified arc.
setArc(Point2D, Dimension2D, double, double, int)
- Method in class java.awt.geom.
Arc2D
Sets the location, size, angular extents, and closure type of
 this arc to the specified values.
setArc(Rectangle2D, double, double, int)
- Method in class java.awt.geom.
Arc2D
Sets the location, size, angular extents, and closure type of
 this arc to the specified values.
setArcByCenter(double, double, double, double, double, int)
- Method in class java.awt.geom.
Arc2D
Sets the position, bounds, angular extents, and closure type of
 this arc to the specified values.
setArcByTangent(Point2D, Point2D, Point2D, double)
- Method in class java.awt.geom.
Arc2D
Sets the position, bounds, and angular extents of this arc to the
 specified value.
setArchive(boolean)
- Method in interface java.nio.file.attribute.
DosFileAttributeView
Updates the value of the archive attribute.
setArchive(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setArchive(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setArcType(int)
- Method in class java.awt.geom.
Arc2D
Sets the closure type of this arc to the specified value:
OPEN
,
CHORD
, or
PIE
.
setAreaOfInterest(Shape)
- Method in class java.awt.image.renderable.
RenderContext
Sets the current area of interest.
setArmed(boolean)
- Method in interface javax.swing.
ButtonModel
Marks the button as armed or unarmed.
setArmed(boolean)
- Method in class javax.swing.
DefaultButtonModel
Marks the button as armed or unarmed.
setArmed(boolean)
- Method in class javax.swing.
JMenuItem
Identifies the menu item as "armed".
setArray(int, Array)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Array
object.
setArray(int, Array)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to an
Array
object in the
 Java programming language.
setArray(int, Array)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with the given
Array
value.
setAsciiStream(int, InputStream)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given input stream.
setAsciiStream(int, InputStream)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter in this
RowSet
object's command
 to the given input stream.
setAsciiStream(int, InputStream)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given input stream.
setAsciiStream(int, InputStream, int)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setAsciiStream(int, InputStream, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.io.InputStream
object,
 which will have the specified number of bytes.
setAsciiStream(int, InputStream, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
java.io.InputStream
value.
setAsciiStream(int, InputStream, long)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setAsciiStream(long)
- Method in interface java.sql.
Clob
Retrieves a stream to be used to write Ascii characters to the
CLOB
value that this
Clob
object represents,
 starting at position
pos
.
setAsciiStream(long)
- Method in class javax.sql.rowset.serial.
SerialClob
Retrieves a stream to be used to write Ascii characters to the
CLOB
value that this
SerialClob
object represents,
 starting at position
pos
.
setAsciiStream(String, InputStream)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given input stream.
setAsciiStream(String, InputStream)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given input stream.
setAsciiStream(String, InputStream)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given input stream.
setAsciiStream(String, InputStream, int)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setAsciiStream(String, InputStream, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setAsciiStream(String, InputStream, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setAsciiStream(String, InputStream, long)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setAsksAllowsChildren(boolean)
- Method in class javax.swing.tree.
DefaultTreeModel
Sets whether or not to test leafness by asking getAllowsChildren()
 or isLeaf() to the TreeNodes.
setAsText(String)
- Method in interface java.beans.
PropertyEditor
Set the property value by parsing a given String.
setAsText(String)
- Method in class java.beans.
PropertyEditorSupport
Sets the property value by parsing a given String.
setAsynchronousLoadPriority(int)
- Method in class javax.swing.text.
AbstractDocument
Sets the asynchronous loading priority.
setAtIndex(AddressLayout, long, MemorySegment)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes an address into this segment at the given index, scaled by the given layout size.
setAtIndex(ValueLayout.OfBoolean, long, boolean)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a boolean into this segment at the given index, scaled by the given layout size.
setAtIndex(ValueLayout.OfByte, long, byte)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a byte into this segment at the given index, scaled by the given layout size.
setAtIndex(ValueLayout.OfChar, long, char)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a char into this segment at the given index, scaled by the given layout size.
setAtIndex(ValueLayout.OfDouble, long, double)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a double into this segment at the given index, scaled by the given layout size.
setAtIndex(ValueLayout.OfFloat, long, float)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a float into this segment at the given index, scaled by the given layout size.
setAtIndex(ValueLayout.OfInt, long, int)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes an int into this segment at the given index, scaled by the given layout size.
setAtIndex(ValueLayout.OfLong, long, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a long into this segment at the given index, scaled by the given layout size.
setAtIndex(ValueLayout.OfShort, long, short)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes a short into this segment at the given index, scaled by the given layout size.
setAttribute(int, String, String, String, String, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Set an attribute in the list.
setAttribute(String, Object)
- Method in class com.sun.net.httpserver.
HttpExchange
Filter
modules may store arbitrary objects with
HttpExchange
instances as an out-of-band communication mechanism.
setAttribute(String, Object)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Allows the user to set specific attributes on the underlying
 implementation.
setAttribute(String, Object)
- Method in class javax.xml.transform.
TransformerFactory
Allows the user to set specific attributes on the underlying
 implementation.
setAttribute(String, Object, int)
- Method in interface javax.script.
ScriptContext
Sets the value of an attribute in a given scope.
setAttribute(String, Object, int)
- Method in class javax.script.
SimpleScriptContext
Sets the value of an attribute in a given scope.
setAttribute(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
setAttribute(String, String)
- Method in interface org.w3c.dom.
Element
Adds a new attribute.
setAttribute(Path, String, Object, LinkOption...)
- Static method in class java.nio.file.
Files
Sets the value of a file attribute.
setAttribute(Path, String, Object, LinkOption...)
- Method in class java.nio.file.spi.
FileSystemProvider
Sets the value of a file attribute.
setAttribute(Attribute)
- Method in interface javax.management.
DynamicMBean
Set the value of a specific attribute of the Dynamic MBean.
setAttribute(Attribute)
- Method in class javax.management.modelmbean.
RequiredModelMBean
Sets the value of a specific attribute of a named ModelMBean.
setAttribute(Attribute)
- Method in class javax.management.
StandardMBean
setAttribute(ObjectName, MarshalledObject, Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.setAttribute(ObjectName, Attribute)
.
setAttribute(ObjectName, MarshalledObject, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
setAttribute(ObjectName, MarshalledObject, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
setAttribute(ObjectName, Attribute)
- Method in interface javax.management.
MBeanServer
setAttribute(ObjectName, Attribute)
- Method in interface javax.management.
MBeanServerConnection
Sets the value of a specific attribute of a named MBean.
setAttributeList(AttributeList)
- Method in class org.xml.sax.helpers.
AttributeListImpl
Deprecated.
Set the attribute list, discarding previous contents.
setAttributeNode(Attr)
- Method in class javax.imageio.metadata.
IIOMetadataNode
setAttributeNode(Attr)
- Method in interface org.w3c.dom.
Element
Adds a new attribute node.
setAttributeNodeNS(Attr)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Equivalent to
setAttributeNode(newAttr)
.
setAttributeNodeNS(Attr)
- Method in interface org.w3c.dom.
Element
Adds a new attribute.
setAttributeNS(String, String, String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Equivalent to
setAttribute(qualifiedName, value)
.
setAttributeNS(String, String, String)
- Method in interface org.w3c.dom.
Element
Adds a new attribute.
setAttributes(int, int, AttributeSet)
- Method in interface javax.accessibility.
AccessibleEditableText
Sets attributes for the text between two indices.
setAttributes(int, int, AttributeSet)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Sets attributes for the text between two indices.
setAttributes(int, int, AttributeSet)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Sets attributes for the text between two indices.
setAttributes(AttributeList)
- Method in interface javax.management.
DynamicMBean
Sets the values of several attributes of the Dynamic MBean.
setAttributes(AttributeList)
- Method in class javax.management.modelmbean.
RequiredModelMBean
Sets the values of an array of attributes of this ModelMBean.
setAttributes(AttributeList)
- Method in class javax.management.
StandardMBean
setAttributes(ObjectName, MarshalledObject, Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.setAttributes(ObjectName, AttributeList)
.
setAttributes(ObjectName, MarshalledObject, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
setAttributes(ObjectName, MarshalledObject, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
setAttributes(ObjectName, AttributeList)
- Method in interface javax.management.
MBeanServer
setAttributes(ObjectName, AttributeList)
- Method in interface javax.management.
MBeanServerConnection
Sets the values of several attributes of a named MBean.
setAttributes(Attributes)
- Method in class javax.naming.directory.
SearchResult
Sets the attributes of this search result to
attrs
.
setAttributes(Attributes)
- Method in class org.xml.sax.ext.
Attributes2Impl
Copy an entire Attributes object.
setAttributes(Attributes)
- Method in class org.xml.sax.helpers.
AttributesImpl
Copy an entire Attributes object.
setAuthenticator(Authenticator)
- Method in class com.sun.net.httpserver.
HttpContext
Sets the
Authenticator
for this
HttpContext
.
setAuthenticator(Authenticator)
- Method in class java.net.
HttpURLConnection
Supplies an
Authenticator
to be used
 when authentication is requested through the HTTP protocol for
 this
HttpURLConnection
.
setAuthorityKeyIdentifier(byte[])
- Method in class java.security.cert.
X509CertSelector
Sets the authorityKeyIdentifier criterion.
setAuthorized(boolean)
- Method in class javax.security.sasl.
AuthorizeCallback
Sets whether the authorization is allowed.
setAuthorizedID(String)
- Method in class javax.security.sasl.
AuthorizeCallback
Sets the id of the authorized entity.
setAutoCommit(boolean)
- Method in interface java.sql.
Connection
Sets this connection's auto-commit mode to the given state.
setAutoCommit(boolean)
- Method in interface javax.sql.rowset.
JdbcRowSet
Each
JdbcRowSet
contains a
Connection
object from
 the original
ResultSet
or JDBC properties passed to it.
setAutoConversionStrategy(MethodTypeConversionStrategy)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets an object representing the conversion strategy for automatic type
 conversions.
setAutoCreateColumnsFromModel(boolean)
- Method in class javax.swing.
JTable
Sets this table's
autoCreateColumnsFromModel
flag.
setAutoCreateContainerGaps(boolean)
- Method in class javax.swing.
GroupLayout
Sets whether a gap between the container and components that
 touch the border of the container should automatically be
 created.
setAutoCreateGaps(boolean)
- Method in class javax.swing.
GroupLayout
Sets whether a gap between components should automatically be
 created.
setAutoCreateRowSorter(boolean)
- Method in class javax.swing.
JTable
Specifies whether a
RowSorter
should be created for the
 table whenever its model changes.
setAutoDelay(int)
- Method in class java.awt.
Robot
Sets the number of milliseconds this Robot sleeps after generating an event.
setAutoFormSubmission(boolean)
- Method in class javax.swing.text.html.
HTMLEditorKit
Specifies if an html form submission is processed
 automatically or only
FormSubmitEvent
is fired.
setAutoIncrement(int, boolean)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets whether the designated column is automatically
 numbered, thus read-only, to the given
boolean
value.
setAutoIncrement(int, boolean)
- Method in interface javax.sql.
RowSetMetaData
Sets whether the designated column is automatically numbered,
 The default is for a
RowSet
object's
 columns not to be automatically numbered.
setAutoRequestFocus(boolean)
- Method in class java.awt.
Window
Sets whether this window should receive focus on
 subsequently being shown (with a call to
setVisible(true)
),
 or being moved to the front (with a call to
Window.toFront()
).
setAutoResizeMode(int)
- Method in class javax.swing.
JTable
Sets the table's auto resize mode when the table is resized.
setAutoscrolls(boolean)
- Method in class javax.swing.
JComponent
Sets the
autoscrolls
property.
setAutoWaitForIdle(boolean)
- Method in class java.awt.
Robot
Sets whether this Robot automatically invokes
waitForIdle
after generating an event.
setAxis(int)
- Method in class javax.swing.text.
BoxView
Sets the tile axis property.
setAxis(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setAzimuth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the azimuth property definition in CSS2.
setBackground(Color)
- Method in class com.sun.java.accessibility.util.
Translator
Set the background
Color
of this object.
setBackground(Color)
- Method in class java.awt.
Component.AccessibleAWTComponent
Sets the background color of this object.
setBackground(Color)
- Method in class java.awt.
Component
Sets the background color of this component.
setBackground(Color)
- Method in class java.awt.
Graphics2D
Sets the background color for the
Graphics2D
context.
setBackground(Color)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Set the background color of this object.
setBackground(Color)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Sets the background color of this object.
setBackground(Color)
- Method in class java.awt.
TextComponent
Sets the background color of this text component.
setBackground(Color)
- Method in class java.awt.
Window
Sets the background color of this window.
setBackground(Color)
- Method in interface javax.accessibility.
AccessibleComponent
Sets the background color of this object.
setBackground(Color)
- Method in class javax.swing.
JComponent
Sets the background color of this component.
setBackground(Color)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setBackground(Color)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the background color of this object.
setBackground(Color)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Set the background color of this object.
setBackground(Color)
- Method in class javax.swing.table.
DefaultTableCellRenderer
Overrides
JComponent.setBackground
to assign
 the unselected-background color to the specified color.
setBackground(Color)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setBackground(Color)
- Method in class javax.swing.text.
LabelView
Sets the background color for the view.
setBackground(Color)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Subclassed to map
ColorUIResource
s to null.
setBackground(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background property definition in CSS2.
setBackground(String)
- Method in interface org.w3c.dom.html.
HTMLBodyElement
setBackground(MutableAttributeSet, Color)
- Static method in class javax.swing.text.
StyleConstants
Sets the background color.
setBackgroundAt(int, Color)
- Method in class javax.swing.
JTabbedPane
Sets the background color at
index
to
background
which can be
null
, in which case the tab's background color
 will default to the background color of the
tabbedpane
.
setBackgroundAttachment(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-attachment property definition in CSS2.
setBackgroundColor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-color property definition in CSS2.
setBackgroundImage(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-image property definition in CSS2.
setBackgroundNonSelectionColor(Color)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Sets the background color to be used for non selected nodes.
setBackgroundPosition(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-position property definition in CSS2.
setBackgroundRepeat(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-repeat property definition in CSS2.
setBackgroundSelectionColor(Color)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Sets the color to use for the background if node is selected.
setBackingStoreEnabled(boolean)
- Method in class javax.swing.
JViewport
Deprecated.
As of Java 2 platform v1.3, replaced by
setScrollMode()
.
setBase(URL)
- Method in class javax.swing.text.html.
HTMLDocument
Sets the location to resolve relative URLs against.
setBase(URL)
- Method in class javax.swing.text.html.
StyleSheet
Sets the base.
setBaseFontSize(int)
- Method in class javax.swing.text.html.
StyleSheet
Sets the base font size, with valid values between 1 and 7.
setBaseFontSize(String)
- Method in class javax.swing.text.html.
StyleSheet
Sets the base font size from the passed in String.
setBaseURI(String)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
setBaseURI(String)
- Method in interface javax.xml.crypto.
XMLCryptoContext
Sets the base URI.
setBaseURI(String)
- Method in interface org.w3c.dom.ls.
LSInput
The base URI to be used (see section 5.1.4 in [
IETF RFC 2396
]) for
 resolving a relative
systemId
to an absolute URI.
setBasicConstraints(int)
- Method in class java.security.cert.
X509CertSelector
Sets the basic constraints constraint.
setBasicSplitPaneUI(BasicSplitPaneUI)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Sets the
SplitPaneUI
that is using the receiver.
setBeanContext(BeanContext)
- Method in interface java.beans.beancontext.
BeanContextChild
Objects that implement this interface,
 shall fire a java.beans.PropertyChangeEvent, with parameters:

 propertyName "beanContext", oldValue (the previous nesting
BeanContext
instance, or
null
),
 newValue (the current nesting
BeanContext
instance, or
null
).
setBeanContext(BeanContext)
- Method in class java.beans.beancontext.
BeanContextChildSupport
Sets the
BeanContext
for
 this
BeanContextChildSupport
.
setBeanInfoSearchPath(String[])
- Static method in class java.beans.
Introspector
Change the list of package names that will be used for
          finding BeanInfo classes.
setBeginIndex(int)
- Method in class java.text.
FieldPosition
Sets the begin index.
setBgColor(String)
- Method in interface org.w3c.dom.html.
HTMLBodyElement
setBgColor(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setBgColor(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setBgColor(String)
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
setBidiLevel(MutableAttributeSet, int)
- Static method in class javax.swing.text.
StyleConstants
Sets the BidiLevel.
setBigDecimal(int, BigDecimal)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.math.BigDecimal
value.
setBigDecimal(int, BigDecimal)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.lang.BigDecimal
value.
setBigDecimal(int, BigDecimal)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
java.math.BigDecimal
value.
setBigDecimal(String, BigDecimal)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.math.BigDecimal
value.
setBigDecimal(String, BigDecimal)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.math.BigDecimal
value.
setBigDecimal(String, BigDecimal)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.math.BigDecimal
value.
setBinaryStream()
- Method in interface java.sql.
SQLXML
Retrieves a stream that can be used to write the XML value that this SQLXML instance represents.
setBinaryStream(int, InputStream)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given input stream.
setBinaryStream(int, InputStream)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter in this
RowSet
object's command
 to the given input stream.
setBinaryStream(int, InputStream)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given input stream.
setBinaryStream(int, InputStream, int)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setBinaryStream(int, InputStream, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.io.InputStream
object, which will have the specified number of bytes.
setBinaryStream(int, InputStream, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
java.io.InputStream
value.
setBinaryStream(int, InputStream, long)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setBinaryStream(long)
- Method in interface java.sql.
Blob
Retrieves a stream that can be used to write to the
BLOB
value that this
Blob
object represents.
setBinaryStream(long)
- Method in class javax.sql.rowset.serial.
SerialBlob
Retrieves a stream that can be used to write to the
BLOB
value that this
Blob
object represents.
setBinaryStream(String, InputStream)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given input stream.
setBinaryStream(String, InputStream)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given input stream.
setBinaryStream(String, InputStream)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given input stream.
setBinaryStream(String, InputStream, int)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setBinaryStream(String, InputStream, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setBinaryStream(String, InputStream, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setBinaryStream(String, InputStream, long)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given input stream, which will have
 the specified number of bytes.
setBindings(Bindings)
- Method in class javax.script.
ScriptEngineManager
setBindings
stores the specified
Bindings
in the
globalScope
field.
setBindings(Bindings, int)
- Method in class javax.script.
AbstractScriptEngine
Sets the
Bindings
with the corresponding scope value in the
context
field.
setBindings(Bindings, int)
- Method in interface javax.script.
ScriptContext
Associates a
Bindings
instance with a particular scope in this
ScriptContext
.
setBindings(Bindings, int)
- Method in interface javax.script.
ScriptEngine
Sets a scope of named values to be used by scripts.
setBindings(Bindings, int)
- Method in class javax.script.
SimpleScriptContext
Sets a
Bindings
of attributes for the given scope.
setBit(int)
- Method in class java.math.
BigInteger
Returns a BigInteger whose value is equivalent to this BigInteger
 with the designated bit set.
setBitOffset(int)
- Method in interface javax.imageio.stream.
ImageInputStream
Sets the bit offset to an integer between 0 and 7, inclusive.
setBitOffset(int)
- Method in class javax.imageio.stream.
ImageInputStreamImpl
setBlinkRate(int)
- Method in interface javax.swing.text.
Caret
Sets the blink rate of the caret.
setBlinkRate(int)
- Method in class javax.swing.text.
DefaultCaret
Sets the caret blink rate.
setBlob(int, InputStream)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
InputStream
object.
setBlob(int, InputStream)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
InputStream
object.
setBlob(int, InputStream)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
InputStream
object.
setBlob(int, InputStream, long)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
InputStream
object.
setBlob(int, InputStream, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
InputStream
object.
setBlob(int, InputStream, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
InputStream
object.
setBlob(int, Blob)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Blob
object.
setBlob(int, Blob)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
Blob
object in
 the Java programming language.
setBlob(int, Blob)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with the given
Blob
value.
setBlob(String, InputStream)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to an
InputStream
object.
setBlob(String, InputStream)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
InputStream
object.
setBlob(String, InputStream)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
InputStream
object.
setBlob(String, InputStream, long)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to an
InputStream
object.
setBlob(String, InputStream, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
InputStream
object.
setBlob(String, InputStream, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
InputStream
object.
setBlob(String, Blob)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.Blob
object.
setBlob(String, Blob)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Blob
object.
setBlob(String, Blob)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.Blob
object.
setBlockIncrement(int)
- Method in interface java.awt.
Adjustable
Sets the block value increment for the adjustable object.
setBlockIncrement(int)
- Method in class java.awt.
Scrollbar
Sets the block increment for this scroll bar.
setBlockIncrement(int)
- Method in class java.awt.
ScrollPaneAdjustable
setBlockIncrement(int)
- Method in class javax.swing.
JScrollBar
Sets the blockIncrement property.
setBlockIncrement(int)
- Method in class javax.swing.
JScrollPane.ScrollBar
Messages super to set the value, and resets the
blockIncrementSet
instance variable to true.
setBody(HTMLElement)
- Method in interface org.w3c.dom.html.
HTMLDocument
setBold(MutableAttributeSet, boolean)
- Static method in class javax.swing.text.
StyleConstants
Sets the bold attribute.
setBoolean(int, boolean)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java
boolean
value.
setBoolean(int, boolean)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
boolean
in the
 Java programming language.
setBoolean(int, boolean)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java
boolean
value.
setBoolean(Object, boolean)
- Method in class java.lang.reflect.
Field
Sets the value of a field as a
boolean
on the specified object.
setBoolean(Object, int, boolean)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified
boolean
value.
setBoolean(String, boolean)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java
boolean
value.
setBoolean(String, boolean)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java
boolean
value.
setBoolean(String, boolean)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java
boolean
value.
setBorder(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border property definition in CSS2.
setBorder(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setBorder(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setBorder(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setBorder(Border)
- Method in class javax.swing.border.
TitledBorder
Sets the border of the titled border.
setBorder(Border)
- Method in class javax.swing.
JComponent
Sets the border of this component.
setBorder(Border)
- Method in class javax.swing.
JLayer
Delegates its functionality to the
getView().setBorder(Border)
method,
 if the view component is an instance of
javax.swing.JComponent
,
 otherwise this method is a no-op.
setBorder(Border)
- Method in class javax.swing.
JViewport
The viewport "scrolls" its child (called the "view") by the
 normal parent/child clipping (typically the view is moved in
 the opposite direction of the scroll).
setBorder(Border)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Sets the border of this component.
setBorder(Border)
- Method in class javax.swing.tree.
DefaultTreeCellEditor.DefaultTextField
Sets the border of this component.
setBorderBottom(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-bottom property definition in CSS2.
setBorderBottomColor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-bottom-color property definition in CSS2.
setBorderBottomStyle(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-bottom-style property definition in CSS2.
setBorderBottomWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-bottom-width property definition in CSS2.
setBorderCollapse(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-collapse property definition in CSS2.
setBorderColor(Color)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI.DragWindow
Sets the border color.
setBorderColor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-color property definition in CSS2.
setBorderLeft(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-left property definition in CSS2.
setBorderLeftColor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-left-color property definition in CSS2.
setBorderLeftStyle(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-left-style property definition in CSS2.
setBorderLeftWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-left-width property definition in CSS2.
setBorderPainted(boolean)
- Method in class javax.swing.
AbstractButton
Sets the
borderPainted
property.
setBorderPainted(boolean)
- Method in class javax.swing.
JMenuBar
Sets whether the border should be painted.
setBorderPainted(boolean)
- Method in class javax.swing.
JPopupMenu
Sets whether the border should be painted.
setBorderPainted(boolean)
- Method in class javax.swing.
JProgressBar
Sets the
borderPainted
property, which is
true
if the progress bar should paint its border.
setBorderPainted(boolean)
- Method in class javax.swing.
JToolBar
Sets the
borderPainted
property, which is
true
if the border should be painted.
setBorderPaintedFlat(boolean)
- Method in class javax.swing.
JCheckBox
Sets the
borderPaintedFlat
property,
 which gives a hint to the look and feel as to the
 appearance of the check box border.
setBorderRight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-right property definition in CSS2.
setBorderRightColor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-right-color property definition in CSS2.
setBorderRightStyle(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-right-style property definition in CSS2.
setBorderRightWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-right-width property definition in CSS2.
setBorderSelectionColor(Color)
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Sets the color to use for the border.
setBorderSelectionColor(Color)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Sets the color to use for the border.
setBorderSpacing(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-spacing property definition in CSS2.
setBorderStyle(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-style property definition in CSS2.
setBorderToNonRollover(Component)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the border of the component to have a non-rollover border which
 was created by the
BasicToolBarUI.createNonRolloverBorder()
method.
setBorderToNonRollover(Component)
- Method in class javax.swing.plaf.synth.
SynthToolBarUI
This implementation does nothing, because the
rollover
property of the
JToolBar
class is not used
 in the Synth Look and Feel.
setBorderToNormal(Component)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the border of the component to have a normal border.
setBorderToNormal(Component)
- Method in class javax.swing.plaf.synth.
SynthToolBarUI
This implementation does nothing, because the
rollover
property of the
JToolBar
class is not used
 in the Synth Look and Feel.
setBorderTop(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-top property definition in CSS2.
setBorderTopColor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-top-color property definition in CSS2.
setBorderTopStyle(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-top-style property definition in CSS2.
setBorderTopWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-top-width property definition in CSS2.
setBorderToRollover(Component)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the border of the component to have a rollover border which
 was created by the
BasicToolBarUI.createRolloverBorder()
method.
setBorderToRollover(Component)
- Method in class javax.swing.plaf.synth.
SynthToolBarUI
This implementation does nothing, because the
rollover
property of the
JToolBar
class is not used
 in the Synth Look and Feel.
setBorderWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-width property definition in CSS2.
setBottom(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the bottom property definition in CSS2.
setBottomComponent(Component)
- Method in class javax.swing.
JSplitPane
Sets the component below, or to the right of the divider.
setBottomInset(float)
- Method in class javax.swing.text.
AsyncBoxView
Set the bottom part of the margin around the view.
setBound(boolean)
- Method in class java.beans.
PropertyDescriptor
Updates to "bound" properties will cause a "PropertyChange" event to
 get fired when the property is changed.
setBounds(int, int, int, int)
- Method in class java.awt.
Component
Moves and resizes this component.
setBounds(int, int, int, int)
- Method in class java.awt.
Rectangle
Sets the bounding
Rectangle
of this
Rectangle
to the specified
x
,
y
,
width
,
 and
height
.
setBounds(int, int, int, int)
- Method in class java.awt.
Window
Moves and resizes this component.
setBounds(Rectangle)
- Method in class com.sun.java.accessibility.util.
Translator
Sets the current bounds of this object.
setBounds(Rectangle)
- Method in class java.awt.
Component.AccessibleAWTComponent
Sets the bounds of this object in the form of a
Rectangle
object.
setBounds(Rectangle)
- Method in class java.awt.
Component
Moves and resizes this component to conform to the new
 bounding rectangle
r
.
setBounds(Rectangle)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Sets the bounds of this object in the form of a Rectangle
 object.
setBounds(Rectangle)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Sets the bounds of this object in the form of a
Rectangle
object.
setBounds(Rectangle)
- Method in class java.awt.
Rectangle
Sets the bounding
Rectangle
of this
Rectangle
to match the specified
Rectangle
.
setBounds(Rectangle)
- Method in class java.awt.
Window
Moves and resizes this component to conform to the new
 bounding rectangle
r
.
setBounds(Rectangle)
- Method in interface javax.accessibility.
AccessibleComponent
Sets the bounds of this object in the form of a
Rectangle
object.
setBounds(Rectangle)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setBounds(Rectangle)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
setBounds(Rectangle)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
setBounds(Rectangle)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setBoundsForFrame(JComponent, int, int, int, int)
- Method in class javax.swing.
DefaultDesktopManager
This moves the
JComponent
and repaints the damaged areas.
setBoundsForFrame(JComponent, int, int, int, int)
- Method in interface javax.swing.
DesktopManager
This is a primitive reshape method.
setBreakIterator(BreakIterator)
- Method in class com.sun.source.util.
DocTrees
Sets the break iterator to compute the first sentence of
 documentation comments.
setBroadcast(boolean)
- Method in class java.net.
DatagramSocket
Enable/disable SO_BROADCAST.
setButtonIcons()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
Sets the button icons.
setByte(int, byte)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java
byte
value.
setByte(int, byte)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
byte
in the Java
 programming language.
setByte(int, byte)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java
byte
value.
setByte(Object, byte)
- Method in class java.lang.reflect.
Field
Sets the value of a field as a
byte
on the specified object.
setByte(Object, int, byte)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified
byte
value.
setByte(String, byte)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java
byte
value.
setByte(String, byte)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java
byte
value.
setByte(String, byte)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java
byte
value.
setByteOrder(ByteOrder)
- Method in interface javax.imageio.stream.
ImageInputStream
Sets the desired byte order for future reads of data values
 from this stream.
setByteOrder(ByteOrder)
- Method in class javax.imageio.stream.
ImageInputStreamImpl
setBytes(int, byte[])
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java array of bytes.
setBytes(int, byte[])
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given array of bytes.
setBytes(int, byte[])
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java array of
byte
values.
setBytes(long, byte[])
- Method in interface java.sql.
Blob
Writes the given array of bytes to the
BLOB
value that
 this
Blob
object represents, starting at position
pos
, and returns the number of bytes written.
setBytes(long, byte[])
- Method in class javax.sql.rowset.serial.
SerialBlob
Writes the given array of bytes to the
BLOB
value that
 this
Blob
object represents, starting at position
pos
, and returns the number of bytes written.
setBytes(long, byte[], int, int)
- Method in interface java.sql.
Blob
Writes all or part of the given
byte
array to the
BLOB
value that this
Blob
object represents
 and returns the number of bytes written.
setBytes(long, byte[], int, int)
- Method in class javax.sql.rowset.serial.
SerialBlob
Writes all or part of the given
byte
array to the
BLOB
value that this
Blob
object represents
 and returns the number of bytes written.
setBytes(String, byte[])
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java array of bytes.
setBytes(String, byte[])
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java array of bytes.
setBytes(String, byte[])
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java array of bytes.
setByteStream(InputStream)
- Method in interface org.w3c.dom.ls.
LSInput
An attribute of a language and binding dependent type that represents
 a stream of bytes.
setByteStream(InputStream)
- Method in class org.xml.sax.
InputSource
Set the byte stream for this input source.
setByteStream(OutputStream)
- Method in interface org.w3c.dom.ls.
LSOutput
An attribute of a language and binding dependent type that represents
 a writable stream of bytes.
setCacheDirectory(File)
- Static method in class javax.imageio.
ImageIO
Sets the directory where cache files are to be created.
setCalendar(Calendar)
- Method in class java.text.
DateFormat
Set the calendar to be used by this date format.
setCalendarField(int)
- Method in class javax.swing.
SpinnerDateModel
Changes the size of the date value change computed
 by the
nextValue
and
previousValue
methods.
setCalendarType(String)
- Method in class java.util.
Calendar.Builder
Sets the calendar type parameter to the given
type
.
setCallbackHandler(CallbackHandler)
- Method in class java.security.
AuthProvider
Set a
CallbackHandler
.
setCanWrapLines(boolean)
- Method in class javax.swing.text.
AbstractWriter
Sets whether or not lines can be wrapped.
setCaption(HTMLTableCaptionElement)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setCaptionSide(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the caption-side property definition in CSS2.
setCaret(Caret)
- Method in class javax.swing.text.
JTextComponent
Sets the caret to be used.
setCaretColor(Color)
- Method in class javax.swing.text.
JTextComponent
Sets the current color used to render the caret.
setCaretPosition(int)
- Method in class java.awt.
TextComponent
Sets the position of the text insertion caret.
setCaretPosition(int)
- Method in class javax.swing.text.
JTextComponent
Sets the position of the text insertion caret for the
TextComponent
.
setCaseSensitive(int, boolean)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets whether the name of the designated column is case sensitive to
 the given
boolean
.
setCaseSensitive(int, boolean)
- Method in interface javax.sql.
RowSetMetaData
Sets whether the designated column is case sensitive.
setCatalog(String)
- Method in interface java.sql.
Connection
Sets the given catalog name in order to select
 a subspace of this
Connection
object's database
 in which to work.
setCatalogName(int, String)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the catalog name of the table from which the designated
 column was derived to
catalogName
.
setCatalogName(int, String)
- Method in interface javax.sql.
RowSetMetaData
Sets the designated column's table's catalog name, if any, to the given
String
.
setCellEditor(TableCellEditor)
- Method in class javax.swing.
JTable
Sets the active cell editor.
setCellEditor(TableCellEditor)
- Method in class javax.swing.table.
TableColumn
Sets the editor to used by when a cell in this column is edited.
setCellEditor(TreeCellEditor)
- Method in class javax.swing.
JTree
Sets the cell editor.
setCellEditor(TreeCellEditor)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the cell editor.
setCellLength(int)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Sets the cell length.
setCellPadding(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setCellRenderer(ListCellRenderer<? super E>)
- Method in class javax.swing.
JList
Sets the delegate that is used to paint each cell in the list.
setCellRenderer(TableCellRenderer)
- Method in class javax.swing.table.
TableColumn
Sets the
TableCellRenderer
used by
JTable
to draw individual values for this column.
setCellRenderer(TreeCellRenderer)
- Method in class javax.swing.
JTree
Sets the
TreeCellRenderer
that will be used to
 draw each cell.
setCellRenderer(TreeCellRenderer)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the
TreeCellRenderer
to
tcr
.
setCellSelectionEnabled(boolean)
- Method in class javax.swing.
JTable
Sets whether this table allows both a column selection and a
 row selection to exist simultaneously.
setCellSpacing(int)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Sets the cell spacing.
setCellSpacing(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setCentersChildren(boolean)
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonAreaLayout
Sets whether or not center children should be used.
setCertificate(X509Certificate)
- Method in class java.security.cert.
X509CertSelector
Sets the certificateEquals criterion.
setCertificateChecking(X509Certificate)
- Method in class java.security.cert.
X509CRLSelector
Sets the certificate being checked.
setCertificateEntry(String, Certificate)
- Method in class java.security.
KeyStore
Assigns the given trusted certificate to the given alias.
setCertificateValid(Date)
- Method in class java.security.cert.
X509CertSelector
Sets the certificateValid criterion.
setCertifiedText(boolean)
- Method in interface org.w3c.dom.ls.
LSInput
If set to true, assume that the input is certified (see section 2.13
 in [
XML 1.1
]) when
 parsing [
XML 1.1
].
setCertPathCheckers(List<PKIXCertPathChecker>)
- Method in class java.security.cert.
PKIXParameters
Sets a
List
of additional certification path checkers.
setCertStores(List<CertStore>)
- Method in class java.security.cert.
PKIXParameters
Sets the list of
CertStore
s to be used in finding
 certificates and CRLs.
setCh(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setCh(String)
- Method in interface org.w3c.dom.html.
HTMLTableColElement
setCh(String)
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
setCh(String)
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
setChanged()
- Method in class java.util.
Observable
Deprecated.
Marks this
Observable
object as having been changed; the
hasChanged
method will now return
true
.
setChannelBinding(ChannelBinding)
- Method in interface org.ietf.jgss.
GSSContext
Sets the channel bindings to be used during context
 establishment.
setChannelPressure(int)
- Method in interface javax.sound.midi.
MidiChannel
Reacts to a change in the keyboard pressure.
setChar(Object, char)
- Method in class java.lang.reflect.
Field
Sets the value of a field as a
char
on the specified object.
setChar(Object, int, char)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified
char
value.
setCharacterAttributes(int, int, AttributeSet, boolean)
- Method in class javax.swing.text.
DefaultStyledDocument
Sets attributes for some part of the document.
setCharacterAttributes(int, int, AttributeSet, boolean)
- Method in interface javax.swing.text.
StyledDocument
Changes the content element attributes used for the given range of
 existing content in the document.
setCharacterAttributes(JEditorPane, AttributeSet, boolean)
- Method in class javax.swing.text.
StyledEditorKit.StyledTextAction
Applies the given attributes to character
 content.
setCharacterAttributes(AttributeSet, boolean)
- Method in class javax.swing.
JTextPane
Applies the given attributes to character
 content.
setCharacterStream()
- Method in interface java.sql.
SQLXML
Retrieves a stream to be used to write the XML value that this SQLXML instance represents.
setCharacterStream(int, Reader)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
Reader
object.
setCharacterStream(int, Reader)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
Reader
object.
setCharacterStream(int, Reader)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
Reader
object.
setCharacterStream(int, Reader, int)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
Reader
object, which is the given number of characters long.
setCharacterStream(int, Reader, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.io.Reader
object, which will have the specified number of characters.
setCharacterStream(int, Reader, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
java.io.Reader
value.
setCharacterStream(int, Reader, long)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
Reader
object, which is the given number of characters long.
setCharacterStream(long)
- Method in interface java.sql.
Clob
Retrieves a stream to be used to write a stream of Unicode characters
 to the
CLOB
value that this
Clob
object
 represents, at position
pos
.
setCharacterStream(long)
- Method in class javax.sql.rowset.serial.
SerialClob
Retrieves a stream to be used to write a stream of Unicode characters
 to the
CLOB
value that this
SerialClob
object
 represents, at position
pos
.
setCharacterStream(Reader)
- Method in interface org.w3c.dom.ls.
LSInput
An attribute of a language and binding dependent type that represents
 a stream of 16-bit units.
setCharacterStream(Reader)
- Method in class org.xml.sax.
InputSource
Set the character stream for this input source.
setCharacterStream(Writer)
- Method in interface org.w3c.dom.ls.
LSOutput
An attribute of a language and binding dependent type that represents
 a writable stream to which 16-bit units can be output.
setCharacterStream(String, Reader)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
Reader
object.
setCharacterStream(String, Reader)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
Reader
object.
setCharacterStream(String, Reader)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
Reader
object.
setCharacterStream(String, Reader, int)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
Reader
object, which is the given number of characters long.
setCharacterStream(String, Reader, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
Reader
object, which is the given number of characters long.
setCharacterStream(String, Reader, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
Reader
object, which is the given number of characters long.
setCharacterStream(String, Reader, long)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
Reader
object, which is the given number of characters long.
setCharacterSubsets(Character.Subset[])
- Method in class java.awt.im.
InputContext
Sets the subsets of the Unicode character set that input methods of this input
 context should be allowed to input.
setCharacterSubsets(Character.Subset[])
- Method in interface java.awt.im.spi.
InputMethod
Sets the subsets of the Unicode character set that this input method
 is allowed to input.
setCharAt(int, char)
- Method in class java.lang.
StringBuilder
The character at the specified index is set to
ch
.
setCharAt(int, char)
- Method in class java.lang.
StringBuffer
setCharset(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setCharset(String)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setCharset(String)
- Method in interface org.w3c.dom.html.
HTMLScriptElement
setCheckboxGroup(CheckboxGroup)
- Method in class java.awt.
Checkbox
Sets this check box's group to the specified check box group.
setChecked(boolean)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setChOff(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setChOff(String)
- Method in interface org.w3c.dom.html.
HTMLTableColElement
setChOff(String)
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
setChOff(String)
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
setChoices(double[], String[])
- Method in class java.text.
ChoiceFormat
Set the choices to be used in formatting.
setChooserPanels(AbstractColorChooserPanel[])
- Method in class javax.swing.
JColorChooser
Specifies the Color Panels used to choose a color value.
setChunkedStreamingMode(int)
- Method in class java.net.
HttpURLConnection
This method is used to enable streaming of a HTTP request body
 without internal buffering, when the content length is
not
known in advance.
setCipherSuites(String[])
- Method in class com.sun.net.httpserver.
HttpsParameters
Sets the array of ciphersuites.
setCipherSuites(String[])
- Method in class javax.net.ssl.
SSLParameters
Sets the array of ciphersuites.
setCite(String)
- Method in interface org.w3c.dom.html.
HTMLModElement
setCite(String)
- Method in interface org.w3c.dom.html.
HTMLQuoteElement
setClassAssertionStatus(String, boolean)
- Method in class java.lang.
ClassLoader
Sets the desired assertion status for the named top-level class in this
 class loader and any nested classes contained therein.
setClassLoader(ClassLoader)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets the class loader for automatic discovery of available guarding
 dynamic linkers.
setClassName(String)
- Method in class javax.naming.
NameClassPair
Sets the class name of this binding.
setClassName(String)
- Method in interface org.w3c.dom.html.
HTMLElement
setClear(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the clear property definition in CSS2.
setClear(String)
- Method in interface org.w3c.dom.html.
HTMLBRElement
setClickCountToStart(int)
- Method in class javax.swing.
DefaultCellEditor
Specifies the number of clicks needed to start editing.
setClientInfo(String, String)
- Method in interface java.sql.
Connection
Sets the value of the client info property specified by name to the
 value specified by value.
setClientInfo(Properties)
- Method in interface java.sql.
Connection
Sets the value of the connection's client info properties.
setClip(int, int, int, int)
- Method in class java.awt.
Graphics
Sets the current clip to the rectangle specified by the given
 coordinates.
setClip(int, int, int, int)
- Method in class javax.swing.
DebugGraphics
Overrides
Graphics.setClip
.
setClip(Shape)
- Method in class java.awt.
Graphics
Sets the current clipping area to an arbitrary clip shape.
setClip(Shape)
- Method in class javax.swing.
DebugGraphics
Overrides
Graphics.setClip
.
setClip(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the clip property definition in CSS2.
setClob(int, Reader)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
Reader
object.
setClob(int, Reader)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setClob(int, Reader)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setClob(int, Reader, long)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
Reader
object.
setClob(int, Reader, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setClob(int, Reader, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setClob(int, Clob)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Clob
object.
setClob(int, Clob)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
Clob
object in
 the Java programming language.
setClob(int, Clob)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with the given
Clob
value.
setClob(String, Reader)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to a
Reader
object.
setClob(String, Reader)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setClob(String, Reader)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setClob(String, Reader, long)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to a
Reader
object.
setClob(String, Reader, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setClob(String, Reader, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setClob(String, Clob)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.Clob
object.
setClob(String, Clob)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Clob
object.
setClob(String, Clob)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.Clob
object.
setClosable(boolean)
- Method in class javax.swing.
JInternalFrame
Sets whether this
JInternalFrame
can be closed by
 some user action.
setClosed(boolean)
- Method in class javax.swing.
JInternalFrame
Closes this internal frame if the argument is
true
.
setClosedIcon(Icon)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Sets the icon used to represent non-leaf nodes that are not expanded.
setCoalesce(boolean)
- Method in class javax.swing.
Timer
Sets whether the
Timer
coalesces multiple pending
ActionEvent
firings.
setCoalescing(boolean)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Specifies that the parser produced by this code will
 convert CDATA nodes to Text nodes and append it to the
 adjacent (if any) text node.
setCode(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setCode(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setCodeBase(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setCodeBase(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setCodeType(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setCollapsedIcon(Icon)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the collapsed icon.
setCollectionUsageThreshold(long)
- Method in interface java.lang.management.
MemoryPoolMXBean
Sets the collection usage threshold of this memory pool to
 the given
threshold
value.
setColor(int)
- Method in class javax.swing.
JColorChooser
Sets the current color of the color chooser to the
 specified color.
setColor(int, int, int)
- Method in class javax.swing.
JColorChooser
Sets the current color of the color chooser to the
 specified RGB color.
setColor(Color)
- Method in class java.awt.
Graphics
Sets this graphics context's current color to the specified
 color.
setColor(Color)
- Method in class javax.swing.
DebugGraphics
Sets the color to be used for drawing and filling lines and shapes.
setColor(Color)
- Method in class javax.swing.
JColorChooser
Sets the current color of the color chooser to the specified color.
setColor(PageAttributes.ColorType)
- Method in class java.awt.
PageAttributes
Specifies whether pages using these attributes will be rendered in
 color or monochrome.
setColor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the color property definition in CSS2.
setColor(String)
- Method in interface org.w3c.dom.html.
HTMLBaseFontElement
setColor(String)
- Method in interface org.w3c.dom.html.
HTMLFontElement
setColorModel(ColorModel)
- Method in class java.awt.image.
BufferedImageFilter
Filters the information provided in the
setColorModel
method
 of the
ImageConsumer
interface.
setColorModel(ColorModel)
- Method in interface java.awt.image.
ImageConsumer
Sets the ColorModel object used for the majority of
 the pixels reported using the setPixels method
 calls.
setColorModel(ColorModel)
- Method in class java.awt.image.
ImageFilter
Filter the information provided in the setColorModel method
 of the ImageConsumer interface.
setColorModel(ColorModel)
- Method in class java.awt.image.
PixelGrabber
The setColorModel method is part of the ImageConsumer API which
 this class must implement to retrieve the pixels.
setColorModel(ColorModel)
- Method in class java.awt.image.
RGBImageFilter
If the ColorModel is an IndexColorModel and the subclass has
 set the canFilterIndexColorModel flag to true, we substitute
 a filtered version of the color model here and wherever
 that original ColorModel object appears in the setPixels methods.
setColorTransparencySelectionEnabled(boolean)
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Sets whether color chooser panel allows to select the transparency
 (alpha value) of a color.
setCols(int)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setCols(String)
- Method in interface org.w3c.dom.html.
HTMLFrameSetElement
setColSpan(int)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setColumnCount(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets to the given number the number of columns in the
RowSet
object for which this
RowSetMetaDataImpl
object was created.
setColumnCount(int)
- Method in interface javax.sql.
RowSetMetaData
Sets the number of columns in the
RowSet
object to
 the given number.
setColumnCount(int)
- Method in class javax.swing.table.
DefaultTableModel
Sets the number of columns in the model.
setColumnDisplaySize(int, int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the normal maximum number of chars in the designated column
 to the given number.
setColumnDisplaySize(int, int)
- Method in interface javax.sql.
RowSetMetaData
Sets the designated column's normal maximum width in chars to the
 given
int
.
setColumnHeader(JViewport)
- Method in class javax.swing.
JScrollPane
Removes the old columnHeader, if it exists; if the new columnHeader
 isn't
null
, syncs the x coordinate of its viewPosition
 with the viewport (if there is one) and then adds it to the scroll pane.
setColumnHeaderView(Component)
- Method in class javax.swing.
JScrollPane
Creates a column-header viewport if necessary, sets
 its view, and then adds the column-header viewport
 to the scrollpane.
setColumnIdentifiers(Object[])
- Method in class javax.swing.table.
DefaultTableModel
Replaces the column identifiers in the model.
setColumnIdentifiers(Vector<?>)
- Method in class javax.swing.table.
DefaultTableModel
Replaces the column identifiers in the model.
setColumnLabel(int, String)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the suggested column label for use in printouts and
 displays, if any, to
label
.
setColumnLabel(int, String)
- Method in interface javax.sql.
RowSetMetaData
Sets the suggested column title for use in printouts and
 displays, if any, to the given
String
.
setColumnMargin(int)
- Method in class javax.swing.table.
DefaultTableColumnModel
Sets the column margin to
newMargin
.
setColumnMargin(int)
- Method in interface javax.swing.table.
TableColumnModel
Sets the
TableColumn
's column margin to
newMargin
.
setColumnModel(TableColumnModel)
- Method in class javax.swing.
JTable
Sets the column model for this table to
columnModel
and registers
 for listener notifications from the new column model.
setColumnModel(TableColumnModel)
- Method in class javax.swing.table.
JTableHeader
Sets the column model for this table to
newModel
and registers
  for listener notifications from the new column model.
setColumnName(int, String)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the column name of the designated column to the given name.
setColumnName(int, String)
- Method in interface javax.sql.
RowSetMetaData
Sets the name of the designated column to the given
String
.
setColumnNumber(int)
- Method in class org.xml.sax.helpers.
LocatorImpl
Set the column number for this locator (1-based).
setColumns(int)
- Method in class java.awt.
GridLayout
Sets the number of columns in this layout to the specified value.
setColumns(int)
- Method in class java.awt.
TextArea
Sets the number of columns for this text area.
setColumns(int)
- Method in class java.awt.
TextField
Sets the number of columns in this text field.
setColumns(int)
- Method in class javax.swing.
JTextArea
Sets the number of columns for this TextArea.
setColumns(int)
- Method in class javax.swing.
JTextField
Sets the number of columns in this
TextField
,
 and then invalidate the layout.
setColumnSelectionAllowed(boolean)
- Method in class javax.swing.
JTable
Sets whether the columns in this model can be selected.
setColumnSelectionAllowed(boolean)
- Method in class javax.swing.table.
DefaultTableColumnModel
Sets whether column selection is allowed.
setColumnSelectionAllowed(boolean)
- Method in interface javax.swing.table.
TableColumnModel
Sets whether the columns in this model may be selected.
setColumnSelectionInterval(int, int)
- Method in class javax.swing.
JTable
Selects the columns from
index0
to
index1
,
 inclusive.
setColumnType(int, int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the SQL type code for values stored in the designated column
 to the given type code from the class
java.sql.Types
.
setColumnType(int, int)
- Method in interface javax.sql.
RowSetMetaData
Sets the designated column's SQL type to the one given.
setColumnTypeName(int, String)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the type name used by the data source for values stored in the
 designated column to the given type name.
setColumnTypeName(int, String)
- Method in interface javax.sql.
RowSetMetaData
Sets the designated column's type name that is specific to the
 data source, if any, to the given
String
.
setComboBox(JComboBox<Object>)
- Method in class javax.swing.plaf.metal.
MetalComboBoxButton
Sets the
JComboBox
.
setComboIcon(Icon)
- Method in class javax.swing.plaf.metal.
MetalComboBoxButton
Sets the icon of the
JComboBox
.
setCommand(String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets this
RowSet
object's
command
property to
 the given
String
object and clears the parameters, if any,
 that were set for the previous command.
setCommand(String)
- Method in interface javax.sql.
RowSet
Sets this
RowSet
object's command property to the given
 SQL query.
setComment(String)
- Method in class java.net.
HttpCookie
Specifies a comment that describes a cookie's purpose.
setComment(String)
- Method in class java.util.zip.
ZipEntry
Sets the optional comment string for the entry.
setComment(String)
- Method in class java.util.zip.
ZipOutputStream
Sets the ZIP file comment.
setCommentURL(String)
- Method in class java.net.
HttpCookie
Specifies a comment URL that describes a cookie's purpose.
setCommitsOnValidEdit(boolean)
- Method in class javax.swing.text.
DefaultFormatter
Sets when edits are published back to the
JFormattedTextField
.
setCompact(boolean)
- Method in interface org.w3c.dom.html.
HTMLDirectoryElement
setCompact(boolean)
- Method in interface org.w3c.dom.html.
HTMLDListElement
setCompact(boolean)
- Method in interface org.w3c.dom.html.
HTMLMenuElement
setCompact(boolean)
- Method in interface org.w3c.dom.html.
HTMLOListElement
setCompact(boolean)
- Method in interface org.w3c.dom.html.
HTMLUListElement
setComparator(int, Comparator<?>)
- Method in class javax.swing.
DefaultRowSorter
Sets the
Comparator
to use when sorting the specified
 column.
setComparator(Comparator<? super Component>)
- Method in class javax.swing.
SortingFocusTraversalPolicy
Sets the Comparator which will be used to sort the Components in a
 focus traversal cycle.
setComponent(Component)
- Method in class java.awt.dnd.
DragGestureRecognizer
set the Component that the DragGestureRecognizer is associated with

 registerListeners() and unregisterListeners() are called as a side
 effect as appropriate.
setComponent(Component)
- Method in class java.awt.dnd.
DropTarget
Note: this interface is required to permit the safe association
 of a DropTarget with a Component in one of two ways, either:
component.setDropTarget(droptarget);
or
droptarget.setComponent(component);
setComponent(JComponent)
- Method in class javax.swing.
JToolTip
Specifies the component that the tooltip describes.
setComponent(MutableAttributeSet, Component)
- Static method in class javax.swing.text.
StyleConstants
Sets the component attribute.
setComponentAt(int, Component)
- Method in class javax.swing.
JTabbedPane
Sets the component at
index
to
component
.
setComponentOrientation(ComponentOrientation)
- Method in class java.awt.
Component
Sets the language-sensitive orientation that is to be used to order
 the elements or text within this component.
setComponentOrientation(ComponentOrientation)
- Method in class javax.swing.
JMenu
Sets the orientation for this menu and its associated popup menu
 determined by the
ComponentOrientation
argument.
setComponentOrientation(ComponentOrientation)
- Method in class javax.swing.
JScrollPane
Sets the orientation for the vertical and horizontal
 scrollbars as determined by the
ComponentOrientation
argument.
setComponentPopupMenu(JPopupMenu)
- Method in class javax.swing.
JComponent
Sets the
JPopupMenu
for this
JComponent
.
setComponentToSize(Component, int, int, Insets, Dimension)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Sets the width of the component
c
to be
size
, placing its
 x location at
location
, y to the
insets.top
and height
 to the
containerSize.height
less the top and bottom insets.
setComponentZOrder(Component, int)
- Method in class java.awt.
Container
Moves the specified component to the specified z-order index in
 the container.
setComponentZOrder(Component, int)
- Method in class javax.swing.
JDesktopPane
Moves the specified component to the specified z-order index in
 the container.
setComposite(Composite)
- Method in class java.awt.
Graphics2D
Sets the
Composite
for the
Graphics2D
context.
setCompositionEnabled(boolean)
- Method in class java.awt.im.
InputContext
Enables or disables the current input method for composition,
 depending on the value of the parameter
enable
.
setCompositionEnabled(boolean)
- Method in interface java.awt.im.spi.
InputMethod
Enables or disables this input method for composition,
 depending on the value of the parameter
enable
.
setCompressedSize(long)
- Method in class java.util.zip.
ZipEntry
Sets the size of the compressed entry data.
setCompressionMode(int)
- Method in class javax.imageio.
ImageWriteParam
Specifies whether compression is to be performed, and if so how
 compression parameters are to be determined.
setCompressionQuality(float)
- Method in class javax.imageio.
ImageWriteParam
Sets the compression quality to a value between
0
and
1
.
setCompressionType(String)
- Method in class javax.imageio.
ImageWriteParam
Sets the compression type to one of the values indicated by
getCompressionTypes
.
setConcurrency(int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the concurrency for this
RowSet
object to
 the specified concurrency.
setConcurrency(int)
- Method in interface javax.sql.
RowSet
Sets the concurrency of this
RowSet
object to the given
 concurrency level.
setConfiguration(long, String)
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Sets a configuration as a string representation for the recording with the
 specified ID.
setConfiguration(Configuration)
- Static method in class javax.security.auth.login.
Configuration
Set the login
Configuration
.
setConnectTimeout(int)
- Method in class java.net.
URLConnection
Sets a specified timeout value, in milliseconds, to be used
 when opening a communications link to the resource referenced
 by this URLConnection.
setConstrained(boolean)
- Method in class java.beans.
PropertyDescriptor
Attempted updates to "Constrained" properties will cause a "VetoableChange"
 event to get fired when the property is changed.
setConstraint(String, Spring)
- Method in class javax.swing.
SpringLayout.Constraints
Sets the spring controlling the specified edge.
setConstraints(Component, GridBagConstraints)
- Method in class java.awt.
GridBagLayout
Sets the constraints for the specified component in this layout.
setContent(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the content property definition in CSS2.
setContent(String)
- Method in interface org.w3c.dom.html.
HTMLMetaElement
setContentAreaFilled(boolean)
- Method in class javax.swing.
AbstractButton
Sets the
contentAreaFilled
property.
setContentHandler(ContentHandler)
- Method in class javax.xml.validation.
ValidatorHandler
Sets the
ContentHandler
which receives
 the augmented validation result.
setContentHandler(ContentHandler)
- Method in class org.xml.sax.helpers.
ParserAdapter
Set the content handler.
setContentHandler(ContentHandler)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Set the content event handler.
setContentHandler(ContentHandler)
- Method in interface org.xml.sax.
XMLReader
Allow an application to register a content event handler.
setContentHandlerFactory(ContentHandlerFactory)
- Static method in class java.net.
URLConnection
Sets the
ContentHandlerFactory
of an
 application.
setContentPane(Container)
- Method in class javax.swing.
JApplet
Deprecated.
Sets the contentPane property.
setContentPane(Container)
- Method in class javax.swing.
JDialog
Sets the
contentPane
property.
setContentPane(Container)
- Method in class javax.swing.
JFrame
Sets the
contentPane
property.
setContentPane(Container)
- Method in class javax.swing.
JInternalFrame
Sets this
JInternalFrame
's
contentPane
property.
setContentPane(Container)
- Method in class javax.swing.
JRootPane
Sets the content pane -- the container that holds the components
 parented by the root pane.
setContentPane(Container)
- Method in class javax.swing.
JWindow
Sets the
contentPane
property for this window.
setContentPane(Container)
- Method in interface javax.swing.
RootPaneContainer
The "contentPane" is the primary container for application
 specific components.
setContents(Transferable, ClipboardOwner)
- Method in class java.awt.datatransfer.
Clipboard
Sets the current contents of the clipboard to the specified transferable
 object and registers the specified clipboard owner as the owner of the
 new contents.
setContentType(String)
- Method in class javax.swing.
JEditorPane
Sets the type of content that this editor
 handles.
setContext(JConsoleContext)
- Method in class com.sun.tools.jconsole.
JConsolePlugin
Sets the
JConsoleContext
object representing
 the connection to an application.
setContext(ScriptContext)
- Method in class javax.script.
AbstractScriptEngine
Sets the value of the protected
context
field to the specified
ScriptContext
.
setContext(ScriptContext)
- Method in interface javax.script.
ScriptEngine
Sets the default
ScriptContext
of the
ScriptEngine
whose Bindings, Reader
 and Writers are used for script executions when no
ScriptContext
is specified.
setContextClassLoader(ClassLoader)
- Method in class java.lang.
Thread
Sets the context
ClassLoader
for this thread.
setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Sets the policy on whether to continue executing existing
 periodic tasks even when this executor has been
shutdown
.
setContinuousLayout(boolean)
- Method in class javax.swing.
JSplitPane
Sets the value of the
continuousLayout
property,
 which must be
true
for the child components
 to be continuously
 redisplayed and laid out during user intervention.
setContinuousLayout(boolean)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Turn continuous layout on/off.
setControlButtonsAreShown(boolean)
- Method in class javax.swing.
JFileChooser
Sets the property
 that indicates whether the
approve
and
cancel
buttons are shown in the file chooser.
setController(IIOParamController)
- Method in class javax.imageio.
IIOParam
Sets the
IIOParamController
to be used
 to provide settings for this
IIOParam
object when the
activateController
method
 is called, overriding any default controller.
setController(IIOMetadataController)
- Method in class javax.imageio.metadata.
IIOMetadata
Sets the
IIOMetadataController
to be used
 to provide settings for this
IIOMetadata
object when the
activateController
method
 is called, overriding any default controller.
setCookie(String)
- Method in interface org.w3c.dom.html.
HTMLDocument
setCookiePolicy(CookiePolicy)
- Method in class java.net.
CookieManager
To set the cookie policy of this cookie manager.
setCoords(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setCoords(String)
- Method in interface org.w3c.dom.html.
HTMLAreaElement
setCopies(int)
- Method in class java.awt.
JobAttributes
Specifies the number of copies the application should render for jobs
 using these attributes.
setCopies(int)
- Method in class java.awt.print.
PrinterJob
Sets the number of copies to be printed.
setCopiesToDefault()
- Method in class java.awt.
JobAttributes
Sets the number of copies the application should render for jobs using
 these attributes to the default.
setCorePoolSize(int)
- Method in class java.util.concurrent.
ThreadPoolExecutor
Sets the core number of threads.
setCorner(String, Component)
- Method in class javax.swing.
JScrollPane
Adds a child that will appear in one of the scroll panes
 corners, if there's room.
setCounterIncrement(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the counter-increment property definition in CSS2.
setCounterReset(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the counter-reset property definition in CSS2.
setCountLimit(long)
- Method in class javax.naming.directory.
SearchControls
Sets the maximum number of entries to be returned
 as a result of the search.
setCrc(long)
- Method in class java.util.zip.
ZipEntry
Sets the CRC-32 checksum of the uncompressed entry data.
setCreationTime(FileTime)
- Method in class java.util.zip.
ZipEntry
Sets the creation time of the entry.
setCssFloat(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the float property definition in CSS2.
setCssText(String)
- Method in interface org.w3c.dom.css.
CSSRule
The parsable textual representation of the rule.
setCssText(String)
- Method in interface org.w3c.dom.css.
CSSStyleDeclaration
The parsable textual representation of the declaration block
 (excluding the surrounding curly braces).
setCssText(String)
- Method in interface org.w3c.dom.css.
CSSValue
A string representation of the current value.
setCue(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the cue property definition in CSS2.
setCueAfter(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the cue-after property definition in CSS2.
setCueBefore(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the cue-before property definition in CSS2.
setCurrency(int, boolean)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets whether a value stored in the designated column is a cash
 value to the given
boolean
.
setCurrency(int, boolean)
- Method in interface javax.sql.
RowSetMetaData
Sets whether the designated column is a cash value.
setCurrency(Currency)
- Method in class java.text.
DecimalFormat
Sets the currency used by this number format when formatting
 currency values.
setCurrency(Currency)
- Method in class java.text.
DecimalFormatSymbols
Sets the currency of these DecimalFormatSymbols.
setCurrency(Currency)
- Method in class java.text.
NumberFormat
Sets the currency used by this number format when formatting
 currency values.
setCurrencySymbol(String)
- Method in class java.text.
DecimalFormatSymbols
Sets the currency symbol for the currency of these
 DecimalFormatSymbols in their locale.
setCurrent(Checkbox)
- Method in class java.awt.
CheckboxGroup
Deprecated.
As of JDK version 1.1,
 replaced by
setSelectedCheckbox(Checkbox)
.
setCurrentAccessibleValue(Number)
- Method in class java.awt.
Button.AccessibleAWTButton
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class java.awt.
Scrollbar.AccessibleAWTScrollBar
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in interface javax.accessibility.
AccessibleValue
Set the value of this object as a
Number
.
setCurrentAccessibleValue(Number)
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class javax.swing.
JInternalFrame.AccessibleJInternalFrame
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class javax.swing.
JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon
Sets the value of this object as a
Number
.
setCurrentAccessibleValue(Number)
- Method in class javax.swing.
JProgressBar.AccessibleJProgressBar
Sets the value of this object as a
Number
.
setCurrentAccessibleValue(Number)
- Method in class javax.swing.
JScrollBar.AccessibleJScrollBar
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class javax.swing.
JSlider.AccessibleJSlider
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Set the value of this object as a Number.
setCurrentAccessibleValue(Number)
- Method in class javax.swing.
JSplitPane.AccessibleJSplitPane
Sets the value of this object as a Number.
setCurrentBlocker(Object)
- Static method in class java.util.concurrent.locks.
LockSupport
Sets the object to be returned by invocations of
getBlocker
for the current thread.
setCurrentDirectory(File)
- Method in class javax.swing.
JFileChooser
Sets the current directory.
setCurrentKeyboardFocusManager(KeyboardFocusManager)
- Static method in class java.awt.
KeyboardFocusManager
Sets the current KeyboardFocusManager instance for the calling thread's
 context.
setCurrentLineLength(int)
- Method in class javax.swing.text.
AbstractWriter
Sets the current line length.
setCurrentManager(FocusManager)
- Static method in class javax.swing.
FocusManager
Sets the current
KeyboardFocusManager
instance
 for the calling thread's context.
setCurrentManager(RepaintManager)
- Static method in class javax.swing.
RepaintManager
Set the RepaintManager that should be used for the calling
 thread.
setCurrentNode(Node)
- Method in interface org.w3c.dom.traversal.
TreeWalker
The node at which the
TreeWalker
is currently positioned.
setCurrentTheme(MetalTheme)
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Set the theme used by
MetalLookAndFeel
.
setCursor(int)
- Method in class java.awt.
Frame
Deprecated.
As of JDK version 1.1,
 replaced by
Component.setCursor(Cursor)
.
setCursor(Cursor)
- Method in class com.sun.java.accessibility.util.
Translator
Set the
Cursor
of this object.
setCursor(Cursor)
- Method in class java.awt.
Component.AccessibleAWTComponent
Sets the
Cursor
of this object.
setCursor(Cursor)
- Method in class java.awt.
Component
Sets the cursor image to the specified cursor.
setCursor(Cursor)
- Method in class java.awt.dnd.
DragSourceContext
Sets the custom cursor for this drag operation to the specified
Cursor
.
setCursor(Cursor)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Set the Cursor of this object.
setCursor(Cursor)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Sets the
Cursor
of this object.
setCursor(Cursor)
- Method in class java.awt.
Window
Set the cursor image to a specified cursor.
setCursor(Cursor)
- Method in interface javax.accessibility.
AccessibleComponent
Sets the cursor of this object.
setCursor(Cursor)
- Method in class javax.swing.
JInternalFrame
Sets the cursor image to the specified cursor.
setCursor(Cursor)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setCursor(Cursor)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the
Cursor
of this object.
setCursor(Cursor)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
setCursor(Cursor)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setCursor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the cursor property definition in CSS2.
setCursorName(String)
- Method in interface java.sql.
Statement
Sets the SQL cursor name to the given
String
, which
 will be used by subsequent
Statement
object
execute
methods.
setCurve(double[], int)
- Method in class java.awt.geom.
CubicCurve2D
Sets the location of the end points and control points of this curve
 to the double coordinates at the specified offset in the specified
 array.
setCurve(double[], int)
- Method in class java.awt.geom.
QuadCurve2D
Sets the location of the end points and control points of this
QuadCurve2D
to the
double
coordinates at
 the specified offset in the specified array.
setCurve(double, double, double, double, double, double)
- Method in class java.awt.geom.
QuadCurve2D.Double
Sets the location of the end points and control point of this curve
 to the specified
double
coordinates.
setCurve(double, double, double, double, double, double)
- Method in class java.awt.geom.
QuadCurve2D.Float
Sets the location of the end points and control point of this curve
 to the specified
double
coordinates.
setCurve(double, double, double, double, double, double)
- Method in class java.awt.geom.
QuadCurve2D
Sets the location of the end points and control point of this curve
 to the specified
double
coordinates.
setCurve(double, double, double, double, double, double, double, double)
- Method in class java.awt.geom.
CubicCurve2D.Double
Sets the location of the end points and control points of this curve
 to the specified double coordinates.
setCurve(double, double, double, double, double, double, double, double)
- Method in class java.awt.geom.
CubicCurve2D.Float
Sets the location of the end points and control points of this curve
 to the specified double coordinates.
setCurve(double, double, double, double, double, double, double, double)
- Method in class java.awt.geom.
CubicCurve2D
Sets the location of the end points and control points of this curve
 to the specified double coordinates.
setCurve(float, float, float, float, float, float)
- Method in class java.awt.geom.
QuadCurve2D.Float
Sets the location of the end points and control point of this curve
 to the specified
float
coordinates.
setCurve(float, float, float, float, float, float, float, float)
- Method in class java.awt.geom.
CubicCurve2D.Float
Sets the location of the end points and control points
 of this curve to the specified
float
coordinates.
setCurve(CubicCurve2D)
- Method in class java.awt.geom.
CubicCurve2D
Sets the location of the end points and control points of this curve
 to the same as those in the specified
CubicCurve2D
.
setCurve(Point2D[], int)
- Method in class java.awt.geom.
CubicCurve2D
Sets the location of the end points and control points of this curve
 to the coordinates of the
Point2D
objects at the specified
 offset in the specified array.
setCurve(Point2D[], int)
- Method in class java.awt.geom.
QuadCurve2D
Sets the location of the end points and control points of this
QuadCurve2D
to the coordinates of the
Point2D
objects at the specified offset in
 the specified array.
setCurve(Point2D, Point2D, Point2D)
- Method in class java.awt.geom.
QuadCurve2D
Sets the location of the end points and control point of this
QuadCurve2D
to the specified
Point2D
coordinates.
setCurve(Point2D, Point2D, Point2D, Point2D)
- Method in class java.awt.geom.
CubicCurve2D
Sets the location of the end points and control points of this curve
 to the specified
Point2D
coordinates.
setCurve(QuadCurve2D)
- Method in class java.awt.geom.
QuadCurve2D
Sets the location of the end points and control point of this
QuadCurve2D
to the same as those in the specified
QuadCurve2D
.
setDaemon(boolean)
- Method in class java.lang.
Thread
Marks this thread as either a
daemon
or
non-daemon
thread.
setDaemon(boolean)
- Method in class java.lang.
ThreadGroup
Deprecated, for removal: This API element is subject to removal in a future version.
This method originally configured whether the thread group is
             a
daemon thread group
that is automatically destroyed
             when its last thread terminates. The concept of daemon thread
             group no longer exists. A thread group is eligible to be GC'ed
             when there are no live threads in the group and it is otherwise
             unreachable.
setData(byte[])
- Method in class java.net.
DatagramPacket
Set the data buffer for this packet.
setData(byte[])
- Method in class javax.imageio.stream.
IIOByteBuffer
Updates the array reference that will be returned by subsequent calls
 to the
getData
method.
setData(byte[], int, int)
- Method in class java.net.
DatagramPacket
Set the data buffer for this packet.
setData(int, byte[])
- Method in class java.awt.color.
ICC_Profile
Sets a particular tagged data element in the profile from a byte array.
setData(Raster)
- Method in class java.awt.image.
BufferedImage
Sets a rectangular region of the image to the contents of the
 specified
Raster r
, which is
 assumed to be in the same coordinate space as the
BufferedImage
.
setData(Raster)
- Method in interface java.awt.image.
WritableRenderedImage
Sets a rect of the image to the contents of the Raster r, which is
 assumed to be in the same coordinate space as the WritableRenderedImage.
setData(String)
- Method in interface org.w3c.dom.
CharacterData
The character data of the node that implements this interface.
setData(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setData(String)
- Method in interface org.w3c.dom.
ProcessingInstruction
The content of this processing instruction.
setDataElements(int, int, int, int, Object)
- Method in class java.awt.image.
WritableRaster
Sets the data for a rectangle of pixels from a
 primitive array of type TransferType.
setDataElements(int, int, int, int, Object, DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets the data for a rectangle of pixels in the specified DataBuffer
 from a primitive array of type TransferType.
setDataElements(int, int, Raster)
- Method in class java.awt.image.
WritableRaster
Sets the data for a rectangle of pixels from an input Raster.
setDataElements(int, int, Object)
- Method in class java.awt.image.
WritableRaster
Sets the data for a single pixel from a
 primitive array of type TransferType.
setDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Sets the data for a single pixel in the specified DataBuffer from a
 primitive array of type TransferType.
setDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Sets the data for a single pixel in the specified
DataBuffer
from a primitive array of type
TransferType
.
setDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Sets the data for a single pixel in the specified
DataBuffer
from a primitive array of type
 TransferType.
setDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets the data for a single pixel in the specified DataBuffer from a
 primitive array of type TransferType.
setDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Sets the data for a single pixel in the specified DataBuffer from a
 primitive array of type TransferType.
setDatagramSocketImplFactory(DatagramSocketImplFactory)
- Static method in class java.net.
DatagramSocket
Deprecated.
Use
DatagramChannel
, or subclass
DatagramSocket
directly.
This method provided a way in early JDK releases to replace the
    system wide implementation of
DatagramSocket
. It has been mostly
    obsolete since Java 1.4. If required, a
DatagramSocket
can be
    created to use a custom implementation by extending
DatagramSocket
and using the
protected
    constructor
that takes an
implementation
as a parameter.
setDataSourceLock(int)
- Method in class javax.sql.rowset.spi.
SyncProvider
Sets a lock on the underlying data source at the level indicated by
datasource_lock
.
setDataSourceName(String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the
DataSource
name property for this
RowSet
object to the given logical name and sets this
RowSet
object's
 Url property to
null
.
setDataSourceName(String)
- Method in interface javax.sql.
RowSet
Sets the data source name property for this
RowSet
object to the
 given
String
.
setDataVector(Object[][], Object[])
- Method in class javax.swing.table.
DefaultTableModel
Replaces the value in the
dataVector
instance
  variable with the values in the array
dataVector
.
setDataVector(Vector<? extends Vector>, Vector<?>)
- Method in class javax.swing.table.
DefaultTableModel
Replaces the current
dataVector
instance variable
  with the new
Vector
of rows,
dataVector
.
setDate(int)
- Method in class java.sql.
Time
Deprecated.
setDate(int)
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.set(Calendar.DAY_OF_MONTH, int date)
.
setDate(int, int, int)
- Method in class java.util.
Calendar.Builder
Sets the date field parameters to the values given by
year
,
month
, and
dayOfMonth
.
setDate(int, Date)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Date
value
 using the default time zone of the virtual machine that is running
 the application.
setDate(int, Date)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Date
value.
setDate(int, Date)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
java.sql.Date
value.
setDate(int, Date, Calendar)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Date
value,
 using the given
Calendar
object.
setDate(int, Date, Calendar)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Date
object.
setDate(int, Date, Calendar)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with the given
java.sql.Date
value.
setDate(String, Date)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.Date
value
 using the default time zone of the virtual machine that is running
 the application.
setDate(String, Date)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Date
value
 using the default time zone of the virtual machine that is running
 the application.
setDate(String, Date)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.Date
value
 using the default time zone of the virtual machine that is running
 the application.
setDate(String, Date, Calendar)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.Date
value,
 using the given
Calendar
object.
setDate(String, Date, Calendar)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Date
value,
 using the given
Calendar
object.
setDate(String, Date, Calendar)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.Date
value,
 using the given
Calendar
object.
setDate(Date)
- Method in class java.security.cert.
PKIXParameters
Sets the time for which the validity of the certification path
 should be determined.
setDateAndTime(Date)
- Method in class java.security.cert.
X509CRLSelector
Sets the dateAndTime criterion.
setDateFormatSymbols(DateFormatSymbols)
- Method in class java.text.
SimpleDateFormat
Sets the date and time format symbols of this date format.
setDateTime(String)
- Method in interface org.w3c.dom.html.
HTMLModElement
setDay(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set days in month.
setDebugGraphicsOptions(int)
- Method in class javax.swing.
JComponent
Enables or disables diagnostic information about every graphics
 operation performed within the component or one of its children.
setDebugOptions(int)
- Method in class javax.swing.
DebugGraphics
Enables/disables diagnostic information about every graphics
 operation.
setDebugTraceMode(int)
- Method in interface com.sun.jdi.
VirtualMachine
Traces the activities performed by the com.sun.jdi implementation.
setDecimalFormatSymbols(DecimalFormatSymbols)
- Method in class java.text.
DecimalFormat
Sets the decimal format symbols, which is generally not changed
 by the programmer or user.
setDecimalSeparator(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used for decimal sign.
setDecimalSeparatorAlwaysShown(boolean)
- Method in class java.text.
DecimalFormat
Allows you to set the behavior of the decimal separator with integers.
setDeclare(boolean)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setDeclared(int, boolean)
- Method in class org.xml.sax.ext.
Attributes2Impl
Assign a value to the "declared" flag of a specific attribute.
setDecodeTables(JPEGQTable[], JPEGHuffmanTable[], JPEGHuffmanTable[])
- Method in class javax.imageio.plugins.jpeg.
JPEGImageReadParam
Sets the quantization and Huffman tables to use in decoding
 abbreviated streams.
setDecomposition(int)
- Method in class java.text.
Collator
Set the decomposition mode of this Collator.
setDefault(Authenticator)
- Static method in class java.net.
Authenticator
Sets the authenticator that will be used by the networking code
 when a proxy or an HTTP server asks for authentication.
setDefault(CookieHandler)
- Static method in class java.net.
CookieHandler
Sets (or unsets) the system-wide cookie handler.
setDefault(ProxySelector)
- Static method in class java.net.
ProxySelector
Sets (or unsets) the system-wide proxy selector.
setDefault(ResponseCache)
- Static method in class java.net.
ResponseCache
Sets (or unsets) the system-wide cache.
setDefault(Locale)
- Static method in class java.util.
Locale
Sets the default locale for this instance of the Java Virtual Machine.
setDefault(Locale.Category, Locale)
- Static method in class java.util.
Locale
Sets the default locale for the specified Category for this instance
 of the Java Virtual Machine.
setDefault(TimeZone)
- Static method in class java.util.
TimeZone
Sets the
TimeZone
that is returned by the
getDefault
method.
setDefault(SSLContext)
- Static method in class javax.net.ssl.
SSLContext
Sets the default SSL context.
setDefaultAction(Action)
- Method in interface javax.swing.text.
Keymap
Set the default action to fire if a key is typed.
setDefaultActions(int)
- Method in class java.awt.dnd.
DropTarget
Sets the default acceptable actions for this
DropTarget
setDefaultAllowUserInteraction(boolean)
- Static method in class java.net.
URLConnection
Sets the default value of the
allowUserInteraction
field for all future
URLConnection
objects to the specified value.
setDefaultAssertionStatus(boolean)
- Method in class java.lang.
ClassLoader
Sets the default assertion status for this class loader.
setDefaultButton(JButton)
- Method in class javax.swing.
JRootPane
Sets the
defaultButton
property,
 which determines the current default button for this
JRootPane
.
setDefaultCapable(boolean)
- Method in class javax.swing.
JButton
Sets the
defaultCapable
property,
 which determines whether this button can be
 made the default button for its root pane.
setDefaultChecked(boolean)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setDefaultClassLoader(ClassLoader)
- Method in class javax.management.remote.rmi.
RMIServerImpl
Sets the default
ClassLoader
for this connector
 server.
setDefaultCloseOperation(int)
- Method in class javax.swing.
JDialog
Sets the operation that will happen by default when
 the user initiates a "close" on this dialog.
setDefaultCloseOperation(int)
- Method in class javax.swing.
JFrame
Sets the operation that will happen by default when
 the user initiates a "close" on this frame.
setDefaultCloseOperation(int)
- Method in class javax.swing.
JInternalFrame
Sets the operation that will happen by default when
 the user initiates a "close" on this internal frame.
setDefaultCursor(Cursor)
- Method in class javax.swing.text.html.
HTMLEditorKit
Sets the default cursor.
setDefaultDTD()
- Static method in class javax.swing.text.html.parser.
ParserDelegator
Sets the default DTD.
setDefaultEditor(Class<?>, TableCellEditor)
- Method in class javax.swing.
JTable
Sets a default cell editor to be used if no editor has been set in
 a
TableColumn
.
setDefaultFocusTraversalKeys(int, Set<? extends AWTKeyStroke>)
- Method in class java.awt.
KeyboardFocusManager
Sets the default focus traversal keys for a given traversal operation.
setDefaultFocusTraversalPolicy(FocusTraversalPolicy)
- Method in class java.awt.
KeyboardFocusManager
Sets the default FocusTraversalPolicy.
setDefaultFormatter(JFormattedTextField.AbstractFormatter)
- Method in class javax.swing.text.
DefaultFormatterFactory
Sets the
JFormattedTextField.AbstractFormatter
to use as
 a last resort, eg in case a display, edit or null
JFormattedTextField.AbstractFormatter
has not been
 specified.
setDefaultHostnameVerifier(HostnameVerifier)
- Static method in class javax.net.ssl.
HttpsURLConnection
Sets the default
HostnameVerifier
inherited by a
 new instance of this class.
setDefaultLightWeightPopupEnabled(boolean)
- Static method in class javax.swing.
JPopupMenu
Sets the default value of the
lightWeightPopupEnabled
property.
setDefaultLocale(Locale)
- Static method in class javax.swing.
JComponent
Sets the default locale used to initialize each JComponent's locale
 property upon creation.
setDefaultLocale(Locale)
- Method in class javax.swing.
UIDefaults
Sets the default locale.
setDefaultLookAndFeelDecorated(boolean)
- Static method in class javax.swing.
JDialog
Provides a hint as to whether or not newly created
JDialog
s
 should have their Window decorations (such as borders, widgets to
 close the window, title...) provided by the current look
 and feel.
setDefaultLookAndFeelDecorated(boolean)
- Static method in class javax.swing.
JFrame
Provides a hint as to whether or not newly created
JFrame
s
 should have their Window decorations (such as borders, widgets to
 close the window, title...) provided by the current look
 and feel.
setDefaultMenuBar(JMenuBar)
- Method in class java.awt.
Desktop
Sets the default menu bar to use when there are no active frames.
setDefaultNamespace(String)
- Method in interface javax.xml.stream.
XMLEventWriter
Binds a URI to the default namespace
 This URI is bound
 in the scope of the current START_ELEMENT / END_ELEMENT pair.
setDefaultNamespace(String)
- Method in interface javax.xml.stream.
XMLStreamWriter
Binds a URI to the default namespace
 This URI is bound
 in the scope of the current START_ELEMENT / END_ELEMENT pair.
setDefaultNamespacePrefix(String)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
setDefaultNamespacePrefix(String)
- Method in interface javax.xml.crypto.
XMLCryptoContext
Sets the default namespace prefix.
setDefaultQueue(LayoutQueue)
- Static method in class javax.swing.text.
LayoutQueue
Set the default layout queue.
setDefaultRenderer(Class<?>, TableCellRenderer)
- Method in class javax.swing.
JTable
Sets a default cell renderer to be used if no renderer has been set in
 a
TableColumn
.
setDefaultRenderer(TableCellRenderer)
- Method in class javax.swing.table.
JTableHeader
Sets the default renderer to be used when no
headerRenderer
is defined by a
TableColumn
.
setDefaultRequestProperty(String, String)
- Static method in class java.net.
URLConnection
Deprecated.
The instance specific setRequestProperty method
 should be used after an appropriate instance of URLConnection
 is obtained. Invoking this method will have no effect.
setDefaultSelected(boolean)
- Method in interface org.w3c.dom.html.
HTMLOptionElement
setDefaultSelection(JobAttributes.DefaultSelectionType)
- Method in class java.awt.
JobAttributes
Specifies whether, for jobs using these attributes, the application
 should print all pages, the range specified by the return value of
getPageRanges
, or the current selection.
setDefaultSSLSocketFactory(SSLSocketFactory)
- Static method in class javax.net.ssl.
HttpsURLConnection
Sets the default
SSLSocketFactory
inherited by new
 instances of this class.
setDefaultStratum(String)
- Method in interface com.sun.jdi.
VirtualMachine
Set this VM's default stratum (see
Location
for a
 discussion of strata).
setDefaultStream(PrintStream)
- Static method in class java.rmi.server.
LogStream
Deprecated.
no replacement
setDefaultUncaughtExceptionHandler(Thread.UncaughtExceptionHandler)
- Static method in class java.lang.
Thread
Set the default handler invoked when a thread abruptly terminates
 due to an uncaught exception, and no other handler has been defined
 for that thread.
setDefaultUseCaches(boolean)
- Method in class java.net.
URLConnection
Sets the default value of the
useCaches
field to the
 specified value.
setDefaultUseCaches(String, boolean)
- Static method in class java.net.
URLConnection
Sets the default value of the
useCaches
field for the named
 protocol to the given value.
setDefaultValue(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setDefaultValue(String)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setDefer(boolean)
- Method in interface org.w3c.dom.html.
HTMLScriptElement
setDelay(int)
- Method in class javax.swing.
JMenu
Sets the suggested delay before the menu's
PopupMenu
is popped up or down.
setDelay(int)
- Method in class javax.swing.
Timer
Sets the
Timer
's between-event delay, the number of milliseconds
 between successive action events.
setDerefLinkFlag(boolean)
- Method in class javax.naming.directory.
SearchControls
Enables/disables link dereferencing during the search.
setDescription(String)
- Method in class javax.swing.
ImageIcon
Sets the description of the image.
setDescriptor(Descriptor)
- Method in interface javax.management.
DescriptorAccess
Sets Descriptor (full replace).
setDescriptor(Descriptor)
- Method in class javax.management.modelmbean.
ModelMBeanAttributeInfo
Sets associated Descriptor (full replace) for the
 ModelMBeanAttributeDescriptor.
setDescriptor(Descriptor)
- Method in class javax.management.modelmbean.
ModelMBeanConstructorInfo
Sets associated Descriptor (full replace) of
 ModelMBeanConstructorInfo.
setDescriptor(Descriptor)
- Method in class javax.management.modelmbean.
ModelMBeanNotificationInfo
Sets associated Descriptor (full replace) for the
 ModelMBeanNotificationInfo If the new Descriptor is null,
 then the associated Descriptor reverts to a default
 descriptor.
setDescriptor(Descriptor)
- Method in class javax.management.modelmbean.
ModelMBeanOperationInfo
Sets associated Descriptor (full replace) for the
 ModelMBeanOperationInfo If the new Descriptor is null, then
 the associated Descriptor reverts to a default descriptor.
setDescriptor(Descriptor, String)
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Sets descriptors in the info array of type inDescriptorType
 for the ModelMBean.
setDescriptor(Descriptor, String)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
setDescriptors(Descriptor[])
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Adds or replaces descriptors in the ModelMBeanInfo.
setDescriptors(Descriptor[])
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
setDesignTime(boolean)
- Method in class java.beans.beancontext.
BeanContextSupport
Sets the new design time value for this
BeanContext
.
setDesignTime(boolean)
- Static method in class java.beans.
Beans
Used to indicate whether of not we are running in an application
 builder environment.
setDesignTime(boolean)
- Method in interface java.beans.
DesignMode
Sets the "value" of the "designTime" property.
setDesktopIcon(JInternalFrame.JDesktopIcon)
- Method in class javax.swing.
JInternalFrame
Sets the
JDesktopIcon
associated with this
JInternalFrame
.
setDesktopManager(DesktopManager)
- Method in class javax.swing.
JDesktopPane
Sets the
DesktopManger
that will handle
 desktop-specific UI actions.
setDesktopProperty(String, Object)
- Method in class java.awt.
Toolkit
Sets the named desktop property to the specified value and fires a
 property change event to notify any listeners that the value has changed.
setDestination(BufferedImage)
- Method in class javax.imageio.
ImageReadParam
Supplies a
BufferedImage
to be used as the
 destination for decoded pixel data.
setDestination(JobAttributes.DestinationType)
- Method in class java.awt.
JobAttributes
Specifies whether output will be to a printer or a file for jobs using
 these attributes.
setDestination(Path)
- Method in class jdk.jfr.
Recording
Sets a location where data is written on recording stop, or
null
if data is not to be dumped.
setDestinationBands(int[])
- Method in class javax.imageio.
ImageReadParam
Sets the indices of the destination bands where data
 will be placed.
setDestinationOffset(Point)
- Method in class javax.imageio.
IIOParam
Specifies the offset in the destination image at which future
 decoded pixels are to be placed, when reading, or where a
 region will be written, when writing.
setDestinationType(ImageTypeSpecifier)
- Method in class javax.imageio.
IIOParam
Sets the desired image type for the destination image, using an
ImageTypeSpecifier
.
setDialog(JobAttributes.DialogType)
- Method in class java.awt.
JobAttributes
Specifies whether, for jobs using these attributes, the user should see
 a print dialog in which to modify the print settings, and which type of
 print dialog should be displayed.
setDialogTitle(String)
- Method in class javax.swing.
JFileChooser
Sets the string that goes in the
JFileChooser
window's
 title bar.
setDialogType(int)
- Method in class javax.swing.
JFileChooser
Sets the type of this dialog.
setDictionary(byte[])
- Method in class java.util.zip.
Deflater
Sets preset dictionary for compression.
setDictionary(byte[])
- Method in class java.util.zip.
Inflater
Sets the preset dictionary to the given array of bytes.
setDictionary(byte[], int, int)
- Method in class java.util.zip.
Deflater
Sets preset dictionary for compression.
setDictionary(byte[], int, int)
- Method in class java.util.zip.
Inflater
Sets the preset dictionary to the given array of bytes.
setDictionary(ByteBuffer)
- Method in class java.util.zip.
Deflater
Sets preset dictionary for compression.
setDictionary(ByteBuffer)
- Method in class java.util.zip.
Inflater
Sets the preset dictionary to the bytes in the given buffer.
setDifferenceMode(boolean)
- Method in class javax.management.monitor.
CounterMonitor
Sets the difference mode flag value common to all observed MBeans.
setDifferenceMode(boolean)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Sets the difference mode flag value.
setDifferenceMode(boolean)
- Method in class javax.management.monitor.
GaugeMonitor
Sets the difference mode flag value common to all observed MBeans.
setDifferenceMode(boolean)
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Sets the difference mode flag value.
setDigit(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used for a digit in a pattern.
setDimensions(int, int)
- Method in class java.awt.image.
BufferedImageFilter
Filters the information provided in the
setDimensions
method
 of the
ImageConsumer
interface.
setDimensions(int, int)
- Method in class java.awt.image.
CropImageFilter
Override the source image's dimensions and pass the dimensions
 of the rectangular cropped region to the ImageConsumer.
setDimensions(int, int)
- Method in interface java.awt.image.
ImageConsumer
The dimensions of the source image are reported using the
 setDimensions method call.
setDimensions(int, int)
- Method in class java.awt.image.
ImageFilter
Filters the information provided in the setDimensions method
 of the ImageConsumer interface.
setDimensions(int, int)
- Method in class java.awt.image.
PixelGrabber
The setDimensions method is part of the ImageConsumer API which
 this class must implement to retrieve the pixels.
setDimensions(int, int)
- Method in class java.awt.image.
ReplicateScaleFilter
Override the dimensions of the source image and pass the dimensions
 of the new scaled size to the ImageConsumer.
setDir(String)
- Method in interface org.w3c.dom.html.
HTMLElement
setDirection(int)
- Method in class javax.swing.plaf.basic.
BasicArrowButton
Sets the direction of the arrow.
setDirection(int)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI.ScrollListener
Sets the direction.
setDirection(int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI.ScrollListener
Sets the direction.
setDirection(short)
- Method in class javax.swing.text.
DefaultStyledDocument.ElementSpec
Sets the direction.
setDirection(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the direction property definition in CSS2.
setDirectory(File)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Property to remember the directory that is currently selected in the UI.
setDirectory(String)
- Method in class java.awt.
FileDialog
Sets the directory of this file dialog window to be the
 specified directory.
setDirectoryName(String)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Sets the directory name.
setDirectoryName(String)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Sets the directory name.
setDirectorySelected(boolean)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Property to remember whether a directory is currently selected in the UI.
setDirectorySelected(boolean)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Property to remember whether a directory is currently selected in the UI.
setDisabled(boolean)
- Method in interface org.w3c.dom.html.
HTMLButtonElement
setDisabled(boolean)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setDisabled(boolean)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setDisabled(boolean)
- Method in interface org.w3c.dom.html.
HTMLOptGroupElement
setDisabled(boolean)
- Method in interface org.w3c.dom.html.
HTMLOptionElement
setDisabled(boolean)
- Method in interface org.w3c.dom.html.
HTMLSelectElement
setDisabled(boolean)
- Method in interface org.w3c.dom.html.
HTMLStyleElement
setDisabled(boolean)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setDisabled(boolean)
- Method in interface org.w3c.dom.stylesheets.
StyleSheet
false
if the style sheet is applied to the document.
setDisabledIcon(Icon)
- Method in class javax.swing.
AbstractButton
Sets the disabled icon for the button.
setDisabledIcon(Icon)
- Method in class javax.swing.
JLabel
Set the icon to be displayed if this JLabel is "disabled"
 (JLabel.setEnabled(false)).
setDisabledIconAt(int, Icon)
- Method in class javax.swing.
JTabbedPane
Sets the disabled icon at
index
to
icon
which can be
null
.
setDisabledSelectedIcon(Icon)
- Method in class javax.swing.
AbstractButton
Sets the disabled selection icon for the button.
setDisabledTextColor(Color)
- Method in class javax.swing.text.
JTextComponent
Sets the current color used to render the
 disabled text.
setDiscard(boolean)
- Method in class java.net.
HttpCookie
Specify whether user agent should discard the cookie unconditionally.
setDismissDelay(int)
- Method in class javax.swing.
ToolTipManager
Specifies the dismissal delay value.
setDisplay(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the display property definition in CSS2.
setDisplayedMnemonic(char)
- Method in class javax.swing.
JLabel
Specifies the displayedMnemonic as a char value.
setDisplayedMnemonic(int)
- Method in class javax.swing.
JLabel
Specify a keycode that indicates a mnemonic key.
setDisplayedMnemonicIndex(int)
- Method in class javax.swing.
AbstractButton
Provides a hint to the look and feel as to which character in the
 text should be decorated to represent the mnemonic.
setDisplayedMnemonicIndex(int)
- Method in class javax.swing.
JLabel
Provides a hint to the look and feel as to which character in the
 text should be decorated to represent the mnemonic.
setDisplayedMnemonicIndexAt(int, int)
- Method in class javax.swing.
JTabbedPane
Provides a hint to the look and feel as to which character in the
 text should be decorated to represent the mnemonic.
setDisplayFormatter(JFormattedTextField.AbstractFormatter)
- Method in class javax.swing.text.
DefaultFormatterFactory
Sets the
JFormattedTextField.AbstractFormatter
to use if
 the
JFormattedTextField
is not being edited and either
 the value is not-null, or the value is null and a null formatter has
 has not been specified.
setDisplayMode(DisplayMode)
- Method in class java.awt.
GraphicsDevice
Sets the display mode of this graphics device.
setDisplayName(String)
- Method in class java.beans.
FeatureDescriptor
Sets the localized display name of this feature.
setDividerLocation(double)
- Method in class javax.swing.
JSplitPane
Sets the divider location as a percentage of the
JSplitPane
's size.
setDividerLocation(int)
- Method in class javax.swing.
JSplitPane
Sets the location of the divider.
setDividerLocation(JSplitPane, int)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Sets the location of the divider to location.
setDividerLocation(JSplitPane, int)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
setDividerLocation
method on each UI handled by this object.
setDividerLocation(JSplitPane, int)
- Method in class javax.swing.plaf.
SplitPaneUI
Sets the location of the divider to location.
setDividerSize(int)
- Method in class javax.swing.
JSplitPane
Sets the size of the divider.
setDividerSize(int)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Sets the size of the divider to
newSize
.
setDockingColor(Color)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the color displayed when over a docking area
setDocument(Document)
- Method in class javax.swing.
JFormattedTextField
Associates the editor with a text document.
setDocument(Document)
- Method in class javax.swing.
JTextField
Associates the editor with a text document.
setDocument(Document)
- Method in class javax.swing.
JTextPane
Associates the editor with a text document.
setDocument(Document)
- Method in class javax.swing.text.
JTextComponent
Associates the editor with a text document.
setDocumentFilter(DocumentFilter)
- Method in class javax.swing.text.
AbstractDocument
Sets the
DocumentFilter
.
setDocumentHandler(DocumentHandler)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Register the SAX1 document event handler.
setDocumentHandler(DocumentHandler)
- Method in interface org.xml.sax.
Parser
Deprecated.
Allow an application to register a document event handler.
setDocumentLocator(Locator)
- Method in interface org.xml.sax.
ContentHandler
Receive an object for locating the origin of SAX document events.
setDocumentLocator(Locator)
- Method in interface org.xml.sax.
DocumentHandler
Deprecated.
Receive an object for locating the origin of SAX document events.
setDocumentLocator(Locator)
- Method in class org.xml.sax.
HandlerBase
Deprecated.
Receive a Locator object for document events.
setDocumentLocator(Locator)
- Method in class org.xml.sax.helpers.
DefaultHandler
Receive a Locator object for document events.
setDocumentLocator(Locator)
- Method in class org.xml.sax.helpers.
ParserAdapter
Adapter implementation method; do not call.
setDocumentLocator(Locator)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Filter a new document locator event.
setDocumentLocator(Locator)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Set a document locator.
setDocumentProperties(Dictionary<Object, Object>)
- Method in class javax.swing.text.
AbstractDocument
Replaces the document properties dictionary for this document.
setDocumentURI(String)
- Method in interface org.w3c.dom.
Document
The location of the document or
null
if undefined or if
 the
Document
was created using
DOMImplementation.createDocument
.
setDoInput(boolean)
- Method in class java.net.
URLConnection
Sets the value of the
doInput
field for this
URLConnection
to the specified value.
setDomain(String)
- Method in class java.net.
HttpCookie
Specifies the domain within which this cookie should be presented.
setDoOutput(boolean)
- Method in class java.net.
URLConnection
Sets the value of the
doOutput
field for this
URLConnection
to the specified value.
setDot(int)
- Method in interface javax.swing.text.
Caret
Sets the caret position to some position.
setDot(int)
- Method in class javax.swing.text.
DefaultCaret
Sets the caret position and mark to the specified position,
 with a forward bias.
setDot(int, Position.Bias)
- Method in class javax.swing.text.
DefaultCaret
Sets the caret position and mark to the specified position, with the
 specified bias.
setDot(int, Position.Bias)
- Method in class javax.swing.text.
NavigationFilter.FilterBypass
Sets the caret location, bypassing the NavigationFilter.
setDot(NavigationFilter.FilterBypass, int, Position.Bias)
- Method in class javax.swing.text.
NavigationFilter
Invoked prior to the Caret setting the dot.
setDouble(int, double)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java
double
value.
setDouble(int, double)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
double
in the
 Java programming language.
setDouble(int, double)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java
double
value.
setDouble(Object, double)
- Method in class java.lang.reflect.
Field
Sets the value of a field as a
double
on the specified object.
setDouble(Object, int, double)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified
double
value.
setDouble(String, double)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java
double
value.
setDouble(String, double)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java
double
value.
setDouble(String, double)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java
double
value.
setDoubleBuffered(boolean)
- Method in class javax.swing.
JComponent
Sets whether this component should use a buffer to paint.
setDoubleBuffered(boolean)
- Method in class javax.swing.
JRootPane
Sets whether this component should use a buffer to paint.
setDoubleBufferingEnabled(boolean)
- Method in class javax.swing.
RepaintManager
Enables or disables double buffering in this RepaintManager.
setDoubleBufferMaximumSize(Dimension)
- Method in class javax.swing.
RepaintManager
Set the maximum double buffer size.
setDragEnabled(boolean)
- Method in class javax.swing.
JColorChooser
Sets the
dragEnabled
property,
 which must be
true
to enable
 automatic drag handling (the first part of drag and drop)
 on this component.
setDragEnabled(boolean)
- Method in class javax.swing.
JFileChooser
Sets the
dragEnabled
property,
 which must be
true
to enable
 automatic drag handling (the first part of drag and drop)
 on this component.
setDragEnabled(boolean)
- Method in class javax.swing.
JList
Turns on or off automatic drag handling.
setDragEnabled(boolean)
- Method in class javax.swing.
JTable
Turns on or off automatic drag handling.
setDragEnabled(boolean)
- Method in class javax.swing.
JTree
Turns on or off automatic drag handling.
setDragEnabled(boolean)
- Method in class javax.swing.text.
JTextComponent
Turns on or off automatic drag handling.
setDraggedColumn(TableColumn)
- Method in class javax.swing.table.
JTableHeader
Sets the header's
draggedColumn
to
aColumn
.
setDraggedDistance(int)
- Method in class javax.swing.table.
JTableHeader
Sets the header's
draggedDistance
to
distance
.
setDragImage(Image)
- Method in class javax.swing.
TransferHandler
Sets the drag image parameter.
setDragImageOffset(Point)
- Method in class javax.swing.
TransferHandler
Sets an anchor offset for the image to drag.
setDragMode(int)
- Method in class javax.swing.
JDesktopPane
Sets the "dragging style" used by the desktop pane.
setDragOffset(Point)
- Method in class javax.swing.plaf.metal.
MetalToolBarUI
Sets the offset of the mouse cursor inside the DragWindow.
setDrawsLayeredHighlights(boolean)
- Method in class javax.swing.text.
DefaultHighlighter
If true, highlights are drawn as the Views draw the text.
setDropAction(int)
- Method in class javax.swing.
TransferHandler.TransferSupport
Sets the drop action for the transfer - which must represent a drop
 - to the given action,
 instead of the default user drop action.
setDropMode(DropMode)
- Method in class javax.swing.
JList
Sets the drop mode for this component.
setDropMode(DropMode)
- Method in class javax.swing.
JTable
Sets the drop mode for this component.
setDropMode(DropMode)
- Method in class javax.swing.
JTree
Sets the drop mode for this component.
setDropMode(DropMode)
- Method in class javax.swing.text.
JTextComponent
Sets the drop mode for this component.
setDropTarget(DropTarget)
- Method in class java.awt.
Component
Associate a
DropTarget
with this component.
setDSTSavings(int)
- Method in class java.util.
SimpleTimeZone
Sets the amount of time in milliseconds that the clock is advanced
 during daylight saving time.
setDTDHandler(DTDHandler)
- Method in class org.xml.sax.helpers.
ParserAdapter
Set the DTD handler.
setDTDHandler(DTDHandler)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Set the DTD event handler.
setDTDHandler(DTDHandler)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Register the DTD event handler.
setDTDHandler(DTDHandler)
- Method in interface org.xml.sax.
Parser
Deprecated.
Allow an application to register a DTD event handler.
setDTDHandler(DTDHandler)
- Method in interface org.xml.sax.
XMLReader
Allow an application to register a DTD event handler.
setDumpOnExit(boolean)
- Method in class jdk.jfr.
Recording
Sets whether this recording is dumped to disk when the JVM exits.
setDuration(Duration)
- Method in class jdk.jfr.
Recording
Sets a duration for how long a recording runs before it stops.
setDynamicLayout(boolean)
- Method in class java.awt.
Toolkit
Controls whether the layout of Containers is validated dynamically
 during resizing, or statically, after resizing is complete.
setEastPane(JComponent)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Sets the east pane.
setEchoChar(char)
- Method in class java.awt.
TextField
Sets the echo character for this text field.
setEchoChar(char)
- Method in class javax.swing.
JPasswordField
Sets the echo character for this
JPasswordField
.
setEchoCharacter(char)
- Method in class java.awt.
TextField
Deprecated.
As of JDK version 1.1,
 replaced by
setEchoChar(char)
.
setEditable(boolean)
- Method in class java.awt.
TextComponent
Sets the flag that determines whether or not this
 text component is editable.
setEditable(boolean)
- Method in class javax.swing.
JComboBox
Determines whether the
JComboBox
field is editable.
setEditable(boolean)
- Method in class javax.swing.
JTree
Determines whether the tree is editable.
setEditable(boolean)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Configures the receiver to allow, or not allow, editing.
setEditable(boolean)
- Method in class javax.swing.text.
JTextComponent
Sets the specified boolean to indicate whether or not this
TextComponent
should be editable.
setEditFormatter(JFormattedTextField.AbstractFormatter)
- Method in class javax.swing.text.
DefaultFormatterFactory
Sets the
JFormattedTextField.AbstractFormatter
to use if
 the
JFormattedTextField
is being edited and either
 the value is not-null, or the value is null and a null formatter has
 has not been specified.
setEditingColumn(int)
- Method in class javax.swing.
JTable
Sets the
editingColumn
variable.
setEditingRow(int)
- Method in class javax.swing.
JTable
Sets the
editingRow
variable.
setEditor(ComboBoxEditor)
- Method in class javax.swing.
JComboBox
Sets the editor used to paint and edit the selected item in the
JComboBox
field.
setEditor(JComponent)
- Method in class javax.swing.
JSpinner
Changes the
JComponent
that displays the current value
 of the
SpinnerModel
.
setEditorKit(EditorKit)
- Method in class javax.swing.
JEditorPane
Sets the currently installed kit for handling
 content.
setEditorKit(EditorKit)
- Method in class javax.swing.
JTextPane
Sets the currently installed kit for handling
 content.
setEditorKitForContentType(String, EditorKit)
- Method in class javax.swing.
JEditorPane
Directly sets the editor kit to use for the given type.
setEditorSearchPath(String[])
- Static method in class java.beans.
PropertyEditorManager
Change the list of package names that will be used for
          finding property editors.
setEditValid(boolean)
- Method in class javax.swing.
JFormattedTextField.AbstractFormatter
Invoke this to update the
editValid
property of the
JFormattedTextField
.
setElem(int, int)
- Method in class java.awt.image.
DataBuffer
Sets the requested data array element in the first (default) bank
 from the given integer.
setElem(int, int)
- Method in class java.awt.image.
DataBufferByte
Sets the requested data array element in the first (default) bank
 to the specified value.
setElem(int, int)
- Method in class java.awt.image.
DataBufferDouble
Sets the requested data array element in the first (default)
 bank to the given
int
.
setElem(int, int)
- Method in class java.awt.image.
DataBufferFloat
Sets the requested data array element in the first (default)
 bank to the given
int
.
setElem(int, int)
- Method in class java.awt.image.
DataBufferInt
Sets the requested data array element in the first (default) bank
 to the specified value.
setElem(int, int)
- Method in class java.awt.image.
DataBufferShort
Sets the requested data array element in the first (default) bank
 to the specified value.
setElem(int, int)
- Method in class java.awt.image.
DataBufferUShort
Sets the requested data array element in the first (default) bank
 to the specified value.
setElem(int, int, int)
- Method in class java.awt.image.
DataBuffer
Sets the requested data array element in the specified bank
 from the given integer.
setElem(int, int, int)
- Method in class java.awt.image.
DataBufferByte
Sets the requested data array element in the specified bank
 from the given integer.
setElem(int, int, int)
- Method in class java.awt.image.
DataBufferDouble
Sets the requested data array element in the specified bank
 to the given
int
.
setElem(int, int, int)
- Method in class java.awt.image.
DataBufferFloat
Sets the requested data array element in the specified bank to
 the given
int
.
setElem(int, int, int)
- Method in class java.awt.image.
DataBufferInt
Sets the requested data array element in the specified bank
 to the integer value
i
.
setElem(int, int, int)
- Method in class java.awt.image.
DataBufferShort
Sets the requested data array element in the specified bank
 from the given integer.
setElem(int, int, int)
- Method in class java.awt.image.
DataBufferUShort
Sets the requested data array element in the specified bank
 from the given integer.
setElemDouble(int, double)
- Method in class java.awt.image.
DataBuffer
Sets the requested data array element in the first (default) bank
 from the given double.
setElemDouble(int, double)
- Method in class java.awt.image.
DataBufferDouble
Sets the requested data array element in the first (default)
 bank to the given
double
.
setElemDouble(int, double)
- Method in class java.awt.image.
DataBufferFloat
Sets the requested data array element in the first (default)
 bank to the given
double
.
setElemDouble(int, int, double)
- Method in class java.awt.image.
DataBuffer
Sets the requested data array element in the specified bank
 from the given double.
setElemDouble(int, int, double)
- Method in class java.awt.image.
DataBufferDouble
Sets the requested data array element in the specified bank to
 the given
double
.
setElemDouble(int, int, double)
- Method in class java.awt.image.
DataBufferFloat
Sets the requested data array element in the specified bank to
 the given
double
.
setElementAt(E, int)
- Method in class java.util.
Vector
Sets the component at the specified
index
of this
 vector to be the specified object.
setElementAt(E, int)
- Method in class javax.swing.
DefaultListModel
Sets the component at the specified
index
of this
 list to be the specified element.
setElemFloat(int, float)
- Method in class java.awt.image.
DataBuffer
Sets the requested data array element in the first (default) bank
 from the given float.
setElemFloat(int, float)
- Method in class java.awt.image.
DataBufferDouble
Sets the requested data array element in the first (default)
 bank to the given
float
.
setElemFloat(int, float)
- Method in class java.awt.image.
DataBufferFloat
Sets the requested data array element in the first (default)
 bank to the given
float
.
setElemFloat(int, int, float)
- Method in class java.awt.image.
DataBuffer
Sets the requested data array element in the specified bank
 from the given float.
setElemFloat(int, int, float)
- Method in class java.awt.image.
DataBufferDouble
Sets the requested data array element in the specified bank to
 the given
float
.
setElemFloat(int, int, float)
- Method in class java.awt.image.
DataBufferFloat
Sets the requested data array element in the specified bank to
 the given
float
.
setElevation(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the elevation property definition in CSS2.
setEmptyCells(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the empty-cells property definition in CSS2.
setEmptyValue(CharSequence)
- Method in class java.util.
StringJoiner
Sets the sequence of characters to be used when determining the string
 representation of this
StringJoiner
and no elements have been
 added yet, that is, when it is empty.
setEnabled(boolean)
- Method in class com.sun.java.accessibility.util.
Translator
Set the enabled state of the object.
setEnabled(boolean)
- Method in interface com.sun.jdi.request.
EventRequest
Enables or disables this event request.
setEnabled(boolean)
- Method in class java.awt.
Component.AccessibleAWTComponent
Sets the enabled state of the object.
setEnabled(boolean)
- Method in class java.awt.
Component
Enables or disables this component, depending on the value of the
 parameter
b
.
setEnabled(boolean)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Set the enabled state of the object.
setEnabled(boolean)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Sets the enabled state of the object.
setEnabled(boolean)
- Method in class java.awt.
MenuItem
Sets whether or not this menu item can be chosen.
setEnabled(boolean)
- Method in interface javax.accessibility.
AccessibleComponent
Sets the enabled state of the object.
setEnabled(boolean)
- Method in class javax.swing.
AbstractAction
Sets whether the
Action
is enabled.
setEnabled(boolean)
- Method in class javax.swing.
AbstractButton
Enables (or disables) the button.
setEnabled(boolean)
- Method in interface javax.swing.
Action
Sets the enabled state of the
Action
.
setEnabled(boolean)
- Method in interface javax.swing.
ButtonModel
Enables or disables the button.
setEnabled(boolean)
- Method in class javax.swing.
DefaultButtonModel
Enables or disables the button.
setEnabled(boolean)
- Method in class javax.swing.
JComboBox
Enables the combo box so that items can be selected.
setEnabled(boolean)
- Method in class javax.swing.
JComponent
Sets whether or not this component is enabled.
setEnabled(boolean)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setEnabled(boolean)
- Method in class javax.swing.
JMenuItem
Enables or disables the menu item.
setEnabled(boolean)
- Method in class javax.swing.
JScrollBar
Enables the component so that the knob position can be changed.
setEnabled(boolean)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the enabled state of the object.
setEnabled(boolean)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
setEnabled(boolean)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setEnabled(boolean)
- Method in class javax.swing.
ToolTipManager
Enables or disables the tooltip.
setEnabledAt(int, boolean)
- Method in class javax.swing.
JTabbedPane
Sets whether or not the tab at
index
is enabled.
setEnabledCipherSuites(String[])
- Method in class javax.naming.ldap.
StartTlsResponse
Overrides the default list of cipher suites enabled for use on the
 TLS connection.
setEnabledCipherSuites(String[])
- Method in class javax.net.ssl.
SSLEngine
Sets the cipher suites enabled for use on this engine.
setEnabledCipherSuites(String[])
- Method in class javax.net.ssl.
SSLServerSocket
Sets the cipher suites enabled for use by accepted connections.
setEnabledCipherSuites(String[])
- Method in class javax.net.ssl.
SSLSocket
Sets the cipher suites enabled for use on this connection.
setEnabledProtocols(String[])
- Method in class javax.net.ssl.
SSLEngine
Set the protocol versions enabled for use on this engine.
setEnabledProtocols(String[])
- Method in class javax.net.ssl.
SSLServerSocket
Controls which particular protocols are enabled for use by
 accepted connections.
setEnabledProtocols(String[])
- Method in class javax.net.ssl.
SSLSocket
Sets the protocol versions enabled for use on this connection.
setEnableRetransmissions(boolean)
- Method in class javax.net.ssl.
SSLParameters
Sets whether DTLS handshake retransmissions should be enabled.
setEnableSessionCreation(boolean)
- Method in class javax.net.ssl.
SSLEngine
Controls whether new SSL sessions may be established by this engine.
setEnableSessionCreation(boolean)
- Method in class javax.net.ssl.
SSLServerSocket
Controls whether new SSL sessions may be established by the
 sockets which are created from this server socket.
setEnableSessionCreation(boolean)
- Method in class javax.net.ssl.
SSLSocket
Controls whether new SSL sessions may be established by this socket.
setEncodeTables(JPEGQTable[], JPEGHuffmanTable[], JPEGHuffmanTable[])
- Method in class javax.imageio.plugins.jpeg.
JPEGImageWriteParam
Sets the quantization and Huffman tables to use in encoding
 abbreviated streams.
setEncoding(String)
- Method in class java.util.logging.
Handler
Set the character encoding used by this
Handler
.
setEncoding(String)
- Method in class java.util.logging.
StreamHandler
Set (or change) the character encoding used by this
Handler
.
setEncoding(String)
- Method in interface org.w3c.dom.css.
CSSCharsetRule
The encoding information used in this
@charset
rule.
setEncoding(String)
- Method in interface org.w3c.dom.ls.
LSInput
The character encoding, if known.
setEncoding(String)
- Method in interface org.w3c.dom.ls.
LSOutput
The character encoding to use for the output.
setEncoding(String)
- Method in class org.xml.sax.ext.
Locator2Impl
Assigns the current value of the encoding property.
setEncoding(String)
- Method in class org.xml.sax.
InputSource
Set the character encoding, if known.
setEnctype(String)
- Method in interface org.w3c.dom.html.
HTMLFormElement
setEnd(Comparable<Date>)
- Method in class javax.swing.
SpinnerDateModel
Changes the upper limit for
Date
s in this sequence.
setEnd(Node, int)
- Method in interface org.w3c.dom.ranges.
Range
Sets the attributes describing the end of a Range.
setEndAfter(Node)
- Method in interface org.w3c.dom.ranges.
Range
Sets the end of a Range to be after a node
setEndBefore(Node)
- Method in interface org.w3c.dom.ranges.
Range
Sets the end position to be before a node.
setEndIndex(int)
- Method in class java.text.
FieldPosition
Sets the end index.
setEndpointIdentificationAlgorithm(String)
- Method in class javax.net.ssl.
SSLParameters
Sets the endpoint identification algorithm.
setEndRule(int, int, int)
- Method in class java.util.
SimpleTimeZone
Sets the daylight saving time end rule to a fixed date within a month.
setEndRule(int, int, int, int)
- Method in class java.util.
SimpleTimeZone
Sets the daylight saving time end rule.
setEndRule(int, int, int, int, boolean)
- Method in class java.util.
SimpleTimeZone
Sets the daylight saving time end rule to a weekday before or after the given date within
 a month, e.g., the first Monday on or after the 8th.
setEndTime(Instant)
- Method in interface jdk.jfr.consumer.
EventStream
Specifies the end time of the stream.
setEndTime(Instant)
- Method in class jdk.jfr.consumer.
RecordingStream
setEndTime(Instant)
- Method in class jdk.management.jfr.
RemoteRecordingStream
setEntityResolver(EntityResolver)
- Method in class javax.xml.parsers.
DocumentBuilder
Specify the
EntityResolver
to be used to resolve
 entities present in the XML document to be parsed.
setEntityResolver(EntityResolver)
- Method in class org.xml.sax.helpers.
ParserAdapter
Set the entity resolver.
setEntityResolver(EntityResolver)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Set the entity resolver.
setEntityResolver(EntityResolver)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Register the entity resolver.
setEntityResolver(EntityResolver)
- Method in interface org.xml.sax.
Parser
Deprecated.
Allow an application to register a custom entity resolver.
setEntityResolver(EntityResolver)
- Method in interface org.xml.sax.
XMLReader
Allow an application to register an entity resolver.
setEntry(String, KeyStore.Entry, KeyStore.ProtectionParameter)
- Method in class java.security.
KeyStore
Saves a keystore
Entry
under the specified alias.
setEnvironment(Hashtable<?, ?>)
- Method in exception class javax.naming.
CannotProceedException
Sets the environment that will be returned when getEnvironment()
 is called.
setEras(String[])
- Method in class java.text.
DateFormatSymbols
Sets era strings.
setErr(PrintStream)
- Static method in class java.lang.
System
Reassigns the "standard" error output stream.
setError()
- Method in class java.io.
PrintStream
Sets the error state of the stream to
true
.
setError()
- Method in class java.io.
PrintWriter
Sets the error state of the stream to
true
.
setErrorHandler(ErrorHandler)
- Method in class javax.xml.parsers.
DocumentBuilder
Specify the
ErrorHandler
to be used by the parser.
setErrorHandler(ErrorHandler)
- Method in class javax.xml.validation.
SchemaFactory
Sets the
ErrorHandler
to receive errors encountered
 during the
newSchema
method invocation.
setErrorHandler(ErrorHandler)
- Method in class javax.xml.validation.
Validator
Sets the
ErrorHandler
to receive errors encountered
 during the
validate
method invocation.
setErrorHandler(ErrorHandler)
- Method in class javax.xml.validation.
ValidatorHandler
Sets the
ErrorHandler
to receive errors encountered
 during the validation.
setErrorHandler(ErrorHandler)
- Method in class org.xml.sax.helpers.
ParserAdapter
Set the error handler.
setErrorHandler(ErrorHandler)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Set the error event handler.
setErrorHandler(ErrorHandler)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Register the error event handler.
setErrorHandler(ErrorHandler)
- Method in interface org.xml.sax.
Parser
Deprecated.
Allow an application to register an error event handler.
setErrorHandler(ErrorHandler)
- Method in interface org.xml.sax.
XMLReader
Allow an application to register an error event handler.
setErrorIndex(int)
- Method in class java.text.
ParsePosition
Set the index at which a parse error occurred.
setErrorListener(ErrorListener)
- Method in class javax.xml.transform.
Transformer
Set the error event listener in effect for the transformation.
setErrorListener(ErrorListener)
- Method in class javax.xml.transform.
TransformerFactory
Set the error event listener for the TransformerFactory, which
 is used for the processing of transformation instructions,
 and not for the transformation itself.
setErrorManager(ErrorManager)
- Method in class java.util.logging.
Handler
Define an ErrorManager for this Handler.
setErrorWriter(Writer)
- Method in interface javax.script.
ScriptContext
Sets the
Writer
used to display error output.
setErrorWriter(Writer)
- Method in class javax.script.
SimpleScriptContext
Sets the
Writer
used to display error output.
setEscapeProcessing(boolean)
- Method in interface java.sql.
Statement
Sets escape processing on or off.
setEscapeProcessing(boolean)
- Method in class javax.sql.rowset.
BaseRowSet
Sets to the given
boolean
whether or not the driver will
 scan for escape syntax and do escape substitution before sending SQL
 statements to the database.
setEscapeProcessing(boolean)
- Method in interface javax.sql.
RowSet
Sets escape processing for this
RowSet
object on or
 off.
setEstimatedMajorSpan(boolean)
- Method in class javax.swing.text.
AsyncBoxView
Set the estimatedMajorSpan property that determines if the
 major span should be treated as being estimated.
setEvent(String)
- Method in interface org.w3c.dom.html.
HTMLScriptElement
setEventAllocator(XMLEventAllocator)
- Method in class javax.xml.stream.
XMLInputFactory
Set a user defined event allocator for events
setException(Throwable)
- Method in class java.util.concurrent.
FutureTask
Causes this future to report an
ExecutionException
with the given throwable as its cause, unless this future has
 already been set or has been cancelled.
setExceptionListener(ExceptionListener)
- Method in class java.beans.
Encoder
Sets the exception handler for this stream to
exceptionListener
.
setExceptionListener(ExceptionListener)
- Method in class java.beans.
XMLDecoder
Sets the exception handler for this stream to
exceptionListener
.
setExclusiveOwnerThread(Thread)
- Method in class java.util.concurrent.locks.
AbstractOwnableSynchronizer
Sets the thread that currently owns exclusive access.
setExecutable(boolean)
- Method in class java.io.
File
A convenience method to set the owner's execute permission for this
 abstract pathname.
setExecutable(boolean, boolean)
- Method in class java.io.
File
Sets the owner's or everybody's execute permission for this abstract
 pathname.
setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Sets the policy on whether to execute existing delayed
 tasks even when this executor has been
shutdown
.
setExecutor(Executor)
- Method in class com.sun.net.httpserver.
HttpServer
Sets this server's
Executor
object.
setExpandedIcon(Icon)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the expanded icon.
setExpandedState(TreePath, boolean)
- Method in class javax.swing.
JTree
Sets the expanded state of this
JTree
.
setExpandedState(TreePath, boolean)
- Method in class javax.swing.tree.
AbstractLayoutCache
Marks the path
path
expanded state to
isExpanded
.
setExpandedState(TreePath, boolean)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Marks the path
path
expanded state to
isExpanded
.
setExpandedState(TreePath, boolean)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Marks the path
path
expanded state to
isExpanded
.
setExpandEntityReferences(boolean)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Specifies that the parser produced by this code will
 expand entity reference nodes.
setExpandsSelectedPaths(boolean)
- Method in class javax.swing.
JTree
Configures the
expandsSelectedPaths
property.
setExpert(boolean)
- Method in class java.beans.
FeatureDescriptor
The "expert" flag is used to distinguish between features that are
 intended for expert users from those that are intended for normal users.
setExplicitPolicyRequired(boolean)
- Method in class java.security.cert.
PKIXParameters
Sets the ExplicitPolicyRequired flag.
setExponentSeparator(String)
- Method in class java.text.
DecimalFormatSymbols
Sets the string used to separate the mantissa from the exponent.
setExtendedKeyUsage(Set<String>)
- Method in class java.security.cert.
X509CertSelector
Sets the extendedKeyUsage criterion.
setExtendedState(int)
- Method in class java.awt.
Frame
Sets the state of this frame.
setExtension(char, String)
- Method in class java.util.
Locale.Builder
Sets the extension for the given key.
setExtent(int)
- Method in interface javax.swing.
BoundedRangeModel
Sets the model's extent.
setExtent(int)
- Method in class javax.swing.
DefaultBoundedRangeModel
Sets the extent to
n
after ensuring that
n
is greater than or equal to zero and falls within the model's
 constraints:
setExtent(int)
- Method in class javax.swing.
JSlider
Sets the size of the range "covered" by the knob.
setExtentSize(Dimension)
- Method in class javax.swing.
JViewport
Sets the size of the visible part of the view using view coordinates.
setExtra(byte[])
- Method in class java.util.zip.
ZipEntry
Sets the optional extra field data for the entry.
setFace(String)
- Method in interface org.w3c.dom.html.
HTMLBaseFontElement
setFace(String)
- Method in interface org.w3c.dom.html.
HTMLFontElement
setFailureHandler(RMIFailureHandler)
- Static method in class java.rmi.server.
RMISocketFactory
Sets the failure handler to be called by the RMI runtime if server
 socket creation fails.
setFallbackLinkers(List<? extends GuardingDynamicLinker>)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets the fallback guarding dynamic linkers.
setFallbackLinkers(GuardingDynamicLinker...)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets the fallback guarding dynamic linkers.
setFeature(String, boolean)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Set a feature for this
DocumentBuilderFactory
and
DocumentBuilder
s created by this factory.
setFeature(String, boolean)
- Method in class javax.xml.parsers.
SAXParserFactory
Sets the particular feature in the underlying implementation of
 org.xml.sax.XMLReader.
setFeature(String, boolean)
- Method in class javax.xml.transform.
TransformerFactory
Set a feature for this
TransformerFactory
and
Transformer
s
 or
Template
s created by this factory.
setFeature(String, boolean)
- Method in class javax.xml.validation.
SchemaFactory
Set a feature for this
SchemaFactory
,
Schema
s created by this factory, and by extension,
Validator
s and
ValidatorHandler
s created by
 those
Schema
s.
setFeature(String, boolean)
- Method in class javax.xml.validation.
Validator
Set the value of a feature flag.
setFeature(String, boolean)
- Method in class javax.xml.validation.
ValidatorHandler
Set a feature for this
ValidatorHandler
.
setFeature(String, boolean)
- Method in class javax.xml.xpath.
XPathFactory
Sets a feature for this
XPathFactory
.
setFeature(String, boolean)
- Method in class org.xml.sax.helpers.
ParserAdapter
Set a feature flag for the parser.
setFeature(String, boolean)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Set the value of a feature.
setFeature(String, boolean)
- Method in interface org.xml.sax.
XMLReader
Set the value of a feature flag.
setFetchDirection(int)
- Method in interface java.sql.
ResultSet
Gives a hint as to the direction in which the rows in this
ResultSet
object will be processed.
setFetchDirection(int)
- Method in interface java.sql.
Statement
Gives the driver a hint as to the direction in which
 rows will be processed in
ResultSet
objects created using this
Statement
object.
setFetchDirection(int)
- Method in class javax.sql.rowset.
BaseRowSet
Gives the driver a performance hint as to the direction in
 which the rows in this
RowSet
object will be
 processed.
setFetchSize(int)
- Method in interface java.sql.
ResultSet
Gives the JDBC driver a hint as to the number of rows that should
 be fetched from the database when more rows are needed for this
ResultSet
object.
setFetchSize(int)
- Method in interface java.sql.
Statement
Gives the JDBC driver a hint as to the number of rows that should
 be fetched from the database when more rows are needed for
ResultSet
objects generated by this
Statement
.
setFetchSize(int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the fetch size for this
RowSet
object to the given number of
 rows.
setField(String, Object)
- Method in interface javax.management.
Descriptor
Sets the value for a specific field name.
setField(String, Object)
- Method in class javax.management.
ImmutableDescriptor
This operation is unsupported since this class is immutable.
setField(String, Object)
- Method in class javax.management.modelmbean.
DescriptorSupport
setFields(int...)
- Method in class java.util.
Calendar.Builder
Sets field parameters to their values given by
fieldValuePairs
that are pairs of a field and its value.
setFields(String[], Object[])
- Method in interface javax.management.
Descriptor
Sets all fields in the field names array to the new value with
 the same index in the field values array.
setFields(String[], Object[])
- Method in class javax.management.
ImmutableDescriptor
This operation is unsupported since this class is immutable.
setFields(String[], Object[])
- Method in class javax.management.modelmbean.
DescriptorSupport
setFile(String)
- Method in class java.awt.
FileDialog
Sets the selected file for this file dialog window to be the
 specified file.
setFileFilter(FileFilter)
- Method in class javax.swing.
JFileChooser
Sets the current file filter.
setFileHidingEnabled(boolean)
- Method in class javax.swing.
JFileChooser
Sets file hiding on or off.
setFileName(String)
- Method in class java.awt.
JobAttributes
Specifies the file name for the output file for jobs using these
 attributes.
setFileName(String)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Sets the file name.
setFilenameFilter(FilenameFilter)
- Method in class java.awt.
FileDialog
Sets the filename filter for this file dialog window to the
 specified filter.
setFileNameMap(FileNameMap)
- Static method in class java.net.
URLConnection
Sets the FileNameMap.
setFileSelectionMode(int)
- Method in class javax.swing.
JFileChooser
Sets the
JFileChooser
to allow the user to just
 select files, just select
 directories, or select both files and directories.
setFileSystemView(FileSystemView)
- Method in class javax.swing.
JFileChooser
Sets the file system view that the
JFileChooser
uses for
 accessing and creating file system resources, such as finding
 the floppy drive and getting a list of root drives.
setFileView(FileView)
- Method in class javax.swing.
JFileChooser
Sets the file view to be used to retrieve UI information, such as
 the icon that represents a file or the type description of a file.
setFillsViewportHeight(boolean)
- Method in class javax.swing.
JTable
Sets whether or not this table is always made large enough
 to fill the height of an enclosing viewport.
setFilter(Filter)
- Method in class java.util.logging.
Handler
Set a
Filter
to control output on this
Handler
.
setFilter(Filter)
- Method in class java.util.logging.
Logger
Set a filter to control output on this Logger.
setFilter(Predicate)
- Method in interface javax.sql.rowset.
FilteredRowSet
Applies the given
Predicate
object to this
FilteredRowSet
object.
setFilter(LSParserFilter)
- Method in interface org.w3c.dom.ls.
LSParser
When a filter is provided, the implementation will call out to the
 filter as it is constructing the DOM tree structure.
setFilter(LSSerializerFilter)
- Method in interface org.w3c.dom.ls.
LSSerializer
When the application provides a filter, the serializer will call out
 to the filter before serializing each Node.
setFirstDayOfWeek(int)
- Method in class java.util.
Calendar
Sets what the first day of the week is; e.g.,
SUNDAY
in the U.S.,
MONDAY
in France.
setFirstLineIndent(float)
- Method in class javax.swing.text.
ParagraphView
Sets the indent on the first line.
setFirstLineIndent(MutableAttributeSet, float)
- Static method in class javax.swing.text.
StyleConstants
Sets the first line indent.
setFixedCellHeight(int)
- Method in class javax.swing.
JList
Sets a fixed value to be used for the height of every cell in the list.
setFixedCellWidth(int)
- Method in class javax.swing.
JList
Sets a fixed value to be used for the width of every cell in the list.
setFixedLengthStreamingMode(int)
- Method in class java.net.
HttpURLConnection
This method is used to enable streaming of a HTTP request body
 without internal buffering, when the content length is known in
 advance.
setFixedLengthStreamingMode(long)
- Method in class java.net.
HttpURLConnection
This method is used to enable streaming of a HTTP request body
 without internal buffering, when the content length is known in
 advance.
setFlags(AclEntryFlag...)
- Method in class java.nio.file.attribute.
AclEntry.Builder
Sets the flags component of this builder.
setFlags(Set<AclEntryFlag>)
- Method in class java.nio.file.attribute.
AclEntry.Builder
Sets the flags component of this builder.
setFlashColor(Color)
- Static method in class javax.swing.
DebugGraphics
Sets the Color used to flash drawing operations.
setFlashCount(int)
- Static method in class javax.swing.
DebugGraphics
Sets the number of times that drawing operations will flash.
setFlashTime(int)
- Static method in class javax.swing.
DebugGraphics
Sets the time delay of drawing operation flashing.
setFlavorMap(FlavorMap)
- Method in class java.awt.dnd.
DropTarget
Sets the
FlavorMap
associated
 with this
DropTarget
.
setFlavorsForNative(String, DataFlavor[])
- Method in class java.awt.datatransfer.
SystemFlavorMap
Discards the current mappings for the specified
String
native,
 and creates new mappings to the specified
DataFlavor
s.
setFloat(int, float)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java
float
value.
setFloat(int, float)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
float
in the
 Java programming language.
setFloat(int, float)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java
float
value.
setFloat(Object, float)
- Method in class java.lang.reflect.
Field
Sets the value of a field as a
float
on the specified object.
setFloat(Object, int, float)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified
float
value.
setFloat(String, float)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java
float
value.
setFloat(String, float)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java
float
value.
setFloat(String, float)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java
float
value.
setFloatable(boolean)
- Method in class javax.swing.
JToolBar
Sets the
floatable
property,
 which must be
true
for the user to move the tool bar.
setFloating(boolean, Point)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the floating property.
setFloatingColor(Color)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the color displayed when over a floating area
setFloatingLocation(int, int)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the floating location.
setFloatValue(short, float)
- Method in interface org.w3c.dom.css.
CSSPrimitiveValue
A method to set the float value with a specified unit.
setFocusable(boolean)
- Method in class java.awt.
Component
Sets the focusable state of this Component to the specified value.
setFocusableWindowState(boolean)
- Method in class java.awt.
Window
Sets whether this Window can become the focused Window if it meets
 the other requirements outlined in
isFocusableWindow
.
setFocusAccelerator(char)
- Method in class javax.swing.text.
JTextComponent
Sets the key accelerator that will cause the receiving text
 component to get the focus.
setFocusCycleRoot(boolean)
- Method in class java.awt.
Container
Sets whether this Container is the root of a focus traversal cycle.
setFocusCycleRoot(boolean)
- Method in class java.awt.
Window
Does nothing because Windows must always be roots of a focus traversal
 cycle.
setFocusCycleRoot(boolean)
- Method in class javax.swing.
JInternalFrame
Does nothing because
JInternalFrame
s must always be roots of a focus
 traversal cycle.
setFocusLostBehavior(int)
- Method in class javax.swing.
JFormattedTextField
Sets the behavior when focus is lost.
setFocusPainted(boolean)
- Method in class javax.swing.
AbstractButton
Sets the
paintFocus
property, which must
 be
true
for the focus state to be painted.
setFocusTraversalKeys(int, Set<? extends AWTKeyStroke>)
- Method in class java.awt.
Component
Sets the focus traversal keys for a given traversal operation for this
 Component.
setFocusTraversalKeys(int, Set<? extends AWTKeyStroke>)
- Method in class java.awt.
Container
Sets the focus traversal keys for a given traversal operation for this
 Container.
setFocusTraversalKeys(int, Set<? extends AWTKeyStroke>)
- Method in class javax.swing.
JComponent
Sets the focus traversal keys for a given traversal operation for this
 Component.
setFocusTraversalKeysEnabled(boolean)
- Method in class java.awt.
Component
Sets whether focus traversal keys are enabled for this Component.
setFocusTraversalPolicy(FocusTraversalPolicy)
- Method in class java.awt.
Container
Sets the focus traversal policy that will manage keyboard traversal of
 this Container's children, if this Container is a focus cycle root.
setFocusTraversalPolicyProvider(boolean)
- Method in class java.awt.
Container
Sets whether this container will be used to provide focus
 traversal policy.
setFollowRedirects(boolean)
- Static method in class java.net.
HttpURLConnection
Sets whether HTTP redirects  (requests with response code 3xx) should
 be automatically followed by this class.
setFont(Font)
- Method in class com.sun.java.accessibility.util.
Translator
Set the
Font
of this object.
setFont(Font)
- Method in class java.awt.
Component.AccessibleAWTComponent
Sets the
Font
of this object.
setFont(Font)
- Method in class java.awt.
Component
Sets the font of this component.
setFont(Font)
- Method in class java.awt.
Container
Sets the font of this container.
setFont(Font)
- Method in class java.awt.
Graphics
Sets this graphics context's font to the specified font.
setFont(Font)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Set the Font of this object.
setFont(Font)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Sets the
Font
of this object.
setFont(Font)
- Method in class java.awt.
MenuComponent
Sets the font to be used for this menu component to the specified
 font.
setFont(Font)
- Method in interface javax.accessibility.
AccessibleComponent
Sets the font of this object.
setFont(Font)
- Method in class javax.swing.
DebugGraphics
Sets the Font used for text drawing operations.
setFont(Font)
- Method in class javax.swing.
JComponent
Sets the font for this component.
setFont(Font)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setFont(Font)
- Method in class javax.swing.
JSlider
Sets the font for this component.
setFont(Font)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the
Font
of this object.
setFont(Font)
- Method in class javax.swing.
JTextArea
Sets the current font.
setFont(Font)
- Method in class javax.swing.
JTextField
Sets the current font.
setFont(Font)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
setFont(Font)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setFont(Font)
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Sets the font to edit with.
setFont(Font)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Subclassed to map
FontUIResource
s to null.
setFont(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font property definition in CSS2.
setFontFamily(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-family property definition in CSS2.
setFontFamily(MutableAttributeSet, String)
- Static method in class javax.swing.text.
StyleConstants
Sets the font attribute.
setFontSize(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-size property definition in CSS2.
setFontSize(MutableAttributeSet, int)
- Static method in class javax.swing.text.
StyleConstants
Sets the font size attribute.
setFontSizeAdjust(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-size-adjust property definition in CSS2.
setFontStretch(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-stretch property definition in CSS2.
setFontStyle(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-style property definition in CSS2.
setFontVariant(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-variant property definition in CSS2.
setFontWeight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-weight property definition in CSS2.
setForeground(Color)
- Method in class com.sun.java.accessibility.util.
Translator
Set the foreground
Color
of this object.
setForeground(Color)
- Method in class java.awt.
Component.AccessibleAWTComponent
Sets the foreground color of this object.
setForeground(Color)
- Method in class java.awt.
Component
Sets the foreground color of this component.
setForeground(Color)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Set the foreground color of this object.
setForeground(Color)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Sets the foreground color of this object.
setForeground(Color)
- Method in interface javax.accessibility.
AccessibleComponent
Sets the foreground color of this object.
setForeground(Color)
- Method in class javax.swing.
JComponent
Sets the foreground color of this component.
setForeground(Color)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setForeground(Color)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the foreground color of this object.
setForeground(Color)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
setForeground(Color)
- Method in class javax.swing.table.
DefaultTableCellRenderer
Overrides
JComponent.setForeground
to assign
 the unselected-foreground color to the specified color.
setForeground(Color)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setForeground(MutableAttributeSet, Color)
- Static method in class javax.swing.text.
StyleConstants
Sets the foreground color.
setForegroundAt(int, Color)
- Method in class javax.swing.
JTabbedPane
Sets the foreground color at
index
to
foreground
which can be
null
, in which case the tab's foreground color
 will default to the foreground color of this
tabbedpane
.
setForkJoinTaskTag(short)
- Method in class java.util.concurrent.
ForkJoinTask
Atomically sets the tag value for this task and returns the old value.
setFormat(int, Format)
- Method in class java.text.
MessageFormat
Sets the format to use for the format element with the given
 format element index within the previously set pattern string.
setFormat(DateFormat)
- Method in class javax.swing.text.
DateFormatter
Sets the format that dictates the legal values that can be edited
 and displayed.
setFormat(Format)
- Method in class javax.swing.text.
InternationalFormatter
Sets the format that dictates the legal values that can be edited
 and displayed.
setFormat(Format)
- Method in class javax.swing.text.
NumberFormatter
Sets the format that dictates the legal values that can be edited
 and displayed.
setFormatByArgumentIndex(int, Format)
- Method in class java.text.
MessageFormat
Sets the format to use for the format elements within the
 previously set pattern string that use the given argument
 index.
setFormats(Format[])
- Method in class java.text.
MessageFormat
Sets the formats to use for the format elements in the
 previously set pattern string.
setFormatsByArgumentIndex(Format[])
- Method in class java.text.
MessageFormat
Sets the formats to use for the values passed into
format
methods or returned from
parse
methods.
setFormatter(Formatter)
- Method in class java.util.logging.
Handler
Set a
Formatter
.
setFormatter(JFormattedTextField.AbstractFormatter)
- Method in class javax.swing.
JFormattedTextField
Sets the current
AbstractFormatter
.
setFormatterFactory(JFormattedTextField.AbstractFormatterFactory)
- Method in class javax.swing.
JFormattedTextField
Sets the
AbstractFormatterFactory
.
setFractionalSecond(BigDecimal)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set fractional seconds.
setFrame(double, double, double, double)
- Method in class java.awt.geom.
Arc2D
Sets the location and size of the framing rectangle of this
Shape
to the specified rectangular values.
setFrame(double, double, double, double)
- Method in class java.awt.geom.
Ellipse2D.Double
Sets the location and size of the framing rectangle of this
Shape
to the specified rectangular values.
setFrame(double, double, double, double)
- Method in class java.awt.geom.
Ellipse2D.Float
Sets the location and size of the framing rectangle of this
Shape
to the specified rectangular values.
setFrame(double, double, double, double)
- Method in class java.awt.geom.
Rectangle2D
Sets the location and size of the outer bounds of this
Rectangle2D
to the specified rectangular values.
setFrame(double, double, double, double)
- Method in class java.awt.geom.
RectangularShape
Sets the location and size of the framing rectangle of this
Shape
to the specified rectangular values.
setFrame(double, double, double, double)
- Method in class java.awt.geom.
RoundRectangle2D
Sets the location and size of the framing rectangle of this
Shape
to the specified rectangular values.
setFrame(float, float, float, float)
- Method in class java.awt.geom.
Ellipse2D.Float
Sets the location and size of the framing rectangle of this
Shape
to the specified rectangular values.
setFrame(Point2D, Dimension2D)
- Method in class java.awt.geom.
RectangularShape
Sets the location and size of the framing rectangle of this
Shape
to the specified
Point2D
and
Dimension2D
, respectively.
setFrame(Rectangle2D)
- Method in class java.awt.geom.
RectangularShape
Sets the framing rectangle of this
Shape
to
 be the specified
Rectangle2D
.
setFrame(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setFrameBorder(String)
- Method in interface org.w3c.dom.html.
HTMLFrameElement
setFrameBorder(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setFrameFromCenter(double, double, double, double)
- Method in class java.awt.geom.
RectangularShape
Sets the framing rectangle of this
Shape
based on the specified center point coordinates and corner point
 coordinates.
setFrameFromCenter(Point2D, Point2D)
- Method in class java.awt.geom.
RectangularShape
Sets the framing rectangle of this
Shape
based on a
 specified center
Point2D
and corner
Point2D
.
setFrameFromDiagonal(double, double, double, double)
- Method in class java.awt.geom.
RectangularShape
Sets the diagonal of the framing rectangle of this
Shape
based on the two specified coordinates.
setFrameFromDiagonal(Point2D, Point2D)
- Method in class java.awt.geom.
RectangularShape
Sets the diagonal of the framing rectangle of this
Shape
based on two specified
Point2D
objects.
setFrameIcon(Icon)
- Method in class javax.swing.
JInternalFrame
Sets an image to be displayed in the titlebar of this internal frame (usually
 in the top-left corner).
setFramePosition(int)
- Method in interface javax.sound.sampled.
Clip
Sets the media position in sample frames.
setFreeStanding(boolean)
- Method in class javax.swing.plaf.metal.
MetalScrollButton
Sets the free standing value.
setFromPage(int)
- Method in class java.awt.
JobAttributes
Specifies, for jobs using these attributes, the first page to be
 printed, if a range of pages is to be printed.
setFromTree(String, Node)
- Method in class javax.imageio.metadata.
IIOMetadata
Sets the internal state of this
IIOMetadata
object
 from a tree of XML DOM
Node
s whose syntax is
 defined by the given metadata format.
setFullBufferUpdates(boolean)
- Method in class java.awt.image.
MemoryImageSource
Specifies whether this animated memory image should always be
 updated by sending the complete buffer of pixels whenever
 there is a change.
setFullScreenWindow(Window)
- Method in class java.awt.
GraphicsDevice
Enter full-screen mode, or return to windowed mode.
setGlassPane(Component)
- Method in class javax.swing.
JApplet
Deprecated.
Sets the glassPane property.
setGlassPane(Component)
- Method in class javax.swing.
JDialog
Sets the
glassPane
property.
setGlassPane(Component)
- Method in class javax.swing.
JFrame
Sets the
glassPane
property.
setGlassPane(Component)
- Method in class javax.swing.
JInternalFrame
Sets this
JInternalFrame
's
glassPane
property.
setGlassPane(Component)
- Method in class javax.swing.
JRootPane
Sets a specified
Component
to be the glass pane for this
 root pane.
setGlassPane(Component)
- Method in class javax.swing.
JWindow
Sets the
glassPane
property.
setGlassPane(Component)
- Method in interface javax.swing.
RootPaneContainer
The glassPane is always the first child of the rootPane
 and the rootPanes layout manager ensures that it's always
 as big as the rootPane.
setGlassPane(JPanel)
- Method in class javax.swing.
JLayer
Sets the
JLayer
's glassPane component, which can be
null
.
setGlobalActiveWindow(Window)
- Method in class java.awt.
KeyboardFocusManager
Sets the active Window.
setGlobalCurrentFocusCycleRoot(Container)
- Method in class java.awt.
KeyboardFocusManager
Sets the current focus cycle root.
setGlobalFocusedWindow(Window)
- Method in class java.awt.
KeyboardFocusManager
Sets the focused Window.
setGlobalFocusOwner(Component)
- Method in class java.awt.
KeyboardFocusManager
Sets the focus owner.
setGlobalPermanentFocusOwner(Component)
- Method in class java.awt.
KeyboardFocusManager
Sets the permanent focus owner.
setGlyphPainter(GlyphView.GlyphPainter)
- Method in class javax.swing.text.
GlyphView
Sets the painter to use for rendering glyphs.
setGlyphPosition(int, Point2D)
- Method in class java.awt.font.
GlyphVector
Sets the position of the specified glyph within this
GlyphVector
.
setGlyphTransform(int, AffineTransform)
- Method in class java.awt.font.
GlyphVector
Sets the transform of the specified glyph within this
GlyphVector
.
setGranularityPeriod(long)
- Method in class javax.management.monitor.
Monitor
Sets the granularity period (in milliseconds).
setGranularityPeriod(long)
- Method in interface javax.management.monitor.
MonitorMBean
Sets the granularity period (in milliseconds).
setGregorianChange(Date)
- Method in class java.util.
GregorianCalendar
Sets the
GregorianCalendar
change date.
setGridColor(Color)
- Method in class javax.swing.
JTable
Sets the color used to draw grid lines to
gridColor
and redisplays.
setGridLocation(int, int)
- Method in class javax.swing.text.
TableView.TableCell
Deprecated.
Sets the grid location.
setGroup(GroupPrincipal)
- Method in interface java.nio.file.attribute.
PosixFileAttributeView
Updates the file group-owner.
setGroup(ButtonGroup)
- Method in interface javax.swing.
ButtonModel
Identifies the group the button belongs to --
 needed for radio buttons, which are mutually
 exclusive within their group.
setGroup(ButtonGroup)
- Method in class javax.swing.
DefaultButtonModel
Identifies the group the button belongs to --
 needed for radio buttons, which are mutually
 exclusive within their group.
setGroupingSeparator(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used for grouping separator.
setGroupingSize(int)
- Method in class java.text.
CompactNumberFormat
Sets the grouping size.
setGroupingSize(int)
- Method in class java.text.
DecimalFormat
Set the grouping size.
setGroupingUsed(boolean)
- Method in class java.text.
CompactNumberFormat
Sets whether or not grouping will be used in this format.
setGroupingUsed(boolean)
- Method in class java.text.
NumberFormat
Set whether or not grouping will be used in this format.
setGuiAvailable(boolean)
- Static method in class java.beans.
Beans
Used to indicate whether of not we are running in an environment
 where GUI interaction is available.
setHandler(HttpHandler)
- Method in class com.sun.net.httpserver.
HttpContext
Sets the handler for this context, if not already set.
setHandler(ContentHandler)
- Method in class javax.xml.transform.sax.
SAXResult
Set the target to be a SAX2
ContentHandler
.
setHandshakeApplicationProtocolSelector(BiFunction<SSLEngine, List<String>, String>)
- Method in class javax.net.ssl.
SSLEngine
Registers a callback function that selects an application protocol
 value for a SSL/TLS/DTLS handshake.
setHandshakeApplicationProtocolSelector(BiFunction<SSLSocket, List<String>, String>)
- Method in class javax.net.ssl.
SSLSocket
Registers a callback function that selects an application protocol
 value for a SSL/TLS/DTLS handshake.
setHashColor(Color)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the hash color.
setHeader(String, String)
- Method in interface java.net.http.
HttpRequest.Builder
Sets the given name value pair to the set of headers for this
 request.
setHeaderRenderer(TableCellRenderer)
- Method in class javax.swing.table.
TableColumn
Sets the
TableCellRenderer
used to draw the
TableColumn
's header to
headerRenderer
.
setHeaders(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setHeaderValue(Object)
- Method in class javax.swing.table.
TableColumn
Sets the
Object
whose string representation will be
 used as the value for the
headerRenderer
.
setHeight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the height property definition in CSS2.
setHeight(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setHeight(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setHeight(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setHeight(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setHeight(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setHeight(Spring)
- Method in class javax.swing.
SpringLayout.Constraints
Sets the
height
property,
 which controls the height of a component.
setHelpMenu(Menu)
- Method in class java.awt.
MenuBar
Sets the specified menu to be this menu bar's help menu.
setHelpMenu(JMenu)
- Method in class javax.swing.
JMenuBar
Sets the help menu that appears when the user selects the
 "help" option in the menu bar.
setHgap(int)
- Method in class java.awt.
BorderLayout
Sets the horizontal gap between components.
setHgap(int)
- Method in class java.awt.
CardLayout
Sets the horizontal gap between components.
setHgap(int)
- Method in class java.awt.
FlowLayout
Sets the horizontal gap between components and
 between the components and the borders of the
Container
.
setHgap(int)
- Method in class java.awt.
GridLayout
Sets the horizontal gap between components to the specified value.
setHidden(boolean)
- Method in class java.beans.
FeatureDescriptor
The "hidden" flag is used to identify features that are intended only
 for tool use, and which should not be exposed to humans.
setHidden(boolean)
- Method in interface java.nio.file.attribute.
DosFileAttributeView
Updates the value of the hidden attribute.
setHideActionText(boolean)
- Method in class javax.swing.
AbstractButton
Sets the
hideActionText
property, which determines
 whether the button displays text from the
Action
.
setHighlighter(Highlighter)
- Method in class javax.swing.text.
JTextComponent
Sets the highlighter to be used.
setHints(int)
- Method in class java.awt.image.
AreaAveragingScaleFilter
Detect if the data is being delivered with the necessary hints
 to allow the averaging algorithm to do its work.
setHints(int)
- Method in interface java.awt.image.
ImageConsumer
Sets the hints that the ImageConsumer uses to process the
 pixels delivered by the ImageProducer.
setHints(int)
- Method in class java.awt.image.
ImageFilter
Filters the information provided in the setHints method
 of the ImageConsumer interface.
setHints(int)
- Method in class java.awt.image.
PixelGrabber
The setHints method is part of the ImageConsumer API which
 this class must implement to retrieve the pixels.
setHoldability(int)
- Method in interface java.sql.
Connection
Changes the default holdability of
ResultSet
objects
 created using this
Connection
object to the given
 holdability.
setHonorsVisibility(boolean)
- Method in class javax.swing.
GroupLayout
Sets whether component visibility is considered when sizing and
 positioning components.
setHonorsVisibility(Component, Boolean)
- Method in class javax.swing.
GroupLayout
Sets whether the component's visibility is considered for
 sizing and positioning.
setHorizontalAlignment(int)
- Method in class javax.swing.
AbstractButton
Sets the horizontal alignment of the icon and text.
setHorizontalAlignment(int)
- Method in class javax.swing.
JLabel
Sets the alignment of the label's contents along the X axis.
setHorizontalAlignment(int)
- Method in class javax.swing.
JTextField
Sets the horizontal alignment of the text.
setHorizontalGroup(GroupLayout.Group)
- Method in class javax.swing.
GroupLayout
Sets the
Group
that positions and sizes
 components along the horizontal axis.
setHorizontalScrollBar(JScrollBar)
- Method in class javax.swing.
JScrollPane
Adds the scrollbar that controls the viewport's horizontal view
 position to the scrollpane.
setHorizontalScrollBarPolicy(int)
- Method in class javax.swing.
JScrollPane
Determines when the horizontal scrollbar appears in the scrollpane.
setHorizontalScrollBarPolicy(int)
- Method in class javax.swing.
ScrollPaneLayout
Sets the horizontal scrollbar-display policy.
setHorizontalTextPosition(int)
- Method in class javax.swing.
AbstractButton
Sets the horizontal position of the text relative to the icon.
setHorizontalTextPosition(int)
- Method in class javax.swing.
JLabel
Sets the horizontal position of the label's text,
 relative to its image.
setHostnameVerifier(HostnameVerifier)
- Method in class javax.naming.ldap.
StartTlsResponse
Sets the hostname verifier used by
negotiate()
after the TLS handshake has completed and the default hostname
 verification has failed.
setHostnameVerifier(HostnameVerifier)
- Method in class javax.net.ssl.
HttpsURLConnection
Sets the
HostnameVerifier
for this instance.
setHour(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set hours.
setHours(int)
- Method in class java.sql.
Date
Deprecated.
setHours(int)
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.set(Calendar.HOUR_OF_DAY, int hours)
.
setHref(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setHref(String)
- Method in interface org.w3c.dom.html.
HTMLAreaElement
setHref(String)
- Method in interface org.w3c.dom.html.
HTMLBaseElement
setHref(String)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setHreflang(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setHreflang(String)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setHspace(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setHspace(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setHspace(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setHtmlFor(String)
- Method in interface org.w3c.dom.html.
HTMLLabelElement
setHtmlFor(String)
- Method in interface org.w3c.dom.html.
HTMLScriptElement
setHttpEquiv(String)
- Method in interface org.w3c.dom.html.
HTMLMetaElement
setHttpOnly(boolean)
- Method in class java.net.
HttpCookie
Indicates whether the cookie should be considered HTTP Only.
setHttpsConfigurator(HttpsConfigurator)
- Method in class com.sun.net.httpserver.
HttpsServer
Sets this server's
HttpsConfigurator
object.
setHumanPresentableName(String)
- Method in class java.awt.datatransfer.
DataFlavor
Sets the human presentable name for the data format that this
DataFlavor
represents.
setIcon(boolean)
- Method in class javax.swing.
JInternalFrame
Iconifies or de-iconifies this internal frame,
 if the look and feel supports iconification.
setIcon(Icon)
- Method in class javax.swing.
AbstractButton
Sets the button's default icon.
setIcon(Icon)
- Method in class javax.swing.
JLabel
Defines the icon this component will display.
setIcon(Icon)
- Method in class javax.swing.
JOptionPane
Sets the icon to display.
setIcon(MutableAttributeSet, Icon)
- Static method in class javax.swing.text.
StyleConstants
Sets the icon attribute.
setIconAt(int, Icon)
- Method in class javax.swing.
JTabbedPane
Sets the icon at
index
to
icon
which can be
null
.
setIconBadge(String)
- Method in class java.awt.
Taskbar
Affixes a small system-provided badge to this application's icon.
setIconifiable(boolean)
- Method in class javax.swing.
JInternalFrame
Sets the
iconable
property,
 which must be
true
for the user to be able to
 make the
JInternalFrame
an icon.
setIconImage(Image)
- Method in class java.awt.
Taskbar
Requests the system to change this application's icon to the provided
image
.
setIconImage(Image)
- Method in class java.awt.
Window
Sets the image to be displayed as the icon for this window.
setIconImages(List<? extends Image>)
- Method in class java.awt.
Window
Sets the sequence of images to be displayed as the icon
 for this window.
setIconOnly(boolean)
- Method in class javax.swing.plaf.metal.
MetalComboBoxButton
If
isIconOnly
is
true
then only icon is painted.
setIconTextGap(int)
- Method in class javax.swing.
AbstractButton
If both the icon and text properties are set, this property
 defines the space between them.
setIconTextGap(int)
- Method in class javax.swing.
JLabel
If both the icon and text properties are set, this property
 defines the space between them.
setId(String)
- Method in interface org.w3c.dom.html.
HTMLElement
setID(String)
- Method in class java.util.
TimeZone
Sets the time zone ID.
setIdAttribute(String, boolean)
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
setIdAttribute(String, boolean)
- Method in interface org.w3c.dom.
Element
If the parameter
isId
is
true
, this method
 declares the specified attribute to be a user-determined ID attribute
 .
setIdAttributeNode(Attr, boolean)
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
setIdAttributeNode(Attr, boolean)
- Method in interface org.w3c.dom.
Element
If the parameter
isId
is
true
, this method
 declares the specified attribute to be a user-determined ID attribute
 .
setIdAttributeNS(String, String, boolean)
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
setIdAttributeNS(String, String, boolean)
- Method in interface org.w3c.dom.
Element
If the parameter
isId
is
true
, this method
 declares the specified attribute to be a user-determined ID attribute
 .
setIdAttributeNS(Element, String, String)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
Registers the element's attribute specified by the namespace URI and
 local name to be of type ID.
setIdentifier(Object)
- Method in class javax.swing.table.
TableColumn
Sets the
TableColumn
's identifier to
anIdentifier
.
setIfModifiedSince(long)
- Method in class java.net.
URLConnection
Sets the value of the
ifModifiedSince
field of
 this
URLConnection
to the specified value.
setIgnoreRepaint(boolean)
- Method in class java.awt.
Component
Sets whether or not paint messages received from the operating system
 should be ignored.
setIgnoringComments(boolean)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Specifies that the parser produced by this code will
 ignore comments.
setIgnoringElementContentWhitespace(boolean)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Specifies that the parsers created by this  factory must eliminate
 whitespace in element content (sometimes known loosely as
 'ignorable whitespace') when parsing XML documents (see XML Rec
 2.10).
setImage(Image)
- Method in class java.awt.
TrayIcon
Sets the image for this
TrayIcon
.
setImage(Image)
- Method in class javax.swing.
ImageIcon
Sets the image displayed by this icon.
setImageableArea(double, double, double, double)
- Method in class java.awt.print.
Paper
Sets the imageable area of this
Paper
.
setImageAutoSize(boolean)
- Method in class java.awt.
TrayIcon
Sets the auto-size property.
setImageObserver(ImageObserver)
- Method in class javax.swing.
ImageIcon
Sets the image observer for the image.
setImageURL(URL)
- Method in class java.awt.
SplashScreen
Changes the splash screen image.
setImplementation(Object)
- Method in class javax.management.
StandardMBean
Replace the implementation object wrapped in this object.
setImplicitDownCycleTraversal(boolean)
- Method in class java.awt.
ContainerOrderFocusTraversalPolicy
Sets whether this ContainerOrderFocusTraversalPolicy transfers focus
 down-cycle implicitly.
setImplicitDownCycleTraversal(boolean)
- Method in class javax.swing.
SortingFocusTraversalPolicy
Sets whether this SortingFocusTraversalPolicy transfers focus down-cycle
 implicitly.
setIn(InputStream)
- Static method in class java.lang.
System
Reassigns the "standard" input stream.
setInDefaultEventSet(boolean)
- Method in class java.beans.
EventSetDescriptor
Marks an event set as being in the "default" set (or not).
setIndentSpace(int)
- Method in class javax.swing.text.
AbstractWriter
Enables subclasses to specify how many spaces an indent
 maps to.
setIndeterminate(boolean)
- Method in class javax.swing.
JProgressBar
Sets the
indeterminate
property of the progress bar,
 which determines whether the progress bar is in determinate
 or indeterminate mode.
setIndex(int)
- Method in interface java.text.
CharacterIterator
Sets the position to the specified position in the text and returns that
 character.
setIndex(int)
- Method in class java.text.
ParsePosition
Set the current parse position.
setIndex(int)
- Method in class java.text.
StringCharacterIterator
Implements CharacterIterator.setIndex() for String.
setIndex(int)
- Method in class javax.swing.text.
Segment
Sets the position to the specified position in the text and returns that
 character.
setIndexedReadMethod(Method)
- Method in class java.beans.
IndexedPropertyDescriptor
Sets the method that should be used to read an indexed property value.
setIndexedWriteMethod(Method)
- Method in class java.beans.
IndexedPropertyDescriptor
Sets the method that should be used to write an indexed property value.
setInfinity(String)
- Method in class java.text.
DecimalFormatSymbols
Sets the string used to represent infinity.
setInfo(String)
- Method in class java.security.
Identity
Deprecated.
Specifies a general information string for this
Identity
.
setInheritsPopupMenu(boolean)
- Method in class javax.swing.
JComponent
Sets whether or not
getComponentPopupMenu
should delegate
 to the parent if this component does not have a
JPopupMenu
assigned to it.
setInitialContextFactoryBuilder(InitialContextFactoryBuilder)
- Static method in class javax.naming.spi.
NamingManager
Sets the InitialContextFactory builder to be builder.
setInitialDelay(int)
- Method in class javax.swing.
Timer
Sets the
Timer
's initial delay, the time
 in milliseconds to wait after the timer is started
 before firing the first event.
setInitialDelay(int)
- Method in class javax.swing.
ToolTipManager
Specifies the initial delay value.
setInitialPolicies(Set<String>)
- Method in class java.security.cert.
PKIXParameters
Sets the
Set
of initial policy identifiers
 (OID strings), indicating that any one of these
 policies would be acceptable to the certificate user for the purposes of
 certification path processing.
setInitialSelectionValue(Object)
- Method in class javax.swing.
JOptionPane
Sets the input value that is initially displayed as selected to the user.
setInitialValue(Object)
- Method in class javax.swing.
JOptionPane
Sets the initial value that is to be enabled -- the
Component
that has the focus when the pane is initially displayed.
setInitThreshold(Number)
- Method in class javax.management.monitor.
CounterMonitor
Sets the initial threshold value common to all observed objects.
setInitThreshold(Number)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Sets the initial threshold value common to all observed MBeans.
setInnerHTML(Element, String)
- Method in class javax.swing.text.html.
HTMLDocument
Replaces the children of the given element with the contents
 specified as an HTML string.
setInput(byte[])
- Method in class java.util.zip.
Deflater
Sets input data for compression.
setInput(byte[])
- Method in class java.util.zip.
Inflater
Sets input data for decompression.
setInput(byte[], int, int)
- Method in class java.util.zip.
Deflater
Sets input data for compression.
setInput(byte[], int, int)
- Method in class java.util.zip.
Inflater
Sets input data for decompression.
setInput(Object)
- Method in class javax.imageio.
ImageReader
Sets the input source to use to the given
ImageInputStream
or other
Object
.
setInput(Object, boolean)
- Method in class javax.imageio.
ImageReader
Sets the input source to use to the given
ImageInputStream
or other
Object
.
setInput(Object, boolean, boolean)
- Method in class javax.imageio.
ImageReader
Sets the input source to use to the given
ImageInputStream
or other
Object
.
setInput(ByteBuffer)
- Method in class java.util.zip.
Deflater
Sets input data for compression.
setInput(ByteBuffer)
- Method in class java.util.zip.
Inflater
Sets input data for decompression.
setInputMap(int, InputMap)
- Method in class javax.swing.
JComponent
Sets the
InputMap
to use under the condition
condition
to
map
.
setInputMethodContext(InputMethodContext)
- Method in interface java.awt.im.spi.
InputMethod
Sets the input method context, which is used to dispatch input method
 events to the client component and to request information from
 the client component.
setInputSource(InputSource)
- Method in class javax.xml.transform.sax.
SAXSource
Set the SAX InputSource to be used for the Source.
setInputStream(InputStream)
- Method in class javax.xml.transform.stream.
StreamSource
Set the byte stream to be used as input.
setInputValue(Object)
- Method in class javax.swing.
JOptionPane
Sets the input value that was selected or input by the user.
setInputVerifier(InputVerifier)
- Method in class javax.swing.
JComponent
Sets the input verifier for this component.
setInsets(short, short, short, short)
- Method in class javax.swing.text.
CompositeView
Sets the insets for the view.
setInstalledLookAndFeels(UIManager.LookAndFeelInfo[])
- Static method in class javax.swing.
UIManager
Sets the set of available look and feels.
setInstance(LayoutStyle)
- Static method in class javax.swing.
LayoutStyle
Sets the shared instance of
LayoutStyle
.
setInstanceFollowRedirects(boolean)
- Method in class java.net.
HttpURLConnection
Sets whether HTTP redirects (requests with response code 3xx) should
 be automatically followed by this
HttpURLConnection
instance.
setInstant(long)
- Method in class java.util.
Calendar.Builder
Sets the instant parameter to the given
instant
value that is
 a millisecond offset from
the
 Epoch
.
setInstant(Instant)
- Method in class java.util.logging.
LogRecord
Sets the instant that the event occurred.
setInstant(Date)
- Method in class java.util.
Calendar.Builder
Sets the instant parameter to the
instant
value given by a
Date
.
setInt(int, int)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java
int
value.
setInt(int, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to an
int
in the Java
 programming language.
setInt(int, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java
int
value.
setInt(Object, int)
- Method in class java.lang.reflect.
Field
Sets the value of a field as an
int
on the specified object.
setInt(Object, int, int)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified
int
value.
setInt(String, int)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java
int
value.
setInt(String, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java
int
value.
setInt(String, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java
int
value.
setIntercellSpacing(Dimension)
- Method in class javax.swing.
JTable
Sets the
rowMargin
and the
columnMargin
--
 the height and width of the space between cells -- to
intercellSpacing
.
setInterface(InetAddress)
- Method in class java.net.
MulticastSocket
Deprecated.
The InetAddress may not uniquely identify
             the network interface. Use
MulticastSocket.setNetworkInterface(NetworkInterface)
instead.
setInternalFrame(JInternalFrame)
- Method in class javax.swing.
JInternalFrame.JDesktopIcon
Sets the
JInternalFrame
with which this
DesktopIcon
is associated.
setInternalObjectsFilter(MethodHandleTransformer)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets a method handle transformer that is supposed to act as the
 implementation of
LinkerServices.filterInternalObjects(MethodHandle)
for linker
 services of dynamic linkers created by this factory.
setInternationalCurrencySymbol(String)
- Method in class java.text.
DecimalFormatSymbols
Sets the ISO 4217 currency code of the currency of these
 DecimalFormatSymbols.
setInvalidCharacters(String)
- Method in class javax.swing.text.
MaskFormatter
Allows for further restricting of the characters that can be input.
setInverted(boolean)
- Method in class javax.swing.
JSlider
Specify true to reverse the value-range shown for the slider and false to
 put the value range in the normal order.
setInvoker(Component)
- Method in class javax.swing.
JPopupMenu
Sets the invoker of this popup menu -- the component in which
 the popup menu menu is to be displayed.
setInvokesStopCellEditing(boolean)
- Method in class javax.swing.
JTree
Determines what happens when editing is interrupted by selecting
 another node in the tree, a change in the tree's data, or by some
 other means.
setIsMap(boolean)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setIssuer(byte[])
- Method in class java.security.cert.
X509CertSelector
Sets the issuer criterion.
setIssuer(String)
- Method in class java.security.cert.
X509CertSelector
Deprecated.
Use
X509CertSelector.setIssuer(X500Principal)
or
X509CertSelector.setIssuer(byte[])
instead. This method should not be relied on
 as it can fail to match some certificates because of a loss of encoding
 information in the RFC 2253 String form of some distinguished names.
setIssuer(X500Principal)
- Method in class java.security.cert.
X509CertSelector
Sets the issuer criterion.
setIssuerNames(Collection<?>)
- Method in class java.security.cert.
X509CRLSelector
Note:
use
X509CRLSelector.setIssuers(Collection)
instead
 or only specify the byte array form of distinguished names when using
 this method.
setIssuers(Collection<X500Principal>)
- Method in class java.security.cert.
X509CRLSelector
Sets the issuerNames criterion.
setItalic(MutableAttributeSet, boolean)
- Static method in class javax.swing.text.
StyleConstants
Sets the italic attribute.
setItem(Object)
- Method in interface javax.swing.
ComboBoxEditor
Set the item that should be edited.
setItem(Object)
- Method in class javax.swing.plaf.basic.
BasicComboBoxEditor
Sets the item that should be edited.
setJMenuBar(JMenuBar)
- Method in class javax.swing.
JApplet
Deprecated.
Sets the menubar for this applet.
setJMenuBar(JMenuBar)
- Method in class javax.swing.
JDialog
Sets the menubar for this dialog.
setJMenuBar(JMenuBar)
- Method in class javax.swing.
JFrame
Sets the menubar for this frame.
setJMenuBar(JMenuBar)
- Method in class javax.swing.
JInternalFrame
Sets the
menuBar
property for this
JInternalFrame
.
setJMenuBar(JMenuBar)
- Method in class javax.swing.
JRootPane
Adds or changes the menu bar used in the layered pane.
setJNDIContext(Context)
- Static method in class javax.sql.rowset.spi.
SyncFactory
Sets the initial JNDI context from which SyncProvider implementations
 can be retrieved from a JNDI namespace
setJobName(String)
- Method in class java.awt.print.
PrinterJob
Sets the name of the document to be printed.
setJoinType(int)
- Method in interface javax.sql.rowset.
JoinRowSet
Allow the application to adjust the type of
JOIN
imposed
 on tables contained within the JoinRowSet object instance.
setJustification(int)
- Method in class javax.swing.text.
ParagraphView
Sets the type of justification.
setKeepAlive(boolean)
- Method in class java.net.
Socket
Enable/disable
SO_KEEPALIVE
.
setKeepAliveTime(long, TimeUnit)
- Method in class java.util.concurrent.
ThreadPoolExecutor
Sets the thread keep-alive time, which is the amount of time
 that threads may remain idle before being terminated.
setKeyBindingActive(boolean)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Sets the key binding activity.
setKeyBindingRegistered(boolean)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Sets the key binding registration.
setKeyChar(char)
- Method in class java.awt.event.
KeyEvent
Set the keyChar value to indicate a logical character.
setKeyCode(int)
- Method in class java.awt.event.
KeyEvent
Set the keyCode value to indicate a physical key.
setKeyColumns(int[])
- Method in interface javax.sql.rowset.
CachedRowSet
Sets this
CachedRowSet
object's
keyCols
field with the given array of column numbers, which forms a key
 for uniquely identifying a row in this
CachedRowSet
object.
setKeyEntry(String, byte[], Certificate[])
- Method in class java.security.
KeyStore
Assigns the given key (that has already been protected) to the given
 alias.
setKeyEntry(String, Key, char[], Certificate[])
- Method in class java.security.
KeyStore
Assigns the given key to the given alias, protecting it with the given
 password.
setKeymap(Keymap)
- Method in class javax.swing.text.
JTextComponent
Sets the keymap to use for binding events to
 actions.
setKeyPair(KeyPair)
- Method in class java.security.
Signer
Deprecated.
Sets the key pair (public key and private key) for this
Signer
.
setKeySelectionManager(JComboBox.KeySelectionManager)
- Method in class javax.swing.
JComboBox
Sets the object that translates a keyboard character into a list
 selection.
setKeySelector(KeySelector)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
setKeySelector(KeySelector)
- Method in interface javax.xml.crypto.
XMLCryptoContext
Sets the key selector for finding a key.
setKeyUsage(boolean[])
- Method in class java.security.cert.
X509CertSelector
Sets the keyUsage criterion.
setLabel(String)
- Method in class java.awt.
Button
Sets the button's label to be the specified string.
setLabel(String)
- Method in class java.awt.
Checkbox
Sets this check box's label to be the string argument.
setLabel(String)
- Method in class java.awt.
MenuItem
Sets the label for this menu item to the specified label.
setLabel(String)
- Method in class javax.swing.
AbstractButton
Deprecated.
- Replaced by
setText(text)
setLabel(String)
- Method in class javax.swing.
JPopupMenu
Sets the popup menu's label.
setLabel(String)
- Method in class javax.swing.text.html.
Option
Sets the label to be used for the option.
setLabel(String)
- Method in interface org.w3c.dom.html.
HTMLOptGroupElement
setLabel(String)
- Method in interface org.w3c.dom.html.
HTMLOptionElement
setLabelFor(Component)
- Method in class javax.swing.
JLabel
Set the component this is labelling.
setLabelTable(Dictionary)
- Method in class javax.swing.
JSlider
Used to specify what label will be drawn at any given value.
setLang(String)
- Method in interface org.w3c.dom.html.
HTMLElement
setLanguage(String)
- Method in class java.util.
Locale.Builder
Sets the language.
setLanguageTag(String)
- Method in class java.util.
Locale.Builder
Resets the Builder to match the provided IETF BCP 47
 language tag.
setLargeMaxRows(long)
- Method in interface java.sql.
Statement
Sets the limit for the maximum number of rows that any
ResultSet
object  generated by this
Statement
object can contain to the given number.
setLargeModel(boolean)
- Method in class javax.swing.
JTree
Specifies whether the UI should use a large model.
setLargeModel(boolean)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the
largeModel
.
setLastAccessTime(FileTime)
- Method in class java.util.zip.
ZipEntry
Sets the last access time of the entry.
setLastDividerLocation(int)
- Method in class javax.swing.
JSplitPane
Sets the last location the divider was at to
newLastLocation
.
setLastDragLocation(int)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Set the last drag location of the
JSplitPane
.
setLastModified(long)
- Method in class java.io.
File
Sets the last-modified time of the file or directory named by this
 abstract pathname.
setLastModifiedTime(FileTime)
- Method in class java.util.zip.
ZipEntry
Sets the last modification time of the entry.
setLastModifiedTime(Path, FileTime)
- Static method in class java.nio.file.
Files
Updates a file's last modified time attribute.
setLayer(int)
- Method in class javax.swing.
JInternalFrame
Convenience method for setting the layer attribute of this component.
setLayer(Component, int)
- Method in class javax.swing.
JLayeredPane
Sets the layer attribute on the specified component,
 making it the bottommost component in that layer.
setLayer(Component, int, int)
- Method in class javax.swing.
JLayeredPane
Sets the layer attribute for the specified component and
 also sets its position within that layer.
setLayer(Integer)
- Method in class javax.swing.
JInternalFrame
Convenience method for setting the layer attribute of this component.
setLayeredPane(JLayeredPane)
- Method in class javax.swing.
JApplet
Deprecated.
Sets the layeredPane property.
setLayeredPane(JLayeredPane)
- Method in class javax.swing.
JDialog
Sets the
layeredPane
property.
setLayeredPane(JLayeredPane)
- Method in class javax.swing.
JFrame
Sets the
layeredPane
property.
setLayeredPane(JLayeredPane)
- Method in class javax.swing.
JInternalFrame
Sets this
JInternalFrame
's
layeredPane
property.
setLayeredPane(JLayeredPane)
- Method in class javax.swing.
JRootPane
Sets the layered pane for the root pane.
setLayeredPane(JLayeredPane)
- Method in class javax.swing.
JWindow
Sets the
layeredPane
property.
setLayeredPane(JLayeredPane)
- Method in interface javax.swing.
RootPaneContainer
A Container that manages the contentPane and in some cases a menu bar.
setLayerEventMask(long)
- Method in class javax.swing.
JLayer
Enables the events from JLayer and
all its descendants
defined by the specified event mask parameter
 to be delivered to the
LayerUI.eventDispatched(AWTEvent, JLayer)
method.
setLayout(LayoutManager)
- Method in class java.awt.
Container
Sets the layout manager for this container.
setLayout(LayoutManager)
- Method in class java.awt.
ScrollPane
Sets the layout manager for this container.
setLayout(LayoutManager)
- Method in class javax.swing.
AbstractButton
Sets the layout manager for this container, refer to
Container.setLayout(LayoutManager)
for a complete description of this method.
setLayout(LayoutManager)
- Method in class javax.swing.
Box
Throws an AWTError, since a Box can use only a BoxLayout.
setLayout(LayoutManager)
- Method in class javax.swing.
JApplet
Deprecated.
Sets the
LayoutManager
.
setLayout(LayoutManager)
- Method in class javax.swing.
JDialog
Sets the
LayoutManager
.
setLayout(LayoutManager)
- Method in class javax.swing.
JFrame
Sets the
LayoutManager
.
setLayout(LayoutManager)
- Method in class javax.swing.
JInternalFrame
Ensures that, by default, the layout of this component cannot be set.
setLayout(LayoutManager)
- Method in class javax.swing.
JLayer
Sets the layout manager for this container.
setLayout(LayoutManager)
- Method in class javax.swing.
JScrollPane
Sets the layout manager for this
JScrollPane
.
setLayout(LayoutManager)
- Method in class javax.swing.
JWindow
Sets the
LayoutManager
.
setLayoutOrientation(int)
- Method in class javax.swing.
JList
Defines the way list cells are laid out.
setLayoutStyle(LayoutStyle)
- Method in class javax.swing.
GroupLayout
Sets the
LayoutStyle
used to calculate the preferred
 gaps between components.
setLeadAnchorNotificationEnabled(boolean)
- Method in class javax.swing.
DefaultListSelectionModel
Sets the value of the leadAnchorNotificationEnabled flag.
setLeadSelectionIndex(int)
- Method in class javax.swing.
DefaultListSelectionModel
Sets the lead selection index, ensuring that values between the
 anchor and the new lead are either all selected or all deselected.
setLeadSelectionIndex(int)
- Method in interface javax.swing.
ListSelectionModel
Set the lead selection index.
setLeadSelectionPath(TreePath)
- Method in class javax.swing.
JTree
Sets the path identifies as the lead.
setLeafIcon(Icon)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Sets the icon used to represent leaf nodes.
setLeft(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the left property definition in CSS2.
setLeftChildIndent(int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the left child indent.
setLeftComponent(Component)
- Method in class javax.swing.
JSplitPane
Sets the component to the left (or above) the divider.
setLeftIndent(MutableAttributeSet, float)
- Static method in class javax.swing.text.
StyleConstants
Sets left indent.
setLeftInset(float)
- Method in class javax.swing.text.
AsyncBoxView
Set the left part of the margin around the view.
setLength(int)
- Method in class java.lang.
StringBuilder
Sets the length of the character sequence.
setLength(int)
- Method in class java.lang.
StringBuffer
setLength(int)
- Method in class java.net.
DatagramPacket
Set the length for this packet.
setLength(int)
- Method in class javax.imageio.stream.
IIOByteBuffer
Updates the value that will be returned by subsequent calls
 to the
getLength
method.
setLength(long)
- Method in class java.io.
RandomAccessFile
Sets the length of this file.
setLenient(boolean)
- Method in class java.text.
DateFormat
Specify whether or not date/time parsing is to be lenient.
setLenient(boolean)
- Method in class java.util.
Calendar.Builder
Sets the lenient mode parameter to the value given by
lenient
.
setLenient(boolean)
- Method in class java.util.
Calendar
Specifies whether or not date/time interpretation is to be lenient.
setLetterSpacing(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the letter-spacing property definition in CSS2.
setLevel(int)
- Method in class java.util.zip.
Deflater
Sets the compression level to the specified value.
setLevel(int)
- Method in class java.util.zip.
ZipOutputStream
Sets the compression level for subsequent entries which are DEFLATED.
setLevel(Level)
- Method in class java.util.logging.
Handler
Set the log level specifying which message levels will be
 logged by this
Handler
.
setLevel(Level)
- Method in class java.util.logging.
Logger
Set the log level specifying which message levels will be
 logged by this logger.
setLevel(Level)
- Method in class java.util.logging.
LogRecord
Set the logging message level, for example Level.SEVERE.
setLexicalHandler(LexicalHandler)
- Method in class javax.xml.transform.sax.
SAXResult
Set the SAX2
LexicalHandler
for the output.
setLibraryDirectory(String)
- Method in class javax.management.loading.
MLet
Deprecated.
Sets the directory used by the library loader for storing
 native libraries before they are loaded into memory.
setLibraryDirectory(String)
- Method in interface javax.management.loading.
MLetMBean
Deprecated.
Sets the directory used by the library loader for storing
 native libraries before they are loaded into memory.
setLightWeightPopupEnabled(boolean)
- Method in class javax.swing.
JComboBox
Sets the
lightWeightPopupEnabled
property, which
 provides a hint as to whether or not a lightweight
Component
should be used to contain the
JComboBox
, versus a heavyweight
Component
such as a
Panel
or a
Window
.
setLightWeightPopupEnabled(boolean)
- Method in class javax.swing.
JPopupMenu
Sets the value of the
lightWeightPopupEnabled
property,
 which by default is
true
.
setLightWeightPopupEnabled(boolean)
- Method in class javax.swing.
ToolTipManager
When displaying the
JToolTip
, the
ToolTipManager
chooses to use a lightweight
JPanel
if it fits.
setLimit(int)
- Method in class javax.swing.undo.
UndoManager
Sets the maximum number of edits this
UndoManager
holds.
setLine(double, double, double, double)
- Method in class java.awt.geom.
Line2D.Double
Sets the location of the end points of this
Line2D
to
 the specified double coordinates.
setLine(double, double, double, double)
- Method in class java.awt.geom.
Line2D.Float
Sets the location of the end points of this
Line2D
to
 the specified double coordinates.
setLine(double, double, double, double)
- Method in class java.awt.geom.
Line2D
Sets the location of the end points of this
Line2D
to
 the specified double coordinates.
setLine(float, float, float, float)
- Method in class java.awt.geom.
Line2D.Float
Sets the location of the end points of this
Line2D
to the specified float coordinates.
setLine(Line2D)
- Method in class java.awt.geom.
Line2D
Sets the location of the end points of this
Line2D
to
 the same as those end points of the specified
Line2D
.
setLine(Point2D, Point2D)
- Method in class java.awt.geom.
Line2D
Sets the location of the end points of this
Line2D
to
 the specified
Point2D
coordinates.
setLineHeight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the line-height property definition in CSS2.
setLineIncrement(int)
- Method in class java.awt.
Scrollbar
Deprecated.
As of JDK version 1.1,
 replaced by
setUnitIncrement(int)
.
setLineLength(int)
- Method in class javax.swing.text.
AbstractWriter
Enables subclasses to set the number of characters they
 want written per line.
setLineNumber(int)
- Method in class java.io.
LineNumberInputStream
Deprecated.
Sets the line number to the specified argument.
setLineNumber(int)
- Method in class java.io.
LineNumberReader
Set the current line number.
setLineNumber(int)
- Method in class org.xml.sax.helpers.
LocatorImpl
Set the line number for this locator (1-based).
setLineSeparator(String)
- Method in class javax.swing.text.
AbstractWriter
Sets the String used to represent newlines.
setLineSpacing(float)
- Method in class javax.swing.text.
ParagraphView
Sets the line spacing.
setLineSpacing(MutableAttributeSet, float)
- Static method in class javax.swing.text.
StyleConstants
Sets line spacing.
setLineWrap(boolean)
- Method in class javax.swing.
JTextArea
Sets the line-wrapping policy of the text area.
setLink(String)
- Method in interface org.w3c.dom.html.
HTMLBodyElement
setLinkCursor(Cursor)
- Method in class javax.swing.text.html.
HTMLEditorKit
Sets the cursor to use over links.
setLinkExplanation(String)
- Method in exception class javax.naming.
LinkException
Sets the explanation associated with the problem encountered
 when resolving a link.
setLinkRemainingName(Name)
- Method in exception class javax.naming.
LinkException
Sets the remaining link name field of this exception.
setLinkResolvedName(Name)
- Method in exception class javax.naming.
LinkException
Sets the resolved link name field of this exception.
setLinkResolvedObj(Object)
- Method in exception class javax.naming.
LinkException
Sets the link resolved object field of this exception.
setList(List<?>)
- Method in class javax.swing.
SpinnerListModel
Changes the list that defines this sequence and resets the index
 of the models
value
to zero.
setListData(E[])
- Method in class javax.swing.
JList
Constructs a read-only
ListModel
from an array of items,
 and calls
setModel
with this model.
setListData(Vector<? extends E>)
- Method in class javax.swing.
JList
Constructs a read-only
ListModel
from a
Vector
and calls
setModel
with this model.
setListStyle(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the list-style property definition in CSS2.
setListStyleImage(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the list-style-image property definition in CSS2.
setListStylePosition(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the list-style-position property definition in CSS2.
setListStyleType(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the list-style-type property definition in CSS2.
setLoadsSynchronously(boolean)
- Method in class javax.swing.text.html.
ImageView
Sets how the image is loaded.
setLocale(Locale)
- Method in class java.awt.
Component
Sets the locale of this component.
setLocale(Locale)
- Method in interface java.awt.im.spi.
InputMethod
Attempts to set the input locale.
setLocale(Locale)
- Method in class java.beans.beancontext.
BeanContextSupport
Sets the locale of this BeanContext.
setLocale(Locale)
- Method in class java.text.
MessageFormat
Sets the locale to be used when creating or comparing subformats.
setLocale(Locale)
- Method in class java.util.
Calendar.Builder
Sets the locale parameter to the given
locale
.
setLocale(Locale)
- Method in class java.util.
Locale.Builder
Resets the
Builder
to match the provided
locale
.
setLocale(Locale)
- Method in class javax.imageio.
ImageReader
Sets the current
Locale
of this
ImageReader
to the given value.
setLocale(Locale)
- Method in class javax.imageio.
ImageWriter
Sets the current
Locale
of this
ImageWriter
to the given value.
setLocale(Locale)
- Method in class javax.security.auth.callback.
LanguageCallback
Set the retrieved
Locale
.
setLocale(Locale)
- Method in interface javax.tools.
DocumentationTool.DocumentationTask
Sets the locale to be applied when formatting diagnostics and
 other localized data.
setLocale(Locale)
- Method in interface javax.tools.
JavaCompiler.CompilationTask
Sets the locale to be applied when formatting diagnostics and
 other localized data.
setLocale(Locale)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Set the locale for error reporting.
setLocale(Locale)
- Method in interface org.xml.sax.
Parser
Deprecated.
Allow an application to request a locale for errors and warnings.
setLocalName(int, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Set the local name of a specific attribute.
setLocalPatternChars(String)
- Method in class java.text.
DateFormatSymbols
Sets localized date-time pattern characters.
setLocation(double, double)
- Method in class java.awt.geom.
Point2D.Double
Sets the location of this
Point2D
to the
 specified
double
coordinates.
setLocation(double, double)
- Method in class java.awt.geom.
Point2D.Float
Sets the location of this
Point2D
to the
 specified
double
coordinates.
setLocation(double, double)
- Method in class java.awt.geom.
Point2D
Sets the location of this
Point2D
to the
 specified
double
coordinates.
setLocation(double, double)
- Method in class java.awt.
Point
Sets the location of this point to the specified double coordinates.
setLocation(float, float)
- Method in class java.awt.geom.
Point2D.Float
Sets the location of this
Point2D
to the
 specified
float
coordinates.
setLocation(int, int)
- Method in class java.awt.
Component
Moves this component to a new location.
setLocation(int, int)
- Method in class java.awt.
Point
Changes the point to have the specified location.
setLocation(int, int)
- Method in class java.awt.
Rectangle
Moves this
Rectangle
to the specified location.
setLocation(int, int)
- Method in class java.awt.
Window
Moves this component to a new location.
setLocation(int, int)
- Method in class javax.swing.
JPopupMenu
Sets the location of the upper left corner of the
 popup menu using x, y coordinates.
setLocation(Point2D)
- Method in class java.awt.geom.
Point2D
Sets the location of this
Point2D
to the same
 coordinates as the specified
Point2D
object.
setLocation(Point)
- Method in class com.sun.java.accessibility.util.
Translator
Sets the location of the object relative to parent.
setLocation(Point)
- Method in class java.awt.
Component.AccessibleAWTComponent
Sets the location of the object relative to the parent.
setLocation(Point)
- Method in class java.awt.
Component
Moves this component to a new location.
setLocation(Point)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Sets the location of the object relative to the parent.
setLocation(Point)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Sets the location of the object relative to the parent.
setLocation(Point)
- Method in class java.awt.
Point
Sets the location of the point to the specified location.
setLocation(Point)
- Method in class java.awt.
Rectangle
Moves this
Rectangle
to the specified location.
setLocation(Point)
- Method in class java.awt.
Window
Moves this component to a new location.
setLocation(Point)
- Method in interface javax.accessibility.
AccessibleComponent
Sets the location of the object relative to the parent.
setLocation(Point)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setLocation(Point)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the location of the object relative to the parent.
setLocation(Point)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
setLocation(Point)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setLocation(JavaFileManager.Location, Iterable<? extends File>)
- Method in interface javax.tools.
StandardJavaFileManager
Associates the given search path with the given location.
setLocation(Location)
- Method in class javax.xml.stream.
XMLEventFactory
This method allows setting of the Location on each event that
 is created by this factory.
setLocationByPlatform(boolean)
- Method in class java.awt.
Window
Sets whether this Window should appear at the default location for the
 native windowing system or at the current location (returned by
getLocation
) the next time the Window is made visible.
setLocationForModule(JavaFileManager.Location, String, Collection<? extends Path>)
- Method in interface javax.tools.
StandardJavaFileManager
Associates the given search path with the given module and location,
 which must be a module-oriented or output location.
setLocationFromPaths(JavaFileManager.Location, Collection<? extends Path>)
- Method in interface javax.tools.
StandardJavaFileManager
Associates the given search path with the given location.
setLocationRelativeTo(Component)
- Method in class java.awt.
Window
Sets the location of the window relative to the specified
 component according to the following scenarios.
setLocator(SourceLocator)
- Method in exception class javax.xml.transform.
TransformerException
Method setLocator sets an instance of a SourceLocator
 object that specifies where an error occurred.
setLockingKeyState(int, boolean)
- Method in class java.awt.
Toolkit
Sets the state of the given locking key on the keyboard.
setLog(OutputStream)
- Static method in class java.rmi.server.
RemoteServer
Log RMI calls to the output stream
out
.
setLogger(Logger)
- Static method in class javax.sql.rowset.spi.
SyncFactory
Sets the logging object to be used by the
SyncProvider
implementation provided by the
SyncFactory
.
setLogger(Logger, Level)
- Static method in class javax.sql.rowset.spi.
SyncFactory
Sets the logging object that is used by
SyncProvider
implementations provided by the
SyncFactory
SPI.
setLoggerLevel(String, String)
- Method in interface java.lang.management.
PlatformLoggingMXBean
Sets the specified logger to the specified new
level
.
setLoggerLevel(String, String)
- Method in interface java.util.logging.
LoggingMXBean
Deprecated.
Sets the specified logger to the specified new level.
setLoggerName(String)
- Method in class java.util.logging.
LogRecord
Set the source Logger's name.
setLogicalStyle(int, Style)
- Method in class javax.swing.text.
DefaultStyledDocument
Sets the logical style to use for the paragraph at the
 given position.
setLogicalStyle(int, Style)
- Method in interface javax.swing.text.
StyledDocument
Sets the logical style to use for the paragraph at the
 given position.
setLogicalStyle(Style)
- Method in class javax.swing.
JTextPane
Sets the logical style to use for the paragraph at the
 current caret position.
setLoginTimeout(int)
- Static method in class java.sql.
DriverManager
Sets the maximum time in seconds that a driver will wait
 while attempting to connect to a database once the driver has
 been identified.
setLoginTimeout(int)
- Method in interface javax.sql.
CommonDataSource
Sets the maximum time in seconds that this data source will wait
 while attempting to connect to a database.
setLoginTimeout(int)
- Method in interface javax.sql.
ConnectionPoolDataSource
Sets the maximum time in seconds that this data source will wait
 while attempting to connect to a database.
setLoginTimeout(int)
- Method in interface javax.sql.
DataSource
Sets the maximum time in seconds that this data source will wait
 while attempting to connect to a database.
setLoginTimeout(int)
- Method in interface javax.sql.
XADataSource
Sets the maximum time in seconds that this data source will wait
 while attempting to connect to a database.
setLogStream(PrintStream)
- Static method in class java.sql.
DriverManager
Deprecated.
Use
setLogWriter
setLogStream(PrintStream)
- Static method in class javax.swing.
DebugGraphics
Sets the stream to which the DebugGraphics logs drawing operations.
setLogTimers(boolean)
- Static method in class javax.swing.
Timer
Enables or disables the timer log.
setLogWriter(PrintWriter)
- Static method in class java.sql.
DriverManager
Sets the logging/tracing
PrintWriter
object
 that is used by the
DriverManager
and all drivers.
setLogWriter(PrintWriter)
- Method in interface javax.sql.
CommonDataSource
Sets the log writer for this
DataSource
object to the given
java.io.PrintWriter
object.
setLogWriter(PrintWriter)
- Method in interface javax.sql.
ConnectionPoolDataSource
Sets the log writer for this
DataSource
object to the given
java.io.PrintWriter
object.
setLogWriter(PrintWriter)
- Method in interface javax.sql.
DataSource
Sets the log writer for this
DataSource
object to the given
java.io.PrintWriter
object.
setLogWriter(PrintWriter)
- Method in interface javax.sql.
XADataSource
Sets the log writer for this
DataSource
object to the given
java.io.PrintWriter
object.
setLong(int, long)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java
long
value.
setLong(int, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
long
in the Java
 programming language.
setLong(int, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java
long
value.
setLong(Object, int, long)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified
long
value.
setLong(Object, long)
- Method in class java.lang.reflect.
Field
Sets the value of a field as a
long
on the specified object.
setLong(String, long)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java
long
value.
setLong(String, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java
long
value.
setLong(String, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java
long
value.
setLongDesc(String)
- Method in interface org.w3c.dom.html.
HTMLFrameElement
setLongDesc(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setLongDesc(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setLongThreadID(long)
- Method in class java.util.logging.
LogRecord
Set an identifier for the thread where the message originated.
setLookAndFeel(String)
- Static method in class javax.swing.
UIManager
Loads the
LookAndFeel
specified by the given class
 name, using the current thread's context class loader, and
 passes it to
setLookAndFeel(LookAndFeel)
.
setLookAndFeel(LookAndFeel)
- Static method in class javax.swing.
UIManager
Sets the current look and feel to
newLookAndFeel
.
setLoopbackMode(boolean)
- Method in class java.net.
MulticastSocket
Deprecated.
Use
DatagramSocket.setOption(SocketOption, Object)
with
StandardSocketOptions.IP_MULTICAST_LOOP
instead. The loopback mode is enabled by default,
MulticastSocket.setOption(StandardSocketOptions.IP_MULTICAST_LOOP, false)
disables it.
setLoopCount(int)
- Method in interface javax.sound.midi.
Sequencer
Sets the number of repetitions of the loop for playback.
setLoopEndPoint(long)
- Method in interface javax.sound.midi.
Sequencer
Sets the last MIDI tick that will be played in the loop.
setLoopPoints(int, int)
- Method in interface javax.sound.sampled.
Clip
Sets the first and last sample frames that will be played in the loop.
setLoopStartPoint(long)
- Method in interface javax.sound.midi.
Sequencer
Sets the first MIDI tick that will be played in the loop.
setLowSrc(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setMagicCaretPosition(Point)
- Method in interface javax.swing.text.
Caret
Set the current caret visual location.
setMagicCaretPosition(Point)
- Method in class javax.swing.text.
DefaultCaret
Saves the current caret position.
setMajorOffset(float)
- Method in class javax.swing.text.
AsyncBoxView.ChildState
This method should only be called by the ChildLocator,
 it is simply a convenient place to hold the cached
 location.
setMajorTickSpacing(int)
- Method in class javax.swing.
JSlider
This method sets the major tick spacing.
setManagedResource(Object, String)
- Method in interface javax.management.modelmbean.
ModelMBean
Sets the instance handle of the object against which to
 execute all methods in this ModelMBean management interface
 (MBeanInfo and Descriptors).
setManagedResource(Object, String)
- Method in class javax.management.modelmbean.
RequiredModelMBean
Sets the instance handle of the object against which to
 execute all methods in this ModelMBean management interface
 (MBeanInfo and Descriptors).
setMargin(Insets)
- Method in class javax.swing.
AbstractButton
Sets space for margin between the button's border and
 the label.
setMargin(Insets)
- Method in class javax.swing.
JMenuBar
Sets the margin between the menubar's border and
 its menus.
setMargin(Insets)
- Method in class javax.swing.
JToolBar
Sets the margin between the tool bar's border and
 its buttons.
setMargin(Insets)
- Method in class javax.swing.text.
JTextComponent
Sets margin space between the text component's border
 and its text.
setMargin(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin property definition in CSS2.
setMarginBottom(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin-bottom property definition in CSS2.
setMarginHeight(String)
- Method in interface org.w3c.dom.html.
HTMLFrameElement
setMarginHeight(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setMarginLeft(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin-left property definition in CSS2.
setMarginRight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin-right property definition in CSS2.
setMarginTop(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin-top property definition in CSS2.
setMarginWidth(String)
- Method in interface org.w3c.dom.html.
HTMLFrameElement
setMarginWidth(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setMarkerOffset(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the marker-offset property definition in CSS2.
setMarks(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the marks property definition in CSS2.
setMask(String)
- Method in class javax.swing.text.
MaskFormatter
Sets the mask dictating the legal characters.
setMasterSyncMode(Sequencer.SyncMode)
- Method in interface javax.sound.midi.
Sequencer
Sets the source of timing information used by this sequencer.
setMatchAllSubjectAltNames(boolean)
- Method in class java.security.cert.
X509CertSelector
Enables/disables matching all of the subjectAlternativeNames
 specified in the
setSubjectAlternativeNames
or
addSubjectAlternativeName
methods.
setMatchColumn(int)
- Method in interface javax.sql.rowset.
Joinable
Sets the designated column as the match column for this
RowSet
object.
setMatchColumn(int[])
- Method in interface javax.sql.rowset.
Joinable
Sets the designated columns as the match column for this
RowSet
object.
setMatchColumn(String)
- Method in interface javax.sql.rowset.
Joinable
Sets the designated column as the match column for this
RowSet
object.
setMatchColumn(String[])
- Method in interface javax.sql.rowset.
Joinable
Sets the designated columns as the match column for this
RowSet
object.
setMaxAge(long)
- Method in class java.net.
HttpCookie
Sets the maximum age of the cookie in seconds.
setMaxAge(Duration)
- Method in class jdk.jfr.consumer.
RecordingStream
Determines how far back data is kept for the stream.
setMaxAge(Duration)
- Method in class jdk.jfr.
Recording
Determines how far back data is kept in the disk repository.
setMaxAge(Duration)
- Method in class jdk.management.jfr.
RemoteRecordingStream
Determines how far back data is kept for the stream.
setMaxCRLNumber(BigInteger)
- Method in class java.security.cert.
X509CRLSelector
Sets the maxCRLNumber criterion.
setMaxFieldSize(int)
- Method in interface java.sql.
Statement
Sets the limit for the maximum number of bytes that can be returned for
 character and binary column values in a
ResultSet
object produced by this
Statement
object.
setMaxFieldSize(int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the maximum number of bytes that can be used for a column
 value in this
RowSet
object to the given number.
setMaxFieldSize(int)
- Method in interface javax.sql.
RowSet
Sets the maximum number of bytes that can be returned for a column
 value to the given number of bytes.
setMaxHeight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the max-height property definition in CSS2.
setMaximizable(boolean)
- Method in class javax.swing.
JInternalFrame
Sets the
maximizable
property,
 which determines whether the
JInternalFrame
can be maximized by
 some user action.
setMaximizedBounds(Rectangle)
- Method in class java.awt.
Frame
Sets the maximized bounds for this frame.
setMaximum(boolean)
- Method in class javax.swing.
JInternalFrame
Maximizes and restores this internal frame.
setMaximum(int)
- Method in interface java.awt.
Adjustable
Sets the maximum value of the adjustable object.
setMaximum(int)
- Method in class java.awt.
Scrollbar
Sets the maximum value of this scroll bar.
setMaximum(int)
- Method in class java.awt.
ScrollPaneAdjustable
This method should
NOT
be called by user code.
setMaximum(int)
- Method in interface javax.swing.
BoundedRangeModel
Sets the model's maximum to
newMaximum
.
setMaximum(int)
- Method in class javax.swing.
DefaultBoundedRangeModel
Sets the maximum to
n
after ensuring that
n
that the other three properties obey the model's constraints:
setMaximum(int)
- Method in class javax.swing.
JProgressBar
Sets the progress bar's maximum value
 (stored in the progress bar's data model) to
n
.
setMaximum(int)
- Method in class javax.swing.
JScrollBar
Sets the model's maximum property.
setMaximum(int)
- Method in class javax.swing.
JSlider
Sets the slider's maximum value to
maximum
.
setMaximum(int)
- Method in class javax.swing.
ProgressMonitor
Specifies the maximum value.
setMaximum(Comparable<?>)
- Method in class javax.swing.
SpinnerNumberModel
Changes the upper bound for numbers in this sequence.
setMaximum(Comparable<?>)
- Method in class javax.swing.text.
InternationalFormatter
Sets the maximum permissible value.
setMaximumFractionDigits(int)
- Method in class java.text.
CompactNumberFormat
Sets the maximum number of digits allowed in the fraction portion of a
 number.
setMaximumFractionDigits(int)
- Method in class java.text.
DecimalFormat
Sets the maximum number of digits allowed in the fraction portion of a
 number.
setMaximumFractionDigits(int)
- Method in class java.text.
NumberFormat
Sets the maximum number of digits allowed in the fraction portion of a
 number. maximumFractionDigits must be ≥ minimumFractionDigits.
setMaximumIntegerDigits(int)
- Method in class java.text.
CompactNumberFormat
Sets the maximum number of digits allowed in the integer portion of a
 number.
setMaximumIntegerDigits(int)
- Method in class java.text.
DecimalFormat
Sets the maximum number of digits allowed in the integer portion of a
 number.
setMaximumIntegerDigits(int)
- Method in class java.text.
NumberFormat
Sets the maximum number of digits allowed in the integer portion of a
 number. maximumIntegerDigits must be ≥ minimumIntegerDigits.
setMaximumPacketSize(int)
- Method in class javax.net.ssl.
SSLParameters
Sets the maximum expected network packet size in bytes for
 SSL/TLS/DTLS records.
setMaximumPoolSize(int)
- Method in class java.util.concurrent.
ThreadPoolExecutor
Sets the maximum allowed number of threads.
setMaximumRowCount(int)
- Method in class javax.swing.
JComboBox
Sets the maximum number of rows the
JComboBox
displays.
setMaximumSize(Dimension)
- Method in class java.awt.
Component
Sets the maximum size of this component to a constant
 value.
setMaximumSize(Dimension)
- Method in class javax.swing.
JComponent
Sets the maximum size of this component to a constant
 value.
setMaximumZoneSize(int)
- Method in class javax.swing.text.
ZoneView
Set the desired maximum zone size.
setMaxLength(int)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setMaxPage(int)
- Method in class java.awt.
JobAttributes
Specifies the maximum value the user can specify as the last page to
 be printed for jobs using these attributes.
setMaxPathLength(int)
- Method in class java.security.cert.
PKIXBuilderParameters
Sets the value of the maximum number of non-self-issued intermediate
 certificates that may exist in a certification path.
setMaxPriority(int)
- Method in class java.lang.
ThreadGroup
Sets the maximum priority of the group.
setMaxRows(int)
- Method in interface java.sql.
Statement
Sets the limit for the maximum number of rows that any
ResultSet
object  generated by this
Statement
object can contain to the given number.
setMaxRows(int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the maximum number of rows that this
RowSet
object may contain to
 the given number.
setMaxRows(int)
- Method in interface javax.sql.
RowSet
Sets the maximum number of rows that this
RowSet
object can contain to the specified number.
setMaxSize(long)
- Method in class jdk.jfr.consumer.
RecordingStream
Determines how much data is kept for the stream.
setMaxSize(long)
- Method in class jdk.jfr.
Recording
Determines how much data is kept in the disk repository.
setMaxSize(long)
- Method in class jdk.management.jfr.
RemoteRecordingStream
Determines how much data is kept for the stream.
setMaxSortKeys(int)
- Method in class javax.swing.
DefaultRowSorter
Sets the maximum number of sort keys.
setMaxWidth(int)
- Method in class javax.swing.table.
TableColumn
Sets the
TableColumn
's maximum width to
maxWidth
or,
 if
maxWidth
is less than the minimum width,
 to the minimum width.
setMaxWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the max-width property definition in CSS2.
setMaxZonesLoaded(int)
- Method in class javax.swing.text.
ZoneView
Sets the current setting of the number of zones
 allowed to be loaded at the same time.
setMBeanDescriptor(Descriptor)
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Sets the ModelMBean's descriptor.
setMBeanDescriptor(Descriptor)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
setMBeanServer(MBeanServer)
- Method in class javax.management.
AttributeValueExp
Deprecated.
This method has no effect.  The MBean Server used to
 obtain an attribute value is
QueryEval.getMBeanServer()
.
setMBeanServer(MBeanServer)
- Method in class javax.management.
ObjectName
setMBeanServer(MBeanServer)
- Method in class javax.management.
QueryEval
Sets the MBean server on which the query is to be performed.
setMBeanServer(MBeanServer)
- Method in interface javax.management.
QueryExp
Sets the MBean server on which the query is to be performed.
setMBeanServer(MBeanServer)
- Method in interface javax.management.remote.
MBeanServerForwarder
Sets the MBeanServer object to which requests will be forwarded
 after treatment by this object.
setMBeanServer(MBeanServer)
- Method in class javax.management.remote.rmi.
RMIServerImpl
Sets the
MBeanServer
to which this connector
 server is attached.
setMBeanServer(MBeanServer)
- Method in class javax.management.
StringValueExp
Deprecated.
setMBeanServer(MBeanServer)
- Method in interface javax.management.
ValueExp
Deprecated.
This method is not needed because a
ValueExp
can access the MBean server in which it
 is being evaluated by using
QueryEval.getMBeanServer()
.
setMBeanServerForwarder(MBeanServerForwarder)
- Method in class javax.management.remote.
JMXConnectorServer
setMBeanServerForwarder(MBeanServerForwarder)
- Method in interface javax.management.remote.
JMXConnectorServerMBean
Inserts an object that intercepts requests for the MBean server
 that arrive through this connector server.
setMedia(PageAttributes.MediaType)
- Method in class java.awt.
PageAttributes
Specifies the desired paper size for pages using these attributes.
setMedia(String)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setMedia(String)
- Method in interface org.w3c.dom.html.
HTMLStyleElement
setMediaText(String)
- Method in interface org.w3c.dom.stylesheets.
MediaList
The parsable textual representation of the media list.
setMediaToDefault()
- Method in class java.awt.
PageAttributes
Sets the paper size for pages using these attributes to the default
 size for the default locale.
setMember(String, Object)
- Method in class netscape.javascript.
JSObject
Sets a named member of a JavaScript object.
setMenu(PopupMenu)
- Method in class java.awt.
Taskbar
Attaches the contents of the provided PopupMenu to the application icon
 in the task area.
setMenuBar(MenuBar)
- Method in class java.awt.
Frame
Sets the menu bar for this frame to the specified menu bar.
setMenuBar(JMenuBar)
- Method in class javax.swing.
JInternalFrame
Deprecated.
As of Swing version 1.0.3
  replaced by
setJMenuBar(JMenuBar m)
.
setMenuBar(JMenuBar)
- Method in class javax.swing.
JRootPane
Deprecated.
As of Swing version 1.0.3
  replaced by
setJMenuBar(JMenuBar menu)
.
setMenuLocation(int, int)
- Method in class javax.swing.
JMenu
Sets the location of the popup component.
setMessage(byte[], int)
- Method in class javax.sound.midi.
MidiMessage
Sets the data for the MIDI message.
setMessage(byte[], int)
- Method in class javax.sound.midi.
SysexMessage
Sets the data for the system exclusive message.
setMessage(int)
- Method in class javax.sound.midi.
ShortMessage
Sets the parameters for a MIDI message that takes no data bytes.
setMessage(int, byte[], int)
- Method in class javax.sound.midi.
MetaMessage
Sets the message parameters for a
MetaMessage
.
setMessage(int, byte[], int)
- Method in class javax.sound.midi.
SysexMessage
Sets the data for the system exclusive message.
setMessage(int, int, int)
- Method in class javax.sound.midi.
ShortMessage
Sets the parameters for a MIDI message that takes one or two data bytes.
setMessage(int, int, int, int)
- Method in class javax.sound.midi.
ShortMessage
Sets the short message parameters for a channel message which takes up to
 two data bytes.
setMessage(Object)
- Method in class javax.swing.
JOptionPane
Sets the option pane's message-object.
setMessage(String)
- Method in class java.util.logging.
LogRecord
Set the "raw" log message, before localization or formatting.
setMessageDigest(MessageDigest)
- Method in class java.security.
DigestInputStream
Associates the specified message digest with this stream.
setMessageDigest(MessageDigest)
- Method in class java.security.
DigestOutputStream
Associates the specified message digest with this stream.
setMessageType(int)
- Method in class javax.swing.
JOptionPane
Sets the option pane's message type.
setMetadata(IIOMetadata)
- Method in class javax.imageio.
IIOImage
Sets the
IIOMetadata
to a new object, or
null
.
setMetaData(RowSetMetaData)
- Method in interface javax.sql.rowset.
CachedRowSet
Sets the metadata for this
CachedRowSet
object with
 the given
RowSetMetaData
object.
setMetaData(RowSetMetaData)
- Method in interface javax.sql.
RowSetInternal
Sets the given
RowSetMetaData
object as the
RowSetMetaData
object for this
RowSet
object.
setMethod(int)
- Method in class java.util.zip.
ZipEntry
Sets the compression method for the entry.
setMethod(int)
- Method in class java.util.zip.
ZipOutputStream
Sets the default compression method for subsequent entries.
setMethod(String)
- Method in interface org.w3c.dom.html.
HTMLFormElement
setMicrosecondPosition(long)
- Method in interface javax.sound.midi.
Sequencer
Sets the current position in the sequence, expressed in microseconds.
setMicrosecondPosition(long)
- Method in interface javax.sound.sampled.
Clip
Sets the media position in microseconds.
setMillis(long)
- Method in class java.util.logging.
LogRecord
Deprecated.
LogRecord maintains timestamps with nanosecond resolution,
             using
Instant
values. For this reason,
setInstant()
should be used in preference to
setMillis()
.
setMillisecond(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set milliseconds.
setMillisToDecideToPopup(int)
- Method in class javax.swing.
ProgressMonitor
Specifies the amount of time to wait before deciding whether or
 not to popup a progress monitor.
setMillisToPopup(int)
- Method in class javax.swing.
ProgressMonitor
Specifies the amount of time it will take for the popup to appear.
setMinCRLNumber(BigInteger)
- Method in class java.security.cert.
X509CRLSelector
Sets the minCRLNumber criterion.
setMinHeight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the min-height property definition in CSS2.
setMinimalDaysInFirstWeek(int)
- Method in class java.util.
Calendar
Sets what the minimal days required in the first week of the year are;
 For example, if the first week is defined as one that contains the first
 day of the first month of a year, call this method with value 1.
setMinimum(int)
- Method in interface java.awt.
Adjustable
Sets the minimum value of the adjustable object.
setMinimum(int)
- Method in class java.awt.
Scrollbar
Sets the minimum value of this scroll bar.
setMinimum(int)
- Method in class java.awt.
ScrollPaneAdjustable
This method should
NOT
be called by user code.
setMinimum(int)
- Method in interface javax.swing.
BoundedRangeModel
Sets the model's minimum to
newMinimum
.
setMinimum(int)
- Method in class javax.swing.
DefaultBoundedRangeModel
Sets the minimum to
n
after ensuring that
n
that the other three properties obey the model's constraints:
setMinimum(int)
- Method in class javax.swing.
JProgressBar
Sets the progress bar's minimum value
 (stored in the progress bar's data model) to
n
.
setMinimum(int)
- Method in class javax.swing.
JScrollBar
Sets the model's minimum property.
setMinimum(int)
- Method in class javax.swing.
JSlider
Sets the slider's minimum value to
minimum
.
setMinimum(int)
- Method in class javax.swing.
ProgressMonitor
Specifies the minimum value.
setMinimum(Comparable<?>)
- Method in class javax.swing.
SpinnerNumberModel
Changes the lower bound for numbers in this sequence.
setMinimum(Comparable<?>)
- Method in class javax.swing.text.
InternationalFormatter
Sets the minimum permissible value.
setMinimumFractionDigits(int)
- Method in class java.text.
CompactNumberFormat
Sets the minimum number of digits allowed in the fraction portion of a
 number.
setMinimumFractionDigits(int)
- Method in class java.text.
DecimalFormat
Sets the minimum number of digits allowed in the fraction portion of a
 number.
setMinimumFractionDigits(int)
- Method in class java.text.
NumberFormat
Sets the minimum number of digits allowed in the fraction portion of a
 number. minimumFractionDigits must be ≤ maximumFractionDigits.
setMinimumIntegerDigits(int)
- Method in class java.text.
CompactNumberFormat
Sets the minimum number of digits allowed in the integer portion of a
 number.
setMinimumIntegerDigits(int)
- Method in class java.text.
DecimalFormat
Sets the minimum number of digits allowed in the integer portion of a
 number.
setMinimumIntegerDigits(int)
- Method in class java.text.
NumberFormat
Sets the minimum number of digits allowed in the integer portion of a
 number. minimumIntegerDigits must be ≤ maximumIntegerDigits.
setMinimumSize(Dimension)
- Method in class java.awt.
Component
Sets the minimum size of this component to a constant
 value.
setMinimumSize(Dimension)
- Method in class java.awt.
Window
Sets the minimum size of this window to a constant
 value.
setMinimumSize(Dimension)
- Method in class javax.swing.
JComponent
Sets the minimum size of this component to a constant
 value.
setMinor(int, String)
- Method in exception class org.ietf.jgss.
GSSException
Used by the exception thrower to set the mechanism
 level minor error code and its string explanation.
setMinorTickSpacing(int)
- Method in class javax.swing.
JSlider
This method sets the minor tick spacing.
setMinPage(int)
- Method in class java.awt.
JobAttributes
Specifies the minimum value the user can specify as the first page to
 be printed for jobs using these attributes.
setMinusSign(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used to represent minus sign.
setMinute(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set minutes.
setMinutes(int)
- Method in class java.sql.
Date
Deprecated.
setMinutes(int)
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.set(Calendar.MINUTE, int minutes)
.
setMinWidth(int)
- Method in class javax.swing.table.
TableColumn
Sets the
TableColumn
's minimum width to
minWidth
,
 adjusting the new minimum width if necessary to ensure that
 0 <=
minWidth
<=
maxWidth
.
setMinWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the min-width property definition in CSS2.
setMixingCutoutShape(Shape)
- Method in class java.awt.
Component
Sets a 'mixing-cutout' shape for this lightweight component.
setMnemonic(char)
- Method in class javax.swing.
AbstractButton
This method is now obsolete, please use
setMnemonic(int)
to set the mnemonic for a button.
setMnemonic(int)
- Method in class javax.swing.
AbstractButton
Sets the keyboard mnemonic on the current model.
setMnemonic(int)
- Method in interface javax.swing.
ButtonModel
Sets the keyboard mnemonic (shortcut key or
 accelerator key) for the button.
setMnemonic(int)
- Method in class javax.swing.
DefaultButtonModel
Sets the keyboard mnemonic (shortcut key or
 accelerator key) for the button.
setMnemonicAt(int, int)
- Method in class javax.swing.
JTabbedPane
Sets the keyboard mnemonic for accessing the specified tab.
setModal(boolean)
- Method in class java.awt.
Dialog
Specifies whether this dialog should be modal.
setModalExclusionType(Dialog.ModalExclusionType)
- Method in class java.awt.
Window
Specifies the modal exclusion type for this window.
setModalityType(Dialog.ModalityType)
- Method in class java.awt.
Dialog
Sets the modality type for this dialog.
setMode(int)
- Method in class java.awt.
FileDialog
Sets the mode of the file dialog.
setModel(BoundedRangeModel)
- Method in class javax.swing.
JProgressBar
Sets the data model used by the
JProgressBar
.
setModel(BoundedRangeModel)
- Method in class javax.swing.
JScrollBar
Sets the model that handles the scrollbar's four
 fundamental properties: minimum, maximum, value, extent.
setModel(BoundedRangeModel)
- Method in class javax.swing.
JSlider
Sets the
BoundedRangeModel
that handles the slider's three
 fundamental properties: minimum, maximum, value.
setModel(ButtonModel)
- Method in class javax.swing.
AbstractButton
Sets the model that this button represents.
setModel(ButtonModel)
- Method in class javax.swing.
JMenu
Sets the data model for the "menu button" -- the label
 that the user clicks to open or close the menu.
setModel(ButtonModel)
- Method in class javax.swing.
JMenuItem
Sets the model that this button represents.
setModel(ComboBoxModel<E>)
- Method in class javax.swing.
JComboBox
Sets the data model that the
JComboBox
uses to obtain
 the list of items.
setModel(ListModel<E>)
- Method in class javax.swing.
JList
Sets the model that represents the contents or "value" of the
 list, notifies property change listeners, and then clears the
 list's selection.
setModel(SingleSelectionModel)
- Method in class javax.swing.
JTabbedPane
Sets the model to be used with this tabbedpane.
setModel(SpinnerModel)
- Method in class javax.swing.
JSpinner
Changes the model that represents the value of this spinner.
setModel(TableModel)
- Method in class javax.swing.
JTable
Sets the data model for this table to
dataModel
and registers
 with it for listener notifications from the new data model.
setModel(TreeModel)
- Method in class javax.swing.
JTree
Sets the
TreeModel
that will provide the data.
setModel(TreeModel)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the
TreeModel
.
setModel(TreeModel)
- Method in class javax.swing.tree.
AbstractLayoutCache
Sets the
TreeModel
that will provide the data.
setModel(TreeModel)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Sets the TreeModel that will provide the data.
setModel(TreeModel)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Sets the
TreeModel
that will provide the data.
setModel(M)
- Method in class javax.swing.table.
TableRowSorter
Sets the
TableModel
to use as the underlying model
 for this
TableRowSorter
.
setModelIndex(int)
- Method in class javax.swing.table.
TableColumn
Sets the model index for this column.
setModelMBeanInfo(ModelMBeanInfo)
- Method in interface javax.management.modelmbean.
ModelMBean
Initializes a ModelMBean object using ModelMBeanInfo passed in.
setModelMBeanInfo(ModelMBeanInfo)
- Method in class javax.management.modelmbean.
RequiredModelMBean
Initializes a ModelMBean object using ModelMBeanInfo passed in.
setModelWrapper(DefaultRowSorter.ModelWrapper<M, I>)
- Method in class javax.swing.
DefaultRowSorter
Sets the model wrapper providing the data that is being sorted and
 filtered.
setModifiers(int)
- Method in class java.awt.event.
KeyEvent
Deprecated.
as of JDK1.1.4
setModulus(Number)
- Method in class javax.management.monitor.
CounterMonitor
Sets the modulus value common to all observed MBeans.
setModulus(Number)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Sets the modulus value.
setMonetaryDecimalSeparator(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the monetary decimal separator.
setMonetaryGroupingSeparator(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used for grouping separator for currencies.
setMono(boolean)
- Method in interface javax.sound.midi.
MidiChannel
Turns mono mode on or off.
setMonth(int)
- Method in class java.sql.
Time
Deprecated.
setMonth(int)
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.set(Calendar.MONTH, int month)
.
setMonth(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set month.
setMonths(String[])
- Method in class java.text.
DateFormatSymbols
Sets month strings.
setMouseOver(boolean)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Sets whether or not the mouse is currently over the divider.
setMultiClickThreshhold(long)
- Method in class javax.swing.
AbstractButton
Sets the amount of time (in milliseconds) required between
 mouse press events for the button to generate the corresponding
 action events.
setMultiple(boolean)
- Method in interface org.w3c.dom.html.
HTMLSelectElement
setMultipleDocumentHandling(JobAttributes.MultipleDocumentHandlingType)
- Method in class java.awt.
JobAttributes
Specifies the handling of multiple copies, including collation, for
 jobs using these attributes.
setMultipleDocumentHandlingToDefault()
- Method in class java.awt.
JobAttributes
Sets the handling of multiple copies, including collation, for jobs
 using these attributes to the default.
setMultipleMode(boolean)
- Method in class java.awt.
FileDialog
Enables or disables multiple file selection for the file dialog.
setMultipleMode(boolean)
- Method in class java.awt.
List
Sets the flag that determines whether this list
 allows multiple selections.
setMultipleSelections(boolean)
- Method in class java.awt.
List
Deprecated.
As of JDK version 1.1,
 replaced by
setMultipleMode(boolean)
.
setMultiplier(int)
- Method in class java.text.
DecimalFormat
Sets the multiplier for use in percent, per mille, and similar
 formats.
setMultiSelectionEnabled(boolean)
- Method in class javax.swing.
JFileChooser
Sets the file chooser to allow multiple file selections.
setMute(boolean)
- Method in interface javax.sound.midi.
MidiChannel
Sets the mute state for this channel.
setName(String)
- Method in class java.awt.
Component
Sets the name of the component to the specified string.
setName(String)
- Method in class java.awt.
MenuComponent
Sets the name of the component to the specified string.
setName(String)
- Method in class java.beans.
FeatureDescriptor
Sets the programmatic name of this feature.
setName(String)
- Method in class java.lang.
Thread
Changes the name of this thread to be equal to the argument
name
.
setName(String)
- Method in class javax.naming.
NameClassPair
Sets the name of this binding.
setName(String)
- Method in class javax.security.auth.callback.
NameCallback
Set the retrieved name.
setName(String)
- Method in class javax.swing.text.
StyleContext.NamedStyle
Changes the name of the style.
setName(String)
- Method in class jdk.jfr.
Recording
Sets a human-readable name (for example,
"My Recording"
).
setName(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLButtonElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLFormElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLFrameElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLMapElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLMetaElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLParamElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLSelectElement
setName(String)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setNameConstraints(byte[])
- Method in class java.security.cert.
X509CertSelector
Sets the name constraints criterion.
setNamedGroups(String[])
- Method in class javax.net.ssl.
SSLParameters
Sets the prioritized array of key exchange named groups names that
 can be used over the SSL/TLS/DTLS protocols.
setNamedItem(Node)
- Method in interface org.w3c.dom.
NamedNodeMap
Adds a node using its
nodeName
attribute.
setNamedItemNS(Node)
- Method in interface org.w3c.dom.
NamedNodeMap
Adds a node using its
namespaceURI
and
localName
.
setNameInNamespace(String)
- Method in class javax.naming.
NameClassPair
Sets the full name of this binding.
setNamespaceAware(boolean)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Specifies that the parser produced by this code will
 provide support for XML namespaces.
setNamespaceAware(boolean)
- Method in class javax.xml.parsers.
SAXParserFactory
Specifies that the parser produced by this code will
 provide support for XML namespaces.
setNamespaceContext(NamespaceContext)
- Method in interface javax.xml.stream.
XMLEventWriter
Sets the current namespace context for prefix and uri bindings.
setNamespaceContext(NamespaceContext)
- Method in interface javax.xml.stream.
XMLStreamWriter
Sets the current namespace context for prefix and uri bindings.
setNamespaceContext(NamespaceContext)
- Method in interface javax.xml.xpath.
XPath
Establish a namespace context.
setNamespaceDeclUris(boolean)
- Method in class org.xml.sax.helpers.
NamespaceSupport
Controls whether namespace declaration attributes are placed
 into the
NSDECL
namespace
 by
processName()
.
setNaN(String)
- Method in class java.text.
DecimalFormatSymbols
Sets the string used to represent "not a number".
setNanos(int)
- Method in class java.sql.
Timestamp
Sets this
Timestamp
object's
nanos
field
 to the given value.
setNativeMethodPrefix(ClassFileTransformer, String)
- Method in interface java.lang.instrument.
Instrumentation
This method modifies the failure handling of
 native method resolution by allowing retry
 with a prefix applied to the name.
setNativesForFlavor(DataFlavor, String[])
- Method in class java.awt.datatransfer.
SystemFlavorMap
Discards the current mappings for the specified
DataFlavor
and
 all
DataFlavor
s equal to the specified
DataFlavor
, and
 creates new mappings to the specified
String
natives.
setNavigationFilter(NavigationFilter)
- Method in class javax.swing.text.
JTextComponent
Sets the
NavigationFilter
.
setNCharacterStream(int, Reader)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
Reader
object.
setNCharacterStream(int, Reader)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter in this
RowSet
object's command
 to a
Reader
object.
setNCharacterStream(int, Reader)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to a
Reader
object.
setNCharacterStream(int, Reader, long)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
Reader
object.
setNCharacterStream(int, Reader, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setNCharacterStream(int, Reader, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setNCharacterStream(String, Reader)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to a
Reader
object.
setNCharacterStream(String, Reader)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setNCharacterStream(String, Reader)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setNCharacterStream(String, Reader, long)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to a
Reader
object.
setNCharacterStream(String, Reader, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setNCharacterStream(String, Reader, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setNClob(int, Reader)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
Reader
object.
setNClob(int, Reader)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setNClob(int, Reader)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setNClob(int, Reader, long)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
Reader
object.
setNClob(int, Reader, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setNClob(int, Reader, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setNClob(int, NClob)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to a
java.sql.NClob
object.
setNClob(int, NClob)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
java.sql.NClob
object.
setNClob(int, NClob)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
java.sql.NClob
object.
setNClob(String, Reader)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to a
Reader
object.
setNClob(String, Reader)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setNClob(String, Reader)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setNClob(String, Reader, long)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to a
Reader
object.
setNClob(String, Reader, long)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
Reader
object.
setNClob(String, Reader, long)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
Reader
object.
setNClob(String, NClob)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to a
java.sql.NClob
object.
setNClob(String, NClob)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to a
java.sql.NClob
object.
setNClob(String, NClob)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to a
java.sql.NClob
object.
setNeedClientAuth(boolean)
- Method in class com.sun.net.httpserver.
HttpsParameters
Sets whether client authentication should be required.
setNeedClientAuth(boolean)
- Method in class javax.net.ssl.
SSLEngine
Configures the engine to
require
client authentication.
setNeedClientAuth(boolean)
- Method in class javax.net.ssl.
SSLParameters
Sets whether client authentication should be required.
setNeedClientAuth(boolean)
- Method in class javax.net.ssl.
SSLServerSocket
Controls whether
accept
ed server-mode
SSLSockets
will be initially configured to
require
client authentication.
setNeedClientAuth(boolean)
- Method in class javax.net.ssl.
SSLSocket
Configures the socket to
require
client authentication.
setNegativePrefix(String)
- Method in class java.text.
DecimalFormat
Set the negative prefix.
setNegativeSuffix(String)
- Method in class java.text.
DecimalFormat
Set the negative suffix.
setNetworkInterface(NetworkInterface)
- Method in class java.net.
MulticastSocket
Specify the network interface for outgoing multicast datagrams
 sent on this socket.
setNetworkTimeout(Executor, int)
- Method in interface java.sql.
Connection
Sets the maximum period a
Connection
or
 objects created from the
Connection
will wait for the database to reply to any one request.
setNewLine(String)
- Method in interface org.w3c.dom.ls.
LSSerializer
The end-of-line sequence of characters to be used in the XML being
 written out.
setNextException(SQLException)
- Method in exception class java.sql.
SQLException
Adds an
SQLException
object to the end of the chain.
setNextFocusableComponent(Component)
- Method in class javax.swing.
JComponent
Deprecated.
As of 1.4, replaced by
FocusTraversalPolicy
setNextSibling(Node)
- Method in class javax.xml.crypto.dsig.dom.
DOMSignContext
Sets the next sibling node.
setNextSibling(Node)
- Method in class javax.xml.transform.dom.
DOMResult
Set the child node before which the result nodes will be inserted.
setNextWarning(SQLWarning)
- Method in exception class java.sql.
SQLWarning
Adds a
SQLWarning
object to the end of the chain.
setNextWarning(RowSetWarning)
- Method in exception class javax.sql.rowset.
RowSetWarning
Sets
warning
as the next warning, that is, the warning chained
 to this
RowSetWarning
object.
setNode(Node)
- Method in class javax.xml.crypto.dsig.dom.
DOMValidateContext
Sets the node.
setNode(Node)
- Method in class javax.xml.transform.dom.
DOMResult
Set the node that will contain the result DOM tree.
setNode(Node)
- Method in class javax.xml.transform.dom.
DOMSource
Set the node that will represents a Source DOM tree.
setNodeDimensions(AbstractLayoutCache.NodeDimensions)
- Method in class javax.swing.tree.
AbstractLayoutCache
Sets the renderer that is responsible for drawing nodes in the tree
 and which is therefore responsible for calculating the dimensions of
 individual nodes.
setNodeDimensions(AbstractLayoutCache.NodeDimensions)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Sets the renderer that is responsible for drawing nodes in the tree.
setNodeValue(String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Sets the
String
value associated with this node.
setNodeValue(String)
- Method in interface org.w3c.dom.
Node
The value of this node, depending on its type; see the table above.
setNoHref(boolean)
- Method in interface org.w3c.dom.html.
HTMLAreaElement
setNonContinuousLayoutDivider(Component)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Sets the divider to use when the
JSplitPane
is configured to
 not continuously layout.
setNonContinuousLayoutDivider(Component, boolean)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Sets the divider to use.
setNoResize(boolean)
- Method in interface org.w3c.dom.html.
HTMLFrameElement
setNormalBounds(Rectangle)
- Method in class javax.swing.
JInternalFrame
Sets the normal bounds for this internal frame, the bounds that
 this internal frame would be restored to from its maximized state.
setNorthPane(JComponent)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Sets the north pane.
setNoShade(boolean)
- Method in interface org.w3c.dom.html.
HTMLHRElement
setNote(String)
- Method in class javax.swing.
ProgressMonitor
Specifies the additional note that is displayed along with the
 progress message.
setNotify(boolean)
- Method in class javax.management.monitor.
CounterMonitor
Sets the notification's on/off switch value common to all
 observed MBeans.
setNotify(boolean)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Sets the notification's on/off switch value.
setNotifyDiffer(boolean)
- Method in class javax.management.monitor.
StringMonitor
Sets the differing notification's on/off switch value common to
 all observed MBeans.
setNotifyDiffer(boolean)
- Method in interface javax.management.monitor.
StringMonitorMBean
Sets the differing notification's on/off switch value.
setNotifyHigh(boolean)
- Method in class javax.management.monitor.
GaugeMonitor
Sets the high notification's on/off switch value common to all
 observed MBeans.
setNotifyHigh(boolean)
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Sets the high notification's on/off switch value.
setNotifyLow(boolean)
- Method in class javax.management.monitor.
GaugeMonitor
Sets the low notification's on/off switch value common to all
 observed MBeans.
setNotifyLow(boolean)
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Sets the low notification's on/off switch value.
setNotifyMatch(boolean)
- Method in class javax.management.monitor.
StringMonitor
Sets the matching notification's on/off switch value common to
 all observed MBeans.
setNotifyMatch(boolean)
- Method in interface javax.management.monitor.
StringMonitorMBean
Sets the matching notification's on/off switch value.
setNoWrap(boolean)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setNString(int, String)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
String
object.
setNString(int, String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
String
object.
setNString(int, String)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
String
object.
setNString(String, String)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
String
object.
setNString(String, String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
String
object.
setNString(String, String)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
String
object.
setNull(int, int)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to SQL
NULL
.
setNull(int, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to SQL
NULL
.
setNull(int, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's SQL
 command to SQL
NULL
.
setNull(int, int, String)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to SQL
NULL
.
setNull(int, int, String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to SQL
NULL
.
setNull(int, int, String)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's SQL
 command to SQL
NULL
.
setNull(String, int)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to SQL
NULL
.
setNull(String, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to SQL
NULL
.
setNull(String, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to SQL
NULL
.
setNull(String, int, String)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to SQL
NULL
.
setNull(String, int, String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to SQL
NULL
.
setNull(String, int, String)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to SQL
NULL
.
setNullable(int, int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets whether a value stored in the designated column can be set
 to
NULL
to the given constant from the interface
ResultSetMetaData
.
setNullable(int, int)
- Method in interface javax.sql.
RowSetMetaData
Sets whether the designated column's value can be set to
NULL
.
setNullFormatter(JFormattedTextField.AbstractFormatter)
- Method in class javax.swing.text.
DefaultFormatterFactory
Sets the formatter to use if the value of the JFormattedTextField is
 null.
setNumberFormat(NumberFormat)
- Method in class java.text.
DateFormat
Allows you to set the number formatter.
setNumRows(int)
- Method in class javax.swing.table.
DefaultTableModel
Obsolete as of Java 2 platform v1.3.
setObject(int, Object)
- Method in interface java.sql.
PreparedStatement
Sets the value of the designated parameter using the given object.
setObject(int, Object)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to an
Object
in the Java
 programming language.
setObject(int, Object)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with a Java
Object
.
setObject(int, Object, int)
- Method in interface java.sql.
PreparedStatement
Sets the value of the designated parameter with the given object.
setObject(int, Object, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the value of the designated parameter with the given
Object
value.
setObject(int, Object, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with a Java
Object
.
setObject(int, Object, int, int)
- Method in interface java.sql.
PreparedStatement
Sets the value of the designated parameter with the given object.
setObject(int, Object, int, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to an
Object
in the Java
 programming language.
setObject(int, Object, int, int)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with the given Java
Object
.
setObject(int, Object, SQLType)
- Method in interface java.sql.
PreparedStatement
Sets the value of the designated parameter with the given object.
setObject(int, Object, SQLType, int)
- Method in interface java.sql.
PreparedStatement
Sets the value of the designated parameter with the given object.
setObject(Object)
- Method in interface java.beans.
Customizer
Set the object to be customized.
setObject(Object)
- Method in interface java.sql.
Ref
Sets the structured type value that this
Ref
object references to the given instance of
Object
.
setObject(Object)
- Method in class javax.naming.
Binding
Sets the object associated with this binding.
setObject(Object)
- Method in class javax.sql.rowset.serial.
SerialRef
Sets the SQL structured type that this
SerialRef
object
 references to the given
Object
object.
setObject(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setObject(String, Object)
- Method in interface java.sql.
CallableStatement
Sets the value of the designated parameter with the given object.
setObject(String, Object)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the value of the designated parameter with the given object.
setObject(String, Object)
- Method in interface javax.sql.
RowSet
Sets the value of the designated parameter with the given object.
setObject(String, Object, int)
- Method in interface java.sql.
CallableStatement
Sets the value of the designated parameter with the given object.
setObject(String, Object, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the value of the designated parameter with the given object.
setObject(String, Object, int)
- Method in interface javax.sql.
RowSet
Sets the value of the designated parameter with the given object.
setObject(String, Object, int, int)
- Method in interface java.sql.
CallableStatement
Sets the value of the designated parameter with the given object.
setObject(String, Object, int, int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the value of the designated parameter with the given object.
setObject(String, Object, int, int)
- Method in interface javax.sql.
RowSet
Sets the value of the designated parameter with the given object.
setObject(String, Object, SQLType)
- Method in interface java.sql.
CallableStatement
Sets the value of the designated parameter with the given object.
setObject(String, Object, SQLType, int)
- Method in interface java.sql.
CallableStatement
Sets the value of the designated parameter with the given object.
setObjectFactoryBuilder(ObjectFactoryBuilder)
- Static method in class javax.naming.spi.
NamingManager
The ObjectFactoryBuilder determines the policy used when
 trying to load object factories.
setObjectInputFilter(ObjectInputFilter)
- Method in class java.io.
ObjectInputStream
Set the deserialization filter for the stream.
setObservedAttribute(String)
- Method in class javax.management.monitor.
Monitor
Sets the attribute to observe.
setObservedAttribute(String)
- Method in interface javax.management.monitor.
MonitorMBean
Sets the attribute to observe.
setObservedObject(ObjectName)
- Method in class javax.management.monitor.
Monitor
Deprecated.
As of JMX 1.2, replaced by
Monitor.addObservedObject(javax.management.ObjectName)
setObservedObject(ObjectName)
- Method in interface javax.management.monitor.
MonitorMBean
Deprecated.
As of JMX 1.2, replaced by
MonitorMBean.addObservedObject(javax.management.ObjectName)
setOcspExtensions(List<Extension>)
- Method in class java.security.cert.
PKIXRevocationChecker
Sets the optional OCSP request extensions.
setOcspResponder(URI)
- Method in class java.security.cert.
PKIXRevocationChecker
Sets the URI that identifies the location of the OCSP responder.
setOcspResponderCert(X509Certificate)
- Method in class java.security.cert.
PKIXRevocationChecker
Sets the OCSP responder's certificate.
setOcspResponses(Map<X509Certificate, byte[]>)
- Method in class java.security.cert.
PKIXRevocationChecker
Sets the OCSP responses.
setOffset(int)
- Method in class java.io.
ObjectStreamField
Offset within instance data.
setOffset(int)
- Method in class java.text.
CollationElementIterator
Sets the iterator to point to the collation element corresponding to
 the specified character (the parameter is a CHARACTER offset in the
 original string, not an offset into its corresponding sequence of
 collation elements).
setOffset(int)
- Method in class javax.imageio.stream.
IIOByteBuffer
Updates the value that will be returned by subsequent calls
 to the
getOffset
method.
setOffset(Point)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI.DragWindow
Sets the offset.
setOffset(Number)
- Method in class javax.management.monitor.
CounterMonitor
Sets the offset value common to all observed MBeans.
setOffset(Number)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Sets the offset value.
SetOfIntegerSyntax
- Class in
javax.print.attribute
Class
SetOfIntegerSyntax
is an abstract base class providing the
 common implementation of all attributes whose value is a set of nonnegative
 integers.
SetOfIntegerSyntax(int)
- Constructor for class javax.print.attribute.
SetOfIntegerSyntax
Construct a new set-of-integer attribute containing a single integer.
SetOfIntegerSyntax(int[][])
- Constructor for class javax.print.attribute.
SetOfIntegerSyntax
Construct a new set-of-integer attribute with the given members in array
 form.
SetOfIntegerSyntax(int, int)
- Constructor for class javax.print.attribute.
SetOfIntegerSyntax
Construct a new set-of-integer attribute containing a single range of
 integers.
SetOfIntegerSyntax(String)
- Constructor for class javax.print.attribute.
SetOfIntegerSyntax
Construct a new set-of-integer attribute with the given members in string
 form.
setOmni(boolean)
- Method in interface javax.sound.midi.
MidiChannel
Turns omni mode on or off.
setOneTouchExpandable(boolean)
- Method in class javax.swing.
JSplitPane
Sets the value of the
oneTouchExpandable
property,
 which must be
true
for the
JSplitPane
to provide a UI widget
 on the divider to quickly expand/collapse the divider.
setOOBInline(boolean)
- Method in class java.net.
Socket
Enable/disable
SO_OOBINLINE
(receipt of TCP urgent data)

 By default, this option is disabled and TCP urgent data received on a
 socket is silently discarded.
setOpacity(float)
- Method in class java.awt.
Window
Sets the opacity of the window.
setOpaque(boolean)
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setOpaque(java.lang.Object...)
.
setOpaque(boolean)
- Method in class javax.swing.
JComponent
If true the component paints every pixel within its bounds.
setOpaque(int)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setOpaque(java.lang.Object...)
.
setOpaque(int, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setOpaque(java.lang.Object...)
.
setOpaque(int, long)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setOpaque(java.lang.Object...)
.
setOpaque(int, E)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setOpaque(java.lang.Object...)
.
setOpaque(long)
- Method in class java.util.concurrent.atomic.
AtomicLong
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setOpaque(java.lang.Object...)
.
setOpaque(Object...)
- Method in class java.lang.invoke.
VarHandle
Sets the value of a variable to the
newValue
, in program order,
 but with no assurance of memory ordering effects with respect to other
 threads.
setOpaque(V)
- Method in class java.util.concurrent.atomic.
AtomicReference
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setOpaque(java.lang.Object...)
.
setOpenFileHandler(OpenFilesHandler)
- Method in class java.awt.
Desktop
Installs the handler which is notified when the application is asked to
 open a list of files.
setOpenIcon(Icon)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Sets the icon used to represent non-leaf nodes that are expanded.
setOpenURIHandler(OpenURIHandler)
- Method in class java.awt.
Desktop
Installs the handler which is notified when the application is asked to
 open a URL.
setOptimizeHuffmanTables(boolean)
- Method in class javax.imageio.plugins.jpeg.
JPEGImageWriteParam
Tells the writer to generate optimized Huffman tables
 for the image as part of the writing process.
setOption(int, Object)
- Method in interface java.net.
SocketOptions
Enable/disable the option specified by
optID
.
setOption(SctpSocketOption<T>, T)
- Method in class com.sun.nio.sctp.
SctpChannel
Sets the value of a socket option.
setOption(SctpSocketOption<T>, T)
- Method in class com.sun.nio.sctp.
SctpServerChannel
Sets the value of a socket option.
setOption(SctpSocketOption<T>, T, Association)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Sets the value of a socket option.
setOption(DatagramSocket, SocketOption<T>, T)
- Static method in class jdk.net.
Sockets
Deprecated.
use
DatagramSocket.setOption(SocketOption, Object)
instead.
setOption(ServerSocket, SocketOption<T>, T)
- Static method in class jdk.net.
Sockets
Deprecated.
use
ServerSocket.setOption(SocketOption, Object)
instead.
setOption(SocketOption<T>, T)
- Method in class java.net.
DatagramSocket
Sets the value of a socket option.
setOption(SocketOption<T>, T)
- Method in class java.net.
DatagramSocketImpl
Called to set a socket option.
setOption(SocketOption<T>, T)
- Method in class java.net.
ServerSocket
Sets the value of a socket option.
setOption(SocketOption<T>, T)
- Method in class java.net.
Socket
Sets the value of a socket option.
setOption(SocketOption<T>, T)
- Method in class java.net.
SocketImpl
Called to set a socket option.
setOption(SocketOption<T>, T)
- Method in class java.nio.channels.
AsynchronousServerSocketChannel
setOption(SocketOption<T>, T)
- Method in class java.nio.channels.
AsynchronousSocketChannel
setOption(SocketOption<T>, T)
- Method in class java.nio.channels.
DatagramChannel
setOption(SocketOption<T>, T)
- Method in interface java.nio.channels.
NetworkChannel
Sets the value of a socket option.
setOption(SocketOption<T>, T)
- Method in class java.nio.channels.
ServerSocketChannel
setOption(SocketOption<T>, T)
- Method in class java.nio.channels.
SocketChannel
setOption(Socket, SocketOption<T>, T)
- Static method in class jdk.net.
Sockets
Deprecated.
use
Socket.setOption(SocketOption, Object)
instead.
setOptions(Object[])
- Method in class javax.swing.
JOptionPane
Sets the options this pane displays.
setOptions(Set<PKIXRevocationChecker.Option>)
- Method in class java.security.cert.
PKIXRevocationChecker
Sets the revocation options.
setOptionType(int)
- Method in class javax.swing.
JOptionPane
Sets the options to display.
setOrdered(boolean)
- Method in interface jdk.jfr.consumer.
EventStream
Specifies that events arrives in chronological order, sorted by the time
 they were committed to the stream.
setOrdered(boolean)
- Method in class jdk.jfr.consumer.
RecordingStream
setOrdered(boolean)
- Method in class jdk.management.jfr.
RemoteRecordingStream
setOrdering(Class<T>, T, T)
- Method in class javax.imageio.spi.
ServiceRegistry
Sets a pairwise ordering between two service provider objects
 within a given category.
setOrientation(int)
- Method in class java.awt.print.
PageFormat
Sets the page orientation.
setOrientation(int)
- Method in class java.awt.
Scrollbar
Sets the orientation for this scroll bar.
setOrientation(int)
- Method in class javax.swing.
JProgressBar
Sets the progress bar's orientation to
newOrientation
,
 which must be
SwingConstants.VERTICAL
or
SwingConstants.HORIZONTAL
.
setOrientation(int)
- Method in class javax.swing.
JScrollBar
Set the scrollbar's orientation to either VERTICAL or
 HORIZONTAL.
setOrientation(int)
- Method in class javax.swing.
JSeparator
Sets the orientation of the separator.
setOrientation(int)
- Method in class javax.swing.
JSlider
Set the slider's orientation to either
SwingConstants.VERTICAL
or
SwingConstants.HORIZONTAL
.
setOrientation(int)
- Method in class javax.swing.
JSplitPane
Sets the orientation, or how the splitter is divided.
setOrientation(int)
- Method in class javax.swing.
JToolBar
Sets the orientation of the tool bar.
setOrientation(int)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Set the orientation for the
JSplitPane
.
setOrientation(int)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI.DragWindow
Sets the orientation.
setOrientation(int)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the tool bar's orientation.
setOrientationRequested(int)
- Method in class java.awt.
PageAttributes
Specifies the print orientation for pages using these attributes.
setOrientationRequested(PageAttributes.OrientationRequestedType)
- Method in class java.awt.
PageAttributes
Specifies the print orientation for pages using these attributes.
setOrientationRequestedToDefault()
- Method in class java.awt.
PageAttributes
Sets the print orientation for pages using these attributes to the
 default.
setOrigin(PageAttributes.OriginType)
- Method in class java.awt.
PageAttributes
Specifies whether drawing at (0, 0) to pages using these attributes
 draws at the upper-left corner of the physical page, or at the
 upper-left corner of the printable area.
setOriginalRow()
- Method in interface javax.sql.rowset.
CachedRowSet
Sets the current row in this
CachedRowSet
object as the original
 row.
setOrphans(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the orphans property definition in CSS2.
setOut(PrintStream)
- Static method in class java.lang.
System
Reassigns the "standard" output stream.
setOuterHTML(Element, String)
- Method in class javax.swing.text.html.
HTMLDocument
Replaces the given element in the parent with the contents
 specified as an HTML string.
setOutline(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the outline property definition in CSS2.
setOutlineColor(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the outline-color property definition in CSS2.
setOutlineStyle(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the outline-style property definition in CSS2.
setOutlineWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the outline-width property definition in CSS2.
setOutput(Object)
- Method in class javax.imageio.
ImageWriter
Sets the destination to the given
ImageOutputStream
or other
Object
.
setOutputProperties(Properties)
- Method in class javax.xml.transform.
Transformer
Set the output properties for the transformation.
setOutputProperty(String, String)
- Method in class javax.xml.transform.
Transformer
Set an output property that will be in effect for the
 transformation.
setOutputStream(OutputStream)
- Method in class java.rmi.server.
LogStream
Deprecated.
no replacement
setOutputStream(OutputStream)
- Method in class java.util.logging.
StreamHandler
Change the output stream.
setOutputStream(OutputStream)
- Method in class javax.xml.transform.stream.
StreamResult
Set the ByteStream that is to be written to.
setOverflow(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the overflow property definition in CSS2.
setOverwriteMode(boolean)
- Method in class javax.swing.text.
DefaultFormatter
Configures the behavior when inserting characters.
setOwner(Object)
- Method in class java.beans.
XMLDecoder
Sets the owner of this decoder to
owner
.
setOwner(Object)
- Method in class java.beans.
XMLEncoder
Sets the owner of this encoder to
owner
.
setOwner(UserPrincipal)
- Method in interface java.nio.file.attribute.
FileOwnerAttributeView
Updates the file owner.
setOwner(Path, UserPrincipal)
- Static method in class java.nio.file.
Files
Updates the file owner.
setPackageAssertionStatus(String, boolean)
- Method in class java.lang.
ClassLoader
Sets the package default assertion status for the named package.
setPadding(int)
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonAreaLayout
Sets the padding value.
setPadding(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding property definition in CSS2.
setPaddingBottom(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding-bottom property definition in CSS2.
setPaddingLeft(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding-left property definition in CSS2.
setPaddingRight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding-right property definition in CSS2.
setPaddingTop(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding-top property definition in CSS2.
setPage(int, Printable, PageFormat)
- Method in class java.awt.print.
Book
Sets the
PageFormat
and the
Painter
for a
 specified page number.
setPage(String)
- Method in class javax.swing.
JEditorPane
Sets the current URL being displayed.
setPage(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the page property definition in CSS2.
setPage(URL)
- Method in class javax.swing.
JEditorPane
Sets the current URL being displayed.
setPageable(Pageable)
- Method in class java.awt.print.
PrinterJob
Queries
document
for the number of pages and
 the
PageFormat
and
Printable
for each
 page held in the
Pageable
instance,
document
.
setPageBreakAfter(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the page-break-after property definition in CSS2.
setPageBreakBefore(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the page-break-before property definition in CSS2.
setPageBreakInside(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the page-break-inside property definition in CSS2.
setPageIncrement(int)
- Method in class java.awt.
Scrollbar
Deprecated.
As of JDK version 1.1,
 replaced by
setBlockIncrement()
.
setPageRanges(int[][])
- Method in class java.awt.
JobAttributes
Specifies, for jobs using these attributes, the ranges of pages to be
 printed, if a range of pages is to be printed.
setPageSize(int)
- Method in interface javax.sql.rowset.
CachedRowSet
Sets the
CachedRowSet
object's page-size.
setPaint(Paint)
- Method in class java.awt.
Graphics2D
Sets the
Paint
attribute for the
Graphics2D
context.
setPaintLabels(boolean)
- Method in class javax.swing.
JSlider
Determines whether labels are painted on the slider.
setPaintMode()
- Method in class java.awt.
Graphics
Sets the paint mode of this graphics context to overwrite the
 destination with this graphics context's current color.
setPaintMode()
- Method in class javax.swing.
DebugGraphics
Overrides
Graphics.setPaintMode
.
setPaintTicks(boolean)
- Method in class javax.swing.
JSlider
Determines whether tick marks are painted on the slider.
setPaintTrack(boolean)
- Method in class javax.swing.
JSlider
Determines whether the track is painted on the slider.
setPalette(boolean)
- Method in class javax.swing.plaf.metal.
MetalInternalFrameTitlePane
If
b
is
true
, sets palette icons.
setPalette(boolean)
- Method in class javax.swing.plaf.metal.
MetalInternalFrameUI
If
isPalette
is
true
, sets palette border and title
setPaper(Paper)
- Method in class java.awt.print.
PageFormat
Sets the
Paper
object for this
PageFormat
.
setParagraphAttributes(int, int, AttributeSet, boolean)
- Method in class javax.swing.text.
DefaultStyledDocument
Sets attributes for a paragraph.
setParagraphAttributes(int, int, AttributeSet, boolean)
- Method in class javax.swing.text.html.
HTMLDocument
Sets attributes for a paragraph.
setParagraphAttributes(int, int, AttributeSet, boolean)
- Method in interface javax.swing.text.
StyledDocument
Sets paragraph attributes.
setParagraphAttributes(JEditorPane, AttributeSet, boolean)
- Method in class javax.swing.text.
StyledEditorKit.StyledTextAction
Applies the given attributes to paragraphs.
setParagraphAttributes(AttributeSet, boolean)
- Method in class javax.swing.
JTextPane
Applies the given attributes to paragraphs.
setParagraphInsets(AttributeSet)
- Method in class javax.swing.text.
CompositeView
Sets the insets from the paragraph attributes specified in
 the given attributes.
setParallelism(int)
- Method in class java.util.concurrent.
ForkJoinPool
Changes the target parallelism of this pool, controlling the
 future creation, use, and termination of worker threads.
setParameter(String, Object)
- Method in class java.security.
Signature
Deprecated.
Use
setParameter
.
setParameter(String, Object)
- Method in class javax.xml.transform.
Transformer
Add a parameter for the transformation.
setParameter(String, Object)
- Method in interface org.w3c.dom.
DOMConfiguration
Set the value of a parameter.
setParameter(AlgorithmParameterSpec)
- Method in class java.security.
Signature
Initializes this
Signature
object with the specified parameter
 values.
setParameterBlock(ParameterBlock)
- Method in class java.awt.image.renderable.
RenderableImageOp
Change the current ParameterBlock of the operation, allowing
 editing of image rendering chains.
setParameterNameProvider(ParameterNameProvider)
- Method in class com.sun.source.util.
JavacTask
Sets the specified
ParameterNameProvider
.
setParameters(Object[])
- Method in class java.util.logging.
LogRecord
Set the parameters to the log message.
setParameters(Vector<Object>)
- Method in class java.awt.image.renderable.
ParameterBlock
Sets the entire Vector of parameters to a given Vector.
setParent(Logger)
- Method in class java.util.logging.
Logger
Set the parent for this Logger.
setParent(ResourceBundle)
- Method in class java.util.
ResourceBundle
Sets the parent bundle of this bundle.
setParent(ActionMap)
- Method in class javax.swing.
ActionMap
Sets this
ActionMap
's parent.
setParent(InputMap)
- Method in class javax.swing.
ComponentInputMap
Sets the parent, which must be a
ComponentInputMap
associated with the same component as this
ComponentInputMap
.
setParent(InputMap)
- Method in class javax.swing.
InputMap
Sets this
InputMap
's parent.
setParent(View)
- Method in class javax.swing.text.
AsyncBoxView
Sets the parent of the view.
setParent(View)
- Method in class javax.swing.text.
ComponentView
Sets the parent for a child view.
setParent(View)
- Method in class javax.swing.text.
CompositeView
Sets the parent of the view.
setParent(View)
- Method in class javax.swing.text.html.
BlockView
Establishes the parent view for this view.
setParent(View)
- Method in class javax.swing.text.html.
ImageView
Establishes the parent view for this view.
setParent(View)
- Method in class javax.swing.text.html.
ParagraphView
Establishes the parent view for this view.
setParent(View)
- Method in class javax.swing.text.
View
Establishes the parent view for this view.
setParent(MutableTreeNode)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Sets this node's parent to
newParent
but does not
 change the parent's child array.
setParent(MutableTreeNode)
- Method in interface javax.swing.tree.
MutableTreeNode
Sets the parent of the receiver to
newParent
.
setParent(XMLEventReader)
- Method in class javax.xml.stream.util.
EventReaderDelegate
Set the parent of this instance.
setParent(XMLStreamReader)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
Set the parent of this instance.
setParent(Node)
- Method in class javax.xml.crypto.dsig.dom.
DOMSignContext
Sets the parent node.
setParent(XMLReader)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Set the parent reader.
setParent(XMLReader)
- Method in interface org.xml.sax.
XMLFilter
Set the parent reader.
setParseBigDecimal(boolean)
- Method in class java.text.
CompactNumberFormat
Sets whether the
CompactNumberFormat.parse(String, ParsePosition)
method returns
BigDecimal
.
setParseBigDecimal(boolean)
- Method in class java.text.
DecimalFormat
Sets whether the
DecimalFormat.parse(java.lang.String, java.text.ParsePosition)
method returns
BigDecimal
.
setParseIntegerOnly(boolean)
- Method in class java.text.
CompactNumberFormat
Sets whether or not this format parses only an integer from the number
 component of a compact number.
setParseIntegerOnly(boolean)
- Method in class java.text.
NumberFormat
Sets whether or not numbers should be parsed as integers only.
setParser(HTMLEditorKit.Parser)
- Method in class javax.swing.text.html.
HTMLDocument
Sets the parser that is used by the methods that insert html
 into the existing document, such as
setInnerHTML
,
 and
setOuterHTML
.
setPartialReturn(boolean)
- Method in class javax.swing.text.
Segment
Flag to indicate that partial returns are valid.
setPassword(char[])
- Method in class javax.security.auth.callback.
PasswordCallback
Set the retrieved password.
setPassword(String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the password used to create a database connection for this
RowSet
object to the given
String
object.
setPassword(String)
- Method in interface javax.sql.
RowSet
Sets the database password for this
RowSet
object to
 the given
String
.
setPath(String)
- Method in class java.net.
HttpCookie
Specifies a path for the cookie to which the client should return
 the cookie.
setPathFactory(StandardJavaFileManager.PathFactory)
- Method in interface javax.tools.
StandardJavaFileManager
Specify a factory that can be used to generate a path from a string, or series of strings.
setPathToNames(Collection<List<?>>)
- Method in class java.security.cert.
X509CertSelector
Sets the pathToNames criterion.
setPatternSeparator(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used to separate positive and negative subpatterns
 in a pattern.
setPause(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pause property definition in CSS2.
setPauseAfter(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pause-after property definition in CSS2.
setPauseBefore(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pause-before property definition in CSS2.
setPendingCount(int)
- Method in class java.util.concurrent.
CountedCompleter
Sets the pending count to the given value.
setPercent(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used for percent sign.
setPerformancePreferences(int, int, int)
- Method in class java.net.
ServerSocket
Sets performance preferences for this ServerSocket.
setPerformancePreferences(int, int, int)
- Method in class java.net.
Socket
Sets performance preferences for this socket.
setPerformancePreferences(int, int, int)
- Method in class java.net.
SocketImpl
Sets performance preferences for this socket.
setPerMill(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used for per mille sign.
setPermissions(AclEntryPermission...)
- Method in class java.nio.file.attribute.
AclEntry.Builder
Sets the permissions component of this builder.
setPermissions(Set<AclEntryPermission>)
- Method in class java.nio.file.attribute.
AclEntry.Builder
Sets the permissions component of this builder.
setPermissions(Set<PosixFilePermission>)
- Method in interface java.nio.file.attribute.
PosixFileAttributeView
Updates the file permissions.
setPersistenceDelegate(Class<?>, PersistenceDelegate)
- Method in class java.beans.
Encoder
Associates the specified persistence delegate with the given type.
setPitch(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pitch property definition in CSS2.
setPitchBend(int)
- Method in interface javax.sound.midi.
MidiChannel
Changes the pitch offset for all notes on this channel.
setPitchRange(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pitch-range property definition in CSS2.
setPixel(int, int, double[])
- Method in class java.awt.image.
WritableRaster
Sets a pixel in the DataBuffer using a double array of samples for input.
setPixel(int, int, double[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets a pixel in the DataBuffer using a double array of samples
 for input.
setPixel(int, int, float[])
- Method in class java.awt.image.
WritableRaster
Sets a pixel in the DataBuffer using a float array of samples for input.
setPixel(int, int, float[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets a pixel in the DataBuffer using a float array of samples for input.
setPixel(int, int, int[])
- Method in class java.awt.image.
WritableRaster
Sets a pixel in the DataBuffer using an int array of samples for input.
setPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Sets a pixel in the DataBuffer using an int array of samples for input.
setPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Sets a pixel in the
DataBuffer
using an int array of
 samples for input.
setPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Sets a pixel in the
DataBuffer
using an
int
array for input.
setPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets a pixel in  the DataBuffer using an int array of samples for input.
setPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Sets a pixel in the DataBuffer using an int array of samples for input.
setPixels(int, int, int, int, double[])
- Method in class java.awt.image.
WritableRaster
Sets all samples for a rectangle of pixels from a double array containing
 one sample per array element.
setPixels(int, int, int, int, double[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets all samples for a rectangle of pixels from a double array
 containing one sample per array element.
setPixels(int, int, int, int, float[])
- Method in class java.awt.image.
WritableRaster
Sets all samples for a rectangle of pixels from a float array containing
 one sample per array element.
setPixels(int, int, int, int, float[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets all samples for a rectangle of pixels from a float array containing
 one sample per array element.
setPixels(int, int, int, int, int[])
- Method in class java.awt.image.
WritableRaster
Sets all samples for a rectangle of pixels from an int array containing
 one sample per array element.
setPixels(int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Sets all samples for a rectangle of pixels from an int array containing
 one sample per array element.
setPixels(int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Sets all samples for a rectangle of pixels from an int array containing
 one sample per array element.
setPixels(int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets all samples for a rectangle of pixels from an int array containing
 one sample per array element.
setPixels(int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Sets all samples for a rectangle of pixels from an int array containing
 one sample per array element.
setPixels(int, int, int, int, ColorModel, byte[], int, int)
- Method in class java.awt.image.
AreaAveragingScaleFilter
Combine the components for the delivered byte pixels into the
 accumulation arrays and send on any averaged data for rows of
 pixels that are complete.
setPixels(int, int, int, int, ColorModel, byte[], int, int)
- Method in class java.awt.image.
BufferedImageFilter
Filters the information provided in the
setPixels
method of the
ImageConsumer
interface which takes
 an array of bytes.
setPixels(int, int, int, int, ColorModel, byte[], int, int)
- Method in class java.awt.image.
CropImageFilter
Determine whether the delivered byte pixels intersect the region to
 be extracted and passes through only that subset of pixels that
 appear in the output region.
setPixels(int, int, int, int, ColorModel, byte[], int, int)
- Method in interface java.awt.image.
ImageConsumer
Delivers the pixels of the image with one or more calls
 to this method.
setPixels(int, int, int, int, ColorModel, byte[], int, int)
- Method in class java.awt.image.
ImageFilter
Filters the information provided in the setPixels method of the
 ImageConsumer interface which takes an array of bytes.
setPixels(int, int, int, int, ColorModel, byte[], int, int)
- Method in class java.awt.image.
PixelGrabber
The setPixels method is part of the ImageConsumer API which
 this class must implement to retrieve the pixels.
setPixels(int, int, int, int, ColorModel, byte[], int, int)
- Method in class java.awt.image.
ReplicateScaleFilter
Choose which rows and columns of the delivered byte pixels are
 needed for the destination scaled image and pass through just
 those rows and columns that are needed, replicated as necessary.
setPixels(int, int, int, int, ColorModel, byte[], int, int)
- Method in class java.awt.image.
RGBImageFilter
If the ColorModel object is the same one that has already
 been converted, then simply passes the pixels through with the
 converted ColorModel.
setPixels(int, int, int, int, ColorModel, int[], int, int)
- Method in class java.awt.image.
AreaAveragingScaleFilter
Combine the components for the delivered int pixels into the
 accumulation arrays and send on any averaged data for rows of
 pixels that are complete.
setPixels(int, int, int, int, ColorModel, int[], int, int)
- Method in class java.awt.image.
BufferedImageFilter
Filters the information provided in the
setPixels
method of the
ImageConsumer
interface which takes
 an array of integers.
setPixels(int, int, int, int, ColorModel, int[], int, int)
- Method in class java.awt.image.
CropImageFilter
Determine if the delivered int pixels intersect the region to
 be extracted and pass through only that subset of pixels that
 appear in the output region.
setPixels(int, int, int, int, ColorModel, int[], int, int)
- Method in interface java.awt.image.
ImageConsumer
The pixels of the image are delivered using one or more calls
 to the setPixels method.
setPixels(int, int, int, int, ColorModel, int[], int, int)
- Method in class java.awt.image.
ImageFilter
Filters the information provided in the setPixels method of the
 ImageConsumer interface which takes an array of integers.
setPixels(int, int, int, int, ColorModel, int[], int, int)
- Method in class java.awt.image.
PixelGrabber
The setPixels method is part of the ImageConsumer API which
 this class must implement to retrieve the pixels.
setPixels(int, int, int, int, ColorModel, int[], int, int)
- Method in class java.awt.image.
ReplicateScaleFilter
Choose which rows and columns of the delivered int pixels are
 needed for the destination scaled image and pass through just
 those rows and columns that are needed, replicated as necessary.
setPixels(int, int, int, int, ColorModel, int[], int, int)
- Method in class java.awt.image.
RGBImageFilter
If the ColorModel object is the same one that has already
 been converted, then simply passes the pixels through with the
 converted ColorModel, otherwise converts the buffer of integer
 pixels to the default RGB ColorModel and passes the converted
 buffer to the filterRGBPixels method to be converted one by one.
setPlaceholder(String)
- Method in class javax.swing.text.
MaskFormatter
Sets the string to use if the value does not completely fill in
 the mask.
setPlaceholderCharacter(char)
- Method in class javax.swing.text.
MaskFormatter
Sets the character to use in place of characters that are not present
 in the value, ie the user must fill them in.
setPlain(boolean)
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Sets the value to
newValue
, with memory semantics
 of setting as if the variable was declared non-
volatile
and non-
final
.
setPlain(int)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Sets the value to
newValue
, with memory semantics
 of setting as if the variable was declared non-
volatile
and non-
final
.
setPlain(int, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Sets the element at index
i
to
newValue
,
 with memory semantics of setting as if the variable was
 declared non-
volatile
and non-
final
.
setPlain(int, long)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Sets the element at index
i
to
newValue
,
 with memory semantics of setting as if the variable was
 declared non-
volatile
and non-
final
.
setPlain(int, E)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Sets the element at index
i
to
newValue
,
 with memory semantics of setting as if the variable was
 declared non-
volatile
and non-
final
.
setPlain(long)
- Method in class java.util.concurrent.atomic.
AtomicLong
Sets the value to
newValue
, with memory semantics
 of setting as if the variable was declared non-
volatile
and non-
final
.
setPlain(V)
- Method in class java.util.concurrent.atomic.
AtomicReference
Sets the value to
newValue
, with memory semantics
 of setting as if the variable was declared non-
volatile
and non-
final
.
setPlayDuring(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the play-during property definition in CSS2.
setPolicy(Policy)
- Static method in class java.security.
Policy
Deprecated.
Sets the system-wide
Policy
object.
setPolicy(Set<String>)
- Method in class java.security.cert.
X509CertSelector
Sets the policy constraint.
setPolicyMappingInhibited(boolean)
- Method in class java.security.cert.
PKIXParameters
Sets the PolicyMappingInhibited flag.
setPolicyQualifiersRejected(boolean)
- Method in class java.security.cert.
PKIXParameters
Sets the PolicyQualifiersRejected flag.
setPolyPressure(int, int)
- Method in interface javax.sound.midi.
MidiChannel
Reacts to a change in the specified note's key pressure.
setPoolable(boolean)
- Method in interface java.sql.
Statement
Requests that a
Statement
be pooled or not pooled.
setPopupMenu(PopupMenu)
- Method in class java.awt.
TrayIcon
Sets the popup menu for this
TrayIcon
.
setPopupMenuVisible(boolean)
- Method in class javax.swing.
JMenu
Sets the visibility of the menu's popup.
setPopupSize(int, int)
- Method in class javax.swing.
JPopupMenu
Sets the size of the Popup window to the specified width and
 height.
setPopupSize(Dimension)
- Method in class javax.swing.
JPopupMenu
Sets the size of the Popup window using a
Dimension
object.
setPopupVisible(boolean)
- Method in class javax.swing.
JComboBox
Sets the visibility of the popup.
setPopupVisible(JComboBox<?>, boolean)
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Hides the popup.
setPopupVisible(JComboBox<?>, boolean)
- Method in class javax.swing.plaf.
ComboBoxUI
Set the visibility of the popup
setPopupVisible(JComboBox<?>, boolean)
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Invokes the
setPopupVisible
method on each UI handled by this object.
setPort(int)
- Method in class java.net.
DatagramPacket
Sets the port number on the remote host to which this datagram
 is being sent.
setPortlist(String)
- Method in class java.net.
HttpCookie
Specify the portlist of the cookie, which restricts the port(s)
 to which a cookie may be sent back in a Cookie header.
setPosition(int)
- Method in class java.awt.font.
LineBreakMeasurer
Sets the current position of this
LineBreakMeasurer
.
setPosition(Component, int)
- Method in class javax.swing.
JLayeredPane
Moves the component to
position
within its current layer,
 where 0 is the topmost position within the layer and -1 is the bottommost
 position.
setPosition(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the position property definition in CSS2.
setPositivePrefix(String)
- Method in class java.text.
DecimalFormat
Set the positive prefix.
setPositiveSuffix(String)
- Method in class java.text.
DecimalFormat
Set the positive suffix.
setPosixFilePermissions(Path, Set<PosixFilePermission>)
- Static method in class java.nio.file.
Files
Sets a file's POSIX permissions.
setPrecision(int, int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the total number of decimal digits in a value stored in the
 designated column to the given number.
setPrecision(int, int)
- Method in interface javax.sql.
RowSetMetaData
Sets the designated column's number of decimal digits to the
 given
int
.
setPredefinedConfiguration(long, String)
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Sets a predefined configuration for the recording with the specified ID.
setPreferencesHandler(PreferencesHandler)
- Method in class java.awt.
Desktop
Installs a handler to show a custom Preferences window for your
 application.
setPreferred(boolean)
- Method in class java.beans.
FeatureDescriptor
The "preferred" flag is used to identify features that are particularly
 important for presenting to humans.
setPreferredMinSize(Dimension)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the preferred minimum size.
setPreferredScrollableViewportSize(Dimension)
- Method in class javax.swing.
JTable
Sets the preferred size of the viewport for this table.
setPreferredSize(Dimension)
- Method in class java.awt.
Component
Sets the preferred size of this component to a constant
 value.
setPreferredSize(Dimension)
- Method in class javax.swing.
JComponent
Sets the preferred size of this component.
setPreferredWidth(int)
- Method in class javax.swing.table.
TableColumn
Sets this column's preferred width to
preferredWidth
.
setPrefix(String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Does nothing, since namespaces are not supported.
setPrefix(String)
- Method in interface org.w3c.dom.
Node
The namespace prefix of this node, or
null
if it is
 unspecified.
setPrefix(String, String)
- Method in interface javax.xml.stream.
XMLEventWriter
Sets the prefix the uri is bound to.
setPrefix(String, String)
- Method in interface javax.xml.stream.
XMLStreamWriter
Sets the prefix the uri is bound to.
setPrelinkTransformer(GuardedInvocationTransformer)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Set the pre-link transformer.
setPreservesUnknownTags(boolean)
- Method in class javax.swing.text.html.
HTMLDocument
Determines how unknown tags are handled by the parser.
setPressed(boolean)
- Method in interface javax.swing.
ButtonModel
Sets the button to pressed or unpressed.
setPressed(boolean)
- Method in class javax.swing.
DefaultButtonModel
Sets the button to pressed or unpressed.
setPressed(boolean)
- Method in class javax.swing.
JToggleButton.ToggleButtonModel
Sets the pressed state of the toggle button.
setPressedIcon(Icon)
- Method in class javax.swing.
AbstractButton
Sets the pressed icon for the button.
setPreviewPanel(JComponent)
- Method in class javax.swing.
JColorChooser
Sets the current preview panel.
setPreviousBounds(JInternalFrame, Rectangle)
- Method in class javax.swing.
DefaultDesktopManager
Stores the bounds of the component just before a maximize call.
setPrincipal(UserPrincipal)
- Method in class java.nio.file.attribute.
AclEntry.Builder
Sets the principal component of this builder.
setPrintable(Printable)
- Method in class java.awt.print.
PrinterJob
Calls
painter
to render the pages.
setPrintable(Printable, PageFormat)
- Method in class java.awt.print.
PrinterJob
Calls
painter
to render the pages in the specified
format
.
setPrinter(String)
- Method in class java.awt.
JobAttributes
Specifies the destination printer for jobs using these attributes.
setPrinterResolution(int)
- Method in class java.awt.
PageAttributes
Specifies the desired cross feed and feed print resolutions in dots per
 inch for pages using these attributes.
setPrinterResolution(int[])
- Method in class java.awt.
PageAttributes
Specifies the desired print resolution for pages using these attributes.
setPrinterResolutionToDefault()
- Method in class java.awt.
PageAttributes
Sets the printer resolution for pages using these attributes to the
 default.
setPrintFileHandler(PrintFilesHandler)
- Method in class java.awt.
Desktop
Installs the handler which is notified when the application is asked to
 print a list of files.
setPrintQuality(int)
- Method in class java.awt.
PageAttributes
Specifies the print quality for pages using these attributes.
setPrintQuality(PageAttributes.PrintQualityType)
- Method in class java.awt.
PageAttributes
Specifies the print quality for pages using these attributes.
setPrintQualityToDefault()
- Method in class java.awt.
PageAttributes
Sets the print quality for pages using these attributes to the default.
setPrintService(PrintService)
- Method in class java.awt.print.
PrinterJob
Associate this PrinterJob with a new PrintService.
setPrioritizedLinker(GuardingDynamicLinker)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets a single prioritized linker.
setPrioritizedLinkers(List<? extends GuardingDynamicLinker>)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets the prioritized guarding dynamic linkers.
setPrioritizedLinkers(GuardingDynamicLinker...)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets the prioritized guarding dynamic linkers.
setPriority(int)
- Method in class java.lang.
Thread
Changes the priority of this thread.
setPrivacy(boolean)
- Method in class org.ietf.jgss.
MessageProp
Sets the privacy state.
setPrivateKeyValid(Date)
- Method in class java.security.cert.
X509CertSelector
Sets the privateKeyValid criterion.
setProblemType(int)
- Method in class javax.management.relation.
RoleUnresolved
Sets problem type.
setProcessors(Iterable<? extends Processor>)
- Method in interface javax.tools.
JavaCompiler.CompilationTask
Sets processors (for annotation processing).
setProfile(String)
- Method in interface org.w3c.dom.html.
HTMLHeadElement
setProgress(int)
- Method in class javax.swing.
ProgressMonitor
Indicate the progress of the operation being monitored.
setProgress(int)
- Method in class javax.swing.
SwingWorker
Sets the
progress
bound property.
setProgressiveMode(int)
- Method in class javax.imageio.
ImageWriteParam
Specifies that the writer is to write the image out in a
 progressive mode such that the stream will contain a series of
 scans of increasing quality.
setProgressValue(int)
- Method in class java.awt.
Taskbar
Affixes a small system-provided progress bar to this application's icon.
setPrompt(String)
- Method in interface org.w3c.dom.html.
HTMLIsIndexElement
setPropagatedFrom(BeanContext)
- Method in class java.beans.beancontext.
BeanContextEvent
Sets the
BeanContext
from which this event was propagated.
setPropagationId(Object)
- Method in class java.beans.
PropertyChangeEvent
Sets the propagationId object for the event.
setProperties(Hashtable<?, ?>)
- Method in class java.awt.image.
CropImageFilter
Passes along  the properties from the source object after adding a
 property indicating the cropped region.
setProperties(Hashtable<?, ?>)
- Method in interface java.awt.image.
ImageConsumer
Sets the extensible list of properties associated with this image.
setProperties(Hashtable<?, ?>)
- Method in class java.awt.image.
ImageFilter
Passes the properties from the source object along after adding a
 property indicating the stream of filters it has been run through.
setProperties(Hashtable<?, ?>)
- Method in class java.awt.image.
PixelGrabber
The setProperties method is part of the ImageConsumer API which
 this class must implement to retrieve the pixels.
setProperties(Hashtable<?, ?>)
- Method in class java.awt.image.
ReplicateScaleFilter
Passes along the properties from the source object after adding a
 property indicating the scale applied.
setProperties(Properties)
- Static method in class java.lang.
System
Sets the system properties to the
Properties
argument.
setPropertiesFromAttributes()
- Method in class javax.swing.text.html.
BlockView
Update any cached values that come from attributes.
setPropertiesFromAttributes()
- Method in class javax.swing.text.html.
ImageView
Update any cached values that come from attributes.
setPropertiesFromAttributes()
- Method in class javax.swing.text.html.
InlineView
Set the cached properties from the attributes.
setPropertiesFromAttributes()
- Method in class javax.swing.text.html.
ParagraphView
Sets up the paragraph from css attributes instead of
 the values found in StyleConstants (i.e. which are used
 by the superclass).
setPropertiesFromAttributes()
- Method in class javax.swing.text.
LabelView
Sets the cached properties from the attributes.
setPropertiesFromAttributes()
- Method in class javax.swing.text.
ParagraphView
Set the cached properties from the attributes.
setProperty(String, Object)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
This implementation uses an internal
HashMap
to map the name
 to the specified object.
setProperty(String, Object)
- Method in interface javax.xml.crypto.
XMLCryptoContext
Sets the specified property.
setProperty(String, Object)
- Method in class javax.xml.parsers.
SAXParser
Sets the particular property in the underlying implementation of
XMLReader
.
setProperty(String, Object)
- Method in class javax.xml.stream.
XMLInputFactory
Allows the user to set specific feature/property on the underlying
 implementation.
setProperty(String, Object)
- Method in class javax.xml.stream.
XMLOutputFactory
Allows the user to set specific features/properties on the underlying implementation.
setProperty(String, Object)
- Method in class javax.xml.validation.
SchemaFactory
Set the value of a property.
setProperty(String, Object)
- Method in class javax.xml.validation.
Validator
Set the value of a property.
setProperty(String, Object)
- Method in class javax.xml.validation.
ValidatorHandler
Set the value of a property.
setProperty(String, Object)
- Method in class org.xml.sax.helpers.
ParserAdapter
Set a parser property.
setProperty(String, Object)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Set the value of a property.
setProperty(String, Object)
- Method in interface org.xml.sax.
XMLReader
Set the value of a property.
setProperty(String, String)
- Static method in class java.lang.
System
Sets the system property indicated by the specified key.
setProperty(String, String)
- Static method in class java.security.
Security
Sets a security property value.
setProperty(String, String)
- Method in class java.util.
Properties
Calls the
Hashtable
method
put
.
setProperty(String, String)
- Method in class javax.xml.xpath.
XPathFactory
Sets a property for this
XPathFactory
.
setProperty(String, String)
- Method in class jdk.security.jarsigner.
JarSigner.Builder
Sets an additional implementation-specific property indicated by
 the specified key.
setProperty(String, String, String)
- Method in interface org.w3c.dom.css.
CSSStyleDeclaration
Used to set a property value and priority within this declaration
 block.
setPropertyEditorClass(Class<?>)
- Method in class java.beans.
PropertyDescriptor
Normally PropertyEditors will be found using the PropertyEditorManager.
setProtocols(String[])
- Method in class com.sun.net.httpserver.
HttpsParameters
Sets the array of protocols.
setProtocols(String[])
- Method in class javax.net.ssl.
SSLParameters
Sets the array of protocols.
setPrototypeCellValue(E)
- Method in class javax.swing.
JList
Sets the
prototypeCellValue
property, and then (if the new value
 is
non-null
), computes the
fixedCellWidth
and
fixedCellHeight
properties by requesting the cell renderer
 component for the given value (and index 0) from the cell renderer, and
 using that component's preferred size.
setPrototypeDisplayValue(E)
- Method in class javax.swing.
JComboBox
Sets the prototype display value used to calculate the size of the display
 for the UI portion.
setPublicId(String)
- Method in class javax.xml.transform.stream.
StreamSource
Set the public identifier for this Source.
setPublicId(String)
- Method in interface org.w3c.dom.ls.
LSInput
The public identifier for this input source.
setPublicId(String)
- Method in class org.xml.sax.helpers.
LocatorImpl
Set the public identifier for this locator.
setPublicId(String)
- Method in class org.xml.sax.
InputSource
Set the public identifier for this input source.
setPublicKey(PublicKey)
- Method in class java.security.
Identity
Deprecated.
Sets this identity's public key.
setPurgeFlag(boolean)
- Method in class javax.management.relation.
RelationService
Sets the flag to indicate if when a notification is received for the
 unregistration of an MBean referenced in a relation, if an immediate
 "purge" of the relations (look for the relations no longer valid)
 has to be performed , or if that will be performed only when the
 purgeRelations method will be explicitly called.
setPurgeFlag(boolean)
- Method in interface javax.management.relation.
RelationServiceMBean
Sets the flag to indicate if when a notification is received for the
 unregistration of an MBean referenced in a relation, if an immediate
 "purge" of the relations (look for the relations no longer valid)
 has to be performed, or if that will be performed only when the
 purgeRelations method is explicitly called.
setPushLevel(Level)
- Method in class java.util.logging.
MemoryHandler
Set the
pushLevel
.
setQName(int, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Set the qualified name of a specific attribute.
setQOP(int)
- Method in class org.ietf.jgss.
MessageProp
Sets the QOP value.
setQueryTimeout(int)
- Method in interface java.sql.
Statement
Sets the number of seconds the driver will wait for a
Statement
object to execute to the given number of seconds.
setQueryTimeout(int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets to the given number the maximum number of seconds the driver will
 wait for a query to execute.
setQueryTimeout(int)
- Method in interface javax.sql.
RowSet
Sets the maximum time the driver will wait for
 a statement to execute to the given number of seconds.
setQuitHandler(QuitHandler)
- Method in class java.awt.
Desktop
Installs the handler which determines if the application should quit.
setQuitStrategy(QuitStrategy)
- Method in class java.awt.
Desktop
Sets the default strategy used to quit this application.
setQuotes(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the quotes property definition in CSS2.
setRangeProperties(int, int, int, int, boolean)
- Method in interface javax.swing.
BoundedRangeModel
This method sets all of the model's data with a single method call.
setRangeProperties(int, int, int, int, boolean)
- Method in class javax.swing.
DefaultBoundedRangeModel
Sets all of the
BoundedRangeModel
properties after forcing
 the arguments to obey the usual constraints:
setRaster(Raster)
- Method in class javax.imageio.
IIOImage
Sets the current
Raster
.
setRawOffset(int)
- Method in class java.util.
SimpleTimeZone
Sets the base time zone offset to GMT.
setRawOffset(int)
- Method in class java.util.
TimeZone
Sets the base time zone offset to GMT.
setRawResult(Void)
- Method in class java.util.concurrent.
RecursiveAction
Requires null completion value.
setRawResult(T)
- Method in class java.util.concurrent.
CountedCompleter
A method that result-bearing CountedCompleters may optionally
 use to help maintain result data.
setRawResult(V)
- Method in class java.util.concurrent.
ForkJoinTask
Forces the given value to be returned as a result.
setRawResult(V)
- Method in class java.util.concurrent.
RecursiveTask
setReadable(boolean)
- Method in class java.io.
File
A convenience method to set the owner's read permission for this abstract
 pathname.
setReadable(boolean, boolean)
- Method in class java.io.
File
Sets the owner's or everybody's read permission for this abstract
 pathname.
setReader(Reader)
- Method in interface javax.script.
ScriptContext
Sets the
Reader
for scripts to read input
 .
setReader(Reader)
- Method in class javax.script.
SimpleScriptContext
Sets the
Reader
for scripts to read input
 .
setReader(Reader)
- Method in class javax.xml.transform.stream.
StreamSource
Set the input to be a character reader.
setReadMethod(Method)
- Method in class java.beans.
PropertyDescriptor
Sets the method that should be used to read the property value.
setReadOnly()
- Method in class java.io.
File
Marks the file or directory named by this abstract pathname so that
 only read operations are allowed.
setReadOnly()
- Method in class java.security.
PermissionCollection
Marks this
PermissionCollection
object as "readonly".
setReadOnly()
- Method in class javax.security.auth.
Subject
Set this
Subject
to be read-only.
setReadOnly(boolean)
- Method in interface java.nio.file.attribute.
DosFileAttributeView
Updates the value of the read-only attribute.
setReadOnly(boolean)
- Method in interface java.sql.
Connection
Puts this connection in read-only mode as a hint to the driver to enable
 database optimizations.
setReadOnly(boolean)
- Method in class javax.sql.rowset.
BaseRowSet
Sets this
RowSet
object's readOnly  property to the given
boolean
.
setReadOnly(boolean)
- Method in interface javax.sql.
RowSet
Sets whether this
RowSet
object is read-only to the
 given
boolean
.
setReadOnly(boolean)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setReadOnly(boolean)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setReadTimeout(int)
- Method in class java.net.
URLConnection
Sets the read timeout to a specified timeout, in
 milliseconds.
setReadUnknownTags(boolean)
- Method in class javax.imageio.plugins.tiff.
TIFFImageReadParam
Set whether to read fields corresponding to
TIFFTag
s not in
 the allowed
TIFFTagSet
s.
setReceiveBufferSize(int)
- Method in class java.net.
DatagramSocket
Sets the SO_RCVBUF option to the specified value for this
DatagramSocket
.
setReceiveBufferSize(int)
- Method in class java.net.
ServerSocket
Sets a default proposed value for the
SO_RCVBUF
option for sockets
 accepted from this
ServerSocket
.
setReceiveBufferSize(int)
- Method in class java.net.
Socket
Sets the
SO_RCVBUF
option to the
 specified value for this
Socket
.
setReceiver(Receiver)
- Method in interface javax.sound.midi.
Transmitter
Sets the receiver to which this transmitter will deliver MIDI messages.
setRecordingOptions(long, Map<String, String>)
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Configures the recording options (for example, destination file and time span
 to keep data).
setRecordingSettings(long, Map<String, String>)
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Sets and replaces all previous settings for the specified recording.
setRect(double, double, double, double)
- Method in class java.awt.geom.
Rectangle2D.Double
Sets the location and size of this
Rectangle2D
to the specified
double
values.
setRect(double, double, double, double)
- Method in class java.awt.geom.
Rectangle2D.Float
Sets the location and size of this
Rectangle2D
to the specified
double
values.
setRect(double, double, double, double)
- Method in class java.awt.geom.
Rectangle2D
Sets the location and size of this
Rectangle2D
to the specified
double
values.
setRect(double, double, double, double)
- Method in class java.awt.
Rectangle
Sets the bounds of this
Rectangle
to the integer bounds
 which encompass the specified
x
,
y
,
width
,
 and
height
.
setRect(float, float, float, float)
- Method in class java.awt.geom.
Rectangle2D.Float
Sets the location and size of this
Rectangle2D
to the specified
float
values.
setRect(int, int, Raster)
- Method in class java.awt.image.
WritableRaster
Copies pixels from Raster srcRaster to this WritableRaster.
setRect(Rectangle2D)
- Method in class java.awt.geom.
Rectangle2D.Double
Sets this
Rectangle2D
to be the same as the specified
Rectangle2D
.
setRect(Rectangle2D)
- Method in class java.awt.geom.
Rectangle2D.Float
Sets this
Rectangle2D
to be the same as the specified
Rectangle2D
.
setRect(Rectangle2D)
- Method in class java.awt.geom.
Rectangle2D
Sets this
Rectangle2D
to be the same as the specified
Rectangle2D
.
setRect(Raster)
- Method in class java.awt.image.
WritableRaster
Copies pixels from Raster srcRaster to this WritableRaster.
setRef(int, Ref)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
REF(<structured-type>)
value.
setRef(int, Ref)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
Ref
object in
 the Java programming language.
setRef(int, Ref)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with the given
Ref
value.
setRef(RemoteStub, RemoteRef)
- Static method in class java.rmi.server.
RemoteStub
Deprecated.
No replacement.  The
setRef
method
 was intended for setting the remote reference of a remote
 stub. This is unnecessary, since
RemoteStub
s can be created
 and initialized with a remote reference through use of
 the
RemoteStub(RemoteRef)
constructor.
setRegion(String)
- Method in class java.util.
Locale.Builder
Sets the region.
setRejectedExecutionHandler(RejectedExecutionHandler)
- Method in class java.util.concurrent.
ThreadPoolExecutor
Sets a new handler for unexecutable tasks.
setRel(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setRel(String)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setRelationServiceManagementFlag(Boolean)
- Method in class javax.management.relation.
RelationSupport
setRelationServiceManagementFlag(Boolean)
- Method in interface javax.management.relation.
RelationSupportMBean
Specifies whether this relation is handled by the Relation
 Service.
setRelative(boolean)
- Method in class javax.naming.
NameClassPair
Sets whether the name of this binding is relative to the target
 context (which is named by the first parameter of the
list()
method).
setRelease(boolean)
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setRelease(java.lang.Object...)
.
setRelease(int)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setRelease(java.lang.Object...)
.
setRelease(int, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setRelease(java.lang.Object...)
.
setRelease(int, long)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setRelease(java.lang.Object...)
.
setRelease(int, E)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Sets the element at index
i
to
newValue
,
 with memory effects as specified by
VarHandle.setRelease(java.lang.Object...)
.
setRelease(long)
- Method in class java.util.concurrent.atomic.
AtomicLong
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setRelease(java.lang.Object...)
.
setRelease(Object...)
- Method in class java.lang.invoke.
VarHandle
Sets the value of a variable to the
newValue
, and ensures that
 prior loads and stores are not reordered after this access.
setRelease(V)
- Method in class java.util.concurrent.atomic.
AtomicReference
Sets the value to
newValue
,
 with memory effects as specified by
VarHandle.setRelease(java.lang.Object...)
.
setRemainingName(Name)
- Method in exception class javax.naming.
NamingException
Sets the remaining name field of this exception.
setRemainingName(Name)
- Method in class javax.naming.spi.
ResolveResult
Sets the remaining name field of this result to name.
setRemainingNewName(Name)
- Method in exception class javax.naming.
CannotProceedException
Sets the "remaining new name" field of this exception.
setRemoveOnCancelPolicy(boolean)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Sets the policy on whether cancelled tasks should be immediately
 removed from the work queue at time of cancellation.
setRenderContext(RenderContext)
- Method in class java.awt.image.renderable.
RenderableImageProducer
Sets a new RenderContext to use for the next startProduction() call.
setRenderedImage(RenderedImage)
- Method in class javax.imageio.
IIOImage
Sets the current
RenderedImage
.
setRenderer(ListCellRenderer<? super E>)
- Method in class javax.swing.
JComboBox
Sets the renderer that paints the list items and the item selected from the list in
 the JComboBox field.
setRenderingHint(RenderingHints.Key, Object)
- Method in class java.awt.
Graphics2D
Sets the value of a single preference for the rendering algorithms.
setRenderingHints(RenderingHints)
- Method in class java.awt.image.renderable.
RenderContext
Sets the rendering hints of this
RenderContext
.
setRenderingHints(Map<?, ?>)
- Method in class java.awt.
Graphics2D
Replaces the values of all preferences for the rendering
 algorithms with the specified
hints
.
setReorderingAllowed(boolean)
- Method in class javax.swing.table.
JTableHeader
Sets whether the user can drag column headers to reorder columns.
setRepeats(boolean)
- Method in class javax.swing.
Timer
If
flag
is
false
,
 instructs the
Timer
to send only one
 action event to its listeners.
setRequestControls(Control[])
- Method in class javax.naming.ldap.
InitialLdapContext
setRequestControls(Control[])
- Method in interface javax.naming.ldap.
LdapContext
Sets the request controls for methods subsequently
 invoked on this context.
setRequestFocusEnabled(boolean)
- Method in class javax.swing.
JComponent
Provides a hint as to whether or not this
JComponent
should get focus.
setRequestMethod(String)
- Method in class java.net.
HttpURLConnection
Set the method for the URL request, one of:
 
  GET
  POST
  HEAD
  OPTIONS
  PUT
  DELETE
  TRACE
  are legal, subject to protocol restrictions.
setRequestProperty(String, String)
- Method in class java.net.
URLConnection
Sets the general request property.
setReshowDelay(int)
- Method in class javax.swing.
ToolTipManager
Used to specify the amount of time before the user has to wait
initialDelay
milliseconds before a tooltip will be
 shown.
setResizable(boolean)
- Method in class java.awt.
Dialog
Sets whether this dialog is resizable by the user.
setResizable(boolean)
- Method in class java.awt.
Frame
Sets whether this frame is resizable by the user.
setResizable(boolean)
- Method in class javax.swing.
JInternalFrame
Sets whether the
JInternalFrame
can be resized by some
 user action.
setResizable(boolean)
- Method in class javax.swing.table.
TableColumn
Sets whether this column can be resized.
setResizeWeight(double)
- Method in class javax.swing.
JSplitPane
Specifies how to distribute extra space when the size of the split pane
 changes.
setResizingAllowed(boolean)
- Method in class javax.swing.table.
JTableHeader
Sets whether the user can resize columns by dragging between headers.
setResizingColumn(TableColumn)
- Method in class javax.swing.table.
JTableHeader
Sets the header's
resizingColumn
to
aColumn
.
setResolvedName(Name)
- Method in exception class javax.naming.
NamingException
Sets the resolved name field of this exception.
setResolvedObj(Object)
- Method in exception class javax.naming.
NamingException
Sets the resolved object field of this exception.
setResolvedObj(Object)
- Method in class javax.naming.spi.
ResolveResult
Sets the resolved Object field of this result to obj.
setResolvedValue(int, Object)
- Method in interface javax.sql.rowset.spi.
SyncResolver
Sets
obj
as the value in column
index
in the current row of the
RowSet
object that is being synchronized.
setResolvedValue(String, Object)
- Method in interface javax.sql.rowset.spi.
SyncResolver
Sets
obj
as the value in column
columnName
in the current row of the
RowSet
object that is being synchronized.
setResolveParent(AttributeSet)
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Sets the resolving parent.
setResolveParent(AttributeSet)
- Method in interface javax.swing.text.
MutableAttributeSet
Sets the resolving parent.
setResolveParent(AttributeSet)
- Method in class javax.swing.text.
SimpleAttributeSet
Sets the resolving parent.
setResolveParent(AttributeSet)
- Method in class javax.swing.text.
StyleContext.NamedStyle
Sets the resolving parent.
setResolveParent(Keymap)
- Method in interface javax.swing.text.
Keymap
Sets the parent keymap, which will be used to
 resolve key-bindings.
setResourceBaseName(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
Sets a new base name for locating
ResourceBundle
s
 containing descriptions of elements and attributes for this
 format.
setResourceBundle(ResourceBundle)
- Method in class java.util.logging.
Logger
Sets a resource bundle on this logger.
setResourceBundle(ResourceBundle)
- Method in class java.util.logging.
LogRecord
Set the localization resource bundle.
setResourceBundleName(String)
- Method in class java.util.logging.
LogRecord
Set the localization resource bundle name.
setResourceResolver(LSResourceResolver)
- Method in class javax.xml.validation.
SchemaFactory
Sets the
LSResourceResolver
to customize
 resource resolution when parsing schemas.
setResourceResolver(LSResourceResolver)
- Method in class javax.xml.validation.
Validator
Sets the
LSResourceResolver
to customize
 resource resolution while in a validation episode.
setResourceResolver(LSResourceResolver)
- Method in class javax.xml.validation.
ValidatorHandler
Sets the
LSResourceResolver
to customize
 resource resolution while in a validation episode.
setResult(Class<T>)
- Method in interface java.sql.
SQLXML
Returns a Result for setting the XML value designated by this SQLXML instance.
setResult(Result)
- Method in interface javax.xml.transform.sax.
TransformerHandler
Set  the
Result
associated with this
TransformerHandler
to be used for the transformation.
setReturningAttributes(String[])
- Method in class javax.naming.directory.
SearchControls
Specifies the attributes that will be returned as part of the search.
setReturningObjFlag(boolean)
- Method in class javax.naming.directory.
SearchControls
Enables/disables returning objects returned as part of the result.
setReuse(boolean)
- Method in interface jdk.jfr.consumer.
EventStream
Specifies that the event object in an
EventStream.onEvent(Consumer)
action
 can be reused.
setReuse(boolean)
- Method in class jdk.jfr.consumer.
RecordingStream
setReuse(boolean)
- Method in class jdk.management.jfr.
RemoteRecordingStream
setReuseAddress(boolean)
- Method in class java.net.
DatagramSocket
Enable/disable the SO_REUSEADDR socket option.
setReuseAddress(boolean)
- Method in class java.net.
ServerSocket
Enable/disable the
SO_REUSEADDR
socket option.
setReuseAddress(boolean)
- Method in class java.net.
Socket
Enable/disable the
SO_REUSEADDR
socket option.
setRev(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setRev(String)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setRevocationEnabled(boolean)
- Method in class java.security.cert.
PKIXParameters
Sets the RevocationEnabled flag.
setRGB(int, int, int)
- Method in class java.awt.image.
BufferedImage
Sets a pixel in this
BufferedImage
to the specified
 RGB value.
setRGB(int, int, int, int, int[], int, int)
- Method in class java.awt.image.
BufferedImage
Sets an array of integer pixels in the default RGB color model
 (TYPE_INT_ARGB) and default sRGB color space,
 into a portion of the image data.
setRichness(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the richness property definition in CSS2.
setRight(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the right property definition in CSS2.
setRightChildIndent(int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the right child indent.
setRightComponent(Component)
- Method in class javax.swing.
JSplitPane
Sets the component to the right (or below) the divider.
setRightIndent(MutableAttributeSet, float)
- Static method in class javax.swing.text.
StyleConstants
Sets right indent.
setRightInset(float)
- Method in class javax.swing.text.
AsyncBoxView
Set the right part of the margin around the view.
setRole(String, Role)
- Method in class javax.management.relation.
RelationService
Sets the given role in given relation.
setRole(String, Role)
- Method in interface javax.management.relation.
RelationServiceMBean
Sets the given role in given relation.
setRole(Role)
- Method in interface javax.management.relation.
Relation
Sets the given role.
setRole(Role)
- Method in class javax.management.relation.
RelationSupport
Sets the given role.
setRoleName(String)
- Method in class javax.management.relation.
Role
Sets role name.
setRoleName(String)
- Method in class javax.management.relation.
RoleUnresolved
Sets role name.
setRoles(String, RoleList)
- Method in class javax.management.relation.
RelationService
Sets the given roles in given relation.
setRoles(String, RoleList)
- Method in interface javax.management.relation.
RelationServiceMBean
Sets the given roles in given relation.
setRoles(RoleList)
- Method in interface javax.management.relation.
Relation
Sets the given roles.
setRoles(RoleList)
- Method in class javax.management.relation.
RelationSupport
Sets the given roles.
setRoles(RoleList)
- Method in class javax.management.relation.
RoleResult
Sets list of roles successfully accessed.
setRolesUnresolved(RoleUnresolvedList)
- Method in class javax.management.relation.
RoleResult
Sets list of roles unsuccessfully accessed.
setRoleValue(List<ObjectName>)
- Method in class javax.management.relation.
Role
Sets role value.
setRoleValue(List<ObjectName>)
- Method in class javax.management.relation.
RoleUnresolved
Sets role value.
setRollover(boolean)
- Method in interface javax.swing.
ButtonModel
Sets or clears the button's rollover state
setRollover(boolean)
- Method in class javax.swing.
DefaultButtonModel
Sets or clears the button's rollover state
setRollover(boolean)
- Method in class javax.swing.
JToolBar
Sets the rollover state of this toolbar.
setRolloverBorders(boolean)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Sets the flag for enabling rollover borders on the toolbar and it will
 also install the appropriate border depending on the state of the flag.
setRolloverEnabled(boolean)
- Method in class javax.swing.
AbstractButton
Sets the
rolloverEnabled
property, which
 must be
true
for rollover effects to occur.
setRolloverIcon(Icon)
- Method in class javax.swing.
AbstractButton
Sets the rollover icon for the button.
setRolloverSelectedIcon(Icon)
- Method in class javax.swing.
AbstractButton
Sets the rollover selected icon for the button.
setRolloverTab(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Sets the tab the mouse is currently over to
index
.
setRoot(TreeNode)
- Method in class javax.swing.tree.
DefaultTreeModel
Sets the root to
root
.
setRootCause(Throwable)
- Method in exception class javax.naming.
NamingException
Records the root cause of this NamingException.
setRootFrame(Frame)
- Static method in class javax.swing.
JOptionPane
Sets the frame to use for class methods in which a frame is
 not provided.
setRootPane(JRootPane)
- Method in class javax.swing.
JApplet
Deprecated.
Sets the rootPane property.
setRootPane(JRootPane)
- Method in class javax.swing.
JDialog
Sets the
rootPane
property.
setRootPane(JRootPane)
- Method in class javax.swing.
JFrame
Sets the
rootPane
property.
setRootPane(JRootPane)
- Method in class javax.swing.
JInternalFrame
Sets the
rootPane
property
 for this
JInternalFrame
.
setRootPane(JRootPane)
- Method in class javax.swing.
JWindow
Sets the new
rootPane
object for this window.
setRootPaneCheckingEnabled(boolean)
- Method in class javax.swing.
JApplet
Deprecated.
Sets whether calls to
add
and
setLayout
are forwarded to the
contentPane
.
setRootPaneCheckingEnabled(boolean)
- Method in class javax.swing.
JDialog
Sets whether calls to
add
and
setLayout
are forwarded to the
contentPane
.
setRootPaneCheckingEnabled(boolean)
- Method in class javax.swing.
JFrame
Sets whether calls to
add
and
setLayout
are forwarded to the
contentPane
.
setRootPaneCheckingEnabled(boolean)
- Method in class javax.swing.
JInternalFrame
Sets whether calls to
add
and
setLayout
are forwarded to the
contentPane
.
setRootPaneCheckingEnabled(boolean)
- Method in class javax.swing.
JWindow
Sets whether calls to
add
and
setLayout
are forwarded to the
contentPane
.
setRootVisible(boolean)
- Method in class javax.swing.
JTree
Determines whether or not the root node from
 the
TreeModel
is visible.
setRootVisible(boolean)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the root to being visible.
setRootVisible(boolean)
- Method in class javax.swing.tree.
AbstractLayoutCache
Determines whether or not the root node from
 the
TreeModel
is visible.
setRootVisible(boolean)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Determines whether or not the root node from
 the TreeModel is visible.
setRootVisible(boolean)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Determines whether or not the root node from
 the
TreeModel
is visible.
setRoundingMode(RoundingMode)
- Method in class java.text.
CompactNumberFormat
Sets the
RoundingMode
used in this
CompactNumberFormat
.
setRoundingMode(RoundingMode)
- Method in class java.text.
DecimalFormat
Sets the
RoundingMode
used in this DecimalFormat.
setRoundingMode(RoundingMode)
- Method in class java.text.
NumberFormat
Sets the
RoundingMode
used in this NumberFormat.
setRoundRect(double, double, double, double, double, double)
- Method in class java.awt.geom.
RoundRectangle2D.Double
Sets the location, size, and corner radii of this
RoundRectangle2D
to the specified
double
values.
setRoundRect(double, double, double, double, double, double)
- Method in class java.awt.geom.
RoundRectangle2D.Float
Sets the location, size, and corner radii of this
RoundRectangle2D
to the specified
double
values.
setRoundRect(double, double, double, double, double, double)
- Method in class java.awt.geom.
RoundRectangle2D
Sets the location, size, and corner radii of this
RoundRectangle2D
to the specified
double
values.
setRoundRect(float, float, float, float, float, float)
- Method in class java.awt.geom.
RoundRectangle2D.Float
Sets the location, size, and corner radii of this
RoundRectangle2D
to the specified
float
values.
setRoundRect(RoundRectangle2D)
- Method in class java.awt.geom.
RoundRectangle2D.Double
Sets this
RoundRectangle2D
to be the same as the
 specified
RoundRectangle2D
.
setRoundRect(RoundRectangle2D)
- Method in class java.awt.geom.
RoundRectangle2D.Float
Sets this
RoundRectangle2D
to be the same as the
 specified
RoundRectangle2D
.
setRoundRect(RoundRectangle2D)
- Method in class java.awt.geom.
RoundRectangle2D
Sets this
RoundRectangle2D
to be the same as the
 specified
RoundRectangle2D
.
setRowCount(int)
- Method in class javax.swing.table.
DefaultTableModel
Sets the number of rows in the model.
setRowFilter(RowFilter<? super M, ? super I>)
- Method in class javax.swing.
DefaultRowSorter
Sets the filter that determines which rows, if any, should be
 hidden from the view.
setRowHeader(JViewport)
- Method in class javax.swing.
JScrollPane
Removes the old rowHeader, if it exists; if the new rowHeader
 isn't
null
, syncs the y coordinate of its
 viewPosition with
 the viewport (if there is one) and then adds it to the scroll pane.
setRowHeaderView(Component)
- Method in class javax.swing.
JScrollPane
Creates a row-header viewport if necessary, sets
 its view and then adds the row-header viewport
 to the scrollpane.
setRowHeight(int)
- Method in class javax.swing.
JTable
Sets the height, in pixels, of all cells to
rowHeight
,
 revalidates, and repaints.
setRowHeight(int)
- Method in class javax.swing.
JTree
Sets the height of each cell, in pixels.
setRowHeight(int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Sets the row height, this is forwarded to the treeState.
setRowHeight(int)
- Method in class javax.swing.tree.
AbstractLayoutCache
Sets the height of each cell.
setRowHeight(int)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Sets the height of each cell.
setRowHeight(int)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Sets the height of each cell.
setRowHeight(int, int)
- Method in class javax.swing.
JTable
Sets the height for
row
to
rowHeight
,
 revalidates, and repaints.
setRowId(int, RowId)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.RowId
object.
setRowId(int, RowId)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.RowId
object.
setRowId(int, RowId)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.RowId
object.
setRowId(String, RowId)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.RowId
object.
setRowId(String, RowId)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.RowId
object.
setRowId(String, RowId)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.RowId
object.
setRowMapper(RowMapper)
- Method in class javax.swing.
JTree.EmptySelectionModel
This is overridden to do nothing;
EmptySelectionModel
does not allow a selection.
setRowMapper(RowMapper)
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Sets the RowMapper instance.
setRowMapper(RowMapper)
- Method in interface javax.swing.tree.
TreeSelectionModel
Sets the RowMapper instance.
setRowMargin(int)
- Method in class javax.swing.
JTable
Sets the amount of empty space between cells in adjacent rows.
setRows(int)
- Method in class java.awt.
GridLayout
Sets the number of rows in this layout to the specified value.
setRows(int)
- Method in class java.awt.
TextArea
Sets the number of rows for this text area.
setRows(int)
- Method in class javax.swing.
JTextArea
Sets the number of rows for this TextArea.
setRows(int)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setRows(String)
- Method in interface org.w3c.dom.html.
HTMLFrameSetElement
setRowSelectionAllowed(boolean)
- Method in class javax.swing.
JTable
Sets whether the rows in this model can be selected.
setRowSelectionInterval(int, int)
- Method in class javax.swing.
JTable
Selects the rows from
index0
to
index1
,
 inclusive.
setRowSorter(RowSorter<? extends TableModel>)
- Method in class javax.swing.
JTable
Sets the
RowSorter
.
setRowSpan(int)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setRules(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setSample(int, int, int, double)
- Method in class java.awt.image.
WritableRaster
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using a double for input.
setSample(int, int, int, double, DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using a double for input.
setSample(int, int, int, double, DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the
DataBuffer
using a double for input.
setSample(int, int, int, double, DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using a double for input.
setSample(int, int, int, float)
- Method in class java.awt.image.
WritableRaster
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using a float for input.
setSample(int, int, int, float, DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using a float for input.
setSample(int, int, int, float, DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the
DataBuffer
using a float for input.
setSample(int, int, int, float, DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using a float for input.
setSample(int, int, int, int)
- Method in class java.awt.image.
WritableRaster
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using an int for input.
setSample(int, int, int, int, DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using an int for input.
setSample(int, int, int, int, DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the
DataBuffer
using an int for input.
setSample(int, int, int, int, DataBuffer)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Sets a sample in the specified band for the pixel located at
 (x, y) in the
DataBuffer
using an
int
for input.
setSample(int, int, int, int, DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using an int for input.
setSample(int, int, int, int, DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Sets a sample in the specified band for the pixel located at (x,y)
 in the DataBuffer using an int for input.
setSamples(int, int, int, int, int, double[])
- Method in class java.awt.image.
WritableRaster
Sets the samples in the specified band for the specified rectangle
 of pixels from a double array containing one sample per array element.
setSamples(int, int, int, int, int, double[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets the samples in the specified band for the specified rectangle
 of pixels from a double array containing one sample per array element.
setSamples(int, int, int, int, int, float[])
- Method in class java.awt.image.
WritableRaster
Sets the samples in the specified band for the specified rectangle
 of pixels from a float array containing one sample per array element.
setSamples(int, int, int, int, int, float[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets the samples in the specified band for the specified rectangle
 of pixels from a float array containing one sample per array element.
setSamples(int, int, int, int, int, int[])
- Method in class java.awt.image.
WritableRaster
Sets the samples in the specified band for the specified rectangle
 of pixels from an int array containing one sample per array element.
setSamples(int, int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Sets the samples in the specified band for the specified rectangle
 of pixels from an int array containing one sample per data array element.
setSamples(int, int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Sets the samples in the specified band for the specified rectangle
 of pixels from an int array containing one sample per data array element.
setSamples(int, int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Sets the samples in the specified band for the specified rectangle
 of pixels from an int array containing one sample per array element.
setSamples(int, int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Sets the samples in the specified band for the specified rectangle
 of pixels from an int array containing one sample per array element.
setSavepoint()
- Method in interface java.sql.
Connection
Creates an unnamed savepoint in the current transaction and
 returns the new
Savepoint
object that represents it.
setSavepoint(String)
- Method in interface java.sql.
Connection
Creates a savepoint with the given name in the current transaction
 and returns the new
Savepoint
object that represents it.
setScale(int)
- Method in class java.math.
BigDecimal
Returns a
BigDecimal
whose scale is the specified
 value, and whose value is numerically equal to this
BigDecimal
's.
setScale(int, int)
- Method in class java.math.
BigDecimal
Deprecated.
The method
BigDecimal.setScale(int, RoundingMode)
should
 be used in preference to this legacy method.
setScale(int, int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the number of digits to the right of the decimal point in a value
 stored in the designated column to the given number.
setScale(int, int)
- Method in interface javax.sql.
RowSetMetaData
Sets the designated column's number of digits to the
 right of the decimal point to the given
int
.
setScale(int, RoundingMode)
- Method in class java.math.
BigDecimal
Returns a
BigDecimal
whose scale is the specified
 value, and whose unscaled value is determined by multiplying or
 dividing this
BigDecimal
's unscaled value by the
 appropriate power of ten to maintain its overall value.
setSchema(String)
- Method in interface java.sql.
Connection
Sets the given schema name to access.
setSchema(Schema)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Set the
Schema
to be used by parsers created
 from this factory.
setSchema(Schema)
- Method in class javax.xml.parsers.
SAXParserFactory
Set the
Schema
to be used by parsers created
 from this factory.
setSchemaName(int, String)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the designated column's table's schema name, if any, to
schemaName
.
setSchemaName(int, String)
- Method in interface javax.sql.
RowSetMetaData
Sets the name of the designated column's table's schema, if any, to
 the given
String
.
setScheme(String)
- Method in interface org.w3c.dom.html.
HTMLMetaElement
setScope(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setScript(String)
- Method in class java.util.
Locale.Builder
Sets the script.
setScrollByBlock(boolean)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI.ScrollListener
Sets the scrolling by block
setScrollByBlock(boolean)
- Method in class javax.swing.plaf.basic.
BasicSliderUI.ScrollListener
Sets scrolling by block
setScrolling(String)
- Method in interface org.w3c.dom.html.
HTMLFrameElement
setScrolling(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setScrollMode(int)
- Method in class javax.swing.
JViewport
Used to control the method of scrolling the viewport contents.
setScrollOffset(int)
- Method in class javax.swing.
JTextField
Sets the scroll offset, in pixels.
setScrollPosition(int, int)
- Method in class java.awt.
ScrollPane
Scrolls to the specified position within the child component.
setScrollPosition(Point)
- Method in class java.awt.
ScrollPane
Scrolls to the specified position within the child component.
setScrollsOnExpand(boolean)
- Method in class javax.swing.
JTree
Sets the
scrollsOnExpand
property,
 which determines whether the
 tree might scroll to show previously hidden children.
setSearchable(int, boolean)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets whether a value stored in the designated column can be used
 in a
WHERE
clause to the given
boolean
value.
setSearchable(int, boolean)
- Method in interface javax.sql.
RowSetMetaData
Sets whether the designated column can be used in a where clause.
setSearchScope(int)
- Method in class javax.naming.directory.
SearchControls
Sets the search scope to one of:
 OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE.
setSecond(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set seconds.
setSeconds(int)
- Method in class java.sql.
Date
Deprecated.
setSeconds(int)
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.set(Calendar.SECOND, int seconds)
.
setSecure(boolean)
- Method in class java.net.
HttpCookie
Indicates whether the cookie should only be sent using a secure protocol,
 such as HTTPS or SSL.
setSecurityManager(SecurityManager)
- Static method in class java.lang.
System
Deprecated, for removal: This API element is subject to removal in a future version.
This method is only useful in conjunction with
the Security Manager
, which is
       deprecated and subject to removal in a future release.
       Consequently, this method is also deprecated and subject to
       removal. There is no replacement for the Security Manager or this
       method.
setSeed(byte[])
- Method in class java.security.
SecureRandom
Reseeds this random object with the given seed.
setSeed(long)
- Method in class java.security.
SecureRandom
Reseeds this random object, using the eight bytes contained
 in the given
long seed
.
setSeed(long)
- Method in class java.util.concurrent.
ThreadLocalRandom
Throws
UnsupportedOperationException
.
setSeed(long)
- Method in class java.util.
Random
Sets or updates the seed of this random number generator using the
 provided
long
seed value (optional operation).
setSelected(boolean)
- Method in class javax.swing.
AbstractButton
Sets the state of the button.
setSelected(boolean)
- Method in interface javax.swing.
ButtonModel
Selects or deselects the button.
setSelected(boolean)
- Method in class javax.swing.
DefaultButtonModel
Selects or deselects the button.
setSelected(boolean)
- Method in class javax.swing.
JInternalFrame
Selects or deselects the internal frame
 if it's showing.
setSelected(boolean)
- Method in class javax.swing.
JMenu
Sets the selection status of the menu.
setSelected(boolean)
- Method in class javax.swing.
JToggleButton.ToggleButtonModel
Sets the selected state of the button.
setSelected(boolean)
- Method in interface org.w3c.dom.html.
HTMLOptionElement
setSelected(Component)
- Method in class javax.swing.
JMenuBar
Sets the currently selected component, producing a
 a change to the selection model.
setSelected(Component)
- Method in class javax.swing.
JPopupMenu
Sets the currently selected component,  This will result
 in a change to the selection model.
setSelected(ButtonModel, boolean)
- Method in class javax.swing.
ButtonGroup
Sets the selected value for the
ButtonModel
.
setSelectedCheckbox(Checkbox)
- Method in class java.awt.
CheckboxGroup
Sets the currently selected check box in this group
 to be the specified check box.
setSelectedColor(Color)
- Method in interface javax.swing.colorchooser.
ColorSelectionModel
Sets the selected color to
color
.
setSelectedColor(Color)
- Method in class javax.swing.colorchooser.
DefaultColorSelectionModel
Sets the selected color to
color
.
setSelectedComponent(Component)
- Method in class javax.swing.
JTabbedPane
Sets the selected component for this tabbedpane.
setSelectedFile(File)
- Method in class javax.swing.
JFileChooser
Sets the selected file.
setSelectedFiles(File[])
- Method in class javax.swing.
JFileChooser
Sets the list of selected files if the file chooser is
 set to allow multiple selection.
setSelectedFrame(JInternalFrame)
- Method in class javax.swing.
JDesktopPane
Sets the currently active
JInternalFrame
in this
JDesktopPane
.
setSelectedIcon(Icon)
- Method in class javax.swing.
AbstractButton
Sets the selected icon for the button.
setSelectedIndex(int)
- Method in class javax.security.auth.callback.
ChoiceCallback
Set the selected choice.
setSelectedIndex(int)
- Method in class javax.security.auth.callback.
ConfirmationCallback
Set the selected confirmation option.
setSelectedIndex(int)
- Method in class javax.swing.
DefaultSingleSelectionModel
Sets the model's selected index to
index
.
setSelectedIndex(int)
- Method in class javax.swing.
JComboBox
Selects the item at index
anIndex
.
setSelectedIndex(int)
- Method in class javax.swing.
JList
Selects a single cell.
setSelectedIndex(int)
- Method in class javax.swing.
JTabbedPane
Sets the selected index for this tabbedpane.
setSelectedIndex(int)
- Method in interface javax.swing.
SingleSelectionModel
Sets the model's selected index to
index
.
setSelectedIndex(int)
- Method in interface org.w3c.dom.html.
HTMLSelectElement
setSelectedIndexes(int[])
- Method in class javax.security.auth.callback.
ChoiceCallback
Set the selected choices.
setSelectedIndices(int[])
- Method in class javax.swing.
JList
Changes the selection to be the set of indices specified by the given
 array.
setSelectedItem(Object)
- Method in interface javax.swing.
ComboBoxModel
Set the selected item.
setSelectedItem(Object)
- Method in class javax.swing.
DefaultComboBoxModel
Set the value of the selected item.
setSelectedItem(Object)
- Method in class javax.swing.
JComboBox
Sets the selected item in the combo box display area to the object in
 the argument.
setSelectedItem(Object)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.DirectoryComboBoxModel
setSelectedItem(Object)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.FilterComboBoxModel
setSelectedPath(MenuElement[])
- Method in class javax.swing.
MenuSelectionManager
Changes the selection in the menu hierarchy.
setSelectedTextColor(Color)
- Method in class javax.swing.text.
JTextComponent
Sets the current color used to render the selected text.
setSelectedValue(Object, boolean)
- Method in class javax.swing.
JList
Selects the specified object from the list.
setSelection(boolean)
- Method in class javax.swing.text.html.
Option
Sets the selected state.
setSelectionBackground(Color)
- Method in class javax.swing.
JList
Sets the color used to draw the background of selected items, which
 cell renderers can use fill selected cells.
setSelectionBackground(Color)
- Method in class javax.swing.
JTable
Sets the background color for selected cells.
setSelectionColor(Color)
- Method in class javax.swing.text.
JTextComponent
Sets the current color used to render the selection.
setSelectionEnd(int)
- Method in class java.awt.
TextComponent
Sets the selection end for this text component to
 the specified position.
setSelectionEnd(int)
- Method in class javax.swing.text.
JTextComponent
Sets the selection end to the specified position.
setSelectionForeground(Color)
- Method in class javax.swing.
JList
Sets the color used to draw the foreground of selected items, which
 cell renderers can use to render text and graphics.
setSelectionForeground(Color)
- Method in class javax.swing.
JTable
Sets the foreground color for selected cells.
setSelectionInterval(int, int)
- Method in class javax.swing.
DefaultListSelectionModel
Changes the selection to be between
index0
and
index1
inclusive.
setSelectionInterval(int, int)
- Method in class javax.swing.
JList
Selects the specified interval.
setSelectionInterval(int, int)
- Method in class javax.swing.
JTree
Selects the rows in the specified interval (inclusive).
setSelectionInterval(int, int)
- Method in interface javax.swing.
ListSelectionModel
Changes the selection to be between
index0
and
index1
inclusive.
setSelectionMode(int)
- Method in class javax.swing.
DefaultListSelectionModel
Sets the selection mode.
setSelectionMode(int)
- Method in class javax.swing.
JList
Sets the selection mode for the list.
setSelectionMode(int)
- Method in class javax.swing.
JTable
Sets the table's selection mode to allow only single selections, a single
 contiguous interval, or multiple intervals.
setSelectionMode(int)
- Method in class javax.swing.
JTree.EmptySelectionModel
This is overridden to do nothing;
EmptySelectionModel
does not allow a selection.
setSelectionMode(int)
- Method in interface javax.swing.
ListSelectionModel
Sets the selection mode.
setSelectionMode(int)
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Sets the selection model, which must be one of SINGLE_TREE_SELECTION,
 CONTIGUOUS_TREE_SELECTION or DISCONTIGUOUS_TREE_SELECTION.
setSelectionMode(int)
- Method in interface javax.swing.tree.
TreeSelectionModel
Sets the selection model, which must be one of SINGLE_TREE_SELECTION,
 CONTIGUOUS_TREE_SELECTION or DISCONTIGUOUS_TREE_SELECTION.
setSelectionModel(ColorSelectionModel)
- Method in class javax.swing.
JColorChooser
Sets the model containing the selected color.
setSelectionModel(ListSelectionModel)
- Method in class javax.swing.
JList
Sets the
selectionModel
for the list to a
 non-
null
ListSelectionModel
implementation.
setSelectionModel(ListSelectionModel)
- Method in class javax.swing.
JTable
Sets the row selection model for this table to
selectionModel
and registers for listener notifications from the new selection model.
setSelectionModel(ListSelectionModel)
- Method in class javax.swing.table.
DefaultTableColumnModel
Sets the selection model for this
TableColumnModel
to
newModel
and registers for listener notifications from the new selection
  model.
setSelectionModel(ListSelectionModel)
- Method in interface javax.swing.table.
TableColumnModel
Sets the selection model.
setSelectionModel(SingleSelectionModel)
- Method in class javax.swing.
JMenuBar
Sets the model object to handle single selections.
setSelectionModel(SingleSelectionModel)
- Method in class javax.swing.
JPopupMenu
Sets the model object to handle single selections.
setSelectionModel(TreeSelectionModel)
- Method in class javax.swing.
JTree
Sets the tree's selection model.
setSelectionModel(TreeSelectionModel)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Resets the selection model.
setSelectionModel(TreeSelectionModel)
- Method in class javax.swing.tree.
AbstractLayoutCache
Sets the
TreeSelectionModel
used to manage the
 selection to new LSM.
setSelectionPath(TreePath)
- Method in class javax.swing.
JTree
Selects the node identified by the specified path.
setSelectionPath(TreePath)
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Sets the selection to path.
setSelectionPath(TreePath)
- Method in interface javax.swing.tree.
TreeSelectionModel
Sets the selection to path.
setSelectionPaths(TreePath[])
- Method in class javax.swing.
JTree.EmptySelectionModel
This is overridden to do nothing;
EmptySelectionModel
does not allow a selection.
setSelectionPaths(TreePath[])
- Method in class javax.swing.
JTree
Selects the nodes identified by the specified array of paths.
setSelectionPaths(TreePath[])
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Sets the selection.
setSelectionPaths(TreePath[])
- Method in interface javax.swing.tree.
TreeSelectionModel
Sets the selection to path.
setSelectionRow(int)
- Method in class javax.swing.
JTree
Selects the node at the specified row in the display.
setSelectionRows(int[])
- Method in class javax.swing.
JTree
Selects the nodes corresponding to each of the specified rows
 in the display.
setSelectionStart(int)
- Method in class java.awt.
TextComponent
Sets the selection start for this text component to
 the specified position.
setSelectionStart(int)
- Method in class javax.swing.text.
JTextComponent
Sets the selection start to the specified position.
setSelectionValues(Object[])
- Method in class javax.swing.
JOptionPane
Sets the input selection values for a pane that provides the user
 with a list of items to choose from.
setSelectionVisible(boolean)
- Method in interface javax.swing.text.
Caret
Sets the visibility of the selection
setSelectionVisible(boolean)
- Method in class javax.swing.text.
DefaultCaret
Changes the selection visibility.
setSelectorText(String)
- Method in interface org.w3c.dom.css.
CSSPageRule
The parsable textual representation of the page selector for the rule.
setSelectorText(String)
- Method in interface org.w3c.dom.css.
CSSStyleRule
The textual representation of the selector for the rule set.
setSendBufferSize(int)
- Method in class java.net.
DatagramSocket
Sets the SO_SNDBUF option to the specified value for this
DatagramSocket
.
setSendBufferSize(int)
- Method in class java.net.
Socket
Sets the
SO_SNDBUF
option to the
 specified value for this
Socket
.
setSendPastNotifications(boolean)
- Method in class javax.management.timer.
Timer
Sets the flag indicating whether the timer sends past notifications or not.
setSendPastNotifications(boolean)
- Method in interface javax.management.timer.
TimerMBean
Sets the flag indicating whether the timer sends past notifications or not.
setSeparatorSize(Dimension)
- Method in class javax.swing.
JToolBar.Separator
Sets the size of the separator.
setSequence(InputStream)
- Method in interface javax.sound.midi.
Sequencer
Sets the current sequence on which the sequencer operates.
setSequence(Sequence)
- Method in interface javax.sound.midi.
Sequencer
Sets the current sequence on which the sequencer operates.
setSequenceNumber(long)
- Method in class java.util.logging.
LogRecord
Set the sequence number.
setSequenceNumber(long)
- Method in class javax.management.
Notification
Set the notification sequence number.
setSerialFilter(ObjectInputFilter)
- Static method in class java.io.
ObjectInputFilter.Config
Set the static JVM-wide filter if it has not already been configured or set.
setSerialFilterFactory(BinaryOperator<ObjectInputFilter>)
- Static method in class java.io.
ObjectInputFilter.Config
Set the
JVM-wide deserialization filter factory
.
setSerialNumber(BigInteger)
- Method in class java.security.cert.
X509CertSelector
Sets the serialNumber criterion.
setServerNames(List<SNIServerName>)
- Method in class javax.net.ssl.
SSLParameters
Sets the desired
SNIServerName
s of the Server Name
 Indication (SNI) parameter.
setSessionCacheSize(int)
- Method in interface javax.net.ssl.
SSLSessionContext
Sets the size of the cache used for storing
SSLSession
objects grouped under this
SSLSessionContext
.
setSessionTimeout(int)
- Method in interface javax.net.ssl.
SSLSessionContext
Sets the timeout limit for
SSLSession
objects grouped
 under this
SSLSessionContext
.
setSettings(Map<String, String>)
- Method in class jdk.jfr.consumer.
RecordingStream
Replaces all settings for this recording stream.
setSettings(Map<String, String>)
- Method in class jdk.jfr.
Recording
Replaces all settings for this recording.
setSettings(Map<String, String>)
- Method in class jdk.management.jfr.
RemoteRecordingStream
Replaces all settings for this recording stream.
setShape(Shape)
- Method in class java.awt.
Window
Sets the shape of the window.
setShape(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setShape(String)
- Method in interface org.w3c.dom.html.
HTMLAreaElement
setShardingKey(ShardingKey)
- Method in interface java.sql.
Connection
Specifies a shardingKey to use with this Connection
setShardingKey(ShardingKey, ShardingKey)
- Method in interface java.sql.
Connection
Specifies a shardingKey and superShardingKey to use with this Connection
setShardingKeyIfValid(ShardingKey, int)
- Method in interface java.sql.
Connection
Sets and validates the sharding key for this connection.
setShardingKeyIfValid(ShardingKey, ShardingKey, int)
- Method in interface java.sql.
Connection
Sets and validates the sharding keys for this connection.
setSharedInstance(PopupFactory)
- Static method in class javax.swing.
PopupFactory
Sets the
PopupFactory
that will be used to obtain
Popup
s.
setShort(int, short)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java
short
value.
setShort(int, short)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
short
in the
 Java programming language.
setShort(int, short)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java
short
value.
setShort(Object, int, short)
- Static method in class java.lang.reflect.
Array
Sets the value of the indexed component of the specified array
 object to the specified
short
value.
setShort(Object, short)
- Method in class java.lang.reflect.
Field
Sets the value of a field as a
short
on the specified object.
setShort(String, short)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java
short
value.
setShort(String, short)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java
short
value.
setShort(String, short)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java
short
value.
setShortcut(MenuShortcut)
- Method in class java.awt.
MenuItem
Set the
MenuShortcut
object associated with this
 menu item.
setShortDescription(String)
- Method in class java.beans.
FeatureDescriptor
You can associate a short descriptive string with a feature.
setShortMonths(String[])
- Method in class java.text.
DateFormatSymbols
Sets short month strings.
setShortWeekdays(String[])
- Method in class java.text.
DateFormatSymbols
Sets short weekday strings.
setShowDeleted(boolean)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the property
showDeleted
to the given
boolean
value, which determines whether
 rows marked for deletion appear in the set of current rows.
setShowDeleted(boolean)
- Method in interface javax.sql.rowset.
CachedRowSet
Sets the property
showDeleted
to the given
boolean
value, which determines whether
 rows marked for deletion appear in the set of current rows.
setShowDeleted(boolean)
- Method in interface javax.sql.rowset.
JdbcRowSet
Sets the property
showDeleted
to the given
boolean
value.
setShowDropLocation(boolean)
- Method in class javax.swing.
TransferHandler.TransferSupport
Sets whether or not the drop location should be visually indicated
 for the transfer - which must represent a drop.
setShowGrid(boolean)
- Method in class javax.swing.
JTable
Sets whether the table draws grid lines around cells.
setShowHorizontalLines(boolean)
- Method in class javax.swing.
JTable
Sets whether the table draws horizontal lines between cells.
setShowsRootHandles(boolean)
- Method in class javax.swing.
JTree
Sets the value of the
showsRootHandles
property,
 which specifies whether the node handles should be displayed.
setShowsRootHandles(boolean)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Determines whether the node handles are to be displayed.
setShowVerticalLines(boolean)
- Method in class javax.swing.
JTable
Sets whether the table draws vertical lines between cells.
setSides(JobAttributes.SidesType)
- Method in class java.awt.
JobAttributes
Specifies how consecutive pages should be imposed upon the sides of the
 print medium for jobs using these attributes.
setSidesToDefault()
- Method in class java.awt.
JobAttributes
Sets how consecutive pages should be imposed upon the sides of the
 print medium for jobs using these attributes to the default.
setSignatureSchemes(String[])
- Method in class javax.net.ssl.
SSLParameters
Sets the prioritized array of signature scheme names that
 can be used over the SSL/TLS/DTLS protocols.
setSigned(int, boolean)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets whether a value stored in the designated column is a signed
 number to the given
boolean
.
setSigned(int, boolean)
- Method in interface javax.sql.
RowSetMetaData
Sets whether the designated column is a signed number.
setSigners(Class<?>, Object[])
- Method in class java.lang.
ClassLoader
Sets the signers of a class.
setSigProvider(String)
- Method in class java.security.cert.
PKIXParameters
Sets the signature provider's name.
setSize(double, double)
- Method in class java.awt.
Dimension
Sets the size of this
Dimension
object to
 the specified width and height in double precision.
setSize(double, double)
- Method in class java.awt.geom.
Dimension2D
Sets the size of this
Dimension
object to the
 specified width and height.
setSize(double, double)
- Method in class java.awt.print.
Paper
Sets the width and height of this
Paper
object, which represents the properties of the page onto
 which printing occurs.
setSize(float, float)
- Method in class javax.swing.text.
AsyncBoxView
Sets the size of the view.
setSize(float, float)
- Method in class javax.swing.text.
BoxView
Sets the size of the view.
setSize(float, float)
- Method in class javax.swing.text.html.
ImageView
Sets the size of the view.
setSize(float, float)
- Method in class javax.swing.text.
PlainView
Sets the size of the view.
setSize(float, float)
- Method in class javax.swing.text.
View
Sets the size of the view.
setSize(float, float)
- Method in class javax.swing.text.
WrappedPlainView
Sets the size of the view.
setSize(int)
- Method in class java.util.
Vector
Sets the size of this vector.
setSize(int)
- Method in class javax.swing.
DefaultListModel
Sets the size of this list.
setSize(int)
- Method in interface org.w3c.dom.html.
HTMLSelectElement
setSize(int, int)
- Method in class java.awt.
Component
Resizes this component so that it has width
width
and height
height
.
setSize(int, int)
- Method in class java.awt.
Dimension
Sets the size of this
Dimension
object
 to the specified width and height.
setSize(int, int)
- Method in class java.awt.
Rectangle
Sets the size of this
Rectangle
to the specified
 width and height.
setSize(int, int)
- Method in class java.awt.
Window
Resizes this component so that it has width
width
and height
height
.
setSize(int, int)
- Method in class javax.swing.
SizeSequence
Sets the size of the specified entry.
setSize(long)
- Method in class java.util.zip.
ZipEntry
Sets the uncompressed size of the entry data.
setSize(Dimension)
- Method in class com.sun.java.accessibility.util.
Translator
Sets the current size of this object.
setSize(Dimension)
- Method in class java.awt.
Component.AccessibleAWTComponent
Resizes this object so that it has width and height.
setSize(Dimension)
- Method in class java.awt.
Component
Resizes this component so that it has width
d.width
and height
d.height
.
setSize(Dimension)
- Method in class java.awt.
Dimension
Sets the size of this
Dimension
object to the specified size.
setSize(Dimension)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Resizes this object so that it has width and height.
setSize(Dimension)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Resizes this object.
setSize(Dimension)
- Method in class java.awt.
Rectangle
Sets the size of this
Rectangle
to match the
 specified
Dimension
.
setSize(Dimension)
- Method in class java.awt.
Window
Resizes this component so that it has width
d.width
and height
d.height
.
setSize(Dimension)
- Method in interface javax.accessibility.
AccessibleComponent
Resizes this object so that it has width and height.
setSize(Dimension)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setSize(Dimension)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
setSize(Dimension)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
setSize(Dimension)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setSize(Dimension2D)
- Method in class java.awt.geom.
Dimension2D
Sets the size of this
Dimension2D
object to
 match the specified size.
setSize(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the size property definition in CSS2.
setSize(String)
- Method in interface org.w3c.dom.html.
HTMLBaseFontElement
setSize(String)
- Method in interface org.w3c.dom.html.
HTMLFontElement
setSize(String)
- Method in interface org.w3c.dom.html.
HTMLHRElement
setSize(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setSizes(int[])
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Sets the sizes to
newSizes
.
setSizes(int[])
- Method in class javax.swing.
SizeSequence
Resets this
SizeSequence
object,
 using the data in the
sizes
argument.
setSlaveSyncMode(Sequencer.SyncMode)
- Method in interface javax.sound.midi.
Sequencer
Sets the slave synchronization mode for the sequencer.
setSlot(int, Object)
- Method in class netscape.javascript.
JSObject
Sets an indexed member of a JavaScript object.
setSnapToTicks(boolean)
- Method in class javax.swing.
JSlider
Specifying true makes the knob (and the data value it represents)
 resolve to the closest tick mark next to where the user
 positioned the knob.
setSNIMatchers(Collection<SNIMatcher>)
- Method in class javax.net.ssl.
SSLParameters
Sets the
SNIMatcher
s of the Server Name Indication (SNI)
 parameter.
setSocketAddress(SocketAddress)
- Method in class java.net.
DatagramPacket
Sets the SocketAddress (usually IP address + port number) of the remote
 host to which this datagram is being sent.
setSocketFactory(SocketImplFactory)
- Static method in class java.net.
ServerSocket
Deprecated.
Use a
ServerSocketFactory
and subclass
ServerSocket
directly.
This method provided a way in early JDK releases to replace the
    system wide implementation of
ServerSocket
. It has been mostly
    obsolete since Java 1.4. If required, a
ServerSocket
can be
    created to use a custom implementation by extending
ServerSocket
and using the
protected
    constructor
that takes an
implementation
as a parameter.
setSocketFactory(RMISocketFactory)
- Static method in class java.rmi.server.
RMISocketFactory
Set the global socket factory from which RMI gets sockets (if the
 remote object is not associated with a specific client and/or server
 socket factory).
setSocketImplFactory(SocketImplFactory)
- Static method in class java.net.
Socket
Deprecated.
Use a
SocketFactory
and subclass
Socket
directly.
This method provided a way in early JDK releases to replace the
    system wide implementation of
Socket
. It has been mostly
    obsolete since Java 1.4. If required, a
Socket
can be
    created to use a custom implementation by extending
Socket
and using the
protected
    constructor
that takes an
implementation
as a parameter.
setSoLinger(boolean, int)
- Method in class java.net.
Socket
Enable/disable
SO_LINGER
with the
 specified linger time in seconds.
setSolo(boolean)
- Method in interface javax.sound.midi.
MidiChannel
Sets the solo state for this channel.
setSortable(int, boolean)
- Method in class javax.swing.
DefaultRowSorter
Sets whether or not the specified column is sortable.
setSortKeys(List<? extends RowSorter.SortKey>)
- Method in class javax.swing.
DefaultRowSorter
Sets the sort keys.
setSortKeys(List<? extends RowSorter.SortKey>)
- Method in class javax.swing.
RowSorter
Sets the current sort keys.
setSortsOnUpdates(boolean)
- Method in class javax.swing.
DefaultRowSorter
If true, specifies that a sort should happen when the underlying
 model is updated (
rowsUpdated
is invoked).
setSoTimeout(int)
- Method in class java.net.
DatagramSocket
Enable/disable SO_TIMEOUT with the specified timeout, in
 milliseconds.
setSoTimeout(int)
- Method in class java.net.
ServerSocket
Enable/disable
SO_TIMEOUT
with the
 specified timeout, in milliseconds.
setSoTimeout(int)
- Method in class java.net.
Socket
Enable/disable
SO_TIMEOUT
with the specified timeout, in milliseconds.
setSource(Object)
- Method in class com.sun.java.accessibility.util.
Translator
Set the source object of the
Translator
.
setSource(Object)
- Method in class java.awt.
AWTEvent
Retargets an event to a new source.
setSource(Object)
- Method in class java.beans.
PropertyEditorSupport
Sets the source bean.
setSource(Object)
- Method in class javax.management.
Notification
Sets the source.
setSource(Object, int)
- Method in class java.awt.image.renderable.
ParameterBlock
Replaces an entry in the list of source with a new source.
setSourceActions(int)
- Method in class java.awt.dnd.
DragGestureRecognizer
This method sets the permitted source drag action(s)
 for this Drag and Drop operation.
setSourceBands(int[])
- Method in class javax.imageio.
IIOParam
Sets the indices of the source bands to be used.
setSourceClassName(String)
- Method in class java.util.logging.
LogRecord
Set the name of the class that (allegedly) issued the logging request.
setSourceMethodName(String)
- Method in class java.util.logging.
LogRecord
Set the name of the method that (allegedly) issued the logging request.
setSourceProgressivePasses(int, int)
- Method in class javax.imageio.
ImageReadParam
Sets the range of progressive passes that will be decoded.
setSourceRegion(Rectangle)
- Method in class javax.imageio.
IIOParam
Sets the source region of interest.
setSourceRenderSize(Dimension)
- Method in class javax.imageio.
ImageReadParam
If the image is able to be rendered at an arbitrary size, sets
 the source width and height to the supplied values.
setSources(Vector<Object>)
- Method in class java.awt.image.renderable.
ParameterBlock
Sets the entire Vector of sources to a given Vector.
setSourceSubsampling(int, int, int, int)
- Method in class javax.imageio.
IIOParam
Specifies a decimation subsampling to apply on I/O.
setSouthPane(JComponent)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Sets the south pane.
setSpaceAbove(MutableAttributeSet, float)
- Static method in class javax.swing.text.
StyleConstants
Sets space above.
setSpaceBelow(MutableAttributeSet, float)
- Static method in class javax.swing.text.
StyleConstants
Sets space below.
setSpan(int)
- Method in interface org.w3c.dom.html.
HTMLTableColElement
setSpeak(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speak property definition in CSS2.
setSpeakHeader(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speak-header property definition in CSS2.
setSpeakNumeral(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speak-numeral property definition in CSS2.
setSpeakPunctuation(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speak-punctuation property definition in CSS2.
setSpecified(int, boolean)
- Method in class org.xml.sax.ext.
Attributes2Impl
Assign a value to the "specified" flag of a specific attribute.
setSpeechRate(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speech-rate property definition in CSS2.
setSQLXML(int, SQLXML)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.SQLXML
object.
setSQLXML(int, SQLXML)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.SQLXML
object.
setSQLXML(int, SQLXML)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.SQLXML
object.
setSQLXML(String, SQLXML)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.SQLXML
object.
setSQLXML(String, SQLXML)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.SQLXML
object.
setSQLXML(String, SQLXML)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.SQLXML
object.
setSrc(String)
- Method in interface org.w3c.dom.html.
HTMLFrameElement
setSrc(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setSrc(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setSrc(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setSrc(String)
- Method in interface org.w3c.dom.html.
HTMLScriptElement
setSSLParameters(SSLParameters)
- Method in class com.sun.net.httpserver.
HttpsParameters
Sets the
SSLParameters
to use for this
HttpsParameters
.
setSSLParameters(SSLParameters)
- Method in class javax.net.ssl.
SSLEngine
Applies SSLParameters to this engine.
setSSLParameters(SSLParameters)
- Method in class javax.net.ssl.
SSLServerSocket
Applies SSLParameters to newly accepted connections.
setSSLParameters(SSLParameters)
- Method in class javax.net.ssl.
SSLSocket
Applies SSLParameters to this socket.
setSSLSocketFactory(SSLSocketFactory)
- Method in class javax.net.ssl.
HttpsURLConnection
Sets the
SSLSocketFactory
to be used when this instance
 creates sockets for secure https URL connections.
setStackTrace(StackTraceElement[])
- Method in exception class java.lang.
Throwable
Sets the stack trace elements that will be returned by
Throwable.getStackTrace()
and printed by
Throwable.printStackTrace()
and related methods.
setStandby(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setStart(int)
- Method in interface org.w3c.dom.html.
HTMLOListElement
setStart(Comparable<Date>)
- Method in class javax.swing.
SpinnerDateModel
Changes the lower limit for Dates in this sequence.
setStart(Node, int)
- Method in interface org.w3c.dom.ranges.
Range
Sets the attributes describing the start of the Range.
setStartAfter(Node)
- Method in interface org.w3c.dom.ranges.
Range
Sets the start position to be after a node
setStartBefore(Node)
- Method in interface org.w3c.dom.ranges.
Range
Sets the start position to be before a node
setStartRule(int, int, int)
- Method in class java.util.
SimpleTimeZone
Sets the daylight saving time start rule to a fixed date within a month.
setStartRule(int, int, int, int)
- Method in class java.util.
SimpleTimeZone
Sets the daylight saving time start rule.
setStartRule(int, int, int, int, boolean)
- Method in class java.util.
SimpleTimeZone
Sets the daylight saving time start rule to a weekday before or after the given date within
 a month, e.g., the first Monday on or after the 8th.
setStartTime(Instant)
- Method in interface jdk.jfr.consumer.
EventStream
Specifies the start time of the stream.
setStartTime(Instant)
- Method in class jdk.jfr.consumer.
RecordingStream
setStartTime(Instant)
- Method in class jdk.management.jfr.
RemoteRecordingStream
setStartYear(int)
- Method in class java.util.
SimpleTimeZone
Sets the daylight saving time starting year.
setState(boolean)
- Method in class java.awt.
Checkbox
Sets the state of this check box to the specified state.
setState(boolean)
- Method in class java.awt.
CheckboxMenuItem
Sets this check box menu item to the specified state.
setState(boolean)
- Method in class javax.swing.
JCheckBoxMenuItem
Sets the selected-state of the item.
setState(int)
- Method in class java.awt.
Frame
Sets the state of this frame (obsolete).
setState(int)
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Sets the value of synchronization state.
setState(long)
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Sets the value of synchronization state.
setStepSize(Number)
- Method in class javax.swing.
SpinnerNumberModel
Changes the size of the value change computed by the
getNextValue
and
getPreviousValue
methods.
setStrategy(int)
- Method in class java.util.zip.
Deflater
Sets the compression strategy to the specified value.
setStream(String, InputStream)
- Method in interface java.applet.
AppletContext
Deprecated.
Associates the specified stream with the specified key in this applet
 context.
setStreams(InputStream, OutputStream)
- Method in class com.sun.net.httpserver.
HttpExchange
Used by
Filters
to wrap either
 (or both) of this exchange's
InputStream
and
OutputStream
, with the given filtered streams so that
 subsequent calls to
HttpExchange.getRequestBody()
will return the given
InputStream
, and calls to
HttpExchange.getResponseBody()
will return
 the given
OutputStream
.
setStrength(int)
- Method in class java.text.
Collator
Sets this Collator's strength property.
setStress(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the stress property definition in CSS2.
setStrictErrorChecking(boolean)
- Method in interface org.w3c.dom.
Document
An attribute specifying whether error checking is enforced or not.
setStrikeThrough(boolean)
- Method in class javax.swing.text.
LabelView
Sets whether or not the view has a strike/line
 through it.
setStrikeThrough(MutableAttributeSet, boolean)
- Static method in class javax.swing.text.
StyleConstants
Sets the strikethrough attribute.
setString(int, String)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given Java
String
value.
setString(int, String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
String
value.
setString(int, String)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given Java
String
value.
setString(long, String)
- Method in interface java.sql.
Clob
Writes the given Java
String
to the
CLOB
value that this
Clob
object designates at the position
pos
.
setString(long, String)
- Method in class javax.sql.rowset.serial.
SerialClob
Writes the given Java
String
to the
CLOB
value that this
SerialClob
object represents, at the position
pos
.
setString(long, String, int, int)
- Method in interface java.sql.
Clob
Writes
len
characters of
str
, starting
 at character
offset
, to the
CLOB
value
 that this
Clob
represents.
setString(long, String, int, int)
- Method in class javax.sql.rowset.serial.
SerialClob
Writes
len
characters of
str
, starting
 at character
offset
, to the
CLOB
value
 that this
Clob
represents.
setString(String)
- Method in interface java.sql.
SQLXML
Sets the XML value designated by this SQLXML instance to the given String representation.
setString(String)
- Method in class javax.swing.
JProgressBar
Sets the value of the progress string.
setString(String, String)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given Java
String
value.
setString(String, String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given Java
String
value.
setString(String, String)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given Java
String
value.
setStringConverter(TableStringConverter)
- Method in class javax.swing.table.
TableRowSorter
Sets the object responsible for converting values from the
 model to strings.
setStringData(String)
- Method in interface org.w3c.dom.ls.
LSInput
String data to parse.
setStringPainted(boolean)
- Method in class javax.swing.
JProgressBar
Sets the value of the
stringPainted
property,
 which determines whether the progress bar
 should render a progress string.
setStringToCompare(String)
- Method in class javax.management.monitor.
StringMonitor
Sets the string to compare with the observed attribute common
 to all observed MBeans.
setStringToCompare(String)
- Method in interface javax.management.monitor.
StringMonitorMBean
Sets the string to compare with the observed attribute.
setStringValue(short, String)
- Method in interface org.w3c.dom.css.
CSSPrimitiveValue
A method to set the string value with the specified unit.
setStroke(Stroke)
- Method in class java.awt.
Graphics2D
Sets the
Stroke
for the
Graphics2D
context.
setStub(AppletStub)
- Method in class java.applet.
Applet
Deprecated.
Sets this applet's stub.
setStyledDocument(StyledDocument)
- Method in class javax.swing.
JTextPane
Associates the editor with a text document.
setStyleFactory(SynthStyleFactory)
- Static method in class javax.swing.plaf.synth.
SynthLookAndFeel
Sets the SynthStyleFactory that the UI classes provided by
 synth will use to obtain a SynthStyle.
setStyleSheet(StyleSheet)
- Method in class javax.swing.text.html.
HTMLEditorKit
Set the set of styles to be used to render the various
 HTML elements.
setSubject(byte[])
- Method in class java.security.cert.
X509CertSelector
Sets the subject criterion.
setSubject(String)
- Method in class java.security.cert.
X509CertSelector
Deprecated.
Use
X509CertSelector.setSubject(X500Principal)
or
X509CertSelector.setSubject(byte[])
instead. This method should not be relied
 on as it can fail to match some certificates because of a loss of
 encoding information in the RFC 2253 String form of some distinguished
 names.
setSubject(X500Principal)
- Method in class java.security.cert.
X509CertSelector
Sets the subject criterion.
setSubjectAlternativeNames(Collection<List<?>>)
- Method in class java.security.cert.
X509CertSelector
Sets the subjectAlternativeNames criterion.
setSubjectKeyIdentifier(byte[])
- Method in class java.security.cert.
X509CertSelector
Sets the subjectKeyIdentifier criterion.
setSubjectPublicKey(byte[])
- Method in class java.security.cert.
X509CertSelector
Sets the subjectPublicKey criterion.
setSubjectPublicKey(PublicKey)
- Method in class java.security.cert.
X509CertSelector
Sets the subjectPublicKey criterion.
setSubjectPublicKeyAlgID(String)
- Method in class java.security.cert.
X509CertSelector
Sets the subjectPublicKeyAlgID criterion.
setSubscript(boolean)
- Method in class javax.swing.text.
LabelView
Sets whether or not the view represents a
 subscript.
setSubscript(MutableAttributeSet, boolean)
- Static method in class javax.swing.text.
StyleConstants
Sets the subscript attribute.
setSummary(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setSuperscript(boolean)
- Method in class javax.swing.text.
LabelView
Sets whether or not the view represents a
 superscript.
setSuperscript(MutableAttributeSet, boolean)
- Static method in class javax.swing.text.
StyleConstants
Sets the superscript attribute.
setSupplementaryStates(boolean, boolean, boolean, boolean, int, String)
- Method in class org.ietf.jgss.
MessageProp
This method sets the state for the supplementary information flags
 and the minor status in MessageProp.
setSurrendersFocusOnKeystroke(boolean)
- Method in class javax.swing.
JTable
Sets whether editors in this JTable get the keyboard focus
 when an editor is activated as a result of the JTable
 forwarding keyboard events for a cell.
setSuspendPolicy(int)
- Method in interface com.sun.jdi.request.
EventRequest
Determines the threads to suspend when the requested event occurs
 in the target VM.
setSyncAllWidths(boolean)
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonAreaLayout
Sets if the width of children should be synchronized.
setSyncOnRelink(boolean)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets whether the dynamic linker created by this factory will invoke
MutableCallSite.syncAll(MutableCallSite[])
after a call site is
 relinked.
setSyncProvider(String)
- Method in interface javax.sql.rowset.
CachedRowSet
Sets the
SyncProvider
object for this
CachedRowSet
object to the one specified.
setSyncResolver(SyncResolver)
- Method in exception class javax.sql.rowset.spi.
SyncProviderException
Sets the
SyncResolver
object for this
SyncProviderException
object to the one supplied.
setSystem(boolean)
- Method in interface java.nio.file.attribute.
DosFileAttributeView
Updates the value of the system attribute.
setSystemId(File)
- Method in class javax.xml.transform.stream.
StreamResult
Set the system ID from a
File
reference.
setSystemId(File)
- Method in class javax.xml.transform.stream.
StreamSource
Set the system ID from a File reference.
setSystemId(String)
- Method in class javax.xml.transform.dom.
DOMResult
Set the systemId that may be used in association with the node.
setSystemId(String)
- Method in class javax.xml.transform.dom.
DOMSource
Set the base ID (URL or system ID) from where URLs
 will be resolved.
setSystemId(String)
- Method in interface javax.xml.transform.
Result
Set the system identifier for this Result.
setSystemId(String)
- Method in class javax.xml.transform.sax.
SAXResult
Method setSystemId Set the systemID that may be used in association
 with the
ContentHandler
.
setSystemId(String)
- Method in class javax.xml.transform.sax.
SAXSource
Set the system identifier for this Source.
setSystemId(String)
- Method in interface javax.xml.transform.sax.
TemplatesHandler
Set the base ID (URI or system ID) for the Templates object
 created by this builder.
setSystemId(String)
- Method in interface javax.xml.transform.sax.
TransformerHandler
Set the base ID (URI or system ID) from where relative
 URLs will be resolved.
setSystemId(String)
- Method in interface javax.xml.transform.
Source
Set the system identifier for this Source.
setSystemId(String)
- Method in class javax.xml.transform.stax.
StAXResult
In the context of a
StAXResult
, it is not appropriate
 to explicitly set the system identifier.
setSystemId(String)
- Method in class javax.xml.transform.stax.
StAXSource
In the context of a
StAXSource
, it is not appropriate
 to explicitly set the system identifier.
setSystemId(String)
- Method in class javax.xml.transform.stream.
StreamResult
Set the systemID that may be used in association
 with the byte or character stream, or, if neither is set, use
 this value as a writeable URI (probably a file name).
setSystemId(String)
- Method in class javax.xml.transform.stream.
StreamSource
Set the system identifier for this Source.
setSystemId(String)
- Method in interface org.w3c.dom.ls.
LSInput
The system identifier, a URI reference [
IETF RFC 2396
], for this
 input source.
setSystemId(String)
- Method in interface org.w3c.dom.ls.
LSOutput
The system identifier, a URI reference [
IETF RFC 2396
], for this
 output destination.
setSystemId(String)
- Method in class org.xml.sax.helpers.
LocatorImpl
Set the system identifier for this locator.
setSystemId(String)
- Method in class org.xml.sax.
InputSource
Set the system identifier for this input source.
setSystemScope(IdentityScope)
- Static method in class java.security.
IdentityScope
Deprecated.
Sets the system's identity scope.
setTabComponentAt(int, Component)
- Method in class javax.swing.
JTabbedPane
Sets the component that is responsible for rendering the
 title for the specified tab.
setTabIndex(int)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setTabIndex(int)
- Method in interface org.w3c.dom.html.
HTMLAreaElement
setTabIndex(int)
- Method in interface org.w3c.dom.html.
HTMLButtonElement
setTabIndex(int)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setTabIndex(int)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setTabIndex(int)
- Method in interface org.w3c.dom.html.
HTMLSelectElement
setTabIndex(int)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setTabLayoutPolicy(int)
- Method in class javax.swing.
JTabbedPane
Sets the policy which the tabbedpane will use in laying out the tabs
 when all the tabs will not fit within a single run.
setTable(JTable)
- Method in class javax.swing.table.
JTableHeader
Sets the table associated with this header.
setTableHeader(JTableHeader)
- Method in class javax.swing.
JTable
Sets the
tableHeader
working with this
JTable
to
newHeader
.
setTableLayout(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the table-layout property definition in CSS2.
setTableName(int, String)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Sets the name of the table from which the designated column
 was derived to the given table name.
setTableName(int, String)
- Method in interface javax.sql.
RowSetMetaData
Sets the designated column's table name, if any, to the given
String
.
setTableName(String)
- Method in interface javax.sql.rowset.
CachedRowSet
Sets the identifier for the table from which this
CachedRowSet
object was derived to the given table name.
setTabPlacement(int)
- Method in class javax.swing.
JTabbedPane
Sets the tab placement for this tabbedpane.
setTabSet(MutableAttributeSet, TabSet)
- Static method in class javax.swing.text.
StyleConstants
Sets the TabSet.
setTabSize(int)
- Method in class javax.swing.
JTextArea
Sets the number of characters to expand tabs to.
setTarget(MethodHandle)
- Method in class java.lang.invoke.
CallSite
Updates the target method of this call site, according to the
 behavior defined by this call site's specific class.
setTarget(MethodHandle)
- Method in class java.lang.invoke.
ConstantCallSite
Always throws an
UnsupportedOperationException
.
setTarget(MethodHandle)
- Method in class java.lang.invoke.
MutableCallSite
Updates the target method of this call site, as a normal variable.
setTarget(MethodHandle)
- Method in class java.lang.invoke.
VolatileCallSite
Updates the target method of this call site, as a volatile variable.
setTarget(Object)
- Method in class javax.accessibility.
AccessibleRelation
Sets the target object for this relation.
setTarget(Object[])
- Method in class javax.accessibility.
AccessibleRelation
Sets the target objects for this relation.
setTarget(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setTarget(String)
- Method in interface org.w3c.dom.html.
HTMLAreaElement
setTarget(String)
- Method in interface org.w3c.dom.html.
HTMLBaseElement
setTarget(String)
- Method in interface org.w3c.dom.html.
HTMLFormElement
setTarget(String)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setTargetActions(int)
- Method in class java.awt.dnd.
DropTargetContext
This method sets the current actions acceptable to
 this
DropTarget
.
setTargetCertConstraints(CertSelector)
- Method in class java.security.cert.
PKIXParameters
Sets the required constraints on the target certificate.
setTaskListener(TaskListener)
- Method in class com.sun.source.util.
JavacTask
Sets a specified listener to receive notification of events
 describing the progress of this compilation task.
setTcpNoDelay(boolean)
- Method in class java.net.
Socket
Enable/disable
TCP_NODELAY
(disable/enable Nagle's algorithm).
setTempoFactor(float)
- Method in interface javax.sound.midi.
Sequencer
Scales the sequencer's actual playback tempo by the factor provided.
setTempoInBPM(float)
- Method in interface javax.sound.midi.
Sequencer
Sets the tempo in beats per minute.
setTempoInMPQ(float)
- Method in interface javax.sound.midi.
Sequencer
Sets the tempo in microseconds per quarter note.
SETTER
- Enum constant in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
A method handle for a write accessor for an instance field
setText(String)
- Method in class java.awt.
Label
Sets the text for this label to the specified text.
setText(String)
- Method in class java.awt.
TextComponent
Sets the text that is presented by this
 text component to be the specified text.
setText(String)
- Method in class java.awt.
TextField
Sets the text that is presented by this
 text component to be the specified text.
setText(String)
- Method in class java.text.
BreakIterator
Set a new text string to be scanned.
setText(String)
- Method in class java.text.
CollationElementIterator
Set a new string over which to iterate.
setText(String)
- Method in class java.text.
StringCharacterIterator
Reset this iterator to point to a new string.
setText(String)
- Method in class javax.security.auth.callback.
TextInputCallback
Set the retrieved text.
setText(String)
- Method in class javax.swing.
AbstractButton
Sets the button's text.
setText(String)
- Method in class javax.swing.
JEditorPane
Sets the text of this
TextComponent
to the specified
 content,
 which is expected to be in the format of the content type of
 this editor.
setText(String)
- Method in class javax.swing.
JLabel
Defines the single line of text this component will display.
setText(String)
- Method in class javax.swing.
JPasswordField
setText(String)
- Method in class javax.swing.text.
JTextComponent
Sets the text of this
TextComponent
to the specified text.
setText(String)
- Method in interface org.w3c.dom.html.
HTMLBodyElement
setText(String)
- Method in interface org.w3c.dom.html.
HTMLScriptElement
setText(String)
- Method in interface org.w3c.dom.html.
HTMLTitleElement
setText(CharacterIterator)
- Method in class java.text.
BreakIterator
Set a new text for scanning.
setText(CharacterIterator)
- Method in class java.text.
CollationElementIterator
Set a new string over which to iterate.
setTextAlign(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-align property definition in CSS2.
setTextContent(String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
setTextContent(String)
- Method in interface org.w3c.dom.
Node
This attribute returns the text content of this node and its
 descendants.
setTextContents(String)
- Method in interface javax.accessibility.
AccessibleEditableText
Sets the text contents to the specified string.
setTextContents(String)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Sets the text contents to the specified string.
setTextContents(String)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Sets the text contents to the specified string.
setTextDecoration(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-decoration property definition in CSS2.
setTextIndent(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-indent property definition in CSS2.
setTextNonSelectionColor(Color)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Sets the color the text is drawn with when the node isn't selected.
setTextSelectionColor(Color)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Sets the color the text is drawn with when the node is selected.
setTextShadow(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-shadow property definition in CSS2.
setTextShiftOffset()
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Sets the offset of the text.
setTextTransform(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-transform property definition in CSS2.
setTFoot(HTMLTableSectionElement)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setTHead(HTMLTableSectionElement)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setThreadAllocatedMemoryEnabled(boolean)
- Method in interface com.sun.management.
ThreadMXBean
Enables or disables thread memory allocation measurement.
setThreadContentionMonitoringEnabled(boolean)
- Method in interface java.lang.management.
ThreadMXBean
Enables or disables thread contention monitoring.
setThreadCpuTimeEnabled(boolean)
- Method in interface java.lang.management.
ThreadMXBean
Enables or disables thread CPU time measurement.
setThreadFactory(ThreadFactory)
- Method in class java.util.concurrent.
ThreadPoolExecutor
Sets the thread factory used to create new threads.
setThreadID(int)
- Method in class java.util.logging.
LogRecord
Deprecated.
This method doesn't allow to pass a long
thread id
,
              use
LogRecord.setLongThreadID(long)
instead.
setThreshold(Number)
- Method in class javax.management.monitor.
CounterMonitor
Deprecated.
As of JMX 1.2, replaced by
CounterMonitor.setInitThreshold(java.lang.Number)
setThreshold(Number)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Deprecated.
As of JMX 1.2, replaced by
CounterMonitorMBean.setInitThreshold(java.lang.Number)
setThresholds(Number, Number)
- Method in class javax.management.monitor.
GaugeMonitor
Sets the high and the low threshold values common to all
 observed MBeans.
setThresholds(Number, Number)
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Sets the high and the low threshold values.
setThrown(Throwable)
- Method in class java.util.logging.
LogRecord
Set a throwable associated with the log event.
setThumbBounds(int, int, int, int)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Set the bounds of the thumb and force a repaint that includes
 the old thumbBounds and the new one.
setThumbBounds(int, int, int, int)
- Method in class javax.swing.plaf.metal.
MetalScrollBarUI
This is overridden only to increase the invalid area.
setThumbLocation(int, int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Sets the thumb location.
setThumbnails(List<? extends BufferedImage>)
- Method in class javax.imageio.
IIOImage
Sets the list of thumbnails to a new
List
of
BufferedImage
s, or to
null
.
setThumbRollover(boolean)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Sets whether or not the mouse is currently over the thumb.
setTick(long)
- Method in class javax.sound.midi.
MidiEvent
Sets the time-stamp for the event, in MIDI ticks.
setTickPosition(long)
- Method in interface javax.sound.midi.
Sequencer
Sets the current sequencer position in MIDI ticks.
setTiling(int, int, int, int)
- Method in class javax.imageio.
ImageWriteParam
Specifies that the image should be tiled in the output stream.
setTilingMode(int)
- Method in class javax.imageio.
ImageWriteParam
Determines whether the image will be tiled in the output
 stream and, if it will, how the tiling parameters will be
 determined.
setTime(int, int, int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set time as one unit.
setTime(int, int, int, int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set time as one unit, including optional milliseconds.
setTime(int, int, int, BigDecimal)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set time as one unit, including the optional infinite precision
 fractional seconds.
setTime(int, Time)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Time
value.
setTime(int, Time)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Time
value.
setTime(int, Time)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
java.sql.Time
value.
setTime(int, Time, Calendar)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Time
value,
 using the given
Calendar
object.
setTime(int, Time, Calendar)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Time
object.
setTime(int, Time, Calendar)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with the given
java.sql.Time
value.
setTime(long)
- Method in class java.sql.
Date
Sets an existing
Date
object
 using the given milliseconds time value.
setTime(long)
- Method in class java.sql.
Time
Sets a
Time
object using a milliseconds time value.
setTime(long)
- Method in class java.sql.
Timestamp
Sets this
Timestamp
object to represent a point in time that is
time
milliseconds after January 1, 1970 00:00:00 GMT.
setTime(long)
- Method in class java.util.
Date
Sets this
Date
object to represent a point in time that is
time
milliseconds after January 1, 1970 00:00:00 GMT.
setTime(long)
- Method in class java.util.zip.
ZipEntry
Sets the last modification time of the entry.
setTime(String, Time)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.Time
value.
setTime(String, Time)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Time
value.
setTime(String, Time)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.Time
value.
setTime(String, Time, Calendar)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.Time
value,
 using the given
Calendar
object.
setTime(String, Time, Calendar)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Time
value,
 using the given
Calendar
object.
setTime(String, Time, Calendar)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.Time
value,
 using the given
Calendar
object.
setTime(Date)
- Method in class java.util.
Calendar
Sets this Calendar's time with the given
Date
.
setTimeInMillis(long)
- Method in class java.util.
Calendar
Sets this Calendar's current time from the given long value.
setTimeLimit(int)
- Method in class javax.naming.directory.
SearchControls
Sets the time limit of these SearchControls in milliseconds.
setTimeLocal(LocalDateTime)
- Method in class java.util.zip.
ZipEntry
Sets the last modification time of the entry in local date-time.
setTimeOfDay(int, int, int)
- Method in class java.util.
Calendar.Builder
Sets the time of day field parameters to the values given by
hourOfDay
,
minute
, and
second
.
setTimeOfDay(int, int, int, int)
- Method in class java.util.
Calendar.Builder
Sets the time of day field parameters to the values given by
hourOfDay
,
minute
,
second
, and
millis
.
setTimes(FileTime, FileTime, FileTime)
- Method in interface java.nio.file.attribute.
BasicFileAttributeView
Updates any or all of the file's last modified time, last access time,
 and create time attributes.
setTimestamp(int, Timestamp)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Timestamp
value.
setTimestamp(int, Timestamp)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Timestamp
value.
setTimestamp(int, Timestamp)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 to the given
java.sql.Timestamp
value.
setTimestamp(int, Timestamp, Calendar)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.sql.Timestamp
value,
 using the given
Calendar
object.
setTimestamp(int, Timestamp, Calendar)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Timestamp
object.
setTimestamp(int, Timestamp, Calendar)
- Method in interface javax.sql.
RowSet
Sets the designated parameter in this
RowSet
object's command
 with the given
java.sql.Timestamp
value.
setTimestamp(String, Timestamp)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.Timestamp
value.
setTimestamp(String, Timestamp)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Timestamp
value.
setTimestamp(String, Timestamp)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.Timestamp
value.
setTimestamp(String, Timestamp, Calendar)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.sql.Timestamp
value,
 using the given
Calendar
object.
setTimestamp(String, Timestamp, Calendar)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.sql.Timestamp
value,
 using the given
Calendar
object.
setTimestamp(String, Timestamp, Calendar)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.sql.Timestamp
value,
 using the given
Calendar
object.
setTimeStamp(long)
- Method in class javax.management.
Notification
Set the notification timestamp.
setTimeToLive(int)
- Method in class java.net.
DatagramSocketImpl
Set the TTL (time-to-live) option.
setTimeToLive(int)
- Method in class java.net.
MulticastSocket
Set the default time-to-live for multicast packets sent out
 on this
MulticastSocket
in order to control the
 scope of the multicasts.
setTimezone(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set the number of minutes in the timezone offset.
setTimeZone(TimeZone)
- Method in class java.text.
DateFormat
Sets the time zone for the calendar of this
DateFormat
object.
setTimeZone(TimeZone)
- Method in class java.util.
Calendar.Builder
Sets the time zone parameter to the given
zone
.
setTimeZone(TimeZone)
- Method in class java.util.
Calendar
Sets the time zone with the given time zone value.
Setting a Security Manager
- Search tag in class java.lang.SecurityManager
Section
SettingControl
- Class in
jdk.jfr
Base class to extend to create setting controls.
SettingControl()
- Constructor for class jdk.jfr.
SettingControl
Constructor for invocation by subclass constructors.
SettingDefinition
- Annotation Interface in
jdk.jfr
Annotation that specifies that a method in an event class should be used to
 filter out events.
SettingDescriptor
- Class in
jdk.jfr
Describes an event setting.
SettingDescriptorInfo
- Class in
jdk.management.jfr
Management class that describes a setting, for example name, description and
 default value.
Setting Initial Permissions
- Search tag in interface java.nio.file.attribute.PosixFileAttributeView
Section
Setting the ACL when creating a file
- Search tag in interface java.nio.file.attribute.AclFileAttributeView
Section
setTipText(String)
- Method in class javax.swing.
JToolTip
Sets the text to show when the tool tip is displayed.
setTitle(String)
- Method in class java.awt.
Dialog
Sets the title of the Dialog.
setTitle(String)
- Method in class java.awt.
FileDialog
Sets the title of the Dialog.
setTitle(String)
- Method in class java.awt.
Frame
Sets the title for this frame to the specified string.
setTitle(String)
- Method in class javax.swing.border.
TitledBorder
Sets the title of the titled border.
setTitle(String)
- Method in class javax.swing.
JInternalFrame
Sets the
JInternalFrame
title.
setTitle(String)
- Method in interface org.w3c.dom.html.
HTMLDocument
setTitle(String)
- Method in interface org.w3c.dom.html.
HTMLElement
setTitleAt(int, String)
- Method in class javax.swing.
JTabbedPane
Sets the title at
index
to
title
which
 can be
null
.
setTitleColor(Color)
- Method in class javax.swing.border.
TitledBorder
Sets the title-color of the titled border.
setTitleFont(Font)
- Method in class javax.swing.border.
TitledBorder
Sets the title-font of the titled border.
setTitleJustification(int)
- Method in class javax.swing.border.
TitledBorder
Sets the title-justification of the titled border.
setTitlePosition(int)
- Method in class javax.swing.border.
TitledBorder
Sets the title-position of the titled border.
setToDisk(boolean)
- Method in class jdk.jfr.
Recording
Determines whether this recording is continuously flushed to the disk
 repository or data is constrained to what is available in memory buffers.
setToggleClickCount(int)
- Method in class javax.swing.
JTree
Sets the number of mouse clicks before a node will expand or close.
setToIdentity()
- Method in class java.awt.geom.
AffineTransform
Resets this transform to the Identity transform.
setTokenThreshold(int)
- Method in class javax.swing.text.html.
HTMLDocument
Sets the number of tokens to buffer before trying to update
 the documents element structure.
setToolTip(String)
- Method in class java.awt.
TrayIcon
Sets the tooltip string for this
TrayIcon
.
setToolTipText(String)
- Method in class javax.swing.
JComponent
Registers the text to display in a tool tip.
setToolTipTextAt(int, String)
- Method in class javax.swing.
JTabbedPane
Sets the tooltip text at
index
to
toolTipText
which can be
null
.
setTop(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the top property definition in CSS2.
setToPage(int)
- Method in class java.awt.
JobAttributes
Specifies, for jobs using these attributes, the last page (inclusive)
 to be printed, if a range of pages is to be printed.
setTopComponent(Component)
- Method in class javax.swing.
JSplitPane
Sets the component above, or to the left of the divider.
setTopDown(boolean)
- Method in class javax.imageio.plugins.bmp.
BMPImageWriteParam
If set, the data will be written out in a top-down manner, the first
 scanline being written first.
setTopInset(float)
- Method in class javax.swing.text.
AsyncBoxView
Set the top part of the margin around the view.
setToQuadrantRotation(int)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a rotation transformation that rotates
 coordinates by the specified number of quadrants.
setToQuadrantRotation(int, double, double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a translated rotation transformation
 that rotates coordinates by the specified number of quadrants
 around the specified anchor point.
setToRotation(double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a rotation transformation.
setToRotation(double, double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a rotation transformation that rotates
 coordinates according to a rotation vector.
setToRotation(double, double, double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a translated rotation transformation.
setToRotation(double, double, double, double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a rotation transformation that rotates
 coordinates around an anchor point according to a rotation
 vector.
setToScale(double, double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a scaling transformation.
setToShear(double, double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a shearing transformation.
setToTranslation(double, double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a translation transformation.
setTrackMute(int, boolean)
- Method in interface javax.sound.midi.
Sequencer
Sets the mute state for a track.
setTrackSolo(int, boolean)
- Method in interface javax.sound.midi.
Sequencer
Sets the solo state for a track.
setTrafficClass(int)
- Method in class java.net.
DatagramSocket
Sets traffic class or type-of-service octet in the IP
 datagram header for datagrams sent from this DatagramSocket.
setTrafficClass(int)
- Method in class java.net.
Socket
Sets traffic class or type-of-service octet in the IP
 header for packets sent from this Socket.
setTransactionIsolation(int)
- Method in interface java.sql.
Connection
Attempts to change the transaction isolation level for this
Connection
object to the one given.
setTransactionIsolation(int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the transaction isolation property for this JDBC
RowSet
object to the given
 constant.
setTransactionIsolation(int)
- Method in interface javax.sql.
RowSet
Sets the transaction isolation level for this
RowSet
object.
setTransactionTimeout(int)
- Method in interface javax.transaction.xa.
XAResource
Sets the current transaction timeout value for this
XAResource
instance.
setTransferHandler(TransferHandler)
- Method in class javax.swing.
JApplet
Deprecated.
Sets the
transferHandler
property, which is a mechanism to
 support transfer of data into this component.
setTransferHandler(TransferHandler)
- Method in class javax.swing.
JComponent
Sets the
TransferHandler
, which provides support for transfer
 of data into and out of this component via cut/copy/paste and drag
 and drop.
setTransferHandler(TransferHandler)
- Method in class javax.swing.
JDialog
Sets the
transferHandler
property, which is a mechanism to
 support transfer of data into this component.
setTransferHandler(TransferHandler)
- Method in class javax.swing.
JFrame
Sets the
transferHandler
property, which is a mechanism to
 support transfer of data into this component.
setTransferHandler(TransferHandler)
- Method in class javax.swing.
JWindow
Sets the
transferHandler
property, which is a mechanism to
 support transfer of data into this component.
setTransform(double, double, double, double, double, double)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to the matrix specified by the 6
 double precision values.
setTransform(AffineTransform)
- Method in class java.awt.geom.
AffineTransform
Sets this transform to a copy of the transform in the specified
AffineTransform
object.
setTransform(AffineTransform)
- Method in class java.awt.
Graphics2D
Overwrites the Transform in the
Graphics2D
context.
setTransform(AffineTransform)
- Method in class java.awt.image.renderable.
RenderContext
Sets the current user-to-device AffineTransform contained
 in the RenderContext to a given transform.
setTree(JTree)
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Sets the tree currently editing for.
setTrustAnchors(Set<TrustAnchor>)
- Method in class java.security.cert.
PKIXParameters
Sets the
Set
of most-trusted CAs.
setTTL(byte)
- Method in class java.net.
DatagramSocketImpl
Deprecated.
use setTimeToLive instead.
setTTL(byte)
- Method in class java.net.
MulticastSocket
Deprecated.
use the
MulticastSocket.setTimeToLive(int)
method instead, which uses
int
instead of
byte
as the type for ttl.
setType(int)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the type for this
RowSet
object to the specified type.
setType(int)
- Method in interface javax.sql.
RowSet
Sets the type of this
RowSet
object to the given type.
setType(int, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Set the type of a specific attribute.
setType(short)
- Method in class javax.swing.text.
DefaultStyledDocument.ElementSpec
Sets the element type.
setType(Window.Type)
- Method in class java.awt.
Window
Sets the type of the window.
setType(String)
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
setType(String)
- Method in interface org.w3c.dom.html.
HTMLLIElement
setType(String)
- Method in interface org.w3c.dom.html.
HTMLLinkElement
setType(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setType(String)
- Method in interface org.w3c.dom.html.
HTMLOListElement
setType(String)
- Method in interface org.w3c.dom.html.
HTMLParamElement
setType(String)
- Method in interface org.w3c.dom.html.
HTMLScriptElement
setType(String)
- Method in interface org.w3c.dom.html.
HTMLStyleElement
setType(String)
- Method in interface org.w3c.dom.html.
HTMLUListElement
setType(AclEntryType)
- Method in class java.nio.file.attribute.
AclEntry.Builder
Sets the type component of this builder.
setTypeMap(Map<String, Class<?>>)
- Method in interface java.sql.
Connection
Installs the given
TypeMap
object as the type map for
 this
Connection
object.
setTypeMap(Map<String, Class<?>>)
- Method in class javax.sql.rowset.
BaseRowSet
Installs the given
java.util.Map
object as the type map
 associated with the
Connection
object for this
RowSet
object.
setTypeMap(Map<String, Class<?>>)
- Method in interface javax.sql.
RowSet
Installs the given
java.util.Map
object as the default
 type map for this
RowSet
object.
setUI(ButtonUI)
- Method in class javax.swing.
AbstractButton
Sets the L&F object that renders this component.
setUI(ColorChooserUI)
- Method in class javax.swing.
JColorChooser
Sets the L&F object that renders this component.
setUI(ComboBoxUI)
- Method in class javax.swing.
JComboBox
Sets the L&F object that renders this component.
setUI(ComponentUI)
- Method in class javax.swing.
JComponent
Sets the look and feel delegate for this component.
setUI(DesktopIconUI)
- Method in class javax.swing.
JInternalFrame.JDesktopIcon
Sets the look-and-feel object that renders this component.
setUI(DesktopPaneUI)
- Method in class javax.swing.
JDesktopPane
Sets the L&F object that renders this component.
setUI(InternalFrameUI)
- Method in class javax.swing.
JInternalFrame
Sets the UI delegate for this
JInternalFrame
.
setUI(LabelUI)
- Method in class javax.swing.
JLabel
Sets the L&F object that renders this component.
setUI(LayerUI<? super V>)
- Method in class javax.swing.
JLayer
Sets the
LayerUI
which will perform painting
 and receive input events for this
JLayer
.
setUI(ListUI)
- Method in class javax.swing.
JList
Sets the
ListUI
, the look and feel object that
 renders this component.
setUI(MenuBarUI)
- Method in class javax.swing.
JMenuBar
Sets the L&F object that renders this component.
setUI(MenuItemUI)
- Method in class javax.swing.
JMenuItem
Sets the look and feel object that renders this component.
setUI(OptionPaneUI)
- Method in class javax.swing.
JOptionPane
Sets the UI object which implements the L&F for this component.
setUI(PanelUI)
- Method in class javax.swing.
JPanel
Sets the look and feel (L&F) object that renders this component.
setUI(PopupMenuUI)
- Method in class javax.swing.
JPopupMenu
Sets the L&F object that renders this component.
setUI(ProgressBarUI)
- Method in class javax.swing.
JProgressBar
Sets the look-and-feel object that renders this component.
setUI(RootPaneUI)
- Method in class javax.swing.
JRootPane
Sets the L&F object that renders this component.
setUI(ScrollBarUI)
- Method in class javax.swing.
JScrollBar
Sets the L&F object that renders this component.
setUI(ScrollPaneUI)
- Method in class javax.swing.
JScrollPane
Sets the
ScrollPaneUI
object that provides the
 look and feel (L&F) for this component.
setUI(SeparatorUI)
- Method in class javax.swing.
JSeparator
Sets the L&F object that renders this component.
setUI(SliderUI)
- Method in class javax.swing.
JSlider
Sets the UI object which implements the L&F for this component.
setUI(SpinnerUI)
- Method in class javax.swing.
JSpinner
Sets the look and feel (L&F) object that renders this component.
setUI(SplitPaneUI)
- Method in class javax.swing.
JSplitPane
Sets the L&F object that renders this component.
setUI(TabbedPaneUI)
- Method in class javax.swing.
JTabbedPane
Sets the UI object which implements the L&F for this component.
setUI(TableHeaderUI)
- Method in class javax.swing.table.
JTableHeader
Sets the look and feel (L&F) object that renders this component.
setUI(TableUI)
- Method in class javax.swing.
JTable
Sets the L&F object that renders this component and repaints.
setUI(TextUI)
- Method in class javax.swing.text.
JTextComponent
Sets the user-interface factory for this text-oriented editor.
setUI(ToolBarUI)
- Method in class javax.swing.
JToolBar
Sets the L&F object that renders this component.
setUI(TreeUI)
- Method in class javax.swing.
JTree
Sets the L&F object that renders this component.
setUI(ViewportUI)
- Method in class javax.swing.
JViewport
Sets the L&F object that renders this component.
setUncaughtExceptionHandler(Thread.UncaughtExceptionHandler)
- Method in class java.lang.
Thread
Set the handler invoked when this thread abruptly terminates
 due to an uncaught exception.
setUndecorated(boolean)
- Method in class java.awt.
Dialog
Disables or enables decorations for this dialog.
setUndecorated(boolean)
- Method in class java.awt.
Frame
Disables or enables decorations for this frame.
setUnderline(boolean)
- Method in class javax.swing.text.
LabelView
Sets whether or not the view is underlined.
setUnderline(MutableAttributeSet, boolean)
- Static method in class javax.swing.text.
StyleConstants
Sets the underline attribute.
setUnexecutedModifications(ModificationItem[])
- Method in exception class javax.naming.directory.
AttributeModificationException
Sets the unexecuted modification list to be e.
setUnicast(boolean)
- Method in class java.beans.
EventSetDescriptor
Mark an event set as unicast (or not).
setUnicodeBidi(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the unicode-bidi property definition in CSS2.
setUnicodeLocaleKeyword(String, String)
- Method in class java.util.
Locale.Builder
Sets the Unicode locale keyword type for the given key.
setUnicodeStream(int, InputStream, int)
- Method in interface java.sql.
PreparedStatement
Deprecated.
Use
setCharacterStream
setUnicodeStream(int, InputStream, int)
- Method in class javax.sql.rowset.
BaseRowSet
Deprecated.
getCharacterStream should be used in its place
setUnitIncrement(int)
- Method in interface java.awt.
Adjustable
Sets the unit value increment for the adjustable object.
setUnitIncrement(int)
- Method in class java.awt.
Scrollbar
Sets the unit increment for this scroll bar.
setUnitIncrement(int)
- Method in class java.awt.
ScrollPaneAdjustable
setUnitIncrement(int)
- Method in class javax.swing.
JScrollBar
Sets the unitIncrement property.
setUnitIncrement(int)
- Method in class javax.swing.
JScrollPane.ScrollBar
Messages super to set the value, and resets the
unitIncrementSet
instance variable to true.
setUnstableRelinkThreshold(int)
- Method in class jdk.dynalink.
DynamicLinkerFactory
Sets the unstable relink threshold; the number of times a call site is
 relinked after which it will be considered unstable, and subsequent link
 requests for it will indicate this.
setup(FileSystemView)
- Method in class javax.swing.
JFileChooser
Performs common constructor initialization and setup.
setUpdatePolicy(int)
- Method in class javax.swing.text.
DefaultCaret
Sets the caret movement policy on the document updates.
setUpdateRect(Rectangle)
- Method in class java.awt.event.
PaintEvent
Sets the rectangle representing the area which needs to be
 repainted in response to this event.
setUpdateSelectionOnSort(boolean)
- Method in class javax.swing.
JTable
Specifies whether the selection should be updated after sorting.
setUpdateTableInRealTime(boolean)
- Method in class javax.swing.table.
JTableHeader
Obsolete as of Java 2 platform v1.3.
setupMenuCloseKey()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Setup the menu close key.
setupMenuOpenKey()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Setup the menu open key.
setupPostTimer(JMenu)
- Method in class javax.swing.plaf.basic.
BasicMenuUI
Sets timer to the
menu
.
setURI(int, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Set the Namespace URI of a specific attribute.
setURIDereferencer(URIDereferencer)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
setURIDereferencer(URIDereferencer)
- Method in interface javax.xml.crypto.
XMLCryptoContext
Sets a
URIDereferencer
that is used to dereference
URIReference
s.
setURIResolver(URIResolver)
- Method in class javax.xml.transform.
Transformer
Set an object that will be used to resolve URIs used in
 document().
setURIResolver(URIResolver)
- Method in class javax.xml.transform.
TransformerFactory
Set an object that is used by default during the transformation
 to resolve URIs used in document(), xsl:import, or xsl:include.
setUrl(String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the Url property for this
RowSet
object
 to the given
String
object and sets the dataSource name
 property to
null
.
setUrl(String)
- Method in interface javax.sql.
RowSet
Sets the URL this
RowSet
object will use when it uses the
DriverManager
to create a connection.
setURL(int, URL)
- Method in interface java.sql.
PreparedStatement
Sets the designated parameter to the given
java.net.URL
value.
setURL(int, URL)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the designated parameter to the given
java.net.URL
value.
setURL(int, URL)
- Method in interface javax.sql.
RowSet
Sets the designated parameter to the given
java.net.URL
value.
setURL(String, URL)
- Method in interface java.sql.
CallableStatement
Sets the designated parameter to the given
java.net.URL
object.
setURL(URL, String, String, int, String, String)
- Method in class java.net.
URLStreamHandler
Deprecated.
Use setURL(URL, String, String, int, String, String, String,
             String);
setURL(URL, String, String, int, String, String, String, String, String)
- Method in class java.net.
URLStreamHandler
Sets the fields of the
URL
argument to the indicated values.
setURLStreamHandlerFactory(URLStreamHandlerFactory)
- Static method in class java.net.
URL
Sets an application's
URLStreamHandlerFactory
.
setUsageThreshold(long)
- Method in interface java.lang.management.
MemoryPoolMXBean
Sets the threshold of this memory pool to the given
threshold
value if this memory pool supports the usage threshold.
setUseCache(boolean)
- Static method in class javax.imageio.
ImageIO
Sets a flag indicating whether a disk-based cache file should
 be used when creating
ImageInputStream
s and
ImageOutputStream
s.
setUseCaches(boolean)
- Method in class java.net.
URLConnection
Sets the value of the
useCaches
field of this
URLConnection
to the specified value.
setUseCipherSuitesOrder(boolean)
- Method in class javax.net.ssl.
SSLParameters
Sets whether the local cipher suites preference should be honored.
setUseClientMode(boolean)
- Method in class javax.net.ssl.
SSLEngine
Configures the engine to use client (or server) mode when
 handshaking.
setUseClientMode(boolean)
- Method in class javax.net.ssl.
SSLServerSocket
Controls whether accepted connections are in the (default) SSL
 server mode, or the SSL client mode.
setUseClientMode(boolean)
- Method in class javax.net.ssl.
SSLSocket
Configures the socket to use client (or server) mode when
 handshaking.
setUseMap(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setUseMap(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setUseMap(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setUseParentHandlers(boolean)
- Method in class java.util.logging.
Logger
Specify whether or not this logger should send its output
 to its parent Logger.
setUserData(Object)
- Method in class javax.management.
Notification
Set the user data.
setUserData(String, Object, UserDataHandler)
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
setUserData(String, Object, UserDataHandler)
- Method in interface org.w3c.dom.
Node
Associate an object to a key on this node.
setUsername(String)
- Method in class javax.sql.rowset.
BaseRowSet
Sets the username property for this
RowSet
object
 to the given user name.
setUsername(String)
- Method in interface javax.sql.
RowSet
Sets the username property for this
RowSet
object to the
 given
String
.
setUserObject(Object)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Sets the value associated with this node.
setUserObject(Object)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Sets the user object for this node to
userObject
.
setUserObject(Object)
- Method in interface javax.swing.tree.
MutableTreeNode
Resets the user object of the receiver to
object
.
setUtf8String(long, String)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Writes the given string into this segment at the given offset, converting it to a null-terminated byte sequence using UTF-8 encoding.
setValidating(boolean)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Specifies that the parser produced by this code will
 validate documents as they are parsed.
setValidating(boolean)
- Method in class javax.xml.parsers.
SAXParserFactory
Specifies that the parser produced by this code will
 validate documents as they are parsed.
setValidCharacters(String)
- Method in class javax.swing.text.
MaskFormatter
Allows for further restricting of the characters that can be input.
setVAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setVAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableColElement
setVAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
setVAlign(String)
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
setValue(boolean)
- Method in interface com.sun.jdi.connect.
Connector.BooleanArgument
Sets the value of the argument.
setValue(boolean)
- Method in class javax.sound.sampled.
BooleanControl
Sets the current value for the control.
setValue(float)
- Method in class javax.sound.sampled.
FloatControl
Sets the current value for the control.
setValue(int)
- Method in interface com.sun.jdi.connect.
Connector.IntegerArgument
Sets the value of the argument.
setValue(int)
- Method in interface java.awt.
Adjustable
Sets the current value of the adjustable object.
setValue(int)
- Method in class java.awt.
Scrollbar
Sets the value of this scroll bar to the specified value.
setValue(int)
- Method in class java.awt.
ScrollPaneAdjustable
Sets the value of this scrollbar to the specified value.
setValue(int)
- Method in interface javax.swing.
BoundedRangeModel
Sets the model's current value to
newValue
if
newValue
satisfies the model's constraints.
setValue(int)
- Method in class javax.swing.
DefaultBoundedRangeModel
Sets the current value of the model.
setValue(int)
- Method in class javax.swing.
JProgressBar
Sets the progress bar's current value to
n
.
setValue(int)
- Method in class javax.swing.
JScrollBar
Sets the scrollbar's value.
setValue(int)
- Method in class javax.swing.
JSlider
Sets the slider's current value to
n
.
setValue(int)
- Method in class javax.swing.
Spring
Sets the current
value
of this
Spring
to
value
.
setValue(int)
- Method in interface org.w3c.dom.html.
HTMLLIElement
setValue(int, Value)
- Method in interface com.sun.jdi.
ArrayReference
Replaces an array component with another value.
setValue(int, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Set the value of a specific attribute.
setValue(Field, Value)
- Method in interface com.sun.jdi.
ClassType
Assigns a value to a static field.
setValue(Field, Value)
- Method in interface com.sun.jdi.
ObjectReference
Sets the value of a given instance or static field in this object.
setValue(LocalVariable, Value)
- Method in interface com.sun.jdi.
StackFrame
Sets the
Value
of a
LocalVariable
in this frame.
setValue(Object)
- Method in class java.beans.
Expression
Sets the value of this expression to
value
.
setValue(Object)
- Method in interface java.beans.
PropertyEditor
Set (or change) the object that is to be edited.
setValue(Object)
- Method in class java.beans.
PropertyEditorSupport
Set (or change) the object that is to be edited.
setValue(Object)
- Method in class javax.sound.sampled.
EnumControl
Sets the current value for the control.
setValue(Object)
- Method in class javax.swing.
DefaultCellEditor.EditorDelegate
Sets the value of this cell.
setValue(Object)
- Method in class javax.swing.
JFormattedTextField
Sets the value that will be formatted by an
AbstractFormatter
obtained from the current
AbstractFormatterFactory
.
setValue(Object)
- Method in class javax.swing.
JOptionPane
Sets the value the user has chosen.
setValue(Object)
- Method in class javax.swing.
JSpinner
Changes current value of the model, typically
 this value is displayed by the
editor
.
setValue(Object)
- Method in class javax.swing.
SpinnerDateModel
Sets the current
Date
for this sequence.
setValue(Object)
- Method in class javax.swing.
SpinnerListModel
Changes the current element of the sequence and notifies
ChangeListeners
.
setValue(Object)
- Method in interface javax.swing.
SpinnerModel
Changes current value of the model, typically this value is displayed
 by the
editor
part of a
JSpinner
.
setValue(Object)
- Method in class javax.swing.
SpinnerNumberModel
Sets the current value for this sequence.
setValue(Object)
- Method in class javax.swing.table.
DefaultTableCellRenderer
Sets the
String
object for the cell being rendered to
value
.
setValue(Object, boolean)
- Method in interface javax.swing.
Renderer
Specifies the value to display and whether or not the
 value should be portrayed as "currently selected".
setValue(String)
- Method in interface com.sun.jdi.connect.
Connector.Argument
Sets the value of the argument.
setValue(String)
- Method in class java.net.
HttpCookie
Assigns a new value to a cookie after the cookie is created.
setValue(String)
- Method in class jdk.jfr.
SettingControl
Sets the value for this setting.
setValue(String)
- Method in interface org.w3c.dom.
Attr
On retrieval, the value of the attribute is returned as a string.
setValue(String)
- Method in interface org.w3c.dom.html.
HTMLButtonElement
setValue(String)
- Method in interface org.w3c.dom.html.
HTMLInputElement
setValue(String)
- Method in interface org.w3c.dom.html.
HTMLOptionElement
setValue(String)
- Method in interface org.w3c.dom.html.
HTMLParamElement
setValue(String)
- Method in interface org.w3c.dom.html.
HTMLSelectElement
setValue(String)
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
setValue(String, Object)
- Method in class java.beans.
FeatureDescriptor
Associate a named attribute with this feature.
setValue(V)
- Method in class java.util.
AbstractMap.SimpleEntry
Replaces the value corresponding to this entry with the specified
 value.
setValue(V)
- Method in class java.util.
AbstractMap.SimpleImmutableEntry
Replaces the value corresponding to this entry with the specified
 value (optional operation).
setValue(V)
- Method in interface java.util.
Map.Entry
Replaces the value corresponding to this entry with the specified
 value (optional operation).
setValueAt(Object, int, int)
- Method in class javax.swing.
JTable
Sets the value for the cell in the table model at
row
and
column
.
setValueAt(Object, int, int)
- Method in class javax.swing.table.
AbstractTableModel
This empty implementation is provided so users don't have to implement
  this method if their data model is not editable.
setValueAt(Object, int, int)
- Method in class javax.swing.table.
DefaultTableModel
Sets the object value for the cell at
column
and
row
.
setValueAt(Object, int, int)
- Method in interface javax.swing.table.
TableModel
Sets the value in the cell at
columnIndex
and
rowIndex
to
aValue
.
setValueClass(Class<?>)
- Method in class javax.swing.text.
DefaultFormatter
Sets that class that is used to create new Objects.
setValueContainsLiteralCharacters(boolean)
- Method in class javax.swing.text.
MaskFormatter
If true, the returned value and set value will also contain the literal
 characters in mask.
setValueIsAdjusting(boolean)
- Method in class java.awt.
Scrollbar
Sets the
valueIsAdjusting
property.
setValueIsAdjusting(boolean)
- Method in class java.awt.
ScrollPaneAdjustable
Sets the
valueIsAdjusting
property.
setValueIsAdjusting(boolean)
- Method in interface javax.swing.
BoundedRangeModel
This attribute indicates that any upcoming changes to the value
 of the model should be considered a single event.
setValueIsAdjusting(boolean)
- Method in class javax.swing.
DefaultBoundedRangeModel
Sets the
valueIsAdjusting
property.
setValueIsAdjusting(boolean)
- Method in class javax.swing.
DefaultListSelectionModel
Sets the
valueIsAdjusting
property, which indicates whether
 or not upcoming selection changes should be considered part of a single
 change.
setValueIsAdjusting(boolean)
- Method in class javax.swing.
JList
Sets the selection model's
valueIsAdjusting
property.
setValueIsAdjusting(boolean)
- Method in class javax.swing.
JScrollBar
Sets the model's valueIsAdjusting property.
setValueIsAdjusting(boolean)
- Method in class javax.swing.
JSlider
Sets the model's
valueIsAdjusting
property.
setValueIsAdjusting(boolean)
- Method in interface javax.swing.
ListSelectionModel
Sets the
valueIsAdjusting
property, which indicates whether
 or not upcoming selection changes should be considered part of a single
 change.
setValues(int, int, int, int)
- Method in class java.awt.
Scrollbar
Sets the values of four properties for this scroll bar:
value
,
visibleAmount
,
minimum
, and
maximum
.
setValues(int, int, int, int)
- Method in class javax.swing.
JScrollBar
Sets the four BoundedRangeModel properties after forcing
 the arguments to obey the usual constraints:
setValues(int, List<? extends Value>, int, int)
- Method in interface com.sun.jdi.
ArrayReference
Replaces a range of array components with other values.
setValues(List<? extends Value>)
- Method in interface com.sun.jdi.
ArrayReference
Replaces all array components with other values.
setValueType(String)
- Method in interface org.w3c.dom.html.
HTMLParamElement
setVariant(String)
- Method in class java.util.
Locale.Builder
Sets the variant.
setVerbose(boolean)
- Method in interface java.lang.management.
ClassLoadingMXBean
Enables or disables the verbose output for the class loading
 system.
setVerbose(boolean)
- Method in interface java.lang.management.
MemoryMXBean
Enables or disables verbose output for the memory
 system.
setVerifyInputWhenFocusTarget(boolean)
- Method in class javax.swing.
JComponent
Sets the value to indicate whether input verifier for the
 current focus owner will be called before this component requests
 focus.
setVersion(int)
- Method in class java.net.
HttpCookie
Sets the version of the cookie protocol this cookie complies
 with.
setVersion(String)
- Method in interface org.w3c.dom.html.
HTMLHtmlElement
setVerticalAlign(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the vertical-align property definition in CSS2.
setVerticalAlignment(int)
- Method in class javax.swing.
AbstractButton
Sets the vertical alignment of the icon and text.
setVerticalAlignment(int)
- Method in class javax.swing.
JLabel
Sets the alignment of the label's contents along the Y axis.
setVerticalGroup(GroupLayout.Group)
- Method in class javax.swing.
GroupLayout
Sets the
Group
that positions and sizes
 components along the vertical axis.
setVerticalScrollBar(JScrollBar)
- Method in class javax.swing.
JScrollPane
Adds the scrollbar that controls the viewports vertical view position
 to the scrollpane.
setVerticalScrollBarPolicy(int)
- Method in class javax.swing.
JScrollPane
Determines when the vertical scrollbar appears in the scrollpane.
setVerticalScrollBarPolicy(int)
- Method in class javax.swing.
ScrollPaneLayout
Sets the vertical scrollbar-display policy.
setVerticalTextPosition(int)
- Method in class javax.swing.
AbstractButton
Sets the vertical position of the text relative to the icon.
setVerticalTextPosition(int)
- Method in class javax.swing.
JLabel
Sets the vertical position of the label's text,
 relative to its image.
setVgap(int)
- Method in class java.awt.
BorderLayout
Sets the vertical gap between components.
setVgap(int)
- Method in class java.awt.
CardLayout
Sets the vertical gap between components.
setVgap(int)
- Method in class java.awt.
FlowLayout
Sets the vertical gap between components and between
 the components and the borders of the
Container
.
setVgap(int)
- Method in class java.awt.
GridLayout
Sets the vertical gap between components to the specified value.
setView(Component)
- Method in class javax.swing.
JViewport
Sets the
JViewport
's one lightweight child
 (
view
), which can be
null
.
setView(View)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Sets the current root of the view hierarchy and calls invalidate().
setView(V)
- Method in class javax.swing.
JLayer
Sets the
JLayer
's view component, which can be
null
.
setViewport(JViewport)
- Method in class javax.swing.
JScrollPane
Removes the old viewport (if there is one); forces the
 viewPosition of the new viewport to be in the +x,+y quadrant;
 syncs up the row and column headers (if there are any) with the
 new viewport; and finally syncs the scrollbars and
 headers with the new viewport.
setViewportBorder(Border)
- Method in class javax.swing.
JScrollPane
Adds a border around the viewport.
setViewportView(Component)
- Method in class javax.swing.
JScrollPane
Creates a viewport if necessary and then sets its view.
setViewPosition(Point)
- Method in class javax.swing.
JViewport
Sets the view coordinates that appear in the upper left
 hand corner of the viewport, does nothing if there's no view.
setViewSize(Dimension)
- Method in class javax.swing.
JViewport
Sets the size of the view.
setVisibility(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the visibility property definition in CSS2.
setVisible(boolean)
- Method in class com.sun.java.accessibility.util.
Translator
Set the visible state of the object.
setVisible(boolean)
- Method in class java.awt.
Component.AccessibleAWTComponent
Sets the visible state of the object.
setVisible(boolean)
- Method in class java.awt.
Component
Shows or hides this component depending on the value of parameter
b
.
setVisible(boolean)
- Method in class java.awt.
Dialog
Shows or hides this
Dialog
depending on the value of parameter
b
.
setVisible(boolean)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Set the visible state of the object.
setVisible(boolean)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Sets the visible state of the object.
setVisible(boolean)
- Method in class java.awt.
Window
Shows or hides this
Window
depending on the value of parameter
b
.
setVisible(boolean)
- Method in interface javax.accessibility.
AccessibleComponent
Sets the visible state of the object.
setVisible(boolean)
- Method in class javax.swing.
JComponent
Makes the component visible or invisible.
setVisible(boolean)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
setVisible(boolean)
- Method in class javax.swing.
JPopupMenu
Sets the visibility of the popup menu.
setVisible(boolean)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Sets the visible state of the object.
setVisible(boolean)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
setVisible(boolean)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
setVisible(boolean)
- Method in interface javax.swing.text.
Caret
Sets the visibility of the caret.
setVisible(boolean)
- Method in class javax.swing.text.
DefaultCaret
Sets the caret visibility, and repaints the caret.
setVisibleAmount(int)
- Method in interface java.awt.
Adjustable
Sets the length of the proportional indicator of the
 adjustable object.
setVisibleAmount(int)
- Method in class java.awt.
Scrollbar
Sets the visible amount of this scroll bar.
setVisibleAmount(int)
- Method in class java.awt.
ScrollPaneAdjustable
This method should
NOT
be called by user code.
setVisibleAmount(int)
- Method in class javax.swing.
JScrollBar
Set the model's extent property.
setVisibleComponent(Component)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Sets the visible component.
setVisibleRowCount(int)
- Method in class javax.swing.
JList
Sets the
visibleRowCount
property, which has different meanings
 depending on the layout orientation: For a
VERTICAL
layout
 orientation, this sets the preferred number of rows to display without
 requiring scrolling; for other orientations, it affects the wrapping of
 cells.
setVisibleRowCount(int)
- Method in class javax.swing.
JTree
Sets the number of rows that are to be displayed.
setVLink(String)
- Method in interface org.w3c.dom.html.
HTMLBodyElement
setVMOption(String, String)
- Method in interface com.sun.management.
HotSpotDiagnosticMXBean
Sets a VM option of the given name to the specified value.
setVoiceFamily(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the voice-family property definition in CSS2.
setVolatile(Object...)
- Method in class java.lang.invoke.
VarHandle
Sets the value of a variable to the
newValue
, with memory
 semantics of setting as if the variable was declared
volatile
.
setVolume(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the volume property definition in CSS2.
setVspace(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setVspace(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setVspace(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setWantClientAuth(boolean)
- Method in class com.sun.net.httpserver.
HttpsParameters
Sets whether client authentication should be requested.
setWantClientAuth(boolean)
- Method in class javax.net.ssl.
SSLEngine
Configures the engine to
request
client authentication.
setWantClientAuth(boolean)
- Method in class javax.net.ssl.
SSLParameters
Sets whether client authentication should be requested.
setWantClientAuth(boolean)
- Method in class javax.net.ssl.
SSLServerSocket
Controls whether
accept
ed server-mode
SSLSockets
will be initially configured to
request
client authentication.
setWantClientAuth(boolean)
- Method in class javax.net.ssl.
SSLSocket
Configures the socket to
request
client authentication.
setWantsInput(boolean)
- Method in class javax.swing.
JOptionPane
Sets the
wantsInput
property.
setWasIcon(JInternalFrame, Boolean)
- Method in class javax.swing.
DefaultDesktopManager
Sets that the component has been iconized and the bounds of the
desktopIcon
are valid.
setWeekDate(int, int, int)
- Method in class java.util.
Calendar.Builder
Sets the week-based date parameters to the values with the given
 date specifiers - week year, week of year, and day of week.
setWeekDate(int, int, int)
- Method in class java.util.
Calendar
Sets the date of this
Calendar
with the given date
 specifiers - week year, week of year, and day of week.
setWeekDate(int, int, int)
- Method in class java.util.
GregorianCalendar
Sets this
GregorianCalendar
to the date given by the
 date specifiers -
weekYear
,
weekOfYear
, and
dayOfWeek
.
setWeekdays(String[])
- Method in class java.text.
DateFormatSymbols
Sets weekday strings.
setWeekDefinition(int, int)
- Method in class java.util.
Calendar.Builder
Sets the week definition parameters to the values given by
firstDayOfWeek
and
minimalDaysInFirstWeek
that are
 used to determine the
first
 week
of a year.
setWestPane(JComponent)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Sets the west pane.
setWheelScrollingEnabled(boolean)
- Method in class java.awt.
ScrollPane
Enables/disables scrolling in response to movement of the mouse wheel.
setWheelScrollingEnabled(boolean)
- Method in class javax.swing.
JScrollPane
Enables/disables scrolling in response to movement of the mouse wheel.
setWhiteSpace(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the white-space property definition in CSS2.
setWidows(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the widows property definition in CSS2.
setWidth(int)
- Method in class javax.swing.table.
TableColumn
This method should not be used to set the widths of columns in the
JTable
, use
setPreferredWidth
instead.
setWidth(int)
- Method in interface org.w3c.dom.html.
HTMLPreElement
setWidth(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the width property definition in CSS2.
setWidth(String)
- Method in interface org.w3c.dom.html.
HTMLAppletElement
setWidth(String)
- Method in interface org.w3c.dom.html.
HTMLHRElement
setWidth(String)
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
setWidth(String)
- Method in interface org.w3c.dom.html.
HTMLImageElement
setWidth(String)
- Method in interface org.w3c.dom.html.
HTMLObjectElement
setWidth(String)
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
setWidth(String)
- Method in interface org.w3c.dom.html.
HTMLTableColElement
setWidth(String)
- Method in interface org.w3c.dom.html.
HTMLTableElement
setWidth(Spring)
- Method in class javax.swing.
SpringLayout.Constraints
Sets the
width
property,
 which controls the width of a component.
setWindingRule(int)
- Method in class java.awt.geom.
Path2D
Sets the winding rule for this path to the specified value.
setWindowDecorationStyle(int)
- Method in class javax.swing.
JRootPane
Sets the type of Window decorations (such as borders, widgets for
 closing a Window, title ...) the
JRootPane
should
 provide.
setWindowIconBadge(Window, Image)
- Method in class java.awt.
Taskbar
Affixes a small badge to this application's icon in the task area
 for the specified window.
setWindowProgressState(Window, Taskbar.State)
- Method in class java.awt.
Taskbar
Sets a progress state for a specified window.
setWindowProgressValue(Window, int)
- Method in class java.awt.
Taskbar
Displays a determinate progress bar in the task area for the specified
 window.
setWordSpacing(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the word-spacing property definition in CSS2.
setWrapStyleWord(boolean)
- Method in class javax.swing.
JTextArea
Sets the style of wrapping used if the text area is wrapping
 lines.
setWritable(boolean)
- Method in class java.io.
File
A convenience method to set the owner's write permission for this abstract
 pathname.
setWritable(boolean, boolean)
- Method in class java.io.
File
Sets the owner's or everybody's write permission for this abstract
 pathname.
setWriteMethod(Method)
- Method in class java.beans.
PropertyDescriptor
Sets the method that should be used to write the property value.
setWriter(Writer)
- Method in interface javax.script.
ScriptContext
Sets the
Writer
for scripts to use when displaying output.
setWriter(Writer)
- Method in class javax.script.
SimpleScriptContext
Sets the
Writer
for scripts to use when displaying output.
setWriter(Writer)
- Method in class javax.xml.transform.stream.
StreamResult
Set the writer that is to receive the result.
setX(Spring)
- Method in class javax.swing.
SpringLayout.Constraints
Sets the
x
property,
 which controls the
x
value
 of a component's location.
setXIncludeAware(boolean)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Set state of XInclude processing.
setXIncludeAware(boolean)
- Method in class javax.xml.parsers.
SAXParserFactory
Set state of XInclude processing.
setXMLReader(XMLReader)
- Method in class javax.xml.transform.sax.
SAXSource
Set the XMLReader to be used for the Source.
setXMLReporter(XMLReporter)
- Method in class javax.xml.stream.
XMLInputFactory
The reporter that will be set on any XMLStreamReader or XMLEventReader created
 by this factory instance.
setXMLResolver(XMLResolver)
- Method in class javax.xml.stream.
XMLInputFactory
The resolver that will be set on any XMLStreamReader or XMLEventReader created
 by this factory instance.
setXmlStandalone(boolean)
- Method in interface org.w3c.dom.
Document
An attribute specifying, as part of the
XML declaration
, whether this document is standalone.
setXmlVersion(String)
- Method in interface org.w3c.dom.
Document
An attribute specifying, as part of the
XML declaration
, the version number of this document.
setXMLVersion(String)
- Method in class org.xml.sax.ext.
Locator2Impl
Assigns the current value of the version property.
setXORMode(Color)
- Method in class java.awt.
Graphics
Sets the paint mode of this graphics context to alternate between
 this graphics context's current color and the new specified color.
setXORMode(Color)
- Method in class javax.swing.
DebugGraphics
Overrides
Graphics.setXORMode
.
setXPathFunctionResolver(XPathFunctionResolver)
- Method in interface javax.xml.xpath.
XPath
Establish a function resolver.
setXPathFunctionResolver(XPathFunctionResolver)
- Method in class javax.xml.xpath.
XPathFactory
Establish a default function resolver.
setXPathVariableResolver(XPathVariableResolver)
- Method in interface javax.xml.xpath.
XPath
Establish a variable resolver.
setXPathVariableResolver(XPathVariableResolver)
- Method in class javax.xml.xpath.
XPathFactory
Establish a default variable resolver.
setY(Spring)
- Method in class javax.swing.
SpringLayout.Constraints
Sets the
y
property,
 which controls the
y
value
 of a component's location.
setYear(int)
- Method in class java.sql.
Time
Deprecated.
setYear(int)
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.set(Calendar.YEAR, year + 1900)
.
setYear(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set year of XSD
dateTime
year field.
setYear(BigInteger)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Set low and high order component of XSD
dateTime
year field.
setZeroDigit(char)
- Method in class java.text.
DecimalFormatSymbols
Sets the character used for zero.
setZIndex(String)
- Method in interface org.w3c.dom.css.
CSS2Properties
See the z-index property definition in CSS2.
setZoneStrings(String[][])
- Method in class java.text.
DateFormatSymbols
Sets time zone strings.
severe(String)
- Method in class java.util.logging.
Logger
Log a SEVERE message.
severe(Supplier<String>)
- Method in class java.util.logging.
Logger
Log a SEVERE message, which is only to be constructed if the logging
 level is such that the message will actually be logged.
SEVERE
- Static variable in class java.util.logging.
Level
SEVERE is a message level indicating a serious failure.
Severity
- Class in
javax.print.attribute.standard
Class
Severity
is a printing attribute class, an enumeration, that
 denotes the severity of a
PrinterStateReason
attribute.
Severity(int)
- Constructor for class javax.print.attribute.standard.
Severity
Construct a new severity enumeration value with the given integer value.
SEVERITY_ERROR
- Static variable in interface org.w3c.dom.
DOMError
The severity of the error described by the
DOMError
is
 error.
SEVERITY_FATAL_ERROR
- Static variable in interface org.w3c.dom.
DOMError
The severity of the error described by the
DOMError
is
 fatal error.
SEVERITY_WARNING
- Static variable in interface org.w3c.dom.
DOMError
The severity of the error described by the
DOMError
is
 warning.
SHA1
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA-1" message digest.
SHA1
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA1
digest method algorithm URI.
SHA1_RSA_MGF1
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
SHA1-RSA-MGF1
(PKCS #1) signature method algorithm URI.
SHA224
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA-224" message digest.
SHA224
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA224
digest method algorithm URI.
SHA224_RSA_MGF1
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
SHA224-RSA-MGF1
(PKCS #1) signature method algorithm URI.
SHA256
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA-256" message digest.
SHA256
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA256
digest method algorithm URI.
SHA256_RSA_MGF1
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
SHA256-RSA-MGF1
(PKCS #1) signature method algorithm URI.
SHA3_224
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA3-224" message digest.
SHA3_224
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA3-224
digest method algorithm URI.
SHA3_256
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA3-256" message digest.
SHA3_256
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA3-256
digest method algorithm URI.
SHA3_384
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA3-384" message digest.
SHA3_384
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA3-384
digest method algorithm URI.
SHA3_512
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA3-512" message digest.
SHA3_512
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA3-512
digest method algorithm URI.
SHA384
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA-384" message digest.
SHA384
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA384
digest method algorithm URI.
SHA384_RSA_MGF1
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
SHA384-RSA-MGF1
(PKCS #1) signature method algorithm URI.
SHA512
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA-512" message digest.
SHA512
- Static variable in interface javax.xml.crypto.dsig.
DigestMethod
The
SHA512
digest method algorithm URI.
SHA512_224
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA-512/224" message digest.
SHA512_256
- Static variable in class java.security.spec.
MGF1ParameterSpec
The
MGF1ParameterSpec
uses a "SHA-512/256" message digest.
SHA512_RSA_MGF1
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
SHA512-RSA-MGF1
(PKCS #1) signature method algorithm URI.
shadow
- Variable in class javax.swing.border.
EtchedBorder
The color to use for the etched shadow.
shadow
- Variable in class javax.swing.plaf.basic.
BasicBorders.ButtonBorder
The color of shadow.
shadow
- Variable in class javax.swing.plaf.basic.
BasicBorders.FieldBorder
The color of shadow.
shadow
- Variable in class javax.swing.plaf.basic.
BasicBorders.SplitPaneBorder
The color of shadow
shadow
- Variable in class javax.swing.plaf.basic.
BasicSeparatorUI
The color of the shadow.
shadow
- Variable in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Shadow color
shadowInner
- Variable in class javax.swing.border.
BevelBorder
The color to use for the bevel inner shadow.
shadowOuter
- Variable in class javax.swing.border.
BevelBorder
the color to use for the bevel outer shadow
shallowClone()
- Method in class java.awt.image.renderable.
ParameterBlock
Creates a shallow copy of a
ParameterBlock
.
shape()
- Method in class jdk.incubator.vector.
Vector
Returns the shape of this vector.
shape(char[], int, int)
- Method in class java.awt.font.
NumericShaper
Converts the digits in the text that occur between start and
 start + count.
shape(char[], int, int, int)
- Method in class java.awt.font.
NumericShaper
Converts the digits in the text that occur between start and
 start + count, using the provided context.
shape(char[], int, int, NumericShaper.Range)
- Method in class java.awt.font.
NumericShaper
Converts the digits in the text that occur between
start
and
start + count
, using the provided
context
.
Shape
- Interface in
java.awt
The
Shape
interface provides definitions for objects
 that represent some form of geometric shape.
SHAPE
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "shape"
ShapeGraphicAttribute
- Class in
java.awt.font
The
ShapeGraphicAttribute
class is an implementation of
GraphicAttribute
that draws shapes in a
TextLayout
.
ShapeGraphicAttribute(Shape, int, boolean)
- Constructor for class java.awt.font.
ShapeGraphicAttribute
Constructs a
ShapeGraphicAttribute
for the specified
Shape
.
SHAPES
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "shapes"
Shapes and species
- Search tag in class jdk.incubator.vector.Vector
Section
SHARADA
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Sharada".
SHARADA
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Sharada" Unicode character block.
shardingKey(ShardingKey)
- Method in interface java.sql.
ConnectionBuilder
Specifies a
shardingKey
to be used when creating a connection
shardingKey(ShardingKey)
- Method in interface javax.sql.
PooledConnectionBuilder
Specifies a
shardingKey
to be used when creating a connection
shardingKey(ShardingKey)
- Method in interface javax.sql.
XAConnectionBuilder
Specifies a
shardingKey
to be used when creating a connection
ShardingKey
- Interface in
java.sql
Interface used to indicate that this object represents a Sharding Key.
ShardingKeyBuilder
- Interface in
java.sql
A builder created from a
DataSource
or
XADataSource
object,
 used to create a
ShardingKey
with sub-keys of supported data types.
sharedInstance
- Static variable in class javax.swing.
JTree.EmptySelectionModel
The single instance of
EmptySelectionModel
.
sharedInstance()
- Static method in class javax.swing.
JTree.EmptySelectionModel
Returns the single instance of
EmptySelectionModel
.
sharedInstance()
- Static method in class javax.swing.
ToolTipManager
Returns a shared
ToolTipManager
instance.
SHARPNESS_HARD
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "Sharpness" tag.
SHARPNESS_NORMAL
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "Sharpness" tag.
SHARPNESS_SOFT
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "Sharpness" tag.
SHAVIAN
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Shavian".
SHAVIAN
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Shavian" Unicode character block.
shear(double, double)
- Method in class java.awt.geom.
AffineTransform
Concatenates this transform with a shearing transformation.
shear(double, double)
- Method in class java.awt.
Graphics2D
Concatenates the current
Graphics2D
Transform
with a shearing transform.
SheetCollate
- Class in
javax.print.attribute.standard
Class
SheetCollate
is a printing attribute class, an enumeration,
 that specifies whether or not the media sheets of each copy of each printed
 document in a job are to be in sequence, when multiple copies of the document
 are specified by the
Copies
attribute.
SheetCollate(int)
- Constructor for class javax.print.attribute.standard.
SheetCollate
Construct a new sheet collate enumeration value with the given integer
 value.
shift(float, float, int)
- Method in class javax.sound.sampled.
FloatControl
Changes the control value from the initial value to the final value
 linearly over the specified time period, specified in microseconds.
SHIFT_DOWN_MASK
- Static variable in class java.awt.event.
InputEvent
The Shift key extended modifier constant.
SHIFT_MASK
- Static variable in class java.awt.event.
ActionEvent
The shift modifier.
SHIFT_MASK
- Static variable in class java.awt.event.
InputEvent
Deprecated.
It is recommended that SHIFT_DOWN_MASK and
InputEvent.getModifiersEx()
be used instead
SHIFT_MASK
- Static variable in class java.awt.
Event
Deprecated.
This flag indicates that the Shift key was down when the event
 occurred.
shiftDown()
- Method in class java.awt.
Event
Deprecated.
NOTE:
The
Event
class is obsolete and is
 available only for backwards compatibility.
shiftEnd(int)
- Method in class javax.swing.text.
GapContent
Make the gap bigger, moving any necessary data and updating
 the appropriate marks
shiftGap(int)
- Method in class javax.swing.text.
GapContent
Move the start of the gap to a new location,
 without changing the size of the gap.
shiftGapEndUp(int)
- Method in class javax.swing.text.
GapContent
Adjust the gap end upward.
shiftGapStartDown(int)
- Method in class javax.swing.text.
GapContent
Adjust the gap end downward.
shiftLeft(int)
- Method in class java.math.
BigInteger
Returns a BigInteger whose value is
(this << n)
.
shiftRight(int)
- Method in class java.math.
BigInteger
Returns a BigInteger whose value is
(this >> n)
.
Short
- Class in
java.lang
The
Short
class wraps a value of primitive type
short
in an object.
Short(short)
- Constructor for class java.lang.
Short
Deprecated, for removal: This API element is subject to removal in a future version.
It is rarely appropriate to use this constructor. The static factory
Short.valueOf(short)
is generally a better choice, as it is
 likely to yield significantly better space and time performance.
Short(String)
- Constructor for class java.lang.
Short
Deprecated, for removal: This API element is subject to removal in a future version.
It is rarely appropriate to use this constructor.
 Use
Short.parseShort(String)
to convert a string to a
short
primitive, or use
Short.valueOf(String)
to convert a string to a
Short
object.
SHORT
- Enum constant in enum class java.text.
NumberFormat.Style
The
SHORT
number format style.
SHORT
- Enum constant in enum class java.time.format.
FormatStyle
Short text style, typically numeric.
SHORT
- Enum constant in enum class java.time.format.
TextStyle
Short text, typically an abbreviation.
SHORT
- Enum constant in enum class javax.lang.model.type.
TypeKind
The primitive type
short
.
SHORT
- Static variable in class java.text.
DateFormat
Constant for short style pattern.
SHORT
- Static variable in class java.util.
Calendar
A style specifier for
getDisplayName
and
getDisplayNames
equivalent to
Calendar.SHORT_FORMAT
.
SHORT
- Static variable in class java.util.
TimeZone
A style specifier for
getDisplayName()
indicating
 a short name, such as "PST."
SHORT
- Static variable in class javax.management.openmbean.
SimpleType
The
SimpleType
instance describing values whose
 Java class name is
java.lang.Short
.
SHORT_DESCRIPTION
- Static variable in interface javax.swing.
Action
The key used for storing a short
String
description for the action, used for tooltip text.
SHORT_FORMAT
- Static variable in class java.util.
Calendar
A style specifier for
getDisplayName
and
getDisplayNames
indicating a short name used for format.
SHORT_IDS
- Static variable in class java.time.
ZoneId
A map of zone overrides to enable the short time-zone names to be used.
SHORT_STANDALONE
- Enum constant in enum class java.time.format.
TextStyle
Short text for stand-alone use, typically an abbreviation.
SHORT_STANDALONE
- Static variable in class java.util.
Calendar
A style specifier for
getDisplayName
and
getDisplayNames
indicating a short name used independently,
 such as a month abbreviation as calendar headers.
ShortBuffer
- Class in
java.nio
A short buffer.
ShortBufferException
- Exception Class in
javax.crypto
This exception is thrown when an output buffer provided by the user
 is too short to hold the operation result.
ShortBufferException()
- Constructor for exception class javax.crypto.
ShortBufferException
Constructs a
ShortBufferException
with no detail
 message.
ShortBufferException(String)
- Constructor for exception class javax.crypto.
ShortBufferException
Constructs a
ShortBufferException
with the specified
 detail message.
shortcuts()
- Method in class java.awt.
MenuBar
Gets an enumeration of all menu shortcuts this menu bar
 is managing.
SHORTHAND_FORMAT_CONTROLS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Shorthand Format Controls" Unicode character block.
ShortLookupTable
- Class in
java.awt.image
This class defines a lookup table object.
ShortLookupTable(int, short[])
- Constructor for class java.awt.image.
ShortLookupTable
Constructs a ShortLookupTable object from an array
 of shorts representing a lookup table for each
 band.
ShortLookupTable(int, short[][])
- Constructor for class java.awt.image.
ShortLookupTable
Constructs a ShortLookupTable object from an array of short
 arrays representing a lookup table for each
 band.
ShortMessage
- Class in
javax.sound.midi
A
ShortMessage
contains a MIDI message that has at most two data
 bytes following its status byte.
ShortMessage()
- Constructor for class javax.sound.midi.
ShortMessage
Constructs a new
ShortMessage
.
ShortMessage(byte[])
- Constructor for class javax.sound.midi.
ShortMessage
Constructs a new
ShortMessage
.
ShortMessage(int)
- Constructor for class javax.sound.midi.
ShortMessage
Constructs a new
ShortMessage
which represents a MIDI message
 that takes no data bytes.
ShortMessage(int, int, int)
- Constructor for class javax.sound.midi.
ShortMessage
Constructs a new
ShortMessage
which represents a MIDI message
 that takes up to two data bytes.
ShortMessage(int, int, int, int)
- Constructor for class javax.sound.midi.
ShortMessage
Constructs a new
ShortMessage
which represents a channel MIDI
 message that takes up to two data bytes.
ShortType
- Interface in
com.sun.jdi
The type of all primitive
short
values
 accessed in the target VM.
shortValue()
- Method in interface com.sun.jdi.
PrimitiveValue
Converts this value to a ShortValue and returns the result
 as a short.
shortValue()
- Method in class java.lang.
Byte
Returns the value of this
Byte
as a
short
after
 a widening primitive conversion.
shortValue()
- Method in class java.lang.
Double
Returns the value of this
Double
as a
short
after a narrowing primitive conversion.
shortValue()
- Method in class java.lang.
Float
Returns the value of this
Float
as a
short
after a narrowing primitive conversion.
shortValue()
- Method in class java.lang.
Integer
Returns the value of this
Integer
as a
short
after a narrowing primitive conversion.
shortValue()
- Method in class java.lang.
Long
Returns the value of this
Long
as a
short
after
 a narrowing primitive conversion.
shortValue()
- Method in class java.lang.
Number
Returns the value of the specified number as a
short
.
shortValue()
- Method in class java.lang.
Short
Returns the value of this
Short
as a
short
.
ShortValue
- Interface in
com.sun.jdi
Provides access to a primitive
short
value in
 the target VM.
shortValueExact()
- Method in class java.math.
BigDecimal
Converts this
BigDecimal
to a
short
, checking
 for lost information.
shortValueExact()
- Method in class java.math.
BigInteger
Converts this
BigInteger
to a
short
, checking
 for lost information.
ShortVector
- Class in
jdk.incubator.vector
A specialized
Vector
representing an ordered immutable sequence of
short
values.
shouldAccept(URI, HttpCookie)
- Method in interface java.net.
CookiePolicy
Will be called to see whether or not this cookie should be accepted.
shouldCommit()
- Method in class jdk.jfr.
Event
Returns
true
if the enabled setting for this event is set to
true
and if the duration is within the threshold for the event,
false
otherwise.
shouldFillGap(int, int, int, int)
- Method in class javax.swing.plaf.metal.
MetalTabbedPaneUI
Returns
true
if the gap should be filled.
shouldPadTabRun(int, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns whether or not the tab run should be padded.
shouldPaintExpandControl(TreePath, int, boolean, boolean, boolean)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns
true
if the expand (toggle) control should be drawn for
 the specified row.
shouldRotateTabRuns(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns whether or not the tab run should be rotated.
shouldRotateTabRuns(int, int)
- Method in class javax.swing.plaf.metal.
MetalTabbedPaneUI
Returns
true
if tab runs should be rotated.
shouldScroll(int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI.TrackListener
Returns if scrolling should occur
shouldSelectCell(EventObject)
- Method in class javax.swing.
AbstractCellEditor
Returns true.
shouldSelectCell(EventObject)
- Method in interface javax.swing.
CellEditor
Returns true if the editing cell should be selected, false otherwise.
shouldSelectCell(EventObject)
- Method in class javax.swing.
DefaultCellEditor.EditorDelegate
Returns true to indicate that the editing cell may
 be selected.
shouldSelectCell(EventObject)
- Method in class javax.swing.
DefaultCellEditor
Forwards the message from the
CellEditor
to
 the
delegate
.
shouldSelectCell(EventObject)
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Messages the
realEditor
for the return value.
shouldStartEditingTimer(EventObject)
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Returns true if
event
is a
MouseEvent
and the click count is 1.
shouldUpdateStyleOnAncestorChanged()
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Returns whether or not the UIs should update their
SynthStyles
from the
SynthStyleFactory
when the ancestor of the
JComponent
changes.
shouldUpdateStyleOnAncestorChanged()
- Method in class javax.swing.plaf.synth.
SynthLookAndFeel
Returns whether or not the UIs should update their
SynthStyles
from the
SynthStyleFactory
when the ancestor of the
JComponent
changes.
shouldUpdateStyleOnEvent(PropertyChangeEvent)
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Returns whether or not the UIs should update their styles when a
 particular event occurs.
shouldUpdateStyleOnEvent(PropertyChangeEvent)
- Method in class javax.swing.plaf.synth.
SynthLookAndFeel
Returns whether or not the UIs should update their styles when a
 particular event occurs.
shouldYieldFocus(JComponent)
- Method in class javax.swing.
InputVerifier
Deprecated.
use
InputVerifier.shouldYieldFocus(JComponent, JComponent)
instead.
shouldYieldFocus(JComponent, JComponent)
- Method in class javax.swing.
InputVerifier
Is called by Swing if this
InputVerifier
is assigned to the
source
Swing component to check whether the requested focus
 transfer from the
source
to
target
is allowed.
show()
- Method in class java.awt.
Component.BltBufferStrategy
Makes the next available buffer visible.
show()
- Method in class java.awt.
Component.FlipBufferStrategy
Makes the next available buffer visible by either blitting or
 flipping.
show()
- Method in class java.awt.
Component
Deprecated.
As of JDK version 1.1,
 replaced by
setVisible(boolean)
.
show()
- Method in class java.awt.
Dialog
Deprecated.
As of JDK version 1.5, replaced by
setVisible(boolean)
.
show()
- Method in class java.awt.image.
BufferStrategy
Makes the next available buffer visible by either copying the memory
 (blitting) or changing the display pointer (flipping).
show()
- Method in class java.awt.
Window
Deprecated.
As of JDK version 1.5, replaced by
Window.setVisible(boolean)
.
show()
- Method in class javax.swing.
JInternalFrame
If the internal frame is not visible,
 brings the internal frame to the front,
 makes it visible,
 and attempts to select it.
show()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Implementation of ComboPopup.show().
show()
- Method in interface javax.swing.plaf.basic.
ComboPopup
Shows the popup
show()
- Method in class javax.swing.
Popup
Makes the
Popup
visible.
show(boolean)
- Method in class java.awt.
Component
Deprecated.
As of JDK version 1.1,
 replaced by
setVisible(boolean)
.
show(Component, int, int)
- Method in class java.awt.
PopupMenu
Shows the popup menu at the x, y position relative to an origin
 component.
show(Component, int, int)
- Method in class javax.swing.
JPopupMenu
Displays the popup menu at the position x,y in the coordinate
 space of the component invoker.
show(Container, String)
- Method in class java.awt.
CardLayout
Flips to the component that was added to this layout with the
 specified
name
, using
addLayoutComponent
.
SHOW_ALL
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show all
Nodes
.
SHOW_ATTRIBUTE
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
Attr
nodes.
SHOW_CDATA_SECTION
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
CDATASection
nodes.
SHOW_COMMENT
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
Comment
nodes.
SHOW_DOCUMENT
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
Document
nodes.
SHOW_DOCUMENT_FRAGMENT
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
DocumentFragment
nodes.
SHOW_DOCUMENT_TYPE
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
DocumentType
nodes.
SHOW_ELEMENT
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
Element
nodes.
SHOW_ENTITY
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
Entity
nodes.
SHOW_ENTITY_REFERENCE
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
EntityReference
nodes.
SHOW_HIDDEN_FRAMES
- Enum constant in enum class java.lang.
StackWalker.Option
Shows all hidden frames.
SHOW_NOTATION
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
Notation
nodes.
SHOW_PROCESSING_INSTRUCTION
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
ProcessingInstruction
nodes.
SHOW_REFLECT_FRAMES
- Enum constant in enum class java.lang.
StackWalker.Option
Shows all reflection frames.
SHOW_TEXT
- Static variable in interface org.w3c.dom.traversal.
NodeFilter
Show
Text
nodes.
Show/hide blocking
- Search tag in package java.awt
Section
SHOWA
- Static variable in class java.time.chrono.
JapaneseEra
The singleton instance for the 'Showa' era (1926-12-25 - 1989-01-07)
 which has the value 1.
showConfirmDialog(Component, Object)
- Static method in class javax.swing.
JOptionPane
Brings up a dialog with the options
Yes
,
No
and
Cancel
; with the
 title,
Select an Option
.
showConfirmDialog(Component, Object, String, int)
- Static method in class javax.swing.
JOptionPane
Brings up a dialog where the number of choices is determined
 by the
optionType
parameter.
showConfirmDialog(Component, Object, String, int, int)
- Static method in class javax.swing.
JOptionPane
Brings up a dialog where the number of choices is determined
 by the
optionType
parameter, where the
messageType
parameter determines the icon to display.
showConfirmDialog(Component, Object, String, int, int, Icon)
- Static method in class javax.swing.
JOptionPane
Brings up a dialog with a specified icon, where the number of
 choices is determined by the
optionType
parameter.
showDialog(Component, String)
- Method in class javax.swing.
JFileChooser
Pops a custom file chooser dialog with a custom approve button.
showDialog(Component, String, Color)
- Static method in class javax.swing.
JColorChooser
Shows a modal color-chooser dialog and blocks until the
 dialog is hidden.
showDialog(Component, String, Color, boolean)
- Static method in class javax.swing.
JColorChooser
Shows a modal color-chooser dialog and blocks until the
 dialog is hidden.
showDocument(URL)
- Method in interface java.applet.
AppletContext
Deprecated.
Requests that the browser or applet viewer show the Web page indicated by
 the
url
argument.
showDocument(URL, String)
- Method in interface java.applet.
AppletContext
Deprecated.
Requests that the browser or applet viewer show the Web page indicated by
 the
url
argument.
showHorizontalLines
- Variable in class javax.swing.
JTable
The table draws horizontal lines between cells if
showHorizontalLines
is true.
SHOWING
- Static variable in class javax.accessibility.
AccessibleState
Indicates this object, the object's parent, the object's parent's parent,
 and so on, are all visible.
SHOWING_CHANGED
- Static variable in class java.awt.event.
HierarchyEvent
A change flag indicates that the
HIERARCHY_CHANGED
event
 was generated due to the changing of the hierarchy showing state.
showInputDialog(Component, Object)
- Static method in class javax.swing.
JOptionPane
Shows a question-message dialog requesting input from the user
 parented to
parentComponent
.
showInputDialog(Component, Object, Object)
- Static method in class javax.swing.
JOptionPane
Shows a question-message dialog requesting input from the user and
 parented to
parentComponent
.
showInputDialog(Component, Object, String, int)
- Static method in class javax.swing.
JOptionPane
Shows a dialog requesting input from the user parented to
parentComponent
with the dialog having the title
title
and message type
messageType
.
showInputDialog(Component, Object, String, int, Icon, Object[], Object)
- Static method in class javax.swing.
JOptionPane
Prompts the user for input in a blocking dialog where the
 initial selection, possible selections, and all other options can
 be specified.
showInputDialog(Object)
- Static method in class javax.swing.
JOptionPane
Shows a question-message dialog requesting input from the user.
showInputDialog(Object, Object)
- Static method in class javax.swing.
JOptionPane
Shows a question-message dialog requesting input from the user, with
 the input value initialized to
initialSelectionValue
.
showInternalConfirmDialog(Component, Object)
- Static method in class javax.swing.
JOptionPane
Brings up an internal dialog panel with the options
Yes
,
No
and
Cancel
; with the title,
Select an Option
.
showInternalConfirmDialog(Component, Object, String, int)
- Static method in class javax.swing.
JOptionPane
Brings up a internal dialog panel where the number of choices
 is determined by the
optionType
parameter.
showInternalConfirmDialog(Component, Object, String, int, int)
- Static method in class javax.swing.
JOptionPane
Brings up an internal dialog panel where the number of choices
 is determined by the
optionType
parameter, where
 the
messageType
parameter determines the icon to display.
showInternalConfirmDialog(Component, Object, String, int, int, Icon)
- Static method in class javax.swing.
JOptionPane
Brings up an internal dialog panel with a specified icon, where
 the number of choices is determined by the
optionType
parameter.
showInternalInputDialog(Component, Object)
- Static method in class javax.swing.
JOptionPane
Shows an internal question-message dialog requesting input from
 the user parented to
parentComponent
.
showInternalInputDialog(Component, Object, String, int)
- Static method in class javax.swing.
JOptionPane
Shows an internal dialog requesting input from the user parented
 to
parentComponent
with the dialog having the title
title
and message type
messageType
.
showInternalInputDialog(Component, Object, String, int, Icon, Object[], Object)
- Static method in class javax.swing.
JOptionPane
Prompts the user for input in a blocking internal dialog where
 the initial selection, possible selections, and all other
 options can be specified.
showInternalMessageDialog(Component, Object)
- Static method in class javax.swing.
JOptionPane
Brings up an internal confirmation dialog panel.
showInternalMessageDialog(Component, Object, String, int)
- Static method in class javax.swing.
JOptionPane
Brings up an internal dialog panel that displays a message
 using a default icon determined by the
messageType
parameter.
showInternalMessageDialog(Component, Object, String, int, Icon)
- Static method in class javax.swing.
JOptionPane
Brings up an internal dialog panel displaying a message,
 specifying all parameters.
showInternalOptionDialog(Component, Object, String, int, int, Icon, Object[], Object)
- Static method in class javax.swing.
JOptionPane
Brings up an internal dialog panel with a specified icon, where
 the initial choice is determined by the
initialValue
parameter and the number of choices is determined by the
optionType
parameter.
showMessageDialog(Component, Object)
- Static method in class javax.swing.
JOptionPane
Brings up an information-message dialog titled "Message".
showMessageDialog(Component, Object, String, int)
- Static method in class javax.swing.
JOptionPane
Brings up a dialog that displays a message using a default
 icon determined by the
messageType
parameter.
showMessageDialog(Component, Object, String, int, Icon)
- Static method in class javax.swing.
JOptionPane
Brings up a dialog displaying a message, specifying all parameters.
showOpenDialog(Component)
- Method in class javax.swing.
JFileChooser
Pops up an "Open File" file chooser dialog.
showOptionDialog(Component, Object, String, int, int, Icon, Object[], Object)
- Static method in class javax.swing.
JOptionPane
Brings up a dialog with a specified icon, where the initial
 choice is determined by the
initialValue
parameter and
 the number of choices is determined by the
optionType
parameter.
showPopup()
- Method in class javax.swing.
JComboBox
Causes the combo box to display its popup window.
SHOWS_ROOT_HANDLES_PROPERTY
- Static variable in class javax.swing.
JTree
Bound property name for
showsRootHandles
.
showSaveDialog(Component)
- Method in class javax.swing.
JFileChooser
Pops up a "Save File" file chooser dialog.
showsRootHandles
- Variable in class javax.swing.
JTree
True if handles are displayed at the topmost level of the tree.
showStatus(String)
- Method in class java.applet.
Applet
Deprecated.
Requests that the argument string be displayed in the "status window".
showStatus(String)
- Method in interface java.applet.
AppletContext
Deprecated.
Requests that the argument string be displayed in the "status window".
showSystemMenu()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
Shows system menu.
showSystemMenu()
- Method in class javax.swing.plaf.metal.
MetalInternalFrameTitlePane
Override the parent's method to do nothing.
showVerticalLines
- Variable in class javax.swing.
JTable
The table draws vertical lines between cells if
showVerticalLines
is true.
shrinkAbsorb
- Variable in class java.awt.font.
GlyphJustificationInfo
If
true
, this glyph absorbs all remaining shrinkage at
 this and lower priority levels as it shrinks.
shrinkLeftLimit
- Variable in class java.awt.font.
GlyphJustificationInfo
The maximum amount by which the left side of this glyph can shrink
 (a positive number).
shrinkPriority
- Variable in class java.awt.font.
GlyphJustificationInfo
The priority level of this glyph as it is shrinking.
shrinkRightLimit
- Variable in class java.awt.font.
GlyphJustificationInfo
The maximum amount by which the right side of this glyph can shrink
 (a positive number).
shuffle(List<?>)
- Static method in class java.util.
Collections
Randomly permutes the specified list using a default source of
 randomness.
shuffle(List<?>, Random)
- Static method in class java.util.
Collections
Randomly permute the specified list using the specified source of
 randomness.
shuffle(List<?>, RandomGenerator)
- Static method in class java.util.
Collections
Randomly permute the specified list using the specified source of
 randomness.
shuffleFromArray(int[], int)
- Method in interface jdk.incubator.vector.
VectorSpecies
Creates a shuffle for this species from
 an
int
array starting at an offset.
shuffleFromOp(IntUnaryOperator)
- Method in interface jdk.incubator.vector.
VectorSpecies
Creates a shuffle for this species from
 the successive values of an operator applied to
 the range
[0..VLENGTH-1]
.
shuffleFromValues(int...)
- Method in interface jdk.incubator.vector.
VectorSpecies
Creates a shuffle for this species from
 a series of source indexes.
shutdown()
- Method in class com.sun.nio.sctp.
SctpChannel
Shutdown a connection without closing the channel.
shutdown()
- Method in class java.net.http.
HttpClient
Initiates an orderly shutdown in which  requests previously
 submitted with
send
or
sendAsync
are run to completion, but no new request will be accepted.
shutdown()
- Method in class java.nio.channels.
AsynchronousChannelGroup
Initiates an orderly shutdown of the group.
shutdown()
- Method in interface java.util.concurrent.
ExecutorService
Initiates an orderly shutdown in which previously submitted
 tasks are executed, but no new tasks will be accepted.
shutdown()
- Method in class java.util.concurrent.
ForkJoinPool
Possibly initiates an orderly shutdown in which previously
 submitted tasks are executed, but no new tasks will be
 accepted.
shutdown()
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Initiates an orderly shutdown in which previously submitted
 tasks are executed, but no new tasks will be accepted.
shutdown()
- Method in class java.util.concurrent.
StructuredTaskScope
PREVIEW
Shut down this task scope without closing it.
shutdown()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Initiates an orderly shutdown in which previously submitted
 tasks are executed, but no new tasks will be accepted.
shutdown(Association)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Shutdown an association without closing the channel.
SHUTDOWN
- Enum constant in enum class com.sun.nio.sctp.
AssociationChangeNotification.AssocChangeEvent
The association has gracefully closed.
SHUTDOWN
- Static variable in class javax.print.attribute.standard.
PrinterStateReason
Someone has removed a printer from service, and the device may be powered
 down or physically removed.
Shutdown and Termination
- Search tag in class java.nio.channels.AsynchronousChannelGroup
Section
ShutdownChannelGroupException
- Exception Class in
java.nio.channels
Unchecked exception thrown when an attempt is made to construct a channel in 
 a group that is shutdown or the completion handler for an I/O operation 
 cannot be invoked because the channel group has terminated.
ShutdownChannelGroupException()
- Constructor for exception class java.nio.channels.
ShutdownChannelGroupException
Constructs an instance of this class.
shutdownInput()
- Method in class java.net.
Socket
Places the input stream for this socket at "end of stream".
shutdownInput()
- Method in class java.net.
SocketImpl
Places the input stream for this socket at "end of stream".
shutdownInput()
- Method in class java.nio.channels.
AsynchronousSocketChannel
Shutdown the connection for reading without closing the channel.
shutdownInput()
- Method in class java.nio.channels.
SocketChannel
Shutdown the connection for reading without closing the channel.
ShutdownNotification
- Class in
com.sun.nio.sctp
Notification emitted when a peer shuts down an association.
ShutdownNotification()
- Constructor for class com.sun.nio.sctp.
ShutdownNotification
Initializes a new instance of this class.
shutdownNow()
- Method in class java.net.http.
HttpClient
This method attempts to initiate an immediate shutdown.
shutdownNow()
- Method in class java.nio.channels.
AsynchronousChannelGroup
Shuts down the group and closes all open channels in the group.
shutdownNow()
- Method in interface java.util.concurrent.
ExecutorService
Attempts to stop all actively executing tasks, halts the
 processing of waiting tasks, and returns a list of the tasks
 that were awaiting execution.
shutdownNow()
- Method in class java.util.concurrent.
ForkJoinPool
Possibly attempts to cancel and/or stop all tasks, and reject
 all subsequently submitted tasks.
shutdownNow()
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Attempts to stop all actively executing tasks, halts the
 processing of waiting tasks, and returns a list of the tasks
 that were awaiting execution.
shutdownNow()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Attempts to stop all actively executing tasks, halts the
 processing of waiting tasks, and returns a list of the tasks
 that were awaiting execution.
ShutdownOnFailure()
- Constructor for class java.util.concurrent.
StructuredTaskScope.ShutdownOnFailure
PREVIEW
Constructs a new unnamed
ShutdownOnFailure
that creates virtual threads.
ShutdownOnFailure(String, ThreadFactory)
- Constructor for class java.util.concurrent.
StructuredTaskScope.ShutdownOnFailure
PREVIEW
Constructs a new
ShutdownOnFailure
with the given name and thread factory.
ShutdownOnSuccess()
- Constructor for class java.util.concurrent.
StructuredTaskScope.ShutdownOnSuccess
PREVIEW
Constructs a new unnamed
ShutdownOnSuccess
that creates virtual threads.
ShutdownOnSuccess(String, ThreadFactory)
- Constructor for class java.util.concurrent.
StructuredTaskScope.ShutdownOnSuccess
PREVIEW
Constructs a new
ShutdownOnSuccess
with the given name and thread factory.
shutdownOutput()
- Method in class java.net.
Socket
Disables the output stream for this socket.
shutdownOutput()
- Method in class java.net.
SocketImpl
Disables the output stream for this socket.
shutdownOutput()
- Method in class java.nio.channels.
AsynchronousSocketChannel
Shutdown the connection for writing without closing the channel.
shutdownOutput()
- Method in class java.nio.channels.
SocketChannel
Shutdown the connection for writing without closing the channel.
Shutdown Sequence
- Search tag in class java.lang.Runtime
Section
SIDDHAM
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Siddham".
SIDDHAM
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Siddham" Unicode character block.
SIDE
- Static variable in class javax.print.attribute.standard.
MediaTray
The side input tray.
Side-effects
- Search tag in package java.util.stream
Section
Sides
- Class in
javax.print.attribute.standard
Class
Sides
is a printing attribute class, an enumeration, that
 specifies how print-stream pages are to be imposed upon the sides of an
 instance of a selected medium, i.e., an impression.
Sides(int)
- Constructor for class javax.print.attribute.standard.
Sides
Construct a new sides enumeration value with the given integer value.
sign()
- Method in class java.security.
Signature
Returns the signature bytes of all the data updated.
sign(byte[], int, int)
- Method in class java.security.
Signature
Finishes the signature operation and stores the resulting signature
 bytes in the provided buffer
outbuf
, starting at
offset
.
sign(ZipFile, OutputStream)
- Method in class jdk.security.jarsigner.
JarSigner
Signs a file into an
OutputStream
.
sign(XMLSignContext)
- Method in interface javax.xml.crypto.dsig.
XMLSignature
Signs this
XMLSignature
.
SIGN
- Static variable in class java.security.
Signature
Possible
Signature.state
value, signifying that
 this
Signature
object has been initialized for signing.
SIGN
- Static variable in class java.text.
NumberFormat.Field
Constant identifying the sign field.
SIGN
- Static variable in class javax.xml.crypto.
KeySelector.Purpose
A key for signing.
signal()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer.ConditionObject
Moves the longest-waiting thread, if one exists, from the
 wait queue for this condition to the wait queue for the
 owning lock.
signal()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer.ConditionObject
Moves the longest-waiting thread, if one exists, from the
 wait queue for this condition to the wait queue for the
 owning lock.
signal()
- Method in interface java.util.concurrent.locks.
Condition
Wakes up one waiting thread.
signalAll()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer.ConditionObject
Moves all threads from the wait queue for this condition to
 the wait queue for the owning lock.
signalAll()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer.ConditionObject
Moves all threads from the wait queue for this condition to
 the wait queue for the owning lock.
signalAll()
- Method in interface java.util.concurrent.locks.
Condition
Wakes up all waiting threads.
signature()
- Method in interface com.sun.jdi.
LocalVariable
Gets the
type signature
of the local variable.
signature()
- Method in interface com.sun.jdi.
Type
Returns the type signature for this type.
signature()
- Method in interface com.sun.jdi.
TypeComponent
Gets the
type signature
for this type component.
signature()
- Method in class jdk.jshell.
MethodSnippet
The full type signature of the method, including return type.
signature()
- Method in interface jdk.jshell.
SourceCodeAnalysis.Documentation
The signature of the given element.
Signature
- Class in
java.security
The
Signature
class is used to provide applications the functionality
 of a digital signature algorithm.
Signature(String)
- Constructor for class java.security.
Signature
Creates a
Signature
object for the specified algorithm.
SIGNATURE
- Enum constant in enum class java.security.
CryptoPrimitive
Asymmetric primitive: signature scheme
SIGNATURE_VERSION
- Static variable in class java.util.jar.
Attributes.Name
Name
object for
Signature-Version
manifest attribute used when signing JAR files.
signatureAlgorithm(String)
- Method in class jdk.security.jarsigner.
JarSigner.Builder
Sets the signature algorithm.
signatureAlgorithm(String, Provider)
- Method in class jdk.security.jarsigner.
JarSigner.Builder
Sets the signature algorithm from the specified provider.
SignatureException
- Exception Class in
java.security
This is the generic Signature exception.
SignatureException()
- Constructor for exception class java.security.
SignatureException
Constructs a
SignatureException
with no detail message.
SignatureException(String)
- Constructor for exception class java.security.
SignatureException
Constructs a
SignatureException
with the specified detail
 message.
SignatureException(String, Throwable)
- Constructor for exception class java.security.
SignatureException
Creates a
SignatureException
with the specified
 detail message and cause.
SignatureException(Throwable)
- Constructor for exception class java.security.
SignatureException
Creates a
SignatureException
with the specified cause
 and a detail message of
(cause==null ? null : cause.toString())
(which typically contains the class and detail message of
cause
).
SignatureMethod
- Interface in
javax.xml.crypto.dsig
A representation of the XML
SignatureMethod
element
 as defined in the
W3C Recommendation for XML-Signature Syntax and Processing
.
SignatureMethodParameterSpec
- Interface in
javax.xml.crypto.dsig.spec
A specification of algorithm parameters for an XML
SignatureMethod
algorithm.
Signature polymorphism
- Search tag in class java.lang.invoke.MethodHandle
Section
SignatureProperties
- Interface in
javax.xml.crypto.dsig
A representation of the XML
SignatureProperties
element as
 defined in the
W3C Recommendation for XML-Signature Syntax and Processing
.
SignatureProperty
- Interface in
javax.xml.crypto.dsig
A representation of the XML
SignatureProperty
element as
 defined in the
W3C Recommendation for XML-Signature Syntax and Processing
.
SignatureSpi
- Class in
java.security
This class defines the
Service Provider Interface
(
SPI
)
 for the
Signature
class, which is used to provide the
 functionality of a digital signature algorithm.
SignatureSpi()
- Constructor for class java.security.
SignatureSpi
Constructor for subclasses to call.
SignedInfo
- Interface in
javax.xml.crypto.dsig
An representation of the XML
SignedInfo
element as
 defined in the
W3C Recommendation for XML-Signature Syntax and Processing
.
Signed JAR Files
- Search tag in class java.util.jar.JarInputStream
Section
SignedObject
- Class in
java.security
SignedObject
is a class for the purpose of creating authentic
 runtime objects whose integrity cannot be compromised without being
 detected.
SignedObject(Serializable, PrivateKey, Signature)
- Constructor for class java.security.
SignedObject
Constructs a
SignedObject
from any Serializable object.
Signer
- Class in
java.security
Deprecated, for removal: This API element is subject to removal in a future version.
This class is deprecated and subject to removal in a future
     version of Java SE. It has been replaced by
java.security.KeyStore
, the
java.security.cert
package,
     and
java.security.Principal
.
Signer()
- Constructor for class java.security.
Signer
Deprecated.
Creates a
Signer
.
Signer(String)
- Constructor for class java.security.
Signer
Deprecated.
Creates a
Signer
with the specified identity name.
Signer(String, IdentityScope)
- Constructor for class java.security.
Signer
Deprecated.
Creates a
Signer
with the specified identity name and scope.
signerName(String)
- Method in class jdk.security.jarsigner.
JarSigner.Builder
Sets the signer name.
Signing and marshalling XMLSignatures to XML
- Search tag in class javax.xml.crypto.dsig.XMLSignatureFactory
Section
SignStyle
- Enum Class in
java.time.format
Enumeration of ways to handle the positive/negative sign.
signum()
- Method in class java.math.
BigDecimal
Returns the signum function of this
BigDecimal
.
signum()
- Method in class java.math.
BigInteger
Returns the signum function of this BigInteger.
signum(double)
- Static method in class java.lang.
Math
Returns the signum function of the argument; zero if the argument
 is zero, 1.0 if the argument is greater than zero, -1.0 if the
 argument is less than zero.
signum(double)
- Static method in class java.lang.
StrictMath
Returns the signum function of the argument; zero if the argument
 is zero, 1.0 if the argument is greater than zero, -1.0 if the
 argument is less than zero.
signum(float)
- Static method in class java.lang.
Math
Returns the signum function of the argument; zero if the argument
 is zero, 1.0f if the argument is greater than zero, -1.0f if the
 argument is less than zero.
signum(float)
- Static method in class java.lang.
StrictMath
Returns the signum function of the argument; zero if the argument
 is zero, 1.0f if the argument is greater than zero, -1.0f if the
 argument is less than zero.
signum(int)
- Static method in class java.lang.
Integer
Returns the signum function of the specified
int
value.
signum(long)
- Static method in class java.lang.
Long
Returns the signum function of the specified
long
value.
SIGNWRITING
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "SignWriting".
SILENT
- Static variable in class java.rmi.server.
LogStream
Deprecated.
log level constant (no logging).
SIMPLE_SCROLL_MODE
- Static variable in class javax.swing.
JViewport
This mode uses the very simple method of redrawing the entire
 contents of the scrollpane each time it is scrolled.
SimpleAnnotationValueVisitor14<R,
P>
- Class in
javax.lang.model.util
A simple visitor for annotation values with default behavior
 appropriate for source version
RELEASE_14
.
SimpleAnnotationValueVisitor14()
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor14
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleAnnotationValueVisitor14(R)
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor14
Constructor for concrete subclasses; uses the argument for the
 default value.
SimpleAnnotationValueVisitor6<R,
P>
- Class in
javax.lang.model.util
A simple visitor for annotation values with default behavior
 appropriate for the
RELEASE_6
source version.
SimpleAnnotationValueVisitor6()
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Deprecated.
Release 6 is obsolete; update to a visitor for a newer
 release level.
SimpleAnnotationValueVisitor6(R)
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Deprecated.
Release 6 is obsolete; update to a visitor for a newer
 release level.
SimpleAnnotationValueVisitor7<R,
P>
- Class in
javax.lang.model.util
A simple visitor for annotation values with default behavior
 appropriate for the
RELEASE_7
source version.
SimpleAnnotationValueVisitor7()
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor7
Deprecated.
Release 7 is obsolete; update to a visitor for a newer
 release level.
SimpleAnnotationValueVisitor7(R)
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor7
Deprecated.
Release 7 is obsolete; update to a visitor for a newer
 release level.
SimpleAnnotationValueVisitor8<R,
P>
- Class in
javax.lang.model.util
A simple visitor for annotation values with default behavior
 appropriate for the
RELEASE_8
source version.
SimpleAnnotationValueVisitor8()
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor8
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleAnnotationValueVisitor8(R)
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor8
Constructor for concrete subclasses; uses the argument for the
 default value.
SimpleAnnotationValueVisitor9<R,
P>
- Class in
javax.lang.model.util
A simple visitor for annotation values with default behavior
 appropriate for source versions
RELEASE_9
through
RELEASE_14
.
SimpleAnnotationValueVisitor9()
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor9
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleAnnotationValueVisitor9(R)
- Constructor for class javax.lang.model.util.
SimpleAnnotationValueVisitor9
Constructor for concrete subclasses; uses the argument for the
 default value.
SimpleAttributeSet
- Class in
javax.swing.text
A straightforward implementation of MutableAttributeSet using a
 hash table.
SimpleAttributeSet()
- Constructor for class javax.swing.text.
SimpleAttributeSet
Creates a new attribute set.
SimpleAttributeSet(AttributeSet)
- Constructor for class javax.swing.text.
SimpleAttributeSet
Creates a new attribute set based on a supplied set of attributes.
SimpleBeanInfo
- Class in
java.beans
This is a support class to make it easier for people to provide
 BeanInfo classes.
SimpleBeanInfo()
- Constructor for class java.beans.
SimpleBeanInfo
Constructs a
SimpleBeanInfo
.
SimpleBindings
- Class in
javax.script
A simple implementation of Bindings backed by
 a
HashMap
or some other specified
Map
.
SimpleBindings()
- Constructor for class javax.script.
SimpleBindings
Default constructor uses a
HashMap
.
SimpleBindings(Map<String, Object>)
- Constructor for class javax.script.
SimpleBindings
Constructor uses an existing
Map
to store the values.
SimpleDateFormat
- Class in
java.text
SimpleDateFormat
is a concrete class for formatting and
 parsing dates in a locale-sensitive manner.
SimpleDateFormat()
- Constructor for class java.text.
SimpleDateFormat
Constructs a
SimpleDateFormat
using the default pattern and
 date format symbols for the default
FORMAT
locale.
SimpleDateFormat(String)
- Constructor for class java.text.
SimpleDateFormat
Constructs a
SimpleDateFormat
using the given pattern and
 the default date format symbols for the default
FORMAT
locale.
SimpleDateFormat(String, DateFormatSymbols)
- Constructor for class java.text.
SimpleDateFormat
Constructs a
SimpleDateFormat
using the given pattern and
 date format symbols.
SimpleDateFormat(String, Locale)
- Constructor for class java.text.
SimpleDateFormat
Constructs a
SimpleDateFormat
using the given pattern and
 the default date format symbols for the given locale.
SimpleDoc
- Class in
javax.print
This class is an implementation of interface
Doc
that can be used in
 many common printing requests.
SimpleDoc(Object, DocFlavor, DocAttributeSet)
- Constructor for class javax.print.
SimpleDoc
Constructs a
SimpleDoc
with the specified print data, doc flavor
 and doc attribute set.
SimpleDocTreeVisitor<R,
P>
- Class in
com.sun.source.util
A simple visitor for tree nodes.
SimpleDocTreeVisitor()
- Constructor for class com.sun.source.util.
SimpleDocTreeVisitor
Creates a visitor, with a DEFAULT_VALUE of
null
.
SimpleDocTreeVisitor(R)
- Constructor for class com.sun.source.util.
SimpleDocTreeVisitor
Creates a visitor, with a specified DEFAULT_VALUE.
SimpleElementVisitor14<R,
P>
- Class in
javax.lang.model.util
A simple visitor of program elements with default behavior
 appropriate for the
RELEASE_14
source version.
SimpleElementVisitor14()
- Constructor for class javax.lang.model.util.
SimpleElementVisitor14
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleElementVisitor14(R)
- Constructor for class javax.lang.model.util.
SimpleElementVisitor14
Constructor for concrete subclasses; uses the argument for the
 default value.
SimpleElementVisitor6<R,
P>
- Class in
javax.lang.model.util
A simple visitor of program elements with default behavior
 appropriate for the
RELEASE_6
source version.
SimpleElementVisitor6()
- Constructor for class javax.lang.model.util.
SimpleElementVisitor6
Deprecated.
Release 6 is obsolete; update to a visitor for a newer
 release level.
SimpleElementVisitor6(R)
- Constructor for class javax.lang.model.util.
SimpleElementVisitor6
Deprecated.
Release 6 is obsolete; update to a visitor for a newer
 release level.
SimpleElementVisitor7<R,
P>
- Class in
javax.lang.model.util
A simple visitor of program elements with default behavior
 appropriate for the
RELEASE_7
source version.
SimpleElementVisitor7()
- Constructor for class javax.lang.model.util.
SimpleElementVisitor7
Deprecated.
Release 7 is obsolete; update to a visitor for a newer
 release level.
SimpleElementVisitor7(R)
- Constructor for class javax.lang.model.util.
SimpleElementVisitor7
Deprecated.
Release 7 is obsolete; update to a visitor for a newer
 release level.
SimpleElementVisitor8<R,
P>
- Class in
javax.lang.model.util
A simple visitor of program elements with default behavior
 appropriate for the
RELEASE_8
source version.
SimpleElementVisitor8()
- Constructor for class javax.lang.model.util.
SimpleElementVisitor8
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleElementVisitor8(R)
- Constructor for class javax.lang.model.util.
SimpleElementVisitor8
Constructor for concrete subclasses; uses the argument for the
 default value.
SimpleElementVisitor9<R,
P>
- Class in
javax.lang.model.util
A simple visitor of program elements with default behavior
 appropriate for source versions
RELEASE_9
through
RELEASE_14
.
SimpleElementVisitor9()
- Constructor for class javax.lang.model.util.
SimpleElementVisitor9
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleElementVisitor9(R)
- Constructor for class javax.lang.model.util.
SimpleElementVisitor9
Constructor for concrete subclasses; uses the argument for the
 default value.
SimpleEntry(Map.Entry<? extends K, ? extends V>)
- Constructor for class java.util.
AbstractMap.SimpleEntry
Creates an entry representing the same mapping as the
 specified entry.
SimpleEntry(K, V)
- Constructor for class java.util.
AbstractMap.SimpleEntry
Creates an entry representing a mapping from the specified
 key to the specified value.
SimpleFileServer
- Class in
com.sun.net.httpserver
A simple HTTP file server and its components (intended for testing,
 development and debugging purposes only).
Simple file server
- Search tag in class com.sun.net.httpserver.SimpleFileServer
Section
SimpleFileServer.OutputLevel
- Enum Class in
com.sun.net.httpserver
Describes the log message output level produced by the server when
 processing exchanges.
SimpleFileVisitor<T>
- Class in
java.nio.file
A simple visitor of files with default behavior to visit all files and to
 re-throw I/O errors.
SimpleFileVisitor()
- Constructor for class java.nio.file.
SimpleFileVisitor
Initializes a new instance of this class.
SimpleFormatter
- Class in
java.util.logging
Print a brief summary of the
LogRecord
in a human readable
 format.
SimpleFormatter()
- Constructor for class java.util.logging.
SimpleFormatter
Create a
SimpleFormatter
.
SimpleImmutableEntry(Map.Entry<? extends K, ? extends V>)
- Constructor for class java.util.
AbstractMap.SimpleImmutableEntry
Creates an entry representing the same mapping as the
 specified entry.
SimpleImmutableEntry(K, V)
- Constructor for class java.util.
AbstractMap.SimpleImmutableEntry
Creates an entry representing a mapping from the specified
 key to the specified value.
SimpleJavaFileObject
- Class in
javax.tools
Provides simple implementations for most methods in JavaFileObject.
SimpleJavaFileObject(URI, JavaFileObject.Kind)
- Constructor for class javax.tools.
SimpleJavaFileObject
Construct a SimpleJavaFileObject of the given kind and with the
 given URI.
SimpleLinkRequest
- Class in
jdk.dynalink.linker.support
Default simple implementation of
LinkRequest
.
SimpleLinkRequest(CallSiteDescriptor, boolean, Object...)
- Constructor for class jdk.dynalink.linker.support.
SimpleLinkRequest
Creates a new link request.
SimpleRelinkableCallSite
- Class in
jdk.dynalink.support
A relinkable call site that implements monomorphic inline caching strategy,
 only being linked to a single
GuardedInvocation
at any given time.
SimpleRelinkableCallSite(CallSiteDescriptor)
- Constructor for class jdk.dynalink.support.
SimpleRelinkableCallSite
Creates a new call site with monomorphic inline caching strategy.
SimpleScriptContext
- Class in
javax.script
Simple implementation of ScriptContext.
SimpleScriptContext()
- Constructor for class javax.script.
SimpleScriptContext
Create a
SimpleScriptContext
.
SimpleTimeZone
- Class in
java.util
SimpleTimeZone
is a concrete subclass of
TimeZone
that represents a time zone for use with a Gregorian calendar.
SimpleTimeZone(int, String)
- Constructor for class java.util.
SimpleTimeZone
Constructs a SimpleTimeZone with the given base time zone offset from GMT
 and time zone ID with no daylight saving time schedule.
SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)
- Constructor for class java.util.
SimpleTimeZone
Constructs a SimpleTimeZone with the given base time zone offset from
 GMT, time zone ID, and rules for starting and ending the daylight
 time.
SimpleTimeZone(int, String, int, int, int, int, int, int, int, int, int)
- Constructor for class java.util.
SimpleTimeZone
Constructs a SimpleTimeZone with the given base time zone offset from
 GMT, time zone ID, and rules for starting and ending the daylight
 time.
SimpleTimeZone(int, String, int, int, int, int, int, int, int, int, int, int, int)
- Constructor for class java.util.
SimpleTimeZone
Constructs a SimpleTimeZone with the given base time zone offset from
 GMT, time zone ID, and rules for starting and ending the daylight
 time.
SimpleTreeVisitor<R,
P>
- Class in
com.sun.source.util
A simple visitor for tree nodes.
SimpleTreeVisitor()
- Constructor for class com.sun.source.util.
SimpleTreeVisitor
Creates a visitor, with a DEFAULT_VALUE of
null
.
SimpleTreeVisitor(R)
- Constructor for class com.sun.source.util.
SimpleTreeVisitor
Creates a visitor, with a specified DEFAULT_VALUE.
SimpleType<T>
- Class in
javax.management.openmbean
The
SimpleType
class is the
open type
class whose instances describe
 all
open data
values which are neither arrays,
 nor
CompositeData
values,
 nor
TabularData
values.
SimpleTypeVisitor14<R,
P>
- Class in
javax.lang.model.util
A simple visitor of types with default behavior appropriate for
 source version
RELEASE_14
.
SimpleTypeVisitor14()
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor14
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleTypeVisitor14(R)
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor14
Constructor for concrete subclasses; uses the argument for the
 default value.
SimpleTypeVisitor6<R,
P>
- Class in
javax.lang.model.util
A simple visitor of types with default behavior appropriate for the
RELEASE_6
source version.
SimpleTypeVisitor6()
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor6
Deprecated.
Release 6 is obsolete; update to a visitor for a newer
 release level.
SimpleTypeVisitor6(R)
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor6
Deprecated.
Release 6 is obsolete; update to a visitor for a newer
 release level.
SimpleTypeVisitor7<R,
P>
- Class in
javax.lang.model.util
A simple visitor of types with default behavior appropriate for the
RELEASE_7
source version.
SimpleTypeVisitor7()
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor7
Deprecated.
Release 7 is obsolete; update to a visitor for a newer
 release level.
SimpleTypeVisitor7(R)
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor7
Deprecated.
Release 7 is obsolete; update to a visitor for a newer
 release level.
SimpleTypeVisitor8<R,
P>
- Class in
javax.lang.model.util
A simple visitor of types with default behavior appropriate for the
RELEASE_8
source version.
SimpleTypeVisitor8()
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor8
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleTypeVisitor8(R)
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor8
Constructor for concrete subclasses; uses the argument for the
 default value.
SimpleTypeVisitor9<R,
P>
- Class in
javax.lang.model.util
A simple visitor of types with default behavior appropriate for
 source versions
RELEASE_9
through
RELEASE_14
.
SimpleTypeVisitor9()
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor9
Constructor for concrete subclasses; uses
null
for the
 default value.
SimpleTypeVisitor9(R)
- Constructor for class javax.lang.model.util.
SimpleTypeVisitor9
Constructor for concrete subclasses; uses the argument for the
 default value.
SIMPLIFIED_CHINESE
- Static variable in class java.util.
Locale
Useful constant for language.
SIMPLIFIED_HANZI
- Static variable in class java.awt.im.
InputSubset
Constant for all Han characters used in writing Simplified Chinese,
 including a subset of the CJK unified ideographs as well as Simplified
 Chinese Han characters that may be defined as surrogate characters.
sin(double)
- Static method in class java.lang.
Math
Returns the trigonometric sine of an angle.
sin(double)
- Static method in class java.lang.
StrictMath
Returns the trigonometric sine of an angle.
SIN
- Static variable in class jdk.incubator.vector.
VectorOperators
Produce
sin(a)
.
since()
- Element in annotation interface java.lang.
Deprecated
Returns the version in which the annotated element became deprecated.
SINCE
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SinceTree
representing an
@since
tag.
SinceTree
- Interface in
com.sun.source.doctree
A tree node for an
@since
block tag.
SINGLE
- Enum constant in enum class com.sun.source.doctree.
AttributeTree.ValueKind
The attribute value is enclosed in single quotation marks.
SINGLE_DOCUMENT
- Static variable in class javax.print.attribute.standard.
MultipleDocumentHandling
Single document -- see above for
further information
.
SINGLE_DOCUMENT_NEW_SHEET
- Static variable in class javax.print.attribute.standard.
MultipleDocumentHandling
Single document new sheet -- see above for
further
 information
.
SINGLE_INTERVAL_SELECTION
- Static variable in interface javax.swing.
ListSelectionModel
A value for the selectionMode property: select one contiguous
 range of indices at a time.
SINGLE_LINE
- Static variable in class javax.accessibility.
AccessibleState
Indicates this (text) object can contain only a single line of text.
SINGLE_SELECTION
- Static variable in interface javax.swing.
ListSelectionModel
A value for the selectionMode property: select one list index
 at a time.
SINGLE_STATIC_IMPORT_SUBKIND
- Enum constant in enum class jdk.jshell.
Snippet.SubKind
Single-Static-Import Declaration.
SINGLE_TREE_SELECTION
- Static variable in interface javax.swing.tree.
TreeSelectionModel
Selection can only contain one path at a time.
SINGLE_TYPE_IMPORT_SUBKIND
- Enum constant in enum class jdk.jshell.
Snippet.SubKind
Single-Type-Import Declaration.
SingleClickListener(JList<?>)
- Constructor for class javax.swing.plaf.metal.
MetalFileChooserUI.SingleClickListener
Deprecated.
Constructs an instance of
SingleClickListener
.
SINGLEFRAME
- Static variable in interface java.awt.image.
ImageConsumer
The image contain a single static image.
SINGLEFRAMEDONE
- Static variable in interface java.awt.image.
ImageConsumer
One frame of the image is complete but there are more frames
 to be delivered.
SINGLEPASS
- Static variable in interface java.awt.image.
ImageConsumer
The pixels will be delivered in a single pass.
SinglePixelPackedSampleModel
- Class in
java.awt.image
This class represents pixel data packed such that the N samples which make
  up a single pixel are stored in a single data array element, and each data
  data array element holds samples for only one pixel.
SinglePixelPackedSampleModel(int, int, int, int[])
- Constructor for class java.awt.image.
SinglePixelPackedSampleModel
Constructs a SinglePixelPackedSampleModel with bitMasks.length bands.
SinglePixelPackedSampleModel(int, int, int, int, int[])
- Constructor for class java.awt.image.
SinglePixelPackedSampleModel
Constructs a SinglePixelPackedSampleModel with bitMasks.length bands
 and a scanline stride equal to scanlineStride data array elements.
SingleSelectionModel
- Interface in
javax.swing
A model that supports at most one indexed selection.
singleton(T)
- Static method in class java.util.
Collections
Returns an immutable set containing only the specified object.
singletonKeySelector(Key)
- Static method in class javax.xml.crypto.
KeySelector
Returns a
KeySelector
that always selects the specified
 key, regardless of the
KeyInfo
passed to it.
singletonList(T)
- Static method in class java.util.
Collections
Returns an immutable list containing only the specified object.
singletonMap(K, V)
- Static method in class java.util.
Collections
Returns an immutable map, mapping only the specified key to the
 specified value.
sinh(double)
- Static method in class java.lang.
Math
Returns the hyperbolic sine of a
double
value.
sinh(double)
- Static method in class java.lang.
StrictMath
Returns the hyperbolic sine of a
double
value.
SINH
- Static variable in class jdk.incubator.vector.
VectorOperators
Produce
sinh(a)
.
SINHALA
- Enum constant in enum class java.awt.font.
NumericShaper.Range
The Sinhala range with the Sinhala digits.
SINHALA
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Sinhala".
SINHALA
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Sinhala" Unicode character block.
SINHALA_ARCHAIC_NUMBERS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Sinhala Archaic Numbers" Unicode character block.
sink()
- Method in class java.nio.channels.
Pipe
Returns this pipe's sink channel.
SinkChannel(SelectorProvider)
- Constructor for class java.nio.channels.
Pipe.SinkChannel
Initializes a new instance of this class.
size
- Variable in class java.awt.
Font
The point size of this
Font
, rounded to integer.
size
- Variable in class java.awt.image.
DataBuffer
Usable size of all banks.
size()
- Method in interface com.sun.jdi.request.
StepRequest
size()
- Method in class com.sun.net.httpserver.
Headers
size()
- Method in class java.awt.
Component
Deprecated.
As of JDK version 1.1,
 replaced by
getSize()
.
size()
- Method in class java.awt.
RenderingHints
Returns the number of key-value mappings in this
RenderingHints
.
size()
- Method in class java.beans.beancontext.
BeanContextMembershipEvent
Gets the number of children affected by the notification.
size()
- Method in class java.beans.beancontext.
BeanContextSupport
Gets the number of children currently nested in
 this BeanContext.
size()
- Method in class java.io.
ByteArrayOutputStream
Returns the current size of the buffer.
size()
- Method in class java.io.
CharArrayWriter
Returns the current size of the buffer.
size()
- Method in class java.io.
DataOutputStream
Returns the current value of the counter
written
,
 the number of bytes written to this data output stream so far.
size()
- Method in class java.nio.channels.
AsynchronousFileChannel
Returns the current size of this channel's file.
size()
- Method in class java.nio.channels.
FileChannel
Returns the current size of this channel's file.
size()
- Method in class java.nio.channels.
FileLock
Returns the size of the locked region in bytes.
size()
- Method in interface java.nio.channels.
SeekableByteChannel
Returns the current size of entity to which this channel is connected.
size()
- Method in interface java.nio.file.attribute.
BasicFileAttributes
Returns the size of the file (in bytes).
size()
- Method in class java.security.
IdentityScope
Deprecated.
Returns the number of identities within this identity scope.
size()
- Method in class java.security.
KeyStore
Retrieves the number of entries in this keystore.
size()
- Method in class java.util.
AbstractMap
Returns the number of key-value mappings in this map.
size()
- Method in class java.util.
ArrayDeque
Returns the number of elements in this deque.
size()
- Method in class java.util.
ArrayList
Returns the number of elements in this list.
size()
- Method in class java.util.
BitSet
Returns the number of bits of space actually in use by this
BitSet
to represent bit values.
size()
- Method in interface java.util.
Collection
Returns the number of elements in this collection.
size()
- Method in class java.util.concurrent.
ArrayBlockingQueue
Returns the number of elements in this queue.
size()
- Method in interface java.util.concurrent.
BlockingDeque
Returns the number of elements in this deque.
size()
- Method in class java.util.concurrent.
ConcurrentHashMap.KeySetView
size()
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns the number of key-value mappings in this map.
size()
- Method in class java.util.concurrent.
ConcurrentLinkedDeque
Returns the number of elements in this deque.
size()
- Method in class java.util.concurrent.
ConcurrentLinkedQueue
Returns the number of elements in this queue.
size()
- Method in class java.util.concurrent.
ConcurrentSkipListMap
Returns the number of key-value mappings in this map.
size()
- Method in class java.util.concurrent.
ConcurrentSkipListSet
Returns the number of elements in this set.
size()
- Method in class java.util.concurrent.
CopyOnWriteArrayList
Returns the number of elements in this list.
size()
- Method in class java.util.concurrent.
CopyOnWriteArraySet
Returns the number of elements in this set.
size()
- Method in class java.util.concurrent.
DelayQueue
size()
- Method in class java.util.concurrent.
LinkedBlockingDeque
Returns the number of elements in this deque.
size()
- Method in class java.util.concurrent.
LinkedBlockingQueue
Returns the number of elements in this queue.
size()
- Method in class java.util.concurrent.
LinkedTransferQueue
Returns the number of elements in this queue.
size()
- Method in class java.util.concurrent.
PriorityBlockingQueue
size()
- Method in class java.util.concurrent.
SynchronousQueue
Always returns zero.
size()
- Method in interface java.util.
Deque
Returns the number of elements in this deque.
size()
- Method in class java.util.
Dictionary
Returns the number of entries (distinct keys) in this dictionary.
size()
- Method in class java.util.
EnumMap
Returns the number of key-value mappings in this map.
size()
- Method in class java.util.
HashMap
Returns the number of key-value mappings in this map.
size()
- Method in class java.util.
HashSet
Returns the number of elements in this set (its cardinality).
size()
- Method in class java.util.
Hashtable
Returns the number of keys in this hashtable.
size()
- Method in class java.util.
IdentityHashMap
Returns the number of key-value mappings in this identity hash map.
size()
- Method in class java.util.jar.
Attributes
Returns the number of attributes in this Map.
size()
- Method in class java.util.
LinkedList
Returns the number of elements in this list.
size()
- Method in interface java.util.
List
Returns the number of elements in this list.
size()
- Method in interface java.util.
Map
Returns the number of key-value mappings in this map.
size()
- Method in class java.util.
PriorityQueue
size()
- Method in interface java.util.
Set
Returns the number of elements in this set (its cardinality).
size()
- Method in class java.util.
TreeMap
Returns the number of key-value mappings in this map.
size()
- Method in class java.util.
TreeSet
Returns the number of elements in this set (its cardinality).
size()
- Method in class java.util.
Vector
Returns the number of components in this vector.
size()
- Method in class java.util.
WeakHashMap
Returns the number of key-value mappings in this map.
size()
- Method in class java.util.zip.
ZipFile
Returns the number of entries in the ZIP file.
size()
- Method in class javax.accessibility.
AccessibleRelationSet
Returns the number of relations in the relation set.
size()
- Method in interface javax.management.openmbean.
TabularData
Returns the number of
CompositeData
values (ie the
 number of rows) contained in this
TabularData
instance.
size()
- Method in class javax.management.openmbean.
TabularDataSupport
Returns the number of rows in this
TabularDataSupport
instance.
size()
- Method in class javax.naming.
CompositeName
Retrieves the number of components in this composite name.
size()
- Method in class javax.naming.
CompoundName
Retrieves the number of components in this compound name.
size()
- Method in interface javax.naming.directory.
Attribute
Retrieves the number of values in this attribute.
size()
- Method in interface javax.naming.directory.
Attributes
Retrieves the number of attributes in the attribute set.
size()
- Method in class javax.naming.directory.
BasicAttribute
size()
- Method in class javax.naming.directory.
BasicAttributes
size()
- Method in class javax.naming.ldap.
LdapName
Retrieves the number of components in this LDAP name.
size()
- Method in class javax.naming.ldap.
Rdn
Retrieves the number of attribute type/value pairs in this Rdn.
size()
- Method in interface javax.naming.
Name
Returns the number of components in this name.
size()
- Method in class javax.naming.
Reference
Retrieves the number of addresses in this reference.
size()
- Method in interface javax.print.attribute.
AttributeSet
Returns the number of attributes in this attribute set.
size()
- Method in class javax.print.attribute.
HashAttributeSet
Returns the number of attributes in this attribute set.
size()
- Method in class javax.script.
SimpleBindings
Returns the number of key-value mappings in this map.
size()
- Method in class javax.sound.midi.
Track
Obtains the number of events in this track.
size()
- Method in interface javax.sql.rowset.
CachedRowSet
Returns the number of rows in this
CachedRowSet
object.
size()
- Method in class javax.swing.
ActionMap
Returns the number of bindings in this
ActionMap
.
size()
- Method in class javax.swing.
DefaultListModel
Returns the number of components in this list.
size()
- Method in class javax.swing.
InputMap
Returns the number of
KeyStroke
bindings.
size()
- Method in interface javax.xml.xpath.
XPathNodes
Returns the number of items in the result
size(String)
- Method in interface java.nio.file.attribute.
UserDefinedFileAttributeView
Returns the size of the value of a user-defined attribute.
size(Path)
- Static method in class java.nio.file.
Files
Returns the size of a file (in bytes).
Size
- Static variable in class javax.swing.text.
StyleConstants
Name of the font size.
SIZE
- Static variable in class java.awt.font.
TextAttribute
Attribute key for the font size.
SIZE
- Static variable in class java.lang.
Byte
The number of bits used to represent a
byte
value in two's
 complement binary form.
SIZE
- Static variable in class java.lang.
Character
The number of bits used to represent a
char
value in unsigned
 binary form, constant
16
.
SIZE
- Static variable in class java.lang.
Double
The number of bits used to represent a
double
value.
SIZE
- Static variable in class java.lang.
Float
The number of bits used to represent a
float
value.
SIZE
- Static variable in class java.lang.
Integer
The number of bits used to represent an
int
value in two's
 complement binary form.
SIZE
- Static variable in class java.lang.
Long
The number of bits used to represent a
long
value in two's
 complement binary form.
SIZE
- Static variable in class java.lang.
Short
The number of bits used to represent a
short
value in two's
 complement binary form.
SIZE
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "size"
SIZE_CMD
- Static variable in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
The size button text property.
Size2DSyntax
- Class in
javax.print.attribute
Class
Size2DSyntax
is an abstract base class providing the common
 implementation of all attributes denoting a size in two dimensions.
Size2DSyntax(float, float, int)
- Constructor for class javax.print.attribute.
Size2DSyntax
Construct a new two-dimensional size attribute from the given
 floating-point values.
Size2DSyntax(int, int, int)
- Constructor for class javax.print.attribute.
Size2DSyntax
Construct a new two-dimensional size attribute from the given integer
 values.
sizeAction
- Variable in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
The instance of a
SizeAction
.
SizeAction()
- Constructor for class javax.swing.plaf.basic.
BasicInternalFrameTitlePane.SizeAction
Constructs a new instance of a
SizeAction
.
sizeColumnsToFit(boolean)
- Method in class javax.swing.
JTable
Deprecated.
As of Swing version 1.0.3,
 replaced by
doLayout()
.
sizeColumnsToFit(int)
- Method in class javax.swing.
JTable
Obsolete as of Java 2 platform v1.4.
SIZED
- Static variable in interface java.util.
Spliterator
Characteristic value signifying that the value returned from
estimateSize()
prior to traversal or splitting represents a
 finite size that, in the absence of structural source modification,
 represents an exact count of the number of elements that would be
 encountered by a complete traversal.
SizeLimitExceededException
- Exception Class in
javax.naming
This exception is thrown when a method
 produces a result that exceeds a size-related limit.
SizeLimitExceededException()
- Constructor for exception class javax.naming.
SizeLimitExceededException
Constructs a new instance of SizeLimitExceededException.
SizeLimitExceededException(String)
- Constructor for exception class javax.naming.
SizeLimitExceededException
Constructs a new instance of SizeLimitExceededException using an
 explanation.
SizeRequirements
- Class in
javax.swing
For the convenience of layout managers,
 calculates information about the size and position of components.
SizeRequirements()
- Constructor for class javax.swing.
SizeRequirements
Creates a SizeRequirements object with the minimum, preferred,
 and maximum sizes set to zero and an alignment value of 0.5
 (centered).
SizeRequirements(int, int, int, float)
- Constructor for class javax.swing.
SizeRequirements
Creates a SizeRequirements object with the specified minimum, preferred,
 and maximum sizes and the specified alignment.
sizes
- Variable in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
The size of components.
SizeSequence
- Class in
javax.swing
A
SizeSequence
object
 efficiently maintains an ordered list
 of sizes and corresponding positions.
SizeSequence()
- Constructor for class javax.swing.
SizeSequence
Creates a new
SizeSequence
object
 that contains no entries.
SizeSequence(int)
- Constructor for class javax.swing.
SizeSequence
Creates a new
SizeSequence
object
 that contains the specified number of entries,
 all initialized to have size 0.
SizeSequence(int[])
- Constructor for class javax.swing.
SizeSequence
Creates a new
SizeSequence
object
 that contains the specified sizes.
SizeSequence(int, int)
- Constructor for class javax.swing.
SizeSequence
Creates a new
SizeSequence
object
 that contains the specified number of entries,
 all initialized to have size
value
.
sizeWidthToFit()
- Method in class javax.swing.table.
TableColumn
Resizes the
TableColumn
to fit the width of its header cell.
Skeleton
- Interface in
java.rmi.server
Deprecated.
no replacement.  Skeletons are no longer required for remote
 method calls in the Java 2 platform v1.2 and greater.
SkeletonMismatchException
- Exception Class in
java.rmi.server
Deprecated.
no replacement.  Skeletons are no longer required for remote
 method calls in the Java 2 platform v1.2 and greater.
SkeletonMismatchException(String)
- Constructor for exception class java.rmi.server.
SkeletonMismatchException
Deprecated.
no replacement
SkeletonNotFoundException
- Exception Class in
java.rmi.server
Deprecated.
no replacement.  Skeletons are no longer required for remote
 method calls in the Java 2 platform v1.2 and greater.
SkeletonNotFoundException(String)
- Constructor for exception class java.rmi.server.
SkeletonNotFoundException
Deprecated.
Constructs a
SkeletonNotFoundException
with the specified
 detail message.
SkeletonNotFoundException(String, Exception)
- Constructor for exception class java.rmi.server.
SkeletonNotFoundException
Deprecated.
Constructs a
SkeletonNotFoundException
with the specified
 detail message and nested exception.
skip(long)
- Method in class java.io.
BufferedInputStream
See the general contract of the
skip
method of
InputStream
.
skip(long)
- Method in class java.io.
ByteArrayInputStream
Skips
n
bytes of input from this input stream.
skip(long)
- Method in class java.io.
CharArrayReader
Skips characters.
skip(long)
- Method in class java.io.
FileInputStream
Skips over and discards
n
bytes of data from the
 input stream.
skip(long)
- Method in class java.io.
FilterInputStream
Skips over and discards
n
bytes of data from the
 input stream.
skip(long)
- Method in class java.io.
FilterReader
Skips characters.
skip(long)
- Method in class java.io.
InputStream
Skips over and discards
n
bytes of data from this input
 stream.
skip(long)
- Method in class java.io.
LineNumberInputStream
Deprecated.
Skips over and discards
n
bytes of data from this
 input stream.
skip(long)
- Method in interface java.io.
ObjectInput
Skips n bytes of input.
skip(long)
- Method in class java.io.
PushbackInputStream
Skips over and discards
n
bytes of data from this
 input stream.
skip(long)
- Method in class java.io.
Reader
Skips characters.
skip(long)
- Method in class java.io.
StringBufferInputStream
Deprecated.
Skips
n
bytes of input from this input stream.
skip(long)
- Method in class java.io.
StringReader
Skips characters.
skip(long)
- Method in interface java.util.stream.
DoubleStream
Returns a stream consisting of the remaining elements of this stream
 after discarding the first
n
elements of the stream.
skip(long)
- Method in interface java.util.stream.
IntStream
Returns a stream consisting of the remaining elements of this stream
 after discarding the first
n
elements of the stream.
skip(long)
- Method in interface java.util.stream.
LongStream
Returns a stream consisting of the remaining elements of this stream
 after discarding the first
n
elements of the stream.
skip(long)
- Method in interface java.util.stream.
Stream
Returns a stream consisting of the remaining elements of this stream
 after discarding the first
n
elements of the stream.
skip(long)
- Method in class java.util.zip.
CheckedInputStream
Skips specified number of bytes of input.
skip(long)
- Method in class java.util.zip.
DeflaterInputStream
Skips over and discards data from the input stream.
skip(long)
- Method in class java.util.zip.
InflaterInputStream
Skips specified number of bytes of uncompressed data.
skip(long)
- Method in class java.util.zip.
ZipInputStream
Skips over and discards
n
bytes of data from this input stream
 for the current ZIP entry.
skip(long)
- Method in class javax.crypto.
CipherInputStream
Skips
n
bytes of input from the bytes that can be read
 from this input stream without blocking.
skip(long)
- Method in class javax.sound.sampled.
AudioInputStream
Skips over and discards a specified number of bytes from this audio input
 stream.
skip(long)
- Method in class javax.swing.
ProgressMonitorInputStream
Overrides
FilterInputStream.skip
to update the progress monitor after the skip.
skip(String)
- Method in class java.util.
Scanner
Skips input that matches a pattern constructed from the specified
 string.
skip(Pattern)
- Method in class java.util.
Scanner
Skips input that matches the specified pattern, ignoring delimiters.
SKIP_SIBLINGS
- Enum constant in enum class java.nio.file.
FileVisitResult
Continue without visiting the
siblings
of this file or directory.
SKIP_SUBTREE
- Enum constant in enum class java.nio.file.
FileVisitResult
Continue without visiting the entries in this directory.
skipBytes(int)
- Method in interface java.io.
DataInput
Makes an attempt to skip over
n
bytes
 of data from the input
 stream, discarding the skipped bytes.
skipBytes(int)
- Method in class java.io.
DataInputStream
See the general contract of the
skipBytes
method of
DataInput
.
skipBytes(int)
- Method in class java.io.
ObjectInputStream
Skips bytes.
skipBytes(int)
- Method in class java.io.
RandomAccessFile
Attempts to skip over
n
bytes of input discarding the
 skipped bytes.
skipBytes(int)
- Method in interface javax.imageio.stream.
ImageInputStream
Moves the stream position forward by a given number of bytes.
skipBytes(int)
- Method in class javax.imageio.stream.
ImageInputStreamImpl
Advances the current stream position by calling
seek(getStreamPosition() + n)
.
skipBytes(long)
- Method in interface javax.imageio.stream.
ImageInputStream
Moves the stream position forward by a given number of bytes.
skipBytes(long)
- Method in class javax.imageio.stream.
ImageInputStreamImpl
Advances the current stream position by calling
seek(getStreamPosition() + n)
.
skipNBytes(long)
- Method in class java.io.
InputStream
Skips over and discards exactly
n
bytes of data from this input
 stream.
skipNBytes(long)
- Method in class java.util.zip.
ZipInputStream
Skips over and discards exactly
n
bytes of data from this input
 stream for the current ZIP entry.
skippedEntity(String)
- Method in interface org.xml.sax.
ContentHandler
Receive notification of a skipped entity.
skippedEntity(String)
- Method in class org.xml.sax.helpers.
DefaultHandler
Receive notification of a skipped entity.
skippedEntity(String)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Filter a skipped entity event.
skippedEntity(String)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Adapt a SAX2 skipped entity event.
skipReferral()
- Method in exception class javax.naming.
ReferralException
Discards the referral about to be processed.
slashSlashComments(boolean)
- Method in class java.io.
StreamTokenizer
Determines whether or not the tokenizer recognizes C++-style comments.
slashStarComments(boolean)
- Method in class java.io.
StreamTokenizer
Determines whether or not the tokenizer recognizes C-style comments.
sleep(long)
- Static method in class java.lang.
Thread
Causes the currently executing thread to sleep (temporarily cease
 execution) for the specified number of milliseconds, subject to
 the precision and accuracy of system timers and schedulers.
sleep(long)
- Method in enum class java.util.concurrent.
TimeUnit
Performs a
Thread.sleep
using
 this time unit.
sleep(long, int)
- Static method in class java.lang.
Thread
Causes the currently executing thread to sleep (temporarily cease
 execution) for the specified number of milliseconds plus the specified
 number of nanoseconds, subject to the precision and accuracy of system
 timers and schedulers.
sleep(Duration)
- Static method in class java.lang.
Thread
Causes the currently executing thread to sleep (temporarily cease
 execution) for the specified duration, subject to the precision and
 accuracy of system timers and schedulers.
slice()
- Method in class java.nio.
Buffer
Creates a new buffer whose content is a shared subsequence of
 this buffer's content.
slice()
- Method in class java.nio.
ByteBuffer
Creates a new byte buffer whose content is a shared subsequence of
 this buffer's content.
slice()
- Method in class java.nio.
CharBuffer
Creates a new char buffer whose content is a shared subsequence of
 this buffer's content.
slice()
- Method in class java.nio.
DoubleBuffer
Creates a new double buffer whose content is a shared subsequence of
 this buffer's content.
slice()
- Method in class java.nio.
FloatBuffer
Creates a new float buffer whose content is a shared subsequence of
 this buffer's content.
slice()
- Method in class java.nio.
IntBuffer
Creates a new int buffer whose content is a shared subsequence of
 this buffer's content.
slice()
- Method in class java.nio.
LongBuffer
Creates a new long buffer whose content is a shared subsequence of
 this buffer's content.
slice()
- Method in class java.nio.
MappedByteBuffer
Creates a new byte buffer whose content is a shared subsequence of
 this buffer's content.
slice()
- Method in class java.nio.
ShortBuffer
Creates a new short buffer whose content is a shared subsequence of
 this buffer's content.
slice(int)
- Method in class jdk.incubator.vector.
ByteVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector.
slice(int)
- Method in class jdk.incubator.vector.
DoubleVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector.
slice(int)
- Method in class jdk.incubator.vector.
FloatVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector.
slice(int)
- Method in class jdk.incubator.vector.
IntVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector.
slice(int)
- Method in class jdk.incubator.vector.
LongVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector.
slice(int)
- Method in class jdk.incubator.vector.
ShortVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector.
slice(int)
- Method in class jdk.incubator.vector.
Vector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector.
slice(int, int)
- Method in class java.nio.
Buffer
Creates a new buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, int)
- Method in class java.nio.
ByteBuffer
Creates a new byte buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, int)
- Method in class java.nio.
CharBuffer
Creates a new char buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, int)
- Method in class java.nio.
DoubleBuffer
Creates a new double buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, int)
- Method in class java.nio.
FloatBuffer
Creates a new float buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, int)
- Method in class java.nio.
IntBuffer
Creates a new int buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, int)
- Method in class java.nio.
LongBuffer
Creates a new long buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, int)
- Method in class java.nio.
MappedByteBuffer
Creates a new byte buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, int)
- Method in class java.nio.
ShortBuffer
Creates a new short buffer whose content is a shared subsequence of
 this buffer's content.
slice(int, Vector<E>)
- Method in class jdk.incubator.vector.
Vector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<E>, VectorMask<E>)
- Method in class jdk.incubator.vector.
Vector
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Byte>, VectorMask<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Double>, VectorMask<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Float>, VectorMask<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Integer>, VectorMask<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Long>)
- Method in class jdk.incubator.vector.
LongVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Long>, VectorMask<Long>)
- Method in class jdk.incubator.vector.
LongVector
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Slices a segment of adjacent lanes, starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
slice(int, Vector<Short>, VectorMask<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Slices a segment of adjacent lanes
 under the control of a mask,
 starting at a given
origin
lane in the current vector, and continuing (as
 needed) into an immediately following vector.
sliceHandle(MemoryLayout.PathElement...)
- Method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Creates a method handle which, given a memory segment, returns a
slice
PREVIEW
corresponding to the layout selected by the given layout path, where the initial layout in the path is this layout.
slicingAllocator(MemorySegment)
- Static method in interface java.lang.foreign.
SegmentAllocator
PREVIEW
Returns a segment allocator which responds to allocation requests by returning consecutive slices
 obtained from the provided segment.
Slicing memory segments
- Search tag in interface java.lang.foreign.MemorySegment
Section
slider
- Variable in class javax.swing.plaf.basic.
BasicSliderUI
Slider
SLIDER
- Static variable in class javax.accessibility.
AccessibleRole
An object that allows the user to select from a bounded range.
SLIDER
- Static variable in class javax.swing.plaf.synth.
Region
Slider region.
SLIDER_FILL
- Variable in class javax.swing.plaf.metal.
MetalSliderUI
Property for
JSlider.isFilled
.
SLIDER_THUMB
- Static variable in class javax.swing.plaf.synth.
Region
Thumb of the Slider.
SLIDER_TRACK
- Static variable in class javax.swing.plaf.synth.
Region
Track of the Slider.
sliderModel
- Variable in class javax.swing.
JSlider
The data model that handles the numeric maximum value,
 minimum value, and current-position value for the slider.
SliderUI
- Class in
javax.swing.plaf
Pluggable look and feel interface for JSlider.
SliderUI()
- Constructor for class javax.swing.plaf.
SliderUI
Constructor for subclasses to call.
SMALL
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <small>
SMALL_FORM_VARIANTS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Small Form Variants" Unicode character block.
SMALL_ICON
- Static variable in interface javax.swing.
Action
The key used for storing a small
Icon
, such
 as
ImageIcon
.
SMALL_KANA_EXTENSION
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Small Kana Extension" Unicode
 character block.
SMALL_KEY
- Static variable in class javax.swing.plaf.nimbus.
NimbusStyle
Small key
SMALL_SCALE
- Static variable in class javax.swing.plaf.nimbus.
NimbusStyle
Small scale
SmallAttributeSet(Object[])
- Constructor for class javax.swing.text.
StyleContext.SmallAttributeSet
Constructs a SmallAttributeSet.
SmallAttributeSet(AttributeSet)
- Constructor for class javax.swing.text.
StyleContext.SmallAttributeSet
Constructs a SmallAttributeSet.
SMALLINT
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
SMALLINT
.
SMALLINT
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred
 to as a type code, that identifies the generic SQL type
SMALLINT
.
SMART
- Enum constant in enum class java.time.format.
ResolverStyle
Style to resolve dates and times in a smart, or intelligent, manner.
SMPTE_24
- Static variable in class javax.sound.midi.
Sequence
The SMPTE-based timing type with 24 frames per second (resolution is
 expressed in ticks per frame).
SMPTE_25
- Static variable in class javax.sound.midi.
Sequence
The SMPTE-based timing type with 25 frames per second (resolution is
 expressed in ticks per frame).
SMPTE_30
- Static variable in class javax.sound.midi.
Sequence
The SMPTE-based timing type with 30 frames per second (resolution is
 expressed in ticks per frame).
SMPTE_30DROP
- Static variable in class javax.sound.midi.
Sequence
The SMPTE-based timing type with 29.97 frames per second (resolution is
 expressed in ticks per frame).
snapshotItem(int)
- Method in interface org.w3c.dom.xpath.
XPathResult
Returns the
index
th item in the snapshot collection.
snapToTicks
- Variable in class javax.swing.
JSlider
If true, the knob (and the data value it represents)
 resolve to the closest tick mark next to where the user
 positioned the knob.
SND
- Static variable in class javax.sound.sampled.
AudioFileFormat.Type
Specifies a SND file.
SNI_HOST_NAME
- Static variable in class javax.net.ssl.
StandardConstants
The "host_name" type representing of a DNS hostname
 (see
SNIHostName
) in a Server Name Indication (SNI) extension.
SNIHostName
- Class in
javax.net.ssl
Instances of this class represent a server name of type
host_name
in a Server Name
 Indication (SNI) extension.
SNIHostName(byte[])
- Constructor for class javax.net.ssl.
SNIHostName
Creates an
SNIHostName
using the specified encoded value.
SNIHostName(String)
- Constructor for class javax.net.ssl.
SNIHostName
Creates an
SNIHostName
using the specified hostname.
SNIMatcher
- Class in
javax.net.ssl
Instances of this class represent a matcher that performs match
 operations on an
SNIServerName
instance.
SNIMatcher(int)
- Constructor for class javax.net.ssl.
SNIMatcher
Creates an
SNIMatcher
using the specified server name type.
snippet()
- Method in class jdk.jshell.
SnippetEvent
The Snippet which has changed
Snippet
- Class in
jdk.jshell
A Snippet represents a snippet of Java source code as passed to
JShell.eval(java.lang.String)
.
SNIPPET
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SnippetTree
representing an
@snippet
tag.
SNIPPET_PATH
- Enum constant in enum class javax.tools.
DocumentationTool.Location
Location to search for snippets.
Snippet.Kind
- Enum Class in
jdk.jshell
Describes the general kind of snippet.
Snippet.Status
- Enum Class in
jdk.jshell
Describes the current state of a Snippet.
Snippet.SubKind
- Enum Class in
jdk.jshell
The detailed variety of a snippet.
SnippetEvent
- Class in
jdk.jshell
A description of a change to a Snippet.
snippets()
- Method in class jdk.jshell.
JShell
Return all snippets.
SnippetTree
- Interface in
com.sun.source.doctree
A tree node for an
@snippet
inline tag.
SNIServerName
- Class in
javax.net.ssl
Instances of this class represent a server name in a Server Name
 Indication (SNI) extension.
SNIServerName(int, byte[])
- Constructor for class javax.net.ssl.
SNIServerName
Creates an
SNIServerName
using the specified name type and
 encoded value.
SO_BINDADDR
- Static variable in interface java.net.
SocketOptions
Fetch the local address binding of a socket (this option cannot
 be "set" only "gotten", since sockets are bound at creation time,
 and so the locally bound address cannot be changed).
SO_BROADCAST
- Static variable in interface java.net.
SocketOptions
Sets SO_BROADCAST for a socket.
SO_BROADCAST
- Static variable in class java.net.
StandardSocketOptions
Allow transmission of broadcast datagrams.
SO_INCOMING_NAPI_ID
- Static variable in class jdk.net.
ExtendedSocketOptions
Identifies the receive queue that the last incoming packet for the socket
 was received on.
SO_KEEPALIVE
- Static variable in interface java.net.
SocketOptions
When the keepalive option is set for a TCP socket and no data
 has been exchanged across the socket in either direction for
 2 hours (NOTE: the actual value is implementation dependent),
 TCP automatically sends a keepalive probe to the peer.
SO_KEEPALIVE
- Static variable in class java.net.
StandardSocketOptions
Keep connection alive.
SO_LINGER
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
Linger on close if data is present.
SO_LINGER
- Static variable in interface java.net.
SocketOptions
Specify a linger-on-close timeout.
SO_LINGER
- Static variable in class java.net.
StandardSocketOptions
Linger on close if data is present.
SO_OOBINLINE
- Static variable in interface java.net.
SocketOptions
When the OOBINLINE option is set, any TCP urgent data received on
 the socket will be received through the socket input stream.
SO_PEERCRED
- Static variable in class jdk.net.
ExtendedSocketOptions
Unix Domain peer credentials.
SO_RCVBUF
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
The size of the socket receive buffer.
SO_RCVBUF
- Static variable in interface java.net.
SocketOptions
Set a hint the size of the underlying buffers used by the
 platform for incoming network I/O.
SO_RCVBUF
- Static variable in class java.net.
StandardSocketOptions
The size of the socket receive buffer.
SO_REUSEADDR
- Static variable in interface java.net.
SocketOptions
Sets SO_REUSEADDR for a socket.
SO_REUSEADDR
- Static variable in class java.net.
StandardSocketOptions
Re-use address.
SO_REUSEPORT
- Static variable in interface java.net.
SocketOptions
Sets SO_REUSEPORT for a socket.
SO_REUSEPORT
- Static variable in class java.net.
StandardSocketOptions
Re-use port.
SO_SNDBUF
- Static variable in class com.sun.nio.sctp.
SctpStandardSocketOptions
The size of the socket send buffer.
SO_SNDBUF
- Static variable in interface java.net.
SocketOptions
Set a hint the size of the underlying buffers used by the
 platform for outgoing network I/O.
SO_SNDBUF
- Static variable in class java.net.
StandardSocketOptions
The size of the socket send buffer.
SO_TIMEOUT
- Static variable in interface java.net.
SocketOptions
Set a timeout on blocking Socket operations:
socket()
- Method in class java.nio.channels.
DatagramChannel
Retrieves a datagram socket associated with this channel.
socket()
- Method in class java.nio.channels.
ServerSocketChannel
Retrieves a server socket associated with this channel.
socket()
- Method in class java.nio.channels.
SocketChannel
Retrieves a socket associated with this channel.
Socket
- Class in
java.net
This class implements client sockets (also called just
 "sockets").
Socket()
- Constructor for class java.net.
Socket
Creates an unconnected Socket.
Socket(String, int)
- Constructor for class java.net.
Socket
Creates a stream socket and connects it to the specified port
 number on the named host.
Socket(String, int, boolean)
- Constructor for class java.net.
Socket
Deprecated.
Use DatagramSocket instead for UDP transport.
Socket(String, int, InetAddress, int)
- Constructor for class java.net.
Socket
Creates a socket and connects it to the specified remote host on
 the specified remote port.
Socket(InetAddress, int)
- Constructor for class java.net.
Socket
Creates a stream socket and connects it to the specified port
 number at the specified IP address.
Socket(InetAddress, int, boolean)
- Constructor for class java.net.
Socket
Deprecated.
Use DatagramSocket instead for UDP transport.
Socket(InetAddress, int, InetAddress, int)
- Constructor for class java.net.
Socket
Creates a socket and connects it to the specified remote address on
 the specified remote port.
Socket(Proxy)
- Constructor for class java.net.
Socket
Creates an unconnected socket, specifying the type of proxy, if any,
 that should be used regardless of any other settings.
Socket(SocketImpl)
- Constructor for class java.net.
Socket
Creates an unconnected Socket with a user-specified
 SocketImpl.
SocketAddress
- Class in
java.net
This class represents a Socket Address with no protocol attachment.
SocketAddress()
- Constructor for class java.net.
SocketAddress
Constructor for subclasses to call.
SocketChannel
- Class in
java.nio.channels
A selectable channel for stream-oriented connecting sockets.
SocketChannel(SelectorProvider)
- Constructor for class java.nio.channels.
SocketChannel
Initializes a new instance of this class.
SocketException
- Exception Class in
java.net
Thrown to indicate that there is an error creating or accessing a Socket.
SocketException()
- Constructor for exception class java.net.
SocketException
Constructs a new
SocketException
with no detail message.
SocketException(String)
- Constructor for exception class java.net.
SocketException
Constructs a new
SocketException
with the
 specified detail message.
SocketException(String, Throwable)
- Constructor for exception class java.net.
SocketException
Constructs a new
SocketException
with the
 specified detail message and cause.
SocketException(Throwable)
- Constructor for exception class java.net.
SocketException
Constructs a new
SocketException
with the
 specified cause.
SocketFactory
- Class in
javax.net
This class creates sockets.
SocketFactory()
- Constructor for class javax.net.
SocketFactory
Creates a
SocketFactory
.
SocketHandler
- Class in
java.util.logging
Simple network logging
Handler
.
SocketHandler()
- Constructor for class java.util.logging.
SocketHandler
Create a
SocketHandler
, using only
LogManager
properties
 (or their defaults).
SocketHandler(String, int)
- Constructor for class java.util.logging.
SocketHandler
Construct a
SocketHandler
using a specified host and port.
SocketImpl
- Class in
java.net
The abstract class
SocketImpl
is a common superclass
 of all classes that actually implement sockets.
SocketImpl()
- Constructor for class java.net.
SocketImpl
Initialize a new instance of this class
SocketImplFactory
- Interface in
java.net
This interface defines a factory for socket implementations.
SocketOption<T>
- Interface in
java.net
A socket option associated with a socket.
SocketOptions
- Interface in
java.net
Interface of methods to get/set socket options.
SocketPermission
- Class in
java.net
This class represents access to a network via sockets.
SocketPermission(String, String)
- Constructor for class java.net.
SocketPermission
Creates a new SocketPermission object with the specified actions.
Sockets
- Search tag in package java.net
Section
Sockets
- Class in
jdk.net
Deprecated.
Java SE 9 added standard methods to set/get socket options, and retrieve the per-Socket
 supported options effectively rendering this API redundant. Please refer to the corresponding
 socket's class for the equivalent method to set/get a socket option or retrieve available socket options.
SocketSecurityException
- Exception Class in
java.rmi.server
Deprecated.
This class is obsolete. Use
ExportException
instead.
SocketSecurityException(String)
- Constructor for exception class java.rmi.server.
SocketSecurityException
Deprecated.
Constructs an
SocketSecurityException
with the specified
 detail message.
SocketSecurityException(String, Exception)
- Constructor for exception class java.rmi.server.
SocketSecurityException
Deprecated.
Constructs an
SocketSecurityException
with the specified
 detail message and nested exception.
SocketTimeoutException
- Exception Class in
java.net
Signals that a timeout has occurred on a socket read or accept.
SocketTimeoutException()
- Constructor for exception class java.net.
SocketTimeoutException
Construct a new SocketTimeoutException with no detailed message.
SocketTimeoutException(String)
- Constructor for exception class java.net.
SocketTimeoutException
Constructs a new SocketTimeoutException with a detail
 message.
SOCKS
- Enum constant in enum class java.net.
Proxy.Type
Represents a SOCKS (V4 or V5) proxy.
socksProxyHost
- Search tag in package java.net
System Property
socksProxyPort
- Search tag in package java.net
System Property
socksProxyVersion
- Search tag in package java.net
System Property
SOFT_FAIL
- Enum constant in enum class java.security.cert.
PKIXRevocationChecker.Option
Allow revocation check to succeed if the revocation status cannot be
 determined for one of the following reasons:
 
  The CRL or OCSP response cannot be obtained because of a
      network error.
SoftBevelBorder
- Class in
javax.swing.border
A class which implements a raised or lowered bevel with
 softened corners.
SoftBevelBorder(int)
- Constructor for class javax.swing.border.
SoftBevelBorder
Creates a bevel border with the specified type and whose
 colors will be derived from the background color of the
 component passed into the paintBorder method.
SoftBevelBorder(int, Color, Color)
- Constructor for class javax.swing.border.
SoftBevelBorder
Creates a bevel border with the specified type, highlight and
 shadow colors.
SoftBevelBorder(int, Color, Color, Color, Color)
- Constructor for class javax.swing.border.
SoftBevelBorder
Creates a bevel border with the specified type, highlight
 shadow colors.
SoftReference<T>
- Class in
java.lang.ref
Soft reference objects, which are cleared at the discretion of the garbage
 collector in response to memory demand.
SoftReference(T)
- Constructor for class java.lang.ref.
SoftReference
Creates a new soft reference that refers to the given object.
SoftReference(T, ReferenceQueue<? super T>)
- Constructor for class java.lang.ref.
SoftReference
Creates a new soft reference that refers to the given object and is
 registered with the given queue.
SOGDIAN
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Sogdian".
SOGDIAN
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Sogdian" Unicode
 character block.
solveCubic(double[])
- Static method in class java.awt.geom.
CubicCurve2D
Solves the cubic whose coefficients are in the
eqn
array and places the non-complex roots back into the same array,
 returning the number of roots.
solveCubic(double[], double[])
- Static method in class java.awt.geom.
CubicCurve2D
Solve the cubic whose coefficients are in the
eqn
array and place the non-complex roots into the
res
array, returning the number of roots.
solveQuadratic(double[])
- Static method in class java.awt.geom.
QuadCurve2D
Solves the quadratic whose coefficients are in the
eqn
array and places the non-complex roots back into the same array,
 returning the number of roots.
solveQuadratic(double[], double[])
- Static method in class java.awt.geom.
QuadCurve2D
Solves the quadratic whose coefficients are in the
eqn
array and places the non-complex roots into the
res
array, returning the number of roots.
SOMEBITS
- Static variable in interface java.awt.image.
ImageObserver
This flag in the infoflags argument to imageUpdate indicates that
 more pixels needed for drawing a scaled variation of the image
 are available.
SONG_POSITION_POINTER
- Static variable in class javax.sound.midi.
ShortMessage
Status byte for Song Position Pointer message (0xF2, or 242).
SONG_SELECT
- Static variable in class javax.sound.midi.
ShortMessage
Status byte for MIDI Song Select message (0xF3, or 243).
SORA_SOMPENG
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Sora Sompeng".
SORA_SOMPENG
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Sora Sompeng" Unicode character block.
sort()
- Method in class javax.swing.
DefaultRowSorter
Sorts and filters the rows in the view based on the sort keys
 of the columns currently being sorted and the filter, if any,
 associated with this sorter.
sort(byte[])
- Static method in class java.util.
Arrays
Sorts the specified array into ascending numerical order.
sort(byte[], int, int)
- Static method in class java.util.
Arrays
Sorts the specified range of the array into ascending order.
sort(char[])
- Static method in class java.util.
Arrays
Sorts the specified array into ascending numerical order.
sort(char[], int, int)
- Static method in class java.util.
Arrays
Sorts the specified range of the array into ascending order.
sort(double[])
- Static method in class java.util.
Arrays
Sorts the specified array into ascending numerical order.
sort(double[], int, int)
- Static method in class java.util.
Arrays
Sorts the specified range of the array into ascending order.
sort(float[])
- Static method in class java.util.
Arrays
Sorts the specified array into ascending numerical order.
sort(float[], int, int)
- Static method in class java.util.
Arrays
Sorts the specified range of the array into ascending order.
sort(int[])
- Static method in class java.util.
Arrays
Sorts the specified array into ascending numerical order.
sort(int[], int, int)
- Static method in class java.util.
Arrays
Sorts the specified range of the array into ascending order.
sort(long[])
- Static method in class java.util.
Arrays
Sorts the specified array into ascending numerical order.
sort(long[], int, int)
- Static method in class java.util.
Arrays
Sorts the specified range of the array into ascending order.
sort(short[])
- Static method in class java.util.
Arrays
Sorts the specified array into ascending numerical order.
sort(short[], int, int)
- Static method in class java.util.
Arrays
Sorts the specified range of the array into ascending order.
sort(Object[])
- Static method in class java.util.
Arrays
Sorts the specified array of objects into ascending order, according
 to the
natural ordering
of its elements.
sort(Object[], int, int)
- Static method in class java.util.
Arrays
Sorts the specified range of the specified array of objects into
 ascending order, according to the
natural ordering
of its
 elements.
sort(Comparator<? super E>)
- Method in interface java.util.
List
Sorts this list according to the order induced by the specified
Comparator
.
sort(List<T>)
- Static method in class java.util.
Collections
Sorts the specified list into ascending order, according to the
natural ordering
of its elements.
sort(List<T>, Comparator<? super T>)
- Static method in class java.util.
Collections
Sorts the specified list according to the order induced by the
 specified comparator.
sort(Vector<? extends File>)
- Method in class javax.swing.plaf.basic.
BasicDirectoryModel
Sorts a list of files.
sort(T[], int, int, Comparator<? super T>)
- Static method in class java.util.
Arrays
Sorts the specified range of the specified array of objects according
 to the order induced by the specified comparator.
sort(T[], Comparator<? super T>)
- Static method in class java.util.
Arrays
Sorts the specified array of objects according to the order induced by
 the specified comparator.
SORT_ORDER_CHANGED
- Enum constant in enum class javax.swing.event.
RowSorterEvent.Type
Indicates the sort order has changed.
SortControl
- Class in
javax.naming.ldap
Requests that the results of a search operation be sorted by the LDAP server
 before being returned.
SortControl(String[], boolean)
- Constructor for class javax.naming.ldap.
SortControl
Constructs a control to sort on a list of attributes in ascending order.
SortControl(String, boolean)
- Constructor for class javax.naming.ldap.
SortControl
Constructs a control to sort on a single attribute in ascending order.
SortControl(SortKey[], boolean)
- Constructor for class javax.naming.ldap.
SortControl
Constructs a control to sort on a list of sort keys.
sorted()
- Method in interface java.util.stream.
DoubleStream
Returns a stream consisting of the elements of this stream in sorted
 order.
sorted()
- Method in interface java.util.stream.
IntStream
Returns a stream consisting of the elements of this stream in sorted
 order.
sorted()
- Method in interface java.util.stream.
LongStream
Returns a stream consisting of the elements of this stream in sorted
 order.
sorted()
- Method in interface java.util.stream.
Stream
Returns a stream consisting of the elements of this stream, sorted
 according to natural order.
sorted(Comparator<? super T>)
- Method in interface java.util.stream.
Stream
Returns a stream consisting of the elements of this stream, sorted
 according to the provided
Comparator
.
SORTED
- Enum constant in enum class javax.swing.event.
RowSorterEvent.Type
Indicates the contents have been newly sorted or
 transformed in some way.
SORTED
- Static variable in interface java.util.
Spliterator
Characteristic value signifying that encounter order follows a defined
 sort order.
SortedMap<K,
V>
- Interface in
java.util
A
Map
that further provides a
total ordering
on its keys.
SortedSet<E>
- Interface in
java.util
A
Set
that further provides a
total ordering
on its elements.
sorterChanged(RowSorterEvent)
- Method in interface javax.swing.event.
RowSorterListener
Notification that the
RowSorter
has changed.
sorterChanged(RowSorterEvent)
- Method in class javax.swing.
JTable
RowSorterListener
notification that the
RowSorter
has changed in some way.
SortingFocusTraversalPolicy
- Class in
javax.swing
A FocusTraversalPolicy that determines traversal order by sorting the
 Components of a focus traversal cycle based on a given Comparator.
SortingFocusTraversalPolicy()
- Constructor for class javax.swing.
SortingFocusTraversalPolicy
Constructs a SortingFocusTraversalPolicy without a Comparator.
SortingFocusTraversalPolicy(Comparator<? super Component>)
- Constructor for class javax.swing.
SortingFocusTraversalPolicy
Constructs a SortingFocusTraversalPolicy with the specified Comparator.
SortKey
- Class in
javax.naming.ldap
A sort key and its associated sort parameters.
SortKey(int, SortOrder)
- Constructor for class javax.swing.
RowSorter.SortKey
Creates a
SortKey
for the specified column with
 the specified sort order.
SortKey(String)
- Constructor for class javax.naming.ldap.
SortKey
Creates the default sort key for an attribute.
SortKey(String, boolean, String)
- Constructor for class javax.naming.ldap.
SortKey
Creates a sort key for an attribute.
SortOrder
- Enum Class in
javax.swing
SortOrder is an enumeration of the possible sort orderings.
SortResponseControl
- Class in
javax.naming.ldap
Indicates whether the requested sort of search results was successful or not.
SortResponseControl(String, boolean, byte[])
- Constructor for class javax.naming.ldap.
SortResponseControl
Constructs a control to indicate the outcome of a sort request.
Soundbank
- Interface in
javax.sound.midi
A
Soundbank
contains a set of
Instruments
that can be loaded
 into a
Synthesizer
.
SoundbankReader
- Class in
javax.sound.midi.spi
A
SoundbankReader
supplies soundbank file-reading services.
SoundbankReader()
- Constructor for class javax.sound.midi.spi.
SoundbankReader
Constructor for subclasses to call.
SoundbankResource
- Class in
javax.sound.midi
A
SoundbankResource
represents any audio resource stored in a
Soundbank
.
SoundbankResource(Soundbank, String, Class<?>)
- Constructor for class javax.sound.midi.
SoundbankResource
Constructs a new
SoundbankResource
from the given sound bank and
 wavetable index.
source
- Variable in class com.sun.java.accessibility.util.
Translator
The source object needing translating.
source
- Variable in class java.util.
EventObject
The object on which the Event initially occurred.
source
- Variable in class javax.management.
Notification
This field hides the
EventObject.source
field in the
 parent class to make it non-transient and therefore part of the
 serialized form.
source
- Variable in class javax.swing.plaf.basic.
BasicTreeUI.MouseInputHandler
Source that events are coming from.
source()
- Method in class java.lang.module.
ModuleDescriptor.Exports
Returns the package name.
source()
- Method in class java.lang.module.
ModuleDescriptor.Opens
Returns the package name.
source()
- Method in class java.nio.channels.
Pipe
Returns this pipe's source channel.
source()
- Method in class jdk.jshell.
Snippet
Return the source code of the snippet.
source()
- Method in interface jdk.jshell.
SourceCodeAnalysis.CompletionInfo
Source code for the first Snippet of code input.
source()
- Method in interface jdk.jshell.
SourceCodeAnalysis.SnippetWrapper
Returns the input that is wrapped.
Source
- Interface in
javax.xml.transform
An object that implements this interface contains the information
 needed to act as source input (XML source or transformation instructions).
SOURCE
- Enum constant in enum class java.lang.annotation.
RetentionPolicy
Annotations are to be discarded by the compiler.
SOURCE
- Enum constant in enum class javax.tools.
JavaFileObject.Kind
Source files written in the Java programming language.
SOURCE_OUTPUT
- Enum constant in enum class javax.tools.
StandardLocation
Location of new source files.
SOURCE_PATH
- Enum constant in enum class javax.tools.
StandardLocation
Location to search for existing source files.
sourceActions
- Variable in class java.awt.dnd.
DragGestureRecognizer
An
int
representing
 the type(s) of action(s) used
 in this Drag and Drop operation.
sourceAddress()
- Method in class java.nio.channels.
MembershipKey
Returns the source address if this membership key is source-specific,
 or
null
if this membership is not source-specific.
sourceBands
- Variable in class javax.imageio.
IIOParam
An array of
int
s indicating which source bands
 will be used, or
null
.
SourceChannel(SelectorProvider)
- Constructor for class java.nio.channels.
Pipe.SourceChannel
Constructs a new instance of this class.
sourceCodeAnalysis()
- Method in class jdk.jshell.
JShell
Access to source code analysis functionality.
SourceCodeAnalysis
- Class in
jdk.jshell
Provides analysis utilities for source code input.
SourceCodeAnalysis.Attribute
- Enum Class in
jdk.jshell
A span attribute which can be used to derive a coloring.
SourceCodeAnalysis.Completeness
- Enum Class in
jdk.jshell
Describes the completeness of the given input.
SourceCodeAnalysis.CompletionInfo
- Interface in
jdk.jshell
The result of
analyzeCompletion(String input)
.
SourceCodeAnalysis.Documentation
- Interface in
jdk.jshell
A documentation for a candidate for continuation of the given user's input.
SourceCodeAnalysis.Highlight
- Record Class in
jdk.jshell
Assigns attributes usable for coloring to spans inside a snippet.
SourceCodeAnalysis.QualifiedNames
- Class in
jdk.jshell
List of possible qualified names.
SourceCodeAnalysis.SnippetWrapper
- Interface in
jdk.jshell
The wrapping of a snippet of Java source into valid top-level Java
 source.
SourceCodeAnalysis.Suggestion
- Interface in
jdk.jshell
A candidate for continuation of the given user's input.
SourceDataLine
- Interface in
javax.sound.sampled
A source data line is a data line to which data may be written.
sourceDebugExtension()
- Method in interface com.sun.jdi.
ReferenceType
Get the source debug extension of this type.
SourceLocator
- Interface in
javax.xml.transform
This interface is primarily for the purposes of reporting where
 an error occurred in the XML source or transformation instructions.
sourceModifier()
- Method in enum class java.lang.reflect.
AccessFlag
Returns whether or not the flag has a directly corresponding
 modifier in the Java programming language.
sourceName()
- Method in interface com.sun.jdi.
Location
Gets an identifying name for the source corresponding to
 this location.
sourceName()
- Method in interface com.sun.jdi.
ReferenceType
Gets an identifying name for the source corresponding to the
 declaration of this type.
sourceName(String)
- Method in interface com.sun.jdi.
Location
Gets an identifying name for the source corresponding to
 this location.
sourceNames(String)
- Method in interface com.sun.jdi.
ReferenceType
Gets the identifying names for all the source corresponding to the
 declaration of this type.
sourcePath()
- Method in interface com.sun.jdi.
Location
Gets the path to the source corresponding to this
 location.
sourcePath(String)
- Method in interface com.sun.jdi.
Location
Gets the path to the source corresponding to this
 location.
sourcePaths(String)
- Method in interface com.sun.jdi.
ReferenceType
Gets the paths to the source corresponding to the
 declaration of this type.
SourcePositions
- Interface in
com.sun.source.util
Provides methods to obtain the position of a Tree within a CompilationUnit.
sourceRegion
- Variable in class javax.imageio.
IIOParam
The source region, on
null
if none is set.
sourceRenderSize
- Variable in class javax.imageio.
ImageReadParam
The desired rendering width and height of the source, if
canSetSourceRenderSize
is
true
, or
null
.
sources
- Variable in class java.awt.image.renderable.
ParameterBlock
A Vector of sources, stored as arbitrary Objects.
Sources of Tables
- Search tag in package javax.imageio.metadata
Section
sourceToInputSource(Source)
- Static method in class javax.xml.transform.sax.
SAXSource
Attempt to obtain a SAX InputSource object from a Source
 object.
sourceToSnippets(String)
- Method in class jdk.jshell.
SourceCodeAnalysis
Converts the source code of a snippet into a
Snippet
object (or
 list of
Snippet
objects in the case of some var declarations,
 e.g.: int x, y, z;).
sourceToWrappedPosition(int)
- Method in interface jdk.jshell.
SourceCodeAnalysis.SnippetWrapper
Maps character position within the source to character position
 within the wrapped.
SourceVersion
- Enum Class in
javax.lang.model
Source versions of the Java programming language.
sourceXSubsampling
- Variable in class javax.imageio.
IIOParam
The decimation subsampling to be applied in the horizontal
 direction.
sourceYSubsampling
- Variable in class javax.imageio.
IIOParam
The decimation subsampling to be applied in the vertical
 direction.
SOUTH
- Static variable in class java.awt.
BorderLayout
The south layout constraint (bottom of container).
SOUTH
- Static variable in class java.awt.
GridBagConstraints
Put the component at the bottom of its display area, centered
 horizontally.
SOUTH
- Static variable in class javax.swing.
SpringLayout
Specifies the bottom edge of a component's bounding rectangle.
SOUTH
- Static variable in interface javax.swing.
SwingConstants
Compass-direction south (down).
SOUTH_EAST
- Static variable in interface javax.swing.
SwingConstants
Compass-direction south-east (lower right).
SOUTH_WEST
- Static variable in interface javax.swing.
SwingConstants
Compass-direction south-west (lower left).
SOUTHEAST
- Static variable in class java.awt.
GridBagConstraints
Put the component at the bottom-right corner of its display area.
southPane
- Variable in class javax.swing.plaf.basic.
BasicInternalFrameUI
South pane
SOUTHWEST
- Static variable in class java.awt.
GridBagConstraints
Put the component at the bottom-left corner of its display area.
SOYOMBO
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Soyombo".
SOYOMBO
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Soyombo" Unicode
 character block.
SPACE
- Static variable in interface javax.xml.stream.
XMLStreamConstants
The characters are white space
 (see [XML], 2.10 "White Space Handling").
SPACE_SEPARATOR
- Static variable in class java.lang.
Character
General category "Zs" in the Unicode specification.
SpaceAbove
- Static variable in class javax.swing.text.
StyleConstants
The amount of space above the paragraph.
SpaceBelow
- Static variable in class javax.swing.text.
StyleConstants
The amount of space below the paragraph.
SPACING_MODIFIER_LETTERS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Spacing Modifier Letters" Unicode character block.
SPAN
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <span>
SPARSE
- Enum constant in enum class java.nio.file.
StandardOpenOption
Sparse file.
SPEAKER
- Static variable in class javax.sound.sampled.
Port.Info
A type of port that sends audio to a built-in speaker or a speaker
 jack.
SPEC
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SpecTree
representing an
@spec
tag.
SPECIAL
- Enum constant in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
A method handle for a method invoked as with
invokespecial
SPECIAL_SYSTEM_EXCLUSIVE
- Static variable in class javax.sound.midi.
SysexMessage
Status byte for Special System Exclusive message (0xF7, or 247), which is
 used in MIDI files.
SpecialAction()
- Constructor for class javax.swing.text.html.
HTMLDocument.HTMLReader.SpecialAction
Constructs a
SpecialAction
.
Special cases
- Search tag in class java.util.Locale
Section
Special IPv6 address
- Search tag in class java.net.Inet6Address
Section
Special Pattern Characters
- Search tag in class java.text.DecimalFormat
Section
SPECIALS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Specials" Unicode character block.
Special Values
- Search tag in class java.text.DecimalFormat
Section
species()
- Method in class jdk.incubator.vector.
ByteVector
species()
- Method in class jdk.incubator.vector.
DoubleVector
species()
- Method in class jdk.incubator.vector.
FloatVector
species()
- Method in class jdk.incubator.vector.
IntVector
species()
- Method in class jdk.incubator.vector.
LongVector
species()
- Method in class jdk.incubator.vector.
ShortVector
species()
- Method in class jdk.incubator.vector.
Vector
Returns the species of this vector.
SPECIES_128
- Static variable in class jdk.incubator.vector.
ByteVector
Species representing
ByteVector
s of
VectorShape.S_128_BIT
.
SPECIES_128
- Static variable in class jdk.incubator.vector.
DoubleVector
Species representing
DoubleVector
s of
VectorShape.S_128_BIT
.
SPECIES_128
- Static variable in class jdk.incubator.vector.
FloatVector
Species representing
FloatVector
s of
VectorShape.S_128_BIT
.
SPECIES_128
- Static variable in class jdk.incubator.vector.
IntVector
Species representing
IntVector
s of
VectorShape.S_128_BIT
.
SPECIES_128
- Static variable in class jdk.incubator.vector.
LongVector
Species representing
LongVector
s of
VectorShape.S_128_BIT
.
SPECIES_128
- Static variable in class jdk.incubator.vector.
ShortVector
Species representing
ShortVector
s of
VectorShape.S_128_BIT
.
SPECIES_256
- Static variable in class jdk.incubator.vector.
ByteVector
Species representing
ByteVector
s of
VectorShape.S_256_BIT
.
SPECIES_256
- Static variable in class jdk.incubator.vector.
DoubleVector
Species representing
DoubleVector
s of
VectorShape.S_256_BIT
.
SPECIES_256
- Static variable in class jdk.incubator.vector.
FloatVector
Species representing
FloatVector
s of
VectorShape.S_256_BIT
.
SPECIES_256
- Static variable in class jdk.incubator.vector.
IntVector
Species representing
IntVector
s of
VectorShape.S_256_BIT
.
SPECIES_256
- Static variable in class jdk.incubator.vector.
LongVector
Species representing
LongVector
s of
VectorShape.S_256_BIT
.
SPECIES_256
- Static variable in class jdk.incubator.vector.
ShortVector
Species representing
ShortVector
s of
VectorShape.S_256_BIT
.
SPECIES_512
- Static variable in class jdk.incubator.vector.
ByteVector
Species representing
ByteVector
s of
VectorShape.S_512_BIT
.
SPECIES_512
- Static variable in class jdk.incubator.vector.
DoubleVector
Species representing
DoubleVector
s of
VectorShape.S_512_BIT
.
SPECIES_512
- Static variable in class jdk.incubator.vector.
FloatVector
Species representing
FloatVector
s of
VectorShape.S_512_BIT
.
SPECIES_512
- Static variable in class jdk.incubator.vector.
IntVector
Species representing
IntVector
s of
VectorShape.S_512_BIT
.
SPECIES_512
- Static variable in class jdk.incubator.vector.
LongVector
Species representing
LongVector
s of
VectorShape.S_512_BIT
.
SPECIES_512
- Static variable in class jdk.incubator.vector.
ShortVector
Species representing
ShortVector
s of
VectorShape.S_512_BIT
.
SPECIES_64
- Static variable in class jdk.incubator.vector.
ByteVector
Species representing
ByteVector
s of
VectorShape.S_64_BIT
.
SPECIES_64
- Static variable in class jdk.incubator.vector.
DoubleVector
Species representing
DoubleVector
s of
VectorShape.S_64_BIT
.
SPECIES_64
- Static variable in class jdk.incubator.vector.
FloatVector
Species representing
FloatVector
s of
VectorShape.S_64_BIT
.
SPECIES_64
- Static variable in class jdk.incubator.vector.
IntVector
Species representing
IntVector
s of
VectorShape.S_64_BIT
.
SPECIES_64
- Static variable in class jdk.incubator.vector.
LongVector
Species representing
LongVector
s of
VectorShape.S_64_BIT
.
SPECIES_64
- Static variable in class jdk.incubator.vector.
ShortVector
Species representing
ShortVector
s of
VectorShape.S_64_BIT
.
SPECIES_MAX
- Static variable in class jdk.incubator.vector.
ByteVector
Species representing
ByteVector
s of
VectorShape.S_Max_BIT
.
SPECIES_MAX
- Static variable in class jdk.incubator.vector.
DoubleVector
Species representing
DoubleVector
s of
VectorShape.S_Max_BIT
.
SPECIES_MAX
- Static variable in class jdk.incubator.vector.
FloatVector
Species representing
FloatVector
s of
VectorShape.S_Max_BIT
.
SPECIES_MAX
- Static variable in class jdk.incubator.vector.
IntVector
Species representing
IntVector
s of
VectorShape.S_Max_BIT
.
SPECIES_MAX
- Static variable in class jdk.incubator.vector.
LongVector
Species representing
LongVector
s of
VectorShape.S_Max_BIT
.
SPECIES_MAX
- Static variable in class jdk.incubator.vector.
ShortVector
Species representing
ShortVector
s of
VectorShape.S_Max_BIT
.
SPECIES_PREFERRED
- Static variable in class jdk.incubator.vector.
ByteVector
Preferred species for
ByteVector
s.
SPECIES_PREFERRED
- Static variable in class jdk.incubator.vector.
DoubleVector
Preferred species for
DoubleVector
s.
SPECIES_PREFERRED
- Static variable in class jdk.incubator.vector.
FloatVector
Preferred species for
FloatVector
s.
SPECIES_PREFERRED
- Static variable in class jdk.incubator.vector.
IntVector
Preferred species for
IntVector
s.
SPECIES_PREFERRED
- Static variable in class jdk.incubator.vector.
LongVector
Preferred species for
LongVector
s.
SPECIES_PREFERRED
- Static variable in class jdk.incubator.vector.
ShortVector
Preferred species for
ShortVector
s.
SPECIFICATION_TITLE
- Static variable in class java.util.jar.
Attributes.Name
Name
object for
Specification-Title
manifest attribute used for package versioning.
SPECIFICATION_VENDOR
- Static variable in class java.util.jar.
Attributes.Name
Name
object for
Specification-Vendor
manifest attribute used for package versioning.
SPECIFICATION_VERSION
- Static variable in class java.util.jar.
Attributes.Name
Name
object for
Specification-Version
manifest attribute used for package versioning.
Specification of Inputs and Outputs
- Search tag in package javax.xml.transform
Section
Specifying the look and feel
- Search tag in class javax.swing.UIManager
Section
SpecTree
- Interface in
com.sun.source.doctree
A tree node for an
@spec
block tag.
SPEED_REF_KILOMETERS_PER_HOUR
- Static variable in class javax.imageio.plugins.tiff.
ExifGPSTagSet
A value to be used with the "GPSSpeedRef" tag.
SPEED_REF_KNOTS
- Static variable in class javax.imageio.plugins.tiff.
ExifGPSTagSet
A value to be used with the "GPSSpeedRef" tag.
SPEED_REF_MILES_PER_HOUR
- Static variable in class javax.imageio.plugins.tiff.
ExifGPSTagSet
A value to be used with the "GPSSpeedRef" tag.
SPIN_BOX
- Static variable in class javax.accessibility.
AccessibleRole
A
SPIN_BOX
is a simple spinner component and its main use is for
 simple numbers.
spinner
- Variable in class javax.swing.plaf.basic.
BasicSpinnerUI
The spinner that we're a UI delegate for.
SPINNER
- Static variable in class javax.swing.plaf.synth.
Region
Spinner region.
SpinnerDateModel
- Class in
javax.swing
A
SpinnerModel
for sequences of
Date
s.
SpinnerDateModel()
- Constructor for class javax.swing.
SpinnerDateModel
Constructs a
SpinnerDateModel
whose initial
value
is the current date,
calendarField
is equal to
Calendar.DAY_OF_MONTH
, and for which
 there are no
start
/
end
limits.
SpinnerDateModel(Date, Comparable<Date>, Comparable<Date>, int)
- Constructor for class javax.swing.
SpinnerDateModel
Creates a
SpinnerDateModel
that represents a sequence of dates
 between
start
and
end
.
SpinnerListModel
- Class in
javax.swing
A simple implementation of
SpinnerModel
whose
 values are defined by an array or a
List
.
SpinnerListModel()
- Constructor for class javax.swing.
SpinnerListModel
Constructs an effectively empty
SpinnerListModel
.
SpinnerListModel(Object[])
- Constructor for class javax.swing.
SpinnerListModel
Constructs a
SpinnerModel
whose sequence of values
 is defined by the specified array.
SpinnerListModel(List<?>)
- Constructor for class javax.swing.
SpinnerListModel
Constructs a
SpinnerModel
whose sequence of
 values is defined by the specified
List
.
SpinnerModel
- Interface in
javax.swing
A model for a potentially unbounded sequence of object values.
SpinnerNumberModel
- Class in
javax.swing
A
SpinnerModel
for sequences of numbers.
SpinnerNumberModel()
- Constructor for class javax.swing.
SpinnerNumberModel
Constructs a
SpinnerNumberModel
with no
minimum
or
maximum
value,
stepSize
equal to one, and an initial value of zero.
SpinnerNumberModel(double, double, double, double)
- Constructor for class javax.swing.
SpinnerNumberModel
Constructs a
SpinnerNumberModel
with the specified
value
,
minimum
/
maximum
bounds,
 and
stepSize
.
SpinnerNumberModel(int, int, int, int)
- Constructor for class javax.swing.
SpinnerNumberModel
Constructs a
SpinnerNumberModel
with the specified
value
,
minimum
/
maximum
bounds,
 and
stepSize
.
SpinnerNumberModel(Number, Comparable<?>, Comparable<?>, Number)
- Constructor for class javax.swing.
SpinnerNumberModel
Constructs a
SpinnerModel
that represents
 a closed sequence of
 numbers from
minimum
to
maximum
.
SpinnerUI
- Class in
javax.swing.plaf
Pluggable look and feel interface for JSpinner
SpinnerUI()
- Constructor for class javax.swing.plaf.
SpinnerUI
Constructor for subclasses to call.
SPIResolutionException
- Exception Class in
jdk.jshell.spi
The construction and throw of this exception is embedded in code generated by
 the JShell core implementation in such a way that, upon executing a
RECOVERABLE_DEFINED
user method, this exception is thrown.
SPIResolutionException(int)
- Constructor for exception class jdk.jshell.spi.
SPIResolutionException
Constructs an SPI layer exception indicating that a
DeclarationSnippet
with unresolved references has been
 encountered.
SplashScreen
- Class in
java.awt
The splash screen can be displayed at application startup, before the
 Java Virtual Machine (JVM) starts.
split()
- Method in interface java.util.random.
RandomGenerator.SplittableGenerator
Returns a new pseudorandom number generator, split off from this one,
 that implements the
RandomGenerator
and
RandomGenerator.SplittableGenerator
interfaces.
split()
- Method in class java.util.
SplittableRandom
Constructs and returns a new SplittableRandom instance that
 shares no mutable state with this instance.
split(CharSequence)
- Method in class java.util.regex.
Pattern
Splits the given input sequence around matches of this pattern.
split(CharSequence, int)
- Method in class java.util.regex.
Pattern
Splits the given input sequence around matches of this pattern.
split(String)
- Method in class java.lang.
String
Splits this string around matches of the given
regular expression
.
split(String, int)
- Method in class java.lang.
String
Splits this string around matches of the given
regular expression
.
split(RandomGenerator.SplittableGenerator)
- Method in interface java.util.random.
RandomGenerator.SplittableGenerator
Returns a new pseudorandom number generator, split off from this one,
 that implements the
RandomGenerator
and
RandomGenerator.SplittableGenerator
interfaces.
split(RandomGenerator.SplittableGenerator)
- Method in class java.util.
SplittableRandom
Returns a new pseudorandom number generator, split off from this one,
 that implements the
RandomGenerator
and
RandomGenerator.SplittableGenerator
interfaces.
SPLIT_PANE
- Static variable in class javax.accessibility.
AccessibleRole
A specialized panel that presents two other panels at the same time.
SPLIT_PANE
- Static variable in class javax.swing.plaf.synth.
Region
SplitPane region.
SPLIT_PANE_DIVIDER
- Static variable in class javax.swing.plaf.synth.
Region
Divider of the SplitPane.
splitAsStream(CharSequence)
- Method in class java.util.regex.
Pattern
Creates a stream from the given input sequence around matches of this
 pattern.
spliterator()
- Method in interface java.lang.
Iterable
Creates a
Spliterator
over the elements described by this
Iterable
.
spliterator()
- Method in class java.util.
ArrayDeque
Creates a
late-binding
and
fail-fast
Spliterator
over the elements in this
 deque.
spliterator()
- Method in class java.util.
ArrayList
Creates a
late-binding
and
fail-fast
Spliterator
over the elements in this
 list.
spliterator()
- Method in interface java.util.
Collection
Creates a
Spliterator
over the elements in this collection.
spliterator()
- Method in class java.util.concurrent.
ArrayBlockingQueue
Returns a
Spliterator
over the elements in this queue.
spliterator()
- Method in class java.util.concurrent.
ConcurrentLinkedDeque
Returns a
Spliterator
over the elements in this deque.
spliterator()
- Method in class java.util.concurrent.
ConcurrentLinkedQueue
Returns a
Spliterator
over the elements in this queue.
spliterator()
- Method in class java.util.concurrent.
ConcurrentSkipListSet
Returns a
Spliterator
over the elements in this set.
spliterator()
- Method in class java.util.concurrent.
CopyOnWriteArrayList
Returns a
Spliterator
over the elements in this list.
spliterator()
- Method in class java.util.concurrent.
CopyOnWriteArraySet
Returns a
Spliterator
over the elements in this set in the order
 in which these elements were added.
spliterator()
- Method in class java.util.concurrent.
LinkedBlockingDeque
Returns a
Spliterator
over the elements in this deque.
spliterator()
- Method in class java.util.concurrent.
LinkedBlockingQueue
Returns a
Spliterator
over the elements in this queue.
spliterator()
- Method in class java.util.concurrent.
LinkedTransferQueue
Returns a
Spliterator
over the elements in this queue.
spliterator()
- Method in class java.util.concurrent.
PriorityBlockingQueue
Returns a
Spliterator
over the elements in this queue.
spliterator()
- Method in class java.util.concurrent.
SynchronousQueue
Returns an empty spliterator in which calls to
trySplit
always return
null
.
spliterator()
- Method in class java.util.
HashSet
Creates a
late-binding
and
fail-fast
Spliterator
over the elements in this
 set.
spliterator()
- Method in class java.util.
LinkedHashSet
Creates a
late-binding
and
fail-fast
Spliterator
over the elements in this set.
spliterator()
- Method in class java.util.
LinkedList
Creates a
late-binding
and
fail-fast
Spliterator
over the elements in this
 list.
spliterator()
- Method in interface java.util.
List
Creates a
Spliterator
over the elements in this list.
spliterator()
- Method in class java.util.
PriorityQueue
Creates a
late-binding
and
fail-fast
Spliterator
over the elements in this
 queue.
spliterator()
- Method in interface java.util.
Set
Creates a
Spliterator
over the elements in this set.
spliterator()
- Method in interface java.util.
SortedSet
Creates a
Spliterator
over the elements in this sorted set.
spliterator()
- Method in interface java.util.stream.
BaseStream
Returns a spliterator for the elements of this stream.
spliterator()
- Method in class java.util.
TreeSet
Creates a
late-binding
and
fail-fast
Spliterator
over the elements in this
 set.
spliterator()
- Method in class java.util.
Vector
Creates a
late-binding
and
fail-fast
Spliterator
over the elements in this
 list.
spliterator(double[])
- Static method in class java.util.
Arrays
Returns a
Spliterator.OfDouble
covering all of the specified
 array.
spliterator(double[], int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfDouble
covering the elements of a given array,
 using a customized set of spliterator characteristics.
spliterator(double[], int, int)
- Static method in class java.util.
Arrays
Returns a
Spliterator.OfDouble
covering the specified range of
 the specified array.
spliterator(double[], int, int, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfDouble
covering a range of elements of a
 given array, using a customized set of spliterator characteristics.
spliterator(int[])
- Static method in class java.util.
Arrays
Returns a
Spliterator.OfInt
covering all of the specified array.
spliterator(int[], int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfInt
covering the elements of a given array,
 using a customized set of spliterator characteristics.
spliterator(int[], int, int)
- Static method in class java.util.
Arrays
Returns a
Spliterator.OfInt
covering the specified range of the
 specified array.
spliterator(int[], int, int, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfInt
covering a range of elements of a
 given array, using a customized set of spliterator characteristics.
spliterator(long[])
- Static method in class java.util.
Arrays
Returns a
Spliterator.OfLong
covering all of the specified array.
spliterator(long[], int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfLong
covering the elements of a given array,
 using a customized set of spliterator characteristics.
spliterator(long[], int, int)
- Static method in class java.util.
Arrays
Returns a
Spliterator.OfLong
covering the specified range of the
 specified array.
spliterator(long[], int, int, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfLong
covering a range of elements of a
 given array, using a customized set of spliterator characteristics.
spliterator(MemoryLayout)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Returns a spliterator for this memory segment.
spliterator(Object[], int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator
covering the elements of a given array,
 using a customized set of spliterator characteristics.
spliterator(Object[], int, int, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator
covering a range of elements of a given
 array, using a customized set of spliterator characteristics.
spliterator(Collection<? extends T>, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator
using the given collection's
iterator
as the source of elements, and
 reporting its
size
as its initial size.
spliterator(Iterator<? extends T>, long, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator
using a given
Iterator
as the source of elements, and with a given initially reported size.
spliterator(PrimitiveIterator.OfDouble, long, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfDouble
using a given
DoubleStream.DoubleIterator
as the source of elements, and with a
 given initially reported size.
spliterator(PrimitiveIterator.OfInt, long, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfInt
using a given
IntStream.IntIterator
as the source of elements, and with a given
 initially reported size.
spliterator(PrimitiveIterator.OfLong, long, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfLong
using a given
LongStream.LongIterator
as the source of elements, and with a
 given initially reported size.
spliterator(T[])
- Static method in class java.util.
Arrays
Returns a
Spliterator
covering all of the specified array.
spliterator(T[], int, int)
- Static method in class java.util.
Arrays
Returns a
Spliterator
covering the specified range of the
 specified array.
Spliterator<T>
- Interface in
java.util
An object for traversing and partitioning elements of a source.
Spliterator.OfDouble
- Interface in
java.util
A Spliterator specialized for
double
values.
Spliterator.OfInt
- Interface in
java.util
A Spliterator specialized for
int
values.
Spliterator.OfLong
- Interface in
java.util
A Spliterator specialized for
long
values.
Spliterator.OfPrimitive<T,
T_CONS,
T_SPLITR>
- Interface in
java.util
A Spliterator specialized for primitive values.
Spliterators
- Class in
java.util
Static classes and methods for operating on or creating instances of
Spliterator
and its primitive specializations
Spliterator.OfInt
,
Spliterator.OfLong
, and
Spliterator.OfDouble
.
Spliterators.AbstractDoubleSpliterator
- Class in
java.util
An abstract
Spliterator.OfDouble
that implements
trySplit
to permit limited parallelism.
Spliterators.AbstractIntSpliterator
- Class in
java.util
An abstract
Spliterator.OfInt
that implements
trySplit
to
 permit limited parallelism.
Spliterators.AbstractLongSpliterator
- Class in
java.util
An abstract
Spliterator.OfLong
that implements
trySplit
to permit limited parallelism.
Spliterators.AbstractSpliterator<T>
- Class in
java.util
An abstract
Spliterator
that implements
trySplit
to
 permit limited parallelism.
spliteratorUnknownSize(Iterator<? extends T>, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator
using a given
Iterator
as the source of elements, with no initial size estimate.
spliteratorUnknownSize(PrimitiveIterator.OfDouble, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfDouble
using a given
DoubleStream.DoubleIterator
as the source of elements, with no
 initial size estimate.
spliteratorUnknownSize(PrimitiveIterator.OfInt, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfInt
using a given
IntStream.IntIterator
as the source of elements, with no initial
 size estimate.
spliteratorUnknownSize(PrimitiveIterator.OfLong, int)
- Static method in class java.util.
Spliterators
Creates a
Spliterator.OfLong
using a given
LongStream.LongIterator
as the source of elements, with no
 initial size estimate.
splitPane
- Variable in class javax.swing.plaf.basic.
BasicSplitPaneDivider
JSplitPane the receiver is contained in.
splitPane
- Variable in class javax.swing.plaf.basic.
BasicSplitPaneUI
JSplitPane instance this instance is providing
 the look and feel for.
SplitPaneBorder(Color, Color)
- Constructor for class javax.swing.plaf.basic.
BasicBorders.SplitPaneBorder
Constructs a new instance of a
SplitPaneBorder
.
splitPaneUI
- Variable in class javax.swing.plaf.basic.
BasicSplitPaneDivider
UI this instance was created from.
SplitPaneUI
- Class in
javax.swing.plaf
Pluggable look and feel interface for JSplitPane.
SplitPaneUI()
- Constructor for class javax.swing.plaf.
SplitPaneUI
Constructor for subclasses to call.
splits()
- Method in interface java.util.random.
RandomGenerator.SplittableGenerator
Returns an effectively unlimited stream of new pseudorandom number
 generators, each of which implements the
RandomGenerator.SplittableGenerator
interface.
splits()
- Method in class java.util.
SplittableRandom
Returns an effectively unlimited stream of new pseudorandom number
 generators, each of which implements the
RandomGenerator.SplittableGenerator
interface.
splits(long)
- Method in interface java.util.random.
RandomGenerator.SplittableGenerator
Returns a stream producing the given
streamSize
number of new
 pseudorandom number generators, each of which implements the
RandomGenerator.SplittableGenerator
interface.
splits(long)
- Method in class java.util.
SplittableRandom
Returns a stream producing the given
streamSize
number of new
 pseudorandom number generators, each of which implements the
RandomGenerator.SplittableGenerator
interface.
splits(long, RandomGenerator.SplittableGenerator)
- Method in interface java.util.random.
RandomGenerator.SplittableGenerator
Returns a stream producing the given
streamSize
number of new
 pseudorandom number generators, each of which implements the
RandomGenerator.SplittableGenerator
interface.
splits(long, RandomGenerator.SplittableGenerator)
- Method in class java.util.
SplittableRandom
Returns a stream producing the given
streamSize
number of new
 pseudorandom number generators, each of which implements the
RandomGenerator.SplittableGenerator
interface.
splits(RandomGenerator.SplittableGenerator)
- Method in interface java.util.random.
RandomGenerator.SplittableGenerator
Returns an effectively unlimited stream of new pseudorandom number
 generators, each of which implements the
RandomGenerator.SplittableGenerator
interface.
splits(RandomGenerator.SplittableGenerator)
- Method in class java.util.
SplittableRandom
Returns an effectively unlimited stream of new pseudorandom number
 generators, each of which implements the
RandomGenerator.SplittableGenerator
interface.
SplittableRandom
- Class in
java.util
A generator of uniform pseudorandom values (with period 2
64
)
 applicable for use in (among other contexts) isolated parallel
 computations that may generate subtasks.
SplittableRandom()
- Constructor for class java.util.
SplittableRandom
Creates a new SplittableRandom instance that is likely to
 generate sequences of values that are statistically independent
 of those of any other instances in the current program; and
 may, and typically does, vary across program invocations.
SplittableRandom(long)
- Constructor for class java.util.
SplittableRandom
Creates a new SplittableRandom instance using the specified
 initial seed.
splitText(int)
- Method in interface org.w3c.dom.
Text
Breaks this node into two nodes at the specified
offset
,
 keeping both in the tree as siblings.
splitWithDelimiters(CharSequence, int)
- Method in class java.util.regex.
Pattern
Splits the given input sequence around matches of this pattern and
 returns both the strings and the matching delimiters.
splitWithDelimiters(String, int)
- Method in class java.lang.
String
Splits this string around matches of the given regular expression and
 returns both the strings and the matching delimiters.
SPOOL_AREA_FULL
- Static variable in class javax.print.attribute.standard.
PrinterStateReason
The limit of persistent storage allocated for spooling has been reached.
spPropertyChangeListener
- Variable in class javax.swing.plaf.basic.
BasicScrollPaneUI
PropertyChangeListener
installed on the scroll pane.
spreadInvoker(MethodType, int)
- Static method in class java.lang.invoke.
MethodHandles
Produces a method handle which will invoke any method handle of the
 given
type
, with a given number of trailing arguments replaced by
 a single trailing
Object[]
array.
Spring
- Class in
javax.swing
An instance of the
Spring
class holds three properties that
  characterize its behavior: the
minimum
,
preferred
, and
maximum
values.
Spring()
- Constructor for class javax.swing.
Spring
Used by factory methods to create a
Spring
.
SpringLayout
- Class in
javax.swing
A
SpringLayout
lays out the children of its associated container
 according to a set of constraints.
SpringLayout()
- Constructor for class javax.swing.
SpringLayout
Constructs a new
SpringLayout
.
SpringLayout.Constraints
- Class in
javax.swing
A
Constraints
object holds the
 constraints that govern the way a component's size and position
 change in a container controlled by a
SpringLayout
.
SpringLayout vs. Other Layout Managers
- Search tag in class javax.swing.SpringLayout
Section
SQLClientInfoException
- Exception Class in
java.sql
The subclass of
SQLException
is thrown when one or more client info properties
 could not be set on a
Connection
.
SQLClientInfoException()
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
Object.
SQLClientInfoException(String, String, int, Map<String, ClientInfoStatus>)
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
SQLState
,
vendorCode
and
failedProperties
.
SQLClientInfoException(String, String, int, Map<String, ClientInfoStatus>, Throwable)
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
SQLState
,
cause
,
vendorCode
and
failedProperties
.
SQLClientInfoException(String, String, Map<String, ClientInfoStatus>)
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
SQLState
and
failedProperties
.
SQLClientInfoException(String, String, Map<String, ClientInfoStatus>, Throwable)
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
SQLState
,
cause
and
failedProperties
.
SQLClientInfoException(String, Map<String, ClientInfoStatus>)
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
and
failedProperties
.
SQLClientInfoException(String, Map<String, ClientInfoStatus>, Throwable)
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
object initialized with a
 given
reason
,
cause
and
failedProperties
.
SQLClientInfoException(Map<String, ClientInfoStatus>)
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
object initialized with a
 given
failedProperties
.
SQLClientInfoException(Map<String, ClientInfoStatus>, Throwable)
- Constructor for exception class java.sql.
SQLClientInfoException
Constructs a
SQLClientInfoException
object initialized with
 a given
cause
and
failedProperties
.
SQLData
- Interface in
java.sql
The interface used for the custom mapping of an SQL user-defined type (UDT) to
 a class in the Java programming language.
SQLDataException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when the SQLState class value
 is '
22
', or under vendor-specified conditions.
SQLDataException()
- Constructor for exception class java.sql.
SQLDataException
Constructs a
SQLDataException
object.
SQLDataException(String)
- Constructor for exception class java.sql.
SQLDataException
Constructs a
SQLDataException
object with a given
reason
.
SQLDataException(String, String)
- Constructor for exception class java.sql.
SQLDataException
Constructs a
SQLDataException
object with a given
reason
and
SQLState
.
SQLDataException(String, String, int)
- Constructor for exception class java.sql.
SQLDataException
Constructs a
SQLDataException
object with a given
reason
,
SQLState
and
vendorCode
.
SQLDataException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLDataException
Constructs a
SQLDataException
object with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLDataException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLDataException
Constructs a
SQLDataException
object with a given
reason
,
SQLState
and
cause
.
SQLDataException(String, Throwable)
- Constructor for exception class java.sql.
SQLDataException
Constructs a
SQLDataException
object with a given
reason
and
cause
.
SQLDataException(Throwable)
- Constructor for exception class java.sql.
SQLDataException
Constructs a
SQLDataException
object with a given
cause
.
SQLException
- Exception Class in
java.sql
An exception that provides information on a database access
 error or other errors.
SQLException()
- Constructor for exception class java.sql.
SQLException
Constructs a
SQLException
object.
SQLException(String)
- Constructor for exception class java.sql.
SQLException
Constructs a
SQLException
object with a given
reason
.
SQLException(String, String)
- Constructor for exception class java.sql.
SQLException
Constructs a
SQLException
object with a given
reason
and
SQLState
.
SQLException(String, String, int)
- Constructor for exception class java.sql.
SQLException
Constructs a
SQLException
object with a given
reason
,
SQLState
and
vendorCode
.
SQLException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLException
Constructs a
SQLException
object with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLException
Constructs a
SQLException
object with a given
reason
,
SQLState
and
cause
.
SQLException(String, Throwable)
- Constructor for exception class java.sql.
SQLException
Constructs a
SQLException
object with a given
reason
and
cause
.
SQLException(Throwable)
- Constructor for exception class java.sql.
SQLException
Constructs a
SQLException
object with a given
cause
.
SQLFeatureNotSupportedException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when the SQLState class value is '
0A
'
 ( the value is 'zero' A).
SQLFeatureNotSupportedException()
- Constructor for exception class java.sql.
SQLFeatureNotSupportedException
Constructs a
SQLFeatureNotSupportedException
object.
SQLFeatureNotSupportedException(String)
- Constructor for exception class java.sql.
SQLFeatureNotSupportedException
Constructs a
SQLFeatureNotSupportedException
object
 with a given
reason
.
SQLFeatureNotSupportedException(String, String)
- Constructor for exception class java.sql.
SQLFeatureNotSupportedException
Constructs a
SQLFeatureNotSupportedException
object
 with a given
reason
and
SQLState
.
SQLFeatureNotSupportedException(String, String, int)
- Constructor for exception class java.sql.
SQLFeatureNotSupportedException
Constructs a
SQLFeatureNotSupportedException
object
  with a given
reason
,
SQLState
and
vendorCode
.
SQLFeatureNotSupportedException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLFeatureNotSupportedException
Constructs a
SQLFeatureNotSupportedException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLFeatureNotSupportedException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLFeatureNotSupportedException
Constructs a
SQLFeatureNotSupportedException
object
 with a given
reason
,
SQLState
and
cause
.
SQLFeatureNotSupportedException(String, Throwable)
- Constructor for exception class java.sql.
SQLFeatureNotSupportedException
Constructs a
SQLFeatureNotSupportedException
object
 with a given
reason
and
cause
.
SQLFeatureNotSupportedException(Throwable)
- Constructor for exception class java.sql.
SQLFeatureNotSupportedException
Constructs a
SQLFeatureNotSupportedException
object
   with a given
cause
.
SQLInput
- Interface in
java.sql
An input stream that contains a stream of values representing an
 instance of an SQL structured type or an SQL distinct type.
SQLInputImpl
- Class in
javax.sql.rowset.serial
An input stream used for custom mapping user-defined types (UDTs).
SQLInputImpl(Object[], Map<String, Class<?>>)
- Constructor for class javax.sql.rowset.serial.
SQLInputImpl
Creates an
SQLInputImpl
object initialized with the
 given array of attributes and the given type map.
SQLIntegrityConstraintViolationException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when the SQLState class value
 is '
23
', or under vendor-specified conditions.
SQLIntegrityConstraintViolationException()
- Constructor for exception class java.sql.
SQLIntegrityConstraintViolationException
Constructs a
SQLIntegrityConstraintViolationException
object.
SQLIntegrityConstraintViolationException(String)
- Constructor for exception class java.sql.
SQLIntegrityConstraintViolationException
Constructs a
SQLIntegrityConstraintViolationException
with a given
reason
.
SQLIntegrityConstraintViolationException(String, String)
- Constructor for exception class java.sql.
SQLIntegrityConstraintViolationException
Constructs a
SQLIntegrityConstraintViolationException
object with a given
reason
and
SQLState
.
SQLIntegrityConstraintViolationException(String, String, int)
- Constructor for exception class java.sql.
SQLIntegrityConstraintViolationException
Constructs a
SQLIntegrityConstraintViolationException
object
 with a given
reason
,
SQLState
and
vendorCode
.
SQLIntegrityConstraintViolationException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLIntegrityConstraintViolationException
Constructs a
SQLIntegrityConstraintViolationException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLIntegrityConstraintViolationException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLIntegrityConstraintViolationException
Constructs a
SQLIntegrityConstraintViolationException
object
  with a given
reason
,
SQLState
and
cause
.
SQLIntegrityConstraintViolationException(String, Throwable)
- Constructor for exception class java.sql.
SQLIntegrityConstraintViolationException
Constructs a
SQLIntegrityConstraintViolationException
object
 with a given
reason
and
cause
.
SQLIntegrityConstraintViolationException(Throwable)
- Constructor for exception class java.sql.
SQLIntegrityConstraintViolationException
Constructs an
SQLIntegrityConstraintViolationException
object with
  a given
cause
.
SQLInvalidAuthorizationSpecException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when the SQLState class value
 is '
28
', or under vendor-specified conditions.
SQLInvalidAuthorizationSpecException()
- Constructor for exception class java.sql.
SQLInvalidAuthorizationSpecException
Constructs a
SQLInvalidAuthorizationSpecException
object.
SQLInvalidAuthorizationSpecException(String)
- Constructor for exception class java.sql.
SQLInvalidAuthorizationSpecException
Constructs a
SQLInvalidAuthorizationSpecException
object
  with a given
reason
.
SQLInvalidAuthorizationSpecException(String, String)
- Constructor for exception class java.sql.
SQLInvalidAuthorizationSpecException
Constructs a
SQLInvalidAuthorizationSpecException
object
 with a given
reason
and
SQLState
.
SQLInvalidAuthorizationSpecException(String, String, int)
- Constructor for exception class java.sql.
SQLInvalidAuthorizationSpecException
Constructs a
SQLInvalidAuthorizationSpecException
object
 with a given
reason
,
SQLState
and
vendorCode
.
SQLInvalidAuthorizationSpecException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLInvalidAuthorizationSpecException
Constructs a
SQLInvalidAuthorizationSpecException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLInvalidAuthorizationSpecException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLInvalidAuthorizationSpecException
Constructs a
SQLInvalidAuthorizationSpecException
object
  with a given
reason
,
SQLState
and
cause
.
SQLInvalidAuthorizationSpecException(String, Throwable)
- Constructor for exception class java.sql.
SQLInvalidAuthorizationSpecException
Constructs a
SQLInvalidAuthorizationSpecException
object
  with a given
reason
and
cause
.
SQLInvalidAuthorizationSpecException(Throwable)
- Constructor for exception class java.sql.
SQLInvalidAuthorizationSpecException
Constructs a
SQLInvalidAuthorizationSpecException
object
 with a given
cause
.
SQLNonTransientConnectionException
- Exception Class in
java.sql
The subclass of
SQLException
thrown for the SQLState
 class value '
08
', or under vendor-specified conditions.
SQLNonTransientConnectionException()
- Constructor for exception class java.sql.
SQLNonTransientConnectionException
Constructs a
SQLNonTransientConnectionException
object.
SQLNonTransientConnectionException(String)
- Constructor for exception class java.sql.
SQLNonTransientConnectionException
Constructs a
SQLNonTransientConnectionException
object
  with a given
reason
.
SQLNonTransientConnectionException(String, String)
- Constructor for exception class java.sql.
SQLNonTransientConnectionException
Constructs a
SQLNonTransientConnectionException
object
 with a given
reason
and
SQLState
.
SQLNonTransientConnectionException(String, String, int)
- Constructor for exception class java.sql.
SQLNonTransientConnectionException
Constructs a
SQLNonTransientConnectionException
object
 with a given
reason
,
SQLState
and
vendorCode
.
SQLNonTransientConnectionException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLNonTransientConnectionException
Constructs a
SQLNonTransientConnectionException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLNonTransientConnectionException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLNonTransientConnectionException
Constructs a
SQLNonTransientConnectionException
object
 with a given
reason
,
SQLState
and
cause
.
SQLNonTransientConnectionException(String, Throwable)
- Constructor for exception class java.sql.
SQLNonTransientConnectionException
Constructs a
SQLNonTransientConnectionException
object
 with a given
reason
and
cause
.
SQLNonTransientConnectionException(Throwable)
- Constructor for exception class java.sql.
SQLNonTransientConnectionException
Constructs a
SQLNonTransientConnectionException
object
 with a given
cause
.
SQLNonTransientException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when an instance where a retry
 of the same operation would fail unless the cause of the
SQLException
is corrected.
SQLNonTransientException()
- Constructor for exception class java.sql.
SQLNonTransientException
Constructs a
SQLNonTransientException
object.
SQLNonTransientException(String)
- Constructor for exception class java.sql.
SQLNonTransientException
Constructs a
SQLNonTransientException
object
 with a given
reason
.
SQLNonTransientException(String, String)
- Constructor for exception class java.sql.
SQLNonTransientException
Constructs a
SQLNonTransientException
object
 with a given
reason
and
SQLState
.
SQLNonTransientException(String, String, int)
- Constructor for exception class java.sql.
SQLNonTransientException
Constructs a
SQLNonTransientException
object
 with a given
reason
,
SQLState
and
vendorCode
.
SQLNonTransientException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLNonTransientException
Constructs a
SQLNonTransientException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLNonTransientException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLNonTransientException
Constructs a
SQLNonTransientException
object
 with a given
reason
,
SQLState
and
cause
.
SQLNonTransientException(String, Throwable)
- Constructor for exception class java.sql.
SQLNonTransientException
Constructs a
SQLNonTransientException
object
 with a given
reason
and
cause
.
SQLNonTransientException(Throwable)
- Constructor for exception class java.sql.
SQLNonTransientException
Constructs a
SQLNonTransientException
object
  with a given
cause
.
SQLOutput
- Interface in
java.sql
The output stream for writing the attributes of a user-defined
 type back to the database.
SQLOutputImpl
- Class in
javax.sql.rowset.serial
The output stream for writing the attributes of a
 custom-mapped user-defined type (UDT) back to the database.
SQLOutputImpl(Vector<?>, Map<String, ?>)
- Constructor for class javax.sql.rowset.serial.
SQLOutputImpl
Creates a new
SQLOutputImpl
object
 initialized with the given vector of attributes and
 type map.
SQLPermission
- Class in
java.sql
The permission for which the
SecurityManager
will check
 when code that is running an application with a
SecurityManager
enabled, calls the
DriverManager.deregisterDriver
method,
DriverManager.setLogWriter
method,
DriverManager.setLogStream
(deprecated) method,
SyncFactory.setJNDIContext
method,
SyncFactory.setLogger
method,
Connection.setNetworkTimeout
method,
 or the
Connection.abort
method.
SQLPermission(String)
- Constructor for class java.sql.
SQLPermission
Creates a new
SQLPermission
object with the specified name.
SQLPermission(String, String)
- Constructor for class java.sql.
SQLPermission
Creates a new
SQLPermission
object with the specified name.
SQLRecoverableException
- Exception Class in
java.sql
The subclass of
SQLException
thrown in situations where a
 previously failed operation might be able to succeed if the application performs
  some recovery steps and retries the entire transaction or in the case of a
 distributed transaction, the transaction branch.
SQLRecoverableException()
- Constructor for exception class java.sql.
SQLRecoverableException
Constructs a
SQLRecoverableException
object.
SQLRecoverableException(String)
- Constructor for exception class java.sql.
SQLRecoverableException
Constructs a
SQLRecoverableException
object
  with a given
reason
.
SQLRecoverableException(String, String)
- Constructor for exception class java.sql.
SQLRecoverableException
Constructs a
SQLRecoverableException
object
 with a given
reason
and
SQLState
.
SQLRecoverableException(String, String, int)
- Constructor for exception class java.sql.
SQLRecoverableException
Constructs a
SQLRecoverableException
object
  with a given
reason
,
SQLState
and
vendorCode
.
SQLRecoverableException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLRecoverableException
Constructs a
SQLRecoverableException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLRecoverableException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLRecoverableException
Constructs a
SQLRecoverableException
object
 with a given
reason
,
SQLState
and
cause
.
SQLRecoverableException(String, Throwable)
- Constructor for exception class java.sql.
SQLRecoverableException
Constructs a
SQLRecoverableException
object
 with a given
reason
and
cause
.
SQLRecoverableException(Throwable)
- Constructor for exception class java.sql.
SQLRecoverableException
Constructs a
SQLRecoverableException
object
 with a given
cause
.
sqlStateSQL
- Static variable in interface java.sql.
DatabaseMetaData
A possible return value for the method
DatabaseMetaData.getSQLStateType
which is used to indicate
 whether the value returned by the method
SQLException.getSQLState
is an SQLSTATE value.
sqlStateSQL99
- Static variable in interface java.sql.
DatabaseMetaData
A possible return value for the method
DatabaseMetaData.getSQLStateType
which is used to indicate
 whether the value returned by the method
SQLException.getSQLState
is an SQL99 SQLSTATE value.
sqlStateXOpen
- Static variable in interface java.sql.
DatabaseMetaData
A possible return value for the method
DatabaseMetaData.getSQLStateType
which is used to indicate
 whether the value returned by the method
SQLException.getSQLState
is an
 X/Open (now know as Open Group) SQL CLI SQLSTATE value.
SQLSyntaxErrorException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when the SQLState class value
 is '
42
', or under vendor-specified conditions.
SQLSyntaxErrorException()
- Constructor for exception class java.sql.
SQLSyntaxErrorException
Constructs a
SQLSyntaxErrorException
object.
SQLSyntaxErrorException(String)
- Constructor for exception class java.sql.
SQLSyntaxErrorException
Constructs a
SQLSyntaxErrorException
object
 with a given
reason
.
SQLSyntaxErrorException(String, String)
- Constructor for exception class java.sql.
SQLSyntaxErrorException
Constructs a
SQLSyntaxErrorException
object
 with a given
reason
and
SQLState
.
SQLSyntaxErrorException(String, String, int)
- Constructor for exception class java.sql.
SQLSyntaxErrorException
Constructs a
SQLSyntaxErrorException
object
  with a given
reason
,
SQLState
and
vendorCode
.
SQLSyntaxErrorException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLSyntaxErrorException
Constructs a
SQLSyntaxErrorException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLSyntaxErrorException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLSyntaxErrorException
Constructs a
SQLSyntaxErrorException
object
 with a given
reason
,
SQLState
and
cause
.
SQLSyntaxErrorException(String, Throwable)
- Constructor for exception class java.sql.
SQLSyntaxErrorException
Constructs a
SQLSyntaxErrorException
object
 with a given
reason
and
cause
.
SQLSyntaxErrorException(Throwable)
- Constructor for exception class java.sql.
SQLSyntaxErrorException
Constructs a
SQLSyntaxErrorException
object
   with a given
cause
.
SQLTimeoutException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when the timeout specified by
Statement.setQueryTimeout
,
DriverManager.setLoginTimeout
,
DataSource.setLoginTimeout
,
XADataSource.setLoginTimeout
has expired.
SQLTimeoutException()
- Constructor for exception class java.sql.
SQLTimeoutException
Constructs a
SQLTimeoutException
object.
SQLTimeoutException(String)
- Constructor for exception class java.sql.
SQLTimeoutException
Constructs a
SQLTimeoutException
object
 with a given
reason
.
SQLTimeoutException(String, String)
- Constructor for exception class java.sql.
SQLTimeoutException
Constructs a
SQLTimeoutException
object
 with a given
reason
and
SQLState
.
SQLTimeoutException(String, String, int)
- Constructor for exception class java.sql.
SQLTimeoutException
Constructs a
SQLTimeoutException
object
 with a given
reason
,
SQLState
and
vendorCode
.
SQLTimeoutException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLTimeoutException
Constructs a
SQLTimeoutException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLTimeoutException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLTimeoutException
Constructs a
SQLTimeoutException
object
  with a given
reason
,
SQLState
and
cause
.
SQLTimeoutException(String, Throwable)
- Constructor for exception class java.sql.
SQLTimeoutException
Constructs a
SQLTimeoutException
object
 with a given
reason
and
cause
.
SQLTimeoutException(Throwable)
- Constructor for exception class java.sql.
SQLTimeoutException
Constructs a
SQLTimeoutException
object
 with a given
cause
.
SQLTransactionRollbackException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when the SQLState class value
 is '
40
', or under vendor-specified conditions.
SQLTransactionRollbackException()
- Constructor for exception class java.sql.
SQLTransactionRollbackException
Constructs a
SQLTransactionRollbackException
object.
SQLTransactionRollbackException(String)
- Constructor for exception class java.sql.
SQLTransactionRollbackException
Constructs a
SQLTransactionRollbackException
object
 with a given
reason
.
SQLTransactionRollbackException(String, String)
- Constructor for exception class java.sql.
SQLTransactionRollbackException
Constructs a
SQLTransactionRollbackException
object
 with a given
reason
and
SQLState
.
SQLTransactionRollbackException(String, String, int)
- Constructor for exception class java.sql.
SQLTransactionRollbackException
Constructs a
SQLTransactionRollbackException
object
 with a given
reason
,
SQLState
and
vendorCode
.
SQLTransactionRollbackException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLTransactionRollbackException
Constructs a
SQLTransactionRollbackException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLTransactionRollbackException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLTransactionRollbackException
Constructs a
SQLTransactionRollbackException
object
 with a given
reason
,
SQLState
and
cause
.
SQLTransactionRollbackException(String, Throwable)
- Constructor for exception class java.sql.
SQLTransactionRollbackException
Constructs a
SQLTransactionRollbackException
object
 with a given
reason
and
cause
.
SQLTransactionRollbackException(Throwable)
- Constructor for exception class java.sql.
SQLTransactionRollbackException
Constructs a
SQLTransactionRollbackException
object
 with a given
cause
.
SQLTransientConnectionException
- Exception Class in
java.sql
The subclass of
SQLException
for the SQLState class
 value '
08
', or under vendor-specified conditions.
SQLTransientConnectionException()
- Constructor for exception class java.sql.
SQLTransientConnectionException
Constructs a
SQLTransientConnectionException
object.
SQLTransientConnectionException(String)
- Constructor for exception class java.sql.
SQLTransientConnectionException
Constructs a
SQLTransientConnectionException
object
 with a given
reason
.
SQLTransientConnectionException(String, String)
- Constructor for exception class java.sql.
SQLTransientConnectionException
Constructs a
SQLTransientConnectionException
object
 with a given
reason
and
SQLState
.
SQLTransientConnectionException(String, String, int)
- Constructor for exception class java.sql.
SQLTransientConnectionException
Constructs a
SQLTransientConnectionException
object
 with a given
reason
,
SQLState
and
vendorCode
.
SQLTransientConnectionException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLTransientConnectionException
Constructs a
SQLTransientConnectionException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLTransientConnectionException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLTransientConnectionException
Constructs a
SQLTransientConnectionException
object
 with a given
reason
,
SQLState
and
cause
.
SQLTransientConnectionException(String, Throwable)
- Constructor for exception class java.sql.
SQLTransientConnectionException
Constructs a
SQLTransientConnectionException
object
 with a given
reason
and
cause
.
SQLTransientConnectionException(Throwable)
- Constructor for exception class java.sql.
SQLTransientConnectionException
Constructs a
SQLTransientConnectionException
object
 with a given
cause
.
SQLTransientException
- Exception Class in
java.sql
The subclass of
SQLException
is thrown in situations where a
 previously failed operation might be able to succeed when the operation is
 retried without any intervention by application-level functionality.
SQLTransientException()
- Constructor for exception class java.sql.
SQLTransientException
Constructs a
SQLTransientException
object.
SQLTransientException(String)
- Constructor for exception class java.sql.
SQLTransientException
Constructs a
SQLTransientException
object
  with a given
reason
.
SQLTransientException(String, String)
- Constructor for exception class java.sql.
SQLTransientException
Constructs a
SQLTransientException
object
 with a given
reason
and
SQLState
.
SQLTransientException(String, String, int)
- Constructor for exception class java.sql.
SQLTransientException
Constructs a
SQLTransientException
object
  with a given
reason
,
SQLState
and
vendorCode
.
SQLTransientException(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLTransientException
Constructs a
SQLTransientException
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLTransientException(String, String, Throwable)
- Constructor for exception class java.sql.
SQLTransientException
Constructs a
SQLTransientException
object
 with a given
reason
,
SQLState
and
cause
.
SQLTransientException(String, Throwable)
- Constructor for exception class java.sql.
SQLTransientException
Constructs a
SQLTransientException
object
 with a given
reason
and
cause
.
SQLTransientException(Throwable)
- Constructor for exception class java.sql.
SQLTransientException
Constructs a
SQLTransientException
object
 with a given
cause
.
SQLType
- Interface in
java.sql
An object that is used to identify a generic SQL type, called a JDBC type or
 a vendor specific data type.
SQLWarning
- Exception Class in
java.sql
An exception that provides information on  database access
 warnings.
SQLWarning()
- Constructor for exception class java.sql.
SQLWarning
Constructs a
SQLWarning
object.
SQLWarning(String)
- Constructor for exception class java.sql.
SQLWarning
Constructs a
SQLWarning
object
 with a given
reason
.
SQLWarning(String, String)
- Constructor for exception class java.sql.
SQLWarning
Constructs a
SQLWarning
object
 with a given
reason
and
SQLState
.
SQLWarning(String, String, int)
- Constructor for exception class java.sql.
SQLWarning
Constructs a
SQLWarning
object
  with a given
reason
,
SQLState
and
vendorCode
.
SQLWarning(String, String, int, Throwable)
- Constructor for exception class java.sql.
SQLWarning
Constructs a
SQLWarning
object
 with a given
reason
,
SQLState
,
vendorCode
and
cause
.
SQLWarning(String, String, Throwable)
- Constructor for exception class java.sql.
SQLWarning
Constructs a
SQLWarning
object
 with a given
reason
,
SQLState
and
cause
.
SQLWarning(String, Throwable)
- Constructor for exception class java.sql.
SQLWarning
Constructs a
SQLWarning
object
 with a given
reason
and
cause
.
SQLWarning(Throwable)
- Constructor for exception class java.sql.
SQLWarning
Constructs a
SQLWarning
object
 with a given
cause
.
SQLXML
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
SQLXML
.
SQLXML
- Interface in
java.sql
The mapping in the JavaTM programming language for the SQL XML type.
SQLXML
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred to
 as a type code, that identifies the generic SQL type
XML
.
sqrt()
- Method in class java.math.
BigInteger
Returns the integer square root of this BigInteger.
sqrt()
- Method in class jdk.incubator.vector.
DoubleVector
Computes the square root of this vector.
sqrt()
- Method in class jdk.incubator.vector.
FloatVector
Computes the square root of this vector.
sqrt(double)
- Static method in class java.lang.
Math
Returns the correctly rounded positive square root of a
double
value.
sqrt(double)
- Static method in class java.lang.
StrictMath
Returns the correctly rounded positive square root of a
double
value.
sqrt(MathContext)
- Method in class java.math.
BigDecimal
Returns an approximation to the square root of
this
with rounding according to the context settings.
SQRT
- Static variable in class jdk.incubator.vector.
VectorOperators
Produce
sqrt(a)
.
sqrtAndRemainder()
- Method in class java.math.
BigInteger
Returns an array of two BigIntegers containing the integer square root
s
of
this
and its remainder
this - s*s
,
 respectively.
squareButton
- Variable in class javax.swing.plaf.basic.
BasicComboBoxUI
Indicates whether or not the combo box button should be square.
Src
- Static variable in class java.awt.
AlphaComposite
AlphaComposite
object that implements the opaque SRC rule
 with an alpha of 1.0f.
SRC
- Static variable in class java.awt.
AlphaComposite
The source is copied to the destination
 (Porter-Duff Source rule).
SRC
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "src"
SRC_ATOP
- Static variable in class java.awt.
AlphaComposite
The part of the source lying inside of the destination
 is composited onto the destination
 (Porter-Duff Source Atop Destination rule).
SRC_IN
- Static variable in class java.awt.
AlphaComposite
The part of the source lying inside of the destination replaces
 the destination
 (Porter-Duff Source In Destination rule).
SRC_OUT
- Static variable in class java.awt.
AlphaComposite
The part of the source lying outside of the destination
 replaces the destination
 (Porter-Duff Source Held Out By Destination rule).
SRC_OVER
- Static variable in class java.awt.
AlphaComposite
The source is composited over the destination
 (Porter-Duff Source Over Destination rule).
SrcAtop
- Static variable in class java.awt.
AlphaComposite
AlphaComposite
object that implements the opaque SRC_ATOP rule
 with an alpha of 1.0f.
srccols
- Variable in class java.awt.image.
ReplicateScaleFilter
An
int
array containing information about a
 column of pixels.
srcHeight
- Variable in class java.awt.image.
ReplicateScaleFilter
The height of the source image.
SrcIn
- Static variable in class java.awt.
AlphaComposite
AlphaComposite
object that implements the opaque SRC_IN rule
 with an alpha of 1.0f.
SrcOut
- Static variable in class java.awt.
AlphaComposite
AlphaComposite
object that implements the opaque SRC_OUT rule
 with an alpha of 1.0f.
SrcOver
- Static variable in class java.awt.
AlphaComposite
AlphaComposite
object that implements the opaque SRC_OVER rule
 with an alpha of 1.0f.
srcrows
- Variable in class java.awt.image.
ReplicateScaleFilter
An
int
array containing information about a
 row of pixels.
srcWidth
- Variable in class java.awt.image.
ReplicateScaleFilter
The width of the source image.
SRGB
- Enum constant in enum class java.awt.
MultipleGradientPaint.ColorSpaceType
Indicates that the color interpolation should occur in sRGB space.
sslContext()
- Method in class java.net.http.
HttpClient
Returns this client's
SSLContext
.
sslContext(SSLContext)
- Method in interface java.net.http.
HttpClient.Builder
Sets an
SSLContext
.
SSLContext
- Class in
javax.net.ssl
Instances of this class represent a secure socket protocol
 implementation which acts as a factory for secure socket
 factories or
SSLEngine
s.
SSLContext(SSLContextSpi, Provider, String)
- Constructor for class javax.net.ssl.
SSLContext
Creates an SSLContext object.
SSLContextSpi
- Class in
javax.net.ssl
This class defines the
Service Provider Interface
(
SPI
)
 for the
SSLContext
class.
SSLContextSpi()
- Constructor for class javax.net.ssl.
SSLContextSpi
Constructor for subclasses to call.
SSLEngine
- Class in
javax.net.ssl
A class which enables secure communications using protocols such as
 the Secure Sockets Layer (SSL) or
IETF RFC 2246 "Transport
 Layer Security" (TLS)
protocols, but is transport independent.
SSLEngine()
- Constructor for class javax.net.ssl.
SSLEngine
Constructor for an
SSLEngine
providing no hints
 for an internal session reuse strategy.
SSLEngine(String, int)
- Constructor for class javax.net.ssl.
SSLEngine
Constructor for an
SSLEngine
.
SSLEngineResult
- Class in
javax.net.ssl
An encapsulation of the result state produced by
SSLEngine
I/O calls.
SSLEngineResult(SSLEngineResult.Status, SSLEngineResult.HandshakeStatus, int, int)
- Constructor for class javax.net.ssl.
SSLEngineResult
Initializes a new instance of this class.
SSLEngineResult(SSLEngineResult.Status, SSLEngineResult.HandshakeStatus, int, int, long)
- Constructor for class javax.net.ssl.
SSLEngineResult
Initializes a new instance of this class.
SSLEngineResult.HandshakeStatus
- Enum Class in
javax.net.ssl
An
SSLEngineResult
enum describing the current
 handshaking state of this
SSLEngine
.
SSLEngineResult.Status
- Enum Class in
javax.net.ssl
An
SSLEngineResult
enum describing the overall result
 of the
SSLEngine
operation.
SSLException
- Exception Class in
javax.net.ssl
Indicates some kind of error detected by an SSL subsystem.
SSLException(String)
- Constructor for exception class javax.net.ssl.
SSLException
Constructs an exception reporting an error found by
 an SSL subsystem.
SSLException(String, Throwable)
- Constructor for exception class javax.net.ssl.
SSLException
Creates a
SSLException
with the specified
 detail message and cause.
SSLException(Throwable)
- Constructor for exception class javax.net.ssl.
SSLException
Creates a
SSLException
with the specified cause
 and a detail message of
(cause==null ? null : cause.toString())
(which typically contains the class and detail message of
cause
).
SSLHandshakeException
- Exception Class in
javax.net.ssl
Indicates that the client and server could not negotiate the
 desired level of security.
SSLHandshakeException(String)
- Constructor for exception class javax.net.ssl.
SSLHandshakeException
Constructs an exception reporting an error found by
 an SSL subsystem during handshaking.
SSLHandshakeException(String, Throwable)
- Constructor for exception class javax.net.ssl.
SSLHandshakeException
Creates a
SSLHandshakeException
with the specified detail
 message and cause.
SSLKeyException
- Exception Class in
javax.net.ssl
Reports a bad SSL key.
SSLKeyException(String)
- Constructor for exception class javax.net.ssl.
SSLKeyException
Constructs an exception reporting a key management error
 found by an SSL subsystem.
SSLKeyException(String, Throwable)
- Constructor for exception class javax.net.ssl.
SSLKeyException
Creates a
SSLKeyException
with the specified detail
 message and cause.
sslParameters()
- Method in class java.net.http.
HttpClient
Returns a copy of this client's
SSLParameters
.
sslParameters(SSLParameters)
- Method in interface java.net.http.
HttpClient.Builder
Sets an
SSLParameters
.
SSLParameters
- Class in
javax.net.ssl
Encapsulates parameters for an SSL/TLS/DTLS connection.
SSLParameters()
- Constructor for class javax.net.ssl.
SSLParameters
Constructs SSLParameters.
SSLParameters(String[])
- Constructor for class javax.net.ssl.
SSLParameters
Constructs SSLParameters from the specified array of ciphersuites.
SSLParameters(String[], String[])
- Constructor for class javax.net.ssl.
SSLParameters
Constructs SSLParameters from the specified array of ciphersuites
 and protocols.
SSLPeerUnverifiedException
- Exception Class in
javax.net.ssl
Indicates that the peer's identity has not been verified.
SSLPeerUnverifiedException(String)
- Constructor for exception class javax.net.ssl.
SSLPeerUnverifiedException
Constructs an exception reporting that the SSL peer's
 identity has not been verified.
SSLPeerUnverifiedException(String, Throwable)
- Constructor for exception class javax.net.ssl.
SSLPeerUnverifiedException
Creates a
SSLPeerUnverifiedException
with the specified detail
 message and cause.
SSLPermission
- Class in
javax.net.ssl
This class is for various network permissions.
SSLPermission(String)
- Constructor for class javax.net.ssl.
SSLPermission
Creates a new SSLPermission with the specified name.
SSLPermission(String, String)
- Constructor for class javax.net.ssl.
SSLPermission
Creates a new SSLPermission object with the specified name.
SSLProtocolException
- Exception Class in
javax.net.ssl
Reports an error in the operation of the SSL protocol.
SSLProtocolException(String)
- Constructor for exception class javax.net.ssl.
SSLProtocolException
Constructs an exception reporting an SSL protocol error
 detected by an SSL subsystem.
SSLProtocolException(String, Throwable)
- Constructor for exception class javax.net.ssl.
SSLProtocolException
Creates a
SSLProtocolException
with the specified detail
 message and cause.
SslRMIClientSocketFactory
- Class in
javax.rmi.ssl
An
SslRMIClientSocketFactory
instance is used by the RMI
 runtime in order to obtain client sockets for RMI calls via SSL.
SslRMIClientSocketFactory()
- Constructor for class javax.rmi.ssl.
SslRMIClientSocketFactory
Creates a new
SslRMIClientSocketFactory
.
SslRMIServerSocketFactory
- Class in
javax.rmi.ssl
An
SslRMIServerSocketFactory
instance is used by the RMI
 runtime in order to obtain server sockets for RMI calls via SSL.
SslRMIServerSocketFactory()
- Constructor for class javax.rmi.ssl.
SslRMIServerSocketFactory
Creates a new
SslRMIServerSocketFactory
with
 the default SSL socket configuration.
SslRMIServerSocketFactory(String[], String[], boolean)
- Constructor for class javax.rmi.ssl.
SslRMIServerSocketFactory
Creates a new
SslRMIServerSocketFactory
with
 the specified SSL socket configuration.
SslRMIServerSocketFactory(SSLContext, String[], String[], boolean)
- Constructor for class javax.rmi.ssl.
SslRMIServerSocketFactory
Creates a new
SslRMIServerSocketFactory
with the
 specified
SSLContext
and SSL socket configuration.
SSLServerSocket
- Class in
javax.net.ssl
This class extends
ServerSocket
and
 provides secure server sockets using protocols such as the Secure
 Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.
SSLServerSocket()
- Constructor for class javax.net.ssl.
SSLServerSocket
Used only by subclasses.
SSLServerSocket(int)
- Constructor for class javax.net.ssl.
SSLServerSocket
Used only by subclasses.
SSLServerSocket(int, int)
- Constructor for class javax.net.ssl.
SSLServerSocket
Used only by subclasses.
SSLServerSocket(int, int, InetAddress)
- Constructor for class javax.net.ssl.
SSLServerSocket
Used only by subclasses.
SSLServerSocketFactory
- Class in
javax.net.ssl
SSLServerSocketFactory
s create
SSLServerSocket
s.
SSLServerSocketFactory()
- Constructor for class javax.net.ssl.
SSLServerSocketFactory
Constructor is used only by subclasses.
sslSession()
- Method in interface java.net.http.
HttpResponse
Returns an
Optional
containing the
SSLSession
in effect
 for this response.
SSLSession
- Interface in
javax.net.ssl
In SSL, sessions are used to describe an ongoing relationship between
 two entities.
SSLSessionBindingEvent
- Class in
javax.net.ssl
This event is propagated to a SSLSessionBindingListener.
SSLSessionBindingEvent(SSLSession, String)
- Constructor for class javax.net.ssl.
SSLSessionBindingEvent
Constructs a new SSLSessionBindingEvent.
SSLSessionBindingListener
- Interface in
javax.net.ssl
This interface is implemented by objects which want to know when
 they are being bound or unbound from a SSLSession.
SSLSessionContext
- Interface in
javax.net.ssl
A
SSLSessionContext
represents a set of
SSLSession
s associated with a single entity.
SSLSocket
- Class in
javax.net.ssl
This class extends
Socket
and provides secure
 sockets using protocols such as the "Secure
 Sockets Layer" (SSL) or IETF "Transport Layer Security" (TLS) protocols.
SSLSocket()
- Constructor for class javax.net.ssl.
SSLSocket
Used only by subclasses.
SSLSocket(String, int)
- Constructor for class javax.net.ssl.
SSLSocket
Used only by subclasses.
SSLSocket(String, int, InetAddress, int)
- Constructor for class javax.net.ssl.
SSLSocket
Used only by subclasses.
SSLSocket(InetAddress, int)
- Constructor for class javax.net.ssl.
SSLSocket
Used only by subclasses.
SSLSocket(InetAddress, int, InetAddress, int)
- Constructor for class javax.net.ssl.
SSLSocket
Used only by subclasses.
SSLSocketFactory
- Class in
javax.net.ssl
SSLSocketFactory
s create
SSLSocket
s.
SSLSocketFactory()
- Constructor for class javax.net.ssl.
SSLSocketFactory
Constructor is used only by subclasses.
Stack<E>
- Class in
java.util
The
Stack
class represents a last-in-first-out
 (LIFO) stack of objects.
Stack()
- Constructor for class java.util.
Stack
Creates an empty Stack.
stackDepth()
- Method in interface com.sun.jdi.
MonitorInfo
Returns the stack depth at which this monitor was
 acquired by the owning thread.
StackFrame
- Interface in
com.sun.jdi
The state of one method invocation on a thread's call stack.
StackOverflowError
- Exception Class in
java.lang
Thrown when a stack overflow occurs because an application
 recurses too deeply.
StackOverflowError()
- Constructor for exception class java.lang.
StackOverflowError
Constructs a
StackOverflowError
with no detail message.
StackOverflowError(String)
- Constructor for exception class java.lang.
StackOverflowError
Constructs a
StackOverflowError
with the specified
 detail message.
stackSize(long)
- Method in interface java.lang.
Thread.Builder.OfPlatform
Sets the desired stack size.
StackTrace
- Annotation Interface in
jdk.jfr
Event annotation, determines whether an event by default has a stack trace
 or not.
StackTraceElement
- Class in
java.lang
An element in a stack trace, as returned by
Throwable.getStackTrace()
.
StackTraceElement(String, String, String, int)
- Constructor for class java.lang.
StackTraceElement
Creates a stack trace element representing the specified execution
 point.
StackTraceElement(String, String, String, String, String, String, int)
- Constructor for class java.lang.
StackTraceElement
Creates a stack trace element representing the specified execution
 point.
StackWalker
- Class in
java.lang
A stack walker.
StackWalker.Option
- Enum Class in
java.lang
Stack walker option to configure the
stack frame
information obtained by a
StackWalker
.
StackWalker.StackFrame
- Interface in
java.lang
A
StackFrame
object represents a method invocation returned by
StackWalker
.
StampedLock
- Class in
java.util.concurrent.locks
A capability-based lock with three modes for controlling read/write
 access.
StampedLock()
- Constructor for class java.util.concurrent.locks.
StampedLock
Creates a new lock, initially in unlocked state.
STANDALONE
- Static variable in class javax.xml.transform.
OutputKeys
standalone = "yes" | "no".
standaloneSet()
- Method in interface javax.xml.stream.events.
StartDocument
Returns true if the standalone attribute is set in
 the encoding declaration of the document.
standaloneSet()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
standaloneSet()
- Method in interface javax.xml.stream.
XMLStreamReader
Checks if standalone was set in the document
STANDARD
- Enum constant in enum class java.time.zone.
ZoneOffsetTransitionRule.TimeDefinition
The local date-time is expressed in terms of the standard offset.
STANDARD
- Enum constant in enum class jdk.javadoc.doclet.
Doclet.Option.Kind
A standard option.
STANDARD
- Static variable in class java.awt.font.
GlyphMetrics
Indicates a glyph that represents a single standard
 character.
STANDARD
- Static variable in class java.time.format.
DecimalStyle
The standard set of non-localized decimal style symbols.
STANDARD
- Static variable in class javax.print.attribute.standard.
JobSheets
One or more site specific standard job sheets are printed. e.g. a single
 start sheet is printed, or both start and end sheets are printed.
STANDARD_INPUT_TYPE
- Static variable in class javax.imageio.spi.
ImageReaderSpi
Deprecated.
Instead of using this field, directly create
 the equivalent array
{ ImageInputStream.class }
.
STANDARD_OUTPUT_TYPE
- Static variable in class javax.imageio.spi.
ImageWriterSpi
Deprecated.
Instead of using this field, directly create
 the equivalent array
{ ImageOutputStream.class }
.
STANDARD_TIME
- Static variable in class java.util.
SimpleTimeZone
Constant for a mode of start or end time specified as standard time.
Standard (Plug-in Neutral) Metadata Format Specification
- Search tag in package javax.imageio.metadata
Section
StandardCharsets
- Class in
java.nio.charset
Constant definitions for the standard
charsets
.
Standard charsets
- Search tag in class java.nio.charset.Charset
Section
StandardConstants
- Class in
javax.net.ssl
Standard constants definitions
StandardCopyOption
- Enum Class in
java.nio.file
Defines the standard copy options.
StandardDoclet
- Class in
jdk.javadoc.doclet
This doclet generates HTML-formatted documentation for the specified modules,
 packages and types.
StandardDoclet()
- Constructor for class jdk.javadoc.doclet.
StandardDoclet
Creates an instance of the standard doclet, used to generate HTML-formatted
 documentation.
StandardEmitterMBean
- Class in
javax.management
An MBean whose management interface is determined by reflection
 on a Java interface, and that emits notifications.
StandardEmitterMBean(Class<?>, boolean, NotificationEmitter)
- Constructor for class javax.management.
StandardEmitterMBean
Make an MBean whose management interface is specified by
mbeanInterface
, and where notifications are handled by
 the given
NotificationEmitter
.
StandardEmitterMBean(Class<?>, NotificationEmitter)
- Constructor for class javax.management.
StandardEmitterMBean
Make an MBean whose management interface is specified by
mbeanInterface
, and
 where notifications are handled by the given
NotificationEmitter
.
StandardEmitterMBean(T, Class<T>, boolean, NotificationEmitter)
- Constructor for class javax.management.
StandardEmitterMBean
Make an MBean whose management interface is specified by
mbeanInterface
, with the given implementation and where
 notifications are handled by the given
NotificationEmitter
.
StandardEmitterMBean(T, Class<T>, NotificationEmitter)
- Constructor for class javax.management.
StandardEmitterMBean
Make an MBean whose management interface is specified by
mbeanInterface
, with the given implementation and
 where notifications are handled by the given
NotificationEmitter
.
standardFormatSupported
- Variable in class javax.imageio.metadata.
IIOMetadata
A boolean indicating whether the concrete subclass supports the
 standard metadata format, set via the constructor.
StandardJavaFileManager
- Interface in
javax.tools
File manager based on
java.io.File
and
java.nio.file.Path
.
StandardJavaFileManager.PathFactory
- Interface in
javax.tools
Factory to create
Path
objects from strings.
StandardLocation
- Enum Class in
javax.tools
Standard locations of file objects.
StandardMBean
- Class in
javax.management
An MBean whose management interface is determined by reflection
 on a Java interface.
StandardMBean(Class<?>)
- Constructor for class javax.management.
StandardMBean
Make a DynamicMBean out of
this
, using the specified
mbeanInterface
class.
StandardMBean(Class<?>, boolean)
- Constructor for class javax.management.
StandardMBean
Make a DynamicMBean out of
this
, using the specified
mbeanInterface
class, and choosing whether the resulting
 MBean is an MXBean.
StandardMBean(T, Class<T>)
- Constructor for class javax.management.
StandardMBean
Make a DynamicMBean out of the object
implementation
, using the specified
mbeanInterface
class.
StandardMBean(T, Class<T>, boolean)
- Constructor for class javax.management.
StandardMBean
Make a DynamicMBean out of the object
implementation
, using the specified
mbeanInterface
class, and choosing whether the
 resultant MBean is an MXBean.
Standard MBean
- Search tag in annotation interface javax.management.MXBean
Section
Standard MBean
- Search tag in annotation interface javax.management.MXBean
Section
Standard MBean
- Search tag in annotation interface javax.management.MXBean
Section
Standard MBean
- Search tag in annotation interface javax.management.MXBean
Section
Standard MBean
- Search tag in annotation interface javax.management.MXBean
Section
Standard MBean
- Search tag in annotation interface javax.management.MXBean
Section
Standard MBeans
- Search tag in package javax.management
Section
standardMetadataFormatName
- Static variable in class javax.imageio.metadata.
IIOMetadataFormatImpl
A
String
constant containing the standard format
 name,
"javax_imageio_1.0"
.
StandardNamespace
- Enum Class in
jdk.dynalink
An enumeration of standard namespaces defined by Dynalink.
StandardOpenOption
- Enum Class in
java.nio.file
Defines the standard open options.
StandardOperation
- Enum Class in
jdk.dynalink
Defines the standard dynamic operations.
Standard plug-in for GIF image format
- Search tag in package javax.imageio
Section
Standard Plug-in Notes
- Search tag in package javax.imageio
Section
StandardProtocolFamily
- Enum Class in
java.net
Defines the standard families of communication protocols.
StandardSocketOptions
- Class in
java.net
Defines the
standard
socket options.
StandardWatchEventKinds
- Class in
java.nio.file
Defines the
standard
event kinds.
STANDBY
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "standby"
STAPLE
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with one or more staples.
STAPLE_BOTTOM_LEFT
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with one or more staples in the bottom left corner.
STAPLE_BOTTOM_RIGHT
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with one or more staples in the bottom right corner.
STAPLE_DUAL_BOTTOM
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with two staples (wire stitches) along the bottom
 edge assuming a portrait document (see above).
STAPLE_DUAL_LEFT
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with two staples (wire stitches) along the left edge
 assuming a portrait document (see above).
STAPLE_DUAL_RIGHT
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with two staples (wire stitches) along the right
 edge assuming a portrait document (see above).
STAPLE_DUAL_TOP
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with two staples (wire stitches) along the top edge
 assuming a portrait document (see above).
STAPLE_TOP_LEFT
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with one or more staples in the top left corner.
STAPLE_TOP_RIGHT
- Static variable in class javax.print.attribute.standard.
Finishings
Bind the document(s) with one or more staples in the top right corner.
start
- Variable in class java.awt.geom.
Arc2D.Double
The starting angle of the arc in degrees.
start
- Variable in class java.awt.geom.
Arc2D.Float
The starting angle of the arc in degrees.
start()
- Method in class com.sun.net.httpserver.
HttpServer
Starts this server in a new background thread.
start()
- Method in class java.applet.
Applet
Deprecated.
Called by the browser or applet viewer to inform this applet that it
 should start its execution.
start()
- Method in class java.lang.
ProcessBuilder
Starts a new process using the attributes of this process builder.
start()
- Method in class java.lang.
Thread
Schedules this thread to begin execution.
start()
- Method in class java.util.regex.
Matcher
Returns the start index of the previous match.
start()
- Method in interface java.util.regex.
MatchResult
Returns the start index of the match.
start()
- Method in class javax.management.monitor.
CounterMonitor
Starts the counter monitor.
start()
- Method in class javax.management.monitor.
GaugeMonitor
Starts the gauge monitor.
start()
- Method in class javax.management.monitor.
Monitor
Starts the monitor.
start()
- Method in interface javax.management.monitor.
MonitorMBean
Starts the monitor.
start()
- Method in class javax.management.monitor.
StringMonitor
Starts the string monitor.
start()
- Method in interface javax.management.remote.
JMXConnectorServerMBean
Activates the connector server, that is, starts listening for
 client connections.
start()
- Method in class javax.management.remote.rmi.
RMIConnectorServer
Activates the connector server, that is starts listening for
 client connections.
start()
- Method in class javax.management.timer.
Timer
Starts the timer.
start()
- Method in interface javax.management.timer.
TimerMBean
Starts the timer.
start()
- Method in interface javax.sound.midi.
Sequencer
Starts playback of the MIDI data in the currently loaded sequence.
start()
- Method in interface javax.sound.sampled.
DataLine
Allows a line to engage in data I/O.
start()
- Method in class javax.swing.
Timer
Starts the
Timer
,
 causing it to start sending action events
 to its listeners.
start()
- Method in interface jdk.jfr.consumer.
EventStream
Starts processing of actions.
start()
- Method in class jdk.jfr.consumer.
RecordingStream
start()
- Method in class jdk.jfr.
Recording
Starts this recording.
start()
- Method in record class jdk.jshell.
SourceCodeAnalysis.Highlight
Returns the value of the
start
record component.
start()
- Method in class jdk.management.jfr.
RemoteRecordingStream
start(int)
- Method in class java.util.regex.
Matcher
Returns the start index of the subsequence captured by the given group
 during the previous match operation.
start(int)
- Method in interface java.util.regex.
MatchResult
Returns the start index of the subsequence captured by the given group
 during this match.
start(Runnable)
- Method in interface java.lang.
Thread.Builder
Creates a new
Thread
from the current state of the builder and
 schedules it to execute.
start(String)
- Method in class java.util.regex.
Matcher
Returns the start index of the subsequence captured by the given
named-capturing group
during the
 previous match operation.
start(String)
- Method in interface java.util.regex.
MatchResult
Returns the start index of the subsequence captured by the given
named-capturing group
during the
 previous match operation.
start(String...)
- Method in interface jdk.jshell.tool.
JavaShellToolBuilder
Run an instance of the Java shell tool as configured by the other methods
 in this interface.
start(HTML.Tag, MutableAttributeSet)
- Method in class javax.swing.text.html.
HTMLDocument.HTMLReader.TagAction
Called when a start tag is seen for the
 type of tag this action was registered
 to.
start(Xid, int)
- Method in interface javax.transaction.xa.
XAResource
Starts work on behalf of a transaction branch specified in
xid
.
START
- Static variable in class javax.sound.midi.
ShortMessage
Status byte for Start message (0xFA, or 250).
START
- Static variable in class javax.sound.sampled.
LineEvent.Type
A type of event that is sent when a line begins to engage in active
 input or output of audio data in response to a
start
request.
START
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "start"
START_DOCUMENT
- Static variable in interface javax.xml.stream.
XMLStreamConstants
Indicates an event is a start document
START_ELEMENT
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
StartElementTree
representing the start of an HTML element.
START_ELEMENT
- Static variable in interface javax.xml.stream.
XMLStreamConstants
Indicates an event is a start element
START_PUNCTUATION
- Static variable in class java.lang.
Character
General category "Ps" in the Unicode specification.
START_TO_END
- Static variable in interface org.w3c.dom.ranges.
Range
Compare start boundary-point of
sourceRange
to end
 boundary-point of Range on which
compareBoundaryPoints
is invoked.
START_TO_START
- Static variable in interface org.w3c.dom.ranges.
Range
Compare start boundary-point of
sourceRange
to start
 boundary-point of Range on which
compareBoundaryPoints
is invoked.
startAnimationTimer()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Starts the animation thread, creating and initializing
 it if necessary.
startAsync()
- Method in interface jdk.jfr.consumer.
EventStream
Starts asynchronous processing of actions.
startAsync()
- Method in class jdk.jfr.consumer.
RecordingStream
Starts asynchronous processing of actions.
startAsync()
- Method in class jdk.management.jfr.
RemoteRecordingStream
startAutoScrolling(int)
- Method in class javax.swing.plaf.basic.
BasicComboPopup
This protected method is implementation specific and should be private.
startCDATA()
- Method in class org.xml.sax.ext.
DefaultHandler2
startCDATA()
- Method in interface org.xml.sax.ext.
LexicalHandler
Report the start of a CDATA section.
startCellEditing(EventObject)
- Method in class javax.swing.
DefaultCellEditor.EditorDelegate
Returns true to indicate that editing has begun.
startDocument()
- Method in interface org.xml.sax.
ContentHandler
Receive notification of the beginning of a document.
startDocument()
- Method in interface org.xml.sax.
DocumentHandler
Deprecated.
Receive notification of the beginning of a document.
startDocument()
- Method in class org.xml.sax.
HandlerBase
Deprecated.
Receive notification of the beginning of the document.
startDocument()
- Method in class org.xml.sax.helpers.
DefaultHandler
Receive notification of the beginning of the document.
startDocument()
- Method in class org.xml.sax.helpers.
ParserAdapter
Adapter implementation method; do not call.
startDocument()
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Filter a start document event.
startDocument()
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Start document event.
StartDocument
- Interface in
javax.xml.stream.events
An interface for the start document event
startDrag(Cursor, Transferable)
- Method in class java.awt.dnd.
DragGestureEvent
Starts the drag operation given the
Cursor
for this drag
 operation and the
Transferable
representing the source data
 for this drag operation.
startDrag(Cursor, Transferable, DragSourceListener)
- Method in class java.awt.dnd.
DragGestureEvent
Starts the drag given the initial
Cursor
to display,
 the
Transferable
object,
 and the
DragSourceListener
to use.
startDrag(Cursor, Image, Point, Transferable, DragSourceListener)
- Method in class java.awt.dnd.
DragGestureEvent
Start the drag given the initial
Cursor
to display,
 a drag
Image
, the offset of
 the
Image
,
 the
Transferable
object, and
 the
DragSourceListener
to use.
startDrag(DragGestureEvent, Cursor, Transferable, DragSourceListener)
- Method in class java.awt.dnd.
DragSource
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to
 use,
 the
Transferable
subject data
 of the drag, and the
DragSourceListener
.
startDrag(DragGestureEvent, Cursor, Transferable, DragSourceListener, FlavorMap)
- Method in class java.awt.dnd.
DragSource
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to use,
 the
Transferable
subject data
 of the drag, the
DragSourceListener
,
 and the
FlavorMap
.
startDrag(DragGestureEvent, Cursor, Image, Point, Transferable, DragSourceListener)
- Method in class java.awt.dnd.
DragSource
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to use,
 the
Image
to drag,
 the offset of the
Image
origin
 from the hotspot of the
Cursor
at the instant of the trigger,
 the subject data of the drag, and
 the
DragSourceListener
.
startDrag(DragGestureEvent, Cursor, Image, Point, Transferable, DragSourceListener, FlavorMap)
- Method in class java.awt.dnd.
DragSource
Start a drag, given the
DragGestureEvent
that initiated the drag, the initial
Cursor
to use,
 the
Image
to drag,
 the offset of the
Image
origin
 from the hotspot of the
Cursor
at
 the instant of the trigger,
 the
Transferable
subject data
 of the drag, the
DragSourceListener
,
 and the
FlavorMap
.
startDragging()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Should be messaged before the dragging session starts, resets
 lastDragLocation and dividerSize.
startDTD(String, String, String)
- Method in class org.xml.sax.ext.
DefaultHandler2
startDTD(String, String, String)
- Method in interface org.xml.sax.ext.
LexicalHandler
Report the start of DTD declarations, if any.
started(TaskEvent)
- Method in interface com.sun.source.util.
TaskListener
Invoked when an event has begun.
STARTED
- Enum constant in enum class javax.swing.
SwingWorker.StateValue
SwingWorker
is
STARTED
before invoking
doInBackground
.
startEditing(TreePath, MouseEvent)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Will start editing for node if there is a
cellEditor
and
shouldSelectCell
returns
true
.
startEditingAtPath(JTree, TreePath)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Selects the last item in path and tries to edit it.
startEditingAtPath(JTree, TreePath)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
startEditingAtPath
method on each UI handled by this object.
startEditingAtPath(JTree, TreePath)
- Method in class javax.swing.plaf.
TreeUI
Selects the last item in path and tries to edit it.
startEditingAtPath(TreePath)
- Method in class javax.swing.
JTree
Selects the node identified by the specified path and initiates
 editing.
startEditingTimer()
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Starts the editing timer.
startElement(String, String, String, Attributes)
- Method in interface org.xml.sax.
ContentHandler
Receive notification of the beginning of an element.
startElement(String, String, String, Attributes)
- Method in class org.xml.sax.helpers.
DefaultHandler
Receive notification of the start of an element.
startElement(String, String, String, Attributes)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Filter a start element event.
startElement(String, String, String, Attributes)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Adapt a SAX2 start element event.
startElement(String, AttributeList)
- Method in interface org.xml.sax.
DocumentHandler
Deprecated.
Receive notification of the beginning of an element.
startElement(String, AttributeList)
- Method in class org.xml.sax.
HandlerBase
Deprecated.
Receive notification of the start of an element.
startElement(String, AttributeList)
- Method in class org.xml.sax.helpers.
ParserAdapter
Adapter implementation method; do not call.
startElement(Element)
- Method in interface org.w3c.dom.ls.
LSParserFilter
The parser will call this method after each
Element
start
 tag has been scanned, but before the remainder of the
Element
is processed.
StartElement
- Interface in
javax.xml.stream.events
The StartElement interface provides access to information about
 start elements.
StartElementTree
- Interface in
com.sun.source.doctree
A tree node for the start of an HTML element.
startEntity(String)
- Method in class org.xml.sax.ext.
DefaultHandler2
startEntity(String)
- Method in interface org.xml.sax.ext.
LexicalHandler
Report the beginning of some internal and external XML entities.
startFontTag(String)
- Method in class javax.swing.text.html.
MinimalHTMLWriter
This is no longer used, instead <span> will be written out.
startGrabbing()
- Method in class java.awt.image.
PixelGrabber
Request the PixelGrabber to start fetching the pixels.
startHandshake()
- Method in class javax.net.ssl.
SSLSocket
Starts an SSL handshake on this connection.
startIndex
- Variable in class javax.accessibility.
AccessibleAttributeSequence
The start index of the text sequence.
startIndex
- Variable in class javax.accessibility.
AccessibleTextSequence
The start index of the text sequence.
Starting an agent
- Search tag in package java.lang.instrument
Section
Starting an agent from the command-line interface
- Search tag in package java.lang.instrument
Section
Starting an agent in a running JVM
- Search tag in package java.lang.instrument
Section
Starting an agent packaged with an application in an executable JAR file
- Search tag in package java.lang.instrument
Section
startInstant()
- Method in interface java.lang.
ProcessHandle.Info
Returns the start time of the process.
startListening()
- Method in class com.sun.jdi.connect.spi.
TransportService
Listens on an address chosen by the transport service.
startListening(String)
- Method in class com.sun.jdi.connect.spi.
TransportService
Listens on the specified address for inbound connections.
startListening(Map<String, ? extends Connector.Argument>)
- Method in interface com.sun.jdi.connect.
ListeningConnector
Listens for one or more connections initiated by target VMs.
startLocalManagementAgent()
- Method in class com.sun.tools.attach.
VirtualMachine
Starts the local JMX management agent in the target virtual machine.
startManagementAgent(Properties)
- Method in class com.sun.tools.attach.
VirtualMachine
Starts the JMX management agent in the target virtual machine.
startPipeline(List<ProcessBuilder>)
- Static method in class java.lang.
ProcessBuilder
Starts a Process for each ProcessBuilder, creating a pipeline of
 processes linked by their standard output and standard input streams.
startPrefixMapping(String, String)
- Method in interface org.xml.sax.
ContentHandler
Begin the scope of a prefix-URI Namespace mapping.
startPrefixMapping(String, String)
- Method in class org.xml.sax.helpers.
DefaultHandler
Receive notification of the start of a Namespace mapping.
startPrefixMapping(String, String)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Filter a start Namespace prefix mapping event.
startPrefixMapping(String, String)
- Method in class org.xml.sax.helpers.
XMLReaderAdapter
Adapt a SAX2 start prefix mapping event.
startProduction(ImageConsumer)
- Method in class java.awt.image.
FilteredImageSource
Starts production of the filtered image.
startProduction(ImageConsumer)
- Method in interface java.awt.image.
ImageProducer
Registers the specified
ImageConsumer
object
 as a consumer and starts an immediate reconstruction of
 the image data which will then be delivered to this
 consumer and any other consumer which might have already
 been registered with the producer.
startProduction(ImageConsumer)
- Method in class java.awt.image.
MemoryImageSource
Adds an ImageConsumer to the list of consumers interested in
 data for this image and immediately starts delivery of the
 image data through the ImageConsumer interface.
startProduction(ImageConsumer)
- Method in class java.awt.image.renderable.
RenderableImageProducer
Adds an ImageConsumer to the list of consumers interested in
 data for this image, and immediately starts delivery of the
 image data through the ImageConsumer interface.
startRecording()
- Method in interface javax.sound.midi.
Sequencer
Starts recording and playback of MIDI data.
startRecording(long)
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Starts the recording with the specified ID.
startsWith(String)
- Method in class java.lang.
String
Tests if this string starts with the specified prefix.
startsWith(String)
- Method in interface java.nio.file.
Path
Tests if this path starts with a
Path
, constructed by converting
 the given path string, in exactly the manner specified by the
startsWith(Path)
method.
startsWith(String, int)
- Method in class java.lang.
String
Tests if the substring of this string beginning at the
 specified index starts with the specified prefix.
startsWith(Path)
- Method in interface java.nio.file.
Path
Tests if this path starts with the given path.
startsWith(List<Rdn>)
- Method in class javax.naming.ldap.
LdapName
Determines whether the specified RDN sequence forms a prefix of this
 LDAP name.
startsWith(Name)
- Method in class javax.naming.
CompositeName
Determines whether a composite name is a prefix of this composite name.
startsWith(Name)
- Method in class javax.naming.
CompoundName
Determines whether a compound name is a prefix of this compound name.
startsWith(Name)
- Method in class javax.naming.ldap.
LdapName
Determines whether this LDAP name starts with a specified LDAP name
 prefix.
startsWith(Name)
- Method in interface javax.naming.
Name
Determines whether this name starts with a specified prefix.
startTag(Element)
- Method in class javax.swing.text.html.
HTMLWriter
Writes out a start tag for the element.
startTag(TagElement)
- Method in class javax.swing.text.html.parser.
Parser
Handle a start tag.
STARTTAG
- Static variable in interface javax.swing.text.html.parser.
DTDConstants
The DTD constant corresponds to STARTTAG
StartTagType
- Static variable in class javax.swing.text.
DefaultStyledDocument.ElementSpec
A possible value for getType.
startTimer()
- Method in class javax.swing.plaf.basic.
BasicTreeUI.ComponentHandler
Creates, if necessary, and starts a Timer to check if need to
 resize the bounds.
StartTlsRequest
- Class in
javax.naming.ldap
This class implements the LDAPv3 Extended Request for StartTLS as
 defined in
Lightweight Directory
 Access Protocol (v3): Extension for Transport Layer Security
The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037
 and no extended request value is defined.
StartTlsRequest()
- Constructor for class javax.naming.ldap.
StartTlsRequest
Constructs a StartTLS extended request.
StartTlsResponse
- Class in
javax.naming.ldap
This class implements the LDAPv3 Extended Response for StartTLS as
 defined in
Lightweight Directory
 Access Protocol (v3): Extension for Transport Layer Security
The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037
 and no extended response value is defined.
StartTlsResponse()
- Constructor for class javax.naming.ldap.
StartTlsResponse
Constructs a StartTLS extended response.
startVirtualThread(Runnable)
- Static method in class java.lang.
Thread
Creates a virtual thread to execute a task and schedules it to execute.
state
- Variable in class java.security.
Signature
Current state of this
Signature
object.
state()
- Method in interface java.util.concurrent.
Future
Returns the computation state.
state()
- Method in interface java.util.concurrent.
StructuredTaskScope.Subtask
PREVIEW
Returns the state of the subtask.
State<T>
- Class in
javax.swing.plaf.nimbus
Represents a built in, or custom, state in Nimbus.
State(String)
- Constructor for class javax.swing.plaf.nimbus.
State
Create a new custom State.
STATE_FACTORIES
- Static variable in interface javax.naming.
Context
Constant that holds the name of the environment property
 for specifying the list of state factories to use.
stateBits()
- Method in class java.util.random.
RandomGeneratorFactory
Returns number of bits used by the
algorithm
to maintain state of seed.
stateChanged(ChangeEvent)
- Method in class javax.swing.
AbstractButton.ButtonChangeListener
stateChanged(ChangeEvent)
- Method in interface javax.swing.event.
ChangeListener
Invoked when the target of the listener has changed its state.
stateChanged(ChangeEvent)
- Method in class javax.swing.
JMenuItem.AccessibleJMenuItem
Supports the change listener interface and fires property changes.
stateChanged(ChangeEvent)
- Method in class javax.swing.
JScrollPane.AccessibleJScrollPane
Invoked when the target of the listener has changed its state.
stateChanged(ChangeEvent)
- Method in class javax.swing.
JSlider.AccessibleJSlider
Invoked when the target of the listener has changed its state.
stateChanged(ChangeEvent)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Invoked when the target of the listener has changed its state.
stateChanged(ChangeEvent)
- Method in class javax.swing.
JSpinner.DefaultEditor
This method is called when the spinner's model's state changes.
stateChanged(ChangeEvent)
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
stateChanged(ChangeEvent)
- Method in class javax.swing.
JTabbedPane.ModelListener
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicButtonListener
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicMenuUI.ChangeHandler
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI.ChangeHandler
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI.ModelListener
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI.HSBChangeListener
Deprecated.
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI.ViewportChangeHandler
Deprecated.
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI.VSBChangeListener
Deprecated.
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicSliderUI.ChangeHandler
stateChanged(ChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI.TabSelectionHandler
stateChanged(ChangeEvent)
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Invoked when the target of the listener has changed its state.
StateEdit
- Class in
javax.swing.undo
StateEdit is a general edit for objects that change state.
StateEdit(StateEditable)
- Constructor for class javax.swing.undo.
StateEdit
Create and return a new StateEdit.
StateEdit(StateEditable, String)
- Constructor for class javax.swing.undo.
StateEdit
Create and return a new StateEdit with a presentation name.
StateEditable
- Interface in
javax.swing.undo
StateEditable defines the interface for objects that can have
 their state undone/redone by a StateEdit.
StateFactory
- Interface in
javax.naming.spi
This interface represents a factory for obtaining the state of an
 object for binding.
Stateless behaviors
- Search tag in package java.util.stream
Section
stateMask
- Variable in class javax.swing.
DefaultButtonModel
The bitmask used to store the state of the button.
Statement
- Class in
java.beans
A
Statement
object represents a primitive statement
 in which a single method is applied to a target and
 a set of arguments - as in
"a.setFoo(b)"
.
Statement
- Interface in
java.sql
The object used for executing a static SQL statement
 and returning the results it produces.
Statement(Object, String, Object[])
- Constructor for class java.beans.
Statement
Creates a new
Statement
object
 for the specified target object to invoke the method
 specified by the name and by the array of arguments.
STATEMENT
- Enum constant in enum class com.sun.source.tree.
CaseTree.CaseKind
Case is in the form:
case <expression>: <statements>
.
STATEMENT
- Enum constant in enum class com.sun.source.tree.
LambdaExpressionTree.BodyKind
enum constant for statement lambdas
STATEMENT
- Enum constant in enum class jdk.jshell.
Snippet.Kind
A statement.
STATEMENT
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for INVOICE.
STATEMENT_SUBKIND
- Enum constant in enum class jdk.jshell.
Snippet.SubKind
A statement.
statementClosed(StatementEvent)
- Method in interface javax.sql.
StatementEventListener
The driver calls this method on all
StatementEventListener
s registered on the connection when it detects that a
PreparedStatement
is closed.
statementErrorOccurred(StatementEvent)
- Method in interface javax.sql.
StatementEventListener
The driver calls this method on all
StatementEventListener
s
 registered on the connection when it detects that a
PreparedStatement
is invalid.
StatementEvent
- Class in
javax.sql
A
StatementEvent
is sent to all
StatementEventListener
s which were
 registered with a
PooledConnection
.
StatementEvent(PooledConnection, PreparedStatement)
- Constructor for class javax.sql.
StatementEvent
Constructs a
StatementEvent
with the specified
PooledConnection
and
PreparedStatement
.
StatementEvent(PooledConnection, PreparedStatement, SQLException)
- Constructor for class javax.sql.
StatementEvent
Constructs a
StatementEvent
with the specified
PooledConnection
,
PreparedStatement
and
SQLException
StatementEventListener
- Interface in
javax.sql
An object that registers to be notified of events that occur on PreparedStatements
 that are in the Statement pool.
StatementSnippet
- Class in
jdk.jshell
Snippet for a statement.
StatementTree
- Interface in
com.sun.source.tree
A tree node used as the base class for the different kinds of
 statements.
states
- Variable in class javax.accessibility.
AccessibleStateSet
Each entry in the
Vector
represents an
AccessibleState
.
STATIC
- Enum constant in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
A method handle for a method invoked as with
invokestatic
STATIC
- Enum constant in enum class java.lang.module.
ModuleDescriptor.Requires.Modifier
The dependence is mandatory in the static phase, during compilation,
 but is optional in the dynamic phase, during execution.
STATIC
- Enum constant in enum class java.lang.reflect.
AccessFlag
The access flag
ACC_STATIC
, corresponding to the source
 modifier
static
, with a mask value of
0x0008
.
STATIC
- Enum constant in enum class javax.lang.model.element.
Modifier
The modifier
static
STATIC
- Static variable in class java.lang.reflect.
Modifier
The
int
value representing the
static
modifier.
STATIC_GETTER
- Enum constant in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
A method handle for a read accessor for a static field
STATIC_IMPORT_ON_DEMAND_SUBKIND
- Enum constant in enum class jdk.jshell.
Snippet.SubKind
Static-Import-on-Demand Declaration.
STATIC_INIT
- Enum constant in enum class javax.lang.model.element.
ElementKind
A static initializer.
STATIC_PHASE
- Enum constant in enum class java.lang.reflect.
AccessFlag
The module requires flag
ACC_STATIC_PHASE
with a mask
 value of
0x0040
.
STATIC_SETTER
- Enum constant in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
A method handle for a write accessor for a static field
StaticClass
- Class in
jdk.dynalink.beans
Object that allows access to the static members of a class (its static
 methods, properties, and fields), as well as construction of instances using
StandardOperation.NEW
operation.
staticFieldVarHandle(MethodHandles.Lookup, String, Class<VarHandle>, Class<?>, Class<?>)
- Static method in class java.lang.invoke.
ConstantBootstraps
Finds a
VarHandle
for a static field.
STATICIMAGEDONE
- Static variable in interface java.awt.image.
ImageConsumer
The image is complete and there are no more pixels or frames
 to be delivered.
staticPermissionsOnly()
- Method in class java.security.
ProtectionDomain
Returns
true
if this domain contains only static permissions
 and does not check the current
Policy
at the time of
 permission checking.
status()
- Method in interface com.sun.jdi.
ThreadReference
Returns the thread's status.
status()
- Method in class java.awt.image.
PixelGrabber
Returns the status of the pixels.
status()
- Method in class jdk.jshell.
SnippetEvent
The after status.
status(Snippet)
- Method in class jdk.jshell.
JShell
Return the status of the snippet.
STATUS_BAR
- Static variable in class javax.accessibility.
AccessibleRole
A
STATUS_BAR
is an simple component that can contain multiple
 labels of status information to the user.
STATUS_MEASUREMENT_IN_PROGRESS
- Static variable in class javax.imageio.plugins.tiff.
ExifGPSTagSet
A value to be used with the "GPSStatus" tag.
STATUS_MEASUREMENT_INTEROPERABILITY
- Static variable in class javax.imageio.plugins.tiff.
ExifGPSTagSet
A value to be used with the "GPSStatus" tag.
statusAll(boolean)
- Method in class java.awt.
MediaTracker
Calculates and returns the bitwise inclusive
OR
of the
 status of all media that are tracked by this media tracker.
statusCode()
- Method in interface java.net.http.
HttpResponse.ResponseInfo
Provides the response status code.
statusCode()
- Method in interface java.net.http.
HttpResponse
Returns the status code for this response.
statusID(int, boolean)
- Method in class java.awt.
MediaTracker
Calculates and returns the bitwise inclusive
OR
of the
 status of all media with the specified identifier that are
 tracked by this media tracker.
StAXResult
- Class in
javax.xml.transform.stax
Acts as a holder for an XML
Result
in the
 form of a StAX writer,i.e.
StAXResult(XMLEventWriter)
- Constructor for class javax.xml.transform.stax.
StAXResult
Creates a new instance of a
StAXResult
by supplying an
XMLEventWriter
.
StAXResult(XMLStreamWriter)
- Constructor for class javax.xml.transform.stax.
StAXResult
Creates a new instance of a
StAXResult
by supplying an
XMLStreamWriter
.
StAXSource
- Class in
javax.xml.transform.stax
Acts as a holder for an XML
Source
in the
 form of a StAX reader,i.e.
StAXSource(XMLEventReader)
- Constructor for class javax.xml.transform.stax.
StAXSource
Creates a new instance of a
StAXSource
by supplying an
XMLEventReader
.
StAXSource(XMLStreamReader)
- Constructor for class javax.xml.transform.stax.
StAXSource
Creates a new instance of a
StAXSource
by supplying an
XMLStreamReader
.
StdACChrominance
- Static variable in class javax.imageio.plugins.jpeg.
JPEGHuffmanTable
The standard AC chrominance Huffman table.
StdACLuminance
- Static variable in class javax.imageio.plugins.jpeg.
JPEGHuffmanTable
The standard AC luminance Huffman table.
StdDCChrominance
- Static variable in class javax.imageio.plugins.jpeg.
JPEGHuffmanTable
The standard DC chrominance Huffman table.
StdDCLuminance
- Static variable in class javax.imageio.plugins.jpeg.
JPEGHuffmanTable
The standard DC luminance Huffman table.
stderr.encoding
- Search tag in java.lang.System.getProperties()
System Property
stdout.encoding
- Search tag in java.lang.System.getProperties()
System Property
STEP_INTO
- Static variable in interface com.sun.jdi.request.
StepRequest
Step into any newly pushed frames
STEP_LINE
- Static variable in interface com.sun.jdi.request.
StepRequest
Step to the next location on a different line
STEP_MIN
- Static variable in interface com.sun.jdi.request.
StepRequest
Step to the next available location
STEP_OUT
- Static variable in interface com.sun.jdi.request.
StepRequest
Step out of the current frame
STEP_OVER
- Static variable in interface com.sun.jdi.request.
StepRequest
Step over any newly pushed frames
Step 1: Recursive enumeration
- Search tag in package java.lang.module
Section
Step 2: Computing the readability graph
- Search tag in package java.lang.module
Section
StepEvent
- Interface in
com.sun.jdi.event
Notification of step completion in the target VM.
StepRequest
- Interface in
com.sun.jdi.request
Request for notification when a step occurs in the target VM.
stepRequests()
- Method in interface com.sun.jdi.request.
EventRequestManager
Return an unmodifiable list of the enabled and disabled step requests.
stillInsideTimerAction()
- Constructor for class javax.swing.
ToolTipManager.stillInsideTimerAction
Constructs a
stillInsideTimerAction
.
stop()
- Method in class java.applet.
Applet
Deprecated.
Called by the browser or applet viewer to inform this applet that it
 should stop its execution.
stop()
- Method in interface java.applet.
AudioClip
Deprecated.
Stops playing this audio clip.
stop()
- Method in class java.awt.dnd.
DropTarget.DropTargetAutoScroller
cause autoscrolling to stop
stop()
- Method in class java.lang.
Thread
Deprecated, for removal: This API element is subject to removal in a future version.
This method was originally specified to "stop" a victim
       thread by causing the victim thread to throw a
ThreadDeath
.
       It was inherently unsafe. Stopping a thread caused it to unlock
       all of the monitors that it had locked (as a natural consequence
       of the
ThreadDeath
exception propagating up the stack). If
       any of the objects previously protected by these monitors were in
       an inconsistent state, the damaged objects became visible to
       other threads, potentially resulting in arbitrary behavior.
       Usages of
stop
should be replaced by code that simply
       modifies some variable to indicate that the target thread should
       stop running.  The target thread should check this variable
       regularly, and return from its run method in an orderly fashion
       if the variable indicates that it is to stop running.  If the
       target thread waits for long periods (on a condition variable,
       for example), the
interrupt
method should be used to
       interrupt the wait.
       For more information, see
Why
       are Thread.stop, Thread.suspend and Thread.resume Deprecated?
.
stop()
- Method in class java.lang.
ThreadGroup
Deprecated, for removal: This API element is subject to removal in a future version.
This method was originally specified to stop all threads in
             the thread group. It was inherently unsafe.
stop()
- Method in class javax.management.monitor.
CounterMonitor
Stops the counter monitor.
stop()
- Method in class javax.management.monitor.
GaugeMonitor
Stops the gauge monitor.
stop()
- Method in class javax.management.monitor.
Monitor
Stops the monitor.
stop()
- Method in interface javax.management.monitor.
MonitorMBean
Stops the monitor.
stop()
- Method in class javax.management.monitor.
StringMonitor
Stops the string monitor.
stop()
- Method in interface javax.management.remote.
JMXConnectorServerMBean
Deactivates the connector server, that is, stops listening for
 client connections.
stop()
- Method in class javax.management.remote.rmi.
RMIConnectorServer
Deactivates the connector server, that is, stops listening for
 client connections.
stop()
- Method in class javax.management.timer.
Timer
Stops the timer.
stop()
- Method in interface javax.management.timer.
TimerMBean
Stops the timer.
stop()
- Method in interface javax.sound.midi.
Sequencer
Stops recording, if active, and playback of the currently loaded
 sequence, if any.
stop()
- Method in interface javax.sound.sampled.
DataLine
Stops the line.
stop()
- Method in class javax.swing.
Timer
Stops the
Timer
,
 causing it to stop sending action events
 to its listeners.
stop()
- Method in class jdk.jfr.consumer.
RecordingStream
Stops the recording stream.
stop()
- Method in class jdk.jfr.
Recording
Stops this recording.
stop()
- Method in class jdk.jshell.execution.
DirectExecutionControl
Interrupts a running invoke.
stop()
- Method in class jdk.jshell.execution.
JdiDefaultExecutionControl
Interrupts a running remote invoke by manipulating remote variables
 and sending a stop via JDI.
stop()
- Method in class jdk.jshell.execution.
RemoteExecutionControl
stop()
- Method in class jdk.jshell.execution.
StreamingExecutionControl
stop()
- Method in class jdk.jshell.
JShell
Attempt to stop currently running evaluation.
stop()
- Method in interface jdk.jshell.spi.
ExecutionControl
Interrupts a running invoke.
stop()
- Method in class jdk.management.jfr.
RemoteRecordingStream
Stops the recording stream.
stop(int)
- Method in class com.sun.net.httpserver.
HttpServer
Stops this server by closing the listening socket and disallowing
 any new exchanges from being processed.
stop(ObjectReference)
- Method in interface com.sun.jdi.
ThreadReference
Stops this thread with an asynchronous exception.
STOP
- Static variable in class javax.sound.midi.
ShortMessage
Status byte for Stop message (0xFC, or 252).
STOP
- Static variable in class javax.sound.sampled.
LineEvent.Type
A type of event that is sent when a line ceases active input or
 output of audio data in response to a
stop
request, or because the end of media has been reached.
stopAnimationTimer()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Stops the animation thread.
stopAutoScrolling()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
This protected method is implementation specific and should be private.
stopCellEditing()
- Method in class javax.swing.
AbstractCellEditor
Calls
fireEditingStopped
and returns true.
stopCellEditing()
- Method in interface javax.swing.
CellEditor
Tells the editor to stop editing and accept any partially edited
 value as the value of the editor.
stopCellEditing()
- Method in class javax.swing.
DefaultCellEditor.EditorDelegate
Stops editing and
 returns true to indicate that editing has stopped.
stopCellEditing()
- Method in class javax.swing.
DefaultCellEditor
Forwards the message from the
CellEditor
to
 the
delegate
.
stopCellEditing()
- Method in class javax.swing.tree.
DefaultTreeCellEditor
If the
realEditor
will allow editing to stop,
 the
realEditor
is removed and true is returned,
 otherwise false is returned.
stopEditing()
- Method in class javax.swing.
JTree
Ends the current editing session.
stopEditing(JTree)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Stops the current editing session.
stopEditing(JTree)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
stopEditing
method on each UI handled by this object.
stopEditing(JTree)
- Method in class javax.swing.plaf.
TreeUI
Stops the current editing session.
stopEditingInCompleteEditing
- Variable in class javax.swing.plaf.basic.
BasicTreeUI
Set to false when editing and shouldSelectCell() returns true meaning
 the node should be selected before editing, used in completeEditing.
stopListening(TransportService.ListenKey)
- Method in class com.sun.jdi.connect.spi.
TransportService
Stop listening for inbound connections.
stopListening(Map<String, ? extends Connector.Argument>)
- Method in interface com.sun.jdi.connect.
ListeningConnector
Cancels listening for connections.
STOPPED
- Enum constant in enum class jdk.jfr.
RecordingState
The recording is stopped and is holding recorded data that can be dumped to
 disk.
STOPPED
- Static variable in class javax.print.attribute.standard.
PrinterState
Indicates that no jobs can be processed and intervention is required.
STOPPED_PARTLY
- Static variable in class javax.print.attribute.standard.
PrinterStateReason
When a printer controls more than one output device, this reason
 indicates that one or more output devices are stopped.
StoppedException()
- Constructor for exception class jdk.jshell.spi.
ExecutionControl.StoppedException
STOPPING
- Static variable in class javax.print.attribute.standard.
PrinterStateReason
The printer is in the process of stopping the device and will be stopped
 in a while.
stopPropagation()
- Method in interface org.w3c.dom.events.
Event
The
stopPropagation
method is used prevent further
 propagation of an event during event flow.
stopRecording()
- Method in interface javax.sound.midi.
Sequencer
Stops recording, if active.
stopRecording(long)
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Stops the running recording with the specified ID.
store()
- Method in class javax.management.modelmbean.
RequiredModelMBean
Captures the current state of this MBean instance and writes
 it out to the persistent store.
store()
- Method in interface javax.management.
PersistentMBean
Captures the current state of this MBean instance and
 writes it out to the persistent store.
store(OutputStream, char[])
- Method in class java.security.
KeyStore
Stores this keystore to the given output stream, and protects its
 integrity with the given password.
store(OutputStream, String)
- Method in class java.util.
Properties
Writes this property list (key and element pairs) in this
Properties
table to the output stream in a format suitable
 for loading into a
Properties
table using the
load(InputStream)
method.
store(Writer, String)
- Method in class java.util.
Properties
Writes this property list (key and element pairs) in this
Properties
table to the output character stream in a
 format suitable for using the
load(Reader)
method.
store(KeyStore.LoadStoreParameter)
- Method in class java.security.
KeyStore
Stores this keystore using the given
LoadStoreParameter
.
STORED
- Static variable in class java.util.zip.
ZipEntry
Compression method for uncompressed entries.
STORED
- Static variable in class java.util.zip.
ZipOutputStream
Compression method for uncompressed (STORED) entries.
storesLowerCaseIdentifiers()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database treats mixed case unquoted SQL identifiers as
 case insensitive and stores them in lower case.
storesLowerCaseQuotedIdentifiers()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database treats mixed case quoted SQL identifiers as
 case insensitive and stores them in lower case.
storesMixedCaseIdentifiers()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database treats mixed case unquoted SQL identifiers as
 case insensitive and stores them in mixed case.
storesMixedCaseQuotedIdentifiers()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database treats mixed case quoted SQL identifiers as
 case insensitive and stores them in mixed case.
storeState(Hashtable<Object, Object>)
- Method in interface javax.swing.undo.
StateEditable
Upon receiving this message the receiver should place any relevant
 state into
state
.
storeStoreFence()
- Static method in class java.lang.invoke.
VarHandle
Ensures that stores before the fence will not be reordered with
 stores after the fence.
storesUpperCaseIdentifiers()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database treats mixed case unquoted SQL identifiers as
 case insensitive and stores them in upper case.
storesUpperCaseQuotedIdentifiers()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database treats mixed case quoted SQL identifiers as
 case insensitive and stores them in upper case.
storeToXML(OutputStream, String)
- Method in class java.util.
Properties
Emits an XML document representing all of the properties contained
 in this table.
storeToXML(OutputStream, String, String)
- Method in class java.util.
Properties
Emits an XML document representing all of the properties contained
 in this table, using the specified encoding.
storeToXML(OutputStream, String, Charset)
- Method in class java.util.
Properties
Emits an XML document representing all of the properties contained
 in this table, using the specified encoding.
STR
- Static variable in interface java.lang.
StringTemplate
PREVIEW
This
StringTemplate.Processor
PREVIEW
instance is conventionally used for the string interpolation
 of a supplied
StringTemplate
PREVIEW
.
strategy
- Variable in class javax.swing.text.
FlowView
The behavior for keeping the flow updated.
stream()
- Method in class java.util.
BitSet
Returns a stream of indices for which this
BitSet
contains a bit in the set state.
stream()
- Method in interface java.util.
Collection
Returns a sequential
Stream
with this collection as its source.
stream()
- Method in class java.util.jar.
JarFile
Returns an ordered
Stream
over the jar file entries.
stream()
- Method in class java.util.
Optional
If a value is present, returns a sequential
Stream
containing
 only that value, otherwise returns an empty
Stream
.
stream()
- Method in class java.util.
OptionalDouble
If a value is present, returns a sequential
DoubleStream
containing only that value, otherwise returns an empty
DoubleStream
.
stream()
- Method in class java.util.
OptionalInt
If a value is present, returns a sequential
IntStream
containing
 only that value, otherwise returns an empty
IntStream
.
stream()
- Method in class java.util.
OptionalLong
If a value is present, returns a sequential
LongStream
containing
 only that value, otherwise returns an empty
LongStream
.
stream()
- Method in class java.util.
ServiceLoader
Returns a stream to lazily load available providers of this loader's
 service.
stream()
- Method in class java.util.zip.
ZipFile
Returns an ordered
Stream
over the ZIP file entries.
stream(double[])
- Static method in class java.util.
Arrays
Returns a sequential
DoubleStream
with the specified array as its
 source.
stream(double[], int, int)
- Static method in class java.util.
Arrays
Returns a sequential
DoubleStream
with the specified range of the
 specified array as its source.
stream(int[])
- Static method in class java.util.
Arrays
Returns a sequential
IntStream
with the specified array as its
 source.
stream(int[], int, int)
- Static method in class java.util.
Arrays
Returns a sequential
IntStream
with the specified range of the
 specified array as its source.
stream(long[])
- Static method in class java.util.
Arrays
Returns a sequential
LongStream
with the specified array as its
 source.
stream(long[], int, int)
- Static method in class java.util.
Arrays
Returns a sequential
LongStream
with the specified range of the
 specified array as its source.
stream(Supplier<? extends Spliterator<T>>, int, boolean)
- Static method in class java.util.stream.
StreamSupport
Creates a new sequential or parallel
Stream
from a
Supplier
of
Spliterator
.
stream(Spliterator<T>, boolean)
- Static method in class java.util.stream.
StreamSupport
Creates a new sequential or parallel
Stream
from a
Spliterator
.
stream(T[])
- Static method in class java.util.
Arrays
Returns a sequential
Stream
with the specified array as its
 source.
stream(T[], int, int)
- Static method in class java.util.
Arrays
Returns a sequential
Stream
with the specified range of the
 specified array as its source.
Stream<T>
- Interface in
java.util.stream
A sequence of elements supporting sequential and parallel aggregate
 operations.
STREAM_CIPHER
- Enum constant in enum class java.security.
CryptoPrimitive
Symmetric primitive: stream cipher
STREAM_MAGIC
- Static variable in interface java.io.
ObjectStreamConstants
Magic number that is written to the stream header.
STREAM_VERSION
- Static variable in interface java.io.
ObjectStreamConstants
Version number that is written to the stream header.
Stream.Builder<T>
- Interface in
java.util.stream
A mutable builder for a
Stream
.
streamBytes()
- Method in interface java.io.
ObjectInputFilter.FilterInfo
The current number of bytes consumed.
StreamCorruptedException
- Exception Class in
java.io
Thrown when control information that was read from an object stream
 violates internal consistency checks.
StreamCorruptedException()
- Constructor for exception class java.io.
StreamCorruptedException
Create a StreamCorruptedException and list no reason why thrown.
StreamCorruptedException(String)
- Constructor for exception class java.io.
StreamCorruptedException
Create a StreamCorruptedException and list a reason why thrown.
StreamDescriptionProperty
- Static variable in interface javax.swing.text.
Document
The property name for the description of the stream
 used to initialize the document.
StreamFilter
- Interface in
javax.xml.stream
This interface declares a simple filter interface that one can
 create to filter XMLStreamReaders
StreamHandler
- Class in
java.util.logging
Stream based logging
Handler
.
StreamHandler()
- Constructor for class java.util.logging.
StreamHandler
Create a
StreamHandler
, with no current output stream.
StreamHandler(OutputStream, Formatter)
- Constructor for class java.util.logging.
StreamHandler
Create a
StreamHandler
with a given
Formatter
and output stream.
StreamingExecutionControl
- Class in
jdk.jshell.execution
An implementation of the
ExecutionControl
execution engine SPI which streams requests to a remote agent where
 execution takes place.
StreamingExecutionControl(ObjectOutput, ObjectInput)
- Constructor for class jdk.jshell.execution.
StreamingExecutionControl
Creates an instance.
Stream Metadata
- Search tag in package javax.imageio.metadata
Section
Stream Metadata DTD
- Search tag in package javax.imageio.metadata
Section
streamNumber()
- Method in class com.sun.nio.sctp.
MessageInfo
Returns the stream number that the message was received on, if the
 message has been received, otherwise the stream number that the message
 is to be sent on.
streamNumber()
- Method in class com.sun.nio.sctp.
SendFailedNotification
Returns the stream number that the message was to be sent on.
streamNumber(int)
- Method in class com.sun.nio.sctp.
MessageInfo
Sets the stream number that the message is to be sent on.
Stream operations and pipelines
- Search tag in package java.util.stream
Section
streamPos
- Variable in class javax.imageio.stream.
ImageInputStreamImpl
The current read position within the stream.
StreamPrintService
- Class in
javax.print
This class extends
PrintService
and represents a print service that
 prints data in different formats to a client-provided output stream.
StreamPrintService(OutputStream)
- Constructor for class javax.print.
StreamPrintService
Constructs a
StreamPrintService
object.
StreamPrintServiceFactory
- Class in
javax.print
A
StreamPrintServiceFactory
is the factory for
StreamPrintService
instances, which can print to an output stream in
 a particular document format described as a mime type.
StreamPrintServiceFactory()
- Constructor for class javax.print.
StreamPrintServiceFactory
Constructor for subclasses to call.
StreamReaderDelegate
- Class in
javax.xml.stream.util
This is the base class for deriving an XMLStreamReader filter

 This class is designed to sit between an XMLStreamReader and an
 application's XMLStreamReader.
StreamReaderDelegate()
- Constructor for class javax.xml.stream.util.
StreamReaderDelegate
Construct an empty filter with no parent.
StreamReaderDelegate(XMLStreamReader)
- Constructor for class javax.xml.stream.util.
StreamReaderDelegate
Construct an filter with the specified parent.
StreamResult
- Class in
javax.xml.transform.stream
Acts as an holder for a transformation result,
 which may be XML, plain Text, HTML, or some other form of markup.
StreamResult()
- Constructor for class javax.xml.transform.stream.
StreamResult
Zero-argument default constructor.
StreamResult(File)
- Constructor for class javax.xml.transform.stream.
StreamResult
Construct a StreamResult from a File.
StreamResult(OutputStream)
- Constructor for class javax.xml.transform.stream.
StreamResult
Construct a StreamResult from a byte stream.
StreamResult(Writer)
- Constructor for class javax.xml.transform.stream.
StreamResult
Construct a StreamResult from a character stream.
StreamResult(String)
- Constructor for class javax.xml.transform.stream.
StreamResult
Construct a StreamResult from a URL.
StreamSource
- Class in
javax.xml.transform.stream
Acts as an holder for a transformation Source in the form
 of a stream of XML markup.
StreamSource()
- Constructor for class javax.xml.transform.stream.
StreamSource
Zero-argument default constructor.
StreamSource(File)
- Constructor for class javax.xml.transform.stream.
StreamSource
Construct a StreamSource from a File.
StreamSource(InputStream)
- Constructor for class javax.xml.transform.stream.
StreamSource
Construct a StreamSource from a byte stream.
StreamSource(InputStream, String)
- Constructor for class javax.xml.transform.stream.
StreamSource
Construct a StreamSource from a byte stream.
StreamSource(Reader)
- Constructor for class javax.xml.transform.stream.
StreamSource
Construct a StreamSource from a character reader.
StreamSource(Reader, String)
- Constructor for class javax.xml.transform.stream.
StreamSource
Construct a StreamSource from a character reader.
StreamSource(String)
- Constructor for class javax.xml.transform.stream.
StreamSource
Construct a StreamSource from a URL.
StreamSupport
- Class in
java.util.stream
Low-level utility methods for creating and manipulating streams.
StreamTokenizer
- Class in
java.io
The
StreamTokenizer
class takes an input stream and
 parses it into "tokens", allowing the tokens to be
 read one at a time.
StreamTokenizer(InputStream)
- Constructor for class java.io.
StreamTokenizer
Deprecated.
As of JDK version 1.1, the preferred way to tokenize an
 input stream is to convert it into a character stream, for example:
Copy
Reader r = new BufferedReader(new InputStreamReader(is));
    StreamTokenizer st = new StreamTokenizer(r);
StreamTokenizer(Reader)
- Constructor for class java.io.
StreamTokenizer
Create a tokenizer that parses the given character stream.
STRENGTH
- Static variable in class javax.security.sasl.
Sasl
The name of a property that specifies the cipher strength to use.
strict
- Variable in class javax.swing.text.html.parser.
Parser
This flag determines whether or not the Parser will be strict
 in enforcing SGML compatibility.
STRICT
- Enum constant in enum class java.lang.reflect.
AccessFlag
The access flag
ACC_STRICT
, corresponding to the source
 modifier
strictfp
, with a mask value of
0x0800
.
STRICT
- Enum constant in enum class java.time.format.
ResolverStyle
Style to resolve dates and times strictly.
STRICT
- Static variable in class java.lang.reflect.
Modifier
The
int
value representing the
strictfp
modifier.
STRICTFP
- Enum constant in enum class javax.lang.model.element.
Modifier
The modifier
strictfp
StrictMath
- Class in
java.lang
The class
StrictMath
contains methods for performing basic
 numeric operations such as the elementary exponential, logarithm,
 square root, and trigonometric functions.
STRIKE
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <strike>
StrikeThrough
- Static variable in class javax.swing.text.
StyleConstants
Name of the Strikethrough attribute.
STRIKETHROUGH
- Static variable in class java.awt.font.
TextAttribute
Attribute key for strikethrough.
STRIKETHROUGH_ON
- Static variable in class java.awt.font.
TextAttribute
A single strikethrough.
String
- Class in
java.lang
The
String
class represents character strings.
String()
- Constructor for class java.lang.
String
Initializes a newly created
String
object so that it represents
 an empty character sequence.
String(byte[])
- Constructor for class java.lang.
String
Constructs a new
String
by decoding the specified array of bytes
 using the
default charset
.
String(byte[], int)
- Constructor for class java.lang.
String
Deprecated.
This method does not properly convert bytes into
 characters.  As of JDK 1.1, the preferred way to do this is via the
String
constructors that take a
Charset
, charset name,
 or that use the
default charset
.
String(byte[], int, int)
- Constructor for class java.lang.
String
Constructs a new
String
by decoding the specified subarray of
 bytes using the
default charset
.
String(byte[], int, int, int)
- Constructor for class java.lang.
String
Deprecated.
This method does not properly convert bytes into characters.
 As of JDK 1.1, the preferred way to do this is via the
String
constructors that take a
Charset
, charset name,
 or that use the
default charset
.
String(byte[], int, int, String)
- Constructor for class java.lang.
String
Constructs a new
String
by decoding the specified subarray of
 bytes using the specified charset.
String(byte[], int, int, Charset)
- Constructor for class java.lang.
String
Constructs a new
String
by decoding the specified subarray of
 bytes using the specified
charset
.
String(byte[], String)
- Constructor for class java.lang.
String
Constructs a new
String
by decoding the specified array of bytes
 using the specified
charset
.
String(byte[], Charset)
- Constructor for class java.lang.
String
Constructs a new
String
by decoding the specified array of
 bytes using the specified
charset
.
String(char[])
- Constructor for class java.lang.
String
Allocates a new
String
so that it represents the sequence of
 characters currently contained in the character array argument.
String(char[], int, int)
- Constructor for class java.lang.
String
Allocates a new
String
that contains characters from a subarray
 of the character array argument.
String(int[], int, int)
- Constructor for class java.lang.
String
Allocates a new
String
that contains characters from a subarray
 of the
Unicode code point
array
 argument.
String(String)
- Constructor for class java.lang.
String
Initializes a newly created
String
object so that it represents
 the same sequence of characters as the argument; in other words, the
 newly created string is a copy of the argument string.
String(StringBuffer)
- Constructor for class java.lang.
String
Allocates a new string that contains the sequence of characters
 currently contained in the string buffer argument.
String(StringBuilder)
- Constructor for class java.lang.
String
Allocates a new string that contains the sequence of characters
 currently contained in the string builder argument.
STRING
- Enum constant in enum class javax.xml.xpath.
XPathEvaluationResult.XPathResultType
The XPath 1.0 String data type.
STRING
- Static variable in class javax.management.openmbean.
SimpleType
The
SimpleType
instance describing values whose
 Java class name is
java.lang.String
.
STRING
- Static variable in class javax.xml.xpath.
XPathConstants
The XPath 1.0 string data type.
STRING(String)
- Constructor for class javax.print.
DocFlavor.STRING
Constructs a new doc flavor with the given MIME type and a print data
 representation class name of
"java.lang.String"
.
STRING_LITERAL
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
LiteralTree
representing
 a string literal expression of type
String
.
STRING_TO_COMPARE_VALUE_DIFFERED
- Static variable in class javax.management.monitor.
MonitorNotification
Notification type denoting that the observed attribute has differed from the "string to compare" value.
STRING_TO_COMPARE_VALUE_MATCHED
- Static variable in class javax.management.monitor.
MonitorNotification
Notification type denoting that the observed attribute has matched the "string to compare" value.
STRING_TYPE
- Static variable in interface org.w3c.dom.xpath.
XPathResult
The result is a string as defined by .
StringBuffer
- Class in
java.lang
A thread-safe, mutable sequence of characters.
StringBuffer()
- Constructor for class java.lang.
StringBuffer
Constructs a string buffer with no characters in it and an
 initial capacity of 16 characters.
StringBuffer(int)
- Constructor for class java.lang.
StringBuffer
Constructs a string buffer with no characters in it and
 the specified initial capacity.
StringBuffer(CharSequence)
- Constructor for class java.lang.
StringBuffer
Constructs a string buffer that contains the same characters
 as the specified
CharSequence
.
StringBuffer(String)
- Constructor for class java.lang.
StringBuffer
Constructs a string buffer initialized to the contents of the
 specified string.
StringBufferInputStream
- Class in
java.io
Deprecated.
This class does not properly convert characters into bytes.  As
             of JDK 1.1, the preferred way to create a stream from a
             string is via the
StringReader
class.
StringBufferInputStream(String)
- Constructor for class java.io.
StringBufferInputStream
Deprecated.
Creates a string input stream to read data from the specified string.
StringBuilder
- Class in
java.lang
A mutable sequence of characters.
StringBuilder()
- Constructor for class java.lang.
StringBuilder
Constructs a string builder with no characters in it and an
 initial capacity of 16 characters.
StringBuilder(int)
- Constructor for class java.lang.
StringBuilder
Constructs a string builder with no characters in it and an
 initial capacity specified by the
capacity
argument.
StringBuilder(CharSequence)
- Constructor for class java.lang.
StringBuilder
Constructs a string builder that contains the same characters
 as the specified
CharSequence
.
StringBuilder(String)
- Constructor for class java.lang.
StringBuilder
Constructs a string builder initialized to the contents of the
 specified string.
StringCharacterIterator
- Class in
java.text
StringCharacterIterator
implements the
CharacterIterator
protocol for a
String
.
StringCharacterIterator(String)
- Constructor for class java.text.
StringCharacterIterator
Constructs an iterator with an initial index of 0.
StringCharacterIterator(String, int)
- Constructor for class java.text.
StringCharacterIterator
Constructs an iterator with the specified initial index.
StringCharacterIterator(String, int, int, int)
- Constructor for class java.text.
StringCharacterIterator
Constructs an iterator over the given range of the given string, with the
 index set at the specified position.
StringConcatException
- Exception Class in
java.lang.invoke
StringConcatException is thrown by
StringConcatFactory
when linkage
 invariants are violated.
StringConcatException(String)
- Constructor for exception class java.lang.invoke.
StringConcatException
Constructs an exception with a message
StringConcatException(String, Throwable)
- Constructor for exception class java.lang.invoke.
StringConcatException
Constructs an exception with a message and a linked throwable
StringConcatFactory
- Class in
java.lang.invoke
Methods to facilitate the creation of String concatenation methods, that
 can be used to efficiently concatenate a known number of arguments of known
 types, possibly after type adaptation and partial evaluation of arguments.
StringContent
- Class in
javax.swing.text
An implementation of the AbstractDocument.Content interface that is
 a brute force implementation that is useful for relatively small
 documents and/or debugging.
StringContent()
- Constructor for class javax.swing.text.
StringContent
Creates a new StringContent object.
StringContent(int)
- Constructor for class javax.swing.text.
StringContent
Creates a new StringContent object, with the initial
 size specified.
stringFlavor
- Static variable in class java.awt.datatransfer.
DataFlavor
The
DataFlavor
representing a Java Unicode String class, where:
StringIndexOutOfBoundsException
- Exception Class in
java.lang
Thrown by
String
methods to indicate that an index is either negative
 or greater than the size of the string.
StringIndexOutOfBoundsException()
- Constructor for exception class java.lang.
StringIndexOutOfBoundsException
Constructs a
StringIndexOutOfBoundsException
with no detail
 message.
StringIndexOutOfBoundsException(int)
- Constructor for exception class java.lang.
StringIndexOutOfBoundsException
Constructs a new
StringIndexOutOfBoundsException
class with an
 argument indicating the illegal index.
StringIndexOutOfBoundsException(String)
- Constructor for exception class java.lang.
StringIndexOutOfBoundsException
Constructs a
StringIndexOutOfBoundsException
with the specified
 detail message.
StringJoiner
- Class in
java.util
StringJoiner
is used to construct a sequence of characters separated
 by a delimiter and optionally starting with a supplied prefix
 and ending with a supplied suffix.
StringJoiner(CharSequence)
- Constructor for class java.util.
StringJoiner
Constructs a
StringJoiner
with no characters in it, with no
prefix
or
suffix
, and a copy of the supplied
delimiter
.
StringJoiner(CharSequence, CharSequence, CharSequence)
- Constructor for class java.util.
StringJoiner
Constructs a
StringJoiner
with no characters in it using copies
 of the supplied
prefix
,
delimiter
and
suffix
.
StringMonitor
- Class in
javax.management.monitor
Defines a monitor MBean designed to observe the values of a string
 attribute.
StringMonitor()
- Constructor for class javax.management.monitor.
StringMonitor
Default constructor.
StringMonitorMBean
- Interface in
javax.management.monitor
Exposes the remote management interface of the string monitor MBean.
stringPropertyNames()
- Method in class java.util.
Properties
Returns an unmodifiable set of keys from this property list
 where the key and its corresponding value are strings,
 including distinct keys in the default property list if a key
 of the same name has not already been found from the main
 properties list.
StringReader
- Class in
java.io
A character stream whose source is a string.
StringReader(String)
- Constructor for class java.io.
StringReader
Creates a new string reader.
StringRefAddr
- Class in
javax.naming
This class represents the string form of the address of
 a communications end-point.
StringRefAddr(String, String)
- Constructor for class javax.naming.
StringRefAddr
Constructs a new instance of StringRefAddr using its address type
 and contents.
StringReference
- Interface in
com.sun.jdi
A string object from the target VM.
StringSelection
- Class in
java.awt.datatransfer
A
Transferable
which implements the capability required to transfer a
String
.
StringSelection(String)
- Constructor for class java.awt.datatransfer.
StringSelection
Creates a
Transferable
capable of transferring the specified
String
.
StringTemplate
PREVIEW
- Interface in
java.lang
StringTemplate
PREVIEW
is the run-time representation of a string template or
 text block template in a template expression.
StringTemplate.Processor<R,
E>
PREVIEW
- Interface in
java.lang
This interface describes the methods provided by a generalized string template processor.
StringTemplate.Processor.Linkage
PREVIEW
- Interface in
java.lang
Built-in policies using this additional interface have the flexibility to
 specialize the composition of the templated string by returning a customized
MethodHandle
from
linkage
PREVIEW
.
StringTemplateTree
PREVIEW
- Interface in
com.sun.source.tree
A tree node for a string template expression.
stringToColor(String)
- Method in class javax.swing.text.html.
StyleSheet
Converts a color string such as "RED" or "#NNNNNN" to a Color.
StringTokenizer
- Class in
java.util
The string tokenizer class allows an application to break a
 string into tokens.
StringTokenizer(String)
- Constructor for class java.util.
StringTokenizer
Constructs a string tokenizer for the specified string.
StringTokenizer(String, String)
- Constructor for class java.util.
StringTokenizer
Constructs a string tokenizer for the specified string.
StringTokenizer(String, String, boolean)
- Constructor for class java.util.
StringTokenizer
Constructs a string tokenizer for the specified string.
stringToValue(String)
- Method in class javax.swing.
JFormattedTextField.AbstractFormatter
Parses
text
returning an arbitrary Object.
stringToValue(String)
- Method in class javax.swing.text.
DefaultFormatter
Converts the passed in String into an instance of
getValueClass
by way of the constructor that
 takes a String argument.
stringToValue(String)
- Method in class javax.swing.text.
InternationalFormatter
Returns the
Object
representation of the
String
text
.
stringToValue(String)
- Method in class javax.swing.text.
MaskFormatter
Parses the text, returning the appropriate Object representation of
 the String
value
.
StringValueExp
- Class in
javax.management
Represents strings that are arguments to relational constraints.
StringValueExp()
- Constructor for class javax.management.
StringValueExp
Basic constructor.
StringValueExp(String)
- Constructor for class javax.management.
StringValueExp
Creates a new
StringValueExp
representing the
 given string.
stringValueOf(boolean)
- Method in interface com.sun.jdi.connect.
Connector.BooleanArgument
Return the string representation of the
value
parameter.
stringValueOf(int)
- Method in interface com.sun.jdi.connect.
Connector.IntegerArgument
Return the string representation of the
value
parameter.
stringWidth(String)
- Method in class java.awt.
FontMetrics
Returns the total advance width for showing the specified
String
in this
Font
.
StringWriter
- Class in
java.io
A character stream that collects its output in a string buffer, which can
 then be used to construct a string.
StringWriter()
- Constructor for class java.io.
StringWriter
Create a new string writer using the default initial string-buffer
 size.
StringWriter(int)
- Constructor for class java.io.
StringWriter
Create a new string writer using the specified initial string-buffer
 size.
strip()
- Method in class java.lang.
String
Returns a string whose value is this string, with all leading
 and trailing
white space
removed.
stripExtensions()
- Method in class java.util.
Locale
Returns a copy of this
Locale
with no
extensions
.
stripIndent()
- Method in class java.lang.
String
Returns a string whose value is this string, with incidental
white space
removed from
 the beginning and end of every line.
stripLeading()
- Method in class java.lang.
String
Returns a string whose value is this string, with all leading
white space
removed.
stripTrailing()
- Method in class java.lang.
String
Returns a string whose value is this string, with all trailing
white space
removed.
stripTrailingZeros()
- Method in class java.math.
BigDecimal
Returns a
BigDecimal
which is numerically equal to
 this one but with any trailing zeros removed from the
 representation.
Stroke
- Interface in
java.awt
The
Stroke
interface allows a
Graphics2D
object to obtain a
Shape
that is the
 decorated outline, or stylistic representation of the outline,
 of the specified
Shape
.
STROKE
- Static variable in class java.awt.font.
ShapeGraphicAttribute
A key indicating the shape should be stroked with a 1-pixel wide stroke.
StrokeBorder
- Class in
javax.swing.border
A class which implements a border of an arbitrary stroke.
StrokeBorder(BasicStroke)
- Constructor for class javax.swing.border.
StrokeBorder
Creates a border of the specified
stroke
.
StrokeBorder(BasicStroke, Paint)
- Constructor for class javax.swing.border.
StrokeBorder
Creates a border of the specified
stroke
and
paint
.
STRONG
- Enum constant in enum class com.sun.source.tree.
ModuleTree.ModuleKind
Strong module.
STRONG
- Enum constant in enum class java.lang.invoke.
MethodHandles.Lookup.ClassOption
Specifies that a hidden class has a
strong
relationship with the class loader marked as its defining loader,
 as a normal class or interface has with its own defining loader.
STRONG
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <strong>
Struct
- Interface in
java.sql
The standard mapping in the Java programming language for an SQL
 structured type.
STRUCT
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
STRUCT
.
STRUCT
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred to
 as a type code, that identifies the generic SQL type
STRUCT
.
structLayout(MemoryLayout...)
- Static method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Creates a struct layout with the given member layouts.
StructLayout
PREVIEW
- Interface in
java.lang.foreign
A group layout whose member layouts are laid out one after the other.
StructuredTaskScope<T>
PREVIEW
- Class in
java.util.concurrent
A basic API for
structured concurrency
.
StructuredTaskScope()
- Constructor for class java.util.concurrent.
StructuredTaskScope
PREVIEW
Creates an unnamed structured task scope that creates virtual threads.
StructuredTaskScope(String, ThreadFactory)
- Constructor for class java.util.concurrent.
StructuredTaskScope
PREVIEW
Creates a structured task scope with the given name and thread factory.
StructuredTaskScope.ShutdownOnFailure
PREVIEW
- Class in
java.util.concurrent
A
StructuredTaskScope
that captures the exception of the first subtask to
fail
PREVIEW
.
StructuredTaskScope.ShutdownOnSuccess<T>
PREVIEW
- Class in
java.util.concurrent
A
StructuredTaskScope
that captures the result of the first subtask to
 complete
successfully
PREVIEW
.
StructuredTaskScope.Subtask<T>
PREVIEW
- Interface in
java.util.concurrent
Represents a subtask forked with
StructuredTaskScope.fork(Callable)
PREVIEW
.
StructuredTaskScope.Subtask.State
PREVIEW
- Enum Class in
java.util.concurrent
Represents the state of a subtask.
StructureViolationException
PREVIEW
- Exception Class in
java.util.concurrent
Thrown when a structure violation is detected.
StructureViolationException()
- Constructor for exception class java.util.concurrent.
StructureViolationException
PREVIEW
Constructs a
StructureViolationException
with no detail message.
StructureViolationException(String)
- Constructor for exception class java.util.concurrent.
StructureViolationException
PREVIEW
Constructs a
StructureViolationException
with the specified
 detail message.
StubNotFoundException
- Exception Class in
java.rmi
A
StubNotFoundException
is thrown if a valid stub class
 could not be found for a remote object when it is exported.
StubNotFoundException(String)
- Constructor for exception class java.rmi.
StubNotFoundException
Constructs a
StubNotFoundException
with the specified
 detail message.
StubNotFoundException(String, Exception)
- Constructor for exception class java.rmi.
StubNotFoundException
Constructs a
StubNotFoundException
with the specified
 detail message and nested exception.
style
- Variable in class java.awt.
Font
The style of this
Font
, as passed to the constructor.
Style
- Search tag in class java.text.CompactNumberFormat
Section
Style
- Interface in
javax.swing.text
A collection of attributes to associate with an element in a document.
STYLE
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "style"
STYLE
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <style>
STYLE_RULE
- Static variable in interface org.w3c.dom.css.
CSSRule
The rule is a
CSSStyleRule
.
styleChanged(Style)
- Method in class javax.swing.text.
DefaultStyledDocument
Called when any of this document's styles have changed.
StyleConstants
- Class in
javax.swing.text
A collection of
well known
or common attribute keys
 and methods to apply to an AttributeSet or MutableAttributeSet
 to get/set the properties in a typesafe manner.
StyleConstants.CharacterConstants
- Class in
javax.swing.text
This is a typesafe enumeration of the
well-known
attributes that contribute to a character style.
StyleConstants.ColorConstants
- Class in
javax.swing.text
This is a typesafe enumeration of the
well-known
attributes that contribute to a color.
StyleConstants.FontConstants
- Class in
javax.swing.text
This is a typesafe enumeration of the
well-known
attributes that contribute to a font.
StyleConstants.ParagraphConstants
- Class in
javax.swing.text
This is a typesafe enumeration of the
well-known
attributes that contribute to a paragraph style.
StyleContext
- Class in
javax.swing.text
A pool of styles and their associated resources.
StyleContext()
- Constructor for class javax.swing.text.
StyleContext
Creates a new StyleContext object.
StyleContext.NamedStyle
- Class in
javax.swing.text
A collection of attributes, typically used to represent
 character and paragraph styles.
StyleContext.SmallAttributeSet
- Class in
javax.swing.text
This class holds a small number of attributes in an array.
StyledDocument
- Interface in
javax.swing.text
Interface for a generic styled document.
StyledEditorKit
- Class in
javax.swing.text
This is the set of things needed by a text component
 to be a reasonably functioning editor for some
type
of text document.
StyledEditorKit()
- Constructor for class javax.swing.text.
StyledEditorKit
Creates a new EditorKit used for styled documents.
StyledEditorKit.AlignmentAction
- Class in
javax.swing.text
An action to set paragraph alignment.
StyledEditorKit.BoldAction
- Class in
javax.swing.text
An action to toggle the bold attribute.
StyledEditorKit.FontFamilyAction
- Class in
javax.swing.text
An action to set the font family in the associated
 JEditorPane.
StyledEditorKit.FontSizeAction
- Class in
javax.swing.text
An action to set the font size in the associated
 JEditorPane.
StyledEditorKit.ForegroundAction
- Class in
javax.swing.text
An action to set foreground color.
StyledEditorKit.ItalicAction
- Class in
javax.swing.text
An action to toggle the italic attribute.
StyledEditorKit.StyledTextAction
- Class in
javax.swing.text
An action that assumes it's being fired on a JEditorPane
 with a StyledEditorKit (or subclass) installed.
StyledEditorKit.UnderlineAction
- Class in
javax.swing.text
An action to toggle the underline attribute.
StyledTextAction(String)
- Constructor for class javax.swing.text.
StyledEditorKit.StyledTextAction
Creates a new StyledTextAction from a string action name.
StyleSheet
- Class in
javax.swing.text.html
Support for defining the visual characteristics of
 HTML views being rendered.
StyleSheet
- Interface in
org.w3c.dom.stylesheets
The
StyleSheet
interface is the abstract base interface for
 any type of style sheet.
StyleSheet()
- Constructor for class javax.swing.text.html.
StyleSheet
Construct a StyleSheet
StyleSheet.BoxPainter
- Class in
javax.swing.text.html
Class to carry out some of the duties of
 CSS formatting.
StyleSheet.ListPainter
- Class in
javax.swing.text.html
Class to carry out some of the duties of CSS list
 formatting.
StyleSheetList
- Interface in
org.w3c.dom.stylesheets
The
StyleSheetList
interface provides the abstraction of an
 ordered collection of style sheets.
sub(byte)
- Method in class jdk.incubator.vector.
ByteVector
Subtracts an input scalar from this vector.
sub(byte, VectorMask<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Subtracts an input scalar from this vector
 under the control of a mask.
sub(double)
- Method in class jdk.incubator.vector.
DoubleVector
Subtracts an input scalar from this vector.
sub(double, VectorMask<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Subtracts an input scalar from this vector
 under the control of a mask.
sub(float)
- Method in class jdk.incubator.vector.
FloatVector
Subtracts an input scalar from this vector.
sub(float, VectorMask<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Subtracts an input scalar from this vector
 under the control of a mask.
sub(int)
- Method in class jdk.incubator.vector.
IntVector
Subtracts an input scalar from this vector.
sub(int, VectorMask<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Subtracts an input scalar from this vector
 under the control of a mask.
sub(long)
- Method in class jdk.incubator.vector.
LongVector
Subtracts an input scalar from this vector.
sub(long, VectorMask<Long>)
- Method in class jdk.incubator.vector.
LongVector
Subtracts an input scalar from this vector
 under the control of a mask.
sub(short)
- Method in class jdk.incubator.vector.
ShortVector
Subtracts an input scalar from this vector.
sub(short, VectorMask<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Subtracts an input scalar from this vector
 under the control of a mask.
sub(Vector<E>)
- Method in class jdk.incubator.vector.
Vector
Subtracts a second input vector from this vector.
sub(Vector<E>, VectorMask<E>)
- Method in class jdk.incubator.vector.
Vector
Subtracts a second input vector from this vector
 under the control of a mask.
sub(Vector<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Subtracts a second input vector from this vector.
sub(Vector<Byte>, VectorMask<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Subtracts a second input vector from this vector
 under the control of a mask.
sub(Vector<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Subtracts a second input vector from this vector.
sub(Vector<Double>, VectorMask<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Subtracts a second input vector from this vector
 under the control of a mask.
sub(Vector<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Subtracts a second input vector from this vector.
sub(Vector<Float>, VectorMask<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Subtracts a second input vector from this vector
 under the control of a mask.
sub(Vector<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Subtracts a second input vector from this vector.
sub(Vector<Integer>, VectorMask<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Subtracts a second input vector from this vector
 under the control of a mask.
sub(Vector<Long>)
- Method in class jdk.incubator.vector.
LongVector
Subtracts a second input vector from this vector.
sub(Vector<Long>, VectorMask<Long>)
- Method in class jdk.incubator.vector.
LongVector
Subtracts a second input vector from this vector
 under the control of a mask.
sub(Vector<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Subtracts a second input vector from this vector.
sub(Vector<Short>, VectorMask<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Subtracts a second input vector from this vector
 under the control of a mask.
SUB
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <sub>
SUB
- Static variable in class jdk.incubator.vector.
VectorOperators
Produce
a-b
.
SUBCLASS_IMPLEMENTATION_PERMISSION
- Static variable in interface java.io.
ObjectStreamConstants
Enable overriding of readObject and writeObject.
subclasses()
- Method in interface com.sun.jdi.
ClassType
Gets the currently loaded, direct subclasses of this class.
Subclasses with policies for common cases
- Search tag in class java.util.concurrent.StructuredTaskScope
Section
Subclassing
- Search tag in class java.text.Format
Section
subdivide(double[], int, double[], int, double[], int)
- Static method in class java.awt.geom.
CubicCurve2D
Subdivides the cubic curve specified by the coordinates
 stored in the
src
array at indices
srcoff
through (
srcoff
+ 7) and stores the
 resulting two subdivided curves into the two result arrays at the
 corresponding indices.
subdivide(double[], int, double[], int, double[], int)
- Static method in class java.awt.geom.
QuadCurve2D
Subdivides the quadratic curve specified by the coordinates
 stored in the
src
array at indices
srcoff
through
srcoff
+ 5
 and stores the resulting two subdivided curves into the two
 result arrays at the corresponding indices.
subdivide(CubicCurve2D, CubicCurve2D)
- Method in class java.awt.geom.
CubicCurve2D
Subdivides this cubic curve and stores the resulting two
 subdivided curves into the left and right curve parameters.
subdivide(CubicCurve2D, CubicCurve2D, CubicCurve2D)
- Static method in class java.awt.geom.
CubicCurve2D
Subdivides the cubic curve specified by the
src
parameter
 and stores the resulting two subdivided curves into the
left
and
right
curve parameters.
subdivide(QuadCurve2D, QuadCurve2D)
- Method in class java.awt.geom.
QuadCurve2D
Subdivides this
QuadCurve2D
and stores the resulting
 two subdivided curves into the
left
and
right
curve parameters.
subdivide(QuadCurve2D, QuadCurve2D, QuadCurve2D)
- Static method in class java.awt.geom.
QuadCurve2D
Subdivides the quadratic curve specified by the
src
parameter and stores the resulting two subdivided curves into the
left
and
right
curve parameters.
SUBFILE_TYPE_FULL_RESOLUTION
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "SubfileType" tag.
SUBFILE_TYPE_REDUCED_RESOLUTION
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "SubfileType" tag.
SUBFILE_TYPE_SINGLE_PAGE
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "SubfileType" tag.
subinterfaces()
- Method in interface com.sun.jdi.
InterfaceType
Gets the currently prepared interfaces which directly extend this
 interface.
subInterfaces()
- Method in class java.net.
NetworkInterface
Get a Stream of all subinterfaces (also known as virtual
 interfaces) attached to this network interface.
Subject
- Class in
javax.security.auth
A
Subject
represents a grouping of related information
 for a single entity, such as a person.
Subject()
- Constructor for class javax.security.auth.
Subject
Create an instance of a
Subject
with an empty
Set
of Principals and empty
 Sets of public and private credentials.
Subject(boolean, Set<? extends Principal>, Set<?>, Set<?>)
- Constructor for class javax.security.auth.
Subject
Create an instance of a
Subject
with
 Principals and credentials.
SUBJECT_DISTANCE_RANGE_CLOSE_VIEW
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SubjectDistanceRange" tag.
SUBJECT_DISTANCE_RANGE_DISTANT_VIEW
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SubjectDistanceRange" tag.
SUBJECT_DISTANCE_RANGE_MACRO
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SubjectDistanceRange" tag.
SUBJECT_DISTANCE_RANGE_UNKNOWN
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "SubjectDistanceRange" tag.
SubjectDelegationPermission
- Class in
javax.management.remote
Permission required by an authentication identity to perform
 operations on behalf of an authorization identity.
SubjectDelegationPermission(String)
- Constructor for class javax.management.remote.
SubjectDelegationPermission
Creates a new SubjectDelegationPermission with the specified name.
SubjectDelegationPermission(String, String)
- Constructor for class javax.management.remote.
SubjectDelegationPermission
Creates a new SubjectDelegationPermission object with the
 specified name.
SubjectDomainCombiner
- Class in
javax.security.auth
Deprecated, for removal: This API element is subject to removal in a future version.
This class is only useful in conjunction with
the Security Manager
, which is deprecated
       and subject to removal in a future release. Consequently, this class
       is also deprecated and subject to removal. There is no replacement for
       the Security Manager or this class.
SubjectDomainCombiner(Subject)
- Constructor for class javax.security.auth.
SubjectDomainCombiner
Deprecated.
Associate the provided
Subject
with this
SubjectDomainCombiner
.
subkey(Object, SQLType)
- Method in interface java.sql.
ShardingKeyBuilder
This method will be called to add a subkey into a Sharding Key object being
 built.
subKind()
- Method in class jdk.jshell.
Snippet
Return the
Snippet.SubKind
of snippet.
subList(int, int)
- Method in class java.util.
AbstractList
Returns a view of the portion of this list between the specified
fromIndex
, inclusive, and
toIndex
, exclusive.
subList(int, int)
- Method in class java.util.
ArrayList
Returns a view of the portion of this list between the specified
fromIndex
, inclusive, and
toIndex
, exclusive.
subList(int, int)
- Method in class java.util.concurrent.
CopyOnWriteArrayList
Returns a view of the portion of this list between
fromIndex
, inclusive, and
toIndex
, exclusive.
subList(int, int)
- Method in interface java.util.
List
Returns a view of the portion of this list between the specified
fromIndex
, inclusive, and
toIndex
, exclusive.
subList(int, int)
- Method in class java.util.
Vector
Returns a view of the portion of this List between fromIndex,
 inclusive, and toIndex, exclusive.
subMap(K, boolean, K, boolean)
- Method in interface java.util.concurrent.
ConcurrentNavigableMap
subMap(K, boolean, K, boolean)
- Method in class java.util.concurrent.
ConcurrentSkipListMap
subMap(K, boolean, K, boolean)
- Method in interface java.util.
NavigableMap
Returns a view of the portion of this map whose keys range from
fromKey
to
toKey
.
subMap(K, boolean, K, boolean)
- Method in class java.util.
TreeMap
subMap(K, K)
- Method in interface java.util.concurrent.
ConcurrentNavigableMap
subMap(K, K)
- Method in class java.util.concurrent.
ConcurrentSkipListMap
subMap(K, K)
- Method in interface java.util.
NavigableMap
Returns a view of the portion of this map whose keys range from
fromKey
, inclusive, to
toKey
, exclusive.
subMap(K, K)
- Method in interface java.util.
SortedMap
Returns a view of the portion of this map whose keys range from
fromKey
, inclusive, to
toKey
, exclusive.
subMap(K, K)
- Method in class java.util.
TreeMap
SUBMISSION_INTERRUPTED
- Static variable in class javax.print.attribute.standard.
JobStateReason
The job was not completely submitted for some unforeseen reason.
SubmissionPublisher<T>
- Class in
java.util.concurrent
A
Flow.Publisher
that asynchronously issues submitted
 (non-null) items to current subscribers until it is closed.
SubmissionPublisher()
- Constructor for class java.util.concurrent.
SubmissionPublisher
Creates a new SubmissionPublisher using the
ForkJoinPool.commonPool()
for async delivery to subscribers
 (unless it does not support a parallelism level of at least two,
 in which case, a new Thread is created to run each task), with
 maximum buffer capacity of
Flow.defaultBufferSize()
, and no
 handler for Subscriber exceptions in method
onNext
.
SubmissionPublisher(Executor, int)
- Constructor for class java.util.concurrent.
SubmissionPublisher
Creates a new SubmissionPublisher using the given Executor for
 async delivery to subscribers, with the given maximum buffer size
 for each subscriber, and no handler for Subscriber exceptions in
 method
onNext
.
SubmissionPublisher(Executor, int, BiConsumer<? super Flow.Subscriber<? super T>, ? super Throwable>)
- Constructor for class java.util.concurrent.
SubmissionPublisher
Creates a new SubmissionPublisher using the given Executor for
 async delivery to subscribers, with the given maximum buffer size
 for each subscriber, and, if non-null, the given handler invoked
 when any Subscriber throws an exception in method
onNext
.
submit()
- Method in interface org.w3c.dom.html.
HTMLFormElement
Submits the form.
submit(Runnable)
- Method in class java.util.concurrent.
AbstractExecutorService
submit(Runnable)
- Method in interface java.util.concurrent.
ExecutorService
Submits a Runnable task for execution and returns a Future
 representing that task.
submit(Runnable)
- Method in class java.util.concurrent.
ForkJoinPool
submit(Runnable)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
submit(Runnable, T)
- Method in class java.util.concurrent.
AbstractExecutorService
submit(Runnable, T)
- Method in interface java.util.concurrent.
ExecutorService
Submits a Runnable task for execution and returns a Future
 representing that task.
submit(Runnable, T)
- Method in class java.util.concurrent.
ForkJoinPool
submit(Runnable, T)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
submit(Runnable, V)
- Method in interface java.util.concurrent.
CompletionService
Submits a Runnable task for execution and returns a Future
 representing that task.
submit(Runnable, V)
- Method in class java.util.concurrent.
ExecutorCompletionService
submit(Callable<T>)
- Method in class java.util.concurrent.
AbstractExecutorService
submit(Callable<T>)
- Method in interface java.util.concurrent.
ExecutorService
Submits a value-returning task for execution and returns a
 Future representing the pending results of the task.
submit(Callable<T>)
- Method in class java.util.concurrent.
ForkJoinPool
submit(Callable<T>)
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
submit(Callable<V>)
- Method in interface java.util.concurrent.
CompletionService
Submits a value-returning task for execution and returns a Future
 representing the pending results of the task.
submit(Callable<V>)
- Method in class java.util.concurrent.
ExecutorCompletionService
submit(ForkJoinTask<T>)
- Method in class java.util.concurrent.
ForkJoinPool
Submits a ForkJoinTask for execution.
submit(T)
- Method in class java.util.concurrent.
SubmissionPublisher
Publishes the given item to each current subscriber by
 asynchronously invoking its
onNext
method, blocking uninterruptibly while resources for any
 subscriber are unavailable.
SUBMIT
- Static variable in class javax.swing.text.html.
FormView
Deprecated.
As of 1.3, value now comes from UIManager property
             FormView.submitButtonText
submitData(String)
- Method in class javax.swing.text.html.
FormView
This method is responsible for submitting the form data.
subpath(int, int)
- Method in interface java.nio.file.
Path
Returns a relative
Path
that is a subsequence of the name
 elements of this path.
subprotocols(String, String...)
- Method in interface java.net.http.
WebSocket.Builder
Sets a request for the given subprotocols.
subsamplingXOffset
- Variable in class javax.imageio.
IIOParam
A horizontal offset to be applied to the subsampling grid before
 subsampling.
subsamplingYOffset
- Variable in class javax.imageio.
IIOParam
A vertical offset to be applied to the subsampling grid before
 subsampling.
subscribe(Flow.Subscriber<? super T>)
- Method in interface java.util.concurrent.
Flow.Publisher
Adds the given Subscriber if possible.
subscribe(Flow.Subscriber<? super T>)
- Method in class java.util.concurrent.
SubmissionPublisher
Adds the given Subscriber unless already subscribed.
Subscript
- Static variable in class javax.swing.text.
StyleConstants
Name of the Subscript attribute.
subSequence(int, int)
- Method in class java.lang.
StringBuilder
Returns a new character sequence that is a subsequence of this sequence.
subSequence(int, int)
- Method in interface java.lang.
CharSequence
Returns a
CharSequence
that is a subsequence of this sequence.
subSequence(int, int)
- Method in class java.lang.
String
Returns a character sequence that is a subsequence of this sequence.
subSequence(int, int)
- Method in class java.lang.
StringBuffer
subSequence(int, int)
- Method in class java.nio.
CharBuffer
Creates a new character buffer that represents the specified subsequence
 of this buffer, relative to the current position.
subSequence(int, int)
- Method in class javax.swing.text.
Segment
Returns a
CharSequence
that is a subsequence of this sequence.
subSet(E, boolean, E, boolean)
- Method in class java.util.concurrent.
ConcurrentSkipListSet
subSet(E, boolean, E, boolean)
- Method in interface java.util.
NavigableSet
Returns a view of the portion of this set whose elements range from
fromElement
to
toElement
.
subSet(E, boolean, E, boolean)
- Method in class java.util.
TreeSet
subSet(E, E)
- Method in class java.util.concurrent.
ConcurrentSkipListSet
subSet(E, E)
- Method in interface java.util.
NavigableSet
Returns a view of the portion of this set whose elements range
 from
fromElement
, inclusive, to
toElement
,
 exclusive.
subSet(E, E)
- Method in interface java.util.
SortedSet
Returns a view of the portion of this set whose elements range
 from
fromElement
, inclusive, to
toElement
,
 exclusive.
subSet(E, E)
- Method in class java.util.
TreeSet
Subset(String)
- Constructor for class java.lang.
Character.Subset
Constructs a new
Subset
instance.
SUBSIZED
- Static variable in interface java.util.
Spliterator
Characteristic value signifying that all Spliterators resulting from
trySplit()
will be both
Spliterator.SIZED
and
Spliterator.SUBSIZED
.
substituteColorModel(ColorModel, ColorModel)
- Method in class java.awt.image.
RGBImageFilter
Registers two ColorModel objects for substitution.
SUBSTITUTION_PERMISSION
- Static variable in interface java.io.
ObjectStreamConstants
Enable substitution of one object for another during
 serialization/deserialization.
substring(int)
- Method in class java.lang.
StringBuilder
Returns a new
String
that contains a subsequence of
 characters currently contained in this character sequence.
substring(int)
- Method in class java.lang.
String
Returns a string that is a substring of this string.
substring(int)
- Method in class java.lang.
StringBuffer
substring(int, int)
- Method in class java.lang.
StringBuilder
Returns a new
String
that contains a subsequence of
 characters currently contained in this sequence.
substring(int, int)
- Method in class java.lang.
String
Returns a string that is a substring of this string.
substring(int, int)
- Method in class java.lang.
StringBuffer
substringData(int, int)
- Method in interface org.w3c.dom.
CharacterData
Extracts a range of data from the node.
subtract(Area)
- Method in class java.awt.geom.
Area
Subtracts the shape of the specified
Area
from the
 shape of this
Area
.
subtract(BigDecimal)
- Method in class java.math.
BigDecimal
Returns a
BigDecimal
whose value is
(this -
 subtrahend)
, and whose scale is
max(this.scale(),
 subtrahend.scale())
.
subtract(BigDecimal, MathContext)
- Method in class java.math.
BigDecimal
Returns a
BigDecimal
whose value is
(this - subtrahend)
,
 with rounding according to the context settings.
subtract(BigInteger)
- Method in class java.math.
BigInteger
Returns a BigInteger whose value is
(this - val)
.
subtract(Duration)
- Method in class javax.xml.datatype.
Duration
Computes a new duration whose value is
this-rhs
.
SUBTRACT
- Static variable in class javax.xml.crypto.dsig.spec.
XPathType.Filter
The subtract filter operation.
subtractExact(int, int)
- Static method in class java.lang.
Math
Returns the difference of the arguments,
 throwing an exception if the result overflows an
int
.
subtractExact(int, int)
- Static method in class java.lang.
StrictMath
Returns the difference of the arguments,
 throwing an exception if the result overflows an
int
.
subtractExact(long, long)
- Static method in class java.lang.
Math
Returns the difference of the arguments,
 throwing an exception if the result overflows a
long
.
subtractExact(long, long)
- Static method in class java.lang.
StrictMath
Returns the difference of the arguments,
 throwing an exception if the result overflows a
long
.
subtractFrom(Temporal)
- Method in interface java.time.chrono.
ChronoPeriod
Subtracts this period from the specified temporal object.
subtractFrom(Temporal)
- Method in class java.time.
Duration
Subtracts this duration from the specified temporal object.
subtractFrom(Temporal)
- Method in class java.time.
Period
Subtracts this period from the specified temporal object.
subtractFrom(Temporal)
- Method in interface java.time.temporal.
TemporalAmount
Subtracts this object from the specified temporal object.
SUBTREE_SCOPE
- Static variable in class javax.naming.directory.
SearchControls
Search the entire subtree rooted at the named object.
SUBTREE_SCOPE
- Static variable in interface javax.naming.event.
EventContext
Constant for expressing interest in events concerning objects
 in the subtree of the object named by the target, including the object
 named by the target.
SUBWINDOW_OF
- Static variable in class javax.accessibility.
AccessibleRelation
Indicates that an object is a subwindow of one or more objects.
SUBWINDOW_OF_PROPERTY
- Static variable in class javax.accessibility.
AccessibleRelation
Indicates the
SUBWINDOW_OF
relation between two or more objects
 has changed.
Success(HttpPrincipal)
- Constructor for class com.sun.net.httpserver.
Authenticator.Success
Creates a
Success
instance with given
Principal
.
SUCCESS
- Enum constant in enum class java.util.concurrent.
Future.State
The task completed with a result.
SUCCESS
- Enum constant in enum class java.util.concurrent.
StructuredTaskScope.Subtask.State
PREVIEW
The subtask completed successfully with a result.
SUCCESS_NO_INFO
- Static variable in interface java.sql.
Statement
The constant indicating that a batch statement executed successfully
 but that no count of the number of rows it affected is available.
SUFFICIENT
- Static variable in class javax.security.auth.login.
AppConfigurationEntry.LoginModuleControlFlag
Sufficient
LoginModule
.
suffix()
- Method in class java.util.
HexFormat
Returns the suffix used for each hexadecimal value in formatted hexadecimal strings.
SUFFIX
- Static variable in class java.text.
NumberFormat.Field
Constant identifying the suffix field.
suffixes
- Variable in class javax.imageio.spi.
ImageReaderWriterSpi
An array of strings to be returned from
getFileSuffixes
, initially
null
.
sum()
- Method in class java.util.concurrent.atomic.
DoubleAdder
Returns the current sum.
sum()
- Method in class java.util.concurrent.atomic.
LongAdder
Returns the current sum.
sum()
- Method in interface java.util.stream.
DoubleStream
Returns the sum of elements in this stream.
sum()
- Method in interface java.util.stream.
IntStream
Returns the sum of elements in this stream.
sum()
- Method in interface java.util.stream.
LongStream
Returns the sum of elements in this stream.
sum(double, double)
- Static method in class java.lang.
Double
Adds two
double
values together as per the + operator.
sum(float, float)
- Static method in class java.lang.
Float
Adds two
float
values together as per the + operator.
sum(int, int)
- Static method in class java.lang.
Integer
Adds two integers together as per the + operator.
sum(long, long)
- Static method in class java.lang.
Long
Adds two
long
values together as per the + operator.
sum(Spring, Spring)
- Static method in class javax.swing.
Spring
Returns
s1+s2
: a spring representing
s1
and
s2
in series.
summarizingDouble(ToDoubleFunction<? super T>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
which applies an
double
-producing
 mapping function to each input element, and returns summary statistics
 for the resulting values.
summarizingInt(ToIntFunction<? super T>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
which applies an
int
-producing
 mapping function to each input element, and returns summary statistics
 for the resulting values.
summarizingLong(ToLongFunction<? super T>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
which applies an
long
-producing
 mapping function to each input element, and returns summary statistics
 for the resulting values.
Summary
- Search tag in class java.util.Formatter
Section
Summary
- Search tag in class javax.swing.text.html.HTMLDocument
Section
SUMMARY
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SummaryTree
representing an
@summary
tag.
Summary of attributes
- Search tag in class java.awt.font.TextAttribute
Section
Summary of regular-expression constructs
- Search tag in class java.util.regex.Pattern
Section
summaryStatistics()
- Method in interface java.util.stream.
DoubleStream
Returns a
DoubleSummaryStatistics
describing various summary data
 about the elements of this stream.
summaryStatistics()
- Method in interface java.util.stream.
IntStream
Returns an
IntSummaryStatistics
describing various
 summary data about the elements of this stream.
summaryStatistics()
- Method in interface java.util.stream.
LongStream
Returns a
LongSummaryStatistics
describing various summary data
 about the elements of this stream.
SummaryTree
- Interface in
com.sun.source.doctree
A tree node for an
@summary
inline tag.
summingDouble(ToDoubleFunction<? super T>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
that produces the sum of a double-valued
 function applied to the input elements.
summingInt(ToIntFunction<? super T>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
that produces the sum of an integer-valued
 function applied to the input elements.
summingLong(ToLongFunction<? super T>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
that produces the sum of a long-valued
 function applied to the input elements.
sumThenReset()
- Method in class java.util.concurrent.atomic.
DoubleAdder
Equivalent in effect to
DoubleAdder.sum()
followed by
DoubleAdder.reset()
.
sumThenReset()
- Method in class java.util.concurrent.atomic.
LongAdder
Equivalent in effect to
LongAdder.sum()
followed by
LongAdder.reset()
.
sun.net.httpserver.drainAmount
- Search tag in module jdk.httpserver
System Property
sun.net.httpserver.idleInterval
- Search tag in module jdk.httpserver
System Property
sun.net.httpserver.maxIdleConnections
- Search tag in module jdk.httpserver
System Property
sun.net.httpserver.maxReqHeaders
- Search tag in module jdk.httpserver
System Property
sun.net.httpserver.maxReqHeaderSize
- Search tag in module jdk.httpserver
System Property
sun.net.httpserver.maxReqTime
- Search tag in module jdk.httpserver
System Property
sun.net.httpserver.maxRspTime
- Search tag in module jdk.httpserver
System Property
sun.net.httpserver.nodelay
- Search tag in module jdk.httpserver
System Property
sun.security.krb5.principal
- Search tag in class com.sun.security.auth.module.Krb5LoginModule
System Property
SUNDANESE
- Enum constant in enum class java.awt.font.
NumericShaper.Range
The Sundanese range with the Sundanese digits.
SUNDANESE
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Sundanese".
SUNDANESE
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Sundanese" Unicode character block.
SUNDANESE_SUPPLEMENT
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Sundanese Supplement" Unicode character block.
SUNDAY
- Enum constant in enum class java.time.
DayOfWeek
The singleton instance for the day-of-week of Sunday.
SUNDAY
- Static variable in class java.util.
Calendar
Value of the
Calendar.DAY_OF_WEEK
field indicating
 Sunday.
SUNDAY_START
- Static variable in class java.time.temporal.
WeekFields
The common definition of a week that starts on Sunday and the first week
 has a minimum of 1 day.
SUP
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <sup>
SUPER
- Enum constant in enum class java.lang.reflect.
AccessFlag
The access flag
ACC_SUPER
with a mask value of
0x0020
.
SUPER_WILDCARD
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
WildcardTree
representing
 a lower-bounded wildcard type argument.
superclass()
- Method in interface com.sun.jdi.
ClassType
Gets the superclass of this class.
superinterfaces()
- Method in interface com.sun.jdi.
InterfaceType
Gets the interfaces directly extended by this interface.
superLayout(Container)
- Method in class javax.swing.plaf.metal.
MetalComboBoxUI.MetalComboBoxLayoutManager
Lays out the parent container.
Superscript
- Static variable in class javax.swing.text.
StyleConstants
Name of the Superscript attribute.
SUPERSCRIPT
- Static variable in class java.awt.font.
TextAttribute
Attribute key for superscripting and subscripting.
SUPERSCRIPT_SUB
- Static variable in class java.awt.font.
TextAttribute
Standard subscript.
SUPERSCRIPT_SUPER
- Static variable in class java.awt.font.
TextAttribute
Standard superscript.
SUPERSCRIPTS_AND_SUBSCRIPTS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Superscripts and Subscripts" Unicode character
 block.
SUPERSEDED
- Enum constant in enum class java.security.cert.
CRLReason
This reason indicates that the certificate has been superseded.
superShardingKey(ShardingKey)
- Method in interface java.sql.
ConnectionBuilder
Specifies a
superShardingKey
to be used when creating a connection
superShardingKey(ShardingKey)
- Method in interface javax.sql.
PooledConnectionBuilder
Specifies a
superShardingKey
to be used when creating a connection
superShardingKey(ShardingKey)
- Method in interface javax.sql.
XAConnectionBuilder
Specifies a
superShardingKey
to be used when creating a connection
SUPPLEMENTAL_ARROWS_A
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Supplemental Arrows-A" Unicode character block.
SUPPLEMENTAL_ARROWS_B
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Supplemental Arrows-B" Unicode character block.
SUPPLEMENTAL_ARROWS_C
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Supplemental Arrows-C" Unicode character block.
SUPPLEMENTAL_MATHEMATICAL_OPERATORS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Supplemental Mathematical Operators" Unicode
 character block.
SUPPLEMENTAL_PUNCTUATION
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Supplemental Punctuation" Unicode character block.
SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Supplemental Symbols and Pictographs" Unicode
 character block.
SUPPLEMENTARY_PRIVATE_USE_AREA_A
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Supplementary Private Use Area-A" Unicode character
 block.
SUPPLEMENTARY_PRIVATE_USE_AREA_B
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Supplementary Private Use Area-B" Unicode character
 block.
supplier()
- Method in interface java.util.stream.
Collector
A function that creates and returns a new mutable result container.
Supplier<T>
- Interface in
java.util.function
Represents a supplier of results.
supplyAsync(Supplier<U>)
- Static method in class java.util.concurrent.
CompletableFuture
Returns a new CompletableFuture that is asynchronously completed
 by a task running in the
ForkJoinPool.commonPool()
with
 the value obtained by calling the given Supplier.
supplyAsync(Supplier<U>, Executor)
- Static method in class java.util.concurrent.
CompletableFuture
Returns a new CompletableFuture that is asynchronously completed
 by a task running in the given executor with the value obtained
 by calling the given Supplier.
SUPPORT_DTD
- Static variable in class javax.xml.stream.
XMLInputFactory
The property that requires the parser to support DTDs
SUPPORTED
- Static variable in class javax.print.attribute.standard.
ColorSupported
The printer is capable of some type of color printing, such as highlight
 color or full process color.
SupportedAnnotationTypes
- Annotation Interface in
javax.annotation.processing
An annotation used to indicate what annotation interfaces an
 annotation processor supports.
supportedFileAttributeViews()
- Method in class java.nio.file.
FileSystem
Returns the set of the
names
of the file
 attribute views supported by this
FileSystem
.
supportedOptions()
- Method in class com.sun.nio.sctp.
SctpChannel
Returns a set of the socket options supported by this channel.
supportedOptions()
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Returns a set of the socket options supported by this channel.
supportedOptions()
- Method in class com.sun.nio.sctp.
SctpServerChannel
Returns a set of the socket options supported by this channel.
supportedOptions()
- Method in class java.net.
DatagramSocket
Returns a set of the socket options supported by this socket.
supportedOptions()
- Method in class java.net.
DatagramSocketImpl
Returns a set of SocketOptions supported by this impl
 and by this impl's socket (DatagramSocket or MulticastSocket)
supportedOptions()
- Method in class java.net.
ServerSocket
Returns a set of the socket options supported by this server socket.
supportedOptions()
- Method in class java.net.
Socket
Returns a set of the socket options supported by this socket.
supportedOptions()
- Method in class java.net.
SocketImpl
Returns a set of SocketOptions supported by this impl
 and by this impl's socket (Socket or ServerSocket)
supportedOptions()
- Method in interface java.nio.channels.
NetworkChannel
Returns a set of the socket options supported by this channel.
supportedOptions(Class<?>)
- Static method in class jdk.net.
Sockets
Deprecated, for removal: This API element is subject to removal in a future version.
use
Socket.supportedOptions()
,
ServerSocket.supportedOptions()
,
             or
DatagramSocket.supportedOptions()
instead.
SupportedOptions
- Annotation Interface in
javax.annotation.processing
An annotation used to indicate what options an annotation processor
 supports.
SupportedSourceVersion
- Annotation Interface in
javax.annotation.processing
An annotation used to indicate the latest source version an
 annotation processor supports.
SupportedValuesAttribute
- Interface in
javax.print.attribute
Interface
SupportedValuesAttribute
is a tagging interface which a
 printing attribute class implements to indicate the attribute describes the
 supported values for another attribute.
Supported-Values Attributes
- Search tag in package javax.print.attribute.standard
Section
supportsAcceptTimeout()
- Method in class com.sun.jdi.connect.spi.
TransportService.Capabilities
Tell whether or not this transport service supports a
 timeout while waiting for a target VM to connect.
supportsAlterTableWithAddColumn()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports
ALTER TABLE
with add column.
supportsAlterTableWithDropColumn()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports
ALTER TABLE
with drop column.
supportsANSI92EntryLevelSQL()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the ANSI92 entry level SQL
 grammar.
supportsANSI92FullSQL()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the ANSI92 full SQL grammar supported.
supportsANSI92IntermediateSQL()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the ANSI92 intermediate SQL grammar supported.
supportsAttachTimeout()
- Method in class com.sun.jdi.connect.spi.
TransportService.Capabilities
Tell whether or not this transport service supports a timeout
 when attaching to a target VM.
supportsBatchUpdates()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports batch updates.
supportsCatalogsInDataManipulation()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a catalog name can be used in a data manipulation statement.
supportsCatalogsInIndexDefinitions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a catalog name can be used in an index definition statement.
supportsCatalogsInPrivilegeDefinitions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a catalog name can be used in a privilege definition statement.
supportsCatalogsInProcedureCalls()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a catalog name can be used in a procedure call statement.
supportsCatalogsInTableDefinitions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a catalog name can be used in a table definition statement.
supportsColumnAliasing()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports column aliasing.
supportsConvert()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the JDBC scalar function
CONVERT
for the conversion of one JDBC type to another.
supportsConvert(int, int)
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the JDBC scalar function
CONVERT
for conversions between the JDBC types
fromType
and
toType
.
supportsCoreSQLGrammar()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the ODBC Core SQL grammar.
supportsCorrelatedSubqueries()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports correlated subqueries.
supportsCrossJoin()
- Method in interface javax.sql.rowset.
JoinRowSet
Indicates if CROSS_JOIN is supported by a JoinRowSet
 implementation
supportsCustomEditor()
- Method in interface java.beans.
PropertyEditor
Determines whether this property editor supports a custom editor.
supportsCustomEditor()
- Method in class java.beans.
PropertyEditorSupport
Determines whether the propertyEditor can provide a custom editor.
supportsDataDefinitionAndDataManipulationTransactions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports both data definition and
 data manipulation statements within a transaction.
supportsDataManipulationTransactionsOnly()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports only data manipulation
 statements within a transaction.
supportsDifferentTableCorrelationNames()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether, when table correlation names are supported, they
 are restricted to being different from the names of the tables.
supportsExpressionsInOrderBy()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports expressions in
ORDER BY
lists.
supportsExtendedSQLGrammar()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the ODBC Extended SQL grammar.
supportsFileAttributeView(Class<? extends FileAttributeView>)
- Method in class java.nio.file.
FileStore
Tells whether or not this file store supports the file attributes
 identified by the given file attribute view.
supportsFileAttributeView(String)
- Method in class java.nio.file.
FileStore
Tells whether or not this file store supports the file attributes
 identified by the given file attribute view.
supportsFullJoin()
- Method in interface javax.sql.rowset.
JoinRowSet
Indicates if FULL_JOIN is supported by a JoinRowSet
 implementation
supportsFullOuterJoins()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports full nested outer joins.
supportsGetGeneratedKeys()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether auto-generated keys can be retrieved after
 a statement has been executed
supportsGroupBy()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports some form of
GROUP BY
clause.
supportsGroupByBeyondSelect()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports using columns not included in
 the
SELECT
statement in a
GROUP BY
clause
 provided that all of the columns in the
SELECT
statement
 are included in the
GROUP BY
clause.
supportsGroupByUnrelated()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports using a column that is
 not in the
SELECT
statement in a
GROUP BY
clause.
supportsHandshakeTimeout()
- Method in class com.sun.jdi.connect.spi.
TransportService.Capabilities
Tells whether or not this transport service supports a
 timeout when handshaking with the target VM.
supportsInnerJoin()
- Method in interface javax.sql.rowset.
JoinRowSet
Indicates if INNER_JOIN is supported by a JoinRowSet
 implementation
supportsIntegrityEnhancementFacility()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the SQL Integrity
 Enhancement Facility.
supportsLeftOuterJoin()
- Method in interface javax.sql.rowset.
JoinRowSet
Indicates if LEFT_OUTER_JOIN is supported by a JoinRowSet
 implementation
supportsLikeEscapeClause()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports specifying a
LIKE
escape clause.
supportsLimitedOuterJoins()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database provides limited support for outer
 joins.
supportsMinimumSQLGrammar()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the ODBC Minimum SQL grammar.
supportsMixedCaseIdentifiers()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database treats mixed case unquoted SQL identifiers as
 case sensitive and as a result stores them in mixed case.
supportsMixedCaseQuotedIdentifiers()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database treats mixed case quoted SQL identifiers as
 case sensitive and as a result stores them in mixed case.
supportsMulticast()
- Method in class java.net.
NetworkInterface
Returns whether a network interface supports multicasting or not.
supportsMultipleConnections()
- Method in interface com.sun.jdi.connect.
ListeningConnector
Indicates whether this listening connector supports multiple
 connections for a single argument map.
supportsMultipleConnections()
- Method in class com.sun.jdi.connect.spi.
TransportService.Capabilities
Tells whether or not this transport service can support
 multiple concurrent connections to a single address that
 it is listening on.
supportsMultipleOpenResults()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether it is possible to have multiple
ResultSet
objects
 returned from a
CallableStatement
object
 simultaneously.
supportsMultipleResultSets()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports getting multiple
ResultSet
objects from a single call to the
 method
execute
.
supportsMultipleTransactions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database allows having multiple
 transactions open at once (on different connections).
supportsNamedParameters()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports named parameters to callable
 statements.
supportsNonNullableColumns()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether columns in this database may be defined as non-nullable.
supportsNormalTermination()
- Method in class java.lang.
Process
Returns
true
if the implementation of
Process.destroy()
is to
 normally terminate the process,
 Returns
false
if the implementation of
destroy
forcibly and immediately terminates the process.
supportsNormalTermination()
- Method in interface java.lang.
ProcessHandle
Returns
true
if the implementation of
ProcessHandle.destroy()
normally terminates the process.
supportsOpenCursorsAcrossCommit()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports keeping cursors open
 across commits.
supportsOpenCursorsAcrossRollback()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports keeping cursors open
 across rollbacks.
supportsOpenStatementsAcrossCommit()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports keeping statements open
 across commits.
supportsOpenStatementsAcrossRollback()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports keeping statements open
 across rollbacks.
supportsOrderByUnrelated()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports using a column that is
 not in the
SELECT
statement in an
ORDER BY
clause.
supportsOuterJoins()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports some form of outer join.
supportsParameter(Object)
- Method in class java.security.
Provider.Service
Test whether this Service can use the specified parameter.
supportsPositionedDelete()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports positioned
DELETE
statements.
supportsPositionedUpdate()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports positioned
UPDATE
statements.
supportsPredictionResistance()
- Method in enum class java.security.
DrbgParameters.Capability
Returns whether this capability supports prediction resistance.
supportsRefCursors()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports REF CURSOR.
supportsReseeding()
- Method in enum class java.security.
DrbgParameters.Capability
Returns whether this capability supports reseeding.
supportsResultSetConcurrency(int, int)
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the given concurrency type
 in combination with the given result set type.
supportsResultSetHoldability(int)
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the given result set holdability.
supportsResultSetType(int)
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the given result set type.
supportsRightOuterJoin()
- Method in interface javax.sql.rowset.
JoinRowSet
Indicates if RIGHT_OUTER_JOIN is supported by a JoinRowSet
 implementation
supportsSavepoints()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports savepoints.
supportsSchemasInDataManipulation()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a schema name can be used in a data manipulation statement.
supportsSchemasInIndexDefinitions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a schema name can be used in an index definition statement.
supportsSchemasInPrivilegeDefinitions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a schema name can be used in a privilege definition statement.
supportsSchemasInProcedureCalls()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a schema name can be used in a procedure call statement.
supportsSchemasInTableDefinitions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a schema name can be used in a table definition statement.
supportsSelectForUpdate()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports
SELECT FOR UPDATE
statements.
supportsSharding()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports sharding.
supportsStandardImageMetadataFormat
- Variable in class javax.imageio.spi.
ImageReaderWriterSpi
A boolean indicating whether this plug-in supports the
 standard metadata format for image metadata, initially
false
.
supportsStandardStreamMetadataFormat
- Variable in class javax.imageio.spi.
ImageReaderWriterSpi
A boolean indicating whether this plug-in supports the
 standard metadata format for stream metadata, initially
false
.
supportsStatementPooling()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports statement pooling.
supportsStoredFunctionsUsingCallSyntax()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports invoking user-defined or vendor functions
 using the stored procedure escape syntax.
supportsStoredProcedures()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports stored procedure calls
 that use the stored procedure escape syntax.
supportsSubqueriesInComparisons()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports subqueries in comparison
 expressions.
supportsSubqueriesInExists()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports subqueries in
EXISTS
expressions.
supportsSubqueriesInIns()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports subqueries in
IN
expressions.
supportsSubqueriesInQuantifieds()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports subqueries in quantified
 expressions.
supportsTableCorrelationNames()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports table correlation names.
supportsTransactionIsolationLevel(int)
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports the given transaction isolation level.
supportsTransactions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports transactions.
supportsUnion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports SQL
UNION
.
supportsUnionAll()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database supports SQL
UNION ALL
.
supportsUpdatableView()
- Method in class javax.sql.rowset.spi.
SyncProvider
Returns whether this
SyncProvider
implementation
 can perform synchronization between a
RowSet
object
 and the SQL
VIEW
in the data source from which
 the
RowSet
object got its data.
supportsUrgentData()
- Method in class java.net.
SocketImpl
Returns whether or not this SocketImpl supports sending
 urgent data.
SuppressWarnings
- Search tag in module jdk.compiler
Section
SuppressWarnings
- Annotation Interface in
java.lang
Indicates the warnings to be suppressed at compile time in the
 annotated element, and in all elements contained in the annotated
 element.
SURROGATE
- Static variable in class java.lang.
Character
General category "Cs" in the Unicode specification.
SURROGATES_AREA
- Static variable in class java.lang.
Character.UnicodeBlock
Deprecated.
Instead of
SURROGATES_AREA
, use
Character.UnicodeBlock.HIGH_SURROGATES
,
Character.UnicodeBlock.HIGH_PRIVATE_USE_SURROGATES
, and
Character.UnicodeBlock.LOW_SURROGATES
.
 These constants match the block definitions of the Unicode Standard.
 The
Character.UnicodeBlock.of(char)
and
Character.UnicodeBlock.of(int)
methods return the
 standard constants.
surroundContents(Node)
- Method in interface org.w3c.dom.ranges.
Range
Reparents the contents of the Range to the given node and inserts the
 node at the position of the start of the Range.
suspend()
- Method in interface com.sun.jdi.
ThreadGroupReference
Suspends all threads in this thread group.
suspend()
- Method in interface com.sun.jdi.
ThreadReference
Suspends this thread.
suspend()
- Method in interface com.sun.jdi.
VirtualMachine
Suspends the execution of the application running in this
 virtual machine.
suspend()
- Method in class java.lang.
Thread
Deprecated, for removal: This API element is subject to removal in a future version.
This method was originally specified to suspend a thread.
     It was inherently deadlock-prone. If the target thread held a lock on
     a monitor protecting a critical system resource when it was suspended,
     no thread could access the resource until the target thread was resumed.
     If the thread intending to resume the target thread attempted to lock
     the monitor prior to calling
resume
, deadlock would result.
     Such deadlocks typically manifested themselves as "frozen" processes.
     For more information, see
Why
     are Thread.stop, Thread.suspend and Thread.resume Deprecated?
.
suspend()
- Method in class java.lang.
ThreadGroup
Deprecated, for removal: This API element is subject to removal in a future version.
This method was originally specified to suspend all threads
             in the thread group.
SUSPEND_ALL
- Static variable in interface com.sun.jdi.request.
EventRequest
Suspend all threads when the event occurs
SUSPEND_EVENT_THREAD
- Static variable in interface com.sun.jdi.request.
EventRequest
Suspend only the thread which generated the event when the event occurs
SUSPEND_NONE
- Static variable in interface com.sun.jdi.request.
EventRequest
Suspend no threads when the event occurs
suspendCount()
- Method in interface com.sun.jdi.
ThreadReference
Returns the number of pending suspends for this thread.
suspendPolicy()
- Method in interface com.sun.jdi.event.
EventSet
Returns the policy used to suspend threads in the target VM
 for this event set.
suspendPolicy()
- Method in interface com.sun.jdi.request.
EventRequest
Returns a value which describes the threads to suspend when the
 requested event occurs in the target VM.
SUTTON_SIGNWRITING
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Sutton SignWriting" Unicode character block.
sval
- Variable in class java.io.
StreamTokenizer
If the current token is a word token, this field contains a
 string giving the characters of the word token.
SW_RESIZE_CURSOR
- Static variable in class java.awt.
Cursor
The south-west-resize cursor type.
SW_RESIZE_CURSOR
- Static variable in class java.awt.
Frame
Deprecated.
replaced by
Cursor.SW_RESIZE_CURSOR
.
swap(List<?>, int, int)
- Static method in class java.util.
Collections
Swaps the elements at the specified positions in the specified list.
SWAP_COLORS
- Static variable in class java.awt.font.
TextAttribute
Attribute key for swapping foreground and background
Paints
.
SWAP_COLORS_ON
- Static variable in class java.awt.font.
TextAttribute
Swap foreground and background.
SWING_COMPONENT
- Static variable in class javax.accessibility.
AccessibleRole
A Swing component, but nothing else is known about it.
Swing's Serialization policy
- Search tag in package javax.swing
Section
Swing's Threading Policy
- Search tag in package javax.swing
Section
Swing Components Supporting Action
- Search tag in interface javax.swing.Action
Section
SwingConstants
- Interface in
javax.swing
A collection of constants generally used for positioning and orienting
 components on the screen.
SwingContainer
- Annotation Interface in
javax.swing
An annotation used to specify some swing-related information
 for the automatically generated
BeanInfo
classes.
SwingEventMonitor
- Class in
com.sun.java.accessibility.util
SwingEventMonitor
extends
AWTEventMonitor
by adding a suite of
 listeners conditionally installed on every Swing component instance
 in the Java Virtual Machine.
SwingEventMonitor()
- Constructor for class com.sun.java.accessibility.util.
SwingEventMonitor
Constructs a
SwingEventMonitor
.
SwingPropertyChangeSupport
- Class in
javax.swing.event
This subclass of
java.beans.PropertyChangeSupport
is almost
 identical in functionality.
SwingPropertyChangeSupport(Object)
- Constructor for class javax.swing.event.
SwingPropertyChangeSupport
Constructs a SwingPropertyChangeSupport object.
SwingPropertyChangeSupport(Object, boolean)
- Constructor for class javax.swing.event.
SwingPropertyChangeSupport
Constructs a SwingPropertyChangeSupport object.
SwingUtilities
- Class in
javax.swing
A collection of utility methods for Swing.
SwingWorker<T,
V>
- Class in
javax.swing
An abstract class to perform lengthy GUI-interaction tasks in a
 background thread.
SwingWorker()
- Constructor for class javax.swing.
SwingWorker
Constructs this
SwingWorker
.
SwingWorker.StateValue
- Enum Class in
javax.swing
Values for the
state
bound property.
SWITCH
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
SwitchTree
.
SWITCH_EXPRESSION
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
SwitchExpressionTree
.
SwitchBootstraps
- Class in
java.lang.runtime
Bootstrap methods for linking
invokedynamic
call sites that implement
 the selection functionality of the
switch
statement.
SwitchExpressionTree
- Interface in
com.sun.source.tree
A tree node for a
switch
expression.
SwitchPoint
- Class in
java.lang.invoke
A
SwitchPoint
is an object which can publish state transitions to other threads.
SwitchPoint()
- Constructor for class java.lang.invoke.
SwitchPoint
Creates a new switch point.
SwitchTree
- Interface in
com.sun.source.tree
A tree node for a
switch
statement.
SYLOTI_NAGRI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Syloti_Nagri".
SYLOTI_NAGRI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Syloti Nagri" Unicode character block.
Symbolic Links
- Search tag in package java.nio.file
Section
SymbolLookup
PREVIEW
- Interface in
java.lang.foreign
A
symbol lookup
retrieves the address of a symbol in one or more libraries.
SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Symbols and Pictographs Extended-A" Unicode
 character block.
SYMBOLS_FOR_LEGACY_COMPUTING
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Symbols for Legacy Computing" Unicode
 character block.
sync()
- Method in class java.awt.
Toolkit
Synchronizes this toolkit's graphics state.
sync()
- Method in class java.io.
FileDescriptor
Force all system buffers to synchronize with the underlying
 device.
sync()
- Method in class java.util.prefs.
AbstractPreferences
Implements the
sync
method as per the specification in
Preferences.sync()
.
sync()
- Method in class java.util.prefs.
Preferences
Ensures that future reads from this preference node and its
 descendants reflect any changes that were committed to the persistent
 store (from any VM) prior to the
sync
invocation.
SYNC
- Enum constant in enum class java.nio.file.
StandardOpenOption
Requires that every update to the file's content or metadata be written
 synchronously to the underlying storage device.
SYNC_FLUSH
- Static variable in class java.util.zip.
Deflater
Compression flush mode used to flush out all pending output; may
 degrade compression for some compression algorithms.
syncAll(MutableCallSite[])
- Static method in class java.lang.invoke.
MutableCallSite
Performs a synchronization operation on each call site in the given array,
 forcing all other threads to throw away any cached values previously
 loaded from the target of any of the call sites.
syncAllWidths
- Variable in class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonAreaLayout
The value represents if the width of children should be synchronized.
SyncFactory
- Class in
javax.sql.rowset.spi
The Service Provider Interface (SPI) mechanism that generates
SyncProvider
instances to be used by disconnected
RowSet
objects.
SyncFactoryException
- Exception Class in
javax.sql.rowset.spi
Indicates an error with
SyncFactory
mechanism.
SyncFactoryException()
- Constructor for exception class javax.sql.rowset.spi.
SyncFactoryException
Creates new
SyncFactoryException
without detail message.
SyncFactoryException(String)
- Constructor for exception class javax.sql.rowset.spi.
SyncFactoryException
Constructs an
SyncFactoryException
with the specified
 detail message.
SyncFailedException
- Exception Class in
java.io
Signals that a sync operation has failed.
SyncFailedException(String)
- Constructor for exception class java.io.
SyncFailedException
Constructs an SyncFailedException with a detail message.
Synchronization
- Search tag in class java.text.ChoiceFormat
Section
Synchronization
- Search tag in class java.text.DateFormat
Section
Synchronization
- Search tag in class java.text.DecimalFormat
Section
Synchronization
- Search tag in class java.text.Format
Section
Synchronization
- Search tag in class java.text.MessageFormat
Section
Synchronization
- Search tag in class java.text.NumberFormat
Section
Synchronization
- Search tag in class java.text.SimpleDateFormat
Section
Synchronization Information and Deadlock Detection
- Search tag in interface java.lang.management.ThreadMXBean
Section
Synchronization Statistics
- Search tag in class java.lang.management.ThreadInfo
Section
synchronize(Line[], boolean)
- Method in interface javax.sound.sampled.
Mixer
Synchronizes two or more lines.
SYNCHRONIZE
- Enum constant in enum class java.nio.file.attribute.
AclEntryPermission
Permission to access file locally at the server with synchronous reads
 and writes.
SYNCHRONIZED
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
SynchronizedTree
.
SYNCHRONIZED
- Enum constant in enum class java.lang.reflect.
AccessFlag
The access flag
ACC_SYNCHRONIZED
, corresponding to the
 source modifier
synchronized
, with
 a mask value of
0x0020
.
SYNCHRONIZED
- Enum constant in enum class javax.lang.model.element.
Modifier
The modifier
synchronized
SYNCHRONIZED
- Static variable in class java.lang.reflect.
Modifier
The
int
value representing the
synchronized
modifier.
synchronizedCollection(Collection<T>)
- Static method in class java.util.
Collections
Returns a synchronized (thread-safe) collection backed by the specified
 collection.
Synchronized I/O File Integrity
- Search tag in package java.nio.file
Section
synchronizedList(List<T>)
- Static method in class java.util.
Collections
Returns a synchronized (thread-safe) list backed by the specified
 list.
synchronizedMap(Map<K, V>)
- Static method in class java.util.
Collections
Returns a synchronized (thread-safe) map backed by the specified
 map.
synchronizedNavigableMap(NavigableMap<K, V>)
- Static method in class java.util.
Collections
Returns a synchronized (thread-safe) navigable map backed by the
 specified navigable map.
synchronizedNavigableSet(NavigableSet<T>)
- Static method in class java.util.
Collections
Returns a synchronized (thread-safe) navigable set backed by the
 specified navigable set.
synchronizedSet(Set<T>)
- Static method in class java.util.
Collections
Returns a synchronized (thread-safe) set backed by the specified
 set.
synchronizedSortedMap(SortedMap<K, V>)
- Static method in class java.util.
Collections
Returns a synchronized (thread-safe) sorted map backed by the specified
 sorted map.
synchronizedSortedSet(SortedSet<T>)
- Static method in class java.util.
Collections
Returns a synchronized (thread-safe) sorted set backed by the specified
 sorted set.
SynchronizedTree
- Interface in
com.sun.source.tree
A tree node for a
synchronized
statement.
synchronizedView(AttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates a synchronized view of the given attribute set.
synchronizedView(DocAttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates a synchronized view of the given doc attribute set.
synchronizedView(PrintJobAttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates a synchronized view of the given print job attribute set.
synchronizedView(PrintRequestAttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates a synchronized view of the given print request attribute set.
synchronizedView(PrintServiceAttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates a synchronized view of the given print service attribute set.
Synchronizers
- Search tag in package java.util.concurrent
Section
SynchronousQueue<E>
- Class in
java.util.concurrent
A
blocking queue
in which each insert
 operation must wait for a corresponding remove operation by another
 thread, and vice versa.
SynchronousQueue()
- Constructor for class java.util.concurrent.
SynchronousQueue
Creates a
SynchronousQueue
with nonfair access policy.
SynchronousQueue(boolean)
- Constructor for class java.util.concurrent.
SynchronousQueue
Creates a
SynchronousQueue
with the specified fairness policy.
SyncMode(String)
- Constructor for class javax.sound.midi.
Sequencer.SyncMode
Constructs a synchronization mode.
SyncProvider
- Class in
javax.sql.rowset.spi
The synchronization mechanism that provides reader/writer capabilities for
 disconnected
RowSet
objects.
SyncProvider()
- Constructor for class javax.sql.rowset.spi.
SyncProvider
Creates a default
SyncProvider
object.
SyncProviderException
- Exception Class in
javax.sql.rowset.spi
Indicates an error with the
SyncProvider
mechanism.
SyncProviderException()
- Constructor for exception class javax.sql.rowset.spi.
SyncProviderException
Creates a new
SyncProviderException
object without a detail message.
SyncProviderException(String)
- Constructor for exception class javax.sql.rowset.spi.
SyncProviderException
Constructs a
SyncProviderException
object with the specified
 detail message.
SyncProviderException(SyncResolver)
- Constructor for exception class javax.sql.rowset.spi.
SyncProviderException
Constructs a
SyncProviderException
object with the specified
SyncResolver
instance.
SyncResolver
- Interface in
javax.sql.rowset.spi
Defines a framework that allows applications to use a manual decision tree
 to decide what should be done when a synchronization conflict occurs.
syncScrollPaneWithViewport()
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Synchronizes the
JScrollPane
with
Viewport
.
syncSpi()
- Method in class java.util.prefs.
AbstractPreferences
This method is invoked with this node locked.
syncWithScrollPane(JScrollPane)
- Method in class javax.swing.
ScrollPaneLayout
This method is invoked after the ScrollPaneLayout is set as the
 LayoutManager of a
JScrollPane
.
SYNTAX_ERR
- Static variable in exception class org.w3c.dom.
DOMException
If an invalid or illegal string is specified.
Synth
- Search tag in package javax.swing.plaf.synth
Section
SynthButtonUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JButton
.
SynthButtonUI()
- Constructor for class javax.swing.plaf.synth.
SynthButtonUI
Constructs a
SynthButtonUI
.
SynthCheckBoxMenuItemUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JCheckBoxMenuItem
.
SynthCheckBoxMenuItemUI()
- Constructor for class javax.swing.plaf.synth.
SynthCheckBoxMenuItemUI
Constructs a
SynthCheckBoxMenuItemUI
.
SynthCheckBoxUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JCheckBox
.
SynthCheckBoxUI()
- Constructor for class javax.swing.plaf.synth.
SynthCheckBoxUI
Constructs a
SynthCheckBoxUI
.
SynthColorChooserUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JColorChooser
.
SynthColorChooserUI()
- Constructor for class javax.swing.plaf.synth.
SynthColorChooserUI
Constructs a
SynthColorChooserUI
.
SynthComboBoxUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JComboBox
.
SynthComboBoxUI()
- Constructor for class javax.swing.plaf.synth.
SynthComboBoxUI
Constructs a
SynthComboBoxUI
.
SynthConstants
- Interface in
javax.swing.plaf.synth
Constants used by Synth.
SynthContext
- Class in
javax.swing.plaf.synth
An immutable transient object containing contextual information about
 a
Region
.
SynthContext(JComponent, Region, SynthStyle, int)
- Constructor for class javax.swing.plaf.synth.
SynthContext
Creates a SynthContext with the specified values.
SynthDesktopIconUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for a minimized internal frame on a desktop.
SynthDesktopIconUI()
- Constructor for class javax.swing.plaf.synth.
SynthDesktopIconUI
Constructs a
SynthDesktopIconUI
.
SynthDesktopPaneUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JDesktopPane
.
SynthDesktopPaneUI()
- Constructor for class javax.swing.plaf.synth.
SynthDesktopPaneUI
Constructs a
SynthDesktopPaneUI
.
SynthEditorPaneUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JEditorPane
.
SynthEditorPaneUI()
- Constructor for class javax.swing.plaf.synth.
SynthEditorPaneUI
Constructs a
SynthEditorPaneUI
.
synthesizedElement(Element)
- Method in class javax.swing.text.html.
HTMLWriter
Returns
true
if the element is a
 synthesized element.
Synthesizer
- Interface in
javax.sound.midi
A
Synthesizer
generates sound.
SYNTHETIC
- Enum constant in enum class java.lang.module.
ModuleDescriptor.Exports.Modifier
The export was not explicitly or implicitly declared in the
 source of the module declaration.
SYNTHETIC
- Enum constant in enum class java.lang.module.
ModuleDescriptor.Modifier
The module was not explicitly or implicitly declared.
SYNTHETIC
- Enum constant in enum class java.lang.module.
ModuleDescriptor.Opens.Modifier
The open package was not explicitly or implicitly declared in
 the source of the module declaration.
SYNTHETIC
- Enum constant in enum class java.lang.module.
ModuleDescriptor.Requires.Modifier
The dependence was not explicitly or implicitly declared in the
 source of the module declaration.
SYNTHETIC
- Enum constant in enum class java.lang.reflect.
AccessFlag
The access flag
ACC_SYNTHETIC
with a mask value of
0x1000
.
SYNTHETIC
- Enum constant in enum class javax.lang.model.util.
Elements.Origin
A synthetic construct is one that is neither implicitly nor
 explicitly declared in the source code.
SynthFormattedTextFieldUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JFormattedTextField
.
SynthFormattedTextFieldUI()
- Constructor for class javax.swing.plaf.synth.
SynthFormattedTextFieldUI
Constructs a
SynthFormattedTextFieldUI
.
SynthGraphicsUtils
- Class in
javax.swing.plaf.synth
Wrapper for primitive graphics calls.
SynthGraphicsUtils()
- Constructor for class javax.swing.plaf.synth.
SynthGraphicsUtils
Creates a
SynthGraphicsUtils
.
SynthIcon
- Interface in
javax.swing.plaf.synth
An icon that is passed a
SynthContext
.
SynthInternalFrameUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JInternalFrame
.
SynthInternalFrameUI(JInternalFrame)
- Constructor for class javax.swing.plaf.synth.
SynthInternalFrameUI
Constructs a
SynthInternalFrameUI
.
SynthLabelUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JLabel
.
SynthLabelUI()
- Constructor for class javax.swing.plaf.synth.
SynthLabelUI
Constructs a
SynthLabelUI
.
SynthListUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JList
.
SynthListUI()
- Constructor for class javax.swing.plaf.synth.
SynthListUI
Constructs a
SynthListUI
.
SynthLookAndFeel
- Class in
javax.swing.plaf.synth
SynthLookAndFeel provides the basis for creating a customized look and
 feel.
SynthLookAndFeel()
- Constructor for class javax.swing.plaf.synth.
SynthLookAndFeel
Creates a SynthLookAndFeel.
SynthMenuBarUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JMenuBar
.
SynthMenuBarUI()
- Constructor for class javax.swing.plaf.synth.
SynthMenuBarUI
Constructs a
SynthMenuBarUI
.
SynthMenuItemUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JMenuItem
.
SynthMenuItemUI()
- Constructor for class javax.swing.plaf.synth.
SynthMenuItemUI
Constructs a
SynthMenuItemUI
.
SynthMenuUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JMenu
.
SynthMenuUI()
- Constructor for class javax.swing.plaf.synth.
SynthMenuUI
Constructs a
SynthMenuUI
.
SynthOptionPaneUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JOptionPane
.
SynthOptionPaneUI()
- Constructor for class javax.swing.plaf.synth.
SynthOptionPaneUI
Constructs a
SynthOptionPaneUI
.
SynthPainter
- Class in
javax.swing.plaf.synth
SynthPainter
is used for painting portions of
JComponent
s.
SynthPainter()
- Constructor for class javax.swing.plaf.synth.
SynthPainter
Constructor for subclasses to call.
SynthPanelUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JPanel
.
SynthPanelUI()
- Constructor for class javax.swing.plaf.synth.
SynthPanelUI
Constructs a
SynthPanelUI
.
SynthPasswordFieldUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JPasswordField
.
SynthPasswordFieldUI()
- Constructor for class javax.swing.plaf.synth.
SynthPasswordFieldUI
Constructs a
SynthPasswordFieldUI
.
SynthPopupMenuUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JPopupMenu
.
SynthPopupMenuUI()
- Constructor for class javax.swing.plaf.synth.
SynthPopupMenuUI
Constructs a
SynthPopupMenuUI
.
SynthProgressBarUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JProgressBar
.
SynthProgressBarUI()
- Constructor for class javax.swing.plaf.synth.
SynthProgressBarUI
Constructs a
SynthProgressBarUI
.
SynthRadioButtonMenuItemUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JRadioButtonMenuItem
.
SynthRadioButtonMenuItemUI()
- Constructor for class javax.swing.plaf.synth.
SynthRadioButtonMenuItemUI
Constructs a
SynthRadioButtonMenuItemUI
.
SynthRadioButtonUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JRadioButton
.
SynthRadioButtonUI()
- Constructor for class javax.swing.plaf.synth.
SynthRadioButtonUI
Constructs a
SynthRadioButtonUI
.
SynthRootPaneUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JRootPane
.
SynthRootPaneUI()
- Constructor for class javax.swing.plaf.synth.
SynthRootPaneUI
Constructs a
SynthRootPaneUI
.
SynthScrollBarUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JScrollBar
.
SynthScrollBarUI()
- Constructor for class javax.swing.plaf.synth.
SynthScrollBarUI
Constructs a
SynthScrollBarUI
.
SynthScrollPaneUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JScrollPane
.
SynthScrollPaneUI()
- Constructor for class javax.swing.plaf.synth.
SynthScrollPaneUI
Constructs a
SynthScrollPaneUI
.
SynthSeparatorUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JSeparator
.
SynthSeparatorUI()
- Constructor for class javax.swing.plaf.synth.
SynthSeparatorUI
Constructs a
SynthSeparatorUI
.
SynthSliderUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JSlider
.
SynthSliderUI(JSlider)
- Constructor for class javax.swing.plaf.synth.
SynthSliderUI
Constructs a
SynthSliderUI
.
SynthSpinnerUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JSpinner
.
SynthSpinnerUI()
- Constructor for class javax.swing.plaf.synth.
SynthSpinnerUI
Constructs a
SynthSpinnerUI
.
SynthSplitPaneUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JSplitPane
.
SynthSplitPaneUI()
- Constructor for class javax.swing.plaf.synth.
SynthSplitPaneUI
Constructs a
SynthSplitPaneUI
.
SynthStyle
- Class in
javax.swing.plaf.synth
SynthStyle
is a set of style properties.
SynthStyle()
- Constructor for class javax.swing.plaf.synth.
SynthStyle
Constructs a SynthStyle.
SynthStyleFactory
- Class in
javax.swing.plaf.synth
Factory used for obtaining
SynthStyle
s.
SynthStyleFactory()
- Constructor for class javax.swing.plaf.synth.
SynthStyleFactory
Creates a
SynthStyleFactory
.
SynthTabbedPaneUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JTabbedPane
.
SynthTabbedPaneUI()
- Constructor for class javax.swing.plaf.synth.
SynthTabbedPaneUI
Constructs a
SynthTabbedPaneUI
.
SynthTableHeaderUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JTableHeader
.
SynthTableHeaderUI()
- Constructor for class javax.swing.plaf.synth.
SynthTableHeaderUI
Constructs a
SynthTableHeaderUI
.
SynthTableUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JTable
.
SynthTableUI()
- Constructor for class javax.swing.plaf.synth.
SynthTableUI
Constructs a
SynthTableUI
.
SynthTextAreaUI
- Class in
javax.swing.plaf.synth
Provides the look and feel for a plain text editor in the
 Synth look and feel.
SynthTextAreaUI()
- Constructor for class javax.swing.plaf.synth.
SynthTextAreaUI
Constructs a
SynthTextAreaUI
.
SynthTextFieldUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JTextField
.
SynthTextFieldUI()
- Constructor for class javax.swing.plaf.synth.
SynthTextFieldUI
Constructs a
SynthTextFieldUI
.
SynthTextPaneUI
- Class in
javax.swing.plaf.synth
Provides the look and feel for a styled text editor in the
 Synth look and feel.
SynthTextPaneUI()
- Constructor for class javax.swing.plaf.synth.
SynthTextPaneUI
Constructs a
SynthTextPaneUI
.
SynthToggleButtonUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JToggleButton
.
SynthToggleButtonUI()
- Constructor for class javax.swing.plaf.synth.
SynthToggleButtonUI
Constructs a
SynthToggleButtonUI
.
SynthToolBarUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JToolBar
.
SynthToolBarUI()
- Constructor for class javax.swing.plaf.synth.
SynthToolBarUI
Constructs a
SynthToolBarUI
.
SynthToolTipUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JToolTip
.
SynthToolTipUI()
- Constructor for class javax.swing.plaf.synth.
SynthToolTipUI
Constructs a
SynthToolTipUI
.
SynthTreeUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JTree
.
SynthTreeUI()
- Constructor for class javax.swing.plaf.synth.
SynthTreeUI
Constructs a
SynthTreeUI
.
SynthUI
- Interface in
javax.swing.plaf.synth
SynthUI is used to fetch the SynthContext for a particular Component.
SynthViewportUI
- Class in
javax.swing.plaf.synth
Provides the Synth L&F UI delegate for
JViewport
.
SynthViewportUI()
- Constructor for class javax.swing.plaf.synth.
SynthViewportUI
Constructs a
SynthViewportUI
.
SYRIAC
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Syriac".
SYRIAC
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Syriac" Unicode character block.
SYRIAC_SUPPLEMENT
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Syriac Supplement" Unicode
 character block.
SysexMessage
- Class in
javax.sound.midi
A
SysexMessage
object represents a MIDI system exclusive message.
SysexMessage()
- Constructor for class javax.sound.midi.
SysexMessage
Constructs a new
SysexMessage
.
SysexMessage(byte[])
- Constructor for class javax.sound.midi.
SysexMessage
Constructs a new
SysexMessage
.
SysexMessage(byte[], int)
- Constructor for class javax.sound.midi.
SysexMessage
Constructs a new
SysexMessage
and sets the data for the message.
SysexMessage(int, byte[], int)
- Constructor for class javax.sound.midi.
SysexMessage
Constructs a new
SysexMessage
and sets the data for the message.
system()
- Static method in interface java.time.
InstantSource
Obtains a source that returns the current instant using the best available
 system clock.
system(ZoneId)
- Static method in class java.time.
Clock
Obtains a clock that returns the current instant using the best available
 system clock.
System
- Class in
java.lang
The
System
class contains several useful class fields
 and methods.
SYSTEM
- Static variable in interface javax.swing.text.html.parser.
DTDConstants
The DTD constant corresponds to SYSTEM
SYSTEM_EXCLUSIVE
- Static variable in class javax.sound.midi.
SysexMessage
Status byte for System Exclusive message (0xF0, or 240).
SYSTEM_MODULES
- Enum constant in enum class javax.tools.
StandardLocation
Location to search for system modules.
SYSTEM_PROPERTY
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
SystemPropertyTree
representing an
@systemProperty
tag.
SYSTEM_RESET
- Static variable in class javax.sound.midi.
ShortMessage
Status byte for System Reset message (0xFF, or 255).
System.Logger
- Interface in
java.lang
System.Logger
instances log messages that will be
 routed to the underlying logging framework the
LoggerFinder
uses.
System.Logger.Level
- Enum Class in
java.lang
System
loggers
levels.
System.LoggerFinder
- Class in
java.lang
The
LoggerFinder
service is responsible for creating, managing,
 and configuring loggers to the underlying framework it uses.
systemAboutToSleep(SystemSleepEvent)
- Method in interface java.awt.desktop.
SystemSleepListener
Called when the system is about to sleep.
systemAwoke(SystemSleepEvent)
- Method in interface java.awt.desktop.
SystemSleepListener
Called after the system has awoken from sleeping.
SystemColor
- Class in
java.awt
A class to encapsulate symbolic colors representing the color of
 native GUI objects on a system.
systemDefault()
- Static method in class java.time.
ZoneId
Gets the system default time-zone.
systemDefaultZone()
- Static method in class java.time.
Clock
Obtains a clock that returns the current instant using the best available
 system clock, converting to date and time using the default time-zone.
SystemEventListener
- Interface in
java.awt.desktop
Common interface for all event listener sub-types.
SystemFlavorMap
- Class in
java.awt.datatransfer
The SystemFlavorMap is a configurable map between "natives" (Strings), which
 correspond to platform-specific data formats, and "flavors" (DataFlavors),
 which correspond to platform-independent MIME types.
SystemMenuBar()
- Constructor for class javax.swing.plaf.basic.
BasicInternalFrameTitlePane.SystemMenuBar
Constructs a
SystemMenuBar
.
systemNodeForPackage(Class<?>)
- Static method in class java.util.prefs.
Preferences
Returns the preference node from the system preference tree that is
 associated (by convention) with the specified class's package.
System Properties
- Search tag in module java.xml
Section
SystemPropertyTree
- Interface in
com.sun.source.doctree
A tree node for an
@systemProperty
inline tag.
systemRoot()
- Static method in class java.util.prefs.
Preferences
Returns the root preference node for the system.
systemRoot()
- Method in interface java.util.prefs.
PreferencesFactory
Returns the system root preference node.
SystemSleepEvent
- Class in
java.awt.desktop
Event sent when the system enters and exits power save sleep.
SystemSleepEvent()
- Constructor for class java.awt.desktop.
SystemSleepEvent
Constructs a
SystemSleepEvent
.
SystemSleepListener
- Interface in
java.awt.desktop
Implementors receive notification as the system is entering sleep, and after
 the system wakes.
SystemTray
- Class in
java.awt
The
SystemTray
class represents the system tray for a
 desktop.
systemUTC()
- Static method in class java.time.
Clock
Obtains a clock that returns the current instant using the best available
 system clock, converting to date and time using the UTC time-zone.
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.