V-Index (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Index
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
V
3.0 Violations and Synchronization Issues
- Search tag in class javax.sql.rowset.spi.SyncProvider
Section
VAI
- Enum constant in enum class java.awt.font.
NumericShaper.Range
The Vai range with the Vai digits.
VAI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Vai".
VAI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Vai" Unicode character block.
valid()
- Method in class java.io.
FileDescriptor
Tests if this file descriptor object is valid.
VALID
- Enum constant in enum class jdk.jshell.
Snippet.Status
The snippet is a valid snippet
 (in the context of current
JShell
state).
validate()
- Method in class java.awt.
Component
Validates this component.
validate()
- Method in class java.awt.
Container
Validates this container and all of its subcomponents.
validate()
- Method in class javax.swing.
DefaultListCellRenderer
Overridden for performance reasons.
validate()
- Method in class javax.swing.table.
DefaultTableCellRenderer
Overridden for performance reasons.
validate()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Overridden for performance reasons.
validate(long)
- Method in class java.util.concurrent.locks.
StampedLock
Returns true if the lock has not been exclusively acquired
 since issuance of the given stamp.
validate(GraphicsConfiguration)
- Method in class java.awt.image.
VolatileImage
Attempts to restore the drawing surface of the image if the surface
 had been lost since the last
validate
call.
validate(CertPath, CertPathParameters)
- Method in class java.security.cert.
CertPathValidator
Validates the specified certification path using the specified
 algorithm parameter set.
validate(XMLValidateContext)
- Method in interface javax.xml.crypto.dsig.
Reference
Validates this reference.
validate(XMLValidateContext)
- Method in interface javax.xml.crypto.dsig.
XMLSignature.SignatureValue
Validates the signature value.
validate(XMLValidateContext)
- Method in interface javax.xml.crypto.dsig.
XMLSignature
Validates the signature according to the
core validation processing rules
.
validate(Source)
- Method in class javax.xml.validation.
Validator
Validates the specified input.
validate(Source, Result)
- Method in class javax.xml.validation.
Validator
Validates the specified input and send the augmented validation
 result to the specified output.
validatedContents
- Variable in class java.awt.
Component.BltBufferStrategy
Whether or not the drawing buffer has been recently restored from
 a lost state.
validatedContents
- Variable in class java.awt.
Component.FlipBufferStrategy
Whether or not the drawing buffer has been recently restored from
 a lost state.
validateFileCache()
- Method in class javax.swing.plaf.basic.
BasicDirectoryModel
Validates content of file cache.
validateInvalidComponents()
- Method in class javax.swing.
RepaintManager
Validate all of the components that have been marked invalid.
validateObject()
- Method in interface java.io.
ObjectInputValidation
Validates the object.
validatePage(PageFormat)
- Method in class java.awt.print.
PrinterJob
Returns the clone of
page
with its settings
 adjusted to be compatible with the current printer of this
PrinterJob
.
validatePendingAdd(Object)
- Method in class java.beans.beancontext.
BeanContextSupport
Subclasses of this class may override, or envelope, this method to
 add validation behavior for the BeanContext to examine child objects
 immediately prior to their being added to the BeanContext.
validatePendingRemove(Object)
- Method in class java.beans.beancontext.
BeanContextSupport
Subclasses of this class may override, or envelope, this method to
 add validation behavior for the BeanContext to examine child objects
 immediately prior to their being removed from the BeanContext.
validatePendingSetBeanContext(BeanContext)
- Method in class java.beans.beancontext.
BeanContextChildSupport
Called from setBeanContext to validate (or otherwise) the
 pending change in the nesting BeanContext property value.
validateTree()
- Method in class java.awt.
Container
Recursively descends the container tree and recomputes the
 layout for any subtrees marked as needing it (those marked as
 invalid).
VALIDATION_ERR
- Static variable in exception class org.w3c.dom.
DOMException
If a call to a method such as
insertBefore
or
removeChild
would make the
Node
invalid
 with respect to "partial validity", this exception would be raised
 and the operation would not be done.
Validator
- Class in
javax.xml.validation
A processor that checks an XML document against
Schema
.
Validator()
- Constructor for class javax.xml.validation.
Validator
Constructor for derived classes.
ValidatorHandler
- Class in
javax.xml.validation
Streaming validator that works on SAX stream.
ValidatorHandler()
- Constructor for class javax.xml.validation.
ValidatorHandler
Constructor for derived classes.
validCachedPreferredSize
- Variable in class javax.swing.plaf.basic.
BasicTreeUI
Is the preferredSize valid?
validOps()
- Method in class com.sun.nio.sctp.
SctpChannel
Returns an operation set identifying this channel's supported operations.
validOps()
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Returns an operation set identifying this channel's supported operations.
validOps()
- Method in class com.sun.nio.sctp.
SctpServerChannel
Returns an operation set identifying this channel's supported
 operations.
validOps()
- Method in class java.nio.channels.
DatagramChannel
Returns an operation set identifying this channel's supported
 operations.
validOps()
- Method in class java.nio.channels.
Pipe.SinkChannel
Returns an operation set identifying this channel's supported
 operations.
validOps()
- Method in class java.nio.channels.
Pipe.SourceChannel
Returns an operation set identifying this channel's supported
 operations.
validOps()
- Method in class java.nio.channels.
SelectableChannel
Returns an
operation set
identifying this channel's supported operations.
validOps()
- Method in class java.nio.channels.
ServerSocketChannel
Returns an operation set identifying this channel's supported
 operations.
validOps()
- Method in class java.nio.channels.
SocketChannel
Returns an operation set identifying this channel's supported
 operations.
VALIGN
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "valign"
value
- Variable in class java.sql.
DriverPropertyInfo
The
value
field specifies the current value of
 the property, based on a combination of the information
 supplied to the method
getPropertyInfo
, the
 Java environment, and the driver-supplied default values.
value
- Variable in class javax.naming.ldap.
BasicControl
The control's ASN.1 BER encoded value.
value
- Variable in class javax.swing.
DefaultCellEditor.EditorDelegate
The value of this cell.
value
- Variable in class javax.swing.
JOptionPane
Currently selected value, will be a valid option, or
UNINITIALIZED_VALUE
or
null
.
value
- Variable in class javax.swing.text.html.parser.
AttributeList
The default attribute value
value()
- Method in interface com.sun.jdi.
BooleanValue
Returns this BooleanValue as a boolean.
value()
- Method in interface com.sun.jdi.
ByteValue
Returns this ByteValue as a
byte
.
value()
- Method in interface com.sun.jdi.
CharValue
Returns this CharValue as a
char
.
value()
- Method in interface com.sun.jdi.connect.
Connector.Argument
Returns the current value of the argument.
value()
- Method in interface com.sun.jdi.
DoubleValue
Returns this DoubleValue as a
double
.
value()
- Method in interface com.sun.jdi.
FloatValue
Returns this FloatValue as a float.
value()
- Method in interface com.sun.jdi.
IntegerValue
Returns this IntegerValue as an int.
value()
- Method in interface com.sun.jdi.
LongValue
Returns this LongValue as a long.
value()
- Method in interface com.sun.jdi.
ShortValue
Returns this ShortValue as a short.
value()
- Method in interface com.sun.jdi.
StringReference
Returns the StringReference as a String.
value()
- Element in annotation interface java.beans.
ConstructorProperties
The getter names.
value()
- Element in annotation interface java.beans.
Transient
Returns whether or not the
Introspector
should
 construct artifacts for the annotated method.
value()
- Element in annotation interface java.lang.annotation.
Repeatable
Indicates the
containing annotation interface
for the
 repeatable annotation interface.
value()
- Element in annotation interface java.lang.annotation.
Retention
Returns the retention policy.
value()
- Element in annotation interface java.lang.annotation.
Target
Returns an array of the kinds of elements an annotation interface
 can be applied to.
value()
- Element in annotation interface java.lang.
SuppressWarnings
The set of warnings that are to be suppressed by the compiler in the
 annotated element.
value()
- Method in interface java.nio.file.attribute.
FileAttribute
Returns the attribute value.
value()
- Element in annotation interface javax.annotation.processing.
Generated
The value element MUST have the name of the code generator.
value()
- Element in annotation interface javax.annotation.processing.
SupportedAnnotationTypes
Returns the names of the supported annotation interfaces.
value()
- Element in annotation interface javax.annotation.processing.
SupportedOptions
Returns the supported options.
value()
- Element in annotation interface javax.annotation.processing.
SupportedSourceVersion
Returns the latest supported source version.
value()
- Element in annotation interface javax.management.
ConstructorParameters
The getter names.
value()
- Element in annotation interface javax.management.
DescriptorKey
Returns the descriptor key.
value()
- Element in annotation interface javax.management.
MXBean
True if the annotated interface is an MXBean interface.
value()
- Element in annotation interface javax.swing.
SwingContainer
The value that indicates whether the annotated class can be used
 as a container for other Swing components or not.
value()
- Method in interface javax.xml.xpath.
XPathEvaluationResult
Returns the value of the result as the type
<T>
specified for the class.
value()
- Element in annotation interface jdk.jfr.
Category
Returns the category names for this annotation, starting with the root.
value()
- Element in annotation interface jdk.jfr.
DataAmount
Returns the unit for the data amount, by default bytes.
value()
- Element in annotation interface jdk.jfr.
Description
Returns a sentence or two that describes the annotated element.
value()
- Element in annotation interface jdk.jfr.
Enabled
Returns
true
if by default the event should be enabled,
false
otherwise.
value()
- Element in annotation interface jdk.jfr.
Label
Returns a human-readable name for the annotated element.
value()
- Element in annotation interface jdk.jfr.
Name
Returns the name.
value()
- Element in annotation interface jdk.jfr.
Period
Returns the default setting value for a periodic setting.
value()
- Element in annotation interface jdk.jfr.
Registered
Returns
true
if the event is to be registered when the event class is
 first used,
false
otherwise.
value()
- Element in annotation interface jdk.jfr.
StackTrace
Returns if the stack trace from the
Event#commit()
method should be recorded.
value()
- Element in annotation interface jdk.jfr.
Threshold
The threshold (for example,
"20 ms"
).
value()
- Element in annotation interface jdk.jfr.
Timespan
Returns the unit of measure for the time span.
value()
- Element in annotation interface jdk.jfr.
Timestamp
Unit for the time stamp.
value()
- Method in class jdk.jshell.
SnippetEvent
The result value of successful run.
value(boolean)
- Static method in class javax.management.
Query
Returns a boolean value expression that can be used in any Query call
 that expects a ValueExp.
value(double)
- Static method in class javax.management.
Query
Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.
value(float)
- Static method in class javax.management.
Query
Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.
value(int)
- Static method in class javax.management.
Query
Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.
value(long)
- Static method in class javax.management.
Query
Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.
value(Number)
- Static method in class javax.management.
Query
Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.
value(String)
- Static method in class javax.management.
Query
Returns a new string expression.
Value
- Interface in
com.sun.jdi
The mirror for a value in the target VM.
VALUE
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
ValueTree
representing an
@value
tag.
VALUE
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "value"
VALUE_ALPHA_INTERPOLATION_DEFAULT
- Static variable in class java.awt.
RenderingHints
Alpha interpolation hint value -- alpha blending algorithms
 are chosen by the implementation for a good tradeoff of
 performance vs. quality.
VALUE_ALPHA_INTERPOLATION_QUALITY
- Static variable in class java.awt.
RenderingHints
Alpha interpolation hint value -- alpha blending algorithms
 are chosen with a preference for precision and visual quality.
VALUE_ALPHA_INTERPOLATION_SPEED
- Static variable in class java.awt.
RenderingHints
Alpha interpolation hint value -- alpha blending algorithms
 are chosen with a preference for calculation speed.
VALUE_ANTIALIAS_DEFAULT
- Static variable in class java.awt.
RenderingHints
Antialiasing hint value -- rendering is done with a default
 antialiasing mode chosen by the implementation.
VALUE_ANTIALIAS_OFF
- Static variable in class java.awt.
RenderingHints
Antialiasing hint value -- rendering is done without antialiasing.
VALUE_ANTIALIAS_ON
- Static variable in class java.awt.
RenderingHints
Antialiasing hint value -- rendering is done with antialiasing.
VALUE_ARBITRARY
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A constant returned by
getAttributeValueType
and
getObjectValueType
to indicate that the attribute
 or user object may be set a single, arbitrary value.
VALUE_COLOR_RENDER_DEFAULT
- Static variable in class java.awt.
RenderingHints
Color rendering hint value -- perform color conversion
 calculations as chosen by the implementation to represent
 the best available tradeoff between performance and
 accuracy.
VALUE_COLOR_RENDER_QUALITY
- Static variable in class java.awt.
RenderingHints
Color rendering hint value -- perform the color conversion
 calculations with the highest accuracy and visual quality.
VALUE_COLOR_RENDER_SPEED
- Static variable in class java.awt.
RenderingHints
Color rendering hint value -- perform the fastest color
 conversion to the format of the output device.
VALUE_DITHER_DEFAULT
- Static variable in class java.awt.
RenderingHints
Dithering hint value -- use a default for dithering chosen by
 the implementation.
VALUE_DITHER_DISABLE
- Static variable in class java.awt.
RenderingHints
Dithering hint value -- do not dither when rendering geometry.
VALUE_DITHER_ENABLE
- Static variable in class java.awt.
RenderingHints
Dithering hint value -- dither when rendering geometry, if needed.
VALUE_ENUMERATION
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A constant returned by
getAttributeValueType
and
getObjectValueType
to indicate that the attribute
 or user object may be set one of a number of enumerated values.
VALUE_FRACTIONALMETRICS_DEFAULT
- Static variable in class java.awt.
RenderingHints
Font fractional metrics hint value -- character glyphs are
 positioned with accuracy chosen by the implementation.
VALUE_FRACTIONALMETRICS_OFF
- Static variable in class java.awt.
RenderingHints
Font fractional metrics hint value -- character glyphs are
 positioned with advance widths rounded to pixel boundaries.
VALUE_FRACTIONALMETRICS_ON
- Static variable in class java.awt.
RenderingHints
Font fractional metrics hint value -- character glyphs are
 positioned with sub-pixel accuracy.
VALUE_INTERPOLATION_BICUBIC
- Static variable in class java.awt.
RenderingHints
Interpolation hint value -- the color samples of 9 nearby
 integer coordinate samples in the image are interpolated using
 a cubic function in both
X
and
Y
to produce
 a color sample.
VALUE_INTERPOLATION_BILINEAR
- Static variable in class java.awt.
RenderingHints
Interpolation hint value -- the color samples of the 4 nearest
 neighboring integer coordinate samples in the image are
 interpolated linearly to produce a color sample.
VALUE_INTERPOLATION_NEAREST_NEIGHBOR
- Static variable in class java.awt.
RenderingHints
Interpolation hint value -- the color sample of the nearest
 neighboring integer coordinate sample in the image is used.
VALUE_LIST
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A constant returned by
getAttributeValueType
and
getObjectValueType
to indicate that the attribute
 or user object may be set to a list or array of values.
VALUE_NONE
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A constant returned by
getObjectValueType
to
 indicate the absence of a user object.
VALUE_PROPERTY
- Static variable in class javax.swing.
JOptionPane
Bound property name for
value
.
VALUE_RANGE
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A constant returned by
getAttributeValueType
and
getObjectValueType
to indicate that the attribute
 or user object may be set a range of values.
VALUE_RANGE_MAX_INCLUSIVE
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A constant returned by
getAttributeValueType
and
getObjectValueType
to indicate that the attribute
 or user object may be set to a range of values.
VALUE_RANGE_MAX_INCLUSIVE_MASK
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A value that may be or'ed with
VALUE_RANGE
to
 obtain
VALUE_RANGE_MAX_INCLUSIVE
, and with
VALUE_RANGE_MIN_INCLUSIVE
to obtain
VALUE_RANGE_MIN_MAX_INCLUSIVE
.
VALUE_RANGE_MIN_INCLUSIVE
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A constant returned by
getAttributeValueType
and
getObjectValueType
to indicate that the attribute
 or user object may be set to a range of values.
VALUE_RANGE_MIN_INCLUSIVE_MASK
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A value that may be or'ed with
VALUE_RANGE
to
 obtain
VALUE_RANGE_MIN_INCLUSIVE
, and with
VALUE_RANGE_MAX_INCLUSIVE
to obtain
VALUE_RANGE_MIN_MAX_INCLUSIVE
.
VALUE_RANGE_MIN_MAX_INCLUSIVE
- Static variable in interface javax.imageio.metadata.
IIOMetadataFormat
A constant returned by
getAttributeValueType
and
getObjectValueType
to indicate that the attribute
 or user object may be set a range of values.
VALUE_RENDER_DEFAULT
- Static variable in class java.awt.
RenderingHints
Rendering hint value -- rendering algorithms are chosen
 by the implementation for a good tradeoff of performance
 vs. quality.
VALUE_RENDER_QUALITY
- Static variable in class java.awt.
RenderingHints
Rendering hint value -- rendering algorithms are chosen
 with a preference for output quality.
VALUE_RENDER_SPEED
- Static variable in class java.awt.
RenderingHints
Rendering hint value -- rendering algorithms are chosen
 with a preference for output speed.
VALUE_RESOLUTION_VARIANT_BASE
- Static variable in class java.awt.
RenderingHints
Image resolution variant hint value -- the standard resolution of an image
 is always used.
VALUE_RESOLUTION_VARIANT_DEFAULT
- Static variable in class java.awt.
RenderingHints
Image resolution variant hint value -- an image resolution variant is
 chosen based on a default heuristic which may depend on the policies
 of the platform
VALUE_RESOLUTION_VARIANT_DPI_FIT
- Static variable in class java.awt.
RenderingHints
Image resolution variant hint value -- an image resolution variant is
 chosen based only on the DPI of the screen.
VALUE_RESOLUTION_VARIANT_SIZE_FIT
- Static variable in class java.awt.
RenderingHints
Image resolution variant hint value -- an image resolution variant is
 chosen based on the DPI of the screen and the transform in the Graphics2D
 context.
VALUE_STROKE_DEFAULT
- Static variable in class java.awt.
RenderingHints
Stroke normalization control hint value -- geometry may be
 modified or left pure depending on the tradeoffs in a given
 implementation.
VALUE_STROKE_NORMALIZE
- Static variable in class java.awt.
RenderingHints
Stroke normalization control hint value -- geometry should
 be normalized to improve uniformity or spacing of lines and
 overall aesthetics.
VALUE_STROKE_PURE
- Static variable in class java.awt.
RenderingHints
Stroke normalization control hint value -- geometry should
 be left unmodified and rendered with sub-pixel accuracy.
VALUE_TEXT_ANTIALIAS_DEFAULT
- Static variable in class java.awt.
RenderingHints
Text antialiasing hint value -- text rendering is done according
 to the
RenderingHints.KEY_ANTIALIASING
hint or a default chosen by the
 implementation.
VALUE_TEXT_ANTIALIAS_GASP
- Static variable in class java.awt.
RenderingHints
Text antialiasing hint value -- text rendering is requested to
 use information in the font resource which specifies for each point
 size whether to apply
RenderingHints.VALUE_TEXT_ANTIALIAS_ON
or
RenderingHints.VALUE_TEXT_ANTIALIAS_OFF
.
VALUE_TEXT_ANTIALIAS_LCD_HBGR
- Static variable in class java.awt.
RenderingHints
Text antialiasing hint value -- request that text be displayed
 optimised for an LCD display with subpixels in order from display
 left to right of B,G,R such that the horizontal subpixel resolution
 is three times that of the full pixel horizontal resolution (HBGR).
VALUE_TEXT_ANTIALIAS_LCD_HRGB
- Static variable in class java.awt.
RenderingHints
Text antialiasing hint value -- request that text be displayed
 optimised for an LCD display with subpixels in order from display
 left to right of R,G,B such that the horizontal subpixel resolution
 is three times that of the full pixel horizontal resolution (HRGB).
VALUE_TEXT_ANTIALIAS_LCD_VBGR
- Static variable in class java.awt.
RenderingHints
Text antialiasing hint value -- request that text be displayed
 optimised for an LCD display with subpixel organisation from display
 top to bottom of B,G,R such that the vertical subpixel resolution is
 three times that of the full pixel vertical resolution (VBGR).
VALUE_TEXT_ANTIALIAS_LCD_VRGB
- Static variable in class java.awt.
RenderingHints
Text antialiasing hint value -- request that text be displayed
 optimised for an LCD display with subpixel organisation from display
 top to bottom of R,G,B such that the vertical subpixel resolution is
 three times that of the full pixel vertical resolution (VRGB).
VALUE_TEXT_ANTIALIAS_OFF
- Static variable in class java.awt.
RenderingHints
Text antialiasing hint value -- text rendering is done without
 any form of antialiasing.
VALUE_TEXT_ANTIALIAS_ON
- Static variable in class java.awt.
RenderingHints
Text antialiasing hint value -- text rendering is done with
 some form of antialiasing.
Value:
- Search tag in class javax.xml.XMLConstants
Section
Value-based Classes
- Search tag in package java.lang
Value-based classes and identity operations
- Search tag in class jdk.incubator.vector.Vector
Section
Value-based classes and identity operations
- Search tag in class jdk.incubator.vector.VectorMask
Section
Value-based classes and identity operations
- Search tag in class jdk.incubator.vector.VectorShuffle
Section
valueBound(SSLSessionBindingEvent)
- Method in interface javax.net.ssl.
SSLSessionBindingListener
This is called to notify the listener that it is being bound into
 an SSLSession.
valueChanged(ListSelectionEvent)
- Method in interface javax.swing.event.
ListSelectionListener
Called whenever the value of the selection changes.
valueChanged(ListSelectionEvent)
- Method in class javax.swing.
JList.AccessibleJList
List Selection Listener value change method.
valueChanged(ListSelectionEvent)
- Method in class javax.swing.
JTable.AccessibleJTable
Track changes to table cell selections
valueChanged(ListSelectionEvent)
- Method in class javax.swing.
JTable
Invoked when the row selection changes -- repaints to show the new
 selection.
valueChanged(ListSelectionEvent)
- Method in class javax.swing.plaf.basic.
BasicComboPopup.ListSelectionHandler
valueChanged(ListSelectionEvent)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI.SelectionListener
Called whenever the value of the selection changes.
valueChanged(ListSelectionEvent)
- Method in class javax.swing.plaf.basic.
BasicListUI.ListSelectionHandler
valueChanged(ListSelectionEvent)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Invokes when
ListSelectionEvent
occurs.
valueChanged(ListSelectionEvent)
- Method in class javax.swing.table.
DefaultTableColumnModel
A
ListSelectionListener
that forwards
ListSelectionEvents
when there is a column
 selection change.
valueChanged(TreeSelectionEvent)
- Method in interface javax.swing.event.
TreeSelectionListener
Called whenever the value of the selection changes.
valueChanged(TreeSelectionEvent)
- Method in class javax.swing.
JTree.AccessibleJTree
Tree Selection Listener value change method.
valueChanged(TreeSelectionEvent)
- Method in class javax.swing.
JTree.TreeSelectionRedirector
Invoked by the
TreeSelectionModel
when the
 selection changes.
valueChanged(TreeSelectionEvent)
- Method in class javax.swing.plaf.basic.
BasicTreeUI.TreeSelectionHandler
Messaged when the selection changes in the tree we're displaying
 for.
valueChanged(TreeSelectionEvent)
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Resets
lastPath
.
valueCurrent()
- Method in interface com.sun.jdi.event.
WatchpointEvent
Current value of the field.
ValueDescriptor
- Class in
jdk.jfr
Describes the event fields and annotation elements.
ValueDescriptor(Class<?>, String)
- Constructor for class jdk.jfr.
ValueDescriptor
Constructs a value descriptor, useful for dynamically creating event types and
 annotations.
ValueDescriptor(Class<?>, String, List<AnnotationElement>)
- Constructor for class jdk.jfr.
ValueDescriptor
Constructs a value descriptor, useful for dynamically creating event types and
 annotations.
ValueExp
- Interface in
javax.management
Represents values that can be passed as arguments to
 relational expressions.
valueForPathChanged(TreePath, Object)
- Method in class javax.swing.tree.
DefaultTreeModel
This sets the user object of the TreeNode identified by path
 and posts a node changed.
valueForPathChanged(TreePath, Object)
- Method in interface javax.swing.tree.
TreeModel
Messaged when the user has altered the value for the item identified
 by
path
to
newValue
.
valueForXPosition(int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the value at the x position.
valueForYPosition(int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the value at the y position.
valueFromMethodName(String)
- Static method in enum class java.lang.invoke.
VarHandle.AccessMode
Returns the
AccessMode
value associated with the specified
VarHandle
signature-polymorphic method name.
valueIsAdjusting
- Variable in class javax.swing.plaf.basic.
BasicComboPopup
As of Java 2 platform v1.4 this previously undocumented field is no
 longer used.
ValueLayout
PREVIEW
- Interface in
java.lang.foreign
A layout that models values of basic data types.
ValueLayout.OfBoolean
PREVIEW
- Interface in
java.lang.foreign
A value layout whose carrier is
boolean.class
.
ValueLayout.OfByte
PREVIEW
- Interface in
java.lang.foreign
A value layout whose carrier is
byte.class
.
ValueLayout.OfChar
PREVIEW
- Interface in
java.lang.foreign
A value layout whose carrier is
char.class
.
ValueLayout.OfDouble
PREVIEW
- Interface in
java.lang.foreign
A value layout whose carrier is
double.class
.
ValueLayout.OfFloat
PREVIEW
- Interface in
java.lang.foreign
A value layout whose carrier is
float.class
.
ValueLayout.OfInt
PREVIEW
- Interface in
java.lang.foreign
A value layout whose carrier is
int.class
.
ValueLayout.OfLong
PREVIEW
- Interface in
java.lang.foreign
A value layout whose carrier is
long.class
.
ValueLayout.OfShort
PREVIEW
- Interface in
java.lang.foreign
A value layout whose carrier is
short.class
.
valueOf(boolean)
- Static method in class java.lang.
Boolean
Returns a
Boolean
instance representing the specified
boolean
value.
valueOf(boolean)
- Static method in class java.lang.
String
Returns the string representation of the
boolean
argument.
valueOf(byte)
- Static method in class java.lang.
Byte
Returns a
Byte
instance representing the specified
byte
value.
valueOf(byte[])
- Static method in class java.util.
BitSet
Returns a new bit set containing all the bits in the given byte array.
valueOf(char)
- Static method in class java.lang.
Character
Returns a
Character
instance representing the specified
char
value.
valueOf(char)
- Static method in class java.lang.
String
Returns the string representation of the
char
argument.
valueOf(char[])
- Static method in class java.lang.
String
Returns the string representation of the
char
array
 argument.
valueOf(char[], int, int)
- Static method in class java.lang.
String
Returns the string representation of a specific subarray of the
char
array argument.
valueOf(double)
- Static method in class java.lang.
Double
Returns a
Double
instance representing the specified
double
value.
valueOf(double)
- Static method in class java.lang.
String
Returns the string representation of the
double
argument.
valueOf(double)
- Static method in class java.math.
BigDecimal
Translates a
double
into a
BigDecimal
, using
 the
double
's canonical string representation provided
 by the
Double.toString(double)
method.
valueOf(float)
- Static method in class java.lang.
Float
Returns a
Float
instance representing the specified
float
value.
valueOf(float)
- Static method in class java.lang.
String
Returns the string representation of the
float
argument.
valueOf(int)
- Static method in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
Returns the enumeration member with the given
refKind
field.
valueOf(int)
- Static method in class java.lang.
Integer
Returns an
Integer
instance representing the specified
int
value.
valueOf(int)
- Static method in class java.lang.
String
Returns the string representation of the
int
argument.
valueOf(int)
- Static method in enum class java.math.
RoundingMode
Returns the
RoundingMode
object corresponding to a
 legacy integer rounding mode constant in
BigDecimal
.
valueOf(int)
- Static method in enum class java.sql.
JDBCType
Returns the
JDBCType
that corresponds to the specified
Types
value
valueOf(int, boolean)
- Static method in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
Returns the enumeration member with the given the
refKind
and
isInterface
arguments.
valueOf(long)
- Static method in class java.lang.
Long
Returns a
Long
instance representing the specified
long
value.
valueOf(long)
- Static method in class java.lang.
String
Returns the string representation of the
long
argument.
valueOf(long)
- Static method in class java.math.
BigDecimal
Translates a
long
value into a
BigDecimal
with a scale of zero.
valueOf(long)
- Static method in class java.math.
BigInteger
Returns a BigInteger whose value is equal to that of the
 specified
long
.
valueOf(long[])
- Static method in class java.util.
BitSet
Returns a new bit set containing all the bits in the given long array.
valueOf(long, int)
- Static method in class java.math.
BigDecimal
Translates a
long
unscaled value and an
int
scale into a
BigDecimal
.
valueOf(short)
- Static method in class java.lang.
Short
Returns a
Short
instance representing the specified
short
value.
valueOf(Class<T>, String)
- Static method in class java.lang.
Enum
Returns the enum constant of the specified enum class with the
 specified name.
valueOf(Object)
- Static method in class java.lang.
String
Returns the string representation of the
Object
argument.
valueOf(Runtime.Version)
- Static method in enum class java.lang.reflect.
ClassFileFormatVersion
Returns the latest class file format version that is usable
 under the runtime version argument.
valueOf(Runtime.Version)
- Static method in enum class javax.lang.model.
SourceVersion
Returns the latest source version that is usable under the
 runtime version argument.
valueOf(String)
- Static method in enum class com.sun.management.
HotSpotDiagnosticMXBean.ThreadDumpFormat
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.management.
VMOption.Origin
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.net.httpserver.
SimpleFileServer.OutputLevel
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.nio.sctp.
AssociationChangeNotification.AssocChangeEvent
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.nio.sctp.
HandlerResult
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.nio.sctp.
PeerAddressChangeNotification.AddressChangeEvent
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.security.jgss.
InquireType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.source.doctree.
AttributeTree.ValueKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.source.doctree.
DocTree.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.source.tree.
CaseTree.CaseKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.source.tree.
LambdaExpressionTree.BodyKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.source.tree.
MemberReferenceTree.ReferenceMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.source.tree.
ModuleTree.ModuleKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.source.tree.
Tree.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.source.util.
TaskEvent.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class com.sun.tools.jconsole.
JConsoleContext.ConnectionState
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
Component.BaselineResizeBehavior
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
Desktop.Action
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.desktop.
QuitStrategy
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.desktop.
UserSessionEvent.Reason
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
Dialog.ModalExclusionType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
Dialog.ModalityType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.event.
FocusEvent.Cause
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.font.
NumericShaper.Range
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
GraphicsDevice.WindowTranslucency
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
MultipleGradientPaint.ColorSpaceType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
MultipleGradientPaint.CycleMethod
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
Taskbar.Feature
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
Taskbar.State
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
TrayIcon.MessageType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.awt.
Window.Type
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.io.
ObjectInputFilter.Status
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.annotation.
ElementType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.annotation.
RetentionPolicy
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in class java.lang.
Boolean
Returns a
Boolean
with a value represented by the
 specified string.
valueOf(String)
- Static method in class java.lang.
Byte
Returns a
Byte
object holding the value
 given by the specified
String
.
valueOf(String)
- Static method in enum class java.lang.
Character.UnicodeScript
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in class java.lang.
Double
Returns a
Double
object holding the
double
value represented by the argument string
s
.
valueOf(String)
- Static method in class java.lang.
Float
Returns a
Float
object holding the
float
value represented by the argument string
s
.
valueOf(String)
- Static method in class java.lang.
Integer
Returns an
Integer
object holding the
 value of the specified
String
.
valueOf(String)
- Static method in enum class java.lang.invoke.
MethodHandles.Lookup.ClassOption
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.invoke.
VarHandle.AccessMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in class java.lang.
Long
Returns a
Long
object holding the value
 of the specified
String
.
valueOf(String)
- Static method in enum class java.lang.management.
MemoryType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.module.
ModuleDescriptor.Exports.Modifier
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.module.
ModuleDescriptor.Modifier
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.module.
ModuleDescriptor.Opens.Modifier
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.module.
ModuleDescriptor.Requires.Modifier
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.
ProcessBuilder.Redirect.Type
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.reflect.
AccessFlag.Location
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.reflect.
AccessFlag
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.reflect.
ClassFileFormatVersion
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in class java.lang.
Short
Returns a
Short
object holding the
 value given by the specified
String
.
valueOf(String)
- Static method in enum class java.lang.
StackWalker.Option
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.
System.Logger.Level
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.lang.
Thread.State
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.math.
RoundingMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.net.
Authenticator.RequestorType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.net.http.
HttpClient.Redirect
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.net.http.
HttpClient.Version
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.net.
Proxy.Type
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.net.
StandardProtocolFamily
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.
AccessMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.attribute.
AclEntryFlag
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.attribute.
AclEntryPermission
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.attribute.
AclEntryType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.attribute.
PosixFilePermission
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.
FileVisitOption
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.
FileVisitResult
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.
LinkOption
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.
StandardCopyOption
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.nio.file.
StandardOpenOption
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.security.cert.
CertPathValidatorException.BasicReason
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.security.cert.
CRLReason
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.security.cert.
PKIXReason
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.security.cert.
PKIXRevocationChecker.Option
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.security.
CryptoPrimitive
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.security.
DrbgParameters.Capability
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.security.
KeyRep.Type
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.sql.
ClientInfoStatus
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in class java.sql.
Date
Converts a string in JDBC date escape format to
 a
Date
value.
valueOf(String)
- Static method in enum class java.sql.
JDBCType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.sql.
PseudoColumnUsage
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.sql.
RowIdLifetime
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in class java.sql.
Time
Converts a string in JDBC time escape format to a
Time
value.
valueOf(String)
- Static method in class java.sql.
Timestamp
Converts a
String
object in JDBC timestamp escape format to a
Timestamp
value.
valueOf(String)
- Static method in enum class java.text.
Normalizer.Form
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.text.
NumberFormat.Style
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.chrono.
HijrahEra
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.chrono.
IsoEra
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in class java.time.chrono.
JapaneseEra
Returns the
JapaneseEra
with the name.
valueOf(String)
- Static method in enum class java.time.chrono.
MinguoEra
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.chrono.
ThaiBuddhistEra
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.
DayOfWeek
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.format.
FormatStyle
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.format.
ResolverStyle
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.format.
SignStyle
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.format.
TextStyle
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.
Month
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.temporal.
ChronoField
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.temporal.
ChronoUnit
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.time.zone.
ZoneOffsetTransitionRule.TimeDefinition
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.util.concurrent.
Future.State
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.util.concurrent.
StructuredTaskScope.Subtask.State
PREVIEW
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.util.concurrent.
TimeUnit
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.util.
Formatter.BigDecimalLayoutForm
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.util.
Locale.Category
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.util.
Locale.FilteringMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.util.
Locale.IsoCountryCode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class java.util.stream.
Collector.Characteristics
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.lang.model.element.
ElementKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.lang.model.element.
Modifier
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.lang.model.element.
ModuleElement.DirectiveKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.lang.model.element.
NestingKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.lang.model.
SourceVersion
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.lang.model.type.
TypeKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.lang.model.util.
Elements.Origin
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.net.ssl.
SSLEngineResult.HandshakeStatus
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.net.ssl.
SSLEngineResult.Status
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.smartcardio.
CardTerminals.State
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.
DropMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.event.
RowSorterEvent.Type
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.
GroupLayout.Alignment
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.
JTable.PrintMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.
LayoutStyle.ComponentPlacement
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.plaf.nimbus.
AbstractRegionPainter.PaintContext.CacheMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.
RowFilter.ComparisonType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.
SortOrder
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.
SwingWorker.StateValue
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.swing.text.html.
FormSubmitEvent.MethodType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.tools.
Diagnostic.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.tools.
DocumentationTool.Location
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.tools.
JavaFileObject.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.tools.
StandardLocation
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class javax.xml.catalog.
CatalogFeatures.Feature
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in class javax.xml.namespace.
QName
QName
derived from parsing the formatted
String
.
valueOf(String)
- Static method in enum class javax.xml.xpath.
XPathEvaluationResult.XPathResultType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.dynalink.linker.
ConversionComparator.Comparison
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.dynalink.
StandardNamespace
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.dynalink.
StandardOperation
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.incubator.vector.
VectorShape
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.javadoc.doclet.
Doclet.Option.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.javadoc.doclet.
DocletEnvironment.ModuleMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.javadoc.doclet.
Taglet.Location
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.jfr.
RecordingState
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.jshell.
Snippet.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.jshell.
Snippet.Status
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.jshell.
Snippet.SubKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.jshell.
SourceCodeAnalysis.Attribute
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class jdk.jshell.
SourceCodeAnalysis.Completeness
Returns the enum constant of this class with the specified name.
valueOf(String, int)
- Static method in class java.lang.
Byte
Returns a
Byte
object holding the value
 extracted from the specified
String
when parsed
 with the radix given by the second argument.
valueOf(String, int)
- Static method in class java.lang.
Integer
Returns an
Integer
object holding the value
 extracted from the specified
String
when parsed
 with the radix given by the second argument.
valueOf(String, int)
- Static method in class java.lang.
Long
Returns a
Long
object holding the value
 extracted from the specified
String
when parsed
 with the radix given by the second argument.
valueOf(String, int)
- Static method in class java.lang.
Short
Returns a
Short
object holding the value
 extracted from the specified
String
when parsed
 with the radix given by the second argument.
valueOf(ByteBuffer)
- Static method in class java.util.
BitSet
Returns a new bit set containing all the bits in the given byte
 buffer between its position and limit.
valueOf(LongBuffer)
- Static method in class java.util.
BitSet
Returns a new bit set containing all the bits in the given long
 buffer between its position and limit.
valueOf(LocalDate)
- Static method in class java.sql.
Date
Obtains an instance of
Date
from a
LocalDate
object
 with the same year, month and day of month value as the given
LocalDate
.
valueOf(LocalDateTime)
- Static method in class java.sql.
Timestamp
Obtains an instance of
Timestamp
from a
LocalDateTime
object, with the same year, month, day of month, hours, minutes,
 seconds and nanos date-time value as the provided
LocalDateTime
.
valueOf(LocalTime)
- Static method in class java.sql.
Time
Obtains an instance of
Time
from a
LocalTime
object
 with the same hour, minute and second time value as the given
LocalTime
.
ValueRange
- Class in
java.time.temporal
The range of valid values for a date-time field.
values
- Variable in class javax.naming.directory.
BasicAttribute
Holds the attribute's values.
values
- Variable in class javax.swing.text.html.parser.
AttributeList
The possible attribute values
values()
- Method in class com.sun.management.
GcInfo
values()
- Static method in enum class com.sun.management.
HotSpotDiagnosticMXBean.ThreadDumpFormat
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.management.
VMOption.Origin
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class com.sun.net.httpserver.
Headers
values()
- Static method in enum class com.sun.net.httpserver.
SimpleFileServer.OutputLevel
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.nio.sctp.
AssociationChangeNotification.AssocChangeEvent
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.nio.sctp.
HandlerResult
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.nio.sctp.
PeerAddressChangeNotification.AddressChangeEvent
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.security.jgss.
InquireType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.source.doctree.
AttributeTree.ValueKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.source.doctree.
DocTree.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.source.tree.
CaseTree.CaseKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.source.tree.
LambdaExpressionTree.BodyKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.source.tree.
MemberReferenceTree.ReferenceMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.source.tree.
ModuleTree.ModuleKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.source.tree.
Tree.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.source.util.
TaskEvent.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class com.sun.tools.jconsole.
JConsoleContext.ConnectionState
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
Component.BaselineResizeBehavior
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
Desktop.Action
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.desktop.
QuitStrategy
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.desktop.
UserSessionEvent.Reason
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
Dialog.ModalExclusionType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
Dialog.ModalityType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.event.
FocusEvent.Cause
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.font.
NumericShaper.Range
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
GraphicsDevice.WindowTranslucency
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
MultipleGradientPaint.ColorSpaceType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
MultipleGradientPaint.CycleMethod
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class java.awt.
RenderingHints
Returns a
Collection
view of the values
 contained in this
RenderingHints
.
values()
- Static method in enum class java.awt.
Taskbar.Feature
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
Taskbar.State
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
TrayIcon.MessageType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.awt.
Window.Type
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.io.
ObjectInputFilter.Status
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.annotation.
ElementType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.annotation.
RetentionPolicy
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.
Character.UnicodeScript
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.invoke.
MethodHandles.Lookup.ClassOption
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.invoke.
VarHandle.AccessMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.management.
MemoryType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.module.
ModuleDescriptor.Exports.Modifier
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.module.
ModuleDescriptor.Modifier
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.module.
ModuleDescriptor.Opens.Modifier
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.module.
ModuleDescriptor.Requires.Modifier
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.
ProcessBuilder.Redirect.Type
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.reflect.
AccessFlag.Location
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.reflect.
AccessFlag
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.reflect.
ClassFileFormatVersion
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.
StackWalker.Option
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in interface java.lang.
StringTemplate
PREVIEW
Returns a list of embedded expression results for this
StringTemplate
PREVIEW
.
values()
- Static method in enum class java.lang.
System.Logger.Level
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.lang.
Thread.State
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.math.
RoundingMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.net.
Authenticator.RequestorType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.net.http.
HttpClient.Redirect
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.net.http.
HttpClient.Version
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.net.
Proxy.Type
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.net.
StandardProtocolFamily
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.
AccessMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.attribute.
AclEntryFlag
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.attribute.
AclEntryPermission
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.attribute.
AclEntryType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.attribute.
PosixFilePermission
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.
FileVisitOption
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.
FileVisitResult
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.
LinkOption
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.
StandardCopyOption
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.nio.file.
StandardOpenOption
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.security.cert.
CertPathValidatorException.BasicReason
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.security.cert.
CRLReason
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.security.cert.
PKIXReason
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.security.cert.
PKIXRevocationChecker.Option
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.security.
CryptoPrimitive
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.security.
DrbgParameters.Capability
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.security.
KeyRep.Type
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class java.security.
Provider
Returns an unmodifiable Collection view of the property values
 contained in this
Provider
.
values()
- Static method in enum class java.sql.
ClientInfoStatus
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.sql.
JDBCType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.sql.
PseudoColumnUsage
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.sql.
RowIdLifetime
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.text.
Normalizer.Form
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.text.
NumberFormat.Style
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.chrono.
HijrahEra
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.chrono.
IsoEra
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in class java.time.chrono.
JapaneseEra
Returns an array of JapaneseEras.
values()
- Static method in enum class java.time.chrono.
MinguoEra
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.chrono.
ThaiBuddhistEra
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.
DayOfWeek
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.format.
FormatStyle
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.format.
ResolverStyle
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.format.
SignStyle
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.format.
TextStyle
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.
Month
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.temporal.
ChronoField
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.temporal.
ChronoUnit
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.time.zone.
ZoneOffsetTransitionRule.TimeDefinition
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class java.util.
AbstractMap
Returns a
Collection
view of the values contained in this map.
values()
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns a
Collection
view of the values contained in this map.
values()
- Method in class java.util.concurrent.
ConcurrentSkipListMap
Returns a
Collection
view of the values contained in this map.
values()
- Static method in enum class java.util.concurrent.
Future.State
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.util.concurrent.
StructuredTaskScope.Subtask.State
PREVIEW
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.util.concurrent.
TimeUnit
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class java.util.
EnumMap
Returns a
Collection
view of the values contained in this map.
values()
- Static method in enum class java.util.
Formatter.BigDecimalLayoutForm
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class java.util.
HashMap
Returns a
Collection
view of the values contained in this map.
values()
- Method in class java.util.
Hashtable
Returns a
Collection
view of the values contained in this map.
values()
- Method in class java.util.
IdentityHashMap
Returns a
Collection
view of the values contained in this map.
values()
- Method in class java.util.jar.
Attributes
Returns a Collection view of the attribute values contained in this Map.
values()
- Method in class java.util.
LinkedHashMap
Returns a
Collection
view of the values contained in this map.
values()
- Static method in enum class java.util.
Locale.Category
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.util.
Locale.FilteringMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class java.util.
Locale.IsoCountryCode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in interface java.util.
Map
Returns a
Collection
view of the values contained in this map.
values()
- Method in interface java.util.
SortedMap
Returns a
Collection
view of the values contained in this map.
values()
- Static method in enum class java.util.stream.
Collector.Characteristics
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class java.util.
TreeMap
Returns a
Collection
view of the values contained in this map.
values()
- Method in class java.util.
WeakHashMap
Returns a
Collection
view of the values contained in this map.
values()
- Static method in enum class javax.lang.model.element.
ElementKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.lang.model.element.
Modifier
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.lang.model.element.
ModuleElement.DirectiveKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.lang.model.element.
NestingKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.lang.model.
SourceVersion
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.lang.model.type.
TypeKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.lang.model.util.
Elements.Origin
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in interface javax.management.openmbean.
CompositeData
Returns an unmodifiable Collection view of the item values
 contained in this
CompositeData
instance.
values()
- Method in class javax.management.openmbean.
CompositeDataSupport
Returns an unmodifiable Collection view of the item values contained in this
CompositeData
instance.
values()
- Method in interface javax.management.openmbean.
TabularData
Returns a collection view of the
CompositeData
values
 (ie the rows) contained in this
TabularData
instance.
values()
- Method in class javax.management.openmbean.
TabularDataSupport
Returns a collection view of the rows contained in this
TabularDataSupport
instance.
values()
- Static method in enum class javax.net.ssl.
SSLEngineResult.HandshakeStatus
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.net.ssl.
SSLEngineResult.Status
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class javax.script.
SimpleBindings
Returns a
Collection
view of the values contained in this map.
values()
- Static method in enum class javax.smartcardio.
CardTerminals.State
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.
DropMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.event.
RowSorterEvent.Type
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.
GroupLayout.Alignment
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.
JTable.PrintMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.
LayoutStyle.ComponentPlacement
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.plaf.nimbus.
AbstractRegionPainter.PaintContext.CacheMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.
RowFilter.ComparisonType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.
SortOrder
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.
SwingWorker.StateValue
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.swing.text.html.
FormSubmitEvent.MethodType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.tools.
Diagnostic.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.tools.
DocumentationTool.Location
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.tools.
JavaFileObject.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.tools.
StandardLocation
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.xml.catalog.
CatalogFeatures.Feature
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class javax.xml.xpath.
XPathEvaluationResult.XPathResultType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.dynalink.linker.
ConversionComparator.Comparison
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.dynalink.
StandardNamespace
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.dynalink.
StandardOperation
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.incubator.vector.
VectorShape
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.javadoc.doclet.
Doclet.Option.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.javadoc.doclet.
DocletEnvironment.ModuleMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.javadoc.doclet.
Taglet.Location
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.jfr.
RecordingState
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.jshell.
Snippet.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.jshell.
Snippet.Status
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.jshell.
Snippet.SubKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.jshell.
SourceCodeAnalysis.Attribute
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class jdk.jshell.
SourceCodeAnalysis.Completeness
Returns an array containing the constants of this enum class, in
the order they are declared.
Values
- Search tag in class java.awt.font.TextAttribute
Section
valueString(Object)
- Static method in class jdk.jshell.execution.
DirectExecutionControl
Converts the
Object
value from
ExecutionControl.invoke(String, String)
or
ExecutionControl.varValue(String, String)
to
String
.
valueToBe()
- Method in interface com.sun.jdi.event.
ModificationWatchpointEvent
Value that will be assigned to the field when the instruction
 completes.
valueToString(Object)
- Method in class javax.swing.
JFormattedTextField.AbstractFormatter
Returns the string value to display for
value
.
valueToString(Object)
- Method in class javax.swing.text.
DefaultFormatter
Converts the passed in Object into a String by way of the
toString
method.
valueToString(Object)
- Method in class javax.swing.text.
InternationalFormatter
Returns a String representation of the Object
value
.
valueToString(Object)
- Method in class javax.swing.text.
MaskFormatter
Returns a String representation of the Object
value
based on the mask.
ValueTree
- Interface in
com.sun.source.doctree
A tree node for an
@value
inline tag.
VALUETYPE
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "valuetype"
valueUnbound(SSLSessionBindingEvent)
- Method in interface javax.net.ssl.
SSLSessionBindingListener
This is called to notify the listener that it is being unbound
 from a SSLSession.
VAR
- Enum constant in enum class jdk.jshell.
Snippet.Kind
One variable declaration.
VAR
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <var>
VAR_DECLARATION_SUBKIND
- Enum constant in enum class jdk.jshell.
Snippet.SubKind
A variable declaration without initializer.
VAR_DECLARATION_WITH_INITIALIZER_SUBKIND
- Enum constant in enum class jdk.jshell.
Snippet.SubKind
A variable declaration with an initializer expression.
VAR_VALUE_SUBKIND
- Enum constant in enum class jdk.jshell.
Snippet.SubKind
A simple variable reference expression.
VARARGS
- Enum constant in enum class java.lang.reflect.
AccessFlag
The access flag
ACC_VARARGS
with a mask value of
0x0080
.
VARBINARY
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
VARBINARY
.
VARBINARY
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred
 to as a type code, that identifies the generic SQL type
VARBINARY
.
VARCHAR
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
VARCHAR
.
VARCHAR
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred
 to as a type code, that identifies the generic SQL type
VARCHAR
.
varHandle(MemoryLayout.PathElement...)
- Method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Creates a var handle that accesses a memory segment at the offset selected by the given layout path,
 where the initial layout in the path is this layout.
VarHandle
- Class in
java.lang.invoke
A VarHandle is a dynamically strongly typed reference to a variable, or to a
 parametrically-defined family of variables, including static fields,
 non-static fields, array elements, or components of an off-heap data
 structure.
VarHandle.AccessMode
- Enum Class in
java.lang.invoke
The set of access modes that specify how a variable, referenced by a
 VarHandle, is accessed.
VarHandle.VarHandleDesc
- Class in
java.lang.invoke
A
nominal descriptor
for a
VarHandle
constant.
VarHandle creation
- Search tag in class java.lang.invoke.VarHandle
Section
varHandleExactInvoker(VarHandle.AccessMode, MethodType)
- Static method in class java.lang.invoke.
MethodHandles
Produces a special
invoker method handle
which can be used to
 invoke a signature-polymorphic access mode method on any VarHandle whose
 associated access mode type is compatible with the given type.
varHandleInvoker(VarHandle.AccessMode, MethodType)
- Static method in class java.lang.invoke.
MethodHandles
Produces a special
invoker method handle
which can be used to
 invoke a signature-polymorphic access mode method on any VarHandle whose
 associated access mode type is compatible with the given type.
VARIABLE
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
VariableTree
.
VariableElement
- Interface in
javax.lang.model.element
Represents a field,
enum
constant, method or constructor
 parameter, local variable, resource variable, or exception
 parameter.
VariableHeightLayoutCache
- Class in
javax.swing.tree
NOTE: This will become more open in a future release.
VariableHeightLayoutCache()
- Constructor for class javax.swing.tree.
VariableHeightLayoutCache
Constructs a
VariableHeightLayoutCache
.
variables()
- Method in interface com.sun.jdi.
Method
Returns a list containing each
LocalVariable
declared
 in this method.
variables()
- Method in class jdk.jshell.
JShell
Returns the active variable snippets.
variablesByName(String)
- Method in interface com.sun.jdi.
Method
Returns a list containing each
LocalVariable
of a
 given name in this method.
VariableTree
- Interface in
com.sun.source.tree
A tree node for a variable declaration.
Variadic functions
- Search tag in interface java.lang.foreign.Linker
Section
variant()
- Method in class java.util.
UUID
The variant number associated with this
UUID
.
VARIATION_SELECTORS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Variation Selectors" Unicode character block.
VARIATION_SELECTORS_SUPPLEMENT
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Variation Selectors Supplement" Unicode character
 block.
VarSnippet
- Class in
jdk.jshell
Snippet for a variable definition.
varType()
- Method in class java.lang.invoke.
VarHandle.VarHandleDesc
Returns a
ClassDesc
describing the type of the variable described
 by this descriptor.
varType()
- Method in class java.lang.invoke.
VarHandle
Returns the variable type of variables referenced by this VarHandle.
varValue(String, String)
- Method in class jdk.jshell.execution.
DirectExecutionControl
varValue(String, String)
- Method in class jdk.jshell.execution.
RemoteExecutionControl
varValue(String, String)
- Method in class jdk.jshell.execution.
StreamingExecutionControl
varValue(String, String)
- Method in interface jdk.jshell.spi.
ExecutionControl
Returns the value of a variable.
varValue(VarSnippet)
- Method in class jdk.jshell.
JShell
Get the current value of a variable.
vcSupport
- Variable in class java.beans.beancontext.
BeanContextChildSupport
The
VetoableChangeSupport
associated with this
BeanContextChildSupport
.
Vector<E>
- Class in
java.util
The
Vector
class implements a growable array of
 objects.
Vector<E>
- Class in
jdk.incubator.vector
A
sequence of a fixed number of
lanes
,
 all of some fixed
element type
such as
byte
,
long
, or
float
.
Vector()
- Constructor for class java.util.
Vector
Constructs an empty vector so that its internal data array
 has size
10
and its standard capacity increment is
 zero.
Vector(int)
- Constructor for class java.util.
Vector
Constructs an empty vector with the specified initial capacity and
 with its capacity increment equal to zero.
Vector(int, int)
- Constructor for class java.util.
Vector
Constructs an empty vector with the specified initial capacity and
 capacity increment.
Vector(Collection<? extends E>)
- Constructor for class java.util.
Vector
Constructs a vector containing the elements of the specified
 collection, in the order they are returned by the collection's
 iterator.
vectorBitSize()
- Method in enum class jdk.incubator.vector.
VectorShape
Returns the size, in bits, of vectors of this shape.
vectorBitSize()
- Method in interface jdk.incubator.vector.
VectorSpecies
Returns the total vector size, in bits, of any vector
 of this species.
vectorByteSize()
- Method in interface jdk.incubator.vector.
VectorSpecies
Returns the total vector size, in bytes, of any vector
 of this species.
VectorMask<E>
- Class in
jdk.incubator.vector
A
VectorMask
represents an ordered immutable sequence of
boolean
values.
VectorOperators
- Class in
jdk.incubator.vector
This class consists solely of static constants
 that describe lane-wise vector operations, plus nested interfaces
 which classify them.
VectorOperators.Associative
- Interface in
jdk.incubator.vector
Type for all reassociating
lane-wise
binary operators,
 usable in expressions like
e = v0.
reduceLanes
(ADD)
.
VectorOperators.Binary
- Interface in
jdk.incubator.vector
Type for all
lane-wise
binary (two-argument) operators,
 usable in expressions like
w = v0.
lanewise
(ADD, v1)
.
VectorOperators.Comparison
- Interface in
jdk.incubator.vector
Type for all binary
lane-wise
boolean comparisons on lane values,
 usable in expressions like
m = v0.
compare
(LT, v1)
.
VectorOperators.Conversion<E,
F>
- Interface in
jdk.incubator.vector
Type for all
lane-wise
conversions on lane values,
 usable in expressions like
w1 = v0.
convert
(I2D, 1)
.
VectorOperators.Operator
- Interface in
jdk.incubator.vector
Root type for all operator tokens, providing queries for common
 properties such as arity, argument and return types, symbolic
 name, and operator name.
VectorOperators.Ternary
- Interface in
jdk.incubator.vector
Type for all
lane-wise
ternary (three-argument) operators,
 usable in expressions like
w = v0.
lanewise
(FMA, v1, v2)
.
VectorOperators.Test
- Interface in
jdk.incubator.vector
Type for all unary
lane-wise
boolean tests on lane values,
 usable in expressions like
m = v0.
test
(IS_FINITE)
.
VectorOperators.Unary
- Interface in
jdk.incubator.vector
Type for all
lane-wise
unary (one-argument) operators,
 usable in expressions like
w = v0.
lanewise
(NEG)
.
vectorShape()
- Method in interface jdk.incubator.vector.
VectorSpecies
Returns the shape of vectors produced by this
 species.
VectorShape
- Enum Class in
jdk.incubator.vector
A
VectorShape
selects a particular implementation of
Vector
s.
VectorShuffle<E>
- Class in
jdk.incubator.vector
A
VectorShuffle
represents an ordered immutable sequence of
int
values called
source indexes
, where each source
 index numerically selects a source lane from a compatible
Vector
.
vectorSpecies()
- Method in class jdk.incubator.vector.
VectorMask
Returns the vector species to which this mask applies.
vectorSpecies()
- Method in class jdk.incubator.vector.
VectorShuffle
Returns the species of this shuffle.
VectorSpecies<E>
- Interface in
jdk.incubator.vector
Interface for managing all vectors of the same combination
 of
element type
(
ETYPE
)
 and
shape
.
Vector subtypes
- Search tag in class jdk.incubator.vector.Vector
Section
vectorType()
- Method in interface jdk.incubator.vector.
VectorSpecies
Returns the vector type of this species.
VEDIC_EXTENSIONS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Vedic Extensions" Unicode character block.
vendorName
- Variable in class javax.imageio.spi.
IIOServiceProvider
A
String
to be returned from
getVendorName
, initially
null
.
VERBOSE
- Enum constant in enum class com.sun.net.httpserver.
SimpleFileServer.OutputLevel
Used to specify the verbose log message output level.
VERBOSE
- Static variable in class java.rmi.server.
LogStream
Deprecated.
log level constant (verbose logging).
verify(byte[])
- Method in class java.security.
Signature
Verifies the passed-in signature.
verify(byte[], int, int)
- Method in class java.security.
Signature
Verifies the passed-in signature in the specified array
 of bytes, starting at the specified offset.
verify(String, SSLSession)
- Method in interface javax.net.ssl.
HostnameVerifier
Verify that the host name is an acceptable match with
 the server's authentication scheme.
verify(PublicKey)
- Method in class java.security.cert.
Certificate
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
verify(PublicKey)
- Method in class java.security.cert.
X509CRL
Verifies that this CRL was signed using the
 private key that corresponds to the given public key.
verify(PublicKey)
- Method in class javax.security.cert.
Certificate
Deprecated.
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
verify(PublicKey, String)
- Method in class java.security.cert.
Certificate
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
verify(PublicKey, String)
- Method in class java.security.cert.
X509CRL
Verifies that this CRL was signed using the
 private key that corresponds to the given public key.
verify(PublicKey, String)
- Method in class javax.security.cert.
Certificate
Deprecated.
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
verify(PublicKey, Provider)
- Method in class java.security.cert.
Certificate
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
verify(PublicKey, Provider)
- Method in class java.security.cert.
X509Certificate
Verifies that this certificate was signed using the
 private key that corresponds to the specified public key.
verify(PublicKey, Provider)
- Method in class java.security.cert.
X509CRL
Verifies that this CRL was signed using the
 private key that corresponds to the given public key.
verify(PublicKey, Signature)
- Method in class java.security.
SignedObject
Verifies that the signature in this
SignedObject
is the valid
 signature for the object stored inside, with the given
 verification key, using the designated verification engine.
verify(JComponent)
- Method in class javax.swing.
InputVerifier
Checks whether the JComponent's input is valid.
VERIFY
- Static variable in class java.security.
Signature
Possible
Signature.state
value, signifying that
 this
Signature
object has been initialized for verification.
VERIFY
- Static variable in class javax.xml.crypto.
KeySelector.Purpose
A key for verifying.
verifyAttributeCategory(Object, Class<?>)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Verify that the given object is a
Class
that implements the
 given interface, which is assumed to be interface
Attribute
or a subinterface thereof.
verifyAttributeValue(Object, Class<?>)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Verify that the given object is an instance of the given interface, which
 is assumed to be interface
Attribute
or a subinterface
 thereof.
verifyCategoryForValue(Class<?>, Attribute)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Verify that the given attribute category object is equal to the category
 of the given attribute value object.
VerifyError
- Exception Class in
java.lang
Thrown when the "verifier" detects that a class file,
 though well formed, contains some sort of internal inconsistency
 or security problem.
VerifyError()
- Constructor for exception class java.lang.
VerifyError
Constructs an
VerifyError
with no detail message.
VerifyError(String)
- Constructor for exception class java.lang.
VerifyError
Constructs an
VerifyError
with the specified detail message.
verifyMIC(byte[], int, int, byte[], int, int, MessageProp)
- Method in interface org.ietf.jgss.
GSSContext
Verifies the cryptographic MIC, contained in the token parameter,
 over the supplied message.
verifyMIC(InputStream, InputStream, MessageProp)
- Method in interface org.ietf.jgss.
GSSContext
Deprecated.
The stream-based methods have been removed from RFC 8353.
 Use
GSSContext.verifyMIC(byte[], int, int, byte[], int, int, MessageProp)
instead.
verifyTarget(JComponent)
- Method in class javax.swing.
InputVerifier
Checks whether the target JComponent that will be receiving the focus
 is ready to accept it.
version
- Variable in class javax.imageio.spi.
IIOServiceProvider
A
String
to be returned from
getVersion
, initially null.
version()
- Method in interface com.sun.jdi.
VirtualMachine
Returns the version of the Java Runtime Environment in the target
 VM as reported by the property
java.version
.
version()
- Method in class java.lang.module.
ModuleDescriptor
Returns the module version.
version()
- Static method in class java.lang.
Runtime
Returns the version of the Java Runtime Environment as a
Runtime.Version
.
version()
- Method in class java.lang.
Runtime.Version
Returns an unmodifiable
List
of the integers
 represented in the
version number
.
version()
- Method in class java.net.http.
HttpClient
Returns the preferred HTTP protocol version for this client.
version()
- Method in class java.net.http.
HttpRequest
Returns an
Optional
containing the HTTP protocol version that
 will be requested for this
HttpRequest
.
version()
- Method in interface java.net.http.
HttpResponse.ResponseInfo
Provides the response protocol version.
version()
- Method in interface java.net.http.
HttpResponse
Returns the HTTP protocol version that was used for this response.
version()
- Method in class java.util.
UUID
The version number associated with this
UUID
.
version(ModuleDescriptor.Version)
- Method in class java.lang.module.
ModuleDescriptor.Builder
Sets the module version.
version(String)
- Method in class java.lang.module.
ModuleDescriptor.Builder
Sets the module version.
version(HttpClient.Version)
- Method in interface java.net.http.
HttpClient.Builder
Requests a specific HTTP protocol version where possible.
version(HttpClient.Version)
- Method in interface java.net.http.
HttpRequest.Builder
Sets the preferred
HttpClient.Version
for this request.
VERSION
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
VersionTree
representing an
@version
tag.
VERSION
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "version"
VERSION
- Static variable in class javax.xml.transform.
OutputKeys
version =
nmtoken
.
versionColumnNotPseudo
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that this version column is NOT a pseudo column.
versionColumnPseudo
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that this version column is a pseudo column.
versionColumnUnknown
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that this version column may or may not be a pseudo column.
versionedStream()
- Method in class java.util.jar.
JarFile
Returns a
Stream
of the versioned jar file entries.
Version numbers
- Search tag in class java.lang.Runtime.Version
Section
Versions
- Search tag in package java.sql
Section
Version strings
- Search tag in class java.lang.Runtime.Version
Section
VersionTree
- Interface in
com.sun.source.doctree
A tree node for an
@version
block tag.
VERTICAL
- Static variable in interface java.awt.
Adjustable
Indicates that the
Adjustable
has vertical orientation.
VERTICAL
- Static variable in class java.awt.
GridBagConstraints
Resize the component vertically but not horizontally.
VERTICAL
- Static variable in class java.awt.
Scrollbar
A constant that indicates a vertical scroll bar.
VERTICAL
- Static variable in class javax.accessibility.
AccessibleState
Indicates the orientation of this object is vertical.
VERTICAL
- Static variable in class javax.swing.
JList
Indicates a vertical layout of cells, in a single column;
 the default layout.
VERTICAL
- Static variable in interface javax.swing.
SwingConstants
Vertical orientation.
VERTICAL_ALIGN
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "vertical-align".
VERTICAL_ALIGNMENT_CHANGED_PROPERTY
- Static variable in class javax.swing.
AbstractButton
Identifies a change in the button's vertical alignment.
VERTICAL_CENTER
- Static variable in class javax.swing.
SpringLayout
Specifies the vertical center of a component's bounding rectangle.
VERTICAL_FORMS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Vertical Forms" Unicode character block.
VERTICAL_SCROLLBAR
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies a vertical scrollbar.
VERTICAL_SCROLLBAR_ALWAYS
- Static variable in interface javax.swing.
ScrollPaneConstants
Used to set the vertical scroll bar policy so that
 vertical scrollbars are always displayed.
VERTICAL_SCROLLBAR_AS_NEEDED
- Static variable in interface javax.swing.
ScrollPaneConstants
Used to set the vertical scroll bar policy so that
 vertical scrollbars are displayed only when needed.
VERTICAL_SCROLLBAR_NEVER
- Static variable in interface javax.swing.
ScrollPaneConstants
Used to set the vertical scroll bar policy so that
 vertical scrollbars are never displayed.
VERTICAL_SCROLLBAR_POLICY
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies the vertical scroll bar policy property.
VERTICAL_SPLIT
- Static variable in class javax.swing.
JSplitPane
Vertical split indicates the
Component
s are
 split along the y axis.
VERTICAL_TEXT_POSITION_CHANGED_PROPERTY
- Static variable in class javax.swing.
AbstractButton
Identifies a change in the button's vertical text position.
VERTICAL_WRAP
- Static variable in class javax.swing.
JList
Indicates a "newspaper style" layout with cells flowing vertically
 then horizontally.
VerticalDragController(MouseEvent)
- Constructor for class javax.swing.plaf.basic.
BasicSplitPaneDivider.VerticalDragController
Constructs a new instance of
VerticalDragController
.
verticalScrollBar
- Variable in class javax.swing.
JScrollPane
The scrollpane's vertical scrollbar child.
verticalScrollBarPolicy
- Variable in class javax.swing.
JScrollPane
The display policy for the vertical scrollbar.
vertThumbIcon
- Static variable in class javax.swing.plaf.metal.
MetalSliderUI
A default vertical thumb
Icon
.
vetoableChange(PropertyChangeEvent)
- Method in class java.beans.beancontext.
BeanContextSupport
subclasses may envelope to monitor veto child property changes.
vetoableChange(PropertyChangeEvent)
- Method in interface java.beans.
VetoableChangeListener
This method gets called when a constrained property is changed.
vetoableChange(PropertyChangeEvent)
- Method in class java.beans.
VetoableChangeListenerProxy
Forwards the property change event to the listener delegate.
VETOABLECHANGE
- Static variable in class com.sun.java.accessibility.util.
EventID
Maps to Beans VetoableChange support (i.e., VetoableChangeListener
 and VetoableChangeEvent)
VetoableChangeListener
- Interface in
java.beans
A VetoableChange event gets fired whenever a bean changes a "constrained"
 property.
VetoableChangeListenerProxy
- Class in
java.beans
A class which extends the
EventListenerProxy
specifically for adding a
VetoableChangeListener
with a "constrained" property.
VetoableChangeListenerProxy(String, VetoableChangeListener)
- Constructor for class java.beans.
VetoableChangeListenerProxy
Constructor which binds the
VetoableChangeListener
to a specific property.
VetoableChangeSupport
- Class in
java.beans
This is a utility class that can be used by beans that support constrained
 properties.
VetoableChangeSupport(Object)
- Constructor for class java.beans.
VetoableChangeSupport
Constructs a
VetoableChangeSupport
object.
View
- Class in
javax.swing.text
A very important part of the text package is the
View
class.
View(Element)
- Constructor for class javax.swing.text.
View
Creates a new
View
object.
viewAsFloatingLanes()
- Method in class jdk.incubator.vector.
ByteVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is a floating-point type.
viewAsFloatingLanes()
- Method in class jdk.incubator.vector.
DoubleVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is a floating-point type.
viewAsFloatingLanes()
- Method in class jdk.incubator.vector.
FloatVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is a floating-point type.
viewAsFloatingLanes()
- Method in class jdk.incubator.vector.
IntVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is a floating-point type.
viewAsFloatingLanes()
- Method in class jdk.incubator.vector.
LongVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is a floating-point type.
viewAsFloatingLanes()
- Method in class jdk.incubator.vector.
ShortVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is a floating-point type.
viewAsFloatingLanes()
- Method in class jdk.incubator.vector.
Vector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is a floating-point type.
viewAsIntegralLanes()
- Method in class jdk.incubator.vector.
ByteVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is not a floating-point type.
viewAsIntegralLanes()
- Method in class jdk.incubator.vector.
DoubleVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is not a floating-point type.
viewAsIntegralLanes()
- Method in class jdk.incubator.vector.
FloatVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is not a floating-point type.
viewAsIntegralLanes()
- Method in class jdk.incubator.vector.
IntVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is not a floating-point type.
viewAsIntegralLanes()
- Method in class jdk.incubator.vector.
LongVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is not a floating-point type.
viewAsIntegralLanes()
- Method in class jdk.incubator.vector.
ShortVector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is not a floating-point type.
viewAsIntegralLanes()
- Method in class jdk.incubator.vector.
Vector
Views this vector as a vector of the same shape, length, and
 contents, but a lane type that is not a floating-point type.
View Collections
- Search tag in interface java.util.Collection
Section
ViewCSS
- Interface in
org.w3c.dom.css
This interface represents a CSS view.
ViewFactory
- Interface in
javax.swing.text
A factory to create a view of some portion of document subject.
ViewListener()
- Constructor for class javax.swing.
JViewport.ViewListener
Constructs a
ViewListener
.
viewMenuIcon
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
View menu icon
viewport
- Variable in class javax.swing.
JScrollPane
The scrollpane's viewport child.
viewport
- Variable in class javax.swing.
ScrollPaneLayout
The scrollpane's viewport child.
viewPort
- Variable in class javax.swing.
JScrollPane.AccessibleJScrollPane
this
JScrollPane
's current
JViewport
VIEWPORT
- Static variable in class javax.accessibility.
AccessibleRole
An object usually used in a scroll pane.
VIEWPORT
- Static variable in class javax.swing.plaf.synth.
Region
Viewport region.
VIEWPORT
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies a "viewport" or display area, within which
 scrolled contents are visible.
ViewportChangeHandler()
- Constructor for class javax.swing.plaf.basic.
BasicScrollPaneUI.ViewportChangeHandler
Deprecated.
Constructs a
ViewportChangeHandler
.
viewportChangeListener
- Variable in class javax.swing.plaf.basic.
BasicScrollPaneUI
ChangeListener
installed on the viewport.
ViewportLayout
- Class in
javax.swing
The default layout manager for
JViewport
.
ViewportLayout()
- Constructor for class javax.swing.
ViewportLayout
Constructs a
ViewportLayout
.
ViewportUI
- Class in
javax.swing.plaf
Pluggable look and feel interface for JViewport.
ViewportUI()
- Constructor for class javax.swing.plaf.
ViewportUI
Constructor for subclasses to call.
viewToModel(float, float, Shape)
- Method in class javax.swing.text.
View
Deprecated.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
AsyncBoxView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
BoxView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
ComponentView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
CompositeView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
FieldView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
GlyphView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.html.
ImageView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
IconView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
PasswordView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
PlainView
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
View
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(Point)
- Method in class javax.swing.text.
JTextComponent
Deprecated.
replaced by
JTextComponent.viewToModel2D(Point2D)
viewToModel(GlyphView, float, float, Shape, Position.Bias[])
- Method in class javax.swing.text.
GlyphView.GlyphPainter
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
viewToModel(JTextComponent, Point)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Deprecated.
replaced by
TextUI.viewToModel2D(JTextComponent, Point2D, Position.Bias[])
viewToModel(JTextComponent, Point)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Deprecated.
viewToModel(JTextComponent, Point)
- Method in class javax.swing.plaf.
TextUI
Deprecated.
replaced by
TextUI.viewToModel2D(JTextComponent, Point2D, Position.Bias[])
viewToModel(JTextComponent, Point, Position.Bias[])
- Method in class javax.swing.plaf.basic.
BasicTextUI
Deprecated.
replaced by
TextUI.viewToModel2D(JTextComponent, Point2D, Position.Bias[])
viewToModel(JTextComponent, Point, Position.Bias[])
- Method in class javax.swing.plaf.multi.
MultiTextUI
Deprecated.
viewToModel(JTextComponent, Point, Position.Bias[])
- Method in class javax.swing.plaf.
TextUI
Deprecated.
replaced by
TextUI.viewToModel2D(JTextComponent, Point2D, Position.Bias[])
viewToModel2D(Point2D)
- Method in class javax.swing.text.
JTextComponent
Converts the given place in the view coordinate system
 to the nearest representative location in the model.
viewToModel2D(JTextComponent, Point2D, Position.Bias[])
- Method in class javax.swing.plaf.
TextUI
Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.
VIRTUAL
- Enum constant in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
A method handle for a method invoked as with
invokevirtual
virtualMachine()
- Method in interface com.sun.jdi.
Mirror
Gets the VirtualMachine to which this
 Mirror belongs.
VirtualMachine
- Class in
com.sun.tools.attach
A Java virtual machine.
VirtualMachine
- Interface in
com.sun.jdi
A virtual machine targeted for debugging.
VirtualMachine(AttachProvider, String)
- Constructor for class com.sun.tools.attach.
VirtualMachine
Initializes a new instance of this class.
VirtualMachineDescriptor
- Class in
com.sun.tools.attach
Describes a Java virtual machine.
VirtualMachineDescriptor(AttachProvider, String)
- Constructor for class com.sun.tools.attach.
VirtualMachineDescriptor
Creates a virtual machine descriptor from the given components.
VirtualMachineDescriptor(AttachProvider, String, String)
- Constructor for class com.sun.tools.attach.
VirtualMachineDescriptor
Creates a virtual machine descriptor from the given components.
VirtualMachineError
- Exception Class in
java.lang
Thrown to indicate that the Java Virtual Machine is broken or has
 run out of resources necessary for it to continue operating.
VirtualMachineError()
- Constructor for exception class java.lang.
VirtualMachineError
Constructs a
VirtualMachineError
with no detail message.
VirtualMachineError(String)
- Constructor for exception class java.lang.
VirtualMachineError
Constructs a
VirtualMachineError
with the specified
 detail message.
VirtualMachineError(String, Throwable)
- Constructor for exception class java.lang.
VirtualMachineError
Constructs a
VirtualMachineError
with the specified
 detail message and cause.
VirtualMachineError(Throwable)
- Constructor for exception class java.lang.
VirtualMachineError
Constructs a
VirtualMachineError
with the specified
 cause and a detail message of
(cause==null ? null :
 cause.toString())
(which typically contains the class and
 detail message of
cause
).
virtualMachineManager()
- Static method in class com.sun.jdi.
Bootstrap
Returns the virtual machine manager.
VirtualMachineManager
- Interface in
com.sun.jdi
A manager of connections to target virtual machines.
Virtual threads
- Search tag in class java.lang.Thread
Section
Visibility
- Search tag in package java.nio.file
Section
Visibility
- Interface in
java.beans
Under some circumstances a bean may be run on servers where a GUI
 is not available.
VISIBLE
- Static variable in class javax.accessibility.
AccessibleState
Indicates this object is visible.
VISIBLE_ROW_COUNT_PROPERTY
- Static variable in class javax.swing.
JTree
Bound property name for
visibleRowCount
.
visibleClasses()
- Method in interface com.sun.jdi.
ClassLoaderReference
Returns a list of all classes which this class loader
 can find by name via
ClassLoader::loadClass
,
Class::forName
and bytecode linkage in the target VM.
visibleFields()
- Method in interface com.sun.jdi.
ReferenceType
Returns a list containing each unhidden and unambiguous
Field
in this type.
visibleMethods()
- Method in interface com.sun.jdi.
ReferenceType
Returns a list containing each
Method
declared or inherited by this type.
visibleRowCount
- Variable in class javax.swing.
JTree
Number of rows to make visible at one time.
visibleVariableByName(String)
- Method in interface com.sun.jdi.
StackFrame
Finds a
LocalVariable
that matches the given name and is
 visible at the current frame location.
visibleVariables()
- Method in interface com.sun.jdi.
StackFrame
Returns a list containing each
LocalVariable
that can be accessed from this frame's location.
visit(DocTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Invokes the appropriate visit method specific to the type of the node.
visit(Tree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Invokes the appropriate visit method specific to the type of the node.
visit(Iterable<? extends DocTree>, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Invokes the appropriate visit method on each of a sequence of nodes.
visit(Iterable<? extends Tree>, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Invokes the appropriate visit method on each of a sequence of nodes.
visit(AnnotationValue)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
A convenience method equivalent to
visit(av, null)
.
visit(AnnotationValue)
- Method in class javax.lang.model.util.
AbstractAnnotationValueVisitor6
Visits an annotation value as if by passing itself to that
 value's
accept
method passing
null
for the additional parameter.
visit(AnnotationValue, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits an annotation value.
visit(AnnotationValue, P)
- Method in class javax.lang.model.util.
AbstractAnnotationValueVisitor6
Visits any annotation value as if by passing itself to that
 value's
accept
.
visit(Element)
- Method in interface javax.lang.model.element.
ElementVisitor
A convenience method equivalent to
visit(e, null)
.
visit(Element)
- Method in class javax.lang.model.util.
AbstractElementVisitor6
Visits any program element as if by passing itself to that
 element's
accept
method and passing
null
for the additional parameter.
visit(Element, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits an element.
visit(Element, P)
- Method in class javax.lang.model.util.
AbstractElementVisitor6
Visits any program element as if by passing itself to that
 element's
accept
method.
visit(ModuleElement.Directive)
- Method in interface javax.lang.model.element.
ModuleElement.DirectiveVisitor
Visits any directive as if by passing itself to that
 directive's
accept
method and passing
null
for the additional parameter.
visit(ModuleElement.Directive, P)
- Method in interface javax.lang.model.element.
ModuleElement.DirectiveVisitor
Visits any directive as if by passing itself to that
 directive's
accept
method.
visit(TypeMirror)
- Method in interface javax.lang.model.type.
TypeVisitor
A convenience method equivalent to
visit(t, null)
.
visit(TypeMirror)
- Method in class javax.lang.model.util.
AbstractTypeVisitor6
Visits any type mirror as if by passing itself to that type
 mirror's
accept
method and passing
null
for the additional parameter.
visit(TypeMirror, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits a type.
visit(TypeMirror, P)
- Method in class javax.lang.model.util.
AbstractTypeVisitor6
Visits any type mirror as if by passing itself to that type
 mirror's
accept
method.
visitAnnotatedType(AnnotatedTypeTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
AnnotatedTypeTree
node.
visitAnnotatedType(AnnotatedTypeTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
AnnotatedTypeTree
node.
visitAnnotatedType(AnnotatedTypeTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
AnnotatedTypeTree
node.
visitAnnotation(AnnotationTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
AnnotatedTree
node.
visitAnnotation(AnnotationTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
AnnotatedTree
node.
visitAnnotation(AnnotationTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
AnnotatedTree
node.
visitAnnotation(AnnotationMirror, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits an annotation value in an annotation.
visitAnnotation(AnnotationMirror, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits an annotation value in an annotation.
visitAnyPattern(AnyPatternTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
AnyPatternTree
node.
visitAnyPattern(AnyPatternTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
AnyPatternTree
node.
visitAnyPattern(AnyPatternTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
AnyPatternTree
node.
visitArray(List<? extends AnnotationValue>, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits an array value in an annotation.
visitArray(List<? extends AnnotationValue>, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits an array value in an annotation.
visitArray(ArrayType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits an array type.
visitArray(ArrayType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits an array type.
visitArrayAccess(ArrayAccessTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
ArrayAccessTree
node.
visitArrayAccess(ArrayAccessTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
ArrayAccessTree
node.
visitArrayAccess(ArrayAccessTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
ArrayAccessTree
node.
visitArrayType(ArrayTypeTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
ArrayTypeTree
node.
visitArrayType(ArrayTypeTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
ArrayTypeTree
node.
visitArrayType(ArrayTypeTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
ArrayTypeTree
node.
visitAssert(AssertTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
AssertTree
node.
visitAssert(AssertTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
AssertTree
node.
visitAssert(AssertTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
AssertTree
node.
visitAssignment(AssignmentTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
AssignmentTree
node.
visitAssignment(AssignmentTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
AssignmentTree
node.
visitAssignment(AssignmentTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
AssignmentTree
node.
visitAttribute(AttributeTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
AttributeTree
node.
visitAttribute(AttributeTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
AttributeTree
node.
visitAttribute(AttributeTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
AttributeTree
node.
visitAuthor(AuthorTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
AuthorTree
node.
visitAuthor(AuthorTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
AuthorTree
node.
visitAuthor(AuthorTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
AuthorTree
node.
visitBinary(BinaryTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
BinaryTree
node.
visitBinary(BinaryTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
BinaryTree
node.
visitBinary(BinaryTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
BinaryTree
node.
visitBindingPattern(BindingPatternTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
BindingPatternTree
node.
visitBindingPattern(BindingPatternTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
BindingPatternTree
node.
visitBindingPattern(BindingPatternTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
BindingPatternTree
node.
visitBlock(BlockTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
BlockTree
node.
visitBlock(BlockTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
BlockTree
node.
visitBlock(BlockTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
BlockTree
node.
visitBoolean(boolean, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a
boolean
value in an annotation.
visitBoolean(boolean, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a
boolean
value in an annotation.
visitBreak(BreakTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
BreakTree
node.
visitBreak(BreakTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
BreakTree
node.
visitBreak(BreakTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
BreakTree
node.
visitByte(byte, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a
byte
value in an annotation.
visitByte(byte, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a
byte
value in an annotation.
visitCase(CaseTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
CaseTree
node.
visitCase(CaseTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
CaseTree
node.
visitCase(CaseTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
CaseTree
node.
visitCatch(CatchTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
CatchTree
node.
visitCatch(CatchTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
CatchTree
node.
visitCatch(CatchTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
CatchTree
node.
visitChar(char, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a
char
value in an annotation.
visitChar(char, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a
char
value in an annotation.
visitClass(ClassTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ClassTree
node.
visitClass(ClassTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ClassTree
node.
visitClass(ClassTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ClassTree
node.
visitComment(CommentTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
CommentTree
node.
visitComment(CommentTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
CommentTree
node.
visitComment(CommentTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
CommentTree
node.
visitCompilationUnit(CompilationUnitTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
CompilationUnitTree
node.
visitCompilationUnit(CompilationUnitTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
CompilationUnitTree
node.
visitCompilationUnit(CompilationUnitTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
CompilationUnitTree
node.
visitCompoundAssignment(CompoundAssignmentTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
CompoundAssignmentTree
node.
visitCompoundAssignment(CompoundAssignmentTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
CompoundAssignmentTree
node.
visitCompoundAssignment(CompoundAssignmentTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
CompoundAssignmentTree
node.
visitConditionalExpression(ConditionalExpressionTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ConditionalExpressionTree
node.
visitConditionalExpression(ConditionalExpressionTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ConditionalExpressionTree
node.
visitConditionalExpression(ConditionalExpressionTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ConditionalExpressionTree
node.
visitConstantCaseLabel(ConstantCaseLabelTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ConstantCaseLabelTree
node.
visitConstantCaseLabel(ConstantCaseLabelTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ConstantCaseLabelTree
node.
visitConstantCaseLabel(ConstantCaseLabelTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ConstantCaseLabelTree
node.
visitContinue(ContinueTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ContinueTree
node.
visitContinue(ContinueTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ContinueTree
node.
visitContinue(ContinueTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ContinueTree
node.
visitDeclared(DeclaredType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits a declared type.
visitDeclared(DeclaredType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits a declared type.
visitDeconstructionPattern(DeconstructionPatternTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
DeconstructionPatternTree
node.
visitDeconstructionPattern(DeconstructionPatternTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
DeconstructionPatternTree
node.
visitDeconstructionPattern(DeconstructionPatternTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
DeconstructionPatternTree
node.
visitDefaultCaseLabel(DefaultCaseLabelTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
DefaultCaseLabelTree
node.
visitDefaultCaseLabel(DefaultCaseLabelTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
DefaultCaseLabelTree
node.
visitDefaultCaseLabel(DefaultCaseLabelTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
DefaultCaseLabelTree
node.
visitDeprecated(DeprecatedTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
DeprecatedTree
node.
visitDeprecated(DeprecatedTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
DeprecatedTree
node.
visitDeprecated(DeprecatedTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
DeprecatedTree
node.
visitDocComment(DocCommentTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
DocCommentTree
node.
visitDocComment(DocCommentTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
DocCommentTree
node.
visitDocComment(DocCommentTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
DocCommentTree
node.
visitDocRoot(DocRootTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
DocRootTree
node.
visitDocRoot(DocRootTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
DocRootTree
node.
visitDocRoot(DocRootTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
DocRootTree
node.
visitDocType(DocTypeTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
DocTypeTree
node.
visitDocType(DocTypeTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
DocTypeTree
node.
visitDocType(DocTypeTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
DocTypeTree
node.
visitDouble(double, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a
double
value in an annotation.
visitDouble(double, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a
double
value in an annotation.
visitDoWhileLoop(DoWhileLoopTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
DoWhileTree
node.
visitDoWhileLoop(DoWhileLoopTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
DoWhileTree
node.
visitDoWhileLoop(DoWhileLoopTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
DoWhileTree
node.
visitEmptyStatement(EmptyStatementTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
EmptyStatementTree
node.
visitEmptyStatement(EmptyStatementTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
EmptyStatementTree
node.
visitEmptyStatement(EmptyStatementTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
EmptyStatementTree
node.
visitEndElement(EndElementTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
EndElementTree
node.
visitEndElement(EndElementTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
EndElementTree
node.
visitEndElement(EndElementTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
EndElementTree
node.
visitEnhancedForLoop(EnhancedForLoopTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
EnhancedForLoopTree
node.
visitEnhancedForLoop(EnhancedForLoopTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
EnhancedForLoopTree
node.
visitEnhancedForLoop(EnhancedForLoopTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
EnhancedForLoopTree
node.
visitEntity(EntityTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
EntityTree
node.
visitEntity(EntityTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
EntityTree
node.
visitEntity(EntityTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
EntityTree
node.
visitEnumConstant(VariableElement, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits an
enum
value in an annotation.
visitEnumConstant(VariableElement, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits an
enum
value in an annotation.
visitErroneous(ErroneousTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
ErroneousTree
node.
visitErroneous(ErroneousTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
ErroneousTree
node.
visitErroneous(ErroneousTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
ErroneousTree
node.
visitErroneous(ErroneousTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
ErroneousTree
node.
visitErroneous(ErroneousTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
ErroneousTree
node.
visitErroneous(ErroneousTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
ErroneousTree
node.
visitError(ErrorType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits an error type.
visitError(ErrorType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits an error type.
visitEscape(EscapeTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
EscapeTree
node.
visitEscape(EscapeTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
EscapeTree
node.
visitEscape(EscapeTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
EscapeTree
node.
visitExecutable(ExecutableElement, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits an executable element.
visitExecutable(ExecutableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits an executable element.
visitExecutable(ExecutableElement, P)
- Method in class javax.lang.model.util.
ElementScanner14
Visits an executable element.
visitExecutable(ExecutableElement, P)
- Method in class javax.lang.model.util.
ElementScanner6
Visits an executable element.
visitExecutable(ExecutableElement, P)
- Method in class javax.lang.model.util.
SimpleElementVisitor6
Visits an executable element.
visitExecutable(ExecutableType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits an executable type.
visitExecutable(ExecutableType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits an executable type.
visitExecutableAsConstructor(ExecutableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
CONSTRUCTOR
executable element.
visitExecutableAsInstanceInit(ExecutableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits an
INSTANCE_INIT
executable element.
visitExecutableAsMethod(ExecutableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
METHOD
executable element.
visitExecutableAsStaticInit(ExecutableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
STATIC_INIT
executable element.
visitExports(ExportsTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
ExportsTree
node.
visitExports(ExportsTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
ExportsTree
node.
visitExports(ExportsTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
ExportsTree
node.
visitExports(ModuleElement.ExportsDirective, P)
- Method in interface javax.lang.model.element.
ModuleElement.DirectiveVisitor
Visits an
exports
directive.
visitExpressionStatement(ExpressionStatementTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
ExpressionStatementTree
node.
visitExpressionStatement(ExpressionStatementTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
ExpressionStatementTree
node.
visitExpressionStatement(ExpressionStatementTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
ExpressionStatementTree
node.
visitFile(T, BasicFileAttributes)
- Method in interface java.nio.file.
FileVisitor
Invoked for a file in a directory.
visitFile(T, BasicFileAttributes)
- Method in class java.nio.file.
SimpleFileVisitor
Invoked for a file in a directory.
visitFileFailed(T, IOException)
- Method in interface java.nio.file.
FileVisitor
Invoked for a file that could not be visited.
visitFileFailed(T, IOException)
- Method in class java.nio.file.
SimpleFileVisitor
Invoked for a file that could not be visited.
visitFloat(float, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a
float
value in an annotation.
visitFloat(float, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a
float
value in an annotation.
visitForLoop(ForLoopTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ForLoopTree
node.
visitForLoop(ForLoopTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ForLoopTree
node.
visitForLoop(ForLoopTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ForLoopTree
node.
visitHidden(HiddenTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
HiddenTree
node.
visitHidden(HiddenTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
HiddenTree
node.
visitHidden(HiddenTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
HiddenTree
node.
visitIdentifier(IdentifierTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
IdentifierTree
node.
visitIdentifier(IdentifierTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
IdentifierTree
node.
visitIdentifier(IdentifierTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
IdentifierTree
node.
visitIdentifier(IdentifierTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
IdentifierTree
node.
visitIdentifier(IdentifierTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
IdentifierTree
node.
visitIdentifier(IdentifierTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
IdentifierTree
node.
visitIf(IfTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
IfTree
node.
visitIf(IfTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
IfTree
node.
visitIf(IfTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
IfTree
node.
visitImport(ImportTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
ImportTree
node.
visitImport(ImportTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
ImportTree
node.
visitImport(ImportTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
ImportTree
node.
visitIndex(IndexTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
IndexTree
node.
visitIndex(IndexTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
IndexTree
node.
visitIndex(IndexTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
IndexTree
node.
visitInheritDoc(InheritDocTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
InheritDocTree
node.
visitInheritDoc(InheritDocTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
InheritDocTree
node.
visitInheritDoc(InheritDocTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
InheritDocTree
node.
visitInstanceOf(InstanceOfTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
InstanceOfTree
node.
visitInstanceOf(InstanceOfTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
InstanceOfTree
node.
visitInstanceOf(InstanceOfTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
InstanceOfTree
node.
visitInt(int, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits an
int
value in an annotation.
visitInt(int, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits an
int
value in an annotation.
visitIntersection(IntersectionType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits an intersection type.
visitIntersection(IntersectionType, P)
- Method in class javax.lang.model.util.
AbstractTypeVisitor6
Visits an intersection type.
visitIntersection(IntersectionType, P)
- Method in class javax.lang.model.util.
AbstractTypeVisitor8
Visits an
IntersectionType
in a manner defined by a subclass.
visitIntersection(IntersectionType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor8
Visits an intersection type.
visitIntersection(IntersectionType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor8
Visits an intersection type.
visitIntersectionType(IntersectionTypeTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
IntersectionTypeTree
node.
visitIntersectionType(IntersectionTypeTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
IntersectionTypeTree
node.
visitIntersectionType(IntersectionTypeTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
IntersectionTypeTree
node.
visitLabeledStatement(LabeledStatementTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
LabeledStatementTree
node.
visitLabeledStatement(LabeledStatementTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
LabeledStatementTree
node.
visitLabeledStatement(LabeledStatementTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
LabeledStatementTree
node.
visitLambdaExpression(LambdaExpressionTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
LambdaExpressionTree
node.
visitLambdaExpression(LambdaExpressionTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
LambdaExpressionTree
node.
visitLambdaExpression(LambdaExpressionTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
LambdaExpressionTree
node.
visitLink(LinkTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
LinkTree
node.
visitLink(LinkTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
LinkTree
node.
visitLink(LinkTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
LinkTree
node.
visitLiteral(LiteralTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
LiteralTree
node.
visitLiteral(LiteralTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
LiteralTree
node.
visitLiteral(LiteralTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
LiteralTree
node.
visitLiteral(LiteralTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
LiteralTree
node.
visitLiteral(LiteralTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
LiteralTree
node.
visitLiteral(LiteralTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
LiteralTree
node.
visitLong(long, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a
long
value in an annotation.
visitLong(long, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a
long
value in an annotation.
visitMemberReference(MemberReferenceTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
MemberReferenceTree
node.
visitMemberReference(MemberReferenceTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
MemberReferenceTree
node.
visitMemberReference(MemberReferenceTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
MemberReferenceTree
node.
visitMemberSelect(MemberSelectTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
MemberSelectTree
node.
visitMemberSelect(MemberSelectTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
MemberSelectTree
node.
visitMemberSelect(MemberSelectTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
MemberSelectTree
node.
visitMethod(MethodTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
MethodTree
node.
visitMethod(MethodTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
MethodTree
node.
visitMethod(MethodTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
MethodTree
node.
visitMethodInvocation(MethodInvocationTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
MethodInvocationTree
node.
visitMethodInvocation(MethodInvocationTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
MethodInvocationTree
node.
visitMethodInvocation(MethodInvocationTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
MethodInvocationTree
node.
visitModifiers(ModifiersTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ModifiersTree
node.
visitModifiers(ModifiersTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ModifiersTree
node.
visitModifiers(ModifiersTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ModifiersTree
node.
visitModule(ModuleTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ModuleTree
node.
visitModule(ModuleTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ModuleTree
node.
visitModule(ModuleTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ModuleTree
node.
visitModule(ModuleElement, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits a module element.
visitModule(ModuleElement, P)
- Method in class javax.lang.model.util.
AbstractElementVisitor6
Visits a module element.
visitModule(ModuleElement, P)
- Method in class javax.lang.model.util.
AbstractElementVisitor9
Visits a module element.
visitModule(ModuleElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor9
Visits a module element.
visitModule(ModuleElement, P)
- Method in class javax.lang.model.util.
ElementScanner9
Visits a module element.
visitModule(ModuleElement, P)
- Method in class javax.lang.model.util.
SimpleElementVisitor9
Visits a module element.
visitNewArray(NewArrayTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
NewArrayTree
node.
visitNewArray(NewArrayTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
NewArrayTree
node.
visitNewArray(NewArrayTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
NewArrayTree
node.
visitNewClass(NewClassTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
NewClassTree
node.
visitNewClass(NewClassTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
NewClassTree
node.
visitNewClass(NewClassTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
NewClassTree
node.
visitNoType(NoType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits a
NoType
instance.
visitNoType(NoType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits a
NoType
instance.
visitNoType(NoType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
NoType
instance.
visitNoTypeAsModule(NoType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
MODULE
pseudo-type.
visitNoTypeAsModule(NoType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor9
Visits a
MODULE
pseudo-type.
visitNoTypeAsNone(NoType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
NONE
pseudo-type.
visitNoTypeAsPackage(NoType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
PACKAGE
pseudo-type.
visitNoTypeAsVoid(NoType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
VOID
pseudo-type.
visitNull(NullType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits the null type.
visitNull(NullType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits the null type.
visitOpens(OpensTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an
OpensTree
node.
visitOpens(OpensTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an
OpensTree
node.
visitOpens(OpensTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an
OpensTree
node.
visitOpens(ModuleElement.OpensDirective, P)
- Method in interface javax.lang.model.element.
ModuleElement.DirectiveVisitor
Visits an
opens
directive.
visitOther(DocTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an unknown type of
DocTree
node.
visitOther(DocTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an unknown type of
DocTree
node.
visitOther(DocTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an unknown type of
DocTree
node.
visitOther(Tree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits an unknown type of
Tree
node.
visitOther(Tree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits an unknown type of
Tree
node.
visitOther(Tree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits an unknown type of
Tree
node.
visitPackage(PackageTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
PackageTree
node.
visitPackage(PackageTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
PackageTree
node.
visitPackage(PackageTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
PackageTree
node.
visitPackage(PackageElement, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits a package element.
visitPackage(PackageElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a package element.
visitPackage(PackageElement, P)
- Method in class javax.lang.model.util.
ElementScanner6
Visits a package element.
visitPackage(PackageElement, P)
- Method in class javax.lang.model.util.
SimpleElementVisitor6
Visits a package element.
visitParam(ParamTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
ParamTree
node.
visitParam(ParamTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
ParamTree
node.
visitParam(ParamTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
ParamTree
node.
visitParameterizedType(ParameterizedTypeTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ParameterizedTypeTree
node.
visitParameterizedType(ParameterizedTypeTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ParameterizedTypeTree
node.
visitParameterizedType(ParameterizedTypeTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ParameterizedTypeTree
node.
visitParenthesized(ParenthesizedTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ParenthesizedTree
node.
visitParenthesized(ParenthesizedTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ParenthesizedTree
node.
visitParenthesized(ParenthesizedTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ParenthesizedTree
node.
visitPatternCaseLabel(PatternCaseLabelTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
PatternCaseLabelTree
node.
visitPatternCaseLabel(PatternCaseLabelTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
PatternCaseLabelTree
node.
visitPatternCaseLabel(PatternCaseLabelTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
PatternCaseLabelTree
node.
visitPrimitive(PrimitiveType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits a primitive type.
visitPrimitive(PrimitiveType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits a primitive type.
visitPrimitive(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a primitive type.
visitPrimitiveAsBoolean(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
BOOLEAN
primitive type.
visitPrimitiveAsByte(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
BYTE
primitive type.
visitPrimitiveAsChar(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
CHAR
primitive type.
visitPrimitiveAsDouble(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
DOUBLE
primitive type.
visitPrimitiveAsFloat(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
FLOAT
primitive type.
visitPrimitiveAsInt(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits an
INT
primitive type.
visitPrimitiveAsLong(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
LONG
primitive type.
visitPrimitiveAsShort(PrimitiveType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor6
Visits a
SHORT
primitive type.
visitPrimitiveType(PrimitiveTypeTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
PrimitiveTypeTree
node.
visitPrimitiveType(PrimitiveTypeTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
PrimitiveTypeTree
node.
visitPrimitiveType(PrimitiveTypeTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
PrimitiveTypeTree
node.
visitProvides(ProvidesTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
ProvidesTree
node.
visitProvides(ProvidesTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
ProvidesTree
node.
visitProvides(ProvidesTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
ProvidesTree
node.
visitProvides(ProvidesTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ProvidesTree
node.
visitProvides(ProvidesTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ProvidesTree
node.
visitProvides(ProvidesTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ProvidesTree
node.
visitProvides(ModuleElement.ProvidesDirective, P)
- Method in interface javax.lang.model.element.
ModuleElement.DirectiveVisitor
Visits a
provides
directive.
visitRecordComponent(RecordComponentElement, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits a record component element.
visitRecordComponent(RecordComponentElement, P)
- Method in class javax.lang.model.util.
AbstractElementVisitor14
Visits a record component element.
visitRecordComponent(RecordComponentElement, P)
- Method in class javax.lang.model.util.
AbstractElementVisitor6
Visits a record component element.
visitRecordComponent(RecordComponentElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor14
Visits a record component element.
visitRecordComponent(RecordComponentElement, P)
- Method in class javax.lang.model.util.
ElementScanner14
Visits a record component element.
visitRecordComponent(RecordComponentElement, P)
- Method in class javax.lang.model.util.
SimpleElementVisitor14
Visits a record component element.
visitReference(ReferenceTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
ReferenceTree
node.
visitReference(ReferenceTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
ReferenceTree
node.
visitReference(ReferenceTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
ReferenceTree
node.
visitRequires(RequiresTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
RequiresTree
node.
visitRequires(RequiresTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
RequiresTree
node.
visitRequires(RequiresTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
RequiresTree
node.
visitRequires(ModuleElement.RequiresDirective, P)
- Method in interface javax.lang.model.element.
ModuleElement.DirectiveVisitor
Visits a
requires
directive.
visitReturn(ReturnTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
ReturnTree
node.
visitReturn(ReturnTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
ReturnTree
node.
visitReturn(ReturnTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
ReturnTree
node.
visitReturn(ReturnTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ReturnTree
node.
visitReturn(ReturnTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ReturnTree
node.
visitReturn(ReturnTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ReturnTree
node.
visitSee(SeeTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SeeTree
node.
visitSee(SeeTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SeeTree
node.
visitSee(SeeTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SeeTree
node.
visitSerial(SerialTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SerialTree
node.
visitSerial(SerialTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SerialTree
node.
visitSerial(SerialTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SerialTree
node.
visitSerialData(SerialDataTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SerialDataTree
node.
visitSerialData(SerialDataTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SerialDataTree
node.
visitSerialData(SerialDataTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SerialDataTree
node.
visitSerialField(SerialFieldTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SerialFieldTree
node.
visitSerialField(SerialFieldTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SerialFieldTree
node.
visitSerialField(SerialFieldTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SerialFieldTree
node.
visitShort(short, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a
short
value in an annotation.
visitShort(short, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a
short
value in an annotation.
visitSince(SinceTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SinceTree
node.
visitSince(SinceTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SinceTree
node.
visitSince(SinceTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SinceTree
node.
visitSnippet(SnippetTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SnippetTree
node.
visitSnippet(SnippetTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SnippetTree
node.
visitSnippet(SnippetTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SnippetTree
node.
visitSpec(SpecTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SpecTree
node.
visitSpec(SpecTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SpecTree
node.
visitSpec(SpecTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SpecTree
node.
visitStartElement(StartElementTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
StartElementTree
node.
visitStartElement(StartElementTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
StartElementTree
node.
visitStartElement(StartElementTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
StartElementTree
node.
visitString(String, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a string value in an annotation.
visitString(String, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a string value in an annotation.
visitStringTemplate(StringTemplateTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a StringTemplateTree node.
visitStringTemplate(StringTemplateTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a StringTemplateTree node.
visitStringTemplate(StringTemplateTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a StringTemplateTree node.
visitSummary(SummaryTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SummaryTree
node.
visitSummary(SummaryTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SummaryTree
node.
visitSummary(SummaryTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SummaryTree
node.
visitSwitch(SwitchTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
SwitchTree
node.
visitSwitch(SwitchTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
SwitchTree
node.
visitSwitch(SwitchTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
SwitchTree
node.
visitSwitchExpression(SwitchExpressionTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
SwitchExpressionTree
node.
visitSwitchExpression(SwitchExpressionTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
SwitchExpressionTree
node.
visitSwitchExpression(SwitchExpressionTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
SwitchExpressionTree
node.
visitSynchronized(SynchronizedTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
SynchronizedTree
node.
visitSynchronized(SynchronizedTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
SynchronizedTree
node.
visitSynchronized(SynchronizedTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
SynchronizedTree
node.
visitSystemProperty(SystemPropertyTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
SystemPropertyTree
node.
visitSystemProperty(SystemPropertyTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
SystemPropertyTree
node.
visitSystemProperty(SystemPropertyTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
SystemPropertyTree
node.
visitText(TextTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
TextTree
node.
visitText(TextTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
TextTree
node.
visitText(TextTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
TextTree
node.
visitThrow(ThrowTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
ThrowTree
node.
visitThrow(ThrowTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
ThrowTree
node.
visitThrow(ThrowTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
ThrowTree
node.
visitThrows(ThrowsTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
ThrowsTree
node.
visitThrows(ThrowsTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
ThrowsTree
node.
visitThrows(ThrowsTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
ThrowsTree
node.
visitTry(TryTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
TryTree
node.
visitTry(TryTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
TryTree
node.
visitTry(TryTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
TryTree
node.
visitType(TypeElement, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits a type element.
visitType(TypeElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a type element.
visitType(TypeElement, P)
- Method in class javax.lang.model.util.
ElementScanner14
Visits a type element.
visitType(TypeElement, P)
- Method in class javax.lang.model.util.
ElementScanner6
Visits a type element.
visitType(TypeElement, P)
- Method in class javax.lang.model.util.
SimpleElementVisitor6
Visits a type element.
visitType(TypeMirror, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits a type value in an annotation.
visitType(TypeMirror, P)
- Method in class javax.lang.model.util.
SimpleAnnotationValueVisitor6
Visits a type value in an annotation.
visitTypeAsAnnotationType(TypeElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits an
ANNOTATION_TYPE
type element.
visitTypeAsClass(TypeElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
CLASS
type element.
visitTypeAsEnum(TypeElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits an
ENUM
type element.
visitTypeAsInterface(TypeElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits an
INTERFACE
type element.
visitTypeAsRecord(TypeElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor14
Visits a
RECORD
type element.
visitTypeAsRecord(TypeElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
RECORD
type element.
visitTypeCast(TypeCastTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
TypeCastTree
node.
visitTypeCast(TypeCastTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
TypeCastTree
node.
visitTypeCast(TypeCastTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
TypeCastTree
node.
visitTypeParameter(TypeParameterTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
TypeParameterTree
node.
visitTypeParameter(TypeParameterTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
TypeParameterTree
node.
visitTypeParameter(TypeParameterTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
TypeParameterTree
node.
visitTypeParameter(TypeParameterElement, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits a type parameter element.
visitTypeParameter(TypeParameterElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a type parameter element.
visitTypeParameter(TypeParameterElement, P)
- Method in class javax.lang.model.util.
ElementScanner6
Visits a type parameter element.
visitTypeParameter(TypeParameterElement, P)
- Method in class javax.lang.model.util.
SimpleElementVisitor6
Visits a type parameter element.
visitTypeVariable(TypeVariable, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits a type variable.
visitTypeVariable(TypeVariable, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits a type variable.
visitUnary(UnaryTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
UnaryTree
node.
visitUnary(UnaryTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
UnaryTree
node.
visitUnary(UnaryTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
UnaryTree
node.
visitUnion(UnionType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits a union type.
visitUnion(UnionType, P)
- Method in class javax.lang.model.util.
AbstractTypeVisitor6
Visits a union type.
visitUnion(UnionType, P)
- Method in class javax.lang.model.util.
AbstractTypeVisitor7
Visits a
UnionType
in a manner defined by a subclass.
visitUnion(UnionType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor7
Visits a union type.
visitUnion(UnionType, P)
- Method in class javax.lang.model.util.
TypeKindVisitor7
Visits a union type.
visitUnionType(UnionTypeTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
UnionTypeTree
node.
visitUnionType(UnionTypeTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
UnionTypeTree
node.
visitUnionType(UnionTypeTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
UnionTypeTree
node.
visitUnknown(AnnotationValue, P)
- Method in interface javax.lang.model.element.
AnnotationValueVisitor
Visits an unknown kind of annotation value.
visitUnknown(AnnotationValue, P)
- Method in class javax.lang.model.util.
AbstractAnnotationValueVisitor6
Visits an unknown kind of annotation value.
visitUnknown(Element, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits an unknown kind of element.
visitUnknown(Element, P)
- Method in class javax.lang.model.util.
AbstractElementVisitor6
Visits an unknown kind of element.
visitUnknown(ModuleElement.Directive, P)
- Method in interface javax.lang.model.element.
ModuleElement.DirectiveVisitor
Visits an unknown directive.
visitUnknown(TypeMirror, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits an unknown kind of type.
visitUnknown(TypeMirror, P)
- Method in class javax.lang.model.util.
AbstractTypeVisitor6
Visits an unknown kind of type.
visitUnknownBlockTag(UnknownBlockTagTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
UnknownBlockTagTree
node.
visitUnknownBlockTag(UnknownBlockTagTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
UnknownBlockTagTree
node.
visitUnknownBlockTag(UnknownBlockTagTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
UnknownBlockTagTree
node.
visitUnknownInlineTag(UnknownInlineTagTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits an
UnknownInlineTagTree
node.
visitUnknownInlineTag(UnknownInlineTagTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits an
UnknownInlineTagTree
node.
visitUnknownInlineTag(UnknownInlineTagTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits an
UnknownInlineTagTree
node.
visitUses(UsesTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
UsesTree
node.
visitUses(UsesTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
UsesTree
node.
visitUses(UsesTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
UsesTree
node.
visitUses(UsesTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
UsesTree
node.
visitUses(UsesTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
UsesTree
node.
visitUses(UsesTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
UsesTree
node.
visitUses(ModuleElement.UsesDirective, P)
- Method in interface javax.lang.model.element.
ModuleElement.DirectiveVisitor
Visits a
uses
directive.
visitValue(ValueTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
ValueTree
node.
visitValue(ValueTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
ValueTree
node.
visitValue(ValueTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
ValueTree
node.
visitVariable(VariableTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
VariableTree
node.
visitVariable(VariableTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
VariableTree
node.
visitVariable(VariableTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
VariableTree
node.
visitVariable(VariableElement, P)
- Method in interface javax.lang.model.element.
ElementVisitor
Visits a variable element.
visitVariable(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a variable element
visitVariable(VariableElement, P)
- Method in class javax.lang.model.util.
ElementScanner6
Visits a variable element.
visitVariable(VariableElement, P)
- Method in class javax.lang.model.util.
ElementScanner7
Visits a variable element.
visitVariable(VariableElement, P)
- Method in class javax.lang.model.util.
SimpleElementVisitor6
Visits a variable element.
visitVariable(VariableElement, P)
- Method in class javax.lang.model.util.
SimpleElementVisitor7
Visits a variable element.
visitVariableAsBindingVariable(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor14
Visits a
BINDING_VARIABLE
variable element.
visitVariableAsBindingVariable(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
BINDING_VARIABLE
variable element.
visitVariableAsEnumConstant(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits an
ENUM_CONSTANT
variable element.
visitVariableAsExceptionParameter(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits an
EXCEPTION_PARAMETER
variable element.
visitVariableAsField(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
FIELD
variable element.
visitVariableAsLocalVariable(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
LOCAL_VARIABLE
variable element.
visitVariableAsParameter(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
PARAMETER
variable element.
visitVariableAsResourceVariable(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor6
Visits a
RESOURCE_VARIABLE
variable element.
visitVariableAsResourceVariable(VariableElement, P)
- Method in class javax.lang.model.util.
ElementKindVisitor7
Visits a
RESOURCE_VARIABLE
variable element.
visitVersion(VersionTree, P)
- Method in interface com.sun.source.doctree.
DocTreeVisitor
Visits a
VersionTree
node.
visitVersion(VersionTree, P)
- Method in class com.sun.source.util.
DocTreeScanner
Visits a
VersionTree
node.
visitVersion(VersionTree, P)
- Method in class com.sun.source.util.
SimpleDocTreeVisitor
Visits a
VersionTree
node.
visitWhileLoop(WhileLoopTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
WhileLoopTree
node.
visitWhileLoop(WhileLoopTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
WhileLoopTree
node.
visitWhileLoop(WhileLoopTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
WhileLoopTree
node.
visitWildcard(WildcardTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
WildcardTypeTree
node.
visitWildcard(WildcardTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
WildcardTypeTree
node.
visitWildcard(WildcardTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
WildcardTypeTree
node.
visitWildcard(WildcardType, P)
- Method in interface javax.lang.model.type.
TypeVisitor
Visits a wildcard type.
visitWildcard(WildcardType, P)
- Method in class javax.lang.model.util.
SimpleTypeVisitor6
Visits a wildcard type.
visitYield(YieldTree, P)
- Method in interface com.sun.source.tree.
TreeVisitor
Visits a
YieldTree
node.
visitYield(YieldTree, P)
- Method in class com.sun.source.util.
SimpleTreeVisitor
Visits a
YieldTree
node.
visitYield(YieldTree, P)
- Method in class com.sun.source.util.
TreeScanner
Visits a
YieldTree
node.
visualUpdate()
- Element in annotation interface java.beans.
BeanProperty
The value that indicates whether the corresponding component
 is repainted after the annotated property got changed or not.
VITHKUQI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Vithkuqi".
VITHKUQI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Vithkuqi" Unicode
 character block.
VK_0
- Static variable in class java.awt.event.
KeyEvent
Constant for the "0" key.
VK_1
- Static variable in class java.awt.event.
KeyEvent
Constant for the "1" key.
VK_2
- Static variable in class java.awt.event.
KeyEvent
Constant for the "2" key.
VK_3
- Static variable in class java.awt.event.
KeyEvent
Constant for the "3" key.
VK_4
- Static variable in class java.awt.event.
KeyEvent
Constant for the "4" key.
VK_5
- Static variable in class java.awt.event.
KeyEvent
Constant for the "5" key.
VK_6
- Static variable in class java.awt.event.
KeyEvent
Constant for the "6" key.
VK_7
- Static variable in class java.awt.event.
KeyEvent
Constant for the "7" key.
VK_8
- Static variable in class java.awt.event.
KeyEvent
Constant for the "8" key.
VK_9
- Static variable in class java.awt.event.
KeyEvent
Constant for the "9" key.
VK_A
- Static variable in class java.awt.event.
KeyEvent
Constant for the "A" key.
VK_ACCEPT
- Static variable in class java.awt.event.
KeyEvent
Constant for the Accept or Commit function key.
VK_ADD
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad add key.
VK_AGAIN
- Static variable in class java.awt.event.
KeyEvent
Constant for the Again key.
VK_ALL_CANDIDATES
- Static variable in class java.awt.event.
KeyEvent
Constant for the All Candidates function key.
VK_ALPHANUMERIC
- Static variable in class java.awt.event.
KeyEvent
Constant for the Alphanumeric function key.
VK_ALT
- Static variable in class java.awt.event.
KeyEvent
Constant for the ALT virtual key.
VK_ALT_GRAPH
- Static variable in class java.awt.event.
KeyEvent
Constant for the AltGraph function key.
VK_AMPERSAND
- Static variable in class java.awt.event.
KeyEvent
Constant for the "&" key.
VK_ASTERISK
- Static variable in class java.awt.event.
KeyEvent
Constant for the "*" key.
VK_AT
- Static variable in class java.awt.event.
KeyEvent
Constant for the "@" key.
VK_B
- Static variable in class java.awt.event.
KeyEvent
Constant for the "B" key.
VK_BACK_QUOTE
- Static variable in class java.awt.event.
KeyEvent
Constant for the BACK_QUOTE  key.
VK_BACK_SLASH
- Static variable in class java.awt.event.
KeyEvent
Constant for the back slash key, "\"
VK_BACK_SPACE
- Static variable in class java.awt.event.
KeyEvent
Constant for the BACK_SPACE virtual key.
VK_BEGIN
- Static variable in class java.awt.event.
KeyEvent
Constant for the Begin key.
VK_BRACELEFT
- Static variable in class java.awt.event.
KeyEvent
Constant for the "{" key.
VK_BRACERIGHT
- Static variable in class java.awt.event.
KeyEvent
Constant for the "}" key.
VK_C
- Static variable in class java.awt.event.
KeyEvent
Constant for the "C" key.
VK_CANCEL
- Static variable in class java.awt.event.
KeyEvent
Constant for the CANCEL virtual key.
VK_CAPS_LOCK
- Static variable in class java.awt.event.
KeyEvent
Constant for the CAPS_LOCK virtual key.
VK_CIRCUMFLEX
- Static variable in class java.awt.event.
KeyEvent
Constant for the "^" key.
VK_CLEAR
- Static variable in class java.awt.event.
KeyEvent
Constant for the CLEAR virtual key.
VK_CLOSE_BRACKET
- Static variable in class java.awt.event.
KeyEvent
Constant for the close bracket key, "]"
VK_CODE_INPUT
- Static variable in class java.awt.event.
KeyEvent
Constant for the Code Input function key.
VK_COLON
- Static variable in class java.awt.event.
KeyEvent
Constant for the ":" key.
VK_COMMA
- Static variable in class java.awt.event.
KeyEvent
Constant for the comma key, ","
VK_COMPOSE
- Static variable in class java.awt.event.
KeyEvent
Constant for the Compose function key.
VK_CONTEXT_MENU
- Static variable in class java.awt.event.
KeyEvent
Constant for the Microsoft Windows Context Menu key.
VK_CONTROL
- Static variable in class java.awt.event.
KeyEvent
Constant for the CONTROL virtual key.
VK_CONVERT
- Static variable in class java.awt.event.
KeyEvent
Constant for the Convert function key.
VK_COPY
- Static variable in class java.awt.event.
KeyEvent
Constant for the Copy key.
VK_CUT
- Static variable in class java.awt.event.
KeyEvent
Constant for the Cut key.
VK_D
- Static variable in class java.awt.event.
KeyEvent
Constant for the "D" key.
VK_DEAD_ABOVEDOT
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Above Dot key.
VK_DEAD_ABOVERING
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Above Ring key.
VK_DEAD_ACUTE
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Acute key.
VK_DEAD_BREVE
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Breve key.
VK_DEAD_CARON
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Caron key.
VK_DEAD_CEDILLA
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Cedilla key.
VK_DEAD_CIRCUMFLEX
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Circumflex key.
VK_DEAD_DIAERESIS
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Diaeresis key.
VK_DEAD_DOUBLEACUTE
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Double Acute key.
VK_DEAD_GRAVE
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Grave key.
VK_DEAD_IOTA
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Iota key.
VK_DEAD_MACRON
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Macron key.
VK_DEAD_OGONEK
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Ogonek key.
VK_DEAD_SEMIVOICED_SOUND
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Semivoiced Sound key.
VK_DEAD_TILDE
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Tilde key.
VK_DEAD_VOICED_SOUND
- Static variable in class java.awt.event.
KeyEvent
Constant for the Dead Voiced Sound key.
VK_DECIMAL
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad decimal point key.
VK_DELETE
- Static variable in class java.awt.event.
KeyEvent
Constant for the delete key.
VK_DIVIDE
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad divide key.
VK_DOLLAR
- Static variable in class java.awt.event.
KeyEvent
Constant for the "$" key.
VK_DOWN
- Static variable in class java.awt.event.
KeyEvent
Constant for the non-numpad
down
arrow key.
VK_E
- Static variable in class java.awt.event.
KeyEvent
Constant for the "E" key.
VK_END
- Static variable in class java.awt.event.
KeyEvent
Constant for the END virtual key.
VK_ENTER
- Static variable in class java.awt.event.
KeyEvent
Constant for the ENTER virtual key.
VK_EQUALS
- Static variable in class java.awt.event.
KeyEvent
Constant for the equals key, "="
VK_ESCAPE
- Static variable in class java.awt.event.
KeyEvent
Constant for the ESCAPE virtual key.
VK_EURO_SIGN
- Static variable in class java.awt.event.
KeyEvent
Constant for the Euro currency sign key.
VK_EXCLAMATION_MARK
- Static variable in class java.awt.event.
KeyEvent
Constant for the "!"
VK_F
- Static variable in class java.awt.event.
KeyEvent
Constant for the "F" key.
VK_F1
- Static variable in class java.awt.event.
KeyEvent
Constant for the F1 function key.
VK_F10
- Static variable in class java.awt.event.
KeyEvent
Constant for the F10 function key.
VK_F11
- Static variable in class java.awt.event.
KeyEvent
Constant for the F11 function key.
VK_F12
- Static variable in class java.awt.event.
KeyEvent
Constant for the F12 function key.
VK_F13
- Static variable in class java.awt.event.
KeyEvent
Constant for the F13 function key.
VK_F14
- Static variable in class java.awt.event.
KeyEvent
Constant for the F14 function key.
VK_F15
- Static variable in class java.awt.event.
KeyEvent
Constant for the F15 function key.
VK_F16
- Static variable in class java.awt.event.
KeyEvent
Constant for the F16 function key.
VK_F17
- Static variable in class java.awt.event.
KeyEvent
Constant for the F17 function key.
VK_F18
- Static variable in class java.awt.event.
KeyEvent
Constant for the F18 function key.
VK_F19
- Static variable in class java.awt.event.
KeyEvent
Constant for the F19 function key.
VK_F2
- Static variable in class java.awt.event.
KeyEvent
Constant for the F2 function key.
VK_F20
- Static variable in class java.awt.event.
KeyEvent
Constant for the F20 function key.
VK_F21
- Static variable in class java.awt.event.
KeyEvent
Constant for the F21 function key.
VK_F22
- Static variable in class java.awt.event.
KeyEvent
Constant for the F22 function key.
VK_F23
- Static variable in class java.awt.event.
KeyEvent
Constant for the F23 function key.
VK_F24
- Static variable in class java.awt.event.
KeyEvent
Constant for the F24 function key.
VK_F3
- Static variable in class java.awt.event.
KeyEvent
Constant for the F3 function key.
VK_F4
- Static variable in class java.awt.event.
KeyEvent
Constant for the F4 function key.
VK_F5
- Static variable in class java.awt.event.
KeyEvent
Constant for the F5 function key.
VK_F6
- Static variable in class java.awt.event.
KeyEvent
Constant for the F6 function key.
VK_F7
- Static variable in class java.awt.event.
KeyEvent
Constant for the F7 function key.
VK_F8
- Static variable in class java.awt.event.
KeyEvent
Constant for the F8 function key.
VK_F9
- Static variable in class java.awt.event.
KeyEvent
Constant for the F9 function key.
VK_FINAL
- Static variable in class java.awt.event.
KeyEvent
Constant for the FINAL key.
VK_FIND
- Static variable in class java.awt.event.
KeyEvent
Constant for the Find key.
VK_FULL_WIDTH
- Static variable in class java.awt.event.
KeyEvent
Constant for the Full-Width Characters function key.
VK_G
- Static variable in class java.awt.event.
KeyEvent
Constant for the "G" key.
VK_GREATER
- Static variable in class java.awt.event.
KeyEvent
Constant for the ">" key.
VK_H
- Static variable in class java.awt.event.
KeyEvent
Constant for the "H" key.
VK_HALF_WIDTH
- Static variable in class java.awt.event.
KeyEvent
Constant for the Half-Width Characters function key.
VK_HELP
- Static variable in class java.awt.event.
KeyEvent
Constant for the HELP key.
VK_HIRAGANA
- Static variable in class java.awt.event.
KeyEvent
Constant for the Hiragana function key.
VK_HOME
- Static variable in class java.awt.event.
KeyEvent
Constant for the HOME virtual key.
VK_I
- Static variable in class java.awt.event.
KeyEvent
Constant for the "I" key.
VK_INPUT_METHOD_ON_OFF
- Static variable in class java.awt.event.
KeyEvent
Constant for the input method on/off key.
VK_INSERT
- Static variable in class java.awt.event.
KeyEvent
Constant for the INSERT key.
VK_INVERTED_EXCLAMATION_MARK
- Static variable in class java.awt.event.
KeyEvent
Constant for the inverted exclamation mark key.
VK_J
- Static variable in class java.awt.event.
KeyEvent
Constant for the "J" key.
VK_JAPANESE_HIRAGANA
- Static variable in class java.awt.event.
KeyEvent
Constant for the Japanese-Hiragana function key.
VK_JAPANESE_KATAKANA
- Static variable in class java.awt.event.
KeyEvent
Constant for the Japanese-Katakana function key.
VK_JAPANESE_ROMAN
- Static variable in class java.awt.event.
KeyEvent
Constant for the Japanese-Roman function key.
VK_K
- Static variable in class java.awt.event.
KeyEvent
Constant for the "K" key.
VK_KANA
- Static variable in class java.awt.event.
KeyEvent
Constant for the KANA lock key.
VK_KANA_LOCK
- Static variable in class java.awt.event.
KeyEvent
Constant for the locking Kana function key.
VK_KANJI
- Static variable in class java.awt.event.
KeyEvent
Constant for KANJI.
VK_KATAKANA
- Static variable in class java.awt.event.
KeyEvent
Constant for the Katakana function key.
VK_KP_DOWN
- Static variable in class java.awt.event.
KeyEvent
Constant for the numeric keypad
down
arrow key.
VK_KP_LEFT
- Static variable in class java.awt.event.
KeyEvent
Constant for the numeric keypad
left
arrow key.
VK_KP_RIGHT
- Static variable in class java.awt.event.
KeyEvent
Constant for the numeric keypad
right
arrow key.
VK_KP_UP
- Static variable in class java.awt.event.
KeyEvent
Constant for the numeric keypad
up
arrow key.
VK_L
- Static variable in class java.awt.event.
KeyEvent
Constant for the "L" key.
VK_LEFT
- Static variable in class java.awt.event.
KeyEvent
Constant for the non-numpad
left
arrow key.
VK_LEFT_PARENTHESIS
- Static variable in class java.awt.event.
KeyEvent
Constant for the "(" key.
VK_LESS
- Static variable in class java.awt.event.
KeyEvent
Constant for the "<" key.
VK_M
- Static variable in class java.awt.event.
KeyEvent
Constant for the "M" key.
VK_META
- Static variable in class java.awt.event.
KeyEvent
Constant for the META key.
VK_MINUS
- Static variable in class java.awt.event.
KeyEvent
Constant for the minus key, "-"
VK_MODECHANGE
- Static variable in class java.awt.event.
KeyEvent
Constant for the MODECHANGE key.
VK_MULTIPLY
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad multiply key.
VK_N
- Static variable in class java.awt.event.
KeyEvent
Constant for the "N" key.
VK_NONCONVERT
- Static variable in class java.awt.event.
KeyEvent
Constant for the Don't Convert function key.
VK_NUM_LOCK
- Static variable in class java.awt.event.
KeyEvent
Constant for the NUM_LOCK key.
VK_NUMBER_SIGN
- Static variable in class java.awt.event.
KeyEvent
Constant for the "#" key.
VK_NUMPAD0
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "0" key.
VK_NUMPAD1
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "1" key.
VK_NUMPAD2
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "2" key.
VK_NUMPAD3
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "3" key.
VK_NUMPAD4
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "4" key.
VK_NUMPAD5
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "5" key.
VK_NUMPAD6
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "6" key.
VK_NUMPAD7
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "7" key.
VK_NUMPAD8
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "8" key.
VK_NUMPAD9
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad "9" key.
VK_O
- Static variable in class java.awt.event.
KeyEvent
Constant for the "O" key.
VK_OPEN_BRACKET
- Static variable in class java.awt.event.
KeyEvent
Constant for the open bracket key, "["
VK_P
- Static variable in class java.awt.event.
KeyEvent
Constant for the "P" key.
VK_PAGE_DOWN
- Static variable in class java.awt.event.
KeyEvent
Constant for the PAGE_DOWN virtual key.
VK_PAGE_UP
- Static variable in class java.awt.event.
KeyEvent
Constant for the PAGE_UP virtual key.
VK_PASTE
- Static variable in class java.awt.event.
KeyEvent
Constant for the Paste key.
VK_PAUSE
- Static variable in class java.awt.event.
KeyEvent
Constant for the PAUSE virtual key.
VK_PERIOD
- Static variable in class java.awt.event.
KeyEvent
Constant for the period key, "."
VK_PLUS
- Static variable in class java.awt.event.
KeyEvent
Constant for the "+" key.
VK_PREVIOUS_CANDIDATE
- Static variable in class java.awt.event.
KeyEvent
Constant for the Previous Candidate function key.
VK_PRINTSCREEN
- Static variable in class java.awt.event.
KeyEvent
Constant for the PRINTSCREEN key.
VK_PROPS
- Static variable in class java.awt.event.
KeyEvent
Constant for the Props key.
VK_Q
- Static variable in class java.awt.event.
KeyEvent
Constant for the "Q" key.
VK_QUOTE
- Static variable in class java.awt.event.
KeyEvent
Constant for the QUOTE key.
VK_QUOTEDBL
- Static variable in class java.awt.event.
KeyEvent
Constant for the """" key.
VK_R
- Static variable in class java.awt.event.
KeyEvent
Constant for the "R" key.
VK_RIGHT
- Static variable in class java.awt.event.
KeyEvent
Constant for the non-numpad
right
arrow key.
VK_RIGHT_PARENTHESIS
- Static variable in class java.awt.event.
KeyEvent
Constant for the ")" key.
VK_ROMAN_CHARACTERS
- Static variable in class java.awt.event.
KeyEvent
Constant for the Roman Characters function key.
VK_S
- Static variable in class java.awt.event.
KeyEvent
Constant for the "S" key.
VK_SCROLL_LOCK
- Static variable in class java.awt.event.
KeyEvent
Constant for the SCROLL_LOCK key.
VK_SEMICOLON
- Static variable in class java.awt.event.
KeyEvent
Constant for the semicolon key, ";"
VK_SEPARATER
- Static variable in class java.awt.event.
KeyEvent
This constant is obsolete, and is included only for backwards
 compatibility.
VK_SEPARATOR
- Static variable in class java.awt.event.
KeyEvent
Constant for the Numpad Separator key.
VK_SHIFT
- Static variable in class java.awt.event.
KeyEvent
Constant for the SHIFT virtual key.
VK_SLASH
- Static variable in class java.awt.event.
KeyEvent
Constant for the forward slash key, "/"
VK_SPACE
- Static variable in class java.awt.event.
KeyEvent
Constant for the SPACE virtual key.
VK_STOP
- Static variable in class java.awt.event.
KeyEvent
Constant for the Stop key.
VK_SUBTRACT
- Static variable in class java.awt.event.
KeyEvent
Constant for the number pad subtract key.
VK_T
- Static variable in class java.awt.event.
KeyEvent
Constant for the "T" key.
VK_TAB
- Static variable in class java.awt.event.
KeyEvent
Constant for the TAB virtual key.
VK_U
- Static variable in class java.awt.event.
KeyEvent
Constant for the "U" key.
VK_UNDEFINED
- Static variable in class java.awt.event.
KeyEvent
This value is used to indicate that the keyCode is unknown.
VK_UNDERSCORE
- Static variable in class java.awt.event.
KeyEvent
Constant for the "_" key.
VK_UNDO
- Static variable in class java.awt.event.
KeyEvent
Constant for the Undo key.
VK_UP
- Static variable in class java.awt.event.
KeyEvent
Constant for the non-numpad
up
arrow key.
VK_V
- Static variable in class java.awt.event.
KeyEvent
Constant for the "V" key.
VK_W
- Static variable in class java.awt.event.
KeyEvent
Constant for the "W" key.
VK_WINDOWS
- Static variable in class java.awt.event.
KeyEvent
Constant for the Microsoft Windows "Windows" key.
VK_X
- Static variable in class java.awt.event.
KeyEvent
Constant for the "X" key.
VK_Y
- Static variable in class java.awt.event.
KeyEvent
Constant for the "Y" key.
VK_Z
- Static variable in class java.awt.event.
KeyEvent
Constant for the "Z" key.
VLINK
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "vlink"
vm()
- Method in class jdk.jshell.execution.
JdiDefaultExecutionControl
vm()
- Method in class jdk.jshell.execution.
JdiExecutionControl
Returns the JDI
VirtualMachine
instance.
vm()
- Method in class jdk.jshell.execution.
JdiInitiator
Returns the resulting
VirtualMachine
instance.
VM_CREATION
- Enum constant in enum class com.sun.management.
VMOption.Origin
The VM option was set at VM creation time typically
 as a command line argument to the launcher or
 an argument passed to the VM created using the
 JNI invocation interface.
VMCannotBeModifiedException
- Exception Class in
com.sun.jdi
Thrown to indicate that the operation is invalid because it would
 modify the VM and the VM is read-only.
VMCannotBeModifiedException()
- Constructor for exception class com.sun.jdi.
VMCannotBeModifiedException
VMCannotBeModifiedException(String)
- Constructor for exception class com.sun.jdi.
VMCannotBeModifiedException
VMDeathEvent
- Interface in
com.sun.jdi.event
Notification of target VM termination.
VMDeathRequest
- Interface in
com.sun.jdi.request
Request for notification when the target VM terminates.
vmDeathRequests()
- Method in interface com.sun.jdi.request.
EventRequestManager
Return an unmodifiable list of the enabled and disabled VM death requests.
VMDisconnectedException
- Exception Class in
com.sun.jdi
Unchecked exception thrown to indicate that the
 requested operation cannot be
 completed because there is no longer a connection to the target VM.
VMDisconnectedException()
- Constructor for exception class com.sun.jdi.
VMDisconnectedException
VMDisconnectedException(String)
- Constructor for exception class com.sun.jdi.
VMDisconnectedException
VMDisconnectEvent
- Interface in
com.sun.jdi.event
Notification of disconnection from target VM.
VMID
- Class in
java.rmi.dgc
A VMID is a identifier that is unique across all Java virtual
 machines.
VMID()
- Constructor for class java.rmi.dgc.
VMID
Create a new VMID.
VMMismatchException
- Exception Class in
com.sun.jdi
Thrown to indicate that the requested operation cannot be
 completed because the mirror from one target VM is being
 combined with a mirror from another target VM.
VMMismatchException()
- Constructor for exception class com.sun.jdi.
VMMismatchException
VMMismatchException(String)
- Constructor for exception class com.sun.jdi.
VMMismatchException
VMOption
- Class in
com.sun.management
Information about a VM option including its value and
 where the value came from which is referred as its
origin
.
VMOption(String, String, boolean, VMOption.Origin)
- Constructor for class com.sun.management.
VMOption
Constructs a
VMOption
.
VMOption.Origin
- Enum Class in
com.sun.management
Origin of the value of a VM option.
VMOutOfMemoryException
- Exception Class in
com.sun.jdi
Thrown to indicate that the requested operation cannot be
 completed because the target VM has run out of memory.
VMOutOfMemoryException()
- Constructor for exception class com.sun.jdi.
VMOutOfMemoryException
VMOutOfMemoryException(String)
- Constructor for exception class com.sun.jdi.
VMOutOfMemoryException
VMStartEvent
- Interface in
com.sun.jdi.event
Notification of initialization of a target VM.
VMStartException
- Exception Class in
com.sun.jdi.connect
A target VM was successfully launched, but terminated with an
 error before a connection could be established.
VMStartException(Process)
- Constructor for exception class com.sun.jdi.connect.
VMStartException
VMStartException(String, Process)
- Constructor for exception class com.sun.jdi.connect.
VMStartException
VoiceStatus
- Class in
javax.sound.midi
A
VoiceStatus
object contains information about the current status of
 one of the voices produced by a
Synthesizer
.
VoiceStatus()
- Constructor for class javax.sound.midi.
VoiceStatus
Constructs a
VoiceStatus
.
Void
- Class in
java.lang
The
Void
class is an uninstantiable placeholder class to hold a
 reference to the
Class
object representing the Java keyword
 void.
VOID
- Enum constant in enum class javax.lang.model.type.
TypeKind
The pseudo-type corresponding to the keyword
void
.
VOID
- Static variable in class javax.management.openmbean.
SimpleType
The
SimpleType
instance describing values whose
 Java class name is
java.lang.Void
.
VoidType
- Interface in
com.sun.jdi
The type of all primitive
void
values
 accessed in the target VM.
VoidValue
- Interface in
com.sun.jdi
Provides access to a primitive
void
value in
 the target VM.
VOLATILE
- Enum constant in enum class java.lang.reflect.
AccessFlag
The access flag
ACC_VOLATILE
, corresponding to the
 source modifier
volatile
, with a mask
 value of
0x0040
.
VOLATILE
- Enum constant in enum class javax.lang.model.element.
Modifier
The modifier
volatile
VOLATILE
- Static variable in class java.lang.reflect.
Modifier
The
int
value representing the
volatile
modifier.
VolatileCallSite
- Class in
java.lang.invoke
A
VolatileCallSite
is a
CallSite
whose target acts like a volatile variable.
VolatileCallSite(MethodHandle)
- Constructor for class java.lang.invoke.
VolatileCallSite
Creates a call site with a volatile binding to its target.
VolatileCallSite(MethodType)
- Constructor for class java.lang.invoke.
VolatileCallSite
Creates a call site with a volatile binding to its target.
VolatileImage
- Class in
java.awt.image
VolatileImage is an image which can lose its
 contents at any time due to circumstances beyond the control of the
 application (e.g., situations caused by the operating system or by
 other applications).
VolatileImage()
- Constructor for class java.awt.image.
VolatileImage
Constructor for subclasses to call.
volume
- Variable in class javax.sound.midi.
VoiceStatus
The current MIDI volume level for the voice.
VOLUME
- Static variable in class javax.sound.sampled.
FloatControl.Type
Represents a control for the volume on a line.
vsb
- Variable in class javax.swing.
ScrollPaneLayout
The scrollpane's vertical scrollbar child.
vsbChangeListener
- Variable in class javax.swing.plaf.basic.
BasicScrollPaneUI
ChangeListener
installed on the vertical scrollbar.
VSBChangeListener()
- Constructor for class javax.swing.plaf.basic.
BasicScrollPaneUI.VSBChangeListener
Deprecated.
Constructs a
VSBChangeListener
.
vsbPolicy
- Variable in class javax.swing.
ScrollPaneLayout
The display policy for the vertical scrollbar.
VSPACE
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "vspace"
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.