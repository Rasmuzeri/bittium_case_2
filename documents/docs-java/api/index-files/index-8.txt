H-Index (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Index
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
H
1. Heap
- Search tag in interface java.lang.management.MemoryMXBean
Section
2.0 How a RowSet Object Gets Its Provider
- Search tag in class javax.sql.rowset.spi.SyncProvider
Section
4.0 Handling of Parameters Behind the Scenes
- Search tag in class javax.sql.rowset.BaseRowSet
Section
h
- Variable in class java.lang.reflect.
Proxy
the invocation handler for this proxy instance.
H1
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <h1>
H2
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <h2>
H3
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <h3>
H4
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <h4>
H5
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <h5>
H6
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <h6>
HALF_DAYS
- Enum constant in enum class java.time.temporal.
ChronoUnit
Unit that represents the concept of half a day, as used in AM/PM.
HALF_DOWN
- Enum constant in enum class java.math.
RoundingMode
Rounding mode to round towards "nearest neighbor"
 unless both neighbors are equidistant, in which case round
 down.
HALF_EVEN
- Enum constant in enum class java.math.
RoundingMode
Rounding mode to round towards the "nearest neighbor"
 unless both neighbors are equidistant, in which case, round
 towards the even neighbor.
HALF_UP
- Enum constant in enum class java.math.
RoundingMode
Rounding mode to round towards "nearest neighbor"
 unless both neighbors are equidistant, in which case round up.
HALFWIDTH_AND_FULLWIDTH_FORMS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Halfwidth and Fullwidth Forms" Unicode character
 block.
HALFWIDTH_KATAKANA
- Static variable in class java.awt.im.
InputSubset
Constant for the halfwidth katakana subset of the Unicode halfwidth and
 fullwidth forms character block.
HALIGN
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "halign"
halt(int)
- Method in class java.lang.
Runtime
Immediately
terminates
the Java Virtual Machine.
HAN
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Han".
HAND_CURSOR
- Static variable in class java.awt.
Cursor
The hand cursor type.
HAND_CURSOR
- Static variable in class java.awt.
Frame
Deprecated.
replaced by
Cursor.HAND_CURSOR
.
handle(short, String, Object, Node, Node)
- Method in interface org.w3c.dom.
UserDataHandler
This method is called whenever the node for which this handler is
 registered is imported or cloned.
handle(HttpExchange)
- Method in interface com.sun.net.httpserver.
HttpHandler
Handle the given request and generate an appropriate response.
handle(BiFunction<? super T, Throwable, ? extends U>)
- Method in class java.util.concurrent.
CompletableFuture
handle(BiFunction<? super T, Throwable, ? extends U>)
- Method in interface java.util.concurrent.
CompletionStage
Returns a new CompletionStage that, when this stage completes
 either normally or exceptionally, is executed with this stage's
 result and exception as arguments to the supplied function.
handle(Callback[])
- Method in class com.sun.security.auth.callback.
TextCallbackHandler
Handles the specified set of callbacks.
handle(Callback[])
- Method in interface javax.security.auth.callback.
CallbackHandler
Retrieve or display the information requested in the
 provided Callbacks.
handleAbout(AboutEvent)
- Method in interface java.awt.desktop.
AboutHandler
Called when the application is asked to show its about dialog.
handleAsync(BiFunction<? super T, Throwable, ? extends U>)
- Method in class java.util.concurrent.
CompletableFuture
handleAsync(BiFunction<? super T, Throwable, ? extends U>)
- Method in interface java.util.concurrent.
CompletionStage
Returns a new CompletionStage that, when this stage completes
 either normally or exceptionally, is executed using this stage's
 default asynchronous execution facility, with this stage's
 result and exception as arguments to the supplied function.
handleAsync(BiFunction<? super T, Throwable, ? extends U>, Executor)
- Method in class java.util.concurrent.
CompletableFuture
handleAsync(BiFunction<? super T, Throwable, ? extends U>, Executor)
- Method in interface java.util.concurrent.
CompletionStage
Returns a new CompletionStage that, when this stage completes
 either normally or exceptionally, is executed using the
 supplied executor, with this stage's result and exception as
 arguments to the supplied function.
handleComment(char[])
- Method in class javax.swing.text.html.parser.
Parser
Called when an HTML comment is encountered.
handleComment(char[], int)
- Method in class javax.swing.text.html.
HTMLEditorKit.ParserCallback
Called by the parser to indicate a block of comment was
 encountered.
handleComplete(StructuredTaskScope.Subtask<? extends T>)
- Method in class java.util.concurrent.
StructuredTaskScope
PREVIEW
Invoked by a subtask when it completes successfully or fails in this task scope.
handleEmptyTag(TagElement)
- Method in class javax.swing.text.html.parser.
DocumentParser
Handle Empty Tag.
handleEmptyTag(TagElement)
- Method in class javax.swing.text.html.parser.
Parser
Called when an empty tag is encountered.
handleEndOfLineString(String)
- Method in class javax.swing.text.html.
HTMLDocument.HTMLReader
This is invoked after the stream has been parsed, but before
flush
.
handleEndOfLineString(String)
- Method in class javax.swing.text.html.
HTMLEditorKit.ParserCallback
This is invoked after the stream has been parsed, but before
flush
.
handleEndTag(HTML.Tag, int)
- Method in class javax.swing.text.html.
HTMLDocument.HTMLReader
Callback from the parser.
handleEndTag(HTML.Tag, int)
- Method in class javax.swing.text.html.
HTMLEditorKit.ParserCallback
Callback from the parser.
handleEndTag(TagElement)
- Method in class javax.swing.text.html.parser.
DocumentParser
Handle End Tag.
handleEndTag(TagElement)
- Method in class javax.swing.text.html.parser.
Parser
Called when an end tag is encountered.
handleEOFInComment()
- Method in class javax.swing.text.html.parser.
Parser
Called when the content terminates without closing the HTML comment.
handleError(int, String)
- Method in class javax.swing.text.html.parser.
Parser
An error has occurred.
handleError(String, int)
- Method in class javax.swing.text.html.
HTMLEditorKit.ParserCallback
Callback from the parser.
handleError(DOMError)
- Method in interface org.w3c.dom.
DOMErrorHandler
This method is called on the error handler when an error occurs.
handleEvent(Event)
- Method in class java.awt.
Component
Deprecated.
As of JDK version 1.1
 replaced by processEvent(AWTEvent).
handleEvent(Event)
- Method in interface org.w3c.dom.events.
EventListener
This method is called whenever an event occurs of the type for which
 the
EventListener
interface was registered.
handleExpandControlClick(TreePath, int, int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Messaged when the user clicks the particular row, this invokes
toggleExpandState
.
handleGetObject(String)
- Method in class java.util.
ListResourceBundle
handleGetObject(String)
- Method in class java.util.
PropertyResourceBundle
handleGetObject(String)
- Method in class java.util.
ResourceBundle
Gets an object for the given key from this resource bundle.
handleJustify(float)
- Method in class java.awt.font.
TextLayout
Justify this layout.
handleKeySet()
- Method in class java.util.
ListResourceBundle
Returns a
Set
of the keys contained
only
in this
ResourceBundle
.
handleKeySet()
- Method in class java.util.
PropertyResourceBundle
Returns a
Set
of the keys contained
only
in this
ResourceBundle
.
handleKeySet()
- Method in class java.util.
ResourceBundle
Returns a
Set
of the keys contained
only
in this
ResourceBundle
.
handleMBeanUnregistration(ObjectName, String)
- Method in interface javax.management.relation.
Relation
Callback used by the Relation Service when a MBean referenced in a role
 is unregistered.
handleMBeanUnregistration(ObjectName, String)
- Method in class javax.management.relation.
RelationSupport
Callback used by the Relation Service when a MBean referenced in a role
 is unregistered.
handleNotification(AssociationChangeNotification, T)
- Method in class com.sun.nio.sctp.
AbstractNotificationHandler
Invoked when an
AssociationChangeNotification
is received from
 the SCTP stack.
handleNotification(Notification, T)
- Method in class com.sun.nio.sctp.
AbstractNotificationHandler
Invoked when an implementation specific notification is received from the
 SCTP stack.
handleNotification(Notification, T)
- Method in interface com.sun.nio.sctp.
NotificationHandler
Invoked when a notification is received from the SCTP stack.
handleNotification(PeerAddressChangeNotification, T)
- Method in class com.sun.nio.sctp.
AbstractNotificationHandler
Invoked when an
PeerAddressChangeNotification
is received from
 the SCTP stack.
handleNotification(SendFailedNotification, T)
- Method in class com.sun.nio.sctp.
AbstractNotificationHandler
Invoked when an
SendFailedNotification
is received from
 the SCTP stack.
handleNotification(ShutdownNotification, T)
- Method in class com.sun.nio.sctp.
AbstractNotificationHandler
Invoked when an
ShutdownNotification
is received from
 the SCTP stack.
handleNotification(NotificationListener, Notification, Object)
- Method in class javax.management.
NotificationBroadcasterSupport
This method is called by
sendNotification
for each listener in order to send the
 notification to that listener.
handleNotification(Notification, Object)
- Method in interface javax.management.
NotificationListener
Invoked when a JMX notification occurs.
handleNotification(Notification, Object)
- Method in class javax.management.relation.
RelationService
Invoked when a JMX notification occurs.
handleOption(String, Iterator<String>)
- Method in class javax.tools.
ForwardingJavaFileManager
handleOption(String, Iterator<String>)
- Method in interface javax.tools.
JavaFileManager
Handles one option.
handleOrElse(Predicate<Request>, HttpHandler, HttpHandler)
- Static method in class com.sun.net.httpserver.
HttpHandlers
Complements a conditional
HttpHandler
with another handler.
handlePreferences(PreferencesEvent)
- Method in interface java.awt.desktop.
PreferencesHandler
Called when the app is asked to show its preferences UI.
handleQuitRequestWith(QuitEvent, QuitResponse)
- Method in interface java.awt.desktop.
QuitHandler
Invoked when the application is asked to quit.
Handler
- Class in
java.util.logging
A
Handler
object takes log messages from a
Logger
and
 exports them.
Handler()
- Constructor for class java.util.logging.
Handler
Default constructor.
HandlerBase
- Class in
org.xml.sax
Deprecated.
This class works with the deprecated
DocumentHandler
interface.  It has been replaced by the SAX2
DefaultHandler
class.
HandlerBase()
- Constructor for class org.xml.sax.
HandlerBase
Deprecated.
Creates a
HandlerBase
.
HandlerResult
- Enum Class in
com.sun.nio.sctp
Defines notification handler results.
handleSimpleTag(HTML.Tag, MutableAttributeSet, int)
- Method in class javax.swing.text.html.
HTMLDocument.HTMLReader
Callback from the parser.
handleSimpleTag(HTML.Tag, MutableAttributeSet, int)
- Method in class javax.swing.text.html.
HTMLEditorKit.ParserCallback
Callback from the parser.
handleStartTag(HTML.Tag, MutableAttributeSet, int)
- Method in class javax.swing.text.html.
HTMLDocument.HTMLReader
Callback from the parser.
handleStartTag(HTML.Tag, MutableAttributeSet, int)
- Method in class javax.swing.text.html.
HTMLEditorKit.ParserCallback
Callback from the parser.
handleStartTag(TagElement)
- Method in class javax.swing.text.html.parser.
DocumentParser
Handle Start Tag.
handleStartTag(TagElement)
- Method in class javax.swing.text.html.parser.
Parser
Called when a start tag is encountered.
handleText(char[])
- Method in class javax.swing.text.html.parser.
DocumentParser
Handle Text.
handleText(char[])
- Method in class javax.swing.text.html.parser.
Parser
Called when PCDATA is encountered.
handleText(char[], int)
- Method in class javax.swing.text.html.
HTMLDocument.HTMLReader
Called by the parser to indicate a block of text was
 encountered.
handleText(char[], int)
- Method in class javax.swing.text.html.
HTMLEditorKit.ParserCallback
Called by the parser to indicate a block of text was
 encountered.
handleTitle(char[])
- Method in class javax.swing.text.html.parser.
Parser
Called when an HTML title tag is encountered.
Handling 90-Degree Rotations
- Search tag in class java.awt.geom.AffineTransform
Section
handshakeCompleted(HandshakeCompletedEvent)
- Method in interface javax.net.ssl.
HandshakeCompletedListener
This method is invoked on registered objects
 when a SSL handshake is completed.
HandshakeCompletedEvent
- Class in
javax.net.ssl
This event indicates that an SSL handshake completed on a given
 SSL connection.
HandshakeCompletedEvent(SSLSocket, SSLSession)
- Constructor for class javax.net.ssl.
HandshakeCompletedEvent
Constructs a new HandshakeCompletedEvent.
HandshakeCompletedListener
- Interface in
javax.net.ssl
This interface is implemented by any class which wants to receive
 notifications about the completion of an SSL protocol handshake
 on a given SSL connection.
HANGING_BASELINE
- Static variable in class java.awt.font.
GraphicAttribute
Aligns origin of graphic to hanging baseline of line.
HANGING_BASELINE
- Static variable in class java.awt.
Font
The baseline used in Devanagari and similar scripts when laying
 out text.
HANGUL
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Hangul".
HANGUL_COMPATIBILITY_JAMO
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hangul Compatibility Jamo" Unicode character block.
HANGUL_JAMO
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hangul Jamo" Unicode character block.
HANGUL_JAMO_EXTENDED_A
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hangul Jamo Extended-A" Unicode character block.
HANGUL_JAMO_EXTENDED_B
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hangul Jamo Extended-B" Unicode character block.
HANGUL_SYLLABLES
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hangul Syllables" Unicode character block.
HANIFI_ROHINGYA
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Hanifi Rohingya".
HANIFI_ROHINGYA
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hanifi Rohingya" Unicode
 character block.
HANJA
- Static variable in class java.awt.im.
InputSubset
Constant for all Han characters used in writing Korean, including a
 subset of the CJK unified ideographs as well as Korean Han characters
 that may be defined as surrogate characters.
HANUNOO
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Hanunoo".
HANUNOO
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hanunoo" Unicode character block.
hardDriveIcon
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Hard drive icon
Hardware platform dependencies and limitations
- Search tag in class jdk.incubator.vector.Vector
Section
hasAlpha()
- Method in class java.awt.image.
ColorModel
Returns whether or not alpha is supported in this
ColorModel
.
hasAnchoringBounds()
- Method in class java.util.regex.
Matcher
Queries the anchoring of region bounds for this matcher.
hasArray()
- Method in class java.nio.
Buffer
Tells whether or not this buffer is backed by an accessible
 array.
hasArray()
- Method in class java.nio.
ByteBuffer
Tells whether or not this buffer is backed by an accessible byte
 array.
hasArray()
- Method in class java.nio.
CharBuffer
Tells whether or not this buffer is backed by an accessible char
 array.
hasArray()
- Method in class java.nio.
DoubleBuffer
Tells whether or not this buffer is backed by an accessible double
 array.
hasArray()
- Method in class java.nio.
FloatBuffer
Tells whether or not this buffer is backed by an accessible float
 array.
hasArray()
- Method in class java.nio.
IntBuffer
Tells whether or not this buffer is backed by an accessible int
 array.
hasArray()
- Method in class java.nio.
LongBuffer
Tells whether or not this buffer is backed by an accessible long
 array.
hasArray()
- Method in class java.nio.
ShortBuffer
Tells whether or not this buffer is backed by an accessible short
 array.
hasAttribute(String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
hasAttribute(String)
- Method in interface org.w3c.dom.
Element
Returns
true
when an attribute with a given name is
 specified on this element or has a default value,
false
otherwise.
hasAttributeNS(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Equivalent to
hasAttribute(localName)
.
hasAttributeNS(String, String)
- Method in interface org.w3c.dom.
Element
Returns
true
when an attribute with a given local name and
 namespace URI is specified on this element or has a default value,
false
otherwise.
hasAttributes()
- Method in class javax.imageio.metadata.
IIOMetadataNode
hasAttributes()
- Method in interface org.w3c.dom.
Node
Returns whether this node (if it is an element) has any attributes.
hasBeenExpanded(TreePath)
- Method in class javax.swing.
JTree
Returns true if the node identified by the path has ever been
 expanded.
hasBeenInvalidated()
- Method in class java.lang.invoke.
SwitchPoint
Determines if this switch point has been invalidated yet.
hasBeenInvalidated()
- Method in class jdk.dynalink.linker.
GuardedInvocation
Returns true if and only if this guarded invocation has at least one
 invalidated switch point.
hasChanged()
- Method in class java.util.
Observable
Deprecated.
Tests if this object has changed.
hasCharacteristics(int)
- Method in interface java.util.
Spliterator
Returns
true
if this Spliterator's
Spliterator.characteristics()
contain all of the given characteristics.
hasChildNodes()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns
true
if this node has child nodes.
hasChildNodes()
- Method in interface org.w3c.dom.
Node
Returns whether this node has any children.
hasChildren
- Variable in class javax.swing.
JTree.DynamicUtilTreeNode
Does the this
JTree
have children?
hasContended()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Queries whether any threads have ever contended to acquire this
 synchronizer; that is, if an acquire method has ever blocked.
hasContended()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Queries whether any threads have ever contended to acquire this
 synchronizer; that is, if an acquire method has ever blocked.
hasController()
- Method in class javax.imageio.
IIOParam
Returns
true
if there is a controller installed
 for this
IIOParam
object.
hasController()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns
true
if there is a controller installed
 for this
IIOMetadata
object.
HasControls
- Interface in
javax.naming.ldap
This interface is for returning controls with objects returned
 in NamingEnumerations.
hasCustomComponents
- Variable in class javax.swing.plaf.basic.
BasicOptionPaneUI
This is set to true in validateComponent if a Component is contained
 in either the message or the buttons.
hasDefaultValue()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns
true
if this
OpenMBeanAttributeInfoSupport
instance specifies a non-null
 default value for the described attribute,
false
otherwise.
hasDefaultValue()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns
true
if this parameter has a specified default
 value, or
false
otherwise.
hasDefaultValue()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns
true
if this
OpenMBeanParameterInfoSupport
instance specifies a non-null
 default value for the described parameter,
false
otherwise.
hasDirectory()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns whether the field has a
TIFFDirectory
.
hasDynamicLocaleList()
- Method in interface java.awt.im.spi.
InputMethodDescriptor
Returns whether the list of available locales can change
 at runtime.
hasEntered
- Variable in class javax.swing.plaf.basic.
BasicComboPopup
true
if the mouse cursor is in the popup.
hasExpired()
- Method in class java.net.
HttpCookie
Reports whether this HTTP cookie has expired or not.
hasExtensions()
- Method in class java.security.cert.
X509CRLEntry
Returns true if this CRL entry has extensions.
hasExtensions()
- Method in class java.util.
Locale
Returns
true
if this
Locale
has any
extensions
.
hasFeature(String, String)
- Method in interface org.w3c.dom.
DOMImplementation
Test if the DOM implementation implements a specific feature and
 version, as specified in
DOM Features
.
hasField(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns
true
if a field with the given name exists,
false
otherwise.
hasFocus
- Variable in class javax.swing.plaf.basic.
BasicComboBoxUI
This protected field is implementation specific.
hasFocus
- Variable in class javax.swing.tree.
DefaultTreeCellRenderer
True if has focus.
hasFocus()
- Method in class java.awt.
Component
Returns
true
if this
Component
is the
 focus owner.
hasFullPrivilegeAccess()
- Method in class java.lang.invoke.
MethodHandles.Lookup
Returns
true
if this lookup has
full privilege access
,
 i.e.
hash(Object...)
- Static method in class java.util.
Objects
Generates a hash code for a sequence of input values.
HashAttributeSet
- Class in
javax.print.attribute
Class
HashAttributeSet
provides an
AttributeSet
implementation with characteristics of a hash map.
HashAttributeSet()
- Constructor for class javax.print.attribute.
HashAttributeSet
Construct a new, empty attribute set.
HashAttributeSet(Class<?>)
- Constructor for class javax.print.attribute.
HashAttributeSet
Construct a new, empty attribute set, where the members of the attribute
 set are restricted to the given interface.
HashAttributeSet(Attribute)
- Constructor for class javax.print.attribute.
HashAttributeSet
Construct a new attribute set, initially populated with the given
 attribute.
HashAttributeSet(Attribute[])
- Constructor for class javax.print.attribute.
HashAttributeSet
Construct a new attribute set, initially populated with the values from
 the given array.
HashAttributeSet(Attribute[], Class<?>)
- Constructor for class javax.print.attribute.
HashAttributeSet
Construct a new attribute set, where the members of the attribute set are
 restricted to the given interface.
HashAttributeSet(Attribute, Class<?>)
- Constructor for class javax.print.attribute.
HashAttributeSet
Construct a new attribute set, initially populated with the given
 attribute, where the members of the attribute set are restricted to the
 given interface.
HashAttributeSet(AttributeSet)
- Constructor for class javax.print.attribute.
HashAttributeSet
Construct a new attribute set, initially populated with the values from
 the given set.
HashAttributeSet(AttributeSet, Class<?>)
- Constructor for class javax.print.attribute.
HashAttributeSet
Construct a new attribute set, initially populated with the values from
 the given set where the members of the attribute set are restricted to
 the given interface.
hashCode()
- Method in class com.sun.java.accessibility.util.
Translator
Return hashcode.
hashCode()
- Method in interface com.sun.jdi.
BooleanValue
Returns the hash code value for this BooleanValue.
hashCode()
- Method in interface com.sun.jdi.
ByteValue
Returns the hash code value for this BooleanValue.
hashCode()
- Method in interface com.sun.jdi.
CharValue
Returns the hash code value for this CharValue.
hashCode()
- Method in interface com.sun.jdi.
DoubleValue
Returns the hash code value for this DoubleValue.
hashCode()
- Method in interface com.sun.jdi.
Field
Returns the hash code value for this Field.
hashCode()
- Method in interface com.sun.jdi.
FloatValue
Returns the hash code value for this FloatValue.
hashCode()
- Method in interface com.sun.jdi.
IntegerValue
Returns the hash code value for this IntegerValue.
hashCode()
- Method in interface com.sun.jdi.
LocalVariable
Returns the hash code value for this LocalVariable.
hashCode()
- Method in interface com.sun.jdi.
Location
Returns the hash code value for this Location.
hashCode()
- Method in interface com.sun.jdi.
LongValue
Returns the hash code value for this LongValue.
hashCode()
- Method in interface com.sun.jdi.
Method
Returns the hash code value for this Method.
hashCode()
- Method in interface com.sun.jdi.
ObjectReference
Returns the hash code value for this ObjectReference.
hashCode()
- Method in interface com.sun.jdi.
ReferenceType
Returns the hash code value for this ObjectReference.
hashCode()
- Method in interface com.sun.jdi.
ShortValue
Returns the hash code value for this ShortValue.
hashCode()
- Method in interface com.sun.jdi.
VoidValue
Returns the hash code value for this VoidValue.
hashCode()
- Method in class com.sun.management.
GcInfo
hashCode()
- Method in class com.sun.net.httpserver.
Headers
hashCode()
- Method in class com.sun.net.httpserver.
HttpPrincipal
Returns a hashcode for this
HttpPrincipal
.
hashCode()
- Method in class com.sun.nio.sctp.
SctpStandardSocketOptions.InitMaxStreams
Returns a hash code value for this init max streams.
hashCode()
- Method in class com.sun.security.auth.
LdapPrincipal
Computes the hash code for this principal.
hashCode()
- Method in class com.sun.security.auth.
NTDomainPrincipal
Return a hash code for this
NTDomainPrincipal
.
hashCode()
- Method in class com.sun.security.auth.
NTNumericCredential
Return a hash code for this
NTNumericCredential
.
hashCode()
- Method in class com.sun.security.auth.
NTSid
Return a hash code for this
NTSid
.
hashCode()
- Method in class com.sun.security.auth.
NTUserPrincipal
Return a hash code for this
NTUserPrincipal
.
hashCode()
- Method in class com.sun.security.auth.
UnixNumericGroupPrincipal
Return a hash code for this
UnixNumericGroupPrincipal
.
hashCode()
- Method in class com.sun.security.auth.
UnixNumericUserPrincipal
Return a hash code for this
UnixNumericUserPrincipal
.
hashCode()
- Method in class com.sun.security.auth.
UnixPrincipal
Return a hash code for this
UnixPrincipal
.
hashCode()
- Method in class com.sun.security.auth.
UserPrincipal
Returns a hash code for this principal.
hashCode()
- Method in class com.sun.tools.attach.
VirtualMachine
Returns a hash-code value for this VirtualMachine.
hashCode()
- Method in class com.sun.tools.attach.
VirtualMachineDescriptor
Returns a hash-code value for this VirtualMachineDescriptor.
hashCode()
- Method in class java.awt.
AlphaComposite
Returns the hashcode for this composite.
hashCode()
- Method in class java.awt.
BufferCapabilities.FlipContents
hashCode()
- Method in class java.awt.
JobAttributes.DefaultSelectionType
hashCode()
- Method in class java.awt.
JobAttributes.DestinationType
hashCode()
- Method in class java.awt.
JobAttributes.DialogType
hashCode()
- Method in class java.awt.
JobAttributes.MultipleDocumentHandlingType
hashCode()
- Method in class java.awt.
JobAttributes.SidesType
hashCode()
- Method in class java.awt.
PageAttributes.ColorType
hashCode()
- Method in class java.awt.
PageAttributes.MediaType
hashCode()
- Method in class java.awt.
PageAttributes.OrientationRequestedType
hashCode()
- Method in class java.awt.
PageAttributes.OriginType
hashCode()
- Method in class java.awt.
PageAttributes.PrintQualityType
hashCode()
- Method in class java.awt.
AWTKeyStroke
Returns a numeric value for this object that is likely to be unique,
 making it a good choice as the index value in a hash table.
hashCode()
- Method in class java.awt.
BasicStroke
Returns the hashcode for this stroke.
hashCode()
- Method in class java.awt.
Color
Computes the hash code for this
Color
.
hashCode()
- Method in class java.awt.datatransfer.
DataFlavor
Returns hash code for this
DataFlavor
.
hashCode()
- Method in class java.awt.
Dimension
Returns the hash code for this
Dimension
.
hashCode()
- Method in class java.awt.font.
FontRenderContext
Return a hashcode for this FontRenderContext.
hashCode()
- Method in class java.awt.
Font
Returns a hashcode for this
Font
.
hashCode()
- Method in class java.awt.font.
ImageGraphicAttribute
Returns a hashcode for this
ImageGraphicAttribute
.
hashCode()
- Method in class java.awt.font.
NumericShaper
Returns a hash code for this shaper.
hashCode()
- Method in class java.awt.font.
ShapeGraphicAttribute
Returns a hashcode for this
ShapeGraphicAttribute
.
hashCode()
- Method in class java.awt.font.
TextHitInfo
Returns the hash code.
hashCode()
- Method in class java.awt.font.
TransformAttribute
hashCode()
- Method in class java.awt.geom.
AffineTransform
Returns the hashcode for this transform.
hashCode()
- Method in class java.awt.geom.
Arc2D
Returns the hashcode for this
Arc2D
.
hashCode()
- Method in class java.awt.geom.
Ellipse2D
Returns the hashcode for this
Ellipse2D
.
hashCode()
- Method in class java.awt.geom.
Point2D
Returns the hashcode for this
Point2D
.
hashCode()
- Method in class java.awt.geom.
Rectangle2D
Returns the hashcode for this
Rectangle2D
.
hashCode()
- Method in class java.awt.geom.
RoundRectangle2D
Returns the hashcode for this
RoundRectangle2D
.
hashCode()
- Method in class java.awt.image.
ColorModel
This method simply delegates to the default implementation in
Object
which returns the system ID for the class.
hashCode()
- Method in class java.awt.image.
ComponentColorModel
Returns the hash code for this ComponentColorModel.
hashCode()
- Method in class java.awt.image.
IndexColorModel
Returns the hash code for IndexColorModel.
hashCode()
- Method in class java.awt.image.
PackedColorModel
Returns the hash code for this PackedColorModel.
hashCode()
- Method in class java.awt.
Insets
Returns the hash code for this Insets.
hashCode()
- Method in class java.awt.
JobAttributes
Returns a hash code value for this JobAttributes.
hashCode()
- Method in class java.awt.
MenuShortcut
Returns the hashcode for this MenuShortcut.
hashCode()
- Method in class java.awt.
PageAttributes
Returns a hash code value for this PageAttributes.
hashCode()
- Method in class java.awt.
RenderingHints
Returns the hash code value for this
RenderingHints
.
hashCode()
- Method in class java.awt.
RenderingHints.Key
The hash code for all Key objects will be the same as the
 system identity code of the object as defined by the
 System.identityHashCode() method.
hashCode()
- Method in class java.beans.
IndexedPropertyDescriptor
Returns a hash code value for the object.
hashCode()
- Method in class java.beans.
PropertyDescriptor
Returns a hash code value for the object.
hashCode()
- Method in class java.io.
File
Computes a hash code for this abstract pathname.
hashCode()
- Method in class java.io.
FilePermission
Returns the hash code value for this object.
hashCode()
- Method in interface java.lang.annotation.
Annotation
Returns the hash code of this annotation.
hashCode()
- Method in class java.lang.
Boolean
Returns a hash code for this
Boolean
object.
hashCode()
- Method in class java.lang.
Byte
Returns a hash code for this
Byte
; equal to the result
 of invoking
intValue()
.
hashCode()
- Method in class java.lang.
Character
Returns a hash code for this
Character
; equal to the result
 of invoking
charValue()
.
hashCode()
- Method in class java.lang.
Character.Subset
Returns the standard hash code as defined by the
Object.hashCode()
method.
hashCode()
- Method in class java.lang.constant.
DynamicCallSiteDesc
hashCode()
- Method in class java.lang.constant.
DynamicConstantDesc
hashCode()
- Method in class java.lang.
Double
Returns a hash code for this
Double
object.
hashCode()
- Method in class java.lang.
Enum
Returns a hash code for this enum constant.
hashCode()
- Method in class java.lang.
Float
Returns a hash code for this
Float
object.
hashCode()
- Method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Returns the hash code value for this layout.
hashCode()
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Returns the hash code value for this memory segment.
hashCode()
- Method in interface java.lang.foreign.
MemorySegment.Scope
PREVIEW
Returns the hash code of this scope object.
hashCode()
- Method in class java.lang.
Integer
Returns a hash code for this
Integer
.
hashCode()
- Method in class java.lang.invoke.
MethodType
Returns the hash code value for this method type.
hashCode()
- Method in class java.lang.
Long
Returns a hash code for this
Long
.
hashCode()
- Method in class java.lang.module.
ModuleDescriptor.Exports
Computes a hash code for this module export.
hashCode()
- Method in class java.lang.module.
ModuleDescriptor
Computes a hash code for this module descriptor.
hashCode()
- Method in class java.lang.module.
ModuleDescriptor.Opens
Computes a hash code for this module
Opens
.
hashCode()
- Method in class java.lang.module.
ModuleDescriptor.Provides
Computes a hash code for this
Provides
.
hashCode()
- Method in class java.lang.module.
ModuleDescriptor.Requires
Computes a hash code for this module dependence.
hashCode()
- Method in class java.lang.module.
ModuleDescriptor.Version
Computes a hash code for this module version.
hashCode()
- Method in class java.lang.module.
ResolvedModule
Computes a hash code for this resolved module.
hashCode()
- Method in class java.lang.
Object
Returns a hash code value for the object.
hashCode()
- Method in class java.lang.
Package
Return the hash code computed from the package name.
hashCode()
- Method in class java.lang.
ProcessBuilder.Redirect
Returns a hash code value for this
Redirect
.
hashCode()
- Method in interface java.lang.
ProcessHandle
Returns a hash code value for this ProcessHandle.
hashCode()
- Method in class java.lang.
Record
Returns a hash code value for the record.
hashCode()
- Method in class java.lang.reflect.
Constructor
Returns a hashcode for this
Constructor
.
hashCode()
- Method in class java.lang.reflect.
Field
Returns a hashcode for this
Field
.
hashCode()
- Method in class java.lang.reflect.
Method
Returns a hashcode for this
Method
.
hashCode()
- Method in class java.lang.reflect.
Parameter
Returns a hash code based on the executable's hash code and the
 index.
hashCode()
- Method in class java.lang.
Runtime.Version
Returns the hash code of this version.
hashCode()
- Method in class java.lang.
Short
Returns a hash code for this
Short
; equal to the result
 of invoking
intValue()
.
hashCode()
- Method in class java.lang.
StackTraceElement
Returns a hash code value for this stack trace element.
hashCode()
- Method in class java.lang.
String
Returns a hash code for this string.
hashCode()
- Method in class java.math.
BigDecimal
Returns the hash code for this
BigDecimal
.
hashCode()
- Method in class java.math.
BigInteger
Returns the hash code for this BigInteger.
hashCode()
- Method in class java.math.
MathContext
Returns the hash code for this
MathContext
.
hashCode()
- Method in class java.net.http.
HttpHeaders
Computes a hash code for this HTTP headers instance.
hashCode()
- Method in class java.net.http.
HttpRequest
Computes a hash code for this HTTP request instance.
hashCode()
- Method in class java.net.
HttpCookie
Returns the hash code of this HTTP cookie.
hashCode()
- Method in class java.net.
Inet4Address
Returns a hashcode for this IP address.
hashCode()
- Method in class java.net.
Inet6Address
Returns a hashcode for this IP address.
hashCode()
- Method in class java.net.
InetAddress
Returns a hashcode for this IP address.
hashCode()
- Method in class java.net.
InetSocketAddress
Returns a hashcode for this socket address.
hashCode()
- Method in class java.net.
InterfaceAddress
Returns a hashcode for this Interface address.
hashCode()
- Method in class java.net.
Proxy
Returns a hashcode for this Proxy.
hashCode()
- Method in class java.net.
SocketPermission
Returns the hash code value for this object.
hashCode()
- Method in class java.net.
UnixDomainSocketAddress
Returns the hash code of this
UnixDomainSocketAddress
hashCode()
- Method in class java.net.
URI
Returns a hash-code value for this URI.
hashCode()
- Method in class java.net.
URL
Creates an integer suitable for hash table indexing.
hashCode()
- Method in class java.net.
URLPermission
Returns a hashcode calculated from the hashcode of the
 actions String and the url string.
hashCode()
- Method in class java.nio.
ByteBuffer
Returns the current hash code of this buffer.
hashCode()
- Method in class java.nio.
CharBuffer
Returns the current hash code of this buffer.
hashCode()
- Method in class java.nio.charset.
Charset
Computes a hashcode for this charset.
hashCode()
- Method in class java.nio.
DoubleBuffer
Returns the current hash code of this buffer.
hashCode()
- Method in class java.nio.file.attribute.
AclEntry
Returns the hash-code value for this ACL entry.
hashCode()
- Method in class java.nio.file.attribute.
FileTime
Computes a hash code for this file time.
hashCode()
- Method in interface java.nio.file.
Path
Computes a hash code for this path.
hashCode()
- Method in class java.nio.
FloatBuffer
Returns the current hash code of this buffer.
hashCode()
- Method in class java.nio.
IntBuffer
Returns the current hash code of this buffer.
hashCode()
- Method in class java.nio.
LongBuffer
Returns the current hash code of this buffer.
hashCode()
- Method in class java.nio.
ShortBuffer
Returns the current hash code of this buffer.
hashCode()
- Method in class java.rmi.dgc.
VMID
Compute hash code for this VMID.
hashCode()
- Method in class java.rmi.
MarshalledObject
Return a hash code for this
MarshalledObject
.
hashCode()
- Method in class java.rmi.server.
ObjID
Returns the hash code value for this object identifier, the
 object number.
hashCode()
- Method in class java.rmi.server.
RemoteObject
Returns a hashcode for a remote object.
hashCode()
- Method in class java.rmi.server.
UID
Returns the hash code value for this
UID
.
hashCode()
- Method in class java.security.
AccessControlContext
Deprecated.
Returns the hash code value for this context.
hashCode()
- Method in class java.security.
AllPermission
Returns the hash code value for this object.
hashCode()
- Method in class java.security.
BasicPermission
Returns the hash code value for this object.
hashCode()
- Method in class java.security.cert.
Certificate
Returns a hashcode value for this certificate from its
 encoded form.
hashCode()
- Method in class java.security.cert.
CertPath
Returns the hashcode for this certification path.
hashCode()
- Method in class java.security.cert.
URICertStoreParameters
Returns a hash code value for this parameters object.
hashCode()
- Method in class java.security.cert.
X509CRL
Returns a hashcode value for this CRL from its
 encoded form.
hashCode()
- Method in class java.security.cert.
X509CRLEntry
Returns a hashcode value for this CRL entry from its
 encoded form.
hashCode()
- Method in class java.security.
CodeSigner
Returns the hash code value for this code signer.
hashCode()
- Method in class java.security.
CodeSource
Returns the hash code value for this object.
hashCode()
- Method in class java.security.
Identity
Deprecated.
Returns a hashcode for this
Identity
.
hashCode()
- Method in class java.security.
Permission
Returns the hash code value for this
Permission
object.
hashCode()
- Method in class java.security.
PKCS12Attribute
Returns the hashcode for this
PKCS12Attribute
.
hashCode()
- Method in interface java.security.
Principal
Returns a hashcode for this
Principal
.
hashCode()
- Method in class java.security.spec.
ECFieldF2m
Returns a hash code value for this characteristic 2
 finite field.
hashCode()
- Method in class java.security.spec.
ECFieldFp
Returns a hash code value for this prime finite field.
hashCode()
- Method in class java.security.spec.
ECPoint
Returns a hash code value for this elliptic curve point.
hashCode()
- Method in class java.security.spec.
EllipticCurve
Returns a hash code value for this elliptic curve.
hashCode()
- Method in class java.security.
Timestamp
Returns the hash code value for this
Timestamp
.
hashCode()
- Method in class java.security.
UnresolvedPermission
Returns the hash code value for this object.
hashCode()
- Method in interface java.sql.
RowId
Returns a hash code value of this
RowId
object.
hashCode()
- Method in class java.sql.
Timestamp
Returns a hash code value for this object.
hashCode()
- Method in class java.text.
AttributedCharacterIterator.Attribute
Returns a hash code value for the object.
hashCode()
- Method in class java.text.
ChoiceFormat
Generates a hash code for the message format object.
hashCode()
- Method in class java.text.
Collator
Generates the hash code for this Collator.
hashCode()
- Method in class java.text.
CompactNumberFormat
Returns the hash code for this
CompactNumberFormat
instance.
hashCode()
- Method in class java.text.
DateFormat
Overrides hashCode
hashCode()
- Method in class java.text.
DateFormatSymbols
Override hashCode.
hashCode()
- Method in class java.text.
DecimalFormat
Overrides hashCode
hashCode()
- Method in class java.text.
DecimalFormatSymbols
Override hashCode.
hashCode()
- Method in class java.text.
FieldPosition
Returns a hash code for this FieldPosition.
hashCode()
- Method in class java.text.
MessageFormat
Generates a hash code for the message format object.
hashCode()
- Method in class java.text.
NumberFormat
Overrides hashCode.
hashCode()
- Method in class java.text.
ParsePosition
Returns a hash code for this ParsePosition.
hashCode()
- Method in class java.text.
RuleBasedCollator
Generates the hash code for the table-based collation object
hashCode()
- Method in class java.text.
SimpleDateFormat
Returns the hash code value for this
SimpleDateFormat
object.
hashCode()
- Method in class java.text.
StringCharacterIterator
Computes a hashcode for this iterator.
hashCode()
- Method in class java.time.chrono.
AbstractChronology
A hash code for this chronology.
hashCode()
- Method in interface java.time.chrono.
ChronoLocalDate
A hash code for this date.
hashCode()
- Method in interface java.time.chrono.
ChronoLocalDateTime
A hash code for this date-time.
hashCode()
- Method in interface java.time.chrono.
Chronology
A hash code for this chronology.
hashCode()
- Method in interface java.time.chrono.
ChronoPeriod
A hash code for this period.
hashCode()
- Method in interface java.time.chrono.
ChronoZonedDateTime
A hash code for this date-time.
hashCode()
- Method in class java.time.chrono.
HijrahDate
A hash code for this date.
hashCode()
- Method in class java.time.chrono.
JapaneseDate
A hash code for this date.
hashCode()
- Method in class java.time.chrono.
MinguoDate
A hash code for this date.
hashCode()
- Method in class java.time.chrono.
ThaiBuddhistDate
A hash code for this date.
hashCode()
- Method in class java.time.
Clock
A hash code for this clock.
hashCode()
- Method in class java.time.
Duration
A hash code for this duration.
hashCode()
- Method in class java.time.format.
DecimalStyle
A hash code for this DecimalStyle.
hashCode()
- Method in class java.time.
Instant
Returns a hash code for this instant.
hashCode()
- Method in class java.time.
LocalDate
A hash code for this date.
hashCode()
- Method in class java.time.
LocalDateTime
A hash code for this date-time.
hashCode()
- Method in class java.time.
LocalTime
A hash code for this time.
hashCode()
- Method in class java.time.
MonthDay
A hash code for this month-day.
hashCode()
- Method in class java.time.
OffsetDateTime
A hash code for this date-time.
hashCode()
- Method in class java.time.
OffsetTime
A hash code for this time.
hashCode()
- Method in class java.time.
Period
A hash code for this period.
hashCode()
- Method in class java.time.temporal.
ValueRange
A hash code for this range.
hashCode()
- Method in class java.time.temporal.
WeekFields
A hash code for this
WeekFields
.
hashCode()
- Method in class java.time.
Year
A hash code for this year.
hashCode()
- Method in class java.time.
YearMonth
A hash code for this year-month.
hashCode()
- Method in class java.time.zone.
ZoneOffsetTransition
Returns a suitable hash code.
hashCode()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Returns a suitable hash code.
hashCode()
- Method in class java.time.zone.
ZoneRules
Returns a suitable hash code given the definition of
#equals
.
hashCode()
- Method in class java.time.
ZonedDateTime
A hash code for this date-time.
hashCode()
- Method in class java.time.
ZoneId
A hash code for this time-zone ID.
hashCode()
- Method in class java.time.
ZoneOffset
A hash code for this offset.
hashCode()
- Method in class java.util.
AbstractList
Returns the hash code value for this list.
hashCode()
- Method in class java.util.
AbstractMap
Returns the hash code value for this map.
hashCode()
- Method in class java.util.
AbstractMap.SimpleEntry
Returns the hash code value for this map entry.
hashCode()
- Method in class java.util.
AbstractMap.SimpleImmutableEntry
Returns the hash code value for this map entry.
hashCode()
- Method in class java.util.
AbstractSet
Returns the hash code value for this set.
hashCode()
- Method in class java.util.
ArrayList
Returns the hash code value for this list.
hashCode()
- Method in class java.util.
BitSet
Returns the hash code value for this bit set.
hashCode()
- Method in class java.util.
Calendar
Returns a hash code for this calendar.
hashCode()
- Method in interface java.util.
Collection
Returns the hash code value for this collection.
hashCode()
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns the hash code value for this
Map
, i.e.,
 the sum of, for each key-value pair in the map,
key.hashCode() ^ value.hashCode()
.
hashCode()
- Method in class java.util.concurrent.
ConcurrentHashMap.KeySetView
hashCode()
- Method in class java.util.concurrent.
CopyOnWriteArrayList
Returns the hash code value for this list.
hashCode()
- Method in class java.util.
Date
Returns a hash code value for this object.
hashCode()
- Method in class java.util.
EnumMap
Returns the hash code value for this map.
hashCode()
- Method in class java.util.
GregorianCalendar
Generates the hash code for this
GregorianCalendar
object.
hashCode()
- Method in class java.util.
Hashtable
Returns the hash code value for this Map as per the definition in the
 Map interface.
hashCode()
- Method in class java.util.
HexFormat
Returns a hashcode for this
HexFormat
.
hashCode()
- Method in class java.util.
IdentityHashMap
Returns the hash code value for this map.
hashCode()
- Method in class java.util.jar.
Attributes
Returns the hash code value for this Map.
hashCode()
- Method in class java.util.jar.
Attributes.Name
Computes the hash value for this attribute name.
hashCode()
- Method in class java.util.jar.
Manifest
Returns the hash code for this Manifest.
hashCode()
- Method in interface java.util.
List
Returns the hash code value for this list.
hashCode()
- Method in class java.util.
Locale
Override hashCode.
hashCode()
- Method in class java.util.
Locale.LanguageRange
Returns a hash code value for this object.
hashCode()
- Method in class java.util.logging.
Level
Generate a hashcode.
hashCode()
- Method in interface java.util.
Map.Entry
Returns the hash code value for this map entry.
hashCode()
- Method in interface java.util.
Map
Returns the hash code value for this map.
hashCode()
- Method in class java.util.
Optional
Returns the hash code of the value, if present, otherwise
0
(zero) if no value is present.
hashCode()
- Method in class java.util.
OptionalDouble
Returns the hash code of the value, if present, otherwise
0
(zero) if no value is present.
hashCode()
- Method in class java.util.
OptionalInt
Returns the hash code of the value, if present, otherwise
0
(zero) if no value is present.
hashCode()
- Method in class java.util.
OptionalLong
Returns the hash code of the value, if present, otherwise
0
(zero) if no value is present.
hashCode()
- Method in class java.util.
PropertyPermission
Returns the hash code value for this object.
hashCode()
- Method in interface java.util.
Set
Returns the hash code value for this set.
hashCode()
- Method in class java.util.
SimpleTimeZone
Generates the hash code for the SimpleDateFormat object.
hashCode()
- Method in class java.util.
UUID
Returns a hash code for this
UUID
.
hashCode()
- Method in class java.util.
Vector
Returns the hash code value for this Vector.
hashCode()
- Method in class java.util.zip.
ZipEntry
Returns the hash code value for this entry.
hashCode()
- Method in class javax.crypto.spec.
RC2ParameterSpec
Calculates a hash code value for the object.
hashCode()
- Method in class javax.crypto.spec.
RC5ParameterSpec
Calculates a hash code value for the object.
hashCode()
- Method in class javax.crypto.spec.
SecretKeySpec
Calculates a hash code value for the object.
hashCode()
- Method in class javax.imageio.
ImageTypeSpecifier
Returns the hash code for this ImageTypeSpecifier.
hashCode()
- Method in interface javax.lang.model.element.
Element
Obeys the general contract of
Object.hashCode
.
hashCode()
- Method in interface javax.lang.model.element.
Name
Obeys the general contract of
Object.hashCode
.
hashCode()
- Method in interface javax.lang.model.type.
TypeMirror
Obeys the general contract of
Object.hashCode
.
hashCode()
- Method in class javax.management.
Attribute
Returns a hash code value for this attribute.
hashCode()
- Method in interface javax.management.
Descriptor
Returns the hash code value for this descriptor.
hashCode()
- Method in class javax.management.
ImmutableDescriptor
Returns the hash code value for this descriptor.
hashCode()
- Method in class javax.management.
MBeanPermission
Returns the hash code value for this object.
hashCode()
- Method in class javax.management.modelmbean.
DescriptorSupport
Returns the hash code value for this descriptor.
hashCode()
- Method in class javax.management.
ObjectName
Returns a hash code for this object name.
hashCode()
- Method in class javax.management.openmbean.
ArrayType
Returns the hash code value for this
ArrayType
instance.
hashCode()
- Method in interface javax.management.openmbean.
CompositeData
Returns the hash code value for this
CompositeData
instance.
hashCode()
- Method in class javax.management.openmbean.
CompositeDataSupport
Returns the hash code value for this
CompositeDataSupport
instance.
hashCode()
- Method in class javax.management.openmbean.
CompositeType
Returns the hash code value for this
CompositeType
instance.
hashCode()
- Method in interface javax.management.openmbean.
OpenMBeanAttributeInfo
Returns the hash code value for this
OpenMBeanAttributeInfo
instance.
hashCode()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns the hash code value for this
OpenMBeanAttributeInfoSupport
instance.
hashCode()
- Method in interface javax.management.openmbean.
OpenMBeanConstructorInfo
Returns the hash code value for this
OpenMBeanConstructorInfo
instance.
hashCode()
- Method in class javax.management.openmbean.
OpenMBeanConstructorInfoSupport
Returns the hash code value for this
OpenMBeanConstructorInfoSupport
instance.
hashCode()
- Method in interface javax.management.openmbean.
OpenMBeanInfo
Returns the hash code value for this
OpenMBeanInfo
instance.
hashCode()
- Method in class javax.management.openmbean.
OpenMBeanInfoSupport
Returns the hash code value for this
OpenMBeanInfoSupport
instance.
hashCode()
- Method in interface javax.management.openmbean.
OpenMBeanOperationInfo
Returns the hash code value for this
OpenMBeanOperationInfo
instance.
hashCode()
- Method in class javax.management.openmbean.
OpenMBeanOperationInfoSupport
Returns the hash code value for this
OpenMBeanOperationInfoSupport
instance.
hashCode()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns the hash code value for this
OpenMBeanParameterInfo
instance.
hashCode()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns the hash code value for this
OpenMBeanParameterInfoSupport
instance.
hashCode()
- Method in class javax.management.openmbean.
OpenType
hashCode()
- Method in class javax.management.openmbean.
SimpleType
Returns the hash code value for this
SimpleType
instance.
hashCode()
- Method in interface javax.management.openmbean.
TabularData
Returns the hash code value for this
TabularData
instance.
hashCode()
- Method in class javax.management.openmbean.
TabularDataSupport
Returns the hash code value for this
TabularDataSupport
instance.
hashCode()
- Method in class javax.management.openmbean.
TabularType
Returns the hash code value for this
TabularType
instance.
hashCode()
- Method in class javax.management.remote.
JMXPrincipal
Returns a hash code for this
JMXPrincipal
.
hashCode()
- Method in class javax.naming.
BinaryRefAddr
Computes the hash code of this address using its address type and contents.
hashCode()
- Method in class javax.naming.
CompositeName
Computes the hash code of this composite name.
hashCode()
- Method in class javax.naming.
CompoundName
Computes the hash code of this compound name.
hashCode()
- Method in class javax.naming.directory.
BasicAttribute
Calculates the hash code of this attribute.
hashCode()
- Method in class javax.naming.directory.
BasicAttributes
Calculates the hash code of this BasicAttributes.
hashCode()
- Method in class javax.naming.ldap.
LdapName
Computes the hash code of this LDAP name.
hashCode()
- Method in class javax.naming.ldap.
Rdn
Returns the hash code of this RDN.
hashCode()
- Method in class javax.naming.
RefAddr
Computes the hash code of this address using its address type and contents.
hashCode()
- Method in class javax.naming.
Reference
Computes the hash code of this reference.
hashCode()
- Method in class javax.net.ssl.
SNIHostName
Returns a hash code value for this
SNIHostName
.
hashCode()
- Method in class javax.net.ssl.
SNIServerName
Returns a hash code value for this server name.
hashCode()
- Method in interface javax.print.attribute.
AttributeSet
Returns the hash code value for this attribute set.
hashCode()
- Method in class javax.print.attribute.
DateTimeSyntax
Returns a hash code value for this date-time attribute.
hashCode()
- Method in class javax.print.attribute.
EnumSyntax
Returns a hash code value for this enumeration value.
hashCode()
- Method in class javax.print.attribute.
HashAttributeSet
Returns the hash code value for this attribute set.
hashCode()
- Method in class javax.print.attribute.
IntegerSyntax
Returns a hash code value for this integer attribute.
hashCode()
- Method in class javax.print.attribute.
ResolutionSyntax
Returns a hash code value for this resolution attribute.
hashCode()
- Method in class javax.print.attribute.
SetOfIntegerSyntax
Returns a hash code value for this set-of-integer attribute.
hashCode()
- Method in class javax.print.attribute.
Size2DSyntax
Returns a hash code value for this two-dimensional size attribute.
hashCode()
- Method in class javax.print.attribute.standard.
MediaPrintableArea
Returns a hash code value for this attribute.
hashCode()
- Method in class javax.print.attribute.
TextSyntax
Returns a hashcode for this text attribute.
hashCode()
- Method in class javax.print.attribute.
URISyntax
Returns a hashcode for this
URI
attribute.
hashCode()
- Method in class javax.print.
DocFlavor
Returns a hash code for this doc flavor object.
hashCode()
- Method in interface javax.print.
PrintService
This method should be implemented consistently with
equals(Object)
.
hashCode()
- Method in class javax.rmi.ssl.
SslRMIClientSocketFactory
Returns a hash code value for this
SslRMIClientSocketFactory
.
hashCode()
- Method in class javax.rmi.ssl.
SslRMIServerSocketFactory
Returns a hash code value for this
SslRMIServerSocketFactory
.
hashCode()
- Method in class javax.security.auth.kerberos.
DelegationPermission
Returns the hash code value for this object.
hashCode()
- Method in class javax.security.auth.kerberos.
EncryptionKey
Returns a hash code for this
EncryptionKey
.
hashCode()
- Method in class javax.security.auth.kerberos.
KerberosCredMessage
Returns a hash code for this
KerberosCredMessage
.
hashCode()
- Method in class javax.security.auth.kerberos.
KerberosKey
Returns a hash code for this
KerberosKey
.
hashCode()
- Method in class javax.security.auth.kerberos.
KerberosPrincipal
Returns a hash code for this
KerberosPrincipal
.
hashCode()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns a hash code for this
KerberosTicket
.
hashCode()
- Method in class javax.security.auth.kerberos.
KeyTab
Returns a hash code for this
KeyTab
.
hashCode()
- Method in class javax.security.auth.kerberos.
ServicePermission
Returns the hash code value for this object.
hashCode()
- Method in class javax.security.auth.
PrivateCredentialPermission
Returns the hash code value for this object.
hashCode()
- Method in class javax.security.auth.
Subject
Returns a hashcode for this
Subject
.
hashCode()
- Method in class javax.security.auth.x500.
X500Principal
Return a hash code for this
X500Principal
.
hashCode()
- Method in class javax.security.cert.
Certificate
Deprecated.
Returns a hashcode value for this certificate from its
 encoded form.
hashCode()
- Method in class javax.smartcardio.
ATR
Returns the hash code value for this ATR.
hashCode()
- Method in class javax.smartcardio.
CardPermission
Returns the hash code value for this CardPermission object.
hashCode()
- Method in class javax.smartcardio.
CommandAPDU
Returns the hash code value for this command APDU.
hashCode()
- Method in class javax.smartcardio.
ResponseAPDU
Returns the hash code value for this response APDU.
hashCode()
- Method in class javax.sound.midi.
MidiDevice.Info
Returns a hash code value for this info object.
hashCode()
- Method in class javax.sound.midi.
Sequencer.SyncMode
Returns a hash code value for this synchronization mode.
hashCode()
- Method in class javax.sound.sampled.
AudioFileFormat.Type
Returns a hash code value for this file type.
hashCode()
- Method in class javax.sound.sampled.
AudioFormat.Encoding
Returns a hash code value for this encoding.
hashCode()
- Method in class javax.sound.sampled.
Control.Type
Returns a hash code value for this control type.
hashCode()
- Method in class javax.sound.sampled.
LineEvent.Type
Returns a hash code value for this event type.
hashCode()
- Method in class javax.sound.sampled.
Mixer.Info
Returns a hash code value for this info object.
hashCode()
- Method in class javax.sound.sampled.
Port.Info
Returns a hash code value for this info object.
hashCode()
- Method in class javax.sound.sampled.
ReverbType
Returns a hash code value for this reverb type.
hashCode()
- Method in class javax.sql.rowset.serial.
SerialArray
Returns a hash code for this SerialArray.
hashCode()
- Method in class javax.sql.rowset.serial.
SerialBlob
Returns a hash code for this
SerialBlob
.
hashCode()
- Method in class javax.sql.rowset.serial.
SerialClob
Returns a hash code for this
SerialClob
.
hashCode()
- Method in class javax.sql.rowset.serial.
SerialDatalink
Returns a hash code for this
SerialDatalink
.
hashCode()
- Method in class javax.sql.rowset.serial.
SerialJavaObject
Returns a hash code for this SerialJavaObject.
hashCode()
- Method in class javax.sql.rowset.serial.
SerialRef
Returns a hash code for this
SerialRef
.
hashCode()
- Method in class javax.sql.rowset.serial.
SerialStruct
Returns a hash code for this
SerialStruct
.
hashCode()
- Method in class javax.swing.
RowSorter.SortKey
Returns the hash code for this
SortKey
.
hashCode()
- Method in class javax.swing.text.html.
HTML.UnknownTag
Returns the hash code which corresponds to the string
 for this tag.
hashCode()
- Method in class javax.swing.text.
SimpleAttributeSet
Returns a hashcode for this set of attributes.
hashCode()
- Method in class javax.swing.text.
StyleContext.SmallAttributeSet
Returns a hashcode for this set of attributes.
hashCode()
- Method in class javax.swing.text.
TabSet
Returns a hashcode for this set of TabStops.
hashCode()
- Method in class javax.swing.text.
TabStop
Returns the hashCode for the object.
hashCode()
- Method in class javax.swing.tree.
TreePath
Returns the hash code of this
TreePath
.
hashCode()
- Method in class javax.xml.datatype.
Duration
Returns a hash code consistent with the definition of the equals method.
hashCode()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns a hash code consistent with the definition of the equals method.
hashCode()
- Method in class javax.xml.namespace.
QName
Generate the hash code for this
QName
.
hashCode()
- Method in class jdk.dynalink.
CallSiteDescriptor
Returns a value-based hash code of this call site descriptor computed
 from its operation, method type, and lookup object's lookup class and
 lookup modes.
hashCode()
- Method in class jdk.dynalink.
NamedOperation
Returns the hash code of this named operation.
hashCode()
- Method in class jdk.dynalink.
NamespaceOperation
Returns the hash code of this namespace operation.
hashCode()
- Method in class jdk.incubator.vector.
ByteVector
Returns a hash code value for the vector.
hashCode()
- Method in class jdk.incubator.vector.
DoubleVector
Returns a hash code value for the vector.
hashCode()
- Method in class jdk.incubator.vector.
FloatVector
Returns a hash code value for the vector.
hashCode()
- Method in class jdk.incubator.vector.
IntVector
Returns a hash code value for the vector.
hashCode()
- Method in class jdk.incubator.vector.
LongVector
Returns a hash code value for the vector.
hashCode()
- Method in class jdk.incubator.vector.
ShortVector
Returns a hash code value for the vector.
hashCode()
- Method in class jdk.incubator.vector.
Vector
Returns a hash code value for the vector.
hashCode()
- Method in class jdk.incubator.vector.
VectorMask
Returns a hash code value for the mask,
 based on the mask bit settings and the vector species.
hashCode()
- Method in class jdk.incubator.vector.
VectorShuffle
Returns a hash code value for the shuffle,
 based on the lane source indexes and the vector species.
hashCode()
- Method in interface jdk.incubator.vector.
VectorSpecies
Returns a hash code value for the species,
 based on the vector shape and element type.
hashCode()
- Method in record class jdk.jshell.
SourceCodeAnalysis.Highlight
Returns a hash code value for this object.
hashCode()
- Method in record class jdk.net.
UnixDomainPrincipal
Returns a hash code value for this object.
hashCode()
- Method in class org.ietf.jgss.
ChannelBinding
Returns a hashcode value for this ChannelBinding object.
hashCode()
- Method in interface org.ietf.jgss.
GSSCredential
Returns a hashcode value for this GSSCredential.
hashCode()
- Method in interface org.ietf.jgss.
GSSName
Returns a hashcode value for this GSSName.
hashCode()
- Method in class org.ietf.jgss.
Oid
Returns a hashcode value for this Oid.
hashCode(boolean)
- Static method in class java.lang.
Boolean
Returns a hash code for a
boolean
value; compatible with
Boolean.hashCode()
.
hashCode(boolean[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(byte)
- Static method in class java.lang.
Byte
Returns a hash code for a
byte
value; compatible with
Byte.hashCode()
.
hashCode(byte[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(char)
- Static method in class java.lang.
Character
Returns a hash code for a
char
value; compatible with
Character.hashCode()
.
hashCode(char[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(double)
- Static method in class java.lang.
Double
Returns a hash code for a
double
value; compatible with
Double.hashCode()
.
hashCode(double[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(float)
- Static method in class java.lang.
Float
Returns a hash code for a
float
value; compatible with
Float.hashCode()
.
hashCode(float[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(int)
- Static method in class java.lang.
Integer
Returns a hash code for an
int
value; compatible with
Integer.hashCode()
.
hashCode(int[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(long)
- Static method in class java.lang.
Long
Returns a hash code for a
long
value; compatible with
Long.hashCode()
.
hashCode(long[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(short)
- Static method in class java.lang.
Short
Returns a hash code for a
short
value; compatible with
Short.hashCode()
.
hashCode(short[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(Object)
- Static method in class java.util.
Objects
Returns the hash code of a non-
null
argument and 0 for
 a
null
argument.
hashCode(Object[])
- Static method in class java.util.
Arrays
Returns a hash code based on the contents of the specified array.
hashCode(URL)
- Method in class java.net.
URLStreamHandler
Provides the default hash calculation.
HashDocAttributeSet
- Class in
javax.print.attribute
Class
HashDocAttributeSet
provides an attribute set which inherits
 its implementation from class
HashAttributeSet
and
 enforces the semantic restrictions of interface
DocAttributeSet
.
HashDocAttributeSet()
- Constructor for class javax.print.attribute.
HashDocAttributeSet
Construct a new, empty hash doc attribute set.
HashDocAttributeSet(DocAttribute)
- Constructor for class javax.print.attribute.
HashDocAttributeSet
Construct a new hash doc attribute set, initially populated with the
 given value.
HashDocAttributeSet(DocAttribute[])
- Constructor for class javax.print.attribute.
HashDocAttributeSet
Construct a new hash doc attribute set, initially populated with the
 values from the given array.
HashDocAttributeSet(DocAttributeSet)
- Constructor for class javax.print.attribute.
HashDocAttributeSet
Construct a new attribute set, initially populated with the values from
 the given set where the members of the attribute set are restricted to
 the
DocAttribute
interface.
HashMap<K,
V>
- Class in
java.util
Hash table based implementation of the
Map
interface.
HashMap()
- Constructor for class java.util.
HashMap
Constructs an empty
HashMap
with the default initial capacity
 (16) and the default load factor (0.75).
HashMap(int)
- Constructor for class java.util.
HashMap
Constructs an empty
HashMap
with the specified initial
 capacity and the default load factor (0.75).
HashMap(int, float)
- Constructor for class java.util.
HashMap
Constructs an empty
HashMap
with the specified initial
 capacity and load factor.
HashMap(Map<? extends K, ? extends V>)
- Constructor for class java.util.
HashMap
Constructs a new
HashMap
with the same mappings as the
 specified
Map
.
HashPrintJobAttributeSet
- Class in
javax.print.attribute
Class
HashPrintJobAttributeSet
provides an attribute set which
 inherits its implementation from class
HashAttributeSet
and enforces the semantic
 restrictions of interface
PrintJobAttributeSet
.
HashPrintJobAttributeSet()
- Constructor for class javax.print.attribute.
HashPrintJobAttributeSet
Construct a new, empty hash print job attribute set.
HashPrintJobAttributeSet(PrintJobAttribute)
- Constructor for class javax.print.attribute.
HashPrintJobAttributeSet
Construct a new hash print job attribute set, initially populated with
 the given value.
HashPrintJobAttributeSet(PrintJobAttribute[])
- Constructor for class javax.print.attribute.
HashPrintJobAttributeSet
Construct a new hash print job attribute set, initially populated with
 the values from the given array.
HashPrintJobAttributeSet(PrintJobAttributeSet)
- Constructor for class javax.print.attribute.
HashPrintJobAttributeSet
Construct a new attribute set, initially populated with the values from
 the given set where the members of the attribute set are restricted to
 the
PrintJobAttribute
interface.
HashPrintRequestAttributeSet
- Class in
javax.print.attribute
Class
HashPrintRequestAttributeSet
inherits its implementation from
 class
HashAttributeSet
and enforces the semantic
 restrictions of interface
PrintRequestAttributeSet
.
HashPrintRequestAttributeSet()
- Constructor for class javax.print.attribute.
HashPrintRequestAttributeSet
Construct a new, empty print request attribute set.
HashPrintRequestAttributeSet(PrintRequestAttribute)
- Constructor for class javax.print.attribute.
HashPrintRequestAttributeSet
Construct a new print request attribute set, initially populated with the
 given value.
HashPrintRequestAttributeSet(PrintRequestAttribute[])
- Constructor for class javax.print.attribute.
HashPrintRequestAttributeSet
Construct a new print request attribute set, initially populated with the
 values from the given array.
HashPrintRequestAttributeSet(PrintRequestAttributeSet)
- Constructor for class javax.print.attribute.
HashPrintRequestAttributeSet
Construct a new attribute set, initially populated with the values from
 the given set where the members of the attribute set are restricted to
 the
(PrintRequestAttributeSe
interface.
HashPrintServiceAttributeSet
- Class in
javax.print.attribute
Class
HashPrintServiceAttributeSet
provides an attribute set which
 inherits its implementation from class
HashAttributeSet
and enforces the semantic
 restrictions of interface
PrintServiceAttributeSet
.
HashPrintServiceAttributeSet()
- Constructor for class javax.print.attribute.
HashPrintServiceAttributeSet
Construct a new, empty hash print service attribute set.
HashPrintServiceAttributeSet(PrintServiceAttribute)
- Constructor for class javax.print.attribute.
HashPrintServiceAttributeSet
Construct a new hash print service attribute set, initially populated
 with the given value.
HashPrintServiceAttributeSet(PrintServiceAttribute[])
- Constructor for class javax.print.attribute.
HashPrintServiceAttributeSet
Construct a new print service attribute set, initially populated with the
 values from the given array.
HashPrintServiceAttributeSet(PrintServiceAttributeSet)
- Constructor for class javax.print.attribute.
HashPrintServiceAttributeSet
Construct a new attribute set, initially populated with the values from
 the given set where the members of the attribute set are restricted to
 the
PrintServiceAttribute
interface.
HashSet<E>
- Class in
java.util
This class implements the
Set
interface, backed by a hash table
 (actually a
HashMap
instance).
HashSet()
- Constructor for class java.util.
HashSet
Constructs a new, empty set; the backing
HashMap
instance has
 default initial capacity (16) and load factor (0.75).
HashSet(int)
- Constructor for class java.util.
HashSet
Constructs a new, empty set; the backing
HashMap
instance has
 the specified initial capacity and default load factor (0.75).
HashSet(int, float)
- Constructor for class java.util.
HashSet
Constructs a new, empty set; the backing
HashMap
instance has
 the specified initial capacity and the specified load factor.
HashSet(Collection<? extends E>)
- Constructor for class java.util.
HashSet
Constructs a new set containing the elements in the specified
 collection.
Hashtable<K,
V>
- Class in
java.util
This class implements a hash table, which maps keys to values.
Hashtable()
- Constructor for class java.util.
Hashtable
Constructs a new, empty hashtable with a default initial capacity (11)
 and load factor (0.75).
Hashtable(int)
- Constructor for class java.util.
Hashtable
Constructs a new, empty hashtable with the specified initial capacity
 and default load factor (0.75).
Hashtable(int, float)
- Constructor for class java.util.
Hashtable
Constructs a new, empty hashtable with the specified initial
 capacity and the specified load factor.
Hashtable(Map<? extends K, ? extends V>)
- Constructor for class java.util.
Hashtable
Constructs a new hashtable with the same mappings as the given
 Map.
hasInitialContextFactoryBuilder()
- Static method in class javax.naming.spi.
NamingManager
Determines whether an initial context factory builder has
 been set.
hasInitialResponse()
- Method in interface javax.security.sasl.
SaslClient
Determines whether this mechanism has an optional initial response.
hasInvokeExactBehavior()
- Method in class java.lang.invoke.
VarHandle
Returns
true
if this VarHandle has
invoke-exact behavior
.
hasLayoutAttributes()
- Method in class java.awt.
Font
Return true if this Font contains attributes that require extra
 layout processing.
hasLegalValues()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns
true
if this
OpenMBeanAttributeInfoSupport
instance specifies a non-null
 set of legal values for the described attribute,
false
otherwise.
hasLegalValues()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns
true
if this parameter has a specified set of
 legal values, or
false
otherwise.
hasLegalValues()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns
true
if this
OpenMBeanParameterInfoSupport
instance specifies a non-null
 set of legal values for the described parameter,
false
otherwise.
hasListeners(String)
- Method in class java.beans.
PropertyChangeSupport
Check if there are any listeners for a specific property, including
 those registered on all properties.
hasListeners(String)
- Method in class java.beans.
VetoableChangeSupport
Check if there are any listeners for a specific property, including
 those registered on all properties.
hasLocation(JavaFileManager.Location)
- Method in class javax.tools.
ForwardingJavaFileManager
hasLocation(JavaFileManager.Location)
- Method in interface javax.tools.
JavaFileManager
Determines if a location is known to this file manager.
hasMatch()
- Method in class java.util.regex.
Matcher
Returns whether
this
contains a valid match from
 a previous match or find operation.
hasMatch()
- Method in interface java.util.regex.
MatchResult
Returns whether
this
contains a valid match from
 a previous match or find operation.
hasMaxValue()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns
true
if this
OpenMBeanAttributeInfoSupport
instance specifies a non-null
 maximal value for the described attribute,
false
otherwise.
hasMaxValue()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns
true
if this parameter has a specified maximal
 value, or
false
otherwise.
hasMaxValue()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns
true
if this
OpenMBeanParameterInfoSupport
instance specifies a non-null
 maximal value for the described parameter,
false
otherwise.
hasMinValue()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns
true
if this
OpenMBeanAttributeInfoSupport
instance specifies a non-null
 minimal value for the described attribute,
false
otherwise.
hasMinValue()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns
true
if this parameter has a specified minimal
 value, or
false
otherwise.
hasMinValue()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns
true
if this
OpenMBeanParameterInfoSupport
instance specifies a non-null
 minimal value for the described parameter,
false
otherwise.
hasMore()
- Method in interface javax.naming.
NamingEnumeration
Determines whether there are any more elements in the enumeration.
hasMoreElements()
- Method in interface java.util.
Enumeration
Tests if this enumeration contains more elements.
hasMoreElements()
- Method in class java.util.
StringTokenizer
Returns the same value as the
hasMoreTokens
method.
hasMoreEvents()
- Method in class jdk.jfr.consumer.
RecordingFile
Returns
true
if unread events exist in the recording file,
false
otherwise.
hasMoreTokens()
- Method in class java.util.
StringTokenizer
Tests if there are more tokens available from this tokenizer's string.
hasName()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
hasName()
- Method in interface javax.xml.stream.
XMLStreamReader
returns a boolean indicating whether the current event has a name
 (is a START_ELEMENT or END_ELEMENT).
hasNext()
- Method in class java.beans.beancontext.
BeanContextSupport.BCSIterator
hasNext()
- Method in interface java.util.
Iterator
Returns
true
if the iteration has more elements.
hasNext()
- Method in interface java.util.
ListIterator
Returns
true
if this list iterator has more elements when
 traversing the list in the forward direction.
hasNext()
- Method in class java.util.
Scanner
Returns true if this scanner has another token in its input.
hasNext()
- Method in class javax.xml.stream.util.
EventReaderDelegate
hasNext()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
hasNext()
- Method in interface javax.xml.stream.
XMLEventReader
Check if there are more events.
hasNext()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns true if there are more parsing events and false
 if there are no more events.
hasNext(String)
- Method in class java.util.
Scanner
Returns true if the next token matches the pattern constructed from the
 specified string.
hasNext(Pattern)
- Method in class java.util.
Scanner
Returns true if the next complete token matches the specified pattern.
hasNextBigDecimal()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a
BigDecimal
using the
Scanner.nextBigDecimal()
method.
hasNextBigInteger()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a
BigInteger
in the default radix using the
Scanner.nextBigInteger()
method.
hasNextBigInteger(int)
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a
BigInteger
in the specified radix using
 the
Scanner.nextBigInteger()
method.
hasNextBoolean()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a boolean value using a case insensitive pattern
 created from the string "true|false".
hasNextByte()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a byte value in the default radix using the
Scanner.nextByte()
method.
hasNextByte(int)
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a byte value in the specified radix using the
Scanner.nextByte()
method.
hasNextDouble()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a double value using the
Scanner.nextDouble()
method.
hasNextFloat()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a float value using the
Scanner.nextFloat()
method.
hasNextInt()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as an int value in the default radix using the
Scanner.nextInt()
method.
hasNextInt(int)
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as an int value in the specified radix using the
Scanner.nextInt()
method.
hasNextLine()
- Method in class java.util.
Scanner
Returns true if there is another line in the input of this scanner.
hasNextLong()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a long value in the default radix using the
Scanner.nextLong()
method.
hasNextLong(int)
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a long value in the specified radix using the
Scanner.nextLong()
method.
hasNextShort()
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a short value in the default radix using the
Scanner.nextShort()
method.
hasNextShort(int)
- Method in class java.util.
Scanner
Returns true if the next token in this scanner's input can be
 interpreted as a short value in the specified radix using the
Scanner.nextShort()
method.
hasPrevious()
- Method in interface java.util.
ListIterator
Returns
true
if this list iterator has more elements when
 traversing the list in the reverse direction.
hasPrimitives()
- Method in class java.lang.invoke.
MethodType
Reports if this type contains a primitive argument or return value.
hasPrivateAccess()
- Method in class java.lang.invoke.
MethodHandles.Lookup
Deprecated.
This method was originally designed to test
PRIVATE
access
 that implies full privilege access but
MODULE
access has since become
 independent of
PRIVATE
access.  It is recommended to call
MethodHandles.Lookup.hasFullPrivilegeAccess()
instead.
hasQueuedPredecessors()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Queries whether any threads have been waiting to acquire longer
 than the current thread.
hasQueuedPredecessors()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Queries whether any threads have been waiting to acquire longer
 than the current thread.
hasQueuedSubmissions()
- Method in class java.util.concurrent.
ForkJoinPool
Returns
true
if there are any tasks submitted to this
 pool that have not yet begun executing.
hasQueuedThread(Thread)
- Method in class java.util.concurrent.locks.
ReentrantLock
Queries whether the given thread is waiting to acquire this
 lock.
hasQueuedThread(Thread)
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Queries whether the given thread is waiting to acquire either
 the read or write lock.
hasQueuedThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Queries whether any threads are waiting to acquire.
hasQueuedThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Queries whether any threads are waiting to acquire.
hasQueuedThreads()
- Method in class java.util.concurrent.locks.
ReentrantLock
Queries whether any threads are waiting to acquire this lock.
hasQueuedThreads()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Queries whether any threads are waiting to acquire the read or
 write lock.
hasQueuedThreads()
- Method in class java.util.concurrent.
Semaphore
Queries whether any threads are waiting to acquire.
hasRaster()
- Method in class javax.imageio.
IIOImage
Returns
true
if this
IIOImage
stores
 a
Raster
rather than a
RenderedImage
.
hasRelation(String)
- Method in class javax.management.relation.
RelationService
Checks if there is a relation identified in Relation Service with given
 relation id.
hasRelation(String)
- Method in interface javax.management.relation.
RelationServiceMBean
Checks if there is a relation identified in Relation Service with given
 relation id.
hasRemaining()
- Method in class java.nio.
Buffer
Tells whether there are any elements between the current position and
 the limit.
hasSameRules(TimeZone)
- Method in class java.util.
SimpleTimeZone
Returns
true
if this zone has the same rules and offset as another zone.
hasSameRules(TimeZone)
- Method in class java.util.
TimeZone
Returns true if this zone has the same rule and offset as another zone.
hasService(Class<?>)
- Method in interface java.beans.beancontext.
BeanContextServices
Reports whether or not a given service is
 currently available from this context.
hasService(Class<?>)
- Method in class java.beans.beancontext.
BeanContextServicesSupport
has a service, which may be delegated
hasSubscribers()
- Method in class java.util.concurrent.
SubmissionPublisher
Returns true if this publisher has any subscribers.
hasText()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
hasText()
- Method in interface javax.xml.stream.
XMLStreamReader
Return a boolean indicating whether the current event has text.
hasThumbnails(int)
- Method in class javax.imageio.
ImageReader
Returns
true
if the given image has thumbnail
 preview images associated with it.
hasTileWriters()
- Method in class java.awt.image.
BufferedImage
Returns whether or not any tile is checked out for writing.
hasTileWriters()
- Method in interface java.awt.image.
WritableRenderedImage
Returns whether any tile is checked out for writing.
hasTransparentBounds()
- Method in class java.util.regex.
Matcher
Queries the transparency of region bounds for this matcher.
hasUniformLineMetrics()
- Method in class java.awt.
Font
Checks whether or not this
Font
has uniform
 line metrics.
hasUniformLineMetrics()
- Method in class java.awt.
FontMetrics
Checks to see if the
Font
has uniform line metrics.
hasUnsupportedCriticalExtension()
- Method in interface java.security.cert.
X509Extension
Check if there is a critical extension that is not supported.
hasValue()
- Method in enum class jdk.jshell.
Snippet.SubKind
Indicates whether this
SubKind
is executable and
 is non-
void
.
hasValue(String)
- Method in class jdk.jfr.
AnnotationElement
Returns
true
if an annotation value with the specified name exists in
 this
AnnotationElement
.
hasValueNames()
- Method in class javax.imageio.plugins.tiff.
TIFFTag
Returns
true
if there are mnemonic names associated with
 the set of legal values for the data associated with this tag.
hasWaiters()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer.ConditionObject
Queries whether any threads are waiting on this condition.
hasWaiters()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer.ConditionObject
Queries whether any threads are waiting on this condition.
hasWaiters(AbstractQueuedLongSynchronizer.ConditionObject)
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Queries whether any threads are waiting on the given condition
 associated with this synchronizer.
hasWaiters(AbstractQueuedSynchronizer.ConditionObject)
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Queries whether any threads are waiting on the given condition
 associated with this synchronizer.
hasWaiters(Condition)
- Method in class java.util.concurrent.locks.
ReentrantLock
Queries whether any threads are waiting on the given condition
 associated with this lock.
hasWaiters(Condition)
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Queries whether any threads are waiting on the given condition
 associated with the write lock.
hasWaitingConsumer()
- Method in class java.util.concurrent.
LinkedTransferQueue
hasWaitingConsumer()
- Method in interface java.util.concurrent.
TransferQueue
Returns
true
if there is at least one consumer waiting
 to receive an element via
BlockingQueue.take()
or
 timed
poll
.
hasWrappers()
- Method in class java.lang.invoke.
MethodType
Reports if this type contains a wrapper argument or return value.
HATRAN
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Hatran".
HATRAN
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hatran" Unicode character block.
head
- Variable in class javax.swing.text.html.parser.
DTD
The element corresponding to head.
HEAD
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <head>
HEAD()
- Method in interface java.net.http.
HttpRequest.Builder
Sets the request method of this builder to HEAD.
header
- Variable in class javax.swing.plaf.basic.
BasicTableHeaderUI
The
JTableHeader
that is delegating the painting to this UI.
header(String, String)
- Method in interface java.net.http.
HttpRequest.Builder
Adds the given name value pair to the set of headers for this request.
header(String, String)
- Method in interface java.net.http.
WebSocket.Builder
Adds the given name-value pair to the list of additional HTTP headers
 sent during the opening handshake.
HEADER
- Static variable in class javax.accessibility.
AccessibleRole
A text header.
HEADER_RENDERER_PROPERTY
- Static variable in class javax.swing.table.
TableColumn
Obsolete as of Java 2 platform v1.3.
HEADER_ROW
- Static variable in class javax.swing.event.
TableModelEvent
Identifies the header row.
HEADER_VALUE_PROPERTY
- Static variable in class javax.swing.table.
TableColumn
Obsolete as of Java 2 platform v1.3.
headerRenderer
- Variable in class javax.swing.table.
TableColumn
The renderer used to draw the header of the column.
headers()
- Method in class java.net.http.
HttpRequest
The (user-accessible) request headers that this request was (or will be)
 sent with.
headers()
- Method in interface java.net.http.
HttpResponse
Returns the received response headers.
headers()
- Method in interface java.net.http.
HttpResponse.ResponseInfo
Provides the response headers.
headers(String...)
- Method in interface java.net.http.
HttpRequest.Builder
Adds the given name value pairs to the set of headers for this
 request.
Headers
- Class in
com.sun.net.httpserver
HTTP request and response headers are represented by this class which
 implements the interface
Map
<
String
,
List
<
String
>>.
Headers()
- Constructor for class com.sun.net.httpserver.
Headers
Creates an empty instance of
Headers
.
Headers(Map<String, List<String>>)
- Constructor for class com.sun.net.httpserver.
Headers
Creates a mutable
Headers
from the given
headers
with
 the same header names and values.
headerValue
- Variable in class javax.swing.table.
TableColumn
The header value of the column.
HeadlessException
- Exception Class in
java.awt
Thrown when code that is dependent on a keyboard, display, or mouse
 is called in an environment that does not support a keyboard, display,
 or mouse.
HeadlessException()
- Constructor for exception class java.awt.
HeadlessException
Constructs new
HeadlessException
with empty message.
HeadlessException(String)
- Constructor for exception class java.awt.
HeadlessException
Create a new instance with the specified detailed error message.
headMap(K)
- Method in interface java.util.concurrent.
ConcurrentNavigableMap
headMap(K)
- Method in class java.util.concurrent.
ConcurrentSkipListMap
headMap(K)
- Method in interface java.util.
NavigableMap
Returns a view of the portion of this map whose keys are
 strictly less than
toKey
.
headMap(K)
- Method in interface java.util.
SortedMap
Returns a view of the portion of this map whose keys are
 strictly less than
toKey
.
headMap(K)
- Method in class java.util.
TreeMap
headMap(K, boolean)
- Method in interface java.util.concurrent.
ConcurrentNavigableMap
headMap(K, boolean)
- Method in class java.util.concurrent.
ConcurrentSkipListMap
headMap(K, boolean)
- Method in interface java.util.
NavigableMap
Returns a view of the portion of this map whose keys are less than (or
 equal to, if
inclusive
is true)
toKey
.
headMap(K, boolean)
- Method in class java.util.
TreeMap
HEADPHONE
- Static variable in class javax.sound.sampled.
Port.Info
A type of port that sends audio to a headphone jack.
headSet(E)
- Method in class java.util.concurrent.
ConcurrentSkipListSet
headSet(E)
- Method in interface java.util.
NavigableSet
Returns a view of the portion of this set whose elements are
 strictly less than
toElement
.
headSet(E)
- Method in interface java.util.
SortedSet
Returns a view of the portion of this set whose elements are
 strictly less than
toElement
.
headSet(E)
- Method in class java.util.
TreeSet
headSet(E, boolean)
- Method in class java.util.concurrent.
ConcurrentSkipListSet
headSet(E, boolean)
- Method in interface java.util.
NavigableSet
Returns a view of the portion of this set whose elements are less than
 (or equal to, if
inclusive
is true)
toElement
.
headSet(E, boolean)
- Method in class java.util.
TreeSet
HEAP
- Enum constant in enum class java.lang.management.
MemoryType
Heap memory type.
heapBase()
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Returns the Java object stored in the on-heap region of memory backing this memory segment, if any.
heavyWeightPopupEnabled
- Variable in class javax.swing.
ToolTipManager
Heavyweight popup enabled.
HEBREW
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Hebrew".
HEBREW
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hebrew" Unicode character block.
height
- Variable in class java.awt.
Component.BltBufferStrategy
Height of the back buffers
height
- Variable in class java.awt.
Dimension
The height dimension; negative values can be used.
height
- Variable in class java.awt.geom.
Arc2D.Double
The overall height of the full ellipse of which this arc is
 a partial section (not considering the angular extents).
height
- Variable in class java.awt.geom.
Arc2D.Float
The overall height of the full ellipse of which this arc is
 a partial section (not considering the
 angular extents).
height
- Variable in class java.awt.geom.
Ellipse2D.Double
The overall height of the
Ellipse2D
.
height
- Variable in class java.awt.geom.
Ellipse2D.Float
The overall height of this
Ellipse2D
.
height
- Variable in class java.awt.geom.
Rectangle2D.Double
The height of this
Rectangle2D
.
height
- Variable in class java.awt.geom.
Rectangle2D.Float
The height of this
Rectangle2D
.
height
- Variable in class java.awt.geom.
RoundRectangle2D.Double
The height of this
RoundRectangle2D
.
height
- Variable in class java.awt.geom.
RoundRectangle2D.Float
The height of this
RoundRectangle2D
.
height
- Variable in class java.awt.image.
Raster
The height of this Raster.
height
- Variable in class java.awt.image.
SampleModel
Height in pixels of the region of image data that this SampleModel
  describes.
height
- Variable in class java.awt.
Rectangle
The height of the
Rectangle
.
height(Component)
- Static method in class javax.swing.
Spring
Returns a spring whose
minimum
,
preferred
,
maximum
and
value
properties are defined by the heights of the
minimumSize
,
preferredSize
,
maximumSize
and
size
properties
 of the supplied component.
HEIGHT
- Static variable in interface java.awt.image.
ImageObserver
This flag in the infoflags argument to imageUpdate indicates that
 the height of the base image is now available and can be taken
 from the height argument to the imageUpdate callback method.
HEIGHT
- Static variable in class javax.swing.
SpringLayout
Specifies the height of a component's bounding rectangle.
HEIGHT
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "height".
HEIGHT
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "height"
HEISEI
- Static variable in class java.time.chrono.
JapaneseEra
The singleton instance for the 'Heisei' era (1989-01-08 - 2019-04-30)
 which has the value 2.
helpButtonMnemonic
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Help button mnemonic
helpButtonText
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Help button text
helpButtonToolTipText
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Help button tool tip text
helpComplete(int)
- Method in class java.util.concurrent.
CountedCompleter
If this task has not completed, attempts to process at most the
 given number of other unprocessed tasks for which this task is
 on the completion path, if any are known to exist.
helpQuiesce()
- Static method in class java.util.concurrent.
ForkJoinTask
Possibly executes tasks until the pool hosting the current task
is quiescent
.
HexFormat
- Class in
java.util
HexFormat
converts between bytes and chars and hex-encoded strings which may include
 additional formatting markup such as prefixes, suffixes, and delimiters.
hidden()
- Element in annotation interface java.beans.
BeanProperty
The value that indicates whether the annotated property is
 a
hidden
property or not.
HIDDEN
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
HiddenTree
representing an
@hidden
tag.
HiddenAction()
- Constructor for class javax.swing.text.html.
HTMLDocument.HTMLReader.HiddenAction
Constructs a
HiddenAction
.
Hidden Classes
- Search tag in class java.lang.Class
Section
hiddenDivider
- Variable in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Divider that is used for noncontinuous layout mode.
HiddenTree
- Interface in
com.sun.source.doctree
A tree node for an
@hidden
block tag.
hide()
- Method in class java.awt.
Component
Deprecated.
As of JDK version 1.1,
 replaced by
setVisible(boolean)
.
hide()
- Method in class java.awt.
Dialog
Deprecated.
As of JDK version 1.5, replaced by
setVisible(boolean)
.
hide()
- Method in class java.awt.
Window
Deprecated.
As of JDK version 1.5, replaced by
Window.setVisible(boolean)
.
hide()
- Method in class javax.swing.
JComponent
Deprecated.
hide()
- Method in class javax.swing.
JInternalFrame
hide()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Implementation of ComboPopup.hide().
hide()
- Method in interface javax.swing.plaf.basic.
ComboPopup
Hides the popup
hide()
- Method in class javax.swing.
Popup
Hides and disposes of the
Popup
.
HIDE_ON_CLOSE
- Static variable in interface javax.swing.
WindowConstants
The hide-window default window close operation
hidePopup()
- Method in class javax.swing.
JComboBox
Causes the combo box to close its popup window.
hides(Element, Element)
- Method in interface javax.lang.model.util.
Elements
Tests whether one type, method, or field hides another.
hideWindows()
- Method in interface java.awt.im.spi.
InputMethod
Closes or hides all windows opened by this input method instance or
 its class.
HIERARCHY_BOUNDS_EVENT_MASK
- Static variable in class java.awt.
AWTEvent
The event mask for selecting hierarchy bounds events.
HIERARCHY_CHANGED
- Static variable in class java.awt.event.
HierarchyEvent
The event id indicating that modification was made to the
 entire hierarchy tree.
HIERARCHY_EVENT_MASK
- Static variable in class java.awt.
AWTEvent
The event mask for selecting hierarchy events.
HIERARCHY_FIRST
- Static variable in class java.awt.event.
HierarchyEvent
Marks the first integer id for the range of hierarchy event ids.
HIERARCHY_LAST
- Static variable in class java.awt.event.
HierarchyEvent
Marks the last integer id for the range of ancestor event ids.
HIERARCHY_REQUEST_ERR
- Static variable in exception class org.w3c.dom.
DOMException
If any
Node
is inserted somewhere it doesn't belong.
HierarchyBoundsAdapter
- Class in
java.awt.event
An abstract adapter class for receiving ancestor moved and resized events.
HierarchyBoundsAdapter()
- Constructor for class java.awt.event.
HierarchyBoundsAdapter
Constructs a
HierarchyBoundsAdapter
.
HierarchyBoundsListener
- Interface in
java.awt.event
The listener interface for receiving ancestor moved and resized events.
hierarchyChanged(HierarchyEvent)
- Method in class java.awt.
AWTEventMulticaster
Handles the hierarchyChanged event by invoking the
 hierarchyChanged methods on listener-a and listener-b.
hierarchyChanged(HierarchyEvent)
- Method in interface java.awt.event.
HierarchyListener
Called when the hierarchy has been changed.
HierarchyEvent
- Class in
java.awt.event
An event which indicates a change to the
Component
hierarchy to which
Component
belongs.
HierarchyEvent(Component, int, Component, Container)
- Constructor for class java.awt.event.
HierarchyEvent
Constructs an
HierarchyEvent
object to identify a
 change in the
Component
hierarchy.
HierarchyEvent(Component, int, Component, Container, long)
- Constructor for class java.awt.event.
HierarchyEvent
Constructs an
HierarchyEvent
object to identify
 a change in the
Component
hierarchy.
HierarchyListener
- Interface in
java.awt.event
The listener interface for receiving hierarchy changed events.
HIGH
- Static variable in class java.awt.
PageAttributes.PrintQualityType
The PrintQualityType instance to use for specifying a high print
 quality.
HIGH
- Static variable in class javax.print.attribute.standard.
PrintQuality
Highest quality available on the printer.
HIGH_PRIVATE_USE_SURROGATES
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "High Private Use Surrogates" Unicode character
 block.
HIGH_SURROGATES
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "High Surrogates" Unicode character block.
higher(E)
- Method in class java.util.concurrent.
ConcurrentSkipListSet
higher(E)
- Method in interface java.util.
NavigableSet
Returns the least element in this set strictly greater than the
 given element, or
null
if there is no such element.
higher(E)
- Method in class java.util.
TreeSet
higherEntry(K)
- Method in class java.util.concurrent.
ConcurrentSkipListMap
Returns a key-value mapping associated with the least key
 strictly greater than the given key, or
null
if there
 is no such key.
higherEntry(K)
- Method in interface java.util.
NavigableMap
Returns a key-value mapping associated with the least key
 strictly greater than the given key, or
null
if there
 is no such key.
higherEntry(K)
- Method in class java.util.
TreeMap
higherKey(K)
- Method in class java.util.concurrent.
ConcurrentSkipListMap
higherKey(K)
- Method in interface java.util.
NavigableMap
Returns the least key strictly greater than the given key, or
null
if there is no such key.
higherKey(K)
- Method in class java.util.
TreeMap
highestLayer()
- Method in class javax.swing.
JLayeredPane
Returns the highest layer value from all current children.
highestOneBit(int)
- Static method in class java.lang.
Integer
Returns an
int
value with at most a single one-bit, in the
 position of the highest-order ("leftmost") one-bit in the specified
int
value.
highestOneBit(long)
- Static method in class java.lang.
Long
Returns a
long
value with at most a single one-bit, in the
 position of the highest-order ("leftmost") one-bit in the specified
long
value.
High level API
- Search tag in package java.net
Section
highlight
- Variable in class javax.swing.border.
EtchedBorder
The color to use for the etched highlight.
highlight
- Variable in class javax.swing.plaf.basic.
BasicBorders.ButtonBorder
The color of highlight.
highlight
- Variable in class javax.swing.plaf.basic.
BasicBorders.FieldBorder
The color of highlight.
highlight
- Variable in class javax.swing.plaf.basic.
BasicBorders.SplitPaneBorder
The color of highlight
highlight
- Variable in class javax.swing.plaf.basic.
BasicSeparatorUI
The color of the highlighting.
highlight
- Variable in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Highlight color
Highlight(int, int, Set<SourceCodeAnalysis.Attribute>)
- Constructor for record class jdk.jshell.
SourceCodeAnalysis.Highlight
Creates an instance of a
Highlight
record class.
highlightColor
- Static variable in class javax.swing.plaf.metal.
MetalSliderUI
The color of highlighting.
Highlighter
- Interface in
javax.swing.text
An interface for an object that allows one to mark up the background
 with colored areas.
Highlighter.Highlight
- Interface in
javax.swing.text
A highlight.
Highlighter.HighlightPainter
- Interface in
javax.swing.text
Highlight renderer.
highlightInner
- Variable in class javax.swing.border.
BevelBorder
The color to use for the bevel inner highlight.
highlightOuter
- Variable in class javax.swing.border.
BevelBorder
The color to use for the bevel outer highlight.
highlights(String)
- Method in class jdk.jshell.
SourceCodeAnalysis
Returns a collection of
Highlight
s which can be used to color
 the given snippet.
highSurrogate(int)
- Static method in class java.lang.
Character
Returns the leading surrogate (a
high surrogate code unit
) of the
surrogate pair
representing the specified supplementary character (Unicode
 code point) in the UTF-16 encoding.
HijrahChronology
- Class in
java.time.chrono
The Hijrah calendar is a lunar calendar supporting Islamic calendars.
HijrahDate
- Class in
java.time.chrono
A date in the Hijrah calendar system.
HijrahEra
- Enum Class in
java.time.chrono
An era in the Hijrah calendar system.
HINTS_OBSERVED
- Static variable in interface java.awt.image.renderable.
RenderableImage
String constant that can be used to identify a property on
 a RenderedImage obtained via the createRendering or
 createScaledRendering methods.
HIRAGANA
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Hiragana".
HIRAGANA
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Hiragana" Unicode character block.
hit(Rectangle, Shape, boolean)
- Method in class java.awt.
Graphics2D
Checks whether or not the specified
Shape
intersects
 the specified
Rectangle
, which is in device
 space.
hitClip(int, int, int, int)
- Method in class java.awt.
Graphics
Returns true if the specified rectangular area might intersect
 the current clipping area.
hitEnd()
- Method in class java.util.regex.
Matcher
Returns true if the end of input was hit by the search engine in
 the last match operation performed by this matcher.
hitTestChar(float, float)
- Method in class java.awt.font.
TextLayout
Returns a
TextHitInfo
corresponding to the
 specified point.
hitTestChar(float, float, Rectangle2D)
- Method in class java.awt.font.
TextLayout
Returns a
TextHitInfo
corresponding to the
 specified point.
hitToPoint(TextHitInfo, Point2D)
- Method in class java.awt.font.
TextLayout
Convert a hit to a point in standard coordinates.
HMAC_SHA1
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
HMAC-SHA1
MAC signature method algorithm URI
HMAC_SHA224
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
HMAC-SHA224
MAC signature method algorithm URI.
HMAC_SHA256
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
HMAC-SHA256
MAC signature method algorithm URI.
HMAC_SHA384
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
HMAC-SHA384
MAC signature method algorithm URI.
HMAC_SHA512
- Static variable in interface javax.xml.crypto.dsig.
SignatureMethod
The
HMAC-SHA512
MAC signature method algorithm URI.
HMACParameterSpec
- Class in
javax.xml.crypto.dsig.spec
Parameters for the
XML Signature HMAC Algorithm
.
HMACParameterSpec(int)
- Constructor for class javax.xml.crypto.dsig.spec.
HMACParameterSpec
Creates an
HMACParameterSpec
with the specified truncation
 length.
HOLD_CURSORS_OVER_COMMIT
- Static variable in interface java.sql.
ResultSet
The constant indicating that open
ResultSet
objects with this
 holdability will remain open when the current transaction is committed.
holdsLock(Object)
- Static method in class java.lang.
Thread
Returns
true
if and only if the current thread holds the
 monitor lock on the specified object.
HOME
- Static variable in class java.awt.
Event
Deprecated.
The Home key, a non-ASCII action key.
homeFolderIcon
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Home folder icon
homeKey
- Variable in class javax.swing.plaf.basic.
BasicSplitPaneUI
Deprecated.
As of Java 2 platform v1.3.
HONOR_DISPLAY_PROPERTIES
- Static variable in class javax.swing.
JEditorPane
Key for a client property used to indicate whether
 the default font and foreground color from the component are
 used if a font or foreground color is not specified in the styled
 text.
HORIZONTAL
- Static variable in interface java.awt.
Adjustable
Indicates that the
Adjustable
has horizontal orientation.
HORIZONTAL
- Static variable in class java.awt.
GridBagConstraints
Resize the component horizontally but not vertically.
HORIZONTAL
- Static variable in class java.awt.
Scrollbar
A constant that indicates a horizontal scroll bar.
HORIZONTAL
- Static variable in class javax.accessibility.
AccessibleState
Indicates the orientation of this object is horizontal.
HORIZONTAL
- Static variable in interface javax.swing.
SwingConstants
Horizontal orientation.
HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY
- Static variable in class javax.swing.
AbstractButton
Identifies a change in the button's horizontal alignment.
HORIZONTAL_CENTER
- Static variable in class javax.swing.
SpringLayout
Specifies the horizontal center of a component's bounding rectangle.
HORIZONTAL_SCROLLBAR
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies a horizontal scrollbar.
HORIZONTAL_SCROLLBAR_ALWAYS
- Static variable in interface javax.swing.
ScrollPaneConstants
Used to set the horizontal scroll bar policy so that
 horizontal scrollbars are always displayed.
HORIZONTAL_SCROLLBAR_AS_NEEDED
- Static variable in interface javax.swing.
ScrollPaneConstants
Used to set the horizontal scroll bar policy so that
 horizontal scrollbars are displayed only when needed.
HORIZONTAL_SCROLLBAR_NEVER
- Static variable in interface javax.swing.
ScrollPaneConstants
Used to set the horizontal scroll bar policy so that
 horizontal scrollbars are never displayed.
HORIZONTAL_SCROLLBAR_POLICY
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies the horizontal scroll bar policy property.
HORIZONTAL_SPLIT
- Static variable in class javax.swing.
JSplitPane
Horizontal split indicates the
Component
s are
 split along the x axis.
HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY
- Static variable in class javax.swing.
AbstractButton
Identifies a change in the button's horizontal text position.
HORIZONTAL_WRAP
- Static variable in class javax.swing.
JList
Indicates a "newspaper style" layout with cells flowing horizontally
 then vertically.
horizontalScrollBar
- Variable in class javax.swing.
JScrollPane
The scrollpane's horizontal scrollbar child.
horizontalScrollBarPolicy
- Variable in class javax.swing.
JScrollPane
The display policy for the horizontal scrollbar.
horizThumbIcon
- Static variable in class javax.swing.plaf.metal.
MetalSliderUI
A default horizontal thumb
Icon
.
hostEncoding
- Static variable in class javax.print.
DocFlavor
A string representing the host operating system encoding.
Host Name Resolution
- Search tag in class java.net.InetAddress
Section
hostnameVerifier
- Variable in class javax.net.ssl.
HttpsURLConnection
The
hostnameVerifier
for this object.
HostnameVerifier
- Interface in
javax.net.ssl
This class is the base interface for hostname verification.
hostsEqual(URL, URL)
- Method in class java.net.
URLStreamHandler
Compares the host components of two URLs.
HotSpotDiagnosticMXBean
- Interface in
com.sun.management
Diagnostic management interface for the HotSpot Virtual Machine.
HotSpotDiagnosticMXBean.ThreadDumpFormat
- Enum Class in
com.sun.management
Thread dump format.
HOUR
- Static variable in class java.util.
Calendar
Field number for
get
and
set
indicating the
 hour of the morning or afternoon.
HOUR_OF_AMPM
- Enum constant in enum class java.time.temporal.
ChronoField
The hour-of-am-pm.
HOUR_OF_DAY
- Enum constant in enum class java.time.temporal.
ChronoField
The hour-of-day.
HOUR_OF_DAY
- Static variable in class java.util.
Calendar
Field number for
get
and
set
indicating the
 hour of the day.
HOUR_OF_DAY0
- Static variable in class java.text.
DateFormat.Field
Constant identifying the hour of day field, where the legal values
 are 0 to 23.
HOUR_OF_DAY0_FIELD
- Static variable in class java.text.
DateFormat
Useful constant for zero-based HOUR_OF_DAY field alignment.
HOUR_OF_DAY1
- Static variable in class java.text.
DateFormat.Field
Constant identifying the hour of day field, where the legal values
 are 1 to 24.
HOUR_OF_DAY1_FIELD
- Static variable in class java.text.
DateFormat
Useful constant for one-based HOUR_OF_DAY field alignment.
HOUR0
- Static variable in class java.text.
DateFormat.Field
Constant identifying the hour field, where the legal values are
 0 to 11.
HOUR0_FIELD
- Static variable in class java.text.
DateFormat
Useful constant for zero-based HOUR field alignment.
HOUR1
- Static variable in class java.text.
DateFormat.Field
Constant identifying the hour field, where the legal values are
 1 to 12.
HOUR1_FIELD
- Static variable in class java.text.
DateFormat
Useful constant for one-based HOUR field alignment.
HOURS
- Enum constant in enum class java.time.temporal.
ChronoUnit
Unit that represents the concept of an hour.
HOURS
- Enum constant in enum class java.util.concurrent.
TimeUnit
Time unit representing sixty minutes.
HOURS
- Static variable in class javax.xml.datatype.
DatatypeConstants
A constant that represents the hours field.
How do I stop a thread that waits for long periods (e.g., for input)?
- Search tag in package java.lang
Section
How the Multiplexing Look and Feel Is Implemented
- Search tag in package javax.swing.plaf.multi
Section
How to Provide a Custom Multiplexing Look and Feel
- Search tag in package javax.swing.plaf.multi
Section
How to Use Auxiliary Look and Feels
- Search tag in package javax.swing.plaf.multi
Section
HR
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <hr>
HREF
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "href"
hsb
- Variable in class javax.swing.
ScrollPaneLayout
The scrollpane's horizontal scrollbar child.
hsbChangeListener
- Variable in class javax.swing.plaf.basic.
BasicScrollPaneUI
ChangeListener
installed on the horizontal scrollbar.
HSBChangeListener()
- Constructor for class javax.swing.plaf.basic.
BasicScrollPaneUI.HSBChangeListener
Deprecated.
Constructs a
HSBChangeListener
.
hsbPolicy
- Variable in class javax.swing.
ScrollPaneLayout
The display policy for the horizontal scrollbar.
HSBtoRGB(float, float, float)
- Static method in class java.awt.
Color
Converts the components of a color, as specified by the HSB
 model, to an equivalent set of values for the default RGB model.
HSPACE
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "hspace"
html
- Variable in class javax.swing.text.html.
HTMLEditorKit.InsertHTMLTextAction
HTML to insert.
html
- Variable in class javax.swing.text.html.parser.
DTD
The element corresponding to html.
HTML
- Class in
javax.swing.text.html
Constants used in the
HTMLDocument
.
HTML
- Enum constant in enum class javax.tools.
JavaFileObject.Kind
HTML files.
HTML
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <html>
HTML()
- Constructor for class javax.swing.text.html.
HTML
Constructs a
HTML
.
HTML_CONTAINER
- Static variable in class javax.accessibility.
AccessibleRole
An object containing a collection of
Accessibles
that together
 represents
HTML
content.
HTML.Attribute
- Class in
javax.swing.text.html
Typesafe enumeration representing an HTML
 attribute.
HTML.Tag
- Class in
javax.swing.text.html
Typesafe enumeration for an HTML tag.
HTML.UnknownTag
- Class in
javax.swing.text.html
Class represents unknown HTML tag.
HTML 4.01 Specification
- Search tag in class java.net.URLEncoder
External Specification
HTML 4.01 Specification
- Search tag in java.net.URLDecoder.decode(String, Charset)
External Specification
HTML 4.01 Specification
- Search tag in java.net.URLEncoder.encode(String, Charset)
External Specification
HTMLAnchorElement
- Interface in
org.w3c.dom.html
The anchor element.
HTMLAppletElement
- Interface in
org.w3c.dom.html
An embedded Java applet.
HTMLAreaElement
- Interface in
org.w3c.dom.html
Client-side image map area definition.
HTMLBaseElement
- Interface in
org.w3c.dom.html
Document base URI.
HTMLBaseFontElement
- Interface in
org.w3c.dom.html
Base font.
HTMLBodyElement
- Interface in
org.w3c.dom.html
The HTML document body.
HTMLBRElement
- Interface in
org.w3c.dom.html
Force a line break.
HTMLButtonElement
- Interface in
org.w3c.dom.html
Push button.
HTMLCollection
- Interface in
org.w3c.dom.html
An
HTMLCollection
is a list of nodes.
HTMLDirectoryElement
- Interface in
org.w3c.dom.html
Directory list.
HTMLDivElement
- Interface in
org.w3c.dom.html
Generic block container.
HTMLDListElement
- Interface in
org.w3c.dom.html
Definition list.
HTMLDocument
- Class in
javax.swing.text.html
A document that models HTML.
HTMLDocument
- Interface in
org.w3c.dom.html
An
HTMLDocument
is the root of the HTML hierarchy and holds
 the entire content.
HTMLDocument()
- Constructor for class javax.swing.text.html.
HTMLDocument
Constructs an HTML document using the default buffer size
 and a default
StyleSheet
.
HTMLDocument(AbstractDocument.Content, StyleSheet)
- Constructor for class javax.swing.text.html.
HTMLDocument
Constructs an HTML document with the given content
 storage implementation and the given style/attribute
 storage mechanism.
HTMLDocument(StyleSheet)
- Constructor for class javax.swing.text.html.
HTMLDocument
Constructs an HTML document with the default content
 storage implementation and the specified style/attribute
 storage mechanism.
HTMLDocument.BlockElement
- Class in
javax.swing.text.html
An element that represents a structural
block
of
 HTML.
HTMLDocument.HTMLReader
- Class in
javax.swing.text.html
An HTML reader to load an HTML document with an HTML
 element structure.
HTMLDocument.HTMLReader.BlockAction
- Class in
javax.swing.text.html
Action assigned by default to handle the Block task of the reader.
HTMLDocument.HTMLReader.CharacterAction
- Class in
javax.swing.text.html
Action assigned by default to handle the Character task of the reader.
HTMLDocument.HTMLReader.FormAction
- Class in
javax.swing.text.html
Action to support forms by building all of the elements
 used to represent form controls.
HTMLDocument.HTMLReader.HiddenAction
- Class in
javax.swing.text.html
Action assigned by default to handle the Hidden task of the reader.
HTMLDocument.HTMLReader.IsindexAction
- Class in
javax.swing.text.html
Action assigned by default to handle the Isindex task of the reader.
HTMLDocument.HTMLReader.ParagraphAction
- Class in
javax.swing.text.html
Action assigned by default to handle the Paragraph task of the reader.
HTMLDocument.HTMLReader.PreAction
- Class in
javax.swing.text.html
Action assigned by default to handle the Pre block task of the reader.
HTMLDocument.HTMLReader.SpecialAction
- Class in
javax.swing.text.html
Action assigned by default to handle the Special task of the reader.
HTMLDocument.HTMLReader.TagAction
- Class in
javax.swing.text.html
An action to be performed in response
 to parsing a tag.
HTMLDocument.Iterator
- Class in
javax.swing.text.html
An iterator to iterate over a particular type of
 tag.
HTMLDocument.RunElement
- Class in
javax.swing.text.html
An element that represents a chunk of text that has
 a set of HTML character level attributes assigned to
 it.
HTMLDOMImplementation
- Interface in
org.w3c.dom.html
The
HTMLDOMImplementation
interface extends the
DOMImplementation
interface with a method for creating an
 HTML document instance.
HTMLEditorKit
- Class in
javax.swing.text.html
The Swing JEditorPane text component supports different kinds
 of content via a plug-in mechanism called an EditorKit.
HTMLEditorKit()
- Constructor for class javax.swing.text.html.
HTMLEditorKit
Constructs an HTMLEditorKit, creates a StyleContext,
 and loads the style sheet.
HTMLEditorKit.HTMLFactory
- Class in
javax.swing.text.html
A factory to build views for HTML.
HTMLEditorKit.HTMLTextAction
- Class in
javax.swing.text.html
An abstract Action providing some convenience methods that may
 be useful in inserting HTML into an existing document.
HTMLEditorKit.InsertHTMLTextAction
- Class in
javax.swing.text.html
InsertHTMLTextAction can be used to insert an arbitrary string of HTML
 into an existing HTML document.
HTMLEditorKit.LinkController
- Class in
javax.swing.text.html
Class to watch the associated component and fire
 hyperlink events on it when appropriate.
HTMLEditorKit.Parser
- Class in
javax.swing.text.html
Interface to be supported by the parser.
HTMLEditorKit.ParserCallback
- Class in
javax.swing.text.html
The result of parsing drives these callback methods.
HTMLElement
- Interface in
org.w3c.dom.html
All HTML element interfaces derive from this class.
HTMLFactory()
- Constructor for class javax.swing.text.html.
HTMLEditorKit.HTMLFactory
Constructs a
HTMLFactory
.
HTMLFieldSetElement
- Interface in
org.w3c.dom.html
Organizes form controls into logical groups.
HTMLFontElement
- Interface in
org.w3c.dom.html
Local change to font.
HTMLFormElement
- Interface in
org.w3c.dom.html
The
FORM
element encompasses behavior similar to a collection
 and an element.
HTMLFrameElement
- Interface in
org.w3c.dom.html
Create a frame.
HTMLFrameHyperlinkEvent
- Class in
javax.swing.text.html
HTMLFrameHyperlinkEvent is used to notify interested
 parties that link was activated in a frame.
HTMLFrameHyperlinkEvent(Object, HyperlinkEvent.EventType, URL, String)
- Constructor for class javax.swing.text.html.
HTMLFrameHyperlinkEvent
Creates a new object representing a html frame
 hypertext link event.
HTMLFrameHyperlinkEvent(Object, HyperlinkEvent.EventType, URL, String, String)
- Constructor for class javax.swing.text.html.
HTMLFrameHyperlinkEvent
Creates a new object representing a hypertext link event.
HTMLFrameHyperlinkEvent(Object, HyperlinkEvent.EventType, URL, String, Element, InputEvent, String)
- Constructor for class javax.swing.text.html.
HTMLFrameHyperlinkEvent
Creates a new object representing a hypertext link event.
HTMLFrameHyperlinkEvent(Object, HyperlinkEvent.EventType, URL, String, Element, String)
- Constructor for class javax.swing.text.html.
HTMLFrameHyperlinkEvent
Creates a new object representing a hypertext link event.
HTMLFrameHyperlinkEvent(Object, HyperlinkEvent.EventType, URL, Element, String)
- Constructor for class javax.swing.text.html.
HTMLFrameHyperlinkEvent
Creates a new object representing a hypertext link event.
HTMLFrameSetElement
- Interface in
org.w3c.dom.html
Create a grid of frames.
HTMLHeadElement
- Interface in
org.w3c.dom.html
Document head information.
HTMLHeadingElement
- Interface in
org.w3c.dom.html
For the
H1
to
H6
elements.
HTMLHRElement
- Interface in
org.w3c.dom.html
Create a horizontal rule.
HTMLHtmlElement
- Interface in
org.w3c.dom.html
Root of an HTML document.
HTMLIFrameElement
- Interface in
org.w3c.dom.html
Inline subwindows.
HTMLImageElement
- Interface in
org.w3c.dom.html
Embedded image.
HTMLInputElement
- Interface in
org.w3c.dom.html
Form control.
HTMLIsIndexElement
- Interface in
org.w3c.dom.html
This element is used for single-line text input.
HTMLLabelElement
- Interface in
org.w3c.dom.html
Form field label text.
HTMLLegendElement
- Interface in
org.w3c.dom.html
Provides a caption for a
FIELDSET
grouping.
HTMLLIElement
- Interface in
org.w3c.dom.html
List item.
HTMLLink(Element)
- Constructor for class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink
Constructs a
HTMLLink
.
HTMLLinkElement
- Interface in
org.w3c.dom.html
The
LINK
element specifies a link to an external resource,
 and defines this document's relationship to that resource (or vice versa).
HTMLMapElement
- Interface in
org.w3c.dom.html
Client-side image map.
HTMLMenuElement
- Interface in
org.w3c.dom.html
Menu list.
HTMLMetaElement
- Interface in
org.w3c.dom.html
This contains generic meta-information about the document.
HTMLModElement
- Interface in
org.w3c.dom.html
Notice of modification to part of a document.
HTMLObjectElement
- Interface in
org.w3c.dom.html
Generic embedded object.
HTMLOListElement
- Interface in
org.w3c.dom.html
Ordered list.
HTMLOptGroupElement
- Interface in
org.w3c.dom.html
Group options together in logical subdivisions.
HTMLOptionElement
- Interface in
org.w3c.dom.html
A selectable choice.
HTMLParagraphElement
- Interface in
org.w3c.dom.html
Paragraphs.
HTMLParamElement
- Interface in
org.w3c.dom.html
Parameters fed to the
OBJECT
element.
HTMLPreElement
- Interface in
org.w3c.dom.html
Preformatted text.
HTMLQuoteElement
- Interface in
org.w3c.dom.html
For the
Q
and
BLOCKQUOTE
elements.
HTMLReader(int)
- Constructor for class javax.swing.text.html.
HTMLDocument.HTMLReader
Constructs an HTMLReader using default pop and push depth and no tag to insert.
HTMLReader(int, int, int, HTML.Tag)
- Constructor for class javax.swing.text.html.
HTMLDocument.HTMLReader
Constructs an HTMLReader.
HTMLScriptElement
- Interface in
org.w3c.dom.html
Script statements.
HTMLSelectElement
- Interface in
org.w3c.dom.html
The select element allows the selection of an option.
HTML Standard
- Search tag in class jdk.javadoc.doclet.StandardDoclet
External Specification
HTML Standard
- Search tag in com.sun.source.util.DocTrees.getCharacters(EntityTree)
External Specification
HTMLStyleElement
- Interface in
org.w3c.dom.html
Style information.
HTMLTableCaptionElement
- Interface in
org.w3c.dom.html
Table caption See the  CAPTION element definition in HTML 4.0.
HTMLTableCellElement
- Interface in
org.w3c.dom.html
The object used to represent the
TH
and
TD
elements.
HTMLTableColElement
- Interface in
org.w3c.dom.html
Regroups the
COL
and
COLGROUP
elements.
HTMLTableElement
- Interface in
org.w3c.dom.html
The create* and delete* methods on the table allow authors to construct
 and modify tables.
HTMLTableRowElement
- Interface in
org.w3c.dom.html
A row in a table.
HTMLTableSectionElement
- Interface in
org.w3c.dom.html
The
THEAD
,
TFOOT
, and
TBODY
elements.
HTMLTextAction(String)
- Constructor for class javax.swing.text.html.
HTMLEditorKit.HTMLTextAction
Creates a new HTMLTextAction from a string action name.
HTMLTextAreaElement
- Interface in
org.w3c.dom.html
Multi-line text field.
HTMLTitleElement
- Interface in
org.w3c.dom.html
The document title.
HTMLUListElement
- Interface in
org.w3c.dom.html
Unordered list.
HTMLWriter
- Class in
javax.swing.text.html
This is a writer for HTMLDocuments.
HTMLWriter(Writer, HTMLDocument)
- Constructor for class javax.swing.text.html.
HTMLWriter
Creates a new HTMLWriter.
HTMLWriter(Writer, HTMLDocument, int, int)
- Constructor for class javax.swing.text.html.
HTMLWriter
Creates a new HTMLWriter.
HTTP
- Enum constant in enum class java.net.
Proxy.Type
Represents proxy for high level protocols such as HTTP or FTP.
HTTP
- Static variable in class javax.print.attribute.standard.
ReferenceUriSchemesSupported
HyperText Transfer Protocol (HTTP).
HTTP_1_1
- Enum constant in enum class java.net.http.
HttpClient.Version
HTTP version 1.1
HTTP_2
- Enum constant in enum class java.net.http.
HttpClient.Version
HTTP version 2
HTTP_ACCEPTED
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 202: Accepted.
HTTP_BAD_GATEWAY
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 502: Bad Gateway.
HTTP_BAD_METHOD
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 405: Method Not Allowed.
HTTP_BAD_REQUEST
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 400: Bad Request.
HTTP_CLIENT_TIMEOUT
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 408: Request Time-Out.
HTTP_CONFLICT
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 409: Conflict.
HTTP_CREATED
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 201: Created.
HTTP_ENTITY_TOO_LARGE
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 413: Request Entity Too Large.
HTTP_FORBIDDEN
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 403: Forbidden.
HTTP_GATEWAY_TIMEOUT
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 504: Gateway Timeout.
HTTP_GONE
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 410: Gone.
HTTP_INTERNAL_ERROR
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 500: Internal Server Error.
HTTP_LENGTH_REQUIRED
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 411: Length Required.
HTTP_MOVED_PERM
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 301: Moved Permanently.
HTTP_MOVED_TEMP
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 302: Temporary Redirect.
HTTP_MULT_CHOICE
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 300: Multiple Choices.
HTTP_NO_CONTENT
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 204: No Content.
HTTP_NOT_ACCEPTABLE
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 406: Not Acceptable.
HTTP_NOT_AUTHORITATIVE
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 203: Non-Authoritative Information.
HTTP_NOT_FOUND
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 404: Not Found.
HTTP_NOT_IMPLEMENTED
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 501: Not Implemented.
HTTP_NOT_MODIFIED
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 304: Not Modified.
HTTP_OK
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 200: OK.
HTTP_PARTIAL
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 206: Partial Content.
HTTP_PAYMENT_REQUIRED
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 402: Payment Required.
HTTP_PRECON_FAILED
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 412: Precondition Failed.
HTTP_PROXY_AUTH
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 407: Proxy Authentication Required.
HTTP_REQ_TOO_LONG
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 414: Request-URI Too Large.
HTTP_RESET
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 205: Reset Content.
HTTP_SEE_OTHER
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 303: See Other.
HTTP_SERVER_ERROR
- Static variable in class java.net.
HttpURLConnection
Deprecated.
it is misplaced and shouldn't have existed.
HTTP_UNAUTHORIZED
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 401: Unauthorized.
HTTP_UNAVAILABLE
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 503: Service Unavailable.
HTTP_UNSUPPORTED_TYPE
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 415: Unsupported Media Type.
HTTP_USE_PROXY
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 305: Use Proxy.
HTTP_VERSION
- Static variable in class java.net.
HttpURLConnection
HTTP Status-Code 505: HTTP Version Not Supported.
http://xml.org/sax/features/namespace-prefixes
- Search tag in class javax.xml.validation.ValidatorHandler
Section
http.agent
- Search tag in package java.net
System Property
http.auth.digest.cnonceRepeat
- Search tag in package java.net
System Property
http.auth.digest.reEnabledAlgorithms
- Search tag in package java.net
System Property
http.auth.digest.validateProxy
- Search tag in package java.net
System Property
http.auth.digest.validateServer
- Search tag in package java.net
System Property
http.auth.ntlm.domain
- Search tag in package java.net
System Property
http.keepAlive
- Search tag in package java.net
System Property
http.keepAlive.time.proxy
- Search tag in package java.net
System Property
http.keepAlive.time.server
- Search tag in package java.net
System Property
http.maxConnections
- Search tag in package java.net
System Property
http.maxRedirects
- Search tag in package java.net
System Property
http.nonProxyHosts
- Search tag in package java.net
System Property
http.proxyHost
- Search tag in package java.net
System Property
http.proxyPort
- Search tag in package java.net
System Property
HttpClient
- Class in
java.net.http
An HTTP Client.
HttpClient()
- Constructor for class java.net.http.
HttpClient
Creates an HttpClient.
HttpClient.Builder
- Interface in
java.net.http
A builder of
HTTP Clients
.
HttpClient.Redirect
- Enum Class in
java.net.http
Defines the automatic redirection policy.
HttpClient.Version
- Enum Class in
java.net.http
The HTTP protocol version.
HTTP Client and WebSocket APIs
- Search tag in package java.net.http
Section
HttpConnectTimeoutException
- Exception Class in
java.net.http
Thrown when a connection, over which an
HttpRequest
is intended to be
 sent, is not successfully established within a specified time period.
HttpConnectTimeoutException(String)
- Constructor for exception class java.net.http.
HttpConnectTimeoutException
Constructs an
HttpConnectTimeoutException
with the given detail
 message.
HttpContext
- Class in
com.sun.net.httpserver
HttpContext
represents a mapping between the root
URI
path of an application to a
HttpHandler
which is invoked to handle
 requests destined for that path on the associated
HttpServer
or
HttpsServer
.
HttpContext()
- Constructor for class com.sun.net.httpserver.
HttpContext
Constructor for subclasses to call.
HttpCookie
- Class in
java.net
An HttpCookie object represents an HTTP cookie, which carries state
 information between server and user agent.
HttpCookie(String, String)
- Constructor for class java.net.
HttpCookie
Constructs a cookie with a specified name and value.
HTTPEQUIV
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "http-equiv"
HttpExchange
- Class in
com.sun.net.httpserver
This class encapsulates a HTTP request received and a
 response to be generated in one exchange.
HttpExchange()
- Constructor for class com.sun.net.httpserver.
HttpExchange
Constructor for subclasses to call.
HttpHandler
- Interface in
com.sun.net.httpserver
A handler which is invoked to process HTTP exchanges.
HttpHandlers
- Class in
com.sun.net.httpserver
Implementations of
HttpHandler
that implement various useful handlers, such as a static response handler,
 or a conditional handler that complements one handler with another.
HttpHeaders
- Class in
java.net.http
A read-only view of a set of HTTP headers.
HttpPrincipal
- Class in
com.sun.net.httpserver
Represents a user authenticated by HTTP Basic or Digest
 authentication.
HttpPrincipal(String, String)
- Constructor for class com.sun.net.httpserver.
HttpPrincipal
Creates a
HttpPrincipal
from the given
username
and
realm
.
HttpRequest
- Class in
java.net.http
An HTTP request.
HttpRequest()
- Constructor for class java.net.http.
HttpRequest
Creates an HttpRequest.
HttpRequest.BodyPublisher
- Interface in
java.net.http
A
BodyPublisher
converts high-level Java objects into a flow of
 byte buffers suitable for sending as a request body.
HttpRequest.BodyPublishers
- Class in
java.net.http
Implementations of
BodyPublisher
that implement
 various useful publishers, such as publishing the request body from a
 String, or from a file.
HttpRequest.Builder
- Interface in
java.net.http
A builder of
HTTP requests
.
HttpResponse<T>
- Interface in
java.net.http
An HTTP response.
HttpResponse.BodyHandler<T>
- Interface in
java.net.http
A handler for response bodies.
HttpResponse.BodyHandlers
- Class in
java.net.http
Implementations of
BodyHandler
that implement various
 useful handlers, such as handling the response body as a String, or
 streaming the response body to a file.
HttpResponse.BodySubscriber<T>
- Interface in
java.net.http
A
BodySubscriber
consumes response body bytes and converts them
 into a higher-level Java type.
HttpResponse.BodySubscribers
- Class in
java.net.http
Implementations of
BodySubscriber
that implement
 various useful subscribers, such as converting the response body bytes
 into a String, or streaming the bytes to a file.
HttpResponse.PushPromiseHandler<T>
- Interface in
java.net.http
A handler for push promises.
HttpResponse.ResponseInfo
- Interface in
java.net.http
Initial response information supplied to a
BodyHandler
when a response is initially received and before the body is processed.
HttpRetryException
- Exception Class in
java.net
Thrown to indicate that a HTTP request needs to be retried
 but cannot be retried automatically, due to streaming mode
 being enabled.
HttpRetryException(String, int)
- Constructor for exception class java.net.
HttpRetryException
Constructs a new
HttpRetryException
from the
 specified response code and exception detail message
HttpRetryException(String, int, String)
- Constructor for exception class java.net.
HttpRetryException
Constructs a new
HttpRetryException
with detail message
 responseCode and the contents of the Location response header field.
HTTPS
- Static variable in class javax.print.attribute.standard.
ReferenceUriSchemesSupported
Secure HyperText Transfer Protocol (HTTPS).
https.proxyHost
- Search tag in package java.net
System Property
https.proxyPort
- Search tag in package java.net
System Property
HttpsConfigurator
- Class in
com.sun.net.httpserver
This class is used to configure the https parameters for each incoming
 https connection on a
HttpsServer
.
HttpsConfigurator(SSLContext)
- Constructor for class com.sun.net.httpserver.
HttpsConfigurator
Creates a Https configuration, with the given
SSLContext
.
HttpServer
- Class in
com.sun.net.httpserver
This class implements a simple HTTP server.
HttpServer()
- Constructor for class com.sun.net.httpserver.
HttpServer
Constructor for subclasses to call.
HttpServerProvider
- Class in
com.sun.net.httpserver.spi
Service provider class for HttpServer.
HttpServerProvider()
- Constructor for class com.sun.net.httpserver.spi.
HttpServerProvider
Initializes a new instance of this class.
HttpsExchange
- Class in
com.sun.net.httpserver
This class encapsulates a HTTPS request received and a response to be
 generated in one exchange and defines the extensions to
HttpExchange
that are specific to the HTTPS protocol.
HttpsExchange()
- Constructor for class com.sun.net.httpserver.
HttpsExchange
Constructor for subclasses to call.
HttpsParameters
- Class in
com.sun.net.httpserver
Represents the set of parameters for each https connection negotiated with
 clients.
HttpsParameters()
- Constructor for class com.sun.net.httpserver.
HttpsParameters
Constructor for subclasses to call.
HttpsServer
- Class in
com.sun.net.httpserver
This class is an extension of
HttpServer
which provides support for
 HTTPS.
HttpsServer()
- Constructor for class com.sun.net.httpserver.
HttpsServer
Constructor for subclasses to call.
HttpsURLConnection
- Class in
javax.net.ssl
HttpsURLConnection
extends
HttpURLConnection
with support for https-specific features.
HttpsURLConnection(URL)
- Constructor for class javax.net.ssl.
HttpsURLConnection
Creates an
HttpsURLConnection
using the
 URL specified.
HttpTimeoutException
- Exception Class in
java.net.http
Thrown when a response is not received within a specified time period.
HttpTimeoutException(String)
- Constructor for exception class java.net.http.
HttpTimeoutException
Constructs an
HttpTimeoutException
with the given detail message.
HttpURLConnection
- Class in
java.net
A URLConnection with support for HTTP-specific features.
HttpURLConnection(URL)
- Constructor for class java.net.
HttpURLConnection
Constructor for the HttpURLConnection.
HUFFMAN_ONLY
- Static variable in class java.util.zip.
Deflater
Compression strategy for Huffman coding only.
HYPERLINK
- Static variable in class javax.accessibility.
AccessibleRole
A hypertext anchor.
HyperlinkEvent
- Class in
javax.swing.event
HyperlinkEvent is used to notify interested parties that
 something has happened with respect to a hypertext link.
HyperlinkEvent(Object, HyperlinkEvent.EventType, URL)
- Constructor for class javax.swing.event.
HyperlinkEvent
Creates a new object representing a hypertext link event.
HyperlinkEvent(Object, HyperlinkEvent.EventType, URL, String)
- Constructor for class javax.swing.event.
HyperlinkEvent
Creates a new object representing a hypertext link event.
HyperlinkEvent(Object, HyperlinkEvent.EventType, URL, String, Element)
- Constructor for class javax.swing.event.
HyperlinkEvent
Creates a new object representing a hypertext link event.
HyperlinkEvent(Object, HyperlinkEvent.EventType, URL, String, Element, InputEvent)
- Constructor for class javax.swing.event.
HyperlinkEvent
Creates a new object representing a hypertext link event.
HyperlinkEvent.EventType
- Class in
javax.swing.event
Defines the ENTERED, EXITED, and ACTIVATED event types, along
 with their string representations, returned by toString().
HyperlinkListener
- Interface in
javax.swing.event
HyperlinkListener
hyperlinkUpdate(HyperlinkEvent)
- Method in interface javax.swing.event.
HyperlinkListener
Called when a hypertext link is updated.
hypot(double, double)
- Static method in class java.lang.
Math
Returns sqrt(
x
2
+
y
2
)
 without intermediate overflow or underflow.
hypot(double, double)
- Static method in class java.lang.
StrictMath
Returns sqrt(
x
2
+
y
2
)
 without intermediate overflow or underflow.
HYPOT
- Static variable in class jdk.incubator.vector.
VectorOperators
Produce
hypot(a,b)
.
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.