G-Index (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Index
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
G
8.0 Getting Universal Data Access
- Search tag in interface javax.sql.rowset.CachedRowSet
Section
GAIN_CONTROL_HIGH_GAIN_DOWN
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "GainControl" tag.
GAIN_CONTROL_HIGH_GAIN_UP
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "GainControl" tag.
GAIN_CONTROL_LOW_GAIN_DOWN
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "GainControl" tag.
GAIN_CONTROL_LOW_GAIN_UP
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "GainControl" tag.
GAIN_CONTROL_NONE
- Static variable in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
A value to be used with the "GainControl" tag.
GAP_TOKEN
- Static variable in exception class org.ietf.jgss.
GSSException
An expected per-message token was not received.
GapContent
- Class in
javax.swing.text
An implementation of the AbstractDocument.Content interface
 implemented using a gapped buffer similar to that used by emacs.
GapContent()
- Constructor for class javax.swing.text.
GapContent
Creates a new GapContent object.
GapContent(int)
- Constructor for class javax.swing.text.
GapContent
Creates a new GapContent object, with the initial
 size specified.
GARBAGE_COLLECTION_NOTIFICATION
- Static variable in class com.sun.management.
GarbageCollectionNotificationInfo
Notification type denoting that
 the Java virtual machine has completed a garbage collection cycle.
GARBAGE_COLLECTOR_MXBEAN_DOMAIN_TYPE
- Static variable in class java.lang.management.
ManagementFactory
The domain name and the type key property in
 the
ObjectName
for a
GarbageCollectorMXBean
.
GarbageCollectionNotificationInfo
- Class in
com.sun.management
The information about a garbage collection
GarbageCollectionNotificationInfo(String, String, String, GcInfo)
- Constructor for class com.sun.management.
GarbageCollectionNotificationInfo
Constructs a
GarbageCollectionNotificationInfo
object.
GarbageCollectorMXBean
- Interface in
com.sun.management
Platform-specific management interface for a garbage collector
 which performs collections in cycles.
GarbageCollectorMXBean
- Interface in
java.lang.management
The management interface for the garbage collection of
 the Java virtual machine.
GatheringByteChannel
- Interface in
java.nio.channels
A channel that can write bytes from a sequence of buffers.
GaugeMonitor
- Class in
javax.management.monitor
Defines a monitor MBean designed to observe the values of a gauge attribute.
GaugeMonitor()
- Constructor for class javax.management.monitor.
GaugeMonitor
Default constructor.
GaugeMonitorMBean
- Interface in
javax.management.monitor
Exposes the remote management interface of the gauge monitor MBean.
gc()
- Method in interface java.lang.management.
MemoryMXBean
Runs the garbage collector.
gc()
- Method in class java.lang.
Runtime
Runs the garbage collector in the Java Virtual Machine.
gc()
- Static method in class java.lang.
System
Runs the garbage collector in the Java Virtual Machine.
gcd(BigInteger)
- Method in class java.math.
BigInteger
Returns a BigInteger whose value is the greatest common divisor of
abs(this)
and
abs(val)
.
GcInfo
- Class in
com.sun.management
Garbage collection information.
GCMParameterSpec
- Class in
javax.crypto.spec
Specifies the set of parameters required by a
Cipher
using the Galois/Counter Mode (GCM) mode.
GCMParameterSpec(int, byte[])
- Constructor for class javax.crypto.spec.
GCMParameterSpec
Constructs a GCMParameterSpec using the specified authentication
 tag bit-length and IV buffer.
GCMParameterSpec(int, byte[], int, int)
- Constructor for class javax.crypto.spec.
GCMParameterSpec
Constructs a GCMParameterSpec object using the specified
 authentication tag bit-length and a subset of the specified
 buffer as the IV.
GDAY
- Static variable in class javax.xml.datatype.
DatatypeConstants
Fully qualified name for W3C XML Schema 1.0 datatype
gDay
.
GE
- Static variable in class javax.management.
Query
A code representing the
Query.geq(javax.management.ValueExp, javax.management.ValueExp)
query.
GE
- Static variable in class jdk.incubator.vector.
VectorOperators
Compare
a>=b
.
General
- Search tag in class java.util.Formatter
Section
GENERAL
- Static variable in interface javax.swing.text.html.parser.
DTDConstants
The DTD constant corresponds to GENERAL
GENERAL_PUNCTUATION
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "General Punctuation" Unicode character block.
General Exceptions
- Search tag in package java.nio.file
Section
GeneralPath
- Class in
java.awt.geom
The
GeneralPath
class represents a geometric path
 constructed from straight lines, and quadratic and cubic
 (Bézier) curves.
GeneralPath()
- Constructor for class java.awt.geom.
GeneralPath
Constructs a new empty single precision
GeneralPath
object
 with a default winding rule of
Path2D.WIND_NON_ZERO
.
GeneralPath(int)
- Constructor for class java.awt.geom.
GeneralPath
Constructs a new
GeneralPath
object with the specified
 winding rule to control operations that require the interior of the
 path to be defined.
GeneralPath(int, int)
- Constructor for class java.awt.geom.
GeneralPath
Constructs a new
GeneralPath
object with the specified
 winding rule and the specified initial capacity to store path
 coordinates.
GeneralPath(Shape)
- Constructor for class java.awt.geom.
GeneralPath
Constructs a new
GeneralPath
object from an arbitrary
Shape
object.
GeneralSecurityException
- Exception Class in
java.security
The
GeneralSecurityException
class is a generic
 security exception class that provides type safety for all the
 security-related exception classes that extend from it.
GeneralSecurityException()
- Constructor for exception class java.security.
GeneralSecurityException
Constructs a
GeneralSecurityException
with no detail message.
GeneralSecurityException(String)
- Constructor for exception class java.security.
GeneralSecurityException
Constructs a
GeneralSecurityException
with the specified detail
 message.
GeneralSecurityException(String, Throwable)
- Constructor for exception class java.security.
GeneralSecurityException
Creates a
GeneralSecurityException
with the specified
 detail message and cause.
GeneralSecurityException(Throwable)
- Constructor for exception class java.security.
GeneralSecurityException
Creates a
GeneralSecurityException
with the specified cause
 and a detail message of
(cause==null ? null : cause.toString())
(which typically contains the class and detail message of
cause
).
General thread information
- Search tag in class java.lang.management.ThreadInfo
Section
generate()
- Method in class com.sun.source.util.
JavacTask
Generates code.
generate(DoubleSupplier)
- Static method in interface java.util.stream.
DoubleStream
Returns an infinite sequential unordered stream where each element is
 generated by the provided
DoubleSupplier
.
generate(IntSupplier)
- Static method in interface java.util.stream.
IntStream
Returns an infinite sequential unordered stream where each element is
 generated by the provided
IntSupplier
.
generate(LongSupplier)
- Static method in interface java.util.stream.
LongStream
Returns an infinite sequential unordered stream where each element is
 generated by the provided
LongSupplier
.
generate(Supplier<? extends T>)
- Static method in interface java.util.stream.
Stream
Returns an infinite sequential unordered stream where each element is
 generated by the provided
Supplier
.
generate(ExecutionEnv, String)
- Static method in interface jdk.jshell.spi.
ExecutionControl
Search for a provider, then create and return the
ExecutionControl
instance.
generate(ExecutionEnv, String, Map<String, String>)
- Static method in interface jdk.jshell.spi.
ExecutionControl
Search for a provider, then create and return the
ExecutionControl
instance.
generate(ExecutionEnv, Map<String, String>)
- Method in class jdk.jshell.execution.
FailOverExecutionControlProvider
Create and return a locally executing
ExecutionControl
instance.
generate(ExecutionEnv, Map<String, String>)
- Method in class jdk.jshell.execution.
JdiExecutionControlProvider
generate(ExecutionEnv, Map<String, String>)
- Method in class jdk.jshell.execution.
LocalExecutionControlProvider
Create and return a locally executing
ExecutionControl
instance.
generate(ExecutionEnv, Map<String, String>)
- Method in interface jdk.jshell.spi.
ExecutionControlProvider
Create and return the
ExecutionControl
instance.
GENERATE
- Enum constant in enum class com.sun.source.util.
TaskEvent.Kind
For events relating to class files being generated.
generateCertificate(InputStream)
- Method in class java.security.cert.
CertificateFactory
Generates a certificate object and initializes it with
 the data read from the input stream
inStream
.
generateCertificates(InputStream)
- Method in class java.security.cert.
CertificateFactory
Returns a (possibly empty) collection view of the certificates read
 from the given input stream
inStream
.
generateCertPath(InputStream)
- Method in class java.security.cert.
CertificateFactory
Generates a
CertPath
object and initializes it with
 the data read from the
InputStream
inStream.
generateCertPath(InputStream, String)
- Method in class java.security.cert.
CertificateFactory
Generates a
CertPath
object and initializes it with
 the data read from the
InputStream
inStream.
generateCertPath(List<? extends Certificate>)
- Method in class java.security.cert.
CertificateFactory
Generates a
CertPath
object and initializes it with
 a
List
of
Certificate
s.
generateCRL(InputStream)
- Method in class java.security.cert.
CertificateFactory
Generates a certificate revocation list (CRL) object and initializes it
 with the data read from the input stream
inStream
.
generateCRLs(InputStream)
- Method in class java.security.cert.
CertificateFactory
Returns a (possibly empty) collection view of the CRLs read
 from the given input stream
inStream
.
Generated
- Annotation Interface in
javax.annotation.processing
The Generated annotation is used to mark source code that has been generated.
generatedKeyAlwaysReturned()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether a generated key will always be returned if the column
 name(s) or index(es) specified for the auto generated key column(s)
 are valid and the statement succeeds.
generateKey()
- Method in class javax.crypto.
KeyGenerator
Generates a secret key.
generateKeyPair()
- Method in class java.security.
KeyPairGenerator
Generates a key pair.
generateKeyPair()
- Method in class java.security.
KeyPairGeneratorSpi
Generates a key pair.
generateParameters()
- Method in class java.security.
AlgorithmParameterGenerator
Generates the parameters.
generatePrivate(KeySpec)
- Method in class java.security.
KeyFactory
Generates a private key object from the provided key specification
 (key material).
generatePublic(KeySpec)
- Method in class java.security.
KeyFactory
Generates a public key object from the provided key specification
 (key material).
generateSecret()
- Method in class javax.crypto.
KeyAgreement
Generates the shared secret and returns it in a new buffer.
generateSecret(byte[], int)
- Method in class javax.crypto.
KeyAgreement
Generates the shared secret, and places it into the buffer
sharedSecret
, beginning at
offset
inclusive.
generateSecret(String)
- Method in class javax.crypto.
KeyAgreement
Creates the shared secret and returns it as a
SecretKey
object of the specified algorithm.
generateSecret(KeySpec)
- Method in class javax.crypto.
SecretKeyFactory
Generates a
SecretKey
object from the provided key
 specification (key material).
generateSeed(int)
- Method in class java.security.
SecureRandom
Returns the given number of seed bytes, computed using the seed
 generation algorithm that this class uses to seed itself.
generic()
- Method in class java.lang.invoke.
MethodType
Converts all types, both reference and primitive, to
Object
.
GENERIC_FAILURE
- Static variable in class java.util.logging.
ErrorManager
GENERIC_FAILURE is used for failure that don't fit
 into one of the other categories.
GenericArrayType
- Interface in
java.lang.reflect
GenericArrayType
represents an array type whose component
 type is either a parameterized type or a type variable.
GenericDeclaration
- Interface in
java.lang.reflect
A common interface for all entities that declare type variables.
genericMethodType(int)
- Static method in class java.lang.invoke.
MethodType
Finds or creates a method type whose components are all
Object
.
genericMethodType(int, boolean)
- Static method in class java.lang.invoke.
MethodType
Finds or creates a method type whose components are
Object
with an optional trailing
Object[]
array.
genericSignature()
- Method in interface com.sun.jdi.
LocalVariable
Gets the generic signature for this variable if there is one.
genericSignature()
- Method in interface com.sun.jdi.
ReferenceType
Gets the generic signature for this type if there is one.
genericSignature()
- Method in interface com.sun.jdi.
TypeComponent
Gets the generic signature for this TypeComponent if there is one.
GenericSignatureFormatError
- Exception Class in
java.lang.reflect
Thrown when a syntactically malformed signature attribute is
 encountered by a reflective method that needs to interpret the generic
 signature information for a class or interface, method or constructor.
GenericSignatureFormatError()
- Constructor for exception class java.lang.reflect.
GenericSignatureFormatError
Constructs a new
GenericSignatureFormatError
.
GenericSignatureFormatError(String)
- Constructor for exception class java.lang.reflect.
GenericSignatureFormatError
Constructs a new
GenericSignatureFormatError
with the
 specified message.
genExemptionBlob()
- Method in class javax.crypto.
ExemptionMechanism
Generates the exemption mechanism key blob.
genExemptionBlob(byte[])
- Method in class javax.crypto.
ExemptionMechanism
Generates the exemption mechanism key blob, and stores the result in
 the
output
buffer.
genExemptionBlob(byte[], int)
- Method in class javax.crypto.
ExemptionMechanism
Generates the exemption mechanism key blob, and stores the result in
 the
output
buffer, starting at
outputOffset
inclusive.
genKeyPair()
- Method in class java.security.
KeyPairGenerator
Generates a key pair.
GEOMETRIC_SHAPES
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Geometric Shapes" Unicode character block.
GEOMETRIC_SHAPES_EXTENDED
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Geometric Shapes Extended" Unicode character block.
GEORGIAN
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Georgian".
GEORGIAN
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Georgian" Unicode character block.
GEORGIAN_EXTENDED
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Georgian Extended" Unicode
 character block.
GEORGIAN_SUPPLEMENT
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Georgian Supplement" Unicode character block.
GeoTIFFTagSet
- Class in
javax.imageio.plugins.tiff
A class representing the tags found in a GeoTIFF IFD.
geq(ValueExp, ValueExp)
- Static method in class javax.management.
Query
Returns a query expression that represents a "greater than or equal
 to" constraint on two values.
GERMAN
- Static variable in class java.util.
Locale
Useful constant for language.
GERMANY
- Static variable in class java.util.
Locale
Useful constant for country.
get()
- Method in class java.lang.ref.
PhantomReference
Returns this reference object's referent.
get()
- Method in class java.lang.ref.
Reference
Returns this reference object's referent.
get()
- Method in class java.lang.ref.
SoftReference
Returns this reference object's referent.
get()
- Method in class java.lang.
ScopedValue
PREVIEW
Returns the value of the scoped value if bound in the current thread.
get()
- Method in class java.lang.
ThreadLocal
Returns the value in the current thread's copy of this
 thread-local variable.
get()
- Method in class java.nio.
ByteBuffer
Relative
get
method.
get()
- Method in class java.nio.
CharBuffer
Relative
get
method.
get()
- Method in class java.nio.
DoubleBuffer
Relative
get
method.
get()
- Method in class java.nio.
FloatBuffer
Relative
get
method.
get()
- Method in class java.nio.
IntBuffer
Relative
get
method.
get()
- Method in class java.nio.
LongBuffer
Relative
get
method.
get()
- Method in class java.nio.
ShortBuffer
Relative
get
method.
get()
- Method in class java.rmi.
MarshalledObject
Returns a new copy of the contained marshalledobject.
get()
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Returns the current value,
 with memory effects as specified by
VarHandle.getVolatile(java.lang.Object...)
.
get()
- Method in class java.util.concurrent.atomic.
AtomicInteger
Returns the current value,
 with memory effects as specified by
VarHandle.getVolatile(java.lang.Object...)
.
get()
- Method in class java.util.concurrent.atomic.
AtomicLong
Returns the current value,
 with memory effects as specified by
VarHandle.getVolatile(java.lang.Object...)
.
get()
- Method in class java.util.concurrent.atomic.
AtomicReference
Returns the current value,
 with memory effects as specified by
VarHandle.getVolatile(java.lang.Object...)
.
get()
- Method in class java.util.concurrent.atomic.
DoubleAccumulator
Returns the current value.
get()
- Method in class java.util.concurrent.atomic.
LongAccumulator
Returns the current value.
get()
- Method in class java.util.concurrent.
CompletableFuture
Waits if necessary for this future to complete, and then
 returns its result.
get()
- Method in class java.util.concurrent.
ForkJoinTask
Waits if necessary for the computation to complete, and then
 retrieves its result.
get()
- Method in interface java.util.concurrent.
Future
Waits if necessary for the computation to complete, and then
 retrieves its result.
get()
- Method in class java.util.concurrent.
FutureTask
get()
- Method in interface java.util.concurrent.
StructuredTaskScope.Subtask
PREVIEW
Returns the result of the subtask.
get()
- Method in interface java.util.function.
Supplier
Gets a result.
get()
- Method in class java.util.
Optional
If a value is present, returns the value, otherwise throws
NoSuchElementException
.
get()
- Method in interface java.util.
ServiceLoader.Provider
Returns an instance of the provider.
get()
- Method in interface javax.naming.directory.
Attribute
Retrieves one of this attribute's values.
get()
- Method in class javax.naming.directory.
BasicAttribute
Retrieves one of this attribute's values.
get()
- Method in class javax.swing.
SwingWorker
Waits if necessary for the computation to complete, and then
 retrieves its result.
get(boolean[])
- Method in class java.util.concurrent.atomic.
AtomicMarkableReference
Returns the current values of both the reference and the mark.
get(byte[])
- Method in class java.nio.
ByteBuffer
Relative bulk
get
method.
get(byte[], int, int)
- Method in class java.nio.
ByteBuffer
Relative bulk
get
method.
get(char[])
- Method in class java.nio.
CharBuffer
Relative bulk
get
method.
get(char[], int, int)
- Method in class java.nio.
CharBuffer
Relative bulk
get
method.
get(double[])
- Method in class java.nio.
DoubleBuffer
Relative bulk
get
method.
get(double[], int, int)
- Method in class java.nio.
DoubleBuffer
Relative bulk
get
method.
get(float[])
- Method in class java.nio.
FloatBuffer
Relative bulk
get
method.
get(float[], int, int)
- Method in class java.nio.
FloatBuffer
Relative bulk
get
method.
get(int)
- Method in class java.nio.
ByteBuffer
Absolute
get
method.
get(int)
- Method in class java.nio.
CharBuffer
Absolute
get
method.
get(int)
- Method in class java.nio.
DoubleBuffer
Absolute
get
method.
get(int)
- Method in class java.nio.
FloatBuffer
Absolute
get
method.
get(int)
- Method in class java.nio.
IntBuffer
Absolute
get
method.
get(int)
- Method in class java.nio.
LongBuffer
Absolute
get
method.
get(int)
- Method in class java.nio.
ShortBuffer
Absolute
get
method.
get(int)
- Method in class java.util.
AbstractList
Returns the element at the specified position in this list.
get(int)
- Method in class java.util.
AbstractSequentialList
Returns the element at the specified position in this list.
get(int)
- Method in class java.util.
ArrayList
Returns the element at the specified position in this list.
get(int)
- Method in class java.util.
BitSet
Returns the value of the bit with the specified index.
get(int)
- Method in class java.util.
Calendar
Returns the value of the given calendar field.
get(int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getVolatile(java.lang.Object...)
.
get(int)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getVolatile(java.lang.Object...)
.
get(int)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getVolatile(java.lang.Object...)
.
get(int)
- Method in class java.util.concurrent.
CopyOnWriteArrayList
Returns the element at the specified position in this list.
get(int)
- Method in class java.util.
LinkedList
Returns the element at the specified position in this list.
get(int)
- Method in interface java.util.
List
Returns the element at the specified position in this list.
get(int)
- Method in class java.util.
Vector
Returns the element at the specified position in this Vector.
get(int)
- Method in class javax.naming.
CompositeName
Retrieves a component of this composite name.
get(int)
- Method in class javax.naming.
CompoundName
Retrieves a component of this compound name.
get(int)
- Method in interface javax.naming.directory.
Attribute
Retrieves the attribute value from the ordered list of attribute values.
get(int)
- Method in class javax.naming.directory.
BasicAttribute
get(int)
- Method in class javax.naming.ldap.
LdapName
Retrieves a component of this LDAP name as a string.
get(int)
- Method in interface javax.naming.
Name
Retrieves a component of this name.
get(int)
- Method in class javax.naming.
Reference
Retrieves the address at index posn.
get(int)
- Method in class javax.sound.midi.
Track
Obtains the event at the specified index.
get(int)
- Method in class javax.swing.
DefaultListModel
Returns the element at the specified position in this list.
get(int)
- Method in interface javax.xml.xpath.
XPathNodes
Returns a Node at the specified position
get(int[])
- Method in class java.nio.
IntBuffer
Relative bulk
get
method.
get(int[])
- Method in class java.util.concurrent.atomic.
AtomicStampedReference
Returns the current values of both the reference and the stamp.
get(int[], int, int)
- Method in class java.nio.
IntBuffer
Relative bulk
get
method.
get(int, byte[])
- Method in class java.nio.
ByteBuffer
Absolute bulk
get
method.
get(int, byte[], int, int)
- Method in class java.nio.
ByteBuffer
Absolute bulk
get
method.
get(int, char[])
- Method in class java.nio.
CharBuffer
Absolute bulk
get
method.
get(int, char[], int, int)
- Method in class java.nio.
CharBuffer
Absolute bulk
get
method.
get(int, double[])
- Method in class java.nio.
DoubleBuffer
Absolute bulk
get
method.
get(int, double[], int, int)
- Method in class java.nio.
DoubleBuffer
Absolute bulk
get
method.
get(int, float[])
- Method in class java.nio.
FloatBuffer
Absolute bulk
get
method.
get(int, float[], int, int)
- Method in class java.nio.
FloatBuffer
Absolute bulk
get
method.
get(int, int)
- Method in class java.util.
BitSet
Returns a new
BitSet
composed of bits from this
BitSet
from
fromIndex
(inclusive) to
toIndex
(exclusive).
get(int, int[])
- Method in class java.nio.
IntBuffer
Absolute bulk
get
method.
get(int, int[], int, int)
- Method in class java.nio.
IntBuffer
Absolute bulk
get
method.
get(int, long[])
- Method in class java.nio.
LongBuffer
Absolute bulk
get
method.
get(int, long[], int, int)
- Method in class java.nio.
LongBuffer
Absolute bulk
get
method.
get(int, short[])
- Method in class java.nio.
ShortBuffer
Absolute bulk
get
method.
get(int, short[], int, int)
- Method in class java.nio.
ShortBuffer
Absolute bulk
get
method.
get(long[])
- Method in class java.nio.
LongBuffer
Relative bulk
get
method.
get(long[], int, int)
- Method in class java.nio.
LongBuffer
Relative bulk
get
method.
get(long, TimeUnit)
- Method in class java.util.concurrent.
CompletableFuture
Waits if necessary for at most the given time for this future
 to complete, and then returns its result, if available.
get(long, TimeUnit)
- Method in class java.util.concurrent.
ForkJoinTask
Waits if necessary for at most the given time for the computation
 to complete, and then retrieves its result, if available.
get(long, TimeUnit)
- Method in interface java.util.concurrent.
Future
Waits if necessary for at most the given time for the computation
 to complete, and then retrieves its result, if available.
get(long, TimeUnit)
- Method in class java.util.concurrent.
FutureTask
get(long, TimeUnit)
- Method in class javax.swing.
SwingWorker
Waits if necessary for at most the given time for the computation
 to complete, and then retrieves its result, if available.
get(short[])
- Method in class java.nio.
ShortBuffer
Relative bulk
get
method.
get(short[], int, int)
- Method in class java.nio.
ShortBuffer
Relative bulk
get
method.
get(Class<?>)
- Method in class java.lang.
ClassValue
Returns the value for the given class.
get(Class<?>)
- Method in interface javax.print.attribute.
AttributeSet
Returns the attribute value which this attribute set contains in the
 given attribute category.
get(Class<?>)
- Method in class javax.print.attribute.
HashAttributeSet
Returns the attribute value which this attribute set contains in the
 given attribute category.
get(AddressLayout, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads an address from this segment at the given offset, with the given layout.
get(ValueLayout.OfBoolean, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a boolean from this segment at the given offset, with the given layout.
get(ValueLayout.OfByte, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a byte from this segment at the given offset, with the given layout.
get(ValueLayout.OfChar, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a char from this segment at the given offset, with the given layout.
get(ValueLayout.OfDouble, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a double from this segment at the given offset, with the given layout.
get(ValueLayout.OfFloat, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a float from this segment at the given offset, with the given layout.
get(ValueLayout.OfInt, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads an int from this segment at the given offset, with the given layout.
get(ValueLayout.OfLong, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a long from this segment at the given offset, with the given layout.
get(ValueLayout.OfShort, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a short from this segment at the given offset, with the given layout.
get(Object)
- Method in class com.sun.net.httpserver.
Headers
get(Object)
- Method in class java.awt.
RenderingHints
Returns the value to which the specified key is mapped.
get(Object)
- Method in class java.beans.
Encoder
Returns a tentative value for
oldInstance
in
 the environment created by this stream.
get(Object)
- Method in class java.lang.reflect.
Field
Returns the value of the field represented by this
Field
, on
 the specified object.
get(Object)
- Method in class java.util.
AbstractMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.concurrent.
ConcurrentSkipListMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.
Dictionary
Returns the value to which the key is mapped in this dictionary.
get(Object)
- Method in class java.util.
EnumMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.
HashMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.
Hashtable
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.
IdentityHashMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.jar.
Attributes
Returns the value of the specified attribute name, or null if the
 attribute name was not found.
get(Object)
- Method in class java.util.
LinkedHashMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in interface java.util.
Map
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.
TreeMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class java.util.
WeakHashMap
Returns the value to which the specified key is mapped,
 or
null
if this map contains no mapping for the key.
get(Object)
- Method in class javax.management.openmbean.
TabularDataSupport
This method simply calls
get((Object[]) key)
.
get(Object)
- Method in interface javax.script.
Bindings
Returns the value to which this map maps the specified key.
get(Object)
- Method in class javax.script.
SimpleBindings
Returns the value to which this map maps the specified key.
get(Object)
- Method in class javax.swing.
ActionMap
Returns the binding for
key
, messaging the
 parent
ActionMap
if the binding is not locally defined.
get(Object)
- Method in class javax.swing.
UIDefaults
Returns the value for key.
get(Object)
- Static method in class javax.swing.
UIManager
Returns an object from the defaults.
get(Object)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
This implementation uses an internal
HashMap
to get the object
 that the specified key maps to.
get(Object)
- Method in interface javax.xml.crypto.
XMLCryptoContext
Returns the value to which this context maps the specified key.
get(Object...)
- Method in class java.lang.invoke.
VarHandle
Returns the value of a variable, with memory semantics of reading as
 if the variable was declared non-
volatile
.
get(Object[])
- Method in interface javax.management.openmbean.
TabularData
Returns the
CompositeData
value whose index is
key
, or
null
if there is no value mapping
 to
key
, in this
TabularData
instance.
get(Object[])
- Method in class javax.management.openmbean.
TabularDataSupport
Returns the
CompositeData
value whose index is
key
, or
null
if there is no value mapping
 to
key
, in this
TabularData
instance.
get(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object.
get(Object, Locale)
- Method in class javax.swing.
UIDefaults
Returns the value for key associated with the given locale.
get(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns an object from the defaults that is appropriate for
 the given locale.
get(ScopedValue<T>)
- Method in class java.lang.
ScopedValue.Carrier
PREVIEW
Returns the value of a
ScopedValue
PREVIEW
in this mapping.
get(String)
- Method in class com.sun.management.
GcInfo
get(String)
- Method in class javax.accessibility.
AccessibleRelationSet
Returns the relation that matches the specified key.
get(String)
- Method in interface javax.management.openmbean.
CompositeData
Returns the value of the item whose name is
key
.
get(String)
- Method in class javax.management.openmbean.
CompositeDataSupport
Returns the value of the item whose name is
key
.
get(String)
- Method in interface javax.naming.directory.
Attributes
Retrieves the attribute with the given attribute id from the
 attribute set.
get(String)
- Method in class javax.naming.directory.
BasicAttributes
get(String)
- Method in class javax.naming.
Reference
Retrieves the first address that has the address type 'addrType'.
get(String)
- Method in class javax.script.
AbstractScriptEngine
Gets the value for the specified key in the
ENGINE_SCOPE
of the
 protected
context
field.
get(String)
- Method in interface javax.script.
ScriptEngine
Retrieves a value set in the state of this engine.
get(String)
- Method in class javax.script.
ScriptEngineManager
Gets the value for the specified key in the Global Scope
get(String, boolean)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named boolean field from the persistent field.
get(String, byte)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named byte field from the persistent field.
get(String, char)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named char field from the persistent field.
get(String, double)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named double field from the persistent field.
get(String, float)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named float field from the persistent field.
get(String, int)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named int field from the persistent field.
get(String, long)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named long field from the persistent field.
get(String, short)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named short field from the persistent field.
get(String, Object)
- Method in class java.io.
ObjectInputStream.GetField
Get the value of the named Object field from the persistent field.
get(String, String)
- Method in class java.util.prefs.
AbstractPreferences
Implements the
get
method as per the specification in
Preferences.get(String,String)
.
get(String, String)
- Method in class java.util.prefs.
Preferences
Returns the value associated with the specified key in this preference
 node.
get(String, String...)
- Static method in class java.nio.file.
Paths
Converts a path string, or a sequence of strings that when joined form
 a path string, to a
Path
.
get(InetAddressResolverProvider.Configuration)
- Method in class java.net.spi.
InetAddressResolverProvider
Initialize and return an
InetAddressResolver
provided by
 this provider.
get(URI)
- Method in interface java.net.
CookieStore
Retrieve cookies associated with given URI, or whose domain matches the
 given URI.
get(URI)
- Static method in class java.nio.file.
Paths
Converts the given URI to a
Path
object.
get(URI, String, Map<String, List<String>>)
- Method in class java.net.
ResponseCache
Retrieve the cached response based on the requesting uri,
 request method and request headers.
get(URI, Map<String, List<String>>)
- Method in class java.net.
CookieHandler
Gets all the applicable cookies from a cookie cache for the
 specified uri in the request header.
get(URI, Map<String, List<String>>)
- Method in class java.net.
CookieManager
get(TemporalField)
- Method in interface java.time.chrono.
Era
Gets the value of the specified field from this era as an
int
.
get(TemporalField)
- Method in enum class java.time.
DayOfWeek
Gets the value of the specified field from this day-of-week as an
int
.
get(TemporalField)
- Method in class java.time.
Instant
Gets the value of the specified field from this instant as an
int
.
get(TemporalField)
- Method in class java.time.
LocalDate
Gets the value of the specified field from this date as an
int
.
get(TemporalField)
- Method in class java.time.
LocalDateTime
Gets the value of the specified field from this date-time as an
int
.
get(TemporalField)
- Method in class java.time.
LocalTime
Gets the value of the specified field from this time as an
int
.
get(TemporalField)
- Method in enum class java.time.
Month
Gets the value of the specified field from this month-of-year as an
int
.
get(TemporalField)
- Method in class java.time.
MonthDay
Gets the value of the specified field from this month-day as an
int
.
get(TemporalField)
- Method in class java.time.
OffsetDateTime
Gets the value of the specified field from this date-time as an
int
.
get(TemporalField)
- Method in class java.time.
OffsetTime
Gets the value of the specified field from this time as an
int
.
get(TemporalField)
- Method in interface java.time.temporal.
TemporalAccessor
Gets the value of the specified field as an
int
.
get(TemporalField)
- Method in class java.time.
Year
Gets the value of the specified field from this year as an
int
.
get(TemporalField)
- Method in class java.time.
YearMonth
Gets the value of the specified field from this year-month as an
int
.
get(TemporalField)
- Method in class java.time.
ZonedDateTime
Gets the value of the specified field from this date-time as an
int
.
get(TemporalField)
- Method in class java.time.
ZoneOffset
Gets the value of the specified field from this offset as an
int
.
get(TemporalUnit)
- Method in interface java.time.chrono.
ChronoPeriod
Gets the value of the requested unit.
get(TemporalUnit)
- Method in class java.time.
Duration
Gets the value of the requested unit.
get(TemporalUnit)
- Method in class java.time.
Period
Gets the value of the requested unit.
get(TemporalUnit)
- Method in interface java.time.temporal.
TemporalAmount
Returns the value of the requested unit.
get(Supplier<? extends R>)
- Method in class java.lang.
ScopedValue.Carrier
PREVIEW
Invokes a supplier of results with each scoped value in this mapping bound
 to its value in the current thread.
get(KeyStroke)
- Method in class javax.swing.
InputMap
Returns the binding for
keyStroke
, messaging the
 parent
InputMap
if the binding is not locally defined.
get(SynthContext, Object)
- Method in class javax.swing.plaf.nimbus.
NimbusStyle
Getter for a region specific style property.
get(SynthContext, Object)
- Method in class javax.swing.plaf.synth.
SynthStyle
Getter for a region specific style property.
get(CatalogFeatures.Feature)
- Method in class javax.xml.catalog.
CatalogFeatures
Returns the value of the specified feature.
get(T)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Returns the current value held in the field of the given object
 managed by this updater.
get(T)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Returns the current value held in the field of the given object
 managed by this updater.
get(T)
- Method in class java.util.concurrent.atomic.
AtomicReferenceFieldUpdater
Returns the current value held in the field of the given object
 managed by this updater.
GET
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.get
GET
- Enum constant in enum class javax.swing.text.html.
FormSubmitEvent.MethodType
GET
corresponds to the GET form method
GET
- Enum constant in enum class jdk.dynalink.
StandardOperation
Get the value from a namespace defined on an object.
GET()
- Method in interface java.net.http.
HttpRequest.Builder
Sets the request method of this builder to GET.
GET_ACQUIRE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAcquire
GET_AND_ADD
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndAdd
GET_AND_ADD_ACQUIRE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndAddAcquire
GET_AND_ADD_RELEASE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndAddRelease
GET_AND_BITWISE_AND
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseAnd
GET_AND_BITWISE_AND_ACQUIRE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseAndAcquire
GET_AND_BITWISE_AND_RELEASE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseAndRelease
GET_AND_BITWISE_OR
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseOr
GET_AND_BITWISE_OR_ACQUIRE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseOrAcquire
GET_AND_BITWISE_OR_RELEASE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseOrRelease
GET_AND_BITWISE_XOR
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseXor
GET_AND_BITWISE_XOR_ACQUIRE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseXorAcquire
GET_AND_BITWISE_XOR_RELEASE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndBitwiseXorRelease
GET_AND_SET
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndSet
GET_AND_SET_ACQUIRE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndSetAcquire
GET_AND_SET_RELEASE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getAndSetRelease
GET_LOOKUP_PERMISSION_NAME
- Static variable in class jdk.dynalink.
SecureLookupSupplier
The name of a runtime permission required to successfully invoke the
SecureLookupSupplier.getLookup()
method.
GET_OPAQUE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getOpaque
GET_VOLATILE
- Enum constant in enum class java.lang.invoke.
VarHandle.AccessMode
The access mode whose access is specified by the corresponding
 method
VarHandle.getVolatile
get2DigitYearStart()
- Method in class java.text.
SimpleDateFormat
Returns the beginning date of the 100-year period 2-digit years are interpreted
 as being within.
getA()
- Method in class java.security.spec.
EllipticCurve
Returns the first coefficient
a
of the
 elliptic curve.
getAbbr()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Abbreviation for header cells.
getAbsoluteFile()
- Method in class java.io.
File
Returns the absolute form of this abstract pathname.
getAbsolutePath()
- Method in class java.io.
File
Returns the absolute pathname string of this abstract pathname.
getAccelerationPriority()
- Method in class java.awt.
Image
Returns the current value of the acceleration priority hint.
getAccelerator()
- Method in class javax.swing.
JMenuItem
Returns the
KeyStroke
which serves as an accelerator
 for the menu item.
getAcceleratorForeground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the accelerator foreground color of the current theme.
getAcceleratorForeground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the accelerator foreground color.
getAcceleratorSelectedForeground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the accelerator selected foreground color of the
 current theme.
getAcceleratorSelectedForeground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the accelerator selected foreground color.
getAcceleratorString()
- Method in class javax.swing.plaf.metal.
MetalToolTipUI
Returns the accelerator string.
getAccept()
- Method in interface org.w3c.dom.html.
HTMLInputElement
A comma-separated list of content types that a server processing this
 form will handle correctly.
getAcceptAllFileFilter()
- Method in class javax.swing.
JFileChooser
Returns the
AcceptAll
file filter.
getAcceptAllFileFilter(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the default accept all file filter
getAcceptAllFileFilter(JFileChooser)
- Method in class javax.swing.plaf.
FileChooserUI
Returns an accept-all file filter.
getAcceptAllFileFilter(JFileChooser)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getAcceptAllFileFilter
method on each UI handled by this object.
getAcceptCharset()
- Method in interface org.w3c.dom.html.
HTMLFormElement
List of character sets supported by the server.
getAcceptedIssuers()
- Method in interface javax.net.ssl.
X509TrustManager
Return an array of certificate authority certificates
 which are trusted for authenticating peers.
getAcceptorAddress()
- Method in class org.ietf.jgss.
ChannelBinding
Get the acceptor's address for this channel binding.
getAccessible(Object)
- Static method in class com.sun.java.accessibility.util.
Translator
Obtain an object that implements interface
Accessible
.
getAccessibleAction()
- Method in class java.awt.
Button.AccessibleAWTButton
Get the AccessibleAction associated with this object.
getAccessibleAction()
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Get the AccessibleAction associated with this object.
getAccessibleAction()
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Get the AccessibleAction associated with this object.
getAccessibleAction()
- Method in class java.awt.
Choice.AccessibleAWTChoice
Get the AccessibleAction associated with this object.
getAccessibleAction()
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Get the AccessibleAction associated with this object.
getAccessibleAction()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleAction
associated with this object that
 supports one or more actions.
getAccessibleAction()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Get the AccessibleAction associated with this object.
getAccessibleAction()
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Get the AccessibleAction associated with this object.
getAccessibleAction()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
Gets the
AccessibleAction
associated with this object that
 supports one or more actions.
getAccessibleAction()
- Method in class javax.swing.
JSlider.AccessibleJSlider
Gets the AccessibleAction associated with this object that supports
 one or more actions.
getAccessibleAction()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Gets the AccessibleAction associated with this object that supports
 one or more actions.
getAccessibleAction()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
AccessibleAction
associated with this
 object if one exists.
getAccessibleAction()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the AccessibleAction associated with this object.
getAccessibleActionAnchor(int)
- Method in class javax.accessibility.
AccessibleHyperlink
Returns an object that represents the link anchor, as appropriate for
 that link.
getAccessibleActionAnchor(int)
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink
Return an object that represents the link anchor,
 as appropriate for that link.
getAccessibleActionCount()
- Method in class java.awt.
Button.AccessibleAWTButton
Returns the number of Actions available in this object.
getAccessibleActionCount()
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Returns the number of Actions available in this object.
getAccessibleActionCount()
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Returns the number of Actions available in this object.
getAccessibleActionCount()
- Method in class java.awt.
Choice.AccessibleAWTChoice
Returns the number of accessible actions available in this object
 If there are more than one, the first one is considered the "default"
 action of the object.
getAccessibleActionCount()
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Returns the number of Actions available in this object.
getAccessibleActionCount()
- Method in interface javax.accessibility.
AccessibleAction
Returns the number of accessible actions available in this object If
 there are more than one, the first one is considered the "default" action
 of the object.
getAccessibleActionCount()
- Method in class javax.accessibility.
AccessibleHyperlink
Returns the number of accessible actions available in this Link If there
 are more than one, the first one is NOT considered the "default" action
 of this LINK object (e.g. in an HTML imagemap).
getAccessibleActionCount()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the number of Actions available in this object.
getAccessibleActionCount()
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Returns the number of Actions available in this object.
getAccessibleActionCount()
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink
Returns the number of accessible actions available in this Link
 If there are more than one, the first one is NOT considered the
 "default" action of this LINK object (e.g. in an HTML imagemap).
getAccessibleActionCount()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
Returns the number of accessible actions available in this object If
 there are more than one, the first one is considered the "default" action
 of the object.
getAccessibleActionCount()
- Method in class javax.swing.
JSlider.AccessibleJSlider
Returns the number of accessible actions available in this object
 If there are more than one, the first one is considered the "default"
 action of the object.
getAccessibleActionCount()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the number of accessible actions available in this object
 If there are more than one, the first one is considered the "default"
 action of the object.
getAccessibleActionCount()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Returns the number of accessible actions available in this
 tree node.
getAccessibleActionCount()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the number of accessible actions available in this object
 If there are more than one, the first one is considered the
 "default" action of the object.
getAccessibleActionDescription(int)
- Method in class java.awt.
Button.AccessibleAWTButton
Return a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Return a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Return a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class java.awt.
Choice.AccessibleAWTChoice
Returns a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Return a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in interface javax.accessibility.
AccessibleAction
Returns a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class javax.accessibility.
AccessibleHyperlink
Returns a string description of this particular link action.
getAccessibleActionDescription(int)
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Return a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Return a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink
Return a String description of this particular
 link action.
getAccessibleActionDescription(int)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
Returns a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class javax.swing.
JSlider.AccessibleJSlider
Returns a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns a description of the specified action of the object.
getAccessibleActionDescription(int)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Return a description of the specified action of the tree node.
getAccessibleActionDescription(int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns a description of the specified action of the object.
getAccessibleActionObject(int)
- Method in class javax.accessibility.
AccessibleHyperlink
Returns an object that represents the link action, as appropriate for
 that link.
getAccessibleActionObject(int)
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink
Returns a URL object that represents the link.
getAccessibleAt(int, int)
- Method in interface javax.accessibility.
AccessibleTable
Returns the
Accessible
at a specified row and column in the
 table.
getAccessibleAt(int, int)
- Method in class javax.swing.
JTable.AccessibleJTable
getAccessibleAt(Component, Point)
- Static method in class javax.swing.
SwingUtilities
Returns the
Accessible
child contained at the
 local coordinate
Point
, if one exists.
getAccessibleAt(Point)
- Static method in class com.sun.java.accessibility.util.
EventQueueMonitor
Obtain the
Accessible
object at the given point on the Screen.
getAccessibleAt(Point)
- Method in class com.sun.java.accessibility.util.
Translator
Returns the accessible child contained at the local coordinate
 Point, if one exists.
getAccessibleAt(Point)
- Method in class java.awt.
Component.AccessibleAWTComponent
Returns the
Accessible
child,
 if one exists, contained at the local
 coordinate
Point
.
getAccessibleAt(Point)
- Method in class java.awt.
Container.AccessibleAWTContainer
Returns the
Accessible
child, if one exists,
 contained at the local coordinate
Point
.
getAccessibleAt(Point)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Returns the
Accessible
child, if one exists,
 contained at the local coordinate
Point
.
getAccessibleAt(Point)
- Method in class java.awt.
List.AccessibleAWTList
Returns the Accessible child contained at the local coordinate
 Point, if one exists.
getAccessibleAt(Point)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Returns the
Accessible
child, if one exists,
 contained at the local coordinate
Point
.
getAccessibleAt(Point)
- Method in interface javax.accessibility.
AccessibleComponent
Returns the
Accessible
child, if one exists, contained at the
 local coordinate
Point
.
getAccessibleAt(Point)
- Method in class javax.swing.
JEditorPane.AccessibleJEditorPaneHTML
Returns the Accessible child, if one exists, contained at the local
 coordinate Point.
getAccessibleAt(Point)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getAccessibleAt(Point)
- Method in class javax.swing.
JList.AccessibleJList
Returns the
Accessible
child contained at
 the local coordinate
Point
, if one exists.
getAccessibleAt(Point)
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
Returns the
Accessible
child contained at
 the local coordinate
Point
, if one exists.
getAccessibleAt(Point)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
getAccessibleAt(Point)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the
Accessible
child, if one exists,
 contained at the local coordinate
Point
.
getAccessibleAt(Point)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Returns the
Accessible
child, if one exists,
 contained at the local coordinate
Point
.
getAccessibleAt(Point)
- Method in class javax.swing.
JTree.AccessibleJTree
Returns the
Accessible
child, if one exists,
 contained at the local coordinate
Point
.
getAccessibleAt(Point)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getAccessibleAt(Point)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader
Returns the Accessible child, if one exists, contained at the local
 coordinate Point.
getAccessibleCaption()
- Method in interface javax.accessibility.
AccessibleTable
Returns the caption for the table.
getAccessibleCaption()
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the caption for the table.
getAccessibleChild(int)
- Method in class com.sun.java.accessibility.util.
Translator
Return the nth accessible child of the object.
getAccessibleChild(int)
- Method in class java.awt.
Component.AccessibleAWTComponent
Returns the nth
Accessible
child of the object.
getAccessibleChild(int)
- Method in class java.awt.
Container.AccessibleAWTContainer
Returns the nth
Accessible
child of the object.
getAccessibleChild(int)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Return the specified Accessible child of the object.
getAccessibleChild(int)
- Method in class java.awt.
List.AccessibleAWTList
Return the nth Accessible child of the object.
getAccessibleChild(int)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Returns the nth
Accessible
child of the object.
getAccessibleChild(int)
- Method in class javax.accessibility.
AccessibleContext
Returns the specified
Accessible
child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Returns the nth Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Returns the nth Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JComponent.AccessibleJComponent
Returns the nth Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JEditorPane.AccessibleJEditorPaneHTML
Returns the specified Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getAccessibleChild(int)
- Method in class javax.swing.
JList.AccessibleJList
Return the nth Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JMenu.AccessibleJMenu
Returns the nth Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JRootPane.AccessibleJRootPane
Returns the specified Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the specified Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
Return the specified Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Returns the specified
Accessible
child of the
 object.
getAccessibleChild(int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the nth
Accessible
child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Return the specified Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
JTree.AccessibleJTree
Return the nth Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the specified Accessible child of the object.
getAccessibleChild(int)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getAccessibleChild(int)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader
Return the nth Accessible child of the object.
getAccessibleChild(Component, int)
- Static method in class javax.swing.
SwingUtilities
Return the nth Accessible child of the object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.
ComponentUI
Returns the
i
th
Accessible
child of the object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiButtonUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiColorChooserUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiDesktopIconUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiDesktopPaneUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiInternalFrameUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiLabelUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiListUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiMenuBarUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiMenuItemUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiPanelUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiProgressBarUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiRootPaneUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiScrollBarUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiScrollPaneUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiSeparatorUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiSliderUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiSpinnerUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiTableHeaderUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiTableUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiToolBarUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiToolTipUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChild(JComponent, int)
- Method in class javax.swing.plaf.multi.
MultiViewportUI
Invokes the
getAccessibleChild
method on each UI handled by this object.
getAccessibleChildrenCount()
- Method in class com.sun.java.accessibility.util.
Translator
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class java.awt.
Component.AccessibleAWTComponent
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class java.awt.
Container.AccessibleAWTContainer
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Returns the number of accessible children of the object.
getAccessibleChildrenCount()
- Method in class java.awt.
List.AccessibleAWTList
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.accessibility.
AccessibleContext
Returns the number of accessible children of the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JComponent.AccessibleJComponent
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JEditorPane.AccessibleJEditorPaneHTML
Returns the number of accessible children of the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getAccessibleChildrenCount()
- Method in class javax.swing.
JList.AccessibleJList
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JMenu.AccessibleJMenu
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JRootPane.AccessibleJRootPane
Returns the number of accessible children of the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the number of accessible children of the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Returns the number of accessible children in the object.
getAccessibleChildrenCount()
- Method in class javax.swing.
JTree.AccessibleJTree
Returns the number of top-level children nodes of this
 JTree.
getAccessibleChildrenCount()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the number of accessible children of the object.
getAccessibleChildrenCount()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getAccessibleChildrenCount()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader
Returns the number of accessible children in the object.
getAccessibleChildrenCount(Component)
- Static method in class javax.swing.
SwingUtilities
Returns the number of accessible children in the object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.
ComponentUI
Returns the number of accessible children in the object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiButtonUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiColorChooserUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopIconUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopPaneUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiInternalFrameUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiLabelUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiListUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuBarUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuItemUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPanelUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiProgressBarUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiRootPaneUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollBarUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollPaneUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSeparatorUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSliderUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSpinnerUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableHeaderUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolBarUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolTipUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleChildrenCount(JComponent)
- Method in class javax.swing.plaf.multi.
MultiViewportUI
Invokes the
getAccessibleChildrenCount
method on each UI handled by this object.
getAccessibleColumn(int)
- Method in interface javax.accessibility.
AccessibleExtendedTable
Returns the column number of an index in the table.
getAccessibleColumn(int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the column number of an index in the table.
getAccessibleColumnAtIndex(int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the column at a given index into the table.
getAccessibleColumnCount()
- Method in interface javax.accessibility.
AccessibleTable
Returns the number of columns in the table.
getAccessibleColumnCount()
- Method in class javax.swing.
JTable.AccessibleJTable
getAccessibleColumnDescription(int)
- Method in interface javax.accessibility.
AccessibleTable
Returns the description text of the specified column in the table.
getAccessibleColumnDescription(int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the description of the specified column in the table.
getAccessibleColumnExtentAt(int, int)
- Method in interface javax.accessibility.
AccessibleTable
Returns the number of columns occupied by the
Accessible
at a
 specified row and column in the table.
getAccessibleColumnExtentAt(int, int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the number of columns occupied by the
Accessible
at a given (row, column).
getAccessibleColumnHeader()
- Method in interface javax.accessibility.
AccessibleTable
Returns the column headers as an
AccessibleTable
.
getAccessibleColumnHeader()
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the column headers as an
AccessibleTable
.
getAccessibleComponent()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the
AccessibleComponent
associated
 with this object if one exists.
getAccessibleComponent()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the
AccessibleComponent
associated with
 this object if one exists.
getAccessibleComponent()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleComponent
associated with this object that has
 a graphical representation.
getAccessibleComponent()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
Get the AccessibleComponent associated with this object.
getAccessibleComponent()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
AccessibleComponent
associated with
 this object if one exists.
getAccessibleComponent()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the AccessibleComponent associated with this object.
getAccessibleComponent()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the AccessibleComponent associated with this object that has a
 graphical representation.
getAccessibleComponent()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
Get the AccessibleComponent associated with this object.
getAccessibleContext()
- Method in class com.sun.java.accessibility.util.
Translator
Returns this object.
getAccessibleContext()
- Method in class java.applet.
Applet
Deprecated.
Gets the
AccessibleContext
associated with this
Applet
.
getAccessibleContext()
- Method in class java.awt.
Button
Gets the
AccessibleContext
associated with
 this
Button
.
getAccessibleContext()
- Method in class java.awt.
Canvas
Gets the AccessibleContext associated with this Canvas.
getAccessibleContext()
- Method in class java.awt.
Checkbox
Gets the AccessibleContext associated with this Checkbox.
getAccessibleContext()
- Method in class java.awt.
CheckboxMenuItem
Gets the AccessibleContext associated with this CheckboxMenuItem.
getAccessibleContext()
- Method in class java.awt.
Choice
Gets the
AccessibleContext
associated with this
Choice
.
getAccessibleContext()
- Method in class java.awt.
Component
Gets the
AccessibleContext
associated
 with this
Component
.
getAccessibleContext()
- Method in class java.awt.
Dialog
Gets the AccessibleContext associated with this Dialog.
getAccessibleContext()
- Method in class java.awt.
Frame
Gets the AccessibleContext associated with this Frame.
getAccessibleContext()
- Method in class java.awt.
Label
Gets the AccessibleContext associated with this Label.
getAccessibleContext()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Gets the AccessibleContext for this object.
getAccessibleContext()
- Method in class java.awt.
List
Gets the
AccessibleContext
associated with this
List
.
getAccessibleContext()
- Method in class java.awt.
Menu
Gets the AccessibleContext associated with this Menu.
getAccessibleContext()
- Method in class java.awt.
MenuBar
Gets the AccessibleContext associated with this MenuBar.
getAccessibleContext()
- Method in class java.awt.
MenuComponent
Gets the
AccessibleContext
associated with
 this
MenuComponent
.
getAccessibleContext()
- Method in class java.awt.
MenuItem
Gets the AccessibleContext associated with this MenuItem.
getAccessibleContext()
- Method in class java.awt.
Panel
Gets the AccessibleContext associated with this Panel.
getAccessibleContext()
- Method in class java.awt.
PopupMenu
Gets the
AccessibleContext
associated with this
PopupMenu
.
getAccessibleContext()
- Method in class java.awt.
Scrollbar
Gets the
AccessibleContext
associated with this
Scrollbar
.
getAccessibleContext()
- Method in class java.awt.
ScrollPane
Gets the AccessibleContext associated with this ScrollPane.
getAccessibleContext()
- Method in class java.awt.
TextArea
Returns the
AccessibleContext
associated with
 this
TextArea
.
getAccessibleContext()
- Method in class java.awt.
TextComponent
Gets the AccessibleContext associated with this TextComponent.
getAccessibleContext()
- Method in class java.awt.
TextField
Gets the AccessibleContext associated with this TextField.
getAccessibleContext()
- Method in class java.awt.
Window
Gets the AccessibleContext associated with this Window.
getAccessibleContext()
- Method in interface javax.accessibility.
Accessible
Returns the
AccessibleContext
associated with this object.
getAccessibleContext()
- Method in class javax.swing.
Box.Filler
Gets the AccessibleContext associated with this Box.Filler.
getAccessibleContext()
- Method in class javax.swing.
Box
Gets the AccessibleContext associated with this Box.
getAccessibleContext()
- Method in class javax.swing.
CellRendererPane
Gets the AccessibleContext associated with this CellRendererPane.
getAccessibleContext()
- Method in class javax.swing.
ImageIcon
Gets the AccessibleContext associated with this ImageIcon.
getAccessibleContext()
- Method in class javax.swing.
JApplet
Deprecated.
Gets the AccessibleContext associated with this JApplet.
getAccessibleContext()
- Method in class javax.swing.
JButton
Gets the
AccessibleContext
associated with this
JButton
.
getAccessibleContext()
- Method in class javax.swing.
JCheckBox
Gets the AccessibleContext associated with this JCheckBox.
getAccessibleContext()
- Method in class javax.swing.
JCheckBoxMenuItem
Gets the AccessibleContext associated with this JCheckBoxMenuItem.
getAccessibleContext()
- Method in class javax.swing.
JColorChooser
Gets the AccessibleContext associated with this JColorChooser.
getAccessibleContext()
- Method in class javax.swing.
JComboBox
Gets the AccessibleContext associated with this JComboBox.
getAccessibleContext()
- Method in class javax.swing.
JDesktopPane
Gets the
AccessibleContext
associated with this
JDesktopPane
.
getAccessibleContext()
- Method in class javax.swing.
JDialog
Gets the AccessibleContext associated with this JDialog.
getAccessibleContext()
- Method in class javax.swing.
JEditorPane
Gets the AccessibleContext associated with this JEditorPane.
getAccessibleContext()
- Method in class javax.swing.
JFileChooser
Gets the AccessibleContext associated with this JFileChooser.
getAccessibleContext()
- Method in class javax.swing.
JFrame
Gets the AccessibleContext associated with this JFrame.
getAccessibleContext()
- Method in class javax.swing.
JInternalFrame
Gets the
AccessibleContext
associated with this
JInternalFrame
.
getAccessibleContext()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon
Gets the AccessibleContext associated with this JDesktopIcon.
getAccessibleContext()
- Method in class javax.swing.
JLabel
Get the AccessibleContext of this object
getAccessibleContext()
- Method in class javax.swing.
JLayer
Gets the AccessibleContext associated with this
JLayer
.
getAccessibleContext()
- Method in class javax.swing.
JLayeredPane
Gets the AccessibleContext associated with this JLayeredPane.
getAccessibleContext()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
Get the AccessibleContext for this object.
getAccessibleContext()
- Method in class javax.swing.
JList
Gets the
AccessibleContext
associated with this
JList
.
getAccessibleContext()
- Method in class javax.swing.
JMenu
Gets the AccessibleContext associated with this JMenu.
getAccessibleContext()
- Method in class javax.swing.
JMenuBar
Gets the AccessibleContext associated with this JMenuBar.
getAccessibleContext()
- Method in class javax.swing.
JMenuItem
Returns the
AccessibleContext
associated with this
JMenuItem
.
getAccessibleContext()
- Method in class javax.swing.
JOptionPane
Returns the
AccessibleContext
associated with this JOptionPane.
getAccessibleContext()
- Method in class javax.swing.
JPanel
Gets the AccessibleContext associated with this JPanel.
getAccessibleContext()
- Method in class javax.swing.
JPasswordField
Returns the
AccessibleContext
associated with this
JPasswordField
.
getAccessibleContext()
- Method in class javax.swing.
JPopupMenu
Gets the AccessibleContext associated with this JPopupMenu.
getAccessibleContext()
- Method in class javax.swing.
JProgressBar
Gets the
AccessibleContext
associated with this
JProgressBar
.
getAccessibleContext()
- Method in class javax.swing.
JRadioButton
Gets the AccessibleContext associated with this JRadioButton.
getAccessibleContext()
- Method in class javax.swing.
JRadioButtonMenuItem
Gets the AccessibleContext associated with this JRadioButtonMenuItem.
getAccessibleContext()
- Method in class javax.swing.
JRootPane
Gets the
AccessibleContext
associated with this
JRootPane
.
getAccessibleContext()
- Method in class javax.swing.
JScrollBar
Gets the AccessibleContext associated with this JScrollBar.
getAccessibleContext()
- Method in class javax.swing.
JScrollPane
Gets the AccessibleContext associated with this JScrollPane.
getAccessibleContext()
- Method in class javax.swing.
JSeparator
Gets the AccessibleContext associated with this JSeparator.
getAccessibleContext()
- Method in class javax.swing.
JSlider
Gets the AccessibleContext associated with this JSlider.
getAccessibleContext()
- Method in class javax.swing.
JSpinner
Gets the
AccessibleContext
for the
JSpinner
getAccessibleContext()
- Method in class javax.swing.
JSplitPane
Gets the AccessibleContext associated with this JSplitPane.
getAccessibleContext()
- Method in class javax.swing.
JTabbedPane
Gets the AccessibleContext associated with this JTabbedPane.
getAccessibleContext()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
AccessibleContext
associated with this
 component.
getAccessibleContext()
- Method in class javax.swing.
JTable
Gets the AccessibleContext associated with this JTable.
getAccessibleContext()
- Method in class javax.swing.
JTextArea
Gets the AccessibleContext associated with this JTextArea.
getAccessibleContext()
- Method in class javax.swing.
JTextField
Gets the
AccessibleContext
associated with this
JTextField
.
getAccessibleContext()
- Method in class javax.swing.
JToggleButton
Gets the AccessibleContext associated with this JToggleButton.
getAccessibleContext()
- Method in class javax.swing.
JToolBar
Gets the AccessibleContext associated with this JToolBar.
getAccessibleContext()
- Method in class javax.swing.
JToolTip
Gets the AccessibleContext associated with this JToolTip.
getAccessibleContext()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the AccessibleContext associated with this tree node.
getAccessibleContext()
- Method in class javax.swing.
JTree
Gets the AccessibleContext associated with this JTree.
getAccessibleContext()
- Method in class javax.swing.
JViewport
Gets the AccessibleContext associated with this JViewport.
getAccessibleContext()
- Method in class javax.swing.
JWindow
Gets the AccessibleContext associated with this JWindow.
getAccessibleContext()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Gets the AccessibleContext associated with this BasicComboPopup.
getAccessibleContext()
- Method in class javax.swing.
ProgressMonitor
Gets the
AccessibleContext
for the
ProgressMonitor
getAccessibleContext()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
Get the AccessibleContext associated with this object.
getAccessibleContext()
- Method in class javax.swing.table.
JTableHeader
Gets the AccessibleContext associated with this JTableHeader.
getAccessibleContext()
- Method in class javax.swing.text.html.
HTMLEditorKit
returns the AccessibleContext associated with this editor kit
getAccessibleContext()
- Method in class javax.swing.text.
JTextComponent
Gets the
AccessibleContext
associated with this
JTextComponent
.
getAccessibleDescription()
- Method in class com.sun.java.accessibility.util.
Translator
Get the accessible description of this object.
getAccessibleDescription()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the accessible description of this object.
getAccessibleDescription()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the accessible description of this object.
getAccessibleDescription()
- Method in class javax.accessibility.
AccessibleContext
Gets the
accessibleDescription
property of this object.
getAccessibleDescription()
- Method in class javax.swing.
JComponent.AccessibleJComponent
Gets the accessible description of this object.
getAccessibleDescription()
- Method in class javax.swing.
JEditorPane.AccessibleJEditorPane
Gets the accessibleDescription property of this object.
getAccessibleDescription()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the accessible description of this object.
getAccessibleDescription()
- Method in class javax.swing.
JToolTip.AccessibleJToolTip
Get the accessible description of this object.
getAccessibleDescription()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the accessible description of this object.
getAccessibleDescription()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the accessibleDescription property of this object.
getAccessibleEditableText()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleEditableText
associated with this object
 presenting editable text on the display.
getAccessibleEditableText()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the AccessibleEditableText interface for
 this text component.
getAccessibleIcon()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleIcons
associated with an object that has one
 or more associated icons.
getAccessibleIcon()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Get the AccessibleIcons associated with this object if one
 or more exist.
getAccessibleIcon()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Get the AccessibleIcons associated with this object if one
 or more exist.
getAccessibleIcon()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
Returns the icon for the element renderer, as the only item
 of an array of
AccessibleIcon
s or a
null
array
 if the renderer component contains no icons.
getAccessibleIconDescription()
- Method in interface javax.accessibility.
AccessibleIcon
Gets the description of the icon.
getAccessibleIconDescription()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Gets the description of the icon.
getAccessibleIconHeight()
- Method in interface javax.accessibility.
AccessibleIcon
Gets the height of the icon.
getAccessibleIconHeight()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Gets the height of the icon.
getAccessibleIconWidth()
- Method in interface javax.accessibility.
AccessibleIcon
Gets the width of the icon.
getAccessibleIconWidth()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Gets the width of the icon.
getAccessibleIndex(int, int)
- Method in interface javax.accessibility.
AccessibleExtendedTable
Returns the index at a row and column in the table.
getAccessibleIndex(int, int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the index at a row and column in the table.
getAccessibleIndexAt(int, int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the index at a given (row, column) in the table.
getAccessibleIndexInParent()
- Method in class com.sun.java.accessibility.util.
Translator
Get the index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Get the 0-based index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class javax.accessibility.
AccessibleContext
Gets the 0-based index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Gets the index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getAccessibleIndexInParent()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class javax.swing.
JTree.AccessibleJTree
Get the index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the 0-based index of this object in its accessible parent.
getAccessibleIndexInParent()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getAccessibleIndexInParent(Component)
- Static method in class javax.swing.
SwingUtilities
Get the index of this object in its accessible parent.
getAccessibleKeyBinding()
- Method in interface javax.accessibility.
AccessibleExtendedComponent
Returns key bindings associated with this object.
getAccessibleKeyBinding()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns key bindings associated with this object
getAccessibleKeyBinding()
- Method in class javax.swing.
JComponent.AccessibleJComponent
Returns key bindings associated with this object
getAccessibleKeyBinding()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns key bindings associated with this object
getAccessibleKeyBinding(int)
- Method in interface javax.accessibility.
AccessibleKeyBinding
Returns a key binding for this object.
getAccessibleKeyBindingCount()
- Method in interface javax.accessibility.
AccessibleKeyBinding
Returns the number of key bindings for this object.
getAccessibleName()
- Method in class com.sun.java.accessibility.util.
Translator
Get the accessible name of this object.
getAccessibleName()
- Method in class java.awt.
Button.AccessibleAWTButton
Get the accessible name of this object.
getAccessibleName()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the accessible name of this object.
getAccessibleName()
- Method in class java.awt.
Label.AccessibleAWTLabel
Get the accessible name of this object.
getAccessibleName()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the accessible name of this object.
getAccessibleName()
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Get the accessible name of this object.
getAccessibleName()
- Method in class javax.accessibility.
AccessibleContext
Gets the
accessibleName
property of this object.
getAccessibleName()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the accessible name of this object.
getAccessibleName()
- Method in class javax.swing.
JComponent.AccessibleJComponent
Gets the accessible name of this object.
getAccessibleName()
- Method in class javax.swing.
JDialog.AccessibleJDialog
Get the accessible name of this object.
getAccessibleName()
- Method in class javax.swing.
JFrame.AccessibleJFrame
Get the accessible name of this object.
getAccessibleName()
- Method in class javax.swing.
JInternalFrame.AccessibleJInternalFrame
Get the accessible name of this object.
getAccessibleName()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Get the accessible name of this object.
getAccessibleName()
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
Returns the accessible name of this object, or
null
if
 there is no accessible name.
getAccessibleName()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the accessible name of this object.
getAccessibleName()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the accessible name of this object.
getAccessibleName()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the accessibleName property of this object.
getAccessibleParent()
- Method in class com.sun.java.accessibility.util.
Translator
Get the accessible parent of this object.
getAccessibleParent()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the
Accessible
parent of this object.
getAccessibleParent()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the
Accessible
parent of this object.
getAccessibleParent()
- Method in class javax.accessibility.
AccessibleContext
Gets the
Accessible
parent of this object.
getAccessibleParent()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Gets the Accessible parent of this object.
getAccessibleParent()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
Accessible
parent of this object.
getAccessibleParent()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the Accessible parent of this object.
getAccessibleParent()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the Accessible parent of this object.
getAccessibleRelationSet()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleRelationSet
associated with an object.
getAccessibleRelationSet()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Get the AccessibleRelationSet associated with this object if one
 exists.
getAccessibleRelationSet()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Get the AccessibleRelationSet associated with this object if one
 exists.
getAccessibleRole()
- Method in class com.sun.java.accessibility.util.
Translator
Get the role of this object.
getAccessibleRole()
- Method in class java.applet.
Applet.AccessibleApplet
Deprecated.
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Button.AccessibleAWTButton
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Canvas.AccessibleAWTCanvas
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Choice.AccessibleAWTChoice
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the role of this object.
getAccessibleRole()
- Method in class java.awt.
Dialog.AccessibleAWTDialog
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Frame.AccessibleAWTFrame
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Label.AccessibleAWTLabel
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
List.AccessibleAWTList
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Menu.AccessibleAWTMenu
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
MenuBar.AccessibleAWTMenuBar
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the role of this object.
getAccessibleRole()
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Panel.AccessibleAWTPanel
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
PopupMenu.AccessibleAWTPopupMenu
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
Scrollbar.AccessibleAWTScrollBar
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
ScrollPane.AccessibleAWTScrollPane
Get the role of this object.
getAccessibleRole()
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Gets the role of this object.
getAccessibleRole()
- Method in class java.awt.
Window.AccessibleAWTWindow
Get the role of this object.
getAccessibleRole()
- Method in class javax.accessibility.
AccessibleContext
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
Box.AccessibleBox
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
Box.Filler.AccessibleBoxFiller
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
CellRendererPane.AccessibleCellRendererPane
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JButton.AccessibleJButton
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JCheckBox.AccessibleJCheckBox
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JColorChooser.AccessibleJColorChooser
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JComponent.AccessibleJComponent
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JDesktopPane.AccessibleJDesktopPane
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JFileChooser.AccessibleJFileChooser
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JInternalFrame.AccessibleJInternalFrame
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JLayeredPane.AccessibleJLayeredPane
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getAccessibleRole()
- Method in class javax.swing.
JList.AccessibleJList
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JMenu.AccessibleJMenu
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JMenuBar.AccessibleJMenuBar
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JMenuItem.AccessibleJMenuItem
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JOptionPane.AccessibleJOptionPane
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JPanel.AccessibleJPanel
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JPopupMenu.AccessibleJPopupMenu
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JProgressBar.AccessibleJProgressBar
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JRadioButton.AccessibleJRadioButton
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JRootPane.AccessibleJRootPane
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JScrollBar.AccessibleJScrollBar
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JScrollPane.AccessibleJScrollPane
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JSeparator.AccessibleJSeparator
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JSlider.AccessibleJSlider
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JSplitPane.AccessibleJSplitPane
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JTable.AccessibleJTable
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JToggleButton.AccessibleJToggleButton
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JToolBar.AccessibleJToolBar
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JToolTip.AccessibleJToolTip
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JTree.AccessibleJTree
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
JViewport.AccessibleJViewport
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the role of this object.
getAccessibleRole()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getAccessibleRole()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader
Get the role of this object.
getAccessibleRole()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Gets the role of this object.
getAccessibleRow(int)
- Method in interface javax.accessibility.
AccessibleExtendedTable
Returns the row number of an index in the table.
getAccessibleRow(int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the row number of an index in the table.
getAccessibleRowAtIndex(int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the row at a given index into the table.
getAccessibleRowCount()
- Method in interface javax.accessibility.
AccessibleTable
Returns the number of rows in the table.
getAccessibleRowCount()
- Method in class javax.swing.
JTable.AccessibleJTable
getAccessibleRowDescription(int)
- Method in interface javax.accessibility.
AccessibleTable
Returns the description of the specified row in the table.
getAccessibleRowDescription(int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the description of the specified row in the table.
getAccessibleRowExtentAt(int, int)
- Method in interface javax.accessibility.
AccessibleTable
Returns the number of rows occupied by the
Accessible
at a
 specified row and column in the table.
getAccessibleRowExtentAt(int, int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the number of rows occupied by the
Accessible
at a specified row and column in the table.
getAccessibleRowHeader()
- Method in interface javax.accessibility.
AccessibleTable
Returns the row headers as an
AccessibleTable
.
getAccessibleRowHeader()
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the row headers as an
AccessibleTable
.
getAccessibleSelection()
- Method in class java.awt.
List.AccessibleAWTList
Get the AccessibleSelection associated with this object.
getAccessibleSelection()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the
AccessibleSelection
associated with this
 object which allows its
Accessible
children to be selected.
getAccessibleSelection()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleSelection
associated with this object which
 allows its
Accessible
children to be selected.
getAccessibleSelection()
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Get the AccessibleSelection associated with this object.
getAccessibleSelection()
- Method in class javax.swing.
JList.AccessibleJList
Get the AccessibleSelection associated with this object.
getAccessibleSelection()
- Method in class javax.swing.
JMenu.AccessibleJMenu
Get the AccessibleSelection associated with this object.
getAccessibleSelection()
- Method in class javax.swing.
JMenuBar.AccessibleJMenuBar
Get the AccessibleSelection associated with this object.
getAccessibleSelection()
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
Gets the
AccessibleSelection
associated with
 this object.
getAccessibleSelection()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
AccessibleSelection
associated with
 this object if one exists.
getAccessibleSelection()
- Method in class javax.swing.
JTable.AccessibleJTable
Get the AccessibleSelection associated with this object.
getAccessibleSelection()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the AccessibleSelection associated with this object if one
 exists.
getAccessibleSelection()
- Method in class javax.swing.
JTree.AccessibleJTree
Get the AccessibleSelection associated with this object.
getAccessibleSelection(int)
- Method in class java.awt.
List.AccessibleAWTList
Returns an Accessible representing the specified selected item
 in the object.
getAccessibleSelection(int)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Returns an
Accessible
representing the specified
 selected child in the object.
getAccessibleSelection(int)
- Method in interface javax.accessibility.
AccessibleSelection
Returns an
Accessible
representing the specified selected child
 of the object.
getAccessibleSelection(int)
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Returns an Accessible representing the specified selected child
 in the popup.
getAccessibleSelection(int)
- Method in class javax.swing.
JList.AccessibleJList
Returns an Accessible representing the specified selected item
 in the object.
getAccessibleSelection(int)
- Method in class javax.swing.
JMenu.AccessibleJMenu
Returns the currently selected sub-menu if one is selected,
 otherwise null (there can only be one selection, and it can
 only be a sub-menu, as otherwise menu items don't remain
 selected).
getAccessibleSelection(int)
- Method in class javax.swing.
JMenuBar.AccessibleJMenuBar
Returns the currently selected menu if one is selected,
 otherwise null.
getAccessibleSelection(int)
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
getAccessibleSelection(int)
- Method in class javax.swing.
JTable.AccessibleJTable
Returns an
Accessible
representing the
 specified selected child in the object.
getAccessibleSelection(int)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Returns an Accessible representing the specified selected item
 in the object.
getAccessibleSelection(int)
- Method in class javax.swing.
JTree.AccessibleJTree
Returns an Accessible representing the specified selected item
 in the object.
getAccessibleSelectionCount()
- Method in class java.awt.
List.AccessibleAWTList
Returns the number of items currently selected.
getAccessibleSelectionCount()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Returns the number of
Accessible
children currently selected.
getAccessibleSelectionCount()
- Method in interface javax.accessibility.
AccessibleSelection
Returns the number of
Accessible
children currently selected.
getAccessibleSelectionCount()
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Returns the number of Accessible children currently selected.
getAccessibleSelectionCount()
- Method in class javax.swing.
JList.AccessibleJList
Returns the number of items currently selected.
getAccessibleSelectionCount()
- Method in class javax.swing.
JMenu.AccessibleJMenu
Returns 1 if a sub-menu is currently selected in this menu.
getAccessibleSelectionCount()
- Method in class javax.swing.
JMenuBar.AccessibleJMenuBar
Returns 1 if a menu is currently selected in this menu bar.
getAccessibleSelectionCount()
- Method in class javax.swing.
JTabbedPane.AccessibleJTabbedPane
getAccessibleSelectionCount()
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the number of
Accessible
children
 currently selected.
getAccessibleSelectionCount()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Returns the number of items currently selected.
getAccessibleSelectionCount()
- Method in class javax.swing.
JTree.AccessibleJTree
Returns the number of items currently selected.
getAccessibleStateSet()
- Method in class com.sun.java.accessibility.util.
Translator
Get the state of this object, given an already populated state.
getAccessibleStateSet()
- Method in class java.applet.
Applet.AccessibleApplet
Deprecated.
Get the state of this object.
getAccessibleStateSet()
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Get the state set of this object.
getAccessibleStateSet()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the state of this object.
getAccessibleStateSet()
- Method in class java.awt.
Dialog.AccessibleAWTDialog
Get the state of this object.
getAccessibleStateSet()
- Method in class java.awt.
Frame.AccessibleAWTFrame
Get the state of this object.
getAccessibleStateSet()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Get the state set of this object.
getAccessibleStateSet()
- Method in class java.awt.
List.AccessibleAWTList
Get the state set of this object.
getAccessibleStateSet()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the state of this object.
getAccessibleStateSet()
- Method in class java.awt.
Scrollbar.AccessibleAWTScrollBar
Get the state set of this object.
getAccessibleStateSet()
- Method in class java.awt.
TextArea.AccessibleAWTTextArea
Gets the state set of this object.
getAccessibleStateSet()
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Gets the state set of the TextComponent.
getAccessibleStateSet()
- Method in class java.awt.
TextField.AccessibleAWTTextField
Gets the state set of this object.
getAccessibleStateSet()
- Method in class java.awt.
Window.AccessibleAWTWindow
Get the state of this object.
getAccessibleStateSet()
- Method in class javax.accessibility.
AccessibleContext
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Get the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Gets the state of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JComboBox.AccessibleJComboBox
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JComponent.AccessibleJComponent
Gets the state of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JDialog.AccessibleJDialog
Get the state of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JEditorPane.AccessibleJEditorPane
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JFrame.AccessibleJFrame
Get the state of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getAccessibleStateSet()
- Method in class javax.swing.
JList.AccessibleJList
Get the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JMenuBar.AccessibleJMenuBar
Get the accessible state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JProgressBar.AccessibleJProgressBar
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JScrollBar.AccessibleJScrollBar
Get the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JSlider.AccessibleJSlider
Get the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JSplitPane.AccessibleJSplitPane
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JTextArea.AccessibleJTextArea
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JTextField.AccessibleJTextField
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JToolBar.AccessibleJToolBar
Get the state of this object.
getAccessibleStateSet()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the state set of this object.
getAccessibleStateSet()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getAccessibleStateSet()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Gets the state set of the JTextComponent.
getAccessibleStateSet(Component)
- Static method in class javax.swing.
SwingUtilities
Get the state of this object.
getAccessibleSummary()
- Method in interface javax.accessibility.
AccessibleTable
Returns the summary description of the table.
getAccessibleSummary()
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the summary description of the table.
getAccessibleTable()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleTable
associated with an object.
getAccessibleTable()
- Method in class javax.swing.
JTable.AccessibleJTable
Gets the
AccessibleTable
associated with this
 object.
getAccessibleText()
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Get the AccessibleText associated with this object.
getAccessibleText()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleText
associated with this object presenting
 text on the display.
getAccessibleText()
- Method in class javax.swing.
JEditorPane.AccessibleJEditorPaneHTML
Returns the accessible text.
getAccessibleText()
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Gets the
AccessibleText
for the
JPasswordField
.
getAccessibleText()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Gets the AccessibleText associated with this object presenting
 text on the display.
getAccessibleText()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
AccessibleText
associated with this
 object if one exists.
getAccessibleText()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the AccessibleText associated with this object if one
 exists.
getAccessibleText()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the AccessibleText associated with this object presenting
 text on the display.
getAccessibleText()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Get the AccessibleText associated with this object.
getAccessibleValue()
- Method in class java.awt.
Button.AccessibleAWTButton
Get the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Get the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Get the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Get the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class java.awt.
Scrollbar.AccessibleAWTScrollBar
Get the
AccessibleValue
associated with this
 object.
getAccessibleValue()
- Method in class javax.accessibility.
AccessibleContext
Gets the
AccessibleValue
associated with this object that
 supports a
Numerical
value.
getAccessibleValue()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Get the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class javax.swing.
JInternalFrame.AccessibleJInternalFrame
Gets the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon
Gets the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class javax.swing.
JProgressBar.AccessibleJProgressBar
Gets the
AccessibleValue
associated with this object.
getAccessibleValue()
- Method in class javax.swing.
JScrollBar.AccessibleJScrollBar
Get the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class javax.swing.
JSlider.AccessibleJSlider
Get the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Gets the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class javax.swing.
JSplitPane.AccessibleJSplitPane
Get the AccessibleValue associated with this object.
getAccessibleValue()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
AccessibleValue
associated with
 this object if one exists.
getAccessibleValue()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the AccessibleValue associated with this object if one
 exists.
getAccessibleValue()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the AccessibleValue associated with this object that supports a
 Numerical value.
getAccessKey()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
A single character access key to give access to the form control.
getAccessKey()
- Method in interface org.w3c.dom.html.
HTMLAreaElement
A single character access key to give access to the form control.
getAccessKey()
- Method in interface org.w3c.dom.html.
HTMLButtonElement
A single character access key to give access to the form control.
getAccessKey()
- Method in interface org.w3c.dom.html.
HTMLInputElement
A single character access key to give access to the form control.
getAccessKey()
- Method in interface org.w3c.dom.html.
HTMLLabelElement
A single character access key to give access to the form control.
getAccessKey()
- Method in interface org.w3c.dom.html.
HTMLLegendElement
A single character access key to give access to the form control.
getAccessKey()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
A single character access key to give access to the form control.
getAccessLevel()
- Method in class javax.tools.
ForwardingJavaFileObject
getAccessLevel()
- Method in interface javax.tools.
JavaFileObject
Provides a hint about the access level of the class represented
 by this file object.
getAccessLevel()
- Method in class javax.tools.
SimpleJavaFileObject
This implementation returns
null
.
getAccessor()
- Method in class java.lang.reflect.
RecordComponent
Returns a
Method
that represents the accessor for this record
 component.
getAccessor()
- Method in interface javax.lang.model.element.
RecordComponentElement
Returns the executable element for the accessor associated with the
 given record component.
getAccessory()
- Method in class javax.swing.
JFileChooser
Returns the accessory component.
getAccessoryPanel()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the accessory panel.
getACHuffmanTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageReadParam
Returns a copy of the array of AC Huffman tables set on the
 most recent call to
setDecodeTables
, or
null
if tables are not currently set.
getACHuffmanTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageWriteParam
Returns a copy of the array of AC Huffman tables set on the
 most recent call to
setEncodeTables
, or
null
if tables are not currently set.
getAcl()
- Method in interface java.nio.file.attribute.
AclFileAttributeView
Reads the access control list.
getAcquire()
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Returns the current value,
 with memory effects as specified by
VarHandle.getAcquire(java.lang.Object...)
.
getAcquire()
- Method in class java.util.concurrent.atomic.
AtomicInteger
Returns the current value,
 with memory effects as specified by
VarHandle.getAcquire(java.lang.Object...)
.
getAcquire()
- Method in class java.util.concurrent.atomic.
AtomicLong
Returns the current value,
 with memory effects as specified by
VarHandle.getAcquire(java.lang.Object...)
.
getAcquire()
- Method in class java.util.concurrent.atomic.
AtomicReference
Returns the current value,
 with memory effects as specified by
VarHandle.getAcquire(java.lang.Object...)
.
getAcquire(int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getAcquire(java.lang.Object...)
.
getAcquire(int)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getAcquire(java.lang.Object...)
.
getAcquire(int)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getAcquire(java.lang.Object...)
.
getAcquire(Object...)
- Method in class java.lang.invoke.
VarHandle
Returns the value of a variable, and ensures that subsequent loads and
 stores are not reordered before this access.
getAction()
- Method in class java.beans.
EventHandler
Returns the name of the target's writable property
 that this event handler will set,
 or the name of the method that this event handler
 will invoke on the target.
getAction()
- Method in class javax.swing.
AbstractButton
Returns the currently set
Action
for this
ActionEvent
source, or
null
if no
Action
is set.
getAction()
- Method in class javax.swing.
JComboBox
Returns the currently set
Action
for this
ActionEvent
source, or
null
if no
Action
is set.
getAction()
- Method in class javax.swing.
JTextField
Returns the currently set
Action
for this
ActionEvent
source, or
null
if no
Action
is set.
getAction()
- Method in interface org.w3c.dom.html.
HTMLFormElement
Server-side form handler.
getAction(KeyStroke)
- Method in interface javax.swing.text.
Keymap
Fetches the action appropriate for the given symbolic
 event sequence.
getActionCommand()
- Method in class java.awt.
Button
Returns the command name of the action event fired by this button.
getActionCommand()
- Method in class java.awt.event.
ActionEvent
Returns the command string associated with this action.
getActionCommand()
- Method in class java.awt.
MenuItem
Gets the command name of the action event that is fired
 by this menu item.
getActionCommand()
- Method in class java.awt.
TrayIcon
Returns the command name of the action event fired by this tray icon.
getActionCommand()
- Method in class javax.swing.
AbstractButton
Returns the action command for this button.
getActionCommand()
- Method in interface javax.swing.
ButtonModel
Returns the action command string for the button.
getActionCommand()
- Method in class javax.swing.
DefaultButtonModel
Returns the action command string for the button.
getActionCommand()
- Method in class javax.swing.
JComboBox
Returns the action command that is included in the event sent to
 action listeners.
getActionCommand()
- Method in class javax.swing.
Timer
Returns the string that will be delivered as the action command
 in
ActionEvent
s fired by this timer.
getActionForKeyStroke(KeyStroke)
- Method in class javax.swing.
JComponent
Returns the object that will perform the action registered for a
 given keystroke.
getActionListeners()
- Method in class java.awt.
Button
Returns an array of all the action listeners
 registered on this button.
getActionListeners()
- Method in class java.awt.
List
Returns an array of all the action listeners
 registered on this list.
getActionListeners()
- Method in class java.awt.
MenuItem
Returns an array of all the action listeners
 registered on this menu item.
getActionListeners()
- Method in class java.awt.
TextField
Returns an array of all the action listeners
 registered on this textfield.
getActionListeners()
- Method in class java.awt.
TrayIcon
Returns an array of all the action listeners
 registered on this
TrayIcon
.
getActionListeners()
- Method in class javax.swing.
AbstractButton
Returns an array of all the
ActionListener
s added
 to this AbstractButton with addActionListener().
getActionListeners()
- Method in class javax.swing.
DefaultButtonModel
Returns an array of all the action listeners
 registered on this
DefaultButtonModel
.
getActionListeners()
- Method in class javax.swing.
JComboBox
Returns an array of all the
ActionListener
s added
 to this JComboBox with addActionListener().
getActionListeners()
- Method in class javax.swing.
JFileChooser
Returns an array of all the action listeners
 registered on this file chooser.
getActionListeners()
- Method in class javax.swing.
JTextField
Returns an array of all the
ActionListener
s added
 to this JTextField with addActionListener().
getActionListeners()
- Method in class javax.swing.
Timer
Returns an array of all the action listeners registered
 on this timer.
getActionMap()
- Method in class javax.swing.
JComponent
Returns the
ActionMap
used to determine what
Action
to fire for particular
KeyStroke
binding.
getActionMap()
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Returns an instance of
ActionMap
.
getActions()
- Method in class java.io.
FilePermission
Returns the "canonical string representation" of the actions.
getActions()
- Method in class java.net.
SocketPermission
Returns the canonical string representation of the actions.
getActions()
- Method in class java.net.
URLPermission
Returns the normalized method list and request
 header list, in the form:
getActions()
- Method in class java.security.
AllPermission
Returns the canonical string representation of the actions.
getActions()
- Method in class java.security.
BasicPermission
Returns the canonical string representation of the actions,
 which currently is the empty string "", since there are no actions for
 a
BasicPermission
.
getActions()
- Method in class java.security.
Permission
Returns the actions as a
String
.
getActions()
- Method in class java.security.
UnresolvedPermission
Returns the canonical string representation of the actions,
 which currently is the empty string "", since there are no actions for
 an
UnresolvedPermission
.
getActions()
- Method in class java.util.
PropertyPermission
Returns the "canonical string representation" of the actions.
getActions()
- Method in class javax.management.
MBeanPermission
Returns the "canonical string representation" of the actions.
getActions()
- Method in class javax.security.auth.kerberos.
ServicePermission
Returns the canonical string representation of the actions.
getActions()
- Method in class javax.security.auth.
PrivateCredentialPermission
Returns the "canonical string representation" of the actions.
getActions()
- Method in class javax.smartcardio.
CardPermission
Returns the canonical string representation of the actions.
getActions()
- Method in class javax.swing.
JFormattedTextField.AbstractFormatter
Subclass and override if you wish to provide a custom set of
Action
s.
getActions()
- Method in class javax.swing.
JFormattedTextField
Fetches the command list for the editor.
getActions()
- Method in class javax.swing.
JTextField
Fetches the command list for the editor.
getActions()
- Method in class javax.swing.text.
DefaultEditorKit
Fetches the set of commands that can be used
 on a text component that is using a model and
 view produced by this kit.
getActions()
- Method in class javax.swing.text.
EditorKit
Fetches the set of commands that can be used
 on a text component that is using a model and
 view produced by this kit.
getActions()
- Method in class javax.swing.text.html.
HTMLEditorKit
Fetches the command list for the editor.
getActions()
- Method in class javax.swing.text.
InternationalFormatter
If
getSupportsIncrement
returns true, this returns
 two Actions suitable for incrementing/decrementing the value.
getActions()
- Method in class javax.swing.text.
JTextComponent
Fetches the command list for the editor.
getActions()
- Method in class javax.swing.text.
StyledEditorKit
Fetches the command list for the editor.
getActiveCount()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the approximate number of threads that are actively
 executing tasks.
getActiveThreadCount()
- Method in class java.util.concurrent.
ForkJoinPool
Returns an estimate of the number of threads that are currently
 stealing or executing tasks.
getActiveWindow()
- Method in class java.awt.
KeyboardFocusManager
Returns the active Window, if the active Window is in the same context
 as the calling thread.
getActualMaximum(int)
- Method in class java.util.
Calendar
Returns the maximum value that the specified calendar field
 could have, given the time value of this
Calendar
.
getActualMaximum(int)
- Method in class java.util.
GregorianCalendar
Returns the maximum value that this calendar field could have,
 taking into consideration the given time value and the current
 values of the
getFirstDayOfWeek
,
getMinimalDaysInFirstWeek
,
getGregorianChange
and
getTimeZone
methods.
getActualMinimum(int)
- Method in class java.util.
Calendar
Returns the minimum value that the specified calendar field
 could have, given the time value of this
Calendar
.
getActualMinimum(int)
- Method in class java.util.
GregorianCalendar
Returns the minimum value that this calendar field could have,
 taking into consideration the given time value and the current
 values of the
getFirstDayOfWeek
,
getMinimalDaysInFirstWeek
,
getGregorianChange
and
getTimeZone
methods.
getActualTypeArguments()
- Method in interface java.lang.reflect.
ParameterizedType
Returns an array of
Type
objects representing the actual type
 arguments to this type.
getAddedEventTypes()
- Method in class jdk.jfr.consumer.
MetadataEvent
Returns a list of added event types since the last metadata event.
getAdditionalBeanInfo()
- Method in interface java.beans.
BeanInfo
This method enables the current
BeanInfo
object
 to return an arbitrary collection of other
BeanInfo
objects
 that provide additional information about the current bean.
getAdditionalBeanInfo()
- Method in class java.beans.
SimpleBeanInfo
Claim there are no other relevant BeanInfo objects.
getAdditionalHeight()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.FileIcon16
Returns an additional height of the icon.
getAdditionalHeight()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.FolderIcon16
Returns an additional height of the icon.
getAdditionalInput()
- Method in class java.security.
DrbgParameters.NextBytes
Returns the requested additional input.
getAdditionalInput()
- Method in class java.security.
DrbgParameters.Reseed
Returns the requested additional input.
getAddListenerMethod()
- Method in class java.beans.
EventSetDescriptor
Gets the method used to add event listeners.
getAddress()
- Method in class com.sun.net.httpserver.
HttpServer
Returns the address this server is listening on
getAddress()
- Method in class java.net.
DatagramPacket
Returns the IP address of the machine to which this datagram is being
 sent or from which the datagram was received, or
null
if not
 set.
getAddress()
- Method in class java.net.
Inet4Address
Returns the raw IP address of this
InetAddress
object.
getAddress()
- Method in class java.net.
Inet6Address
Returns the raw IP address of this
InetAddress
object.
getAddress()
- Method in class java.net.
InetAddress
Returns the raw IP address of this
InetAddress
object.
getAddress()
- Method in class java.net.
InetSocketAddress
Gets the
InetAddress
.
getAddress()
- Method in class java.net.
InterfaceAddress
Returns an
InetAddress
for this address.
getAddress()
- Method in interface javax.management.remote.
JMXAddressable
The address of this object.
getAddress()
- Method in interface javax.management.remote.
JMXConnectorServerMBean
The address of this connector server.
getAddress()
- Method in class javax.management.remote.rmi.
RMIConnector
The address of this connector.
getAddress()
- Method in class javax.management.remote.rmi.
RMIConnectorServer
getAdjustable()
- Method in class java.awt.event.
AdjustmentEvent
Returns the
Adjustable
object where this event originated.
getAdjustmentListeners()
- Method in class java.awt.
Scrollbar
Returns an array of all the adjustment listeners
 registered on this scrollbar.
getAdjustmentListeners()
- Method in class java.awt.
ScrollPaneAdjustable
Returns an array of all the adjustment listeners
 registered on this
ScrollPaneAdjustable
.
getAdjustmentListeners()
- Method in class javax.swing.
JScrollBar
Returns an array of all the
AdjustmentListener
s added
 to this JScrollBar with addAdjustmentListener().
getAdjustmentType()
- Method in class java.awt.event.
AdjustmentEvent
Returns the type of adjustment which caused the value changed
 event.
getAdler()
- Method in class java.util.zip.
Deflater
Returns the ADLER-32 value of the uncompressed data.
getAdler()
- Method in class java.util.zip.
Inflater
Returns the ADLER-32 value of the uncompressed data.
getAdvance()
- Method in class java.awt.font.
GlyphMetrics
Returns the advance of the glyph along the baseline (either
 horizontal or vertical).
getAdvance()
- Method in class java.awt.font.
GraphicAttribute
Returns the advance of this
GraphicAttribute
.
getAdvance()
- Method in class java.awt.font.
ImageGraphicAttribute
Returns the advance of this
ImageGraphicAttribute
.
getAdvance()
- Method in class java.awt.font.
ShapeGraphicAttribute
Returns the advance of this
ShapeGraphicAttribute
.
getAdvance()
- Method in class java.awt.font.
TextLayout
Returns the advance of this
TextLayout
.
getAdvanceBetween(int, int)
- Method in class java.awt.font.
TextMeasurer
Returns the graphical width of a line beginning at
start
and including characters up to
limit
.
getAdvanceX()
- Method in class java.awt.font.
GlyphMetrics
Returns the x-component of the advance of the glyph.
getAdvanceY()
- Method in class java.awt.font.
GlyphMetrics
Returns the y-component of the advance of the glyph.
getAffineX()
- Method in class java.security.spec.
ECPoint
Returns the affine x-coordinate
x
.
getAffineY()
- Method in class java.security.spec.
ECPoint
Returns the affine y-coordinate
y
.
getAfterIndex(int, int)
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the String after a given index.
getAfterIndex(int, int)
- Method in interface javax.accessibility.
AccessibleText
Returns the
String
after a given index.
getAfterIndex(int, int)
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the String after a given index.
getAfterIndex(int, int)
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the String after a given index.
getAfterIndex(int, int)
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Returns the
String
after a given
index
.
getAfterIndex(int, int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the String after a given index.
getAfterIndex(int, int)
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the String after a given index.
getAfterIndex(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the String after a given index.
getAgentProperties()
- Method in class com.sun.tools.attach.
VirtualMachine
Returns the current
agent properties
in the target virtual
 machine.
getAlgName()
- Method in class javax.crypto.
EncryptedPrivateKeyInfo
Returns the encryption algorithm.
getAlgorithm()
- Method in class java.security.
AlgorithmParameterGenerator
Returns the standard name of the algorithm this parameter
 generator is associated with.
getAlgorithm()
- Method in class java.security.
AlgorithmParameters
Returns the name of the algorithm associated with this parameter object.
getAlgorithm()
- Method in class java.security.cert.
CertPathBuilder
Returns the name of the algorithm of this
CertPathBuilder
.
getAlgorithm()
- Method in class java.security.cert.
CertPathValidator
Returns the algorithm name of this
CertPathValidator
.
getAlgorithm()
- Method in interface java.security.
Key
Returns the standard algorithm name for this key.
getAlgorithm()
- Method in class java.security.
KeyFactory
Gets the name of the algorithm
 associated with this
KeyFactory
.
getAlgorithm()
- Method in class java.security.
KeyPairGenerator
Returns the standard name of the algorithm for this key pair generator.
getAlgorithm()
- Method in class java.security.
MessageDigest
Returns a string that identifies the algorithm, independent of
 implementation details.
getAlgorithm()
- Method in class java.security.
Provider.Service
Return the name of the algorithm of this service.
getAlgorithm()
- Method in class java.security.
SecureRandom
Returns the name of the algorithm implemented by this
SecureRandom
object.
getAlgorithm()
- Method in class java.security.
Signature
Returns the name of the algorithm for this
Signature
object.
getAlgorithm()
- Method in class java.security.
SignedObject
Retrieves the name of the signature algorithm.
getAlgorithm()
- Method in class java.security.spec.
EncodedKeySpec
Returns the name of the algorithm of the encoded key.
getAlgorithm()
- Method in class javax.crypto.
Cipher
Returns the algorithm name of this
Cipher
object.
getAlgorithm()
- Method in class javax.crypto.
KEM
Returns the name of the algorithm for this
KEM
object.
getAlgorithm()
- Method in class javax.crypto.
KeyAgreement
Returns the algorithm name of this
KeyAgreement
object.
getAlgorithm()
- Method in class javax.crypto.
KeyGenerator
Returns the algorithm name of this
KeyGenerator
object.
getAlgorithm()
- Method in class javax.crypto.
Mac
Returns the algorithm name of this
Mac
object.
getAlgorithm()
- Method in class javax.crypto.
SealedObject
Returns the algorithm that was used to seal this object.
getAlgorithm()
- Method in class javax.crypto.
SecretKeyFactory
Returns the algorithm name of this
SecretKeyFactory
object.
getAlgorithm()
- Method in class javax.crypto.spec.
PSource
Returns the PSource algorithm name.
getAlgorithm()
- Method in class javax.crypto.spec.
SecretKeySpec
Returns the name of the algorithm associated with this secret key.
getAlgorithm()
- Method in class javax.net.ssl.
KeyManagerFactory
Returns the algorithm name of this
KeyManagerFactory
object.
getAlgorithm()
- Method in class javax.net.ssl.
TrustManagerFactory
Returns the algorithm name of this
TrustManagerFactory
object.
getAlgorithm()
- Method in class javax.security.auth.kerberos.
EncryptionKey
Returns the standard algorithm name for this key.
getAlgorithm()
- Method in class javax.security.auth.kerberos.
KerberosKey
Returns the standard algorithm name for this key.
getAlgorithm()
- Method in interface javax.xml.crypto.
AlgorithmMethod
Returns the algorithm URI of this
AlgorithmMethod
.
getAlgorithm()
- Method in class javax.xml.crypto.dsig.
TransformService
Returns the URI of the algorithm supported by this
TransformService
.
getAlgorithmConstraints()
- Method in class javax.net.ssl.
SSLParameters
Returns the cryptographic algorithm constraints.
getAlgorithmProperty(String, String)
- Static method in class java.security.
Security
Deprecated.
This method used to return the value of a proprietary
 property in the master file of the "SUN" Cryptographic Service
 Provider in order to determine how to parse algorithm-specific
 parameters. Use the new provider-based and algorithm-independent
AlgorithmParameters
and
KeyFactory
engine
 classes (introduced in the J2SE version 1.2 platform) instead.
getAlgorithms(String)
- Static method in class java.security.
Security
Returns a Set of
String
objects containing the names of all
 available algorithms or types for the specified Java cryptographic
 service (e.g.,
Signature
,
MessageDigest
,
Cipher
,
Mac
,
KeyStore
).
getAlgParameters()
- Method in class javax.crypto.
EncryptedPrivateKeyInfo
Returns the algorithm parameters used by the encryption algorithm.
getAlias()
- Method in class javax.security.auth.x500.
X500PrivateCredential
Returns the KeyStore alias.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Aligns this object (vertically or horizontally)  with respect to its
 surrounding text.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLDivElement
Horizontal text alignment.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLHeadingElement
Horizontal text alignment.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLHRElement
Align the rule on the page.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
Aligns this object (vertically or horizontally)  with respect to its
 surrounding text.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Aligns this object (vertically or horizontally)  with respect to its
 surrounding text.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Aligns this object (vertically or horizontally)  with respect to its
 surrounding text.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLLegendElement
Text alignment relative to
FIELDSET
.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Aligns this object (vertically or horizontally)  with respect to its
 surrounding text.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLParagraphElement
Horizontal text alignment.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLTableCaptionElement
Caption alignment with respect to the table.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Horizontal alignment of data in cell.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLTableColElement
Horizontal alignment of cell data in column.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Specifies the table's position with respect to the rest of the
 document.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
Horizontal alignment of data within cells of this row.
getAlign()
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
Horizontal alignment of data in cells.
getAlignedSizeRequirements(SizeRequirements[])
- Static method in class javax.swing.
SizeRequirements
Determines the total space necessary to
 align a set of components.
getAlignment()
- Method in class java.awt.
FlowLayout
Gets the alignment for this layout.
getAlignment()
- Method in class java.awt.font.
GraphicAttribute
Returns the alignment of this
GraphicAttribute
.
getAlignment()
- Method in class java.awt.
Label
Gets the current alignment of this label.
getAlignment()
- Method in class javax.swing.text.
TabStop
Returns the alignment, as an integer, of the tab.
getAlignment(int)
- Method in class javax.swing.text.
BoxView
Determines the desired alignment for this view along an
 axis.
getAlignment(int)
- Method in class javax.swing.text.
ComponentView
Determines the desired alignment for this view along an
 axis.
getAlignment(int)
- Method in class javax.swing.text.
GlyphView
Determines the desired alignment for this view along an
 axis.
getAlignment(int)
- Method in class javax.swing.text.html.
BlockView
Gets the alignment.
getAlignment(int)
- Method in class javax.swing.text.html.
ImageView
Determines the desired alignment for this view along an
 axis.
getAlignment(int)
- Method in class javax.swing.text.html.
ListView
Calculates the desired shape of the list.
getAlignment(int)
- Method in class javax.swing.text.
IconView
Determines the desired alignment for this view along an
 axis.
getAlignment(int)
- Method in class javax.swing.text.
ParagraphView
Determines the desired alignment for this view along an
 axis.
getAlignment(int)
- Method in class javax.swing.text.
View
Determines the desired alignment for this view along an
 axis.
getAlignment(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the alignment setting.
getAlignmentX()
- Method in class java.awt.
Component
Returns the alignment along the x axis.
getAlignmentX()
- Method in class java.awt.
Container
Returns the alignment along the x axis.
getAlignmentX()
- Method in class javax.swing.
JComponent
Overrides
Container.getAlignmentX
to return
 the horizontal alignment.
getAlignmentY()
- Method in class java.awt.
Component
Returns the alignment along the y axis.
getAlignmentY()
- Method in class java.awt.
Container
Returns the alignment along the y axis.
getAlignmentY()
- Method in class javax.swing.
JComponent
Overrides
Container.getAlignmentY
to return
 the vertical alignment.
getAlignOnBaseline()
- Method in class java.awt.
FlowLayout
Returns true if components are to be vertically aligned along
 their baseline.
getALink()
- Method in interface org.w3c.dom.html.
HTMLBodyElement
Color of active links (after mouse-button down, but before
 mouse-button up).
getAll()
- Method in class javax.naming.
CompositeName
Retrieves the components of this composite name as an enumeration
 of strings.
getAll()
- Method in class javax.naming.
CompoundName
Retrieves the components of this compound name as an enumeration
 of strings.
getAll()
- Method in interface javax.naming.directory.
Attribute
Retrieves an enumeration of the attribute's values.
getAll()
- Method in interface javax.naming.directory.
Attributes
Retrieves an enumeration of the attributes in the attribute set.
getAll()
- Method in class javax.naming.directory.
BasicAttribute
Retrieves an enumeration of this attribute's values.
getAll()
- Method in class javax.naming.directory.
BasicAttributes
getAll()
- Method in class javax.naming.ldap.
LdapName
Retrieves the components of this name as an enumeration
 of strings.
getAll()
- Method in interface javax.naming.
Name
Retrieves the components of this name as an enumeration
 of strings.
getAll()
- Method in class javax.naming.
Reference
Retrieves an enumeration of the addresses in this reference.
getAll(String[])
- Method in class com.sun.management.
GcInfo
getAll(String[])
- Method in interface javax.management.openmbean.
CompositeData
Returns an array of the values of the items whose names
 are specified by
keys
, in the same order as
keys
.
getAll(String[])
- Method in class javax.management.openmbean.
CompositeDataSupport
Returns an array of the values of the items whose names are specified by
keys
, in the same order as
keys
.
getAllAnnotationMirrors(Element)
- Method in interface javax.lang.model.util.
Elements
Returns all annotations
present
on an element, whether
 directly present or present via inheritance.
getAllAttributeKeys()
- Method in interface java.text.
AttributedCharacterIterator
Returns the keys of all attributes defined on the
 iterator's text range.
getAllAttributeKeys()
- Static method in class javax.swing.text.html.
CSS
Return the set of all possible CSS attribute keys.
getAllAttributeKeys()
- Static method in class javax.swing.text.html.
HTML
Returns the set of HTML attributes recognized.
getAllByName(String)
- Static method in class java.net.
InetAddress
Given the name of a host, returns an array of its IP addresses,
 based on the configured system
resolver
.
getAllFonts()
- Method in class java.awt.
GraphicsEnvironment
Returns an array containing a one-point size instance of all fonts
 available in this
GraphicsEnvironment
.
getAllFrames()
- Method in class javax.swing.
JDesktopPane
Returns all
JInternalFrames
currently displayed in the
 desktop.
getAllFramesInLayer(int)
- Method in class javax.swing.
JDesktopPane
Returns all
JInternalFrames
currently displayed in the
 specified layer of the desktop.
getAllLoadedClasses()
- Method in interface java.lang.instrument.
Instrumentation
Returns an array of all classes currently loaded by the JVM.
getAllLocalAddresses()
- Method in class com.sun.nio.sctp.
SctpChannel
Returns all of the socket addresses to which this channel's socket is
 bound.
getAllLocalAddresses()
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Returns all of the socket addresses to which this channel's socket is
 bound.
getAllLocalAddresses()
- Method in class com.sun.nio.sctp.
SctpServerChannel
Returns all of the socket addresses to which this channel's socket is
 bound.
getAllMembers(TypeElement)
- Method in interface javax.lang.model.util.
Elements
Returns all members of a type element, whether inherited or
 declared directly.
getAllModuleElements()
- Method in interface javax.lang.model.util.
Elements
Returns all module elements in the current environment.
getAllNotificationIDs()
- Method in class javax.management.timer.
Timer
Gets all timer notification identifiers registered into the list of notifications.
getAllNotificationIDs()
- Method in interface javax.management.timer.
TimerMBean
Gets all timer notification identifiers registered into the list of notifications.
getAllowedLocations()
- Method in interface jdk.javadoc.doclet.
Taglet
Returns the set of supported locations for block tags.
getAllowedTagSets()
- Method in class javax.imageio.plugins.tiff.
TIFFImageReadParam
Returns a
List
containing the allowed
TIFFTagSet
objects.
getAllowsChildren()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Returns true if the receiver allows children.
getAllowsChildren()
- Method in class javax.swing.text.
AbstractDocument.BranchElement
Returns true if the receiver allows children.
getAllowsChildren()
- Method in class javax.swing.text.
AbstractDocument.LeafElement
Returns true if the receiver allows children.
getAllowsChildren()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns true if this node is allowed to have children.
getAllowsChildren()
- Method in interface javax.swing.tree.
TreeNode
Returns true if the receiver allows children.
getAllowsInvalid()
- Method in class javax.swing.text.
DefaultFormatter
Returns whether or not the value being edited is allowed to be invalid
 for a length of time.
getAllowUserInteraction()
- Method in class java.net.
URLConnection
Returns the value of the
allowUserInteraction
field for
 this object.
getAllPackageElements(CharSequence)
- Method in interface javax.lang.model.util.
Elements
Returns all package elements with the given canonical name.
getAllRelationIds()
- Method in class javax.management.relation.
RelationService
Returns all the relation ids for all the relations handled by the
 Relation Service.
getAllRelationIds()
- Method in interface javax.management.relation.
RelationServiceMBean
Returns all the relation ids for all the relations handled by the
 Relation Service.
getAllRelationTypeNames()
- Method in class javax.management.relation.
RelationService
Retrieves names of all known relation types.
getAllRelationTypeNames()
- Method in interface javax.management.relation.
RelationServiceMBean
Retrieves names of all known relation types.
getAllRoles()
- Method in interface javax.management.relation.
Relation
Returns all roles present in the relation.
getAllRoles()
- Method in class javax.management.relation.
RelationSupport
Returns all roles present in the relation.
getAllRoles(String)
- Method in class javax.management.relation.
RelationService
Returns all roles present in the relation.
getAllRoles(String)
- Method in interface javax.management.relation.
RelationServiceMBean
Returns all roles present in the relation.
getAllStackTraces()
- Static method in class java.lang.
Thread
Returns a map of stack traces for all live platform threads.
getAllTags()
- Static method in class javax.swing.text.html.
HTML
Returns the set of actual HTML tags that
 are recognized by the default HTML reader.
getAllThreadIds()
- Method in interface java.lang.management.
ThreadMXBean
Returns the threadIDs of all live platform threads.
getAllTypeElements(CharSequence)
- Method in interface javax.lang.model.util.
Elements
Returns all type elements with the given canonical name.
getAlpha()
- Method in class java.awt.
AlphaComposite
Returns the alpha value of this
AlphaComposite
.
getAlpha()
- Method in class java.awt.
Color
Returns the alpha component in the range 0-255.
getAlpha(int)
- Method in class java.awt.image.
ColorModel
Returns the alpha component for the specified pixel, scaled
 from 0 to 255.
getAlpha(int)
- Method in class java.awt.image.
ComponentColorModel
Returns the alpha component for the specified pixel, scaled
 from 0 to 255.
getAlpha(int)
- Method in class java.awt.image.
DirectColorModel
Returns the alpha component for the specified pixel, scaled
 from 0 to 255.
getAlpha(int)
- Method in class java.awt.image.
IndexColorModel
Returns the alpha component for the specified pixel, scaled
 from 0 to 255.
getAlpha(Object)
- Method in class java.awt.image.
ColorModel
Returns the alpha component for the specified pixel, scaled
 from 0 to 255.
getAlpha(Object)
- Method in class java.awt.image.
ComponentColorModel
Returns the alpha component for the specified pixel, scaled from
 0 to 255.
getAlpha(Object)
- Method in class java.awt.image.
DirectColorModel
Returns the alpha component for the specified pixel, scaled
 from 0 to 255.
getAlphaMask()
- Method in class java.awt.image.
DirectColorModel
Returns the mask indicating which bits in an
int
pixel
 representation contain the alpha component.
getAlphaRaster()
- Method in class java.awt.image.
BufferedImage
Returns a
WritableRaster
representing the alpha
 channel for
BufferedImage
objects
 with
ColorModel
objects that support a separate
 spatial alpha channel, such as
ComponentColorModel
and
DirectColorModel
.
getAlphaRaster(WritableRaster)
- Method in class java.awt.image.
ColorModel
Returns a
Raster
representing the alpha channel of an
 image, extracted from the input
Raster
, provided that
 pixel values of this
ColorModel
represent color and
 alpha information as separate spatial bands (e.g.
getAlphaRaster(WritableRaster)
- Method in class java.awt.image.
ComponentColorModel
Returns a
Raster
representing the alpha channel of an image,
 extracted from the input
Raster
.
getAlphaRaster(WritableRaster)
- Method in class java.awt.image.
PackedColorModel
Returns a
WritableRaster
representing the alpha channel of
 an image, extracted from the input
WritableRaster
.
getAlphas(byte[])
- Method in class java.awt.image.
IndexColorModel
Copies the array of alpha transparency components into the
 specified array.
getAlt()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Alternate text for user agents not rendering the normal content of
 this element.
getAlt()
- Method in interface org.w3c.dom.html.
HTMLAreaElement
Alternate text for user agents not rendering the normal content of
 this element.
getAlt()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Alternate text for user agents not rendering the normal content of
 this element.
getAlt()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Alternate text for user agents not rendering the normal content of
 this element.
getAlternatives()
- Method in interface javax.lang.model.type.
UnionType
Returns the alternatives comprising this union type.
getAltKey()
- Method in interface org.w3c.dom.events.
MouseEvent
Used to indicate whether the 'alt' key was depressed during the firing
 of the event.
getAltName()
- Method in exception class javax.naming.
CannotProceedException
Retrieves the
altName
field of this exception.
getAltNameCtx()
- Method in exception class javax.naming.
CannotProceedException
Retrieves the
altNameCtx
field of this exception.
getAltText()
- Method in class javax.swing.text.html.
ImageView
Returns the text to display if the image cannot be loaded.
getAmountFull(Insets, int, int)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
This determines the amount of the progress bar that should be filled
 based on the percent done gathered from the model.
getAmPmStrings()
- Method in class java.text.
DateFormatSymbols
Gets ampm strings.
getAncestor()
- Method in class javax.swing.event.
AncestorEvent
Returns the ancestor that the event actually occurred on.
getAncestorListeners()
- Method in class javax.swing.
JComponent
Returns an array of all the ancestor listeners
 registered on this component.
getAncestorNamed(String, Component)
- Static method in class javax.swing.
SwingUtilities
Convenience method for searching above
comp
in the
 component hierarchy and returns the first object of
name
it
 finds.
getAncestorOfClass(Class<?>, Component)
- Static method in class javax.swing.
SwingUtilities
Convenience method for searching above
comp
in the
 component hierarchy and returns the first object of class
c
it
 finds.
getAncestorParent()
- Method in class javax.swing.event.
AncestorEvent
Returns the parent of the ancestor the event actually occurred on.
getAnchorRect()
- Method in class java.awt.
TexturePaint
Returns a copy of the anchor rectangle which positions and
 sizes the textured image.
getAnchors()
- Method in interface org.w3c.dom.html.
HTMLDocument
A collection of all the anchor (
A
) elements in a document
  with a value for the
name
attribute.
getAnchorSelectionIndex()
- Method in class javax.swing.
DefaultListSelectionModel
Return the first index argument from the most recent call to
 setSelectionInterval(), addSelectionInterval() or removeSelectionInterval().
getAnchorSelectionIndex()
- Method in class javax.swing.
JList
Returns the anchor selection index.
getAnchorSelectionIndex()
- Method in interface javax.swing.
ListSelectionModel
Return the first index argument from the most recent call to
 setSelectionInterval(), addSelectionInterval() or removeSelectionInterval().
getAnchorSelectionPath()
- Method in class javax.swing.
JTree
Returns the path identified as the anchor.
getAndAccumulate(int, int, IntBinaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function to the current and
 given values, returning the previous value.
getAndAccumulate(int, long, LongBinaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function to the current and
 given values, returning the previous value.
getAndAccumulate(int, E, BinaryOperator<E>)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function to the current and
 given values, returning the previous value.
getAndAccumulate(int, IntBinaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function to the current and given values,
 returning the previous value.
getAndAccumulate(long, LongBinaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLong
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function to the current and given values,
 returning the previous value.
getAndAccumulate(T, int, IntBinaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given function
 to the current and given values, returning the previous value.
getAndAccumulate(T, long, LongBinaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given function
 to the current and given values, returning the previous value.
getAndAccumulate(T, V, BinaryOperator<V>)
- Method in class java.util.concurrent.atomic.
AtomicReferenceFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given function
 to the current and given values, returning the previous value.
getAndAccumulate(V, BinaryOperator<V>)
- Method in class java.util.concurrent.atomic.
AtomicReference
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function to the current and given values,
 returning the previous value.
getAndAdd(int)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Atomically adds the given value to the current value,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndAdd(int, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Atomically adds the given value to the element at index
i
,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndAdd(int, long)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Atomically adds the given value to the element at index
i
,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndAdd(long)
- Method in class java.util.concurrent.atomic.
AtomicLong
Atomically adds the given value to the current value,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndAdd(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically adds the
value
to the current value of a variable with
 the memory semantics of
VarHandle.setVolatile(java.lang.Object...)
, and returns the variable's
 previous value, as accessed with the memory semantics of
VarHandle.getVolatile(java.lang.Object...)
.
getAndAdd(T, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Atomically adds the given value to the current value of the field of
 the given object managed by this updater.
getAndAdd(T, long)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Atomically adds the given value to the current value of the field of
 the given object managed by this updater.
getAndAddAcquire(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically adds the
value
to the current value of a variable with
 the memory semantics of
VarHandle.set(java.lang.Object...)
, and returns the variable's
 previous value, as accessed with the memory semantics of
VarHandle.getAcquire(java.lang.Object...)
.
getAndAddRelease(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically adds the
value
to the current value of a variable with
 the memory semantics of
VarHandle.setRelease(java.lang.Object...)
, and returns the variable's
 previous value, as accessed with the memory semantics of
VarHandle.get(java.lang.Object...)
.
getAndBitwiseAnd(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise AND between the variable's current value and the
mask
with the memory semantics of
VarHandle.setVolatile(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.getVolatile(java.lang.Object...)
.
getAndBitwiseAndAcquire(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise AND between the variable's current value and the
mask
with the memory semantics of
VarHandle.set(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.getAcquire(java.lang.Object...)
.
getAndBitwiseAndRelease(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise AND between the variable's current value and the
mask
with the memory semantics of
VarHandle.setRelease(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.get(java.lang.Object...)
.
getAndBitwiseOr(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise OR between the variable's current value and the
mask
with the memory semantics of
VarHandle.setVolatile(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.getVolatile(java.lang.Object...)
.
getAndBitwiseOrAcquire(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise OR between the variable's current value and the
mask
with the memory semantics of
VarHandle.set(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.getAcquire(java.lang.Object...)
.
getAndBitwiseOrRelease(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise OR between the variable's current value and the
mask
with the memory semantics of
VarHandle.setRelease(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.get(java.lang.Object...)
.
getAndBitwiseXor(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise XOR between the variable's current value and the
mask
with the memory semantics of
VarHandle.setVolatile(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.getVolatile(java.lang.Object...)
.
getAndBitwiseXorAcquire(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise XOR between the variable's current value and the
mask
with the memory semantics of
VarHandle.set(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.getAcquire(java.lang.Object...)
.
getAndBitwiseXorRelease(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the result of
 bitwise XOR between the variable's current value and the
mask
with the memory semantics of
VarHandle.setRelease(java.lang.Object...)
and returns the
 variable's previous value, as accessed with the memory semantics of
VarHandle.get(java.lang.Object...)
.
getAndDecrement()
- Method in class java.util.concurrent.atomic.
AtomicInteger
Atomically decrements the current value,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndDecrement()
- Method in class java.util.concurrent.atomic.
AtomicLong
Atomically decrements the current value,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndDecrement(int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Atomically decrements the value of the element at index
i
,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndDecrement(int)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Atomically decrements the value of the element at index
i
,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndDecrement(T)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Atomically decrements by one the current value of the field of the
 given object managed by this updater.
getAndDecrement(T)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Atomically decrements by one the current value of the field of the
 given object managed by this updater.
getAndIncrement()
- Method in class java.util.concurrent.atomic.
AtomicInteger
Atomically increments the current value,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndIncrement()
- Method in class java.util.concurrent.atomic.
AtomicLong
Atomically increments the current value,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndIncrement(int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Atomically increments the value of the element at index
i
,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndIncrement(int)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Atomically increments the value of the element at index
i
,
 with memory effects as specified by
VarHandle.getAndAdd(java.lang.Object...)
.
getAndIncrement(T)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Atomically increments by one the current value of the field of the
 given object managed by this updater.
getAndIncrement(T)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Atomically increments by one the current value of the field of the
 given object managed by this updater.
getAndSet(boolean)
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Atomically sets the value to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
getAndSet(int)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Atomically sets the value to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
getAndSet(int, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Atomically sets the element at index
i
to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
getAndSet(int, long)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Atomically sets the element at index
i
to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
getAndSet(int, E)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Atomically sets the element at index
i
to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
getAndSet(long)
- Method in class java.util.concurrent.atomic.
AtomicLong
Atomically sets the value to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
getAndSet(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the
newValue
with the
 memory semantics of
VarHandle.setVolatile(java.lang.Object...)
and returns the variable's
 previous value, as accessed with the memory semantics of
VarHandle.getVolatile(java.lang.Object...)
.
getAndSet(T, int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Atomically sets the field of the given object managed by this updater
 to the given value and returns the old value.
getAndSet(T, long)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Atomically sets the field of the given object managed by this updater
 to the given value and returns the old value.
getAndSet(T, V)
- Method in class java.util.concurrent.atomic.
AtomicReferenceFieldUpdater
Atomically sets the field of the given object managed by this updater
 to the given value and returns the old value.
getAndSet(V)
- Method in class java.util.concurrent.atomic.
AtomicReference
Atomically sets the value to
newValue
and returns the old value,
 with memory effects as specified by
VarHandle.getAndSet(java.lang.Object...)
.
getAndSetAcquire(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the
newValue
with the
 memory semantics of
VarHandle.set(java.lang.Object...)
and returns the variable's
 previous value, as accessed with the memory semantics of
VarHandle.getAcquire(java.lang.Object...)
.
getAndSetRelease(Object...)
- Method in class java.lang.invoke.
VarHandle
Atomically sets the value of a variable to the
newValue
with the
 memory semantics of
VarHandle.setRelease(java.lang.Object...)
and returns the variable's
 previous value, as accessed with the memory semantics of
VarHandle.get(java.lang.Object...)
.
getAndUpdate(int, IntUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function, returning the
 previous value.
getAndUpdate(int, LongUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function, returning the
 previous value.
getAndUpdate(int, UnaryOperator<E>)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function, returning the
 previous value.
getAndUpdate(IntUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function, returning the previous value.
getAndUpdate(LongUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLong
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function, returning the previous value.
getAndUpdate(UnaryOperator<V>)
- Method in class java.util.concurrent.atomic.
AtomicReference
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function, returning the previous value.
getAndUpdate(T, IntUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given
 function, returning the previous value.
getAndUpdate(T, LongUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given
 function, returning the previous value.
getAndUpdate(T, UnaryOperator<V>)
- Method in class java.util.concurrent.atomic.
AtomicReferenceFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given
 function, returning the previous value.
getAngleExtent()
- Method in class java.awt.geom.
Arc2D.Double
Returns the angular extent of the arc.
getAngleExtent()
- Method in class java.awt.geom.
Arc2D.Float
Returns the angular extent of the arc.
getAngleExtent()
- Method in class java.awt.geom.
Arc2D
Returns the angular extent of the arc.
getAngleStart()
- Method in class java.awt.geom.
Arc2D.Double
Returns the starting angle of the arc.
getAngleStart()
- Method in class java.awt.geom.
Arc2D.Float
Returns the starting angle of the arc.
getAngleStart()
- Method in class java.awt.geom.
Arc2D
Returns the starting angle of the arc.
getAnimationIndex()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Gets the index of the current animation frame.
getAnnotatedActualTypeArguments()
- Method in interface java.lang.reflect.
AnnotatedParameterizedType
Returns the potentially annotated actual type arguments of this parameterized type.
getAnnotatedBounds()
- Method in interface java.lang.reflect.
AnnotatedTypeVariable
Returns the potentially annotated bounds of this type variable.
getAnnotatedBounds()
- Method in interface java.lang.reflect.
TypeVariable
Returns an array of AnnotatedType objects that represent the use of
 types to denote the upper bounds of the type parameter represented by
 this TypeVariable.
getAnnotatedExceptionTypes()
- Method in class java.lang.reflect.
Executable
Returns an array of
AnnotatedType
objects that represent the use
 of types to specify the declared exceptions of the method/constructor
 represented by this Executable.
getAnnotatedGenericComponentType()
- Method in interface java.lang.reflect.
AnnotatedArrayType
Returns the potentially annotated generic component type of this array type.
getAnnotatedInterfaces()
- Method in class java.lang.
Class
Returns an array of
AnnotatedType
objects that represent the use
 of types to specify superinterfaces of the entity represented by this
Class
object.
getAnnotatedLowerBounds()
- Method in interface java.lang.reflect.
AnnotatedWildcardType
Returns the potentially annotated lower bounds of this wildcard type.
getAnnotatedOwnerType()
- Method in interface java.lang.reflect.
AnnotatedArrayType
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested class or interface.
getAnnotatedOwnerType()
- Method in interface java.lang.reflect.
AnnotatedParameterizedType
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested type.
getAnnotatedOwnerType()
- Method in interface java.lang.reflect.
AnnotatedType
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested type.
getAnnotatedOwnerType()
- Method in interface java.lang.reflect.
AnnotatedTypeVariable
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested type.
getAnnotatedOwnerType()
- Method in interface java.lang.reflect.
AnnotatedWildcardType
Returns the potentially annotated type that this type is a member of, if
 this type represents a nested type.
getAnnotatedParameterTypes()
- Method in class java.lang.reflect.
Executable
Returns an array of
AnnotatedType
objects that represent the use
 of types to specify formal parameter types of the method/constructor
 represented by this Executable.
getAnnotatedReceiverType()
- Method in class java.lang.reflect.
Constructor
Returns an
AnnotatedType
object that represents the use of a
 type to specify the receiver type of the method/constructor represented
 by this
Executable
object.
getAnnotatedReceiverType()
- Method in class java.lang.reflect.
Executable
Returns an
AnnotatedType
object that represents the use of a
 type to specify the receiver type of the method/constructor represented
 by this
Executable
object.
getAnnotatedReturnType()
- Method in class java.lang.reflect.
Constructor
Returns an
AnnotatedType
object that represents the use of a type to
 specify the return type of the method/constructor represented by this
 Executable.
getAnnotatedReturnType()
- Method in class java.lang.reflect.
Executable
Returns an
AnnotatedType
object that represents the use of a type to
 specify the return type of the method/constructor represented by this
 Executable.
getAnnotatedReturnType()
- Method in class java.lang.reflect.
Method
Returns an
AnnotatedType
object that represents the use of a type to
 specify the return type of the method/constructor represented by this
 Executable.
getAnnotatedSuperclass()
- Method in class java.lang.
Class
Returns an
AnnotatedType
object that represents the use of a
 type to specify the superclass of the entity represented by this
Class
object.
getAnnotatedType()
- Method in class java.lang.reflect.
Field
Returns an AnnotatedType object that represents the use of a type to specify
 the declared type of the field represented by this Field.
getAnnotatedType()
- Method in class java.lang.reflect.
Parameter
Returns an AnnotatedType object that represents the use of a type to
 specify the type of the formal parameter represented by this Parameter.
getAnnotatedType()
- Method in class java.lang.reflect.
RecordComponent
Returns an
AnnotatedType
object that represents the use of a type to specify
 the declared type of this record component.
getAnnotatedUpperBounds()
- Method in interface java.lang.reflect.
AnnotatedWildcardType
Returns the potentially annotated upper bounds of this wildcard type.
getAnnotation(Class<? extends Annotation>)
- Method in class jdk.jfr.
AnnotationElement
Returns the first annotation for the specified type if an
AnnotationElement
with the same name exists, else
null
.
getAnnotation(Class<A>)
- Method in class java.lang.
Class
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<A>)
- Method in class java.lang.
Package
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<A>)
- Method in interface javax.lang.model.
AnnotatedConstruct
Returns this construct's annotation of the specified type if
 such an annotation is
present
, else
null
.
getAnnotation(Class<A>)
- Method in interface javax.lang.model.element.
Element
Returns this construct's annotation of the specified type if
 such an annotation is
present
, else
null
.
getAnnotation(Class<A>)
- Method in interface javax.lang.model.type.
TypeMirror
Returns this construct's annotation of the specified type if
 such an annotation is
present
, else
null
.
getAnnotation(Class<A>)
- Method in class jdk.jfr.
EventType
Returns the first annotation for the specified type if an annotation
 element with the same name is directly present, otherwise
null
.
getAnnotation(Class<A>)
- Method in class jdk.jfr.
SettingDescriptor
Returns the first annotation for the specified type if an annotation
 element with the same name is available,
null
otherwise.
getAnnotation(Class<A>)
- Method in class jdk.jfr.
ValueDescriptor
Returns the first annotation for the specified type if an annotation
 element with the same name is directly present for this value descriptor,
null
otherwise.
getAnnotation(Class<T>)
- Method in class java.lang.
Module
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in class java.lang.reflect.
AccessibleObject
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in interface java.lang.reflect.
AnnotatedElement
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in interface java.lang.reflect.
AnnotatedType
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in class java.lang.reflect.
Constructor
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in class java.lang.reflect.
Executable
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in class java.lang.reflect.
Field
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in class java.lang.reflect.
Method
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in class java.lang.reflect.
Parameter
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotation(Class<T>)
- Method in class java.lang.reflect.
RecordComponent
Returns this element's annotation for the specified type if
 such an annotation is
present
, else null.
getAnnotationElements()
- Method in class jdk.jfr.
AnnotationElement
Returns an immutable list of annotation elements for this
AnnotationElement
.
getAnnotationElements()
- Method in class jdk.jfr.
EventType
Returns an immutable list of annotation elements for this event type.
getAnnotationElements()
- Method in class jdk.jfr.
SettingDescriptor
Returns an immutable list of annotation elements for this value
 descriptor.
getAnnotationElements()
- Method in class jdk.jfr.
ValueDescriptor
Returns an immutable list of annotation elements for this value
 descriptor.
getAnnotationMirrors()
- Method in interface javax.lang.model.
AnnotatedConstruct
Returns the annotations that are
directly present
on
 this construct.
getAnnotationMirrors()
- Method in interface javax.lang.model.element.
Element
Returns the annotations that are
directly present
on
 this construct.
getAnnotationMirrors()
- Method in interface javax.lang.model.type.
TypeMirror
Returns the annotations that are
directly present
on
 this construct.
getAnnotations()
- Method in interface com.sun.source.tree.
AnnotatedTypeTree
Returns the annotations associated with this type expression.
getAnnotations()
- Method in interface com.sun.source.tree.
ModifiersTree
Returns the annotations in this modifiers tree.
getAnnotations()
- Method in interface com.sun.source.tree.
ModuleTree
Returns the annotations associated with this module declaration.
getAnnotations()
- Method in interface com.sun.source.tree.
NewArrayTree
Returns the annotations on the base type.
getAnnotations()
- Method in interface com.sun.source.tree.
PackageTree
Returns the annotations associated with this package declaration.
getAnnotations()
- Method in interface com.sun.source.tree.
TypeParameterTree
Returns annotations on the type parameter declaration.
getAnnotations()
- Method in class java.lang.
Class
Returns annotations that are
present
on this element.
getAnnotations()
- Method in class java.lang.
Module
Returns annotations that are
present
on this element.
getAnnotations()
- Method in class java.lang.
Package
Returns annotations that are
present
on this element.
getAnnotations()
- Method in class java.lang.reflect.
AccessibleObject
Returns annotations that are
present
on this element.
getAnnotations()
- Method in interface java.lang.reflect.
AnnotatedElement
Returns annotations that are
present
on this element.
getAnnotations()
- Method in interface java.lang.reflect.
AnnotatedType
Returns annotations that are
present
on this element.
getAnnotations()
- Method in class java.lang.reflect.
Parameter
Returns annotations that are
present
on this element.
getAnnotations()
- Method in class java.lang.reflect.
RecordComponent
Returns annotations that are
present
on this element.
getAnnotationsByType(Class<A>)
- Method in class java.lang.
Class
Returns annotations that are
associated
with this element.
getAnnotationsByType(Class<A>)
- Method in class java.lang.
Package
Returns annotations that are
associated
with this element.
getAnnotationsByType(Class<A>)
- Method in interface javax.lang.model.
AnnotatedConstruct
Returns annotations that are
associated
with this construct.
getAnnotationsByType(Class<A>)
- Method in interface javax.lang.model.element.
Element
Returns annotations that are
associated
with this construct.
getAnnotationsByType(Class<A>)
- Method in interface javax.lang.model.type.
TypeMirror
Returns annotations that are
associated
with this construct.
getAnnotationsByType(Class<T>)
- Method in class java.lang.reflect.
AccessibleObject
Returns annotations that are
associated
with this element.
getAnnotationsByType(Class<T>)
- Method in interface java.lang.reflect.
AnnotatedElement
Returns annotations that are
associated
with this element.
getAnnotationsByType(Class<T>)
- Method in class java.lang.reflect.
Executable
Returns annotations that are
associated
with this element.
getAnnotationsByType(Class<T>)
- Method in class java.lang.reflect.
Field
Returns annotations that are
associated
with this element.
getAnnotationsByType(Class<T>)
- Method in class java.lang.reflect.
Parameter
Returns annotations that are
associated
with this element.
getAnnotationType()
- Method in interface com.sun.source.tree.
AnnotationTree
Returns the annotation type.
getAnnotationType()
- Method in interface javax.lang.model.element.
AnnotationMirror
Returns the type of this annotation.
getAnonymityState()
- Method in interface org.ietf.jgss.
GSSContext
Determines if the context initiator is
 anonymously authenticated to the context acceptor.
getAnonymousLogger()
- Static method in class java.util.logging.
Logger
Create an anonymous Logger.
getAnonymousLogger(String)
- Static method in class java.util.logging.
Logger
Create an anonymous Logger.
getAntiAliasingHint()
- Method in class java.awt.font.
FontRenderContext
Return the text anti-aliasing rendering mode hint used in this
FontRenderContext
.
getAppConfigurationEntry(String)
- Method in class com.sun.security.auth.login.
ConfigFile
Retrieve an entry from the
Configuration
using an application
 name as an index.
getAppConfigurationEntry(String)
- Method in class javax.security.auth.login.
Configuration
Retrieve the AppConfigurationEntries for the specified
name
from this Configuration.
getApplet(String)
- Method in interface java.applet.
AppletContext
Deprecated.
Finds and returns the applet in the document represented by this applet
 context with the given name.
getAppletContext()
- Method in class java.applet.
Applet
Deprecated.
Determines this applet's context, which allows the applet to query and
 affect the environment in which it runs.
getAppletContext()
- Method in interface java.applet.
AppletStub
Deprecated.
Returns the applet's context.
getAppletInfo()
- Method in class java.applet.
Applet
Deprecated.
Returns information about this applet.
getApplets()
- Method in interface java.applet.
AppletContext
Deprecated.
Finds all the applets in the document represented by this applet context.
getApplets()
- Method in interface org.w3c.dom.html.
HTMLDocument
A collection of all the
OBJECT
elements that include
 applets and
APPLET
( deprecated ) elements in a document.
getApplicationBufferSize()
- Method in interface javax.net.ssl.
SSLSession
Gets the current size of the largest application data that is
 expected when using this session.
getApplicationData()
- Method in class org.ietf.jgss.
ChannelBinding
Get the application specified data for this channel binding.
getApplicationProtocol()
- Method in class javax.net.ssl.
SSLEngine
Returns the most recent application protocol value negotiated for this
 connection.
getApplicationProtocol()
- Method in class javax.net.ssl.
SSLSocket
Returns the most recent application protocol value negotiated for this
 connection.
getApplicationProtocols()
- Method in class javax.net.ssl.
SSLParameters
Returns a prioritized array of application-layer protocol names that
 can be negotiated over the SSL/TLS/DTLS protocols.
getApproveButton(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the approve button.
getApproveButtonMnemonic()
- Method in class javax.swing.
JFileChooser
Returns the approve button's mnemonic.
getApproveButtonMnemonic(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the approve button mnemonic.
getApproveButtonText()
- Method in class javax.swing.
JFileChooser
Returns the text used in the
ApproveButton
in the
FileChooserUI
.
getApproveButtonText(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns approve button text.
getApproveButtonText(JFileChooser)
- Method in class javax.swing.plaf.
FileChooserUI
Returns approve button text.
getApproveButtonText(JFileChooser)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getApproveButtonText
method on each UI handled by this object.
getApproveButtonToolTipText()
- Method in class javax.swing.
JFileChooser
Returns the tooltip text used in the
ApproveButton
.
getApproveButtonToolTipText(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the approve button tool tip.
getApproveSelectionAction()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns an approve selection action.
getArch()
- Method in interface java.lang.management.
OperatingSystemMXBean
Returns the operating system architecture.
getArcHeight()
- Method in class java.awt.geom.
RoundRectangle2D.Double
Gets the height of the arc that rounds off the corners.
getArcHeight()
- Method in class java.awt.geom.
RoundRectangle2D.Float
Gets the height of the arc that rounds off the corners.
getArcHeight()
- Method in class java.awt.geom.
RoundRectangle2D
Gets the height of the arc that rounds off the corners.
getArchive()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Comma-separated archive list.
getArchive()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Space-separated list of archives.
getArcType()
- Method in class java.awt.geom.
Arc2D
Returns the arc closure type of the arc:
Arc2D.OPEN
,
Arc2D.CHORD
, or
Arc2D.PIE
.
getArcWidth()
- Method in class java.awt.geom.
RoundRectangle2D.Double
Gets the width of the arc that rounds off the corners.
getArcWidth()
- Method in class java.awt.geom.
RoundRectangle2D.Float
Gets the width of the arc that rounds off the corners.
getArcWidth()
- Method in class java.awt.geom.
RoundRectangle2D
Gets the width of the arc that rounds off the corners.
getAreaOfInterest()
- Method in class java.awt.image.renderable.
RenderContext
Gets the ares of interest currently contained in the
 RenderContext.
getAreas()
- Method in interface org.w3c.dom.html.
HTMLMapElement
The list of areas defined for the image map.
getArgument()
- Method in exception class javax.lang.model.element.
UnknownAnnotationValueException
Returns the additional argument.
getArgument()
- Method in exception class javax.lang.model.element.
UnknownDirectiveException
Returns the additional argument.
getArgument()
- Method in exception class javax.lang.model.element.
UnknownElementException
Returns the additional argument.
getArgument()
- Method in exception class javax.lang.model.type.
UnknownTypeException
Returns the additional argument.
getArgumentClass()
- Method in exception class java.util.
IllegalFormatConversionException
Returns the class of the mismatched argument.
getArgumentCount()
- Method in interface jdk.javadoc.doclet.
Doclet.Option
Returns the number of arguments, this option will consume.
getArguments()
- Method in interface com.sun.source.tree.
AnnotationTree
Returns the arguments, if any, for the annotation.
getArguments()
- Method in interface com.sun.source.tree.
MethodInvocationTree
Returns the arguments for the method invocation.
getArguments()
- Method in interface com.sun.source.tree.
NewClassTree
Returns the arguments for the constructor to be invoked.
getArguments()
- Method in class java.beans.
Statement
Returns the arguments for the method to invoke.
getArguments()
- Method in interface jdk.dynalink.linker.
LinkRequest
Returns the arguments for the invocation being linked.
getArguments()
- Method in class jdk.dynalink.linker.support.
SimpleLinkRequest
getArgumentValues()
- Method in interface com.sun.jdi.
StackFrame
Returns the values of all arguments in this frame.
getArray()
- Method in interface java.sql.
Array
Retrieves the contents of the SQL
ARRAY
value designated
 by this
Array
object in the form of an array in the Java
 programming language.
getArray()
- Method in class javax.sql.rowset.serial.
SerialArray
Returns a new array that is a copy of this
SerialArray
object.
getArray()
- Method in class javax.swing.text.
DefaultStyledDocument.ElementSpec
Gets the array of characters.
getArray()
- Method in class javax.swing.text.
GapContent
Access to the array.
getArray(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
ARRAY
parameter as an
Array
object in the Java programming language.
getArray(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as an
Array
object
 in the Java programming language.
getArray(long, int)
- Method in interface java.sql.
Array
Retrieves a slice of the SQL
ARRAY
value designated by this
Array
object, beginning with the
 specified
index
and containing up to
count
successive elements of the SQL array.
getArray(long, int)
- Method in class javax.sql.rowset.serial.
SerialArray
Returns a new array that is a copy of a slice
 of this
SerialArray
object, starting with the
 element at the given index and containing the given number
 of consecutive elements.
getArray(long, int, Map<String, Class<?>>)
- Method in interface java.sql.
Array
Retrieves a slice of the SQL
ARRAY
value
 designated by this
Array
object, beginning with the specified
index
and containing up to
count
successive elements of the SQL array.
getArray(long, int, Map<String, Class<?>>)
- Method in class javax.sql.rowset.serial.
SerialArray
Returns a new array that is a copy of a slice
 of this
SerialArray
object, starting with the
 element at the given index and containing the given number
 of consecutive elements.
getArray(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
ARRAY
parameter as an
Array
object in the Java programming language.
getArray(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as an
Array
object
 in the Java programming language.
getArray(Map<String, Class<?>>)
- Method in interface java.sql.
Array
Retrieves the contents of the SQL
ARRAY
value designated by this
Array
object.
getArray(Map<String, Class<?>>)
- Method in class javax.sql.rowset.serial.
SerialArray
Returns a new array that is a copy of this
SerialArray
object, using the given type map for the custom
 mapping of each element when the elements are SQL UDTs.
getArrayLength()
- Method in class javax.swing.text.
GapContent
Get the length of the allocated array.
getArrayType(TypeMirror)
- Method in interface javax.lang.model.util.
Types
Returns an array type with the specified component type.
getArrayType(OpenType<E>)
- Static method in class javax.management.openmbean.
ArrayType
Create an
ArrayType
instance in a type-safe manner.
getArrivedParties()
- Method in class java.util.concurrent.
Phaser
Returns the number of registered parties that have arrived at
 the current phase of this phaser.
getAsBoolean()
- Method in interface java.util.function.
BooleanSupplier
Gets a result.
getAsBytes()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns the data as an uninterpreted array of
byte
s.
getAscent()
- Method in class java.awt.font.
GraphicAttribute
Returns the ascent of this
GraphicAttribute
.
getAscent()
- Method in class java.awt.font.
ImageGraphicAttribute
Returns the ascent of this
ImageGraphicAttribute
.
getAscent()
- Method in class java.awt.font.
LineMetrics
Returns the ascent of the text.
getAscent()
- Method in class java.awt.font.
ShapeGraphicAttribute
Returns the ascent of this
ShapeGraphicAttribute
.
getAscent()
- Method in class java.awt.font.
TextLayout
Returns the ascent of this
TextLayout
.
getAscent()
- Method in class java.awt.
FontMetrics
Determines the
font ascent
of the
Font
described by this
FontMetrics
object.
getAscent(GlyphView)
- Method in class javax.swing.text.
GlyphView.GlyphPainter
Returns of the ascent.
getAsChars()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns
TIFFTag.TIFF_SHORT
data as an array of
char
s (unsigned 16-bit integers).
getAsciiName()
- Method in class javax.net.ssl.
SNIHostName
Returns the
StandardCharsets.US_ASCII
-compliant hostname of
 this
SNIHostName
object.
getAsciiStream()
- Method in interface java.sql.
Clob
Retrieves the
CLOB
value designated by this
Clob
object as an ascii stream.
getAsciiStream()
- Method in class javax.sql.rowset.serial.
SerialClob
Retrieves the
CLOB
value designated by this
SerialClob
object as an ascii stream.
getAsciiStream(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a stream of ASCII characters.
getAsciiStream(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a stream of
 ASCII characters.
getAsDouble()
- Method in interface java.util.function.
DoubleSupplier
Gets a result.
getAsDouble()
- Method in class java.util.
OptionalDouble
If a value is present, returns the value, otherwise throws
NoSuchElementException
.
getAsDouble(int)
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns data in any format as a
double
.
getAsDoubles()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns
TIFFTag.TIFF_DOUBLE
data as an array of
double
s (64-bit floating-point values).
getAsFloat(int)
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns data in any format as a
float
.
getAsFloats()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns
TIFFTag.TIFF_FLOAT
data as an array of
float
s (32-bit floating-point values).
getAsInt()
- Method in interface java.util.function.
IntSupplier
Gets a result.
getAsInt()
- Method in class java.util.
OptionalInt
If a value is present, returns the value, otherwise throws
NoSuchElementException
.
getAsInt(int)
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns data in any format as an
int
.
getAsInts()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns
TIFFTag.TIFF_SLONG
data as an array of
int
s (signed 32-bit integers).
getAsLong()
- Method in interface java.util.function.
LongSupplier
Gets a result.
getAsLong()
- Method in class java.util.
OptionalLong
If a value is present, returns the value, otherwise throws
NoSuchElementException
.
getAsLong(int)
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns data in any format as a
long
.
getAsLongs()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns
TIFFTag.TIFF_LONG
or
TIFF_IFD_POINTER
data as an array of
long
s (signed 64-bit integers).
getAsMetadata()
- Method in class javax.imageio.plugins.tiff.
TIFFDirectory
Converts the directory to a metadata object.
getAsNativeNode()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns the
TIFFField
as a node named either
"TIFFField"
or
"TIFFIFD"
as described in the
 TIFF native image metadata specification.
getAspectRatio(int)
- Method in class javax.imageio.
ImageReader
Returns the aspect ratio of the given image (that is, its width
 divided by its height) as a
float
.
getAsRational(int)
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns a TIFFTag.TIFF_RATIONAL data item as a two-element array
 of ints.
getAsRationals()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns
TIFFTag.TIFF_RATIONAL
data as an array of
 2-element arrays of
long
s.
getAsShorts()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns
TIFFTag.TIFF_SSHORT
data as an array of
short
s (signed 16-bit integers).
getAssociatedStylesheet(Source, String, String, String)
- Method in class javax.xml.transform.
TransformerFactory
Get the stylesheet specification(s) associated with the
 XML
Source
document via the
xml-stylesheet processing instruction
that match the given criteria.
getAsSRational(int)
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns a
TIFFTag.TIFF_SRATIONAL
data item as a
 two-element array of
int
s.
getAsSRationals()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns
TIFFTag.TIFF_SRATIONAL
data as an array of
 2-element arrays of
int
s.
getAsString(int)
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns a
TIFFTag.TIFF_ASCII
value as a
String
.
getAsText()
- Method in interface java.beans.
PropertyEditor
Gets the property value as text.
getAsText()
- Method in class java.beans.
PropertyEditorSupport
Gets the property value as a string suitable for presentation
 to a human to edit.
getAsTree(String)
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an XML DOM
Node
object that represents the
 root of a tree of metadata contained within this object
 according to the conventions defined by a given metadata
 format.
getAsync()
- Method in interface org.w3c.dom.ls.
LSParser
true
if the
LSParser
is asynchronous,
false
if it is synchronous.
getAsynchronousLoadPriority()
- Method in class javax.swing.text.
AbstractDocument
Gets the asynchronous loading priority.
getAsyncMode()
- Method in class java.util.concurrent.
ForkJoinPool
Returns
true
if this pool uses local first-in-first-out
 scheduling mode for forked tasks that are never joined.
getAtIndex(int, int)
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the String at a given index.
getAtIndex(int, int)
- Method in interface javax.accessibility.
AccessibleText
Returns the
String
at a given index.
getAtIndex(int, int)
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the String at a given index.
getAtIndex(int, int)
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the String at a given index.
getAtIndex(int, int)
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Returns the
String
at a given
index
.
getAtIndex(int, int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the String at a given index.
getAtIndex(int, int)
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the String at a given index.
getAtIndex(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the String at a given index.
getAtIndex(AddressLayout, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads an address from this segment at the given at the given index, scaled by the given layout size.
getAtIndex(ValueLayout.OfBoolean, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a boolean from this segment at the given index, scaled by the given layout size.
getAtIndex(ValueLayout.OfByte, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a byte from this segment at the given index, scaled by the given layout size.
getAtIndex(ValueLayout.OfChar, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a char from this segment at the given index, scaled by the given layout size.
getAtIndex(ValueLayout.OfDouble, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a double from this segment at the given index, scaled by the given layout size.
getAtIndex(ValueLayout.OfFloat, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a float from this segment at the given index, scaled by the given layout size.
getAtIndex(ValueLayout.OfInt, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads an int from this segment at the given index, scaled by the given layout size.
getAtIndex(ValueLayout.OfLong, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a long from this segment at the given index, scaled by the given layout size.
getAtIndex(ValueLayout.OfShort, long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a short from this segment at the given index, scaled by the given layout size.
getATR()
- Method in class javax.smartcardio.
Card
Returns the ATR of this card.
getAttrChange()
- Method in interface org.w3c.dom.events.
MutationEvent
attrChange
indicates the type of change which triggered
 the DOMAttrModified event.
getAttribute()
- Method in class javax.naming.directory.
ModificationItem
Retrieves the attribute associated with this modification item.
getAttribute(Class<T>)
- Method in interface javax.print.
PrintService
Gets the value of the single specified service attribute.
getAttribute(Object)
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the value of an attribute.
getAttribute(Object)
- Method in interface javax.swing.text.
AttributeSet
Fetches the value of the given attribute.
getAttribute(Object)
- Method in class javax.swing.text.
SimpleAttributeSet
Gets the value of an attribute.
getAttribute(Object)
- Method in class javax.swing.text.
StyleContext.NamedStyle
Gets the value of an attribute.
getAttribute(Object)
- Method in class javax.swing.text.
StyleContext.SmallAttributeSet
Gets the value of an attribute.
getAttribute(String)
- Method in class com.sun.net.httpserver.
HttpExchange
Filter
modules may store arbitrary objects with
HttpExchange
instances as an out-of-band communication mechanism.
getAttribute(String)
- Method in class java.nio.file.
FileStore
Reads the value of a file store attribute.
getAttribute(String)
- Method in class java.security.
Provider.Service
Return the value of the specified attribute or
null
if this
 attribute is not set for this Service.
getAttribute(String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Retrieves an attribute value by name.
getAttribute(String)
- Method in interface javax.management.
DynamicMBean
Obtain the value of a specific attribute of the Dynamic MBean.
getAttribute(String)
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns a ModelMBeanAttributeInfo requested by name.
getAttribute(String)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
getAttribute(String)
- Method in class javax.management.modelmbean.
RequiredModelMBean
Returns the value of a specific attribute defined for this
 ModelMBean.
getAttribute(String)
- Method in class javax.management.
StandardMBean
getAttribute(String)
- Method in interface javax.script.
ScriptContext
Retrieves the value of the attribute with the given name in
 the scope occurring earliest in the search order.
getAttribute(String)
- Method in class javax.script.
SimpleScriptContext
Retrieves the value of the attribute with the given name in
 the scope occurring earliest in the search order.
getAttribute(String)
- Static method in class javax.swing.text.html.
CSS
Translates a string to a
CSS.Attribute
object.
getAttribute(String)
- Method in class javax.swing.text.html.parser.
Element
Get an attribute by name.
getAttribute(String)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Allows the user to retrieve specific attributes on the underlying
 implementation.
getAttribute(String)
- Method in class javax.xml.transform.
TransformerFactory
Allows the user to retrieve specific attributes on the underlying
 implementation.
getAttribute(String)
- Method in interface org.w3c.dom.
Element
Retrieves an attribute value by name.
getAttribute(String, int)
- Method in interface javax.script.
ScriptContext
Gets the value of an attribute in a given scope.
getAttribute(String, int)
- Method in class javax.script.
SimpleScriptContext
Gets the value of an attribute in a given scope.
getAttribute(Path, String, LinkOption...)
- Static method in class java.nio.file.
Files
Reads the value of a file attribute.
getAttribute(AttributedCharacterIterator.Attribute)
- Method in interface java.text.
AttributedCharacterIterator
Returns the value of the named
attribute
for the current character.
getAttribute(ObjectName)
- Method in class javax.management.
AttributeValueExp
Return the value of the given attribute in the named MBean.
getAttribute(ObjectName, String)
- Method in interface javax.management.
MBeanServer
getAttribute(ObjectName, String)
- Method in interface javax.management.
MBeanServerConnection
Gets the value of a specific attribute of a named MBean.
getAttribute(ObjectName, String, Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.getAttribute(ObjectName, String)
.
getAttribute(ObjectName, String, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
getAttribute(ObjectName, String, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
getAttributeByName(QName)
- Method in interface javax.xml.stream.events.
StartElement
Returns the attribute referred to by the qname.
getAttributeByValue(String)
- Method in class javax.swing.text.html.parser.
Element
Get an attribute by value.
getAttributeContext()
- Method in class javax.swing.text.
AbstractDocument
Fetches the context for managing attributes.
getAttributeCount()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the number of attributes that are defined.
getAttributeCount()
- Method in interface javax.swing.text.
AttributeSet
Returns the number of attributes that are defined locally in this set.
getAttributeCount()
- Method in class javax.swing.text.
SimpleAttributeSet
Gets a count of the number of attributes.
getAttributeCount()
- Method in class javax.swing.text.
StyleContext.NamedStyle
Gets the number of attributes that are defined.
getAttributeCount()
- Method in class javax.swing.text.
StyleContext.SmallAttributeSet
Gets the number of attributes that are defined.
getAttributeCount()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getAttributeCount()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the count of attributes on this START_ELEMENT,
 this method is only valid on a START_ELEMENT or ATTRIBUTE.
getAttributeDataType(String, String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns one of the constants starting with
DATATYPE_
, indicating the format and
 interpretation of the value of the given attribute within the
 named element.
getAttributeDataType(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttributeDefaultValue(String, String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the default value of the named attribute, if it is not
 explicitly present within the named element, as a
String
, or
null
if no default value
 is available.
getAttributeDefaultValue(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttributeDefinition()
- Method in interface javax.naming.directory.
Attribute
Retrieves the attribute's schema definition.
getAttributeDefinition()
- Method in class javax.naming.directory.
BasicAttribute
Retrieves this attribute's schema definition.
getAttributeDescription(String, String, Locale)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns a
String
containing a description of the
 named attribute, or
null
.
getAttributeDescription(String, String, Locale)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
Returns a
String
containing a description of the
 named attribute, or
null
.
getAttributeEnumerations(String, String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns an array of
String
s containing the legal
 enumerated values for the given attribute within the named
 element.
getAttributeEnumerations(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttributeID()
- Method in class javax.naming.ldap.
SortKey
Retrieves the attribute ID of the sort key.
getAttributeID()
- Method in class javax.naming.ldap.
SortResponseControl
Retrieves the ID of the attribute that caused the sort to fail.
getAttributeKey(String)
- Static method in class javax.swing.text.html.
HTML
Fetches an attribute constant for a well-known attribute name
 (i.e. one of the attributes in the set {FACE, COMMENT, SIZE,
 COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK,
 WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET,
 SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE,
 USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE,
 TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE,
 STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD,
 ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS,
 DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN,
 COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N,
 FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE,
 MEDIA, ENDTAG}).
getAttributeListMaxLength(String, String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the maximum number of list items that may be used to
 define this attribute.
getAttributeListMaxLength(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttributeListMinLength(String, String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the minimum number of list items that may be used to
 define this attribute.
getAttributeListMinLength(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttributeLocalName(int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getAttributeLocalName(int)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the localName of the attribute at the provided
 index
getAttributeMaxValue(String, String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the maximum legal value for the attribute.
getAttributeMaxValue(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttributeMinValue(String, String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the minimum legal value for the attribute.
getAttributeMinValue(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttributeName()
- Method in class javax.management.
AttributeChangeNotification
Gets the name of the attribute which has changed.
getAttributeName()
- Method in class javax.management.
AttributeValueExp
Returns a string representation of the name of the attribute.
getAttributeName(int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getAttributeName(int)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the qname of the attribute at the provided index
getAttributeNames()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the names of all attributes.
getAttributeNames()
- Method in interface javax.swing.text.
AttributeSet
Returns an enumeration over the names of the attributes that are
 defined locally in the set.
getAttributeNames()
- Method in class javax.swing.text.
SimpleAttributeSet
Gets the names of the attributes in the set.
getAttributeNames()
- Method in class javax.swing.text.
StyleContext.NamedStyle
Gets the names of all attributes.
getAttributeNames()
- Method in class javax.swing.text.
StyleContext.SmallAttributeSet
Gets the names of all attributes.
getAttributeNames(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns an array of
String
s listing the names of
 the attributes that may be associated with the named element.
getAttributeNames(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttributeNamespace(int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getAttributeNamespace(int)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the namespace of the attribute at the provided
 index
getAttributeNode(String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
getAttributeNode(String)
- Method in interface org.w3c.dom.
Element
Retrieves an attribute node by name.
getAttributeNodeNS(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Equivalent to
getAttributeNode(localName)
.
getAttributeNodeNS(String, String)
- Method in interface org.w3c.dom.
Element
Retrieves an
Attr
node by local name and namespace URI.
getAttributeNS(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Equivalent to
getAttribute(localName)
.
getAttributeNS(String, String)
- Method in interface org.w3c.dom.
Element
Retrieves an attribute value by local name and namespace URI.
getAttributePrefix(int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getAttributePrefix(int)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the prefix of this attribute at the
 provided index
getAttributes()
- Method in class com.sun.net.httpserver.
HttpContext
Returns a mutable
Map
, which can be used to pass configuration
 and other data to
Filter
modules and to the context's exchange
 handler.
getAttributes()
- Method in interface com.sun.source.doctree.
SnippetTree
Returns the list of the attributes of the
@snippet
tag.
getAttributes()
- Method in interface com.sun.source.doctree.
StartElementTree
Returns any attributes defined by this element.
getAttributes()
- Method in class java.awt.
Font
Returns a map of font attributes available in this
Font
.
getAttributes()
- Method in class java.net.
JarURLConnection
Return the Attributes object for this connection if the URL
 for it points to a JAR file entry, null otherwise.
getAttributes()
- Method in interface java.security.
KeyStore.Entry
Retrieves the attributes associated with an entry.
getAttributes()
- Method in class java.security.
KeyStore.PrivateKeyEntry
Retrieves the attributes associated with an entry.
getAttributes()
- Method in class java.security.
KeyStore.SecretKeyEntry
Retrieves the attributes associated with an entry.
getAttributes()
- Method in class java.security.
KeyStore.TrustedCertificateEntry
Retrieves the attributes associated with an entry.
getAttributes()
- Method in interface java.sql.
Struct
Produces the ordered values of the attributes of the SQL
 structured type that this
Struct
object represents.
getAttributes()
- Method in interface java.text.
AttributedCharacterIterator
Returns a map with the attributes defined on the current
 character.
getAttributes()
- Method in class java.util.jar.
JarEntry
Returns the
Manifest
Attributes
for this
 entry, or
null
if none.
getAttributes()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns a
NamedNodeMap
containing the attributes of
 this node.
getAttributes()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the attributes of the
MLET
tag.
getAttributes()
- Method in class javax.management.
MBeanInfo
Returns the list of attributes exposed for management.
getAttributes()
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns the list of attributes exposed for management.
getAttributes()
- Method in interface javax.management.openmbean.
OpenMBeanInfo
Returns an array of
OpenMBeanAttributeInfo
instances
 describing each attribute in the open MBean described by this
OpenMBeanInfo
instance.
getAttributes()
- Method in interface javax.management.remote.
JMXConnectorServerMBean
The attributes for this connector server.
getAttributes()
- Method in class javax.management.remote.rmi.
RMIConnectorServer
getAttributes()
- Method in class javax.naming.directory.
SearchResult
Retrieves the attributes in this search result.
getAttributes()
- Method in class javax.naming.spi.
DirStateFactory.Result
Retrieves the attributes to be bound.
getAttributes()
- Method in interface javax.print.
Doc
Obtains the set of printing attributes for this doc object.
getAttributes()
- Method in interface javax.print.
DocPrintJob
Obtains this Print Job's set of printing attributes.
getAttributes()
- Method in class javax.print.event.
PrintJobAttributeEvent
Determine the printing attributes that changed and their new values.
getAttributes()
- Method in class javax.print.event.
PrintServiceAttributeEvent
Determine the printing service attributes that changed and their new
 values.
getAttributes()
- Method in interface javax.print.
PrintService
Obtains this print service's set of printer description attributes giving
 this Print Service's status.
getAttributes()
- Method in class javax.print.
SimpleDoc
Obtains the set of printing attributes for this doc object.
getAttributes()
- Method in class javax.sql.rowset.serial.
SerialStruct
Retrieves an array of
Object
values containing the
 attributes of the SQL structured type that this
SerialStruct
object represents.
getAttributes()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the attributes for the element.
getAttributes()
- Method in class javax.swing.text.
DefaultStyledDocument.ElementSpec
Gets the element attributes.
getAttributes()
- Method in interface javax.swing.text.
Element
Fetches the collection of attributes this element contains.
getAttributes()
- Method in class javax.swing.text.html.
BlockView
Fetches the attributes to use when rendering.
getAttributes()
- Method in class javax.swing.text.html.
HTMLDocument.Iterator
Return the attributes for this tag.
getAttributes()
- Method in class javax.swing.text.html.
ImageView
Fetches the attributes to use when rendering.
getAttributes()
- Method in class javax.swing.text.html.
InlineView
Fetches the attributes to use when rendering.
getAttributes()
- Method in class javax.swing.text.html.
Option
Fetch the attributes associated with this option.
getAttributes()
- Method in class javax.swing.text.html.
ParagraphView
Fetches the attributes to use when rendering.
getAttributes()
- Method in class javax.swing.text.html.parser.
Element
Get the attributes.
getAttributes()
- Method in class javax.swing.text.html.parser.
Parser
Returns attributes for the current tag.
getAttributes()
- Method in class javax.swing.text.
View
Fetches the attributes to use when rendering.
getAttributes()
- Method in interface javax.xml.stream.events.
StartElement
Returns an Iterator of non-namespace attributes declared on this START_ELEMENT.
getAttributes()
- Method in interface org.w3c.dom.
Node
A
NamedNodeMap
containing the attributes of this node (if
 it is an
Element
) or
null
otherwise.
getAttributes(String)
- Method in class java.security.
KeyStore
Retrieves the attributes associated with the given alias.
getAttributes(String)
- Method in class java.util.jar.
Manifest
Returns the Attributes for the specified entry name.
getAttributes(String)
- Method in interface javax.naming.directory.
DirContext
Retrieves all of the attributes associated with a named object.
getAttributes(String)
- Method in class javax.naming.directory.
InitialDirContext
getAttributes(String[])
- Method in interface javax.management.
DynamicMBean
Get the values of several attributes of the Dynamic MBean.
getAttributes(String[])
- Method in class javax.management.modelmbean.
RequiredModelMBean
Returns the values of several attributes in the ModelMBean.
getAttributes(String[])
- Method in class javax.management.
StandardMBean
getAttributes(String, String[])
- Method in interface javax.naming.directory.
DirContext
Retrieves selected attributes associated with a named object.
getAttributes(String, String[])
- Method in class javax.naming.directory.
InitialDirContext
getAttributes(String, String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the given attribute of the given type
 for a user-defined type (UDT) that is available in the given schema
 and catalog.
getAttributes(Map<String, Class<?>>)
- Method in interface java.sql.
Struct
Produces the ordered values of the attributes of the SQL
 structured type that this
Struct
object represents.
getAttributes(Map<String, Class<?>>)
- Method in class javax.sql.rowset.serial.
SerialStruct
Retrieves the attributes for the SQL structured type that
 this
SerialStruct
represents as an array of
Object
values, using the given type map for
 custom mapping if appropriate.
getAttributes(ObjectName, String[])
- Method in interface javax.management.
MBeanServer
getAttributes(ObjectName, String[])
- Method in interface javax.management.
MBeanServerConnection
Retrieves the values of several attributes of a named MBean.
getAttributes(ObjectName, String[], Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.getAttributes(ObjectName, String[])
.
getAttributes(ObjectName, String[], Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
getAttributes(ObjectName, String[], Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
getAttributes(Name)
- Method in interface javax.naming.directory.
DirContext
Retrieves all of the attributes associated with a named object.
getAttributes(Name)
- Method in class javax.naming.directory.
InitialDirContext
getAttributes(Name, String[])
- Method in interface javax.naming.directory.
DirContext
Retrieves selected attributes associated with a named object.
getAttributes(Name, String[])
- Method in class javax.naming.directory.
InitialDirContext
getAttributesScope(String)
- Method in interface javax.script.
ScriptContext
Get the lowest scope in which an attribute is defined.
getAttributesScope(String)
- Method in class javax.script.
SimpleScriptContext
Get the lowest scope in which an attribute is defined.
getAttributeSyntaxDefinition()
- Method in interface javax.naming.directory.
Attribute
Retrieves the syntax definition associated with the attribute.
getAttributeSyntaxDefinition()
- Method in class javax.naming.directory.
BasicAttribute
Retrieves the syntax definition associated with this attribute.
getAttributeType()
- Method in class javax.management.
AttributeChangeNotification
Gets the type of the attribute which has changed.
getAttributeType(int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getAttributeType(int)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the XML type of the attribute at the provided
 index
getAttributeTypeInfo(int)
- Method in class javax.xml.validation.
TypeInfoProvider
Returns the immutable
TypeInfo
object for the specified
 attribute of the current element.
getAttributeValue(int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getAttributeValue(int)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the value of the attribute at the
 index
getAttributeValue(String, String)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getAttributeValue(String, String)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the normalized attribute value of the
 attribute with the namespace and localName
 If the namespaceURI is null the namespace
 is not checked for equality
getAttributeValueType(String, String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns one of the constants starting with
VALUE_
,
 indicating whether the values of the given attribute within the
 named element are arbitrary, constrained to lie within a
 specified range, constrained to be one of a set of enumerated
 values, or are a whitespace-separated list of arbitrary values.
getAttributeValueType(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getAttrName()
- Method in interface org.w3c.dom.events.
MutationEvent
attrName
indicates the name of the changed
Attr
node in a DOMAttrModified event.
getAudioActionMap()
- Method in class javax.swing.plaf.basic.
BasicLookAndFeel
Returns an
ActionMap
containing the audio actions
 for this look and feel.
getAudioClip(URL)
- Method in class java.applet.
Applet
Deprecated.
Returns the
AudioClip
object specified by the
URL
argument.
getAudioClip(URL)
- Method in interface java.applet.
AppletContext
Deprecated.
Creates an audio clip.
getAudioClip(URL, String)
- Method in class java.applet.
Applet
Deprecated.
Returns the
AudioClip
object specified by the
URL
and
name
arguments.
getAudioFileFormat(File)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the audio file format of the specified
File
.
getAudioFileFormat(File)
- Method in class javax.sound.sampled.spi.
AudioFileReader
Obtains the audio file format of the
File
provided.
getAudioFileFormat(InputStream)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the audio file format of the provided input stream.
getAudioFileFormat(InputStream)
- Method in class javax.sound.sampled.spi.
AudioFileReader
Obtains the audio file format of the input stream provided.
getAudioFileFormat(URL)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the audio file format of the specified
URL
.
getAudioFileFormat(URL)
- Method in class javax.sound.sampled.spi.
AudioFileReader
Obtains the audio file format of the
URL
provided.
getAudioFileTypes()
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the file types for which file writing support is provided by the
 system.
getAudioFileTypes()
- Method in class javax.sound.sampled.spi.
AudioFileWriter
Obtains the file types for which file writing support is provided by this
 audio file writer.
getAudioFileTypes(AudioInputStream)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the file types that the system can write from the audio input
 stream specified.
getAudioFileTypes(AudioInputStream)
- Method in class javax.sound.sampled.spi.
AudioFileWriter
Obtains the file types that this audio file writer can write from the
 audio input stream specified.
getAudioInputStream(File)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains an audio input stream from the provided
File
.
getAudioInputStream(File)
- Method in class javax.sound.sampled.spi.
AudioFileReader
Obtains an audio input stream from the
File
provided.
getAudioInputStream(InputStream)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains an audio input stream from the provided input stream.
getAudioInputStream(InputStream)
- Method in class javax.sound.sampled.spi.
AudioFileReader
Obtains an audio input stream from the input stream provided.
getAudioInputStream(URL)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains an audio input stream from the
URL
provided.
getAudioInputStream(URL)
- Method in class javax.sound.sampled.spi.
AudioFileReader
Obtains an audio input stream from the
URL
provided.
getAudioInputStream(AudioFormat.Encoding, AudioInputStream)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains an audio input stream of the indicated encoding, by converting
 the provided audio input stream.
getAudioInputStream(AudioFormat.Encoding, AudioInputStream)
- Method in class javax.sound.sampled.spi.
FormatConversionProvider
Obtains an audio input stream with the specified encoding from the given
 audio input stream.
getAudioInputStream(AudioFormat, AudioInputStream)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains an audio input stream of the indicated format, by converting the
 provided audio input stream.
getAudioInputStream(AudioFormat, AudioInputStream)
- Method in class javax.sound.sampled.spi.
FormatConversionProvider
Obtains an audio input stream with the specified format from the given
 audio input stream.
getAuthenticationID()
- Method in class javax.security.sasl.
AuthorizeCallback
Returns the authentication id to check.
getAuthenticator()
- Method in class com.sun.net.httpserver.
HttpContext
Returns the currently set
Authenticator
for this context
 if one exists.
getAuthority()
- Method in class java.net.
URI
Returns the decoded authority component of this URI.
getAuthority()
- Method in class java.net.
URL
Gets the authority part of this
URL
.
getAuthorityKeyIdentifier()
- Method in class java.security.cert.
X509CertSelector
Returns the authorityKeyIdentifier criterion.
getAuthorityName()
- Method in exception class java.security.cert.
CertificateRevokedException
Returns the name of the authority that signed the certificate's
 revocation status information.
getAuthorizationID()
- Method in class javax.security.sasl.
AuthorizeCallback
Returns the authorization id to check.
getAuthorizationID()
- Method in interface javax.security.sasl.
SaslServer
Reports the authorization ID in effect for the client of this
 session.
getAuthorizedID()
- Method in class javax.security.sasl.
AuthorizeCallback
Returns the id of the authorized user.
getAuthTime()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the time that the client was authenticated.
getAutoCommit()
- Method in interface java.sql.
Connection
Retrieves the current auto-commit mode for this
Connection
object.
getAutoCommit()
- Method in interface javax.sql.rowset.
JdbcRowSet
Each
JdbcRowSet
contains a
Connection
object from
 the original
ResultSet
or JDBC properties passed to it.
getAutoCreateColumnsFromModel()
- Method in class javax.swing.
JTable
Determines whether the table will create default columns from the model.
getAutoCreateContainerGaps()
- Method in class javax.swing.
GroupLayout
Returns
true
if gaps between the container and components that
 border the container are automatically created.
getAutoCreateGaps()
- Method in class javax.swing.
GroupLayout
Returns
true
if gaps between components are automatically
 created.
getAutoCreateRowSorter()
- Method in class javax.swing.
JTable
Returns
true
if whenever the model changes, a new
RowSorter
should be created and installed
 as the table's sorter; otherwise, returns
false
.
getAutoDelay()
- Method in class java.awt.
Robot
Returns the number of milliseconds this Robot sleeps after generating an event.
getAutoLoadingErrors()
- Method in class jdk.dynalink.
DynamicLinkerFactory
Returns a list of
ServiceConfigurationError
s that were
 encountered while loading automatically discovered linkers during the
 last invocation of
DynamicLinkerFactory.createLinker()
.
getAutoResizeMode()
- Method in class javax.swing.
JTable
Returns the auto resize mode of the table.
getAutoscrollInsets()
- Method in interface java.awt.dnd.
Autoscroll
This method returns the
Insets
describing
 the autoscrolling region or border relative
 to the geometry of the implementing Component.
getAutoscrolls()
- Method in class javax.swing.
JComponent
Gets the
autoscrolls
property.
getAuxiliaryLookAndFeels()
- Static method in class javax.swing.
UIManager
Returns the list of auxiliary look and feels (can be
null
).
getAvailableAcceleratedMemory()
- Method in class java.awt.
GraphicsDevice
This method returns the number of bytes available in
 accelerated memory on this device.
getAvailableAttributes()
- Method in class java.awt.
Font
Returns the keys of all the attributes supported by this
Font
.
getAvailableCalendarTypes()
- Static method in class java.util.
Calendar
Returns an unmodifiable
Set
containing all calendar types
 supported by
Calendar
in the runtime environment.
getAvailableChronologies()
- Static method in interface java.time.chrono.
Chronology
Returns the available chronologies.
getAvailableCurrencies()
- Static method in class java.util.
Currency
Gets the set of available currencies.
getAvailableDataFlavors()
- Method in class java.awt.datatransfer.
Clipboard
Returns an array of
DataFlavor
s in which the current contents of
 this clipboard can be provided.
getAvailableFontFamilyNames()
- Method in class java.awt.
GraphicsEnvironment
Returns an array containing the names of all font families in this
GraphicsEnvironment
localized for the default locale,
 as returned by
Locale.getDefault()
.
getAvailableFontFamilyNames(Locale)
- Method in class java.awt.
GraphicsEnvironment
Returns an array containing the names of all font families in this
GraphicsEnvironment
localized for the specified locale.
getAvailableIDs()
- Static method in class java.util.
TimeZone
Gets all the available IDs supported.
getAvailableIDs(int)
- Static method in class java.util.
TimeZone
Gets the available IDs according to the given time zone offset in milliseconds.
getAvailableInstruments()
- Method in interface javax.sound.midi.
Synthesizer
Obtains a list of instruments that come with the synthesizer.
getAvailableLocales()
- Method in interface java.awt.im.spi.
InputMethodDescriptor
Returns the locales supported by the corresponding input method.
getAvailableLocales()
- Static method in class java.text.
BreakIterator
Returns an array of all locales for which the
get*Instance
methods of this class can return
 localized instances.
getAvailableLocales()
- Static method in class java.text.
Collator
Returns an array of all locales for which the
getInstance
methods of this class can return
 localized instances.
getAvailableLocales()
- Static method in class java.text.
DateFormat
Returns an array of all locales for which the
get*Instance
methods of this class can return
 localized instances.
getAvailableLocales()
- Static method in class java.text.
DateFormatSymbols
Returns an array of all locales for which the
getInstance
methods of this class can return
 localized instances.
getAvailableLocales()
- Static method in class java.text.
DecimalFormatSymbols
Returns an array of all locales for which the
getInstance
methods of this class can return
 localized instances.
getAvailableLocales()
- Static method in class java.text.
NumberFormat
Returns an array of all locales for which the
get*Instance
methods of this class can return
 localized instances.
getAvailableLocales()
- Static method in class java.time.format.
DecimalStyle
Lists all the locales that are supported.
getAvailableLocales()
- Static method in class java.util.
Calendar
Returns an array of all locales for which the
getInstance
methods of this class can return localized instances.
getAvailableLocales()
- Static method in class java.util.
Locale
Returns an array of installed locales.
getAvailableLocales()
- Method in class java.util.spi.
LocaleServiceProvider
Returns an array of all locales for which this locale service provider
 can provide localized objects or names.
getAvailableLocales()
- Method in class javax.imageio.
ImageReader
Returns an array of
Locale
s that may be used to
 localize warning listeners and compression settings.
getAvailableLocales()
- Method in class javax.imageio.
ImageWriter
Returns an array of
Locale
s that may be used to
 localize warning listeners and compression settings.
getAvailableProcessors()
- Method in interface java.lang.management.
OperatingSystemMXBean
Returns the number of processors available to the Java virtual machine.
getAvailableSize(Dimension, Insets)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Returns the available width based on the container size and
Insets
.
getAvailableZoneIds()
- Static method in class java.time.zone.
ZoneRulesProvider
Gets the set of available zone IDs.
getAvailableZoneIds()
- Static method in class java.time.
ZoneId
Gets the set of available zone IDs.
getAverage()
- Method in class java.util.
DoubleSummaryStatistics
Returns the arithmetic mean of values recorded, or zero if no
 values have been recorded.
getAverage()
- Method in class java.util.
IntSummaryStatistics
Returns the arithmetic mean of values recorded, or zero if no values have been
 recorded.
getAverage()
- Method in class java.util.
LongSummaryStatistics
Returns the arithmetic mean of values recorded, or zero if no values have been
 recorded.
getAWTEventListeners()
- Method in class java.awt.
Toolkit
Returns an array of all the
AWTEventListener
s
 registered on this toolkit.
getAWTEventListeners(long)
- Method in class java.awt.
Toolkit
Returns an array of all the
AWTEventListener
s
 registered on this toolkit which listen to all of the event
 types specified in the
eventMask
argument.
getAWTKeyStroke(char)
- Static method in class java.awt.
AWTKeyStroke
Returns a shared instance of an
AWTKeyStroke
that represents a
KEY_TYPED
event for the
 specified character.
getAWTKeyStroke(int, int)
- Static method in class java.awt.
AWTKeyStroke
Returns a shared instance of an
AWTKeyStroke
,
 given a numeric key code and a set of modifiers.
getAWTKeyStroke(int, int, boolean)
- Static method in class java.awt.
AWTKeyStroke
Returns a shared instance of an
AWTKeyStroke
,
 given a numeric key code and a set of modifiers, specifying
 whether the key is activated when it is pressed or released.
getAWTKeyStroke(Character, int)
- Static method in class java.awt.
AWTKeyStroke
Returns a shared instance of an
AWTKeyStroke
that represents a
KEY_TYPED
event for the
 specified Character object and a set of modifiers.
getAWTKeyStroke(String)
- Static method in class java.awt.
AWTKeyStroke
Parses a string and returns an
AWTKeyStroke
.
getAWTKeyStrokeForEvent(KeyEvent)
- Static method in class java.awt.
AWTKeyStroke
Returns an
AWTKeyStroke
which represents the
 stroke which generated a given
KeyEvent
.
getAxis()
- Method in class javax.swing.
BoxLayout
Returns the axis that was used to lay out components.
getAxis()
- Method in class javax.swing.text.
BoxView
Fetches the tile axis property.
getAxis()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Names group of related headers.
getAzimuth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the azimuth property definition in CSS2.
getB()
- Method in class java.security.spec.
EllipticCurve
Returns the second coefficient
b
of the
 elliptic curve.
getBackBuffer()
- Method in class java.awt.
Component.FlipBufferStrategy
Provides direct access to the back buffer as an image.
getBackBufferCapabilities()
- Method in class java.awt.
BufferCapabilities
Returns the image capabilities of all back buffers (intermediate buffers
 are considered back buffers).
getBackground()
- Method in class com.sun.java.accessibility.util.
Translator
Get the background
Color
of this object.
getBackground()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the background color of this object.
getBackground()
- Method in class java.awt.
Component
Gets the background color of this component.
getBackground()
- Method in class java.awt.
Graphics2D
Returns the background color used for clearing a region.
getBackground()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Get the background color of this object.
getBackground()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the background color of this object.
getBackground()
- Method in class java.awt.
TextComponent
Gets the background color of this text component.
getBackground()
- Method in class java.awt.
Window
Gets the background color of this window.
getBackground()
- Method in interface javax.accessibility.
AccessibleComponent
Gets the background color of this object.
getBackground()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getBackground()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the background color of this object.
getBackground()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the background color of this object.
getBackground()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getBackground()
- Method in class javax.swing.text.
GlyphView
Fetch the background color to use to render the
 glyphs.
getBackground()
- Method in class javax.swing.text.
LabelView
Fetches the background color to use to render the glyphs.
getBackground()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background property definition in CSS2.
getBackground()
- Method in interface org.w3c.dom.html.
HTMLBodyElement
URI of the background texture tile image.
getBackground(AttributeSet)
- Method in class javax.swing.text.
DefaultStyledDocument
Gets the background color from an attribute set.
getBackground(AttributeSet)
- Method in class javax.swing.text.html.
StyleSheet
Takes a set of attributes and turn it into a background color
 specification.
getBackground(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the background color setting from the attribute list.
getBackground(AttributeSet)
- Method in class javax.swing.text.
StyleContext
Takes a set of attributes and turn it into a background color
 specification.
getBackground(AttributeSet)
- Method in interface javax.swing.text.
StyledDocument
Takes a set of attributes and turn it into a background color
 specification.
getBackgroundAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the tab background color at
index
.
getBackgroundAttachment()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-attachment property definition in CSS2.
getBackgroundColor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-color property definition in CSS2.
getBackgroundImage()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-image property definition in CSS2.
getBackgroundNonSelectionColor()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the background color to be used for non selected nodes.
getBackgroundPainter(SynthContext)
- Method in class javax.swing.plaf.nimbus.
NimbusStyle
Gets the appropriate background Painter, if there is one, for the state
 specified in the given SynthContext.
getBackgroundPosition()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-position property definition in CSS2.
getBackgroundRepeat()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the background-repeat property definition in CSS2.
getBackgroundSelectionColor()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the color to use for the background if node is selected.
getBandOffsets()
- Method in class java.awt.image.
ComponentSampleModel
Returns the band offset for all bands.
getBank()
- Method in class javax.sound.midi.
Patch
Returns the number of the bank that contains the instrument whose
 location this
Patch
specifies.
getBankData()
- Method in class java.awt.image.
DataBufferByte
Returns the data arrays for all banks.
getBankData()
- Method in class java.awt.image.
DataBufferDouble
Returns the data array for all banks.
getBankData()
- Method in class java.awt.image.
DataBufferFloat
Returns the data array for all banks.
getBankData()
- Method in class java.awt.image.
DataBufferInt
Returns the data arrays for all banks.
getBankData()
- Method in class java.awt.image.
DataBufferShort
Returns the data arrays for all banks.
getBankData()
- Method in class java.awt.image.
DataBufferUShort
Returns the data arrays for all banks.
getBankIndices()
- Method in class java.awt.image.
ComponentSampleModel
Returns the bank indices for all bands.
getBase()
- Method in class javax.swing.text.html.
HTMLDocument
Returns the location to resolve relative URLs against.
getBase()
- Method in class javax.swing.text.html.
StyleSheet
Returns the base.
getBaseBundleName()
- Method in class java.util.
ResourceBundle
Returns the base name of this bundle, if known, or
null
if unknown.
getBaseImage()
- Method in class java.awt.image.
AbstractMultiResolutionImage
Return the base image representing the best version of the image for
 rendering at the default width and height.
getBaseImage()
- Method in class java.awt.image.
BaseMultiResolutionImage
getBaseLevel()
- Method in class java.text.
Bidi
Return the base level (0 if left-to-right, 1 if right-to-left).
getBaseline()
- Method in class java.awt.font.
TextLayout
Returns the baseline for this
TextLayout
.
getBaseline(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the baseline for the specified tab.
getBaseline(int, int)
- Method in class java.awt.
Component
Returns the baseline.
getBaseline(int, int)
- Method in class javax.swing.
JComponent
Returns the baseline.
getBaseline(int, int)
- Method in class javax.swing.
JSpinner.DefaultEditor
Returns the baseline.
getBaseline(Component, int, int)
- Method in class javax.swing.border.
AbstractBorder
Returns the baseline.
getBaseline(Component, int, int)
- Method in class javax.swing.border.
TitledBorder
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicLabelUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicListUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicPanelUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicSpinnerUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicTableHeaderUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicTableUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicTextAreaUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicTextFieldUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.
ComponentUI
Returns the baseline.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.
LayerUI
If the
JLayer
's view component is not
null
,
 this calls the view's
getBaseline()
method.
getBaseline(JComponent, int, int)
- Method in class javax.swing.plaf.metal.
MetalComboBoxUI
Returns the baseline.
getBaselineFor(char)
- Method in class java.awt.
Font
Returns the baseline appropriate for displaying this character.
getBaselineIndex()
- Method in class java.awt.font.
LineMetrics
Returns the baseline index of the text.
getBaselineOffset()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the amount the baseline is offset by.
getBaselineOffset()
- Method in class javax.swing.plaf.metal.
MetalTabbedPaneUI
Returns the amount the baseline is offset by.
getBaselineOffsets()
- Method in class java.awt.font.
LineMetrics
Returns the baseline offsets of the text,
 relative to the baseline of the text.
getBaselineOffsets()
- Method in class java.awt.font.
TextLayout
Returns the offsets array for the baselines used for this
TextLayout
.
getBaselineResizeBehavior()
- Method in class java.awt.
Component
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior()
- Method in class javax.swing.
JComponent
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior()
- Method in class javax.swing.
JSpinner.DefaultEditor
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(Component)
- Method in class javax.swing.border.
AbstractBorder
Returns an enum indicating how the baseline of a component
 changes as the size changes.
getBaselineResizeBehavior(Component)
- Method in class javax.swing.border.
TitledBorder
Returns an enum indicating how the baseline of the border
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicLabelUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicListUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicPanelUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSpinnerUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTableUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextAreaUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextFieldUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.
ComponentUI
Returns an enum indicating how the baseline of the component
 changes as the size changes.
getBaselineResizeBehavior(JComponent)
- Method in class javax.swing.plaf.
LayerUI
If the
JLayer
's view component is not
null
,
 this returns the result of the view's
getBaselineResizeBehavior()
method.
getBaseOperation()
- Method in class jdk.dynalink.
NamedOperation
Returns the base operation of this named operation.
getBaseOperation()
- Method in class jdk.dynalink.
NamespaceOperation
Returns the base operation of this named operation.
getBaseOperation(Operation)
- Static method in class jdk.dynalink.
NamedOperation
If the passed operation is a named operation, returns its
NamedOperation.getBaseOperation()
, otherwise returns the operation as is.
getBaseOperation(Operation)
- Static method in class jdk.dynalink.
NamespaceOperation
If the passed operation is a namespace operation, returns its
NamespaceOperation.getBaseOperation()
, otherwise returns the operation as is.
getBaseType()
- Method in interface java.sql.
Array
Retrieves the JDBC type of the elements in the array designated
 by this
Array
object.
getBaseType()
- Method in class javax.sql.rowset.serial.
SerialArray
Retrieves the SQL type of the elements in this
SerialArray
object.
getBaseTypeName()
- Method in interface java.sql.
Array
Retrieves the SQL type name of the elements in
 the array designated by this
Array
object.
getBaseTypeName()
- Method in interface java.sql.
Ref
Retrieves the fully-qualified SQL name of the SQL structured type that
 this
Ref
object references.
getBaseTypeName()
- Method in class javax.sql.rowset.serial.
SerialArray
Retrieves the DBMS-specific type name for the elements in this
SerialArray
object.
getBaseTypeName()
- Method in class javax.sql.rowset.serial.
SerialRef
Returns a string describing the base type name of the
Ref
.
getBaseUnit()
- Method in enum class java.time.temporal.
ChronoField
getBaseUnit()
- Method in interface java.time.temporal.
TemporalField
Gets the unit that the field is measured in.
getBaseURI()
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
getBaseURI()
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
getBaseURI()
- Method in interface javax.xml.crypto.
XMLCryptoContext
Returns the base URI.
getBaseURI()
- Method in interface javax.xml.stream.events.
EntityDeclaration
Get the base URI for this reference
 or null if this information is not available
getBaseURI()
- Method in interface org.w3c.dom.ls.
LSInput
The base URI to be used (see section 5.1.4 in [
IETF RFC 2396
]) for
 resolving a relative
systemId
to an absolute URI.
getBaseURI()
- Method in interface org.w3c.dom.
Node
The absolute base URI of this node or
null
if the
 implementation wasn't able to obtain an absolute URI.
getBasicChannel()
- Method in class javax.smartcardio.
Card
Returns the CardChannel for the basic logical channel.
getBasicConstraints()
- Method in class java.security.cert.
X509Certificate
Gets the certificate constraints path length from the
 critical
BasicConstraints
extension, (OID = 2.5.29.19).
getBasicConstraints()
- Method in class java.security.cert.
X509CertSelector
Returns the basic constraints constraint.
getBasicSplitPaneUI()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Returns the
SplitPaneUI
the receiver is currently in.
getBeanClass()
- Method in class java.beans.
BeanDescriptor
Gets the bean's Class object.
getBeanContext()
- Method in interface java.beans.beancontext.
BeanContextChild
Gets the
BeanContext
associated
 with this
BeanContextChild
.
getBeanContext()
- Method in class java.beans.beancontext.
BeanContextChildSupport
Gets the nesting
BeanContext
for this
BeanContextChildSupport
.
getBeanContext()
- Method in class java.beans.beancontext.
BeanContextEvent
Gets the
BeanContext
associated with this event.
getBeanContextChildPeer()
- Method in class java.beans.beancontext.
BeanContextChildSupport
Gets the
BeanContextChild
associated with this
BeanContextChildSupport
.
getBeanContextPeer()
- Method in class java.beans.beancontext.
BeanContextSupport
Gets the instance of
BeanContext
that
 this object is providing the implementation for.
getBeanContextProxy()
- Method in interface java.beans.beancontext.
BeanContextProxy
Gets the
BeanContextChild
(or subinterface)
 associated with this object.
getBeanContextServicesPeer()
- Method in class java.beans.beancontext.
BeanContextServicesSupport
Gets the
BeanContextServices
associated with this
BeanContextServicesSupport
.
getBeanDescriptor()
- Method in interface java.beans.
BeanInfo
Returns the bean descriptor
 that provides overall information about the bean,
 such as its display name or its customizer.
getBeanDescriptor()
- Method in class java.beans.
SimpleBeanInfo
Deny knowledge about the class and customizer of the bean.
getBeanInfo(Class<?>)
- Static method in class java.beans.
Introspector
Introspect on a Java Bean and learn about all its properties, exposed
 methods, and events.
getBeanInfo(Class<?>, int)
- Static method in class java.beans.
Introspector
Introspect on a Java bean and learn about all its properties, exposed
 methods, and events, subject to some control flags.
getBeanInfo(Class<?>, Class<?>)
- Static method in class java.beans.
Introspector
Introspect on a Java bean and learn all about its properties, exposed
 methods, below a given "stop" point.
getBeanInfo(Class<?>, Class<?>, int)
- Static method in class java.beans.
Introspector
Introspect on a Java Bean and learn about all its properties,
 exposed methods and events, below a given
stopClass
point
 subject to some control
flags
.
getBeanInfoSearchPath()
- Static method in class java.beans.
Introspector
Gets the list of package names that will be used for
          finding BeanInfo classes.
getBeforeIndex(int, int)
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the String before a given index.
getBeforeIndex(int, int)
- Method in interface javax.accessibility.
AccessibleText
Returns the
String
before a given index.
getBeforeIndex(int, int)
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the String before a given index.
getBeforeIndex(int, int)
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the String before a given index.
getBeforeIndex(int, int)
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Returns the
String
before a given
index
.
getBeforeIndex(int, int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the String before a given index.
getBeforeIndex(int, int)
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the String before a given index.
getBeforeIndex(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the String before a given index.
getBeginIndex()
- Method in interface java.text.
CharacterIterator
Returns the start index of the text.
getBeginIndex()
- Method in class java.text.
FieldPosition
Retrieves the index of the first character in the requested field.
getBeginIndex()
- Method in class java.text.
StringCharacterIterator
Implements CharacterIterator.getBeginIndex() for String.
getBeginIndex()
- Method in class javax.swing.text.
Segment
Returns the start index of the text.
getBestConfiguration(GraphicsConfigTemplate)
- Method in class java.awt.
GraphicsDevice
Returns the "best" configuration possible that passes the
 criteria defined in the
GraphicsConfigTemplate
.
getBestConfiguration(GraphicsConfiguration[])
- Method in class java.awt.
GraphicsConfigTemplate
Returns the "best" configuration possible that passes the
 criteria defined in the
GraphicsConfigTemplate
.
getBestCursorSize(int, int)
- Method in class java.awt.
Toolkit
Returns the supported cursor dimension which is closest to the desired
 sizes.
getBestRowIdentifier(String, String, String, int, boolean)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of a table's optimal set of columns that
 uniquely identifies a row.
getBevelType()
- Method in class javax.swing.border.
BevelBorder
Returns the type of the bevel border.
getBgColor()
- Method in interface org.w3c.dom.html.
HTMLBodyElement
Document background color.
getBgColor()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Cell background color.
getBgColor()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Cell background color.
getBgColor()
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
Background color for rows.
getBias()
- Method in class javax.swing.text.
JTextComponent.DropLocation
Returns the bias for the drop index.
getBidiLevel(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the BidiLevel setting.
getBidiRootElement()
- Method in class javax.swing.text.
AbstractDocument
Returns the root element of the bidirectional structure for this
 document.
getBigDecimal(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
NUMERIC
parameter as a
java.math.BigDecimal
object with as many digits to the
 right of the decimal point as the value contains.
getBigDecimal(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.math.BigDecimal
with full precision.
getBigDecimal(int, int)
- Method in interface java.sql.
CallableStatement
Deprecated.
use
getBigDecimal(int parameterIndex)
or
getBigDecimal(String parameterName)
getBigDecimal(int, int)
- Method in interface java.sql.
ResultSet
Deprecated.
Use
getBigDecimal(int columnIndex)
or
getBigDecimal(String columnLabel)
getBigDecimal(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
NUMERIC
parameter as a
java.math.BigDecimal
object with as many digits to the
 right of the decimal point as the value contains.
getBigDecimal(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.math.BigDecimal
with full precision.
getBigDecimal(String, int)
- Method in interface java.sql.
ResultSet
Deprecated.
Use
getBigDecimal(int columnIndex)
or
getBigDecimal(String columnLabel)
getBinaryName(TypeElement)
- Method in interface javax.lang.model.util.
Elements
Returns the
binary name
of a type element.
getBinaryStream()
- Method in interface java.sql.
Blob
Retrieves the
BLOB
value designated by this
Blob
instance as a stream.
getBinaryStream()
- Method in interface java.sql.
SQLXML
Retrieves the XML value designated by this SQLXML instance as a stream.
getBinaryStream()
- Method in class javax.sql.rowset.serial.
SerialBlob
Returns this
SerialBlob
object as an input stream.
getBinaryStream(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a  stream of
 uninterpreted bytes.
getBinaryStream(long, long)
- Method in interface java.sql.
Blob
Returns an
InputStream
object that contains
 a partial
Blob
value, starting with the byte
 specified by pos, which is length bytes in length.
getBinaryStream(long, long)
- Method in class javax.sql.rowset.serial.
SerialBlob
Returns an
InputStream
object that contains a partial
Blob
value, starting with the byte specified by pos, which is
 length bytes in length.
getBinaryStream(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a stream of uninterpreted
byte
s.
getBindings()
- Method in class javax.script.
ScriptEngineManager
getBindings
returns the value of the
globalScope
field.
getBindings(int)
- Method in class javax.script.
AbstractScriptEngine
Returns the
Bindings
with the specified scope value in
 the protected
context
field.
getBindings(int)
- Method in interface javax.script.
ScriptContext
Gets the
Bindings
associated with the given scope in this
ScriptContext
.
getBindings(int)
- Method in interface javax.script.
ScriptEngine
Returns a scope of named values.
getBindings(int)
- Method in class javax.script.
SimpleScriptContext
Returns the value of the
engineScope
field if specified scope is
ENGINE_SCOPE
.
getBitDepth()
- Method in class java.awt.
DisplayMode
Returns the bit depth of the display, in bits per pixel.
getBitMasks()
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns the bit masks for all bands.
getBitOffset()
- Method in interface javax.imageio.stream.
ImageInputStream
Returns the current bit offset, as an integer between 0 and 7,
 inclusive.
getBitOffset()
- Method in class javax.imageio.stream.
ImageInputStreamImpl
getBitOffset(int)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the offset, in bits, into the data element in which it is
  stored for the
x
th pixel of a scanline.
getBitOffsets()
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns the bit offsets into the data array element representing
  a pixel for all bands.
getBitRate(float)
- Method in class javax.imageio.
ImageWriteParam
Returns a
float
indicating an estimate of the
 number of bits of output data for each bit of input image data
 at the given quality level.
getBitsPerBand(int)
- Method in class javax.imageio.
ImageTypeSpecifier
Return the number of bits used to represent samples of the given band.
getBlack()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the black color of the current theme.
getBlack()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the black color.
getBlack()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the black color.
getBlackBoxBounds(int, int)
- Method in class java.awt.font.
TextLayout
Returns the black box bounds of the characters in the specified range.
getBlackLineBorderUIResource()
- Static method in class javax.swing.plaf.
BorderUIResource
Returns a black line border UI resource.
getBlinkRate()
- Method in interface javax.swing.text.
Caret
Gets the blink rate of the caret.
getBlinkRate()
- Method in class javax.swing.text.
DefaultCaret
Gets the caret blink rate.
getBlob(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
BLOB
parameter as a
Blob
object in the Java programming language.
getBlob(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
Blob
object
 in the Java programming language.
getBlob(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
BLOB
parameter as a
Blob
object in the Java programming language.
getBlob(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
Blob
object
 in the Java programming language.
getBlock()
- Method in interface com.sun.source.tree.
CatchTree
Returns the catch block.
getBlock()
- Method in interface com.sun.source.tree.
SynchronizedTree
Returns the block of the
synchronized
statement.
getBlock()
- Method in interface com.sun.source.tree.
TryTree
Returns the block of the
try
statement.
getBlockedCount()
- Method in class java.lang.management.
ThreadInfo
Returns the total number of times that
 the thread associated with this
ThreadInfo
blocked to enter or reenter a monitor.
getBlockedTime()
- Method in class java.lang.management.
ThreadInfo
Returns the approximate accumulated elapsed time (in milliseconds)
 that the thread associated with this
ThreadInfo
has blocked to enter or reenter a monitor
 since thread contention monitoring is enabled.
getBlocker(Thread)
- Static method in class java.util.concurrent.locks.
LockSupport
Returns the blocker object supplied to the most recent
 invocation of a park method that has not yet unblocked, or null
 if not blocked.
getBlockIncrement()
- Method in interface java.awt.
Adjustable
Gets the block value increment for the adjustable object.
getBlockIncrement()
- Method in class java.awt.
Scrollbar
Gets the block increment of this scroll bar.
getBlockIncrement()
- Method in class java.awt.
ScrollPaneAdjustable
getBlockIncrement()
- Method in class javax.swing.
JScrollBar
For backwards compatibility with java.awt.Scrollbar.
getBlockIncrement(int)
- Method in class javax.swing.
JScrollBar
Returns the amount to change the scrollbar's value by,
 given a block (usually "page") up/down request.
getBlockIncrement(int)
- Method in class javax.swing.
JScrollPane.ScrollBar
Computes the block increment for scrolling if the viewport's
 view is a
Scrollable
object.
getBlockSize()
- Method in class java.nio.file.
FileStore
Returns the number of bytes per block in this file store.
getBlockSize()
- Method in class javax.crypto.
Cipher
Returns the block size (in bytes).
getBlockTags()
- Method in interface com.sun.source.doctree.
DocCommentTree
Returns the block tags for a documentation comment.
getBlue()
- Method in class java.awt.
Color
Returns the blue component in the range 0-255 in the default sRGB
 space.
getBlue()
- Method in interface org.w3c.dom.css.
RGBColor
This attribute is used for the blue value of the RGB color.
getBlue(int)
- Method in class java.awt.image.
ColorModel
Returns the blue color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getBlue(int)
- Method in class java.awt.image.
ComponentColorModel
Returns the blue color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getBlue(int)
- Method in class java.awt.image.
DirectColorModel
Returns the blue color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getBlue(int)
- Method in class java.awt.image.
IndexColorModel
Returns the blue color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getBlue(Object)
- Method in class java.awt.image.
ColorModel
Returns the blue color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getBlue(Object)
- Method in class java.awt.image.
ComponentColorModel
Returns the blue color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getBlue(Object)
- Method in class java.awt.image.
DirectColorModel
Returns the blue color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getBlueMask()
- Method in class java.awt.image.
DirectColorModel
Returns the mask indicating which bits in an
int
pixel
 representation contain the blue color component.
getBlues(byte[])
- Method in class java.awt.image.
IndexColorModel
Copies the array of blue color components into the specified array.
getBody()
- Method in interface com.sun.source.doctree.
CommentTree
Returns the text of the comment.
getBody()
- Method in interface com.sun.source.doctree.
DeprecatedTree
Returns the description explaining why an item is deprecated.
getBody()
- Method in interface com.sun.source.doctree.
DocCommentTree
Returns the body of a documentation comment,
 appearing after the first sentence, and before any block tags.
getBody()
- Method in interface com.sun.source.doctree.
EscapeTree
Returns the text.
getBody()
- Method in interface com.sun.source.doctree.
HiddenTree
Returns the description explaining why an item is hidden.
getBody()
- Method in interface com.sun.source.doctree.
LiteralTree
Returns the body of the
@literal
or
@code
tag.
getBody()
- Method in interface com.sun.source.doctree.
SinceTree
Returns the text explaining the availability of the item being documented.
getBody()
- Method in interface com.sun.source.doctree.
SnippetTree
Returns the body of the
@snippet
tag, or
null
if there is no body.
getBody()
- Method in interface com.sun.source.doctree.
TextTree
Returns the text.
getBody()
- Method in interface com.sun.source.doctree.
VersionTree
Returns the body of the tag.
getBody()
- Method in interface com.sun.source.tree.
CaseTree
For case with kind
CaseTree.CaseKind.RULE
,
 returns the statement or expression after the arrow.
getBody()
- Method in interface com.sun.source.tree.
LambdaExpressionTree
Returns the body of the lambda expression.
getBody()
- Method in interface com.sun.source.tree.
MethodTree
Returns the method body, or
null
if this is an abstract or native method.
getBody()
- Method in class java.net.
CacheRequest
Returns an OutputStream to which the response body can be
 written.
getBody()
- Method in class java.net.
CacheResponse
Returns the response body as an InputStream.
getBody()
- Method in interface java.net.http.
HttpResponse.BodySubscriber
Returns a
CompletionStage
which when completed will return
 the response body object.
getBody()
- Method in interface org.w3c.dom.html.
HTMLDocument
The element that contains the content for the document.
getBodyKind()
- Method in interface com.sun.source.tree.
LambdaExpressionTree
Returns the kind of the body of the lambda expression.
getBoolean(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
BIT
or
BOOLEAN
parameter as a
boolean
in the Java programming language.
getBoolean(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
boolean
in the Java programming language.
getBoolean(Object)
- Method in class java.lang.reflect.
Field
Gets the value of a static or instance
boolean
field.
getBoolean(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is boolean, return the
 boolean value, otherwise return false.
getBoolean(Object)
- Static method in class javax.swing.
UIManager
Returns a boolean from the defaults which is associated with
 the key value.
getBoolean(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object, as a
boolean
.
getBoolean(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is boolean, return the boolean value, otherwise return false.
getBoolean(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns a boolean from the defaults which is associated with
 the key value and the given
Locale
.
getBoolean(String)
- Static method in class java.lang.
Boolean
Returns
true
if and only if the system property named
 by the argument exists and is equal to, ignoring case, the
 string
"true"
.
getBoolean(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
BIT
or
BOOLEAN
parameter as a
boolean
in the Java programming language.
getBoolean(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
boolean
in the Java programming language.
getBoolean(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
boolean
.
getBoolean(String, boolean)
- Method in class java.util.prefs.
AbstractPreferences
Implements the
getBoolean
method as per the specification in
Preferences.getBoolean(String,boolean)
.
getBoolean(String, boolean)
- Method in class java.util.prefs.
Preferences
Returns the boolean value represented by the string associated with the
 specified key in this preference node.
getBoolean(SynthContext, Object, boolean)
- Method in class javax.swing.plaf.synth.
SynthStyle
Convenience method to get a specific style property whose value is
 an Boolean.
getBooleanValue()
- Method in interface org.w3c.dom.xpath.
XPathResult
The value of this boolean result.
getBootClassPath()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the boot class path that is used by the bootstrap class loader
 to search for class files.
getBorder()
- Method in class javax.swing.border.
TitledBorder
Returns the border of the titled border.
getBorder()
- Method in class javax.swing.
JComponent
Returns the border of this component or
null
if no
 border is currently set.
getBorder()
- Method in class javax.swing.
JLayer
Delegates its functionality to the
getView().getBorder()
method,
 if the view component is an instance of
javax.swing.JComponent
,
 otherwise returns
null
.
getBorder()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Returns the border of this component or null if no border is
 currently set.
getBorder()
- Method in class javax.swing.tree.
DefaultTreeCellEditor.DefaultTextField
Overrides
JComponent.getBorder
to
 returns the current border.
getBorder()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border property definition in CSS2.
getBorder()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Width of border around image.
getBorder()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Width of border around the object.
getBorder()
- Method in interface org.w3c.dom.html.
HTMLTableElement
The width of the border around the table.
getBorder(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is a
Border
return it,
 otherwise return
null
.
getBorder(Object)
- Static method in class javax.swing.
UIManager
Returns a border from the defaults.
getBorder(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is a
Border
return it, otherwise return
null
.
getBorder(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns a border from the defaults that is appropriate
 for the given locale.
getBorderBottom()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-bottom property definition in CSS2.
getBorderBottomColor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-bottom-color property definition in CSS2.
getBorderBottomStyle()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-bottom-style property definition in CSS2.
getBorderBottomWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-bottom-width property definition in CSS2.
getBorderCollapse()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-collapse property definition in CSS2.
getBorderColor()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI.DragWindow
Returns the border color.
getBorderColor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-color property definition in CSS2.
getBorderInsets()
- Method in class javax.swing.border.
EmptyBorder
Returns the insets of the border.
getBorderInsets()
- Method in class javax.swing.border.
MatteBorder
Returns the insets of the border.
getBorderInsets(Component)
- Method in class javax.swing.border.
AbstractBorder
This default implementation returns a new
Insets
object
 that is initialized by the
AbstractBorder.getBorderInsets(Component,Insets)
method.
getBorderInsets(Component)
- Method in interface javax.swing.border.
Border
Returns the insets of the border.
getBorderInsets(Component)
- Method in class javax.swing.plaf.basic.
BasicBorders.SplitPaneBorder
getBorderInsets(Component)
- Method in class javax.swing.plaf.
BorderUIResource
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
AbstractBorder
Reinitializes the insets parameter with this Border's current Insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
BevelBorder
Reinitialize the insets parameter with this Border's current Insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
CompoundBorder
Reinitialize the insets parameter with this Border's current Insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
EmptyBorder
Reinitialize the insets parameter with this Border's current Insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
EtchedBorder
Reinitialize the insets parameter with this Border's current Insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
LineBorder
Reinitialize the insets parameter with this Border's current Insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
MatteBorder
Reinitialize the insets parameter with this Border's current Insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
SoftBevelBorder
Reinitialize the insets parameter with this Border's current Insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
StrokeBorder
Reinitializes the
insets
parameter
 with this border's current insets.
getBorderInsets(Component, Insets)
- Method in class javax.swing.border.
TitledBorder
Reinitialize the insets parameter with this Border's current Insets.
getBorderLeft()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-left property definition in CSS2.
getBorderLeftColor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-left-color property definition in CSS2.
getBorderLeftStyle()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-left-style property definition in CSS2.
getBorderLeftWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-left-width property definition in CSS2.
getBorderPainter(SynthContext)
- Method in class javax.swing.plaf.nimbus.
NimbusStyle
Gets the appropriate border Painter, if there is one, for the state
 specified in the given SynthContext.
getBorderRight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-right property definition in CSS2.
getBorderRightColor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-right-color property definition in CSS2.
getBorderRightStyle()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-right-style property definition in CSS2.
getBorderRightWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-right-width property definition in CSS2.
getBorderSelectionColor()
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Returns the color the border is drawn.
getBorderSelectionColor()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the color the border is drawn.
getBorderSpacing()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-spacing property definition in CSS2.
getBorderStyle()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-style property definition in CSS2.
getBorderTitle(Border)
- Method in class javax.swing.
JComponent.AccessibleJComponent
Recursively search through the border hierarchy (if it exists)
 for a TitledBorder with a non-null title.
getBorderTop()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-top property definition in CSS2.
getBorderTopColor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-top-color property definition in CSS2.
getBorderTopStyle()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-top-style property definition in CSS2.
getBorderTopWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-top-width property definition in CSS2.
getBorderWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the border-width property definition in CSS2.
getBottom()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the bottom property definition in CSS2.
getBottom()
- Method in interface org.w3c.dom.css.
Rect
This attribute is used for the bottom of the rect.
getBottomComponent()
- Method in class javax.swing.
JSplitPane
Returns the component below, or to the right of the divider.
getBottomInset()
- Method in class javax.swing.text.
AsyncBoxView
Get the bottom part of the margin around the view.
getBottomInset()
- Method in class javax.swing.text.
CompositeView
Gets the bottom inset.
getBottomPanel()
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Returns the bottom panel.
getBound()
- Method in interface com.sun.source.tree.
WildcardTree
Returns the bound of the wildcard.
getBoundActions()
- Method in interface javax.swing.text.
Keymap
Fetches all of the actions defined in this keymap.
getBoundedPosition(GlyphView, int, float, float)
- Method in class javax.swing.text.
GlyphView.GlyphPainter
Determines the model location that represents the
 maximum advance that fits within the given span.
getBoundingBox()
- Method in class java.awt.
Polygon
Deprecated.
As of JDK version 1.1,
 replaced by
getBounds()
.
getBoundKeyStrokes()
- Method in interface javax.swing.text.
Keymap
Fetches all of the keystrokes in this map that
 are bound to some action.
getBounds()
- Method in class com.sun.java.accessibility.util.
Translator
Returns the current bounds of this object.
getBounds()
- Method in interface com.sun.source.tree.
IntersectionTypeTree
Returns the bounds of the type.
getBounds()
- Method in interface com.sun.source.tree.
TypeParameterTree
Returns the bounds of the type parameter.
getBounds()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the bounds of this object in the form of a Rectangle object.
getBounds()
- Method in class java.awt.
Component
Gets the bounds of this component in the form of a
Rectangle
object.
getBounds()
- Method in class java.awt.font.
GraphicAttribute
Returns a
Rectangle2D
that encloses all of the
 bits drawn by this
GraphicAttribute
relative to the
 rendering position.
getBounds()
- Method in class java.awt.font.
ImageGraphicAttribute
Returns a
Rectangle2D
that encloses all of the
 bits rendered by this
ImageGraphicAttribute
, relative
 to the rendering position.
getBounds()
- Method in class java.awt.font.
ShapeGraphicAttribute
Returns a
Rectangle2D
that encloses all of the
 bits drawn by this
ShapeGraphicAttribute
relative to
 the rendering position.
getBounds()
- Method in class java.awt.font.
TextLayout
Returns the bounds of this
TextLayout
.
getBounds()
- Method in class java.awt.geom.
Area
Returns a bounding
Rectangle
that completely encloses
 this
Area
.
getBounds()
- Method in class java.awt.geom.
CubicCurve2D
Returns an integer
Rectangle
that completely encloses the
Shape
.
getBounds()
- Method in class java.awt.geom.
Line2D
Returns an integer
Rectangle
that completely encloses the
Shape
.
getBounds()
- Method in class java.awt.geom.
Path2D
Returns an integer
Rectangle
that completely encloses the
Shape
.
getBounds()
- Method in class java.awt.geom.
QuadCurve2D
Returns an integer
Rectangle
that completely encloses the
Shape
.
getBounds()
- Method in class java.awt.geom.
RectangularShape
Returns an integer
Rectangle
that completely encloses the
Shape
.
getBounds()
- Method in class java.awt.
GraphicsConfiguration
Returns the bounds of the
GraphicsConfiguration
in the device coordinates.
getBounds()
- Method in class java.awt.image.
Raster
Returns the bounding Rectangle of this Raster.
getBounds()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Gets the bounds of this object in the form of a Rectangle object.
getBounds()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the bounds of this object in the form of a
Rectangle
object.
getBounds()
- Method in class java.awt.
Polygon
Gets the bounding box of this
Polygon
.
getBounds()
- Method in class java.awt.
Rectangle
Gets the bounding
Rectangle
of this
Rectangle
.
getBounds()
- Method in interface java.awt.
Shape
Returns an integer
Rectangle
that completely encloses the
Shape
.
getBounds()
- Method in class java.awt.
SplashScreen
Returns the bounds of the splash screen window as a
Rectangle
.
getBounds()
- Method in interface java.lang.reflect.
TypeVariable
Returns an array of
Type
objects representing the
 upper bound(s) of this type variable.
getBounds()
- Method in interface javax.accessibility.
AccessibleComponent
Gets the bounds of this object in the form of a
Rectangle
object.
getBounds()
- Method in interface javax.lang.model.element.
TypeParameterElement
Returns the bounds of this type parameter.
getBounds()
- Method in interface javax.lang.model.type.
IntersectionType
Returns the bounds comprising this intersection type.
getBounds()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getBounds()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
getBounds()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
getBounds()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getBounds(Rectangle)
- Method in class java.awt.
Component
Stores the bounds of this component into "return value"
rv
and
 return
rv
.
getBounds(Rectangle)
- Method in class javax.swing.
JComponent
Stores the bounds of this component into "return value"
rv
and returns
rv
.
getBounds(TreePath, Rectangle)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns a rectangle giving the bounds needed to draw path.
getBounds(TreePath, Rectangle)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Returns a rectangle giving the bounds needed to draw path.
getBounds(TreePath, Rectangle)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns the
Rectangle
enclosing the label portion
 into which the item identified by
path
will be drawn.
getBounds2D()
- Method in class java.awt.font.
GlyphMetrics
Returns the bounds of the glyph.
getBounds2D()
- Method in class java.awt.geom.
Arc2D
Returns the high-precision framing rectangle of the arc.
getBounds2D()
- Method in class java.awt.geom.
Area
Returns a high precision bounding
Rectangle2D
that
 completely encloses this
Area
.
getBounds2D()
- Method in class java.awt.geom.
CubicCurve2D
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Ellipse2D.Double
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Ellipse2D.Float
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Line2D.Double
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Line2D.Float
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Path2D.Double
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Path2D.Float
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
QuadCurve2D
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Rectangle2D.Double
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Rectangle2D.Float
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
Rectangle2D
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
RoundRectangle2D.Double
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.geom.
RoundRectangle2D.Float
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.
Polygon
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in class java.awt.
Rectangle
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D()
- Method in interface java.awt.
Shape
Returns a high precision and more accurate bounding box of
 the
Shape
than the
getBounds
method.
getBounds2D(BufferedImage)
- Method in class java.awt.image.
AffineTransformOp
Returns the bounding box of the transformed destination.
getBounds2D(BufferedImage)
- Method in interface java.awt.image.
BufferedImageOp
Returns the bounding box of the filtered destination image.
getBounds2D(BufferedImage)
- Method in class java.awt.image.
ColorConvertOp
Returns the bounding box of the destination, given this source.
getBounds2D(BufferedImage)
- Method in class java.awt.image.
ConvolveOp
Returns the bounding box of the filtered destination image.
getBounds2D(BufferedImage)
- Method in class java.awt.image.
LookupOp
Returns the bounding box of the filtered destination image.
getBounds2D(BufferedImage)
- Method in class java.awt.image.
RescaleOp
Returns the bounding box of the rescaled destination image.
getBounds2D(Raster)
- Method in class java.awt.image.
AffineTransformOp
Returns the bounding box of the transformed destination.
getBounds2D(Raster)
- Method in class java.awt.image.
BandCombineOp
Returns the bounding box of the transformed destination.
getBounds2D(Raster)
- Method in class java.awt.image.
ColorConvertOp
Returns the bounding box of the destination, given this source.
getBounds2D(Raster)
- Method in class java.awt.image.
ConvolveOp
Returns the bounding box of the filtered destination Raster.
getBounds2D(Raster)
- Method in class java.awt.image.
LookupOp
Returns the bounding box of the filtered destination Raster.
getBounds2D(Raster)
- Method in interface java.awt.image.
RasterOp
Returns the bounding box of the filtered destination Raster.
getBounds2D(Raster)
- Method in class java.awt.image.
RescaleOp
Returns the bounding box of the rescaled destination Raster.
getBounds2D(ParameterBlock)
- Method in interface java.awt.image.renderable.
ContextualRenderedImageFactory
Returns the bounding box for the output of the operation,
 performed on a given set of sources, in rendering-independent
 space.
getBoundsAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the tab bounds at
index
.
getBoundsForIconOf(JInternalFrame)
- Method in class javax.swing.
DefaultDesktopManager
The
iconifyFrame()
code calls this to determine the proper bounds
 for the desktopIcon.
getBox(Rectangle)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Stores the position and size of
 the bouncing box that would be painted for the current animation index
 in
r
and returns
r
.
getBoxLength(int, int)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Returns the length
 of the "bouncing box" to be painted.
getBoxPainter(AttributeSet)
- Method in class javax.swing.text.html.
StyleSheet
Fetches the box formatter to use for the given set
 of CSS attributes.
getBranchQualifier()
- Method in interface javax.transaction.xa.
Xid
Obtain the transaction branch identifier part of XID as an array
 of bytes.
getBreakIterator()
- Method in class com.sun.source.util.
DocTrees
Returns the break iterator used to compute the first sentence of
 documentation comments.
getBreakLocation(Segment, FontMetrics, float, float, TabExpander, int)
- Static method in class javax.swing.text.
Utilities
Determine where to break the given text to fit
 within the given span.
getBreakLocation(Segment, FontMetrics, int, int, TabExpander, int)
- Static method in class javax.swing.text.
Utilities
Deprecated.
replaced by
Utilities.getBreakLocation(Segment, FontMetrics, float, float, TabExpander, int)
getBreakWeight(int, float)
- Method in class javax.swing.text.
ParagraphView
Gets the break weight for a given location.
getBreakWeight(int, float, float)
- Method in class javax.swing.text.
GlyphView
Determines how attractive a break opportunity in
 this view is.
getBreakWeight(int, float, float)
- Method in class javax.swing.text.html.
InlineView
Determines how attractive a break opportunity in
 this view is.
getBreakWeight(int, float, float)
- Method in class javax.swing.text.
View
Determines how attractive a break opportunity in
 this view is.
getBroadcast()
- Method in class java.net.
DatagramSocket
Tests if SO_BROADCAST is enabled.
getBroadcast()
- Method in class java.net.
InterfaceAddress
Returns an
InetAddress
for the broadcast address
 for this InterfaceAddress.
getBubbles()
- Method in interface org.w3c.dom.events.
Event
Used to indicate whether or not an event is a bubbling event.
getBuffer()
- Method in class java.io.
StringWriter
Return the string buffer itself.
getBufferCapabilities()
- Method in class java.awt.
GraphicsConfiguration
Returns the buffering capabilities of this
GraphicsConfiguration
.
getBufferedImageOp()
- Method in class java.awt.image.
BufferedImageFilter
Returns the
BufferedImageOp
.
getBufferedImageType()
- Method in class javax.imageio.
ImageTypeSpecifier
Returns an int containing one of the enumerated constant values
 describing image formats from
BufferedImage
.
getBufferSize()
- Method in interface javax.sound.sampled.
DataLine
Obtains the maximum number of bytes of data that will fit in the data
 line's internal buffer.
getBufferStrategy()
- Method in class java.awt.
Canvas
Returns the
BufferStrategy
used by this component.
getBufferStrategy()
- Method in class java.awt.
Window
Returns the
BufferStrategy
used by this component.
getBundle(String)
- Static method in class java.util.
ResourceBundle
Gets a resource bundle using the specified base name, the default locale,
 and the caller module.
getBundle(String, Module)
- Static method in class java.util.
ResourceBundle
Gets a resource bundle using the specified base name and the default locale
 on behalf of the specified module.
getBundle(String, Locale)
- Static method in class java.util.
ResourceBundle
Gets a resource bundle using the specified base name and locale,
 and the caller module.
getBundle(String, Locale)
- Method in class java.util.spi.
AbstractResourceBundleProvider
Returns a
ResourceBundle
for the given
baseName
and
locale
.
getBundle(String, Locale)
- Method in interface java.util.spi.
ResourceBundleProvider
Returns a
ResourceBundle
for the given bundle name and locale.
getBundle(String, Locale, ClassLoader)
- Static method in class java.util.
ResourceBundle
Gets a resource bundle using the specified base name, locale, and class
 loader.
getBundle(String, Locale, ClassLoader, ResourceBundle.Control)
- Static method in class java.util.
ResourceBundle
Returns a resource bundle using the specified base name, target
 locale, class loader and control.
getBundle(String, Locale, Module)
- Static method in class java.util.
ResourceBundle
Gets a resource bundle using the specified base name and locale
 on behalf of the specified module.
getBundle(String, Locale, ResourceBundle.Control)
- Static method in class java.util.
ResourceBundle
Returns a resource bundle using the specified base name, target
 locale and control, and the caller's class loader.
getBundle(String, ResourceBundle.Control)
- Static method in class java.util.
ResourceBundle
Returns a resource bundle using the specified base name, the
 default locale and the specified control.
getBusy()
- Method in interface org.w3c.dom.ls.
LSParser
true
if the
LSParser
is currently busy
 loading a document, otherwise
false
.
getButton()
- Method in class java.awt.event.
MouseEvent
Returns which, if any, of the mouse buttons has changed state.
getButton()
- Method in interface org.w3c.dom.events.
MouseEvent
During mouse events caused by the depression or release of a mouse
 button,
button
is used to indicate which mouse button
 changed state.
getButtonBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JButton
.
getButtonBorder()
- Static method in class javax.swing.plaf.metal.
MetalBorders
Returns a border instance for a
JButton
.
getButtonCount()
- Method in class javax.swing.
ButtonGroup
Returns the number of buttons in the group.
getButtonPanel()
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Returns the button panel.
getButtons()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Returns the buttons to display from the
JOptionPane
the receiver is
 providing the look and feel for.
getButtonWidth()
- Method in class javax.swing.plaf.metal.
MetalScrollButton
Returns the width of the button.
getByAddress(byte[])
- Static method in class java.net.
InetAddress
Returns an
InetAddress
object given the raw IP address .
getByAddress(String, byte[])
- Static method in class java.net.
InetAddress
Creates an InetAddress based on the provided host name and IP address.
getByAddress(String, byte[], int)
- Static method in class java.net.
Inet6Address
Create an Inet6Address in the exact manner of
InetAddress.getByAddress(String,byte[])
except that the IPv6 scope_id is
 set to the given numeric value.
getByAddress(String, byte[], NetworkInterface)
- Static method in class java.net.
Inet6Address
Create an Inet6Address in the exact manner of
InetAddress.getByAddress(String,byte[])
except that the IPv6 scope_id is
 set to the value corresponding to the given interface for the address
 type specified in
addr
.
getByIndex(int)
- Static method in class java.net.
NetworkInterface
Get a network interface given its index.
getByInetAddress(InetAddress)
- Static method in class java.net.
NetworkInterface
Convenience method to search for a network interface that
 has the specified Internet Protocol (IP) address bound to
 it.
getByName(String)
- Static method in class java.net.
InetAddress
Determines the IP address of a host, given the host's name.
getByName(String)
- Static method in class java.net.
NetworkInterface
Searches for the network interface with the specified name.
getByte(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
TINYINT
parameter
 as a
byte
in the Java programming language.
getByte(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
byte
in the Java programming language.
getByte(Object)
- Method in class java.lang.reflect.
Field
Gets the value of a static or instance
byte
field.
getByte(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object, as a
byte
.
getByte(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
TINYINT
parameter as a
byte
in the Java programming language.
getByte(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
byte
in the Java programming language.
getByte(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
byte
.
getByteArray(String, byte[])
- Method in class java.util.prefs.
AbstractPreferences
Implements the
getByteArray
method as per the specification in
Preferences.getByteArray(String,byte[])
.
getByteArray(String, byte[])
- Method in class java.util.prefs.
Preferences
Returns the byte array value represented by the string associated with
 the specified key in this preference node.
getBytecodeIndex()
- Method in class jdk.jfr.consumer.
RecordedFrame
Returns the bytecode index for the execution point that is represented by
 this recorded frame.
getByteCodeIndex()
- Method in interface java.lang.
StackWalker.StackFrame
Returns the index to the code array of the
Code
attribute
 containing the execution point represented by this stack frame.
getByteLength()
- Method in class javax.sound.midi.
MidiFileFormat
Obtains the length of the MIDI file, expressed in 8-bit bytes.
getByteLength()
- Method in class javax.sound.sampled.
AudioFileFormat
Obtains the size in bytes of the entire audio file (not just its audio
 data).
getByteOffset()
- Method in interface org.w3c.dom.
DOMLocator
The byte offset into the input source this locator is pointing to or
-1
if there is no byte offset available.
getByteOrder()
- Method in interface javax.imageio.stream.
ImageInputStream
Returns the byte order with which data values will be read from
 this stream as an instance of the
java.nio.ByteOrder
enumeration.
getByteOrder()
- Method in class javax.imageio.stream.
ImageInputStreamImpl
getByteParameter(int)
- Method in class java.awt.image.renderable.
ParameterBlock
A convenience method to return a parameter as a byte.
getBytes()
- Method in class java.lang.
String
Encodes this
String
into a sequence of bytes using the
default charset
, storing the result
 into a new byte array.
getBytes()
- Method in interface java.security.interfaces.
EdECPrivateKey
Get a copy of the byte array representing the private key.
getBytes()
- Method in class java.security.spec.
EdECPrivateKeySpec
Get the byte array representing the private key.
getBytes()
- Method in interface java.sql.
RowId
Returns an array of bytes representing the value of the SQL
ROWID
designated by this
java.sql.RowId
object.
getBytes()
- Method in class javax.smartcardio.
ATR
Returns a copy of the bytes in this ATR.
getBytes()
- Method in class javax.smartcardio.
CommandAPDU
Returns a copy of the bytes in this APDU.
getBytes()
- Method in class javax.smartcardio.
ResponseAPDU
Returns a copy of the bytes in this APDU.
getBytes(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
BINARY
or
VARBINARY
parameter as an array of
byte
values in the Java programming language.
getBytes(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
byte
array in the Java programming language.
getBytes(int, int, byte[], int)
- Method in class java.lang.
String
Deprecated.
This method does not properly convert characters into
 bytes.  As of JDK 1.1, the preferred way to do this is via the
String.getBytes()
method, which uses the
default charset
.
getBytes(long, int)
- Method in interface java.sql.
Blob
Retrieves all or part of the
BLOB
value that this
Blob
object represents, as an array of
 bytes.
getBytes(long, int)
- Method in class javax.sql.rowset.serial.
SerialBlob
Copies the specified number of bytes, starting at the given
 position, from this
SerialBlob
object to
 another array of bytes.
getBytes(String)
- Method in class java.lang.
String
Encodes this
String
into a sequence of bytes using the named
 charset, storing the result into a new byte array.
getBytes(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
BINARY
or
VARBINARY
parameter as an array of
byte
values in the Java
 programming language.
getBytes(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
byte
array in the Java programming language.
getBytes(Charset)
- Method in class java.lang.
String
Encodes this
String
into a sequence of bytes using the given
charset
, storing the result into a
 new byte array.
getBytesRead()
- Method in class java.util.zip.
Deflater
Returns the total number of uncompressed bytes input so far.
getBytesRead()
- Method in class java.util.zip.
Inflater
Returns the total number of compressed bytes input so far.
getByteStream()
- Method in interface org.w3c.dom.ls.
LSInput
An attribute of a language and binding dependent type that represents
 a stream of bytes.
getByteStream()
- Method in interface org.w3c.dom.ls.
LSOutput
An attribute of a language and binding dependent type that represents
 a writable stream of bytes.
getByteStream()
- Method in class org.xml.sax.
InputSource
Get the byte stream for this input source.
getBytesWritten()
- Method in class java.util.zip.
Deflater
Returns the total number of compressed bytes output so far.
getBytesWritten()
- Method in class java.util.zip.
Inflater
Returns the total number of uncompressed bytes output so far.
getCA()
- Method in class java.security.cert.
TrustAnchor
Returns the name of the most-trusted CA as an X500Principal.
getCachedIcon(File)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI.BasicFileView
Returns the cached icon for the file.
getCacheDirectory()
- Static method in class javax.imageio.
ImageIO
Returns the current value set by
setCacheDirectory
, or
null
if no
 explicit setting has been made.
getCachedMBeanInfo()
- Method in class javax.management.
StandardMBean
Customization hook:
 Return the MBeanInfo cached for this object.
getCalculatedDigestValue()
- Method in interface javax.xml.crypto.dsig.
Reference
Returns the calculated digest value of this
Reference
after a validation operation.
getCalendar()
- Method in class java.text.
DateFormat
Gets the calendar associated with this date/time formatter.
getCalendarField()
- Method in class java.text.
DateFormat.Field
Returns the
Calendar
field associated with this
 attribute.
getCalendarField()
- Method in class javax.swing.
SpinnerDateModel
Returns the
Calendar
field that is added to or subtracted from
 by the
nextValue
and
previousValue
methods.
getCalendarType()
- Method in interface java.time.chrono.
Chronology
Gets the calendar type of the calendar system.
getCalendarType()
- Method in class java.time.chrono.
HijrahChronology
Gets the calendar type of the Islamic calendar.
getCalendarType()
- Method in class java.time.chrono.
IsoChronology
Gets the calendar type of the underlying calendar system - 'iso8601'.
getCalendarType()
- Method in class java.time.chrono.
JapaneseChronology
Gets the calendar type of the underlying calendar system - 'japanese'.
getCalendarType()
- Method in class java.time.chrono.
MinguoChronology
Gets the calendar type of the underlying calendar system - 'roc'.
getCalendarType()
- Method in class java.time.chrono.
ThaiBuddhistChronology
Gets the calendar type of the underlying calendar system - 'buddhist'.
getCalendarType()
- Method in class java.util.
Calendar
Returns the calendar type of this
Calendar
.
getCalendarType()
- Method in class java.util.
GregorianCalendar
Returns
"gregory"
as the calendar type.
getCallback()
- Method in exception class javax.security.auth.callback.
UnsupportedCallbackException
Get the unrecognized
Callback
.
getCallbackHandler()
- Method in class java.security.
KeyStore.CallbackHandlerProtection
Returns the CallbackHandler.
getCallerClass()
- Method in class java.lang.
StackWalker
Gets the
Class
object of the caller who invoked the method
 that invoked
getCallerClass
.
getCallSiteDescriptor()
- Method in interface jdk.dynalink.linker.
LinkRequest
Returns the call site descriptor for the call site being linked.
getCallSiteDescriptor()
- Method in class jdk.dynalink.linker.support.
SimpleLinkRequest
getCAName()
- Method in class java.security.cert.
TrustAnchor
Returns the name of the most-trusted CA in RFC 2253
String
format.
getCancelable()
- Method in interface org.w3c.dom.events.
Event
Used to indicate whether or not an event can have its default action
 prevented.
getCancelSelectionAction()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns a cancel selection action.
getCandidateLocales(String, Locale)
- Method in class java.util.
ResourceBundle.Control
Returns a
List
of
Locale
s as candidate
 locales for
baseName
and
locale
.
getCanonicalFile()
- Method in class java.io.
File
Returns the canonical form of this abstract pathname.
getCanonicalHostName()
- Method in class java.net.
InetAddress
Gets the fully qualified domain name for this IP address.
getCanonicalizationMethod()
- Method in interface javax.xml.crypto.dsig.
SignedInfo
Returns the canonicalization method of this
SignedInfo
.
getCanonicalizedData()
- Method in interface javax.xml.crypto.dsig.
SignedInfo
Returns the canonicalized signed info bytes after a signing or
 validation operation.
getCanonicalKeyPropertyListString()
- Method in class javax.management.
ObjectName
Returns a string representation of the list of key properties,
 in which the key properties are sorted in lexical order.
getCanonicalName()
- Method in class java.lang.
Class
Returns the canonical name of the underlying class as
 defined by
The Java Language Specification
.
getCanonicalName()
- Method in class javax.management.
ObjectName
Returns the canonical form of the name; that is, a string
 representation where the properties are sorted in lexical
 order.
getCanonicalPath()
- Method in class java.io.
File
Returns the canonical pathname string of this abstract pathname.
getCanWrapLines()
- Method in class javax.swing.text.
AbstractWriter
Returns whether or not the lines can be wrapped.
getCapabilities()
- Method in class java.awt.
Component.BltBufferStrategy
getCapabilities()
- Method in class java.awt.
Component.FlipBufferStrategy
getCapabilities()
- Method in class java.awt.image.
BufferStrategy
Returns the
BufferCapabilities
for this
BufferStrategy
.
getCapabilities()
- Method in class java.awt.image.
VolatileImage
Returns an ImageCapabilities object which can be
 inquired as to the specific capabilities of this
 VolatileImage.
getCapabilities(GraphicsConfiguration)
- Method in class java.awt.
Image
Returns an ImageCapabilities object which can be
 inquired as to the capabilities of this
 Image on the specified GraphicsConfiguration.
getCapability()
- Method in class java.security.
DrbgParameters.Instantiation
Returns the capability.
getCaption()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Returns the table's
CAPTION
, or void if none exists.
getCaptionSide()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the caption-side property definition in CSS2.
getCapturedArg(int)
- Method in class java.lang.invoke.
SerializedLambda
Get a dynamic argument to the lambda capture site.
getCapturedArgCount()
- Method in class java.lang.invoke.
SerializedLambda
Get the count of dynamic arguments to the lambda capture site.
getCapturingClass()
- Method in class java.lang.invoke.
SerializedLambda
Get the name of the class that captured this lambda.
getCAPublicKey()
- Method in class java.security.cert.
TrustAnchor
Returns the public key of the most-trusted CA.
getCard()
- Method in class javax.smartcardio.
CardChannel
Returns the Card this channel is associated with.
getCaret()
- Method in class java.awt.event.
InputMethodEvent
Gets the caret.
getCaret()
- Method in class javax.swing.text.
JTextComponent
Fetches the caret that allows text-oriented navigation over
 the view.
getCaret()
- Method in class javax.swing.text.
NavigationFilter.FilterBypass
Returns the Caret that is changing.
getCaretColor()
- Method in class javax.swing.text.
JTextComponent
Fetches the current color used to render the
 caret.
getCaretInfo(TextHitInfo)
- Method in class java.awt.font.
TextLayout
Returns information about the caret corresponding to
hit
.
getCaretInfo(TextHitInfo, Rectangle2D)
- Method in class java.awt.font.
TextLayout
Returns information about the caret corresponding to
hit
.
getCaretListeners()
- Method in class javax.swing.text.
JTextComponent
Returns an array of all the caret listeners
 registered on this text component.
getCaretPosition()
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the zero-based offset of the caret.
getCaretPosition()
- Method in class java.awt.
TextComponent
Returns the position of the text insertion caret.
getCaretPosition()
- Method in interface javax.accessibility.
AccessibleText
Returns the zero-based offset of the caret.
getCaretPosition()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Return the zero-based offset of the caret.
getCaretPosition()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Return the zero-based offset of the caret.
getCaretPosition()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the zero-based offset of the caret.
getCaretPosition()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the zero-based offset of the caret.
getCaretPosition()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the zero-based offset of the caret.
getCaretPosition()
- Method in class javax.swing.text.
JTextComponent
Returns the position of the text insertion caret for the
 text component.
getCaretShape(TextHitInfo)
- Method in class java.awt.font.
TextLayout
Returns a
Shape
representing the caret at the specified
 hit inside the natural bounds of this
TextLayout
.
getCaretShape(TextHitInfo, Rectangle2D)
- Method in class java.awt.font.
TextLayout
Returns a
Shape
representing the caret at the specified
 hit inside the specified bounds.
getCaretShapes(int)
- Method in class java.awt.font.
TextLayout
Returns two paths corresponding to the strong and weak caret.
getCaretShapes(int, Rectangle2D)
- Method in class java.awt.font.
TextLayout
Returns two paths corresponding to the strong and weak caret.
getCaretShapes(int, Rectangle2D, TextLayout.CaretPolicy)
- Method in class java.awt.font.
TextLayout
Returns two paths corresponding to the strong and weak caret.
getCaseKind()
- Method in interface com.sun.source.tree.
CaseTree
Returns the kind of this case.
getCases()
- Method in interface com.sun.source.tree.
SwitchExpressionTree
Returns the cases for the
switch
expression.
getCases()
- Method in interface com.sun.source.tree.
SwitchTree
Returns the cases for the
switch
statement.
getCatalog()
- Method in interface java.sql.
Connection
Retrieves this
Connection
object's current catalog name.
getCatalogName(int)
- Method in interface java.sql.
ResultSetMetaData
Gets the designated column's table's catalog name.
getCatalogName(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the catalog name of the table from which the value
 in the designated column was derived.
getCatalogs()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the catalog names available in this database.
getCatalogSeparator()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the
String
that this database uses as the
 separator between a catalog and table name.
getCatalogTerm()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the database vendor's preferred term for "catalog".
getCatches()
- Method in interface com.sun.source.tree.
TryTree
Returns any catch blocks provided in the
try
statement.
getCategories()
- Method in class javax.imageio.spi.
ServiceRegistry
Returns an
Iterator
of
Class
objects
 indicating the current set of categories.
getCategory()
- Method in interface javax.print.attribute.
Attribute
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value when it is added to an attribute set.
getCategory()
- Method in class javax.print.attribute.standard.
Chromaticity
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
ColorSupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
Compression
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
Copies
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
CopiesSupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
DateTimeAtCompleted
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
DateTimeAtCreation
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
DateTimeAtProcessing
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
Destination
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
DialogOwner
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
DialogTypeSelection
Gets the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
DocumentName
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
Fidelity
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
Finishings
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobHoldUntil
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobImpressions
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobImpressionsCompleted
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobImpressionsSupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobKOctets
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobKOctetsProcessed
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobKOctetsSupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobMediaSheets
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobMediaSheetsCompleted
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobMediaSheetsSupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobMessageFromOperator
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobName
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobOriginatingUserName
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobPriority
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobPrioritySupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobSheets
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobState
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobStateReason
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
JobStateReasons
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
Media
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
MediaPrintableArea
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
MediaSize
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
MultipleDocumentHandling
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
NumberOfDocuments
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
NumberOfInterveningJobs
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
NumberUp
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
NumberUpSupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
OrientationRequested
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
OutputDeviceAssigned
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PageRanges
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PagesPerMinute
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PagesPerMinuteColor
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PDLOverrideSupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PresentationDirection
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterInfo
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterIsAcceptingJobs
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterLocation
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterMakeAndModel
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterMessageFromOperator
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterMoreInfo
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterMoreInfoManufacturer
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterName
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterResolution
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterState
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterStateReason
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterStateReasons
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrinterURI
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
PrintQuality
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
QueuedJobCount
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
ReferenceUriSchemesSupported
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
RequestingUserName
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
Severity
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
SheetCollate
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategory()
- Method in class javax.print.attribute.standard.
Sides
Get the printing attribute class which is to be used as the "category"
 for this printing attribute value.
getCategoryNames()
- Method in class jdk.jfr.
EventType
Returns the list of human-readable names that makes up the categories for
 this event type (for example,
"Java Application"
,
"Statistics"
).
getCategoryNames()
- Method in class jdk.management.jfr.
EventTypeInfo
Returns the list of human-readable names that makes up the category for this
EventTypeInfo
(for example,
"Java Virtual Machine"
or
"Garbage Collector"
).
getCause()
- Method in class java.awt.event.
FocusEvent
Returns the event cause.
getCause()
- Method in exception class java.awt.print.
PrinterIOException
Returns the cause of this exception (the
IOException
that terminated the print job).
getCause()
- Method in exception class java.io.
UncheckedIOException
Returns the cause of this exception.
getCause()
- Method in exception class java.io.
WriteAbortedException
Returns the exception that terminated the operation (the
cause
).
getCause()
- Method in exception class java.lang.reflect.
InvocationTargetException
Returns the cause of this exception (the thrown target exception,
 which may be
null
).
getCause()
- Method in exception class java.lang.
Throwable
Returns the cause of this throwable or
null
if the
 cause is nonexistent or unknown.
getCause()
- Method in exception class java.nio.file.
DirectoryIteratorException
Returns the cause of this exception.
getCause()
- Method in exception class java.rmi.
RemoteException
Returns the cause of this exception.
getCause()
- Method in exception class java.rmi.server.
ServerCloneException
Returns the cause of this exception.
getCause()
- Method in exception class javax.management.
MBeanException
Return the actual
Exception
thrown.
getCause()
- Method in exception class javax.management.
ReflectionException
Returns the actual
Exception
thrown.
getCause()
- Method in exception class javax.management.
RuntimeErrorException
Returns the actual
Error
thrown.
getCause()
- Method in exception class javax.management.
RuntimeMBeanException
Returns the actual
RuntimeException
thrown.
getCause()
- Method in exception class javax.management.
RuntimeOperationsException
Returns the actual
RuntimeException
thrown.
getCause()
- Method in exception class javax.naming.
NamingException
Returns the cause of this exception.
getCause()
- Method in exception class javax.xml.crypto.dsig.
TransformException
Returns the cause of this
TransformException
or
null
if the cause is nonexistent or unknown.
getCause()
- Method in exception class javax.xml.crypto.dsig.
XMLSignatureException
Returns the cause of this
XMLSignatureException
or
null
if the cause is nonexistent or unknown.
getCause()
- Method in exception class javax.xml.crypto.
KeySelectorException
Returns the cause of this
KeySelectorException
or
null
if the cause is nonexistent or unknown.
getCause()
- Method in exception class javax.xml.crypto.
MarshalException
Returns the cause of this
MarshalException
or
null
if the cause is nonexistent or unknown.
getCause()
- Method in exception class javax.xml.crypto.
NoSuchMechanismException
Returns the cause of this
NoSuchMechanismException
or
null
if the cause is nonexistent or unknown.
getCause()
- Method in exception class javax.xml.crypto.
URIReferenceException
Returns the cause of this
URIReferenceException
or
null
if the cause is nonexistent or unknown.
getCause()
- Method in exception class javax.xml.parsers.
FactoryConfigurationError
use the exception chaining mechanism of JDK1.4
getCause()
- Method in exception class javax.xml.stream.
FactoryConfigurationError
use the exception chaining mechanism of JDK1.4
getCause()
- Method in exception class javax.xml.transform.
TransformerException
Returns the cause of this throwable or
null
if the
 cause is nonexistent or unknown.
getCause()
- Method in exception class javax.xml.transform.
TransformerFactoryConfigurationError
use the exception chaining mechanism of JDK1.4
getCause()
- Method in exception class javax.xml.xpath.
XPathException
Get the cause of this XPathException.
getCause()
- Method in exception class jdk.jshell.
EvalException
Returns the wrapped cause of the throwable in the executing client
 represented by this
EvalException
or
null
if the cause is
 nonexistent or unknown.
getCause()
- Method in exception class org.xml.sax.
SAXException
Return the cause of the exception
getCellBounds(int, int)
- Method in class javax.swing.
JList
Returns the bounding rectangle, in the list's coordinate system,
 for the range of cells specified by the two indices.
getCellBounds(JList<?>, int, int)
- Method in class javax.swing.plaf.basic.
BasicListUI
Returns the bounding rectangle, in the given list's coordinate system,
 for the range of cells specified by the two indices.
getCellBounds(JList<?>, int, int)
- Method in class javax.swing.plaf.
ListUI
Returns the bounding rectangle, in the given list's coordinate system,
 for the range of cells specified by the two indices.
getCellBounds(JList<?>, int, int)
- Method in class javax.swing.plaf.multi.
MultiListUI
Invokes the
getCellBounds
method on each UI handled by this object.
getCellEditor()
- Method in class javax.swing.
JTable
Returns the active cell editor, which is
null
if the table
 is not currently editing.
getCellEditor()
- Method in class javax.swing.
JTree
Returns the editor used to edit entries in the tree.
getCellEditor()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the editor used to edit entries in the drawn tree component, or
null
if the tree cannot be edited.
getCellEditor()
- Method in class javax.swing.table.
TableColumn
Returns the
TableCellEditor
used by the
JTable
to edit values for this column.
getCellEditor(int, int)
- Method in class javax.swing.
JTable
Returns an appropriate editor for the cell specified by
row
and
column
.
getCellEditorListeners()
- Method in class javax.swing.
AbstractCellEditor
Returns an array of all the
CellEditorListener
s added
 to this AbstractCellEditor with addCellEditorListener().
getCellEditorListeners()
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Returns an array of all the
CellEditorListener
s added
 to this DefaultTreeCellEditor with addCellEditorListener().
getCellEditorValue()
- Method in interface javax.swing.
CellEditor
Returns the value contained in the editor.
getCellEditorValue()
- Method in class javax.swing.
DefaultCellEditor.EditorDelegate
Returns the value of this cell.
getCellEditorValue()
- Method in class javax.swing.
DefaultCellEditor
Forwards the message from the
CellEditor
to
 the
delegate
.
getCellEditorValue()
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Returns the value currently being edited.
getCellIndex()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
The index of this cell in the row, starting from 0.
getCellLength()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Returns the width (if HORIZONTAL) or height (if VERTICAL)
 of each of the individual cells/units to be rendered in the
 progress bar.
getCellPadding()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Specifies the horizontal and vertical space between cell content and
 cell borders.
getCellRect(int, int, boolean)
- Method in class javax.swing.
JTable
Returns a rectangle for the cell that lies at the intersection of
row
and
column
.
getCellRenderer()
- Method in class javax.swing.
JList
Returns the object responsible for painting list items.
getCellRenderer()
- Method in class javax.swing.
JTree
Returns the current
TreeCellRenderer
that is rendering each cell.
getCellRenderer()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the current instance of the
TreeCellRenderer
that is
 rendering each cell.
getCellRenderer()
- Method in class javax.swing.table.
TableColumn
Returns the
TableCellRenderer
used by the
JTable
to draw
 values for this column.
getCellRenderer(int, int)
- Method in class javax.swing.
JTable
Returns an appropriate renderer for the cell specified by this row and
 column.
getCells()
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
The collection of cells in this row.
getCellSelectionEnabled()
- Method in class javax.swing.
JTable
Returns true if both row and column selection models are enabled.
getCellSpacing()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Returns the spacing between each of the cells/units in the
 progress bar.
getCellSpacing()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Specifies the horizontal and vertical separation between cells.
getCenterPoint()
- Method in class java.awt.
GraphicsEnvironment
Returns the Point where Windows should be centered.
getCenterPoint()
- Method in class java.awt.
RadialGradientPaint
Returns a copy of the center point of the radial gradient.
getCentersChildren()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonAreaLayout
Returns whether or not center children should be used.
getCenterX()
- Method in class java.awt.geom.
RectangularShape
Returns the X coordinate of the center of the framing
 rectangle of the
Shape
in
double
precision.
getCenterY()
- Method in class java.awt.geom.
RectangularShape
Returns the Y coordinate of the center of the framing
 rectangle of the
Shape
in
double
precision.
getCertificate()
- Method in class java.security.cert.
X509CertSelector
Returns the certificateEquals criterion.
getCertificate()
- Method in class java.security.
KeyStore.PrivateKeyEntry
Gets the end entity
Certificate
from the certificate chain in this entry.
getCertificate()
- Method in class javax.security.auth.x500.
X500PrivateCredential
Returns the X.509 certificate.
getCertificate(String)
- Method in class java.security.
KeyStore
Returns the certificate associated with the given alias.
getCertificateAlias(Certificate)
- Method in class java.security.
KeyStore
Returns the (alias) name of the first keystore entry whose certificate
 matches the given certificate.
getCertificateChain()
- Method in class java.security.
KeyStore.PrivateKeyEntry
Gets the
Certificate
chain from this entry.
getCertificateChain(String)
- Method in class java.security.
KeyStore
Returns the certificate chain associated with the given alias.
getCertificateChain(String)
- Method in interface javax.net.ssl.
X509KeyManager
Returns the certificate chain associated with the given alias.
getCertificateChecking()
- Method in class java.security.cert.
X509CRLSelector
Returns the certificate being checked.
getCertificateIssuer()
- Method in class java.security.cert.
X509CRLEntry
Get the issuer of the X509Certificate described by this entry.
getCertificates()
- Method in class java.net.
JarURLConnection
Returns the Certificate objects for this connection if the URL
 for it points to a JAR file entry, null otherwise.
getCertificates()
- Method in class java.security.cert.
CertPath
Returns the list of certificates in this certification path.
getCertificates()
- Method in class java.security.
CodeSource
Returns the certificates associated with this
CodeSource
.
getCertificates()
- Method in class java.util.jar.
JarEntry
Returns the
Certificate
objects for this entry, or
null
if none.
getCertificates(CertSelector)
- Method in class java.security.cert.
CertStore
Returns a
Collection
of
Certificate
s that
 match the specified selector.
getCertificateValid()
- Method in class java.security.cert.
X509CertSelector
Returns the certificateValid criterion.
getCertifiedText()
- Method in interface org.w3c.dom.ls.
LSInput
If set to true, assume that the input is certified (see section 2.13
 in [
XML 1.1
]) when
 parsing [
XML 1.1
].
getCertPath()
- Method in interface java.security.cert.
CertPathBuilderResult
Returns the built certification path.
getCertPath()
- Method in exception class java.security.cert.
CertPathValidatorException
Returns the certification path that was being validated when
 the exception was thrown.
getCertPath()
- Method in class java.security.cert.
PKIXCertPathBuilderResult
Returns the built and validated certification path.
getCertPathCheckers()
- Method in class java.security.cert.
PKIXParameters
Returns the
List
of certification path checkers.
getCertPathEncodings()
- Method in class java.security.cert.
CertificateFactory
Returns an iteration of the
CertPath
encodings supported
 by this certificate factory, with the default encoding first.
getCertStoreParameters()
- Method in class java.security.cert.
CertStore
Returns the parameters used to initialize this
CertStore
.
getCertStores()
- Method in class java.security.cert.
PKIXParameters
Returns an immutable
List
of
CertStore
s that
 are used to find certificates and CRLs.
getCh()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Alignment character for cells in a column.
getCh()
- Method in interface org.w3c.dom.html.
HTMLTableColElement
Alignment character for cells in a column.
getCh()
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
Alignment character for cells in a column.
getCh()
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
Alignment character for cells in a column.
getChange(Element)
- Method in interface javax.swing.event.
DocumentEvent
Gets the change information for the given element.
getChange(Element)
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Gets the changes for an element.
getChanged()
- Method in class java.awt.event.
HierarchyEvent
Returns the Component at the top of the hierarchy which was
 changed.
getChangedParent()
- Method in class java.awt.event.
HierarchyEvent
Returns the parent of the Component returned by
getChanged()
.
getChangeFlags()
- Method in class java.awt.event.
HierarchyEvent
Returns a bitmask which indicates the type(s) of
 HIERARCHY_CHANGED events represented in this event object.
getChangeInfo()
- Method in class javax.naming.event.
NamingEvent
Retrieves the change information for this event.
getChangeListeners()
- Method in class javax.swing.
AbstractButton
Returns an array of all the
ChangeListener
s added
 to this AbstractButton with addChangeListener().
getChangeListeners()
- Method in class javax.swing.
AbstractSpinnerModel
Returns an array of all the
ChangeListener
s added
 to this AbstractSpinnerModel with addChangeListener().
getChangeListeners()
- Method in class javax.swing.colorchooser.
DefaultColorSelectionModel
Returns an array of all the
ChangeListener
s added
 to this
DefaultColorSelectionModel
with
addChangeListener
.
getChangeListeners()
- Method in class javax.swing.
DefaultBoundedRangeModel
Returns an array of all the change listeners
 registered on this
DefaultBoundedRangeModel
.
getChangeListeners()
- Method in class javax.swing.
DefaultButtonModel
Returns an array of all the change listeners
 registered on this
DefaultButtonModel
.
getChangeListeners()
- Method in class javax.swing.
DefaultSingleSelectionModel
Returns an array of all the change listeners
 registered on this
DefaultSingleSelectionModel
.
getChangeListeners()
- Method in class javax.swing.
JProgressBar
Returns an array of all the
ChangeListener
s added
 to this progress bar with
addChangeListener
.
getChangeListeners()
- Method in class javax.swing.
JSlider
Returns an array of all the
ChangeListener
s added
 to this JSlider with addChangeListener().
getChangeListeners()
- Method in class javax.swing.
JSpinner
Returns an array of all the
ChangeListener
s added
 to this JSpinner with addChangeListener().
getChangeListeners()
- Method in class javax.swing.
JTabbedPane
Returns an array of all the
ChangeListener
s added
 to this
JTabbedPane
with
addChangeListener
.
getChangeListeners()
- Method in class javax.swing.
JViewport
Returns an array of all the
ChangeListener
s added
 to this JViewport with addChangeListener().
getChangeListeners()
- Method in class javax.swing.
MenuSelectionManager
Returns an array of all the
ChangeListener
s added
 to this MenuSelectionManager with addChangeListener().
getChangeListeners()
- Method in class javax.swing.text.
DefaultCaret
Returns an array of all the change listeners
 registered on this caret.
getChangeListeners()
- Method in class javax.swing.text.
StyleContext
Returns an array of all the
ChangeListener
s added
 to this StyleContext with addChangeListener().
getChangeListeners()
- Method in class javax.swing.text.
StyleContext.NamedStyle
Returns an array of all the
ChangeListener
s added
 to this NamedStyle with addChangeListener().
getChangeToParentDirectoryAction()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns a change to parent directory action.
getChannel()
- Method in class java.io.
FileInputStream
Returns the unique
FileChannel
object associated with this file input stream.
getChannel()
- Method in class java.io.
FileOutputStream
Returns the unique
FileChannel
object associated with this file output stream.
getChannel()
- Method in class java.io.
RandomAccessFile
Returns the unique
FileChannel
object associated with this file.
getChannel()
- Method in class java.net.
DatagramSocket
Returns the unique
DatagramChannel
object
 associated with this datagram socket, if any.
getChannel()
- Method in class java.net.
ServerSocket
Returns the unique
ServerSocketChannel
object
 associated with this socket, if any.
getChannel()
- Method in class java.net.
Socket
Returns the unique
SocketChannel
object associated with this socket, if any.
getChannel()
- Method in class javax.sound.midi.
ShortMessage
Obtains the MIDI channel associated with this event.
getChannelNumber()
- Method in class javax.smartcardio.
CardChannel
Returns the channel number of this CardChannel.
getChannelPressure()
- Method in interface javax.sound.midi.
MidiChannel
Obtains the channel's keyboard pressure.
getChannels()
- Method in interface javax.sound.midi.
Synthesizer
Obtains the set of MIDI channels controlled by this synthesizer.
getChannels()
- Method in class javax.sound.sampled.
AudioFormat
Obtains the number of channels.
getChar()
- Method in class java.nio.
ByteBuffer
Relative
get
method for reading a char value.
getChar(int)
- Method in class java.nio.
ByteBuffer
Absolute
get
method for reading a char value.
getChar(Object)
- Method in class java.lang.reflect.
Field
Gets the value of a static or instance field of type
char
or of another primitive type convertible to
 type
char
via a widening conversion.
getChar(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object, as a
char
.
getChar(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
char
.
getCharacterAttribute(int)
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the AttributeSet for a given character (at a given index).
getCharacterAttribute(int)
- Method in interface javax.accessibility.
AccessibleText
Returns the
AttributeSet
for a given character at a given index.
getCharacterAttribute(int)
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Return the AttributeSet for a given character at a given index
getCharacterAttribute(int)
- Method in class javax.swing.
JLabel.AccessibleJLabel
Return the AttributeSet for a given character at a given index
getCharacterAttribute(int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the AttributeSet for a given character at a given index
getCharacterAttribute(int)
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the AttributeSet for a given character at a given index
getCharacterAttribute(int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the AttributeSet for a given character (at a given index).
getCharacterAttributeRun()
- Method in class javax.swing.text.
StyledEditorKit
Fetches the element representing the current
 run of character attributes for the caret.
getCharacterAttributes()
- Method in class javax.swing.
JTextPane
Fetches the character attributes in effect at the
 current location of the caret, or
null
.
getCharacterBounds(int)
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Determines the bounding box of the character at the given
 index into the string.
getCharacterBounds(int)
- Method in interface javax.accessibility.
AccessibleText
Determines the bounding box of the character at the given index into the
 string.
getCharacterBounds(int)
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Determine the bounding box of the character at the given
 index into the string.
getCharacterBounds(int)
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the bounding box of the character at the given
 index in the string.
getCharacterBounds(int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Determines the bounding box of the character at the given
 index into the string.
getCharacterBounds(int)
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Determines the bounding box of the character at the given
 index into the string.
getCharacterBounds(int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Determines the bounding box of the character at the given
 index into the string.
getCharacterCount()
- Method in class java.awt.font.
TextLayout
Returns the number of characters represented by this
TextLayout
.
getCharacterElement(int)
- Method in class javax.swing.text.
DefaultStyledDocument
Gets a character element based on a position.
getCharacterElement(int)
- Method in interface javax.swing.text.
StyledDocument
Gets the element that represents the character that
 is at the given offset within the document.
getCharacterEncodingScheme()
- Method in interface javax.xml.stream.events.
StartDocument
Returns the encoding style of the XML data
getCharacterEncodingScheme()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getCharacterEncodingScheme()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the character encoding declared on the xml declaration
 Returns null if none was declared
getCharacterInstance()
- Static method in class java.text.
BreakIterator
Returns a new
BreakIterator
instance
 for
character breaks
for the
default locale
.
getCharacterInstance(Locale)
- Static method in class java.text.
BreakIterator
Returns a new
BreakIterator
instance
 for
character breaks
for the given locale.
getCharacterInstance(Locale)
- Method in class java.text.spi.
BreakIteratorProvider
Returns a new
BreakIterator
instance
 for
character breaks
for the given locale.
getCharacterLevel(int)
- Method in class java.awt.font.
TextLayout
Returns the level of the character at
index
.
getCharacterOffset()
- Method in interface javax.xml.stream.
Location
Return the byte or character offset into the input source this location
 is pointing to.
getCharacters(EntityTree)
- Method in class com.sun.source.util.
DocTrees
Returns a string containing the characters for the entity in a given entity tree,
 or
null
if the tree does not represent a valid series of characters.
getCharacterStream()
- Method in interface java.sql.
Clob
Retrieves the
CLOB
value designated by this
Clob
object as a
java.io.Reader
object (or as a stream of
 characters).
getCharacterStream()
- Method in interface java.sql.
SQLXML
Retrieves the XML value designated by this SQLXML instance as a java.io.Reader object.
getCharacterStream()
- Method in class javax.sql.rowset.serial.
SerialClob
Returns this
SerialClob
object's data as a stream
 of Unicode characters.
getCharacterStream()
- Method in interface org.w3c.dom.ls.
LSInput
An attribute of a language and binding dependent type that represents
 a stream of 16-bit units.
getCharacterStream()
- Method in interface org.w3c.dom.ls.
LSOutput
An attribute of a language and binding dependent type that represents
 a writable stream to which 16-bit units can be output.
getCharacterStream()
- Method in class org.xml.sax.
InputSource
Get the character stream for this input source.
getCharacterStream(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated parameter as a
java.io.Reader
object in the Java programming language.
getCharacterStream(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.io.Reader
object.
getCharacterStream(long, long)
- Method in interface java.sql.
Clob
Returns a
Reader
object that contains
 a partial
Clob
value, starting with the character
 specified by pos, which is length characters in length.
getCharacterStream(long, long)
- Method in class javax.sql.rowset.serial.
SerialClob
Returns a
Reader
object that contains a partial
SerialClob
value, starting
 with the character specified by pos, which is length characters in length.
getCharacterStream(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated parameter as a
java.io.Reader
object in the Java programming language.
getCharacterStream(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.io.Reader
object.
getCharContent(boolean)
- Method in interface javax.tools.
FileObject
Returns the character content of this file object, if available.
getCharContent(boolean)
- Method in class javax.tools.
ForwardingFileObject
getCharContent(boolean)
- Method in class javax.tools.
SimpleJavaFileObject
This implementation always throws
UnsupportedOperationException
.
getCharCount()
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the number of characters (valid indices)
getCharCount()
- Method in interface javax.accessibility.
AccessibleText
Returns the number of characters (valid indices).
getCharCount()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Return the number of characters (valid indices)
getCharCount()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Return the number of characters (valid indices)
getCharCount()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the number of characters (valid indices)
getCharCount()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the number of characters (valid indices)
getCharCount()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the number of characters (valid indices)
getCharIndex()
- Method in class java.awt.font.
TextHitInfo
Returns the index of the character hit.
getCharParameter(int)
- Method in class java.awt.image.renderable.
ParameterBlock
A convenience method to return a parameter as a char.
getChars(int, int, char[], int)
- Method in class java.lang.
StringBuilder
Characters are copied from this sequence into the
 destination character array
dst
.
getChars(int, int, char[], int)
- Method in class java.lang.
String
Copies characters from this string into the destination character
 array.
getChars(int, int, char[], int)
- Method in class java.lang.
StringBuffer
getChars(int, int, Segment)
- Method in interface javax.swing.text.
AbstractDocument.Content
Gets a sequence of characters and copies them into a Segment.
getChars(int, int, Segment)
- Method in class javax.swing.text.
GapContent
Retrieves a portion of the content.
getChars(int, int, Segment)
- Method in class javax.swing.text.
StringContent
Retrieves a portion of the content.
getCharset()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
The character encoding of the linked resource.
getCharset()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
The character encoding of the resource being linked to.
getCharset()
- Method in interface org.w3c.dom.html.
HTMLScriptElement
The character encoding of the linked resource.
getCharsetName()
- Method in exception class java.nio.charset.
IllegalCharsetNameException
Retrieves the illegal charset name.
getCharsetName()
- Method in exception class java.nio.charset.
UnsupportedCharsetException
Retrieves the name of the unsupported charset.
getCharSetSpec()
- Method in exception class javax.swing.text.
ChangedCharSetException
Returns the char set specification.
getCheckboxGroup()
- Method in class java.awt.
Checkbox
Determines this check box's group.
getCheckBoxIcon()
- Static method in class javax.swing.plaf.basic.
BasicIconFactory
Returns a check box icon.
getCheckBoxIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns a checkbox icon.
getCheckBoxMenuItemIcon()
- Static method in class javax.swing.plaf.basic.
BasicIconFactory
Returns a check box menu item icon.
getCheckBoxMenuItemIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns an icon to be used by
JCheckBoxMenuItem
.
getChecked()
- Method in interface org.w3c.dom.html.
HTMLInputElement
When the
type
attribute of the element has the value
 "Radio" or "Checkbox", this represents the current state of the form
 control, in an interactive user agent.
getChecksum()
- Method in class java.util.zip.
CheckedInputStream
Returns the Checksum for this input stream.
getChecksum()
- Method in class java.util.zip.
CheckedOutputStream
Returns the Checksum for this output stream.
getChild()
- Method in class java.awt.event.
ContainerEvent
Returns the component that was affected by the event.
getChild()
- Method in class java.util.prefs.
NodeChangeEvent
Returns the node that was added or removed.
getChild(File, String)
- Method in class javax.swing.filechooser.
FileSystemView
Returns a
File
object which is normally constructed with
new
 File(parent, fileName)
except when the parent and child are both
 special folders, in which case the
File
is a wrapper containing
 a ShellFolder object.
getChild(Object, int)
- Method in class javax.swing.tree.
DefaultTreeModel
Returns the child of
parent
at index
index
in the parent's
 child array.
getChild(Object, int)
- Method in interface javax.swing.tree.
TreeModel
Returns the child of
parent
at index
index
in the parent's
 child array.
getChild(String)
- Method in class java.util.prefs.
AbstractPreferences
Returns the named child if it exists, or
null
if it does not.
getChildAfter(TreeNode)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the child in this node's child array that immediately
 follows
aChild
, which must be a child of this node.
getChildAllocation(int)
- Method in class javax.swing.text.
AsyncBoxView.ChildLocator
Fetch the allocation to use for a child view.
getChildAllocation(int, Shape)
- Method in class javax.swing.text.
AsyncBoxView.ChildLocator
Fetch the allocation to use for a child view.
getChildAllocation(int, Shape)
- Method in class javax.swing.text.
AsyncBoxView
Fetches the allocation for the given child view.
getChildAllocation(int, Shape)
- Method in class javax.swing.text.
BoxView
Fetches the allocation for the given child view.
getChildAllocation(int, Shape)
- Method in class javax.swing.text.
CompositeView
Fetches the allocation for the given child view to
 render into.
getChildAllocation(int, Shape)
- Method in class javax.swing.text.
View
Fetches the allocation for the given child view.
getChildAt(int)
- Method in class javax.swing.
JTree.DynamicUtilTreeNode
Subclassed to load the children, if necessary.
getChildAt(int)
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Returns the child
TreeNode
at index
childIndex
.
getChildAt(int)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the child at the specified index in this node's child array.
getChildAt(int)
- Method in interface javax.swing.tree.
TreeNode
Returns the child
TreeNode
at index
childIndex
.
getChildBeanContextChild(Object)
- Static method in class java.beans.beancontext.
BeanContextSupport
Gets the BeanContextChild (if any) of the specified child
getChildBeanContextMembershipListener(Object)
- Static method in class java.beans.beancontext.
BeanContextSupport
Gets the BeanContextMembershipListener
 (if any) of the specified child
getChildBeanContextServicesListener(Object)
- Static method in class java.beans.beancontext.
BeanContextServicesSupport
Gets the
BeanContextServicesListener
(if any) of the specified
 child.
getChildBefore(TreeNode)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the child in this node's child array that immediately
 precedes
aChild
, which must be a child of this node.
getChildCount()
- Method in class javax.swing.
JTree.DynamicUtilTreeNode
Returns the number of child nodes.
getChildCount()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Returns the number of children
TreeNode
's
 receiver contains.
getChildCount()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the number of children of this node.
getChildCount()
- Method in interface javax.swing.tree.
TreeNode
Returns the number of children
TreeNode
s the receiver
 contains.
getChildCount(Object)
- Method in class javax.swing.tree.
DefaultTreeModel
Returns the number of children of
parent
.
getChildCount(Object)
- Method in interface javax.swing.tree.
TreeModel
Returns the number of children of
parent
.
getChildElementCount()
- Method in interface org.w3c.dom.
ElementTraversal
Returns the current number of child nodes of the element which are of
 the
Element
type.
getChildIndex()
- Method in class javax.swing.
JTree.DropLocation
Returns the index where the dropped data should be inserted
 with respect to the path returned by
getPath()
.
getChildIndices()
- Method in class javax.swing.event.
TreeModelEvent
Returns the values of the child indexes.
getChildNames(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns an array of
String
s indicating the names
 of the element which are allowed to be children of the named
 element, in the order in which they should appear.
getChildNames(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getChildNodes()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns a
NodeList
that contains all children of this node.
getChildNodes()
- Method in interface org.w3c.dom.
Node
A
NodeList
that contains all children of this node.
getChildPolicy(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns one of the constants starting with
CHILD_POLICY_
, indicating the legal pattern of
 children for the named element.
getChildPolicy(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getChildPropertyChangeListener(Object)
- Static method in class java.beans.beancontext.
BeanContextSupport
Gets the PropertyChangeListener
 (if any) of the specified child
getChildren()
- Method in interface java.security.cert.
PolicyNode
Returns an iterator over the children of this node.
getChildren()
- Method in class javax.swing.event.
TreeModelEvent
Returns the objects that are children of the node identified by
getPath
at the locations specified by
getChildIndices
.
getChildrenAdded()
- Method in interface javax.swing.event.
DocumentEvent.ElementChange
Gets the child elements that were added to the given
 parent element.
getChildrenAdded()
- Method in class javax.swing.text.
AbstractDocument.ElementEdit
Gets a list of children that were added.
getChildrenRemoved()
- Method in interface javax.swing.event.
DocumentEvent.ElementChange
Gets the child elements that were removed from the
 given parent element.
getChildrenRemoved()
- Method in class javax.swing.text.
AbstractDocument.ElementEdit
Gets a list of children that were removed.
getChildSerializable(Object)
- Static method in class java.beans.beancontext.
BeanContextSupport
Gets the Serializable (if any) associated with the specified Child
getChildState(int)
- Method in class javax.swing.text.
AsyncBoxView
Fetch the object representing the layout state of
 of the child at the given index.
getChildVetoableChangeListener(Object)
- Static method in class java.beans.beancontext.
BeanContextSupport
Gets the VetoableChangeListener
 (if any) of the specified child
getChildView()
- Method in class javax.swing.text.
AsyncBoxView.ChildState
Fetch the child view this record represents.
getChildVisibility(Object)
- Static method in class java.beans.beancontext.
BeanContextSupport
Gets the Component (if any) associated with the specified child.
getChOff()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Offset of alignment character.
getChOff()
- Method in interface org.w3c.dom.html.
HTMLTableColElement
Offset of alignment character.
getChOff()
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
Offset of alignment character.
getChOff()
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
Offset of alignment character.
getChoices()
- Method in class javax.security.auth.callback.
ChoiceCallback
Get the list of choices.
getChoosableFileFilters()
- Method in class javax.swing.
JFileChooser
Gets the list of user choosable file filters.
getChooserComboBoxFiles()
- Method in class javax.swing.filechooser.
FileSystemView
Returns an array of files representing the values which will be shown
 in the file chooser selector.
getChooserPanels()
- Method in class javax.swing.
JColorChooser
Returns the specified color panels.
getChooserShortcutPanelFiles()
- Method in class javax.swing.filechooser.
FileSystemView
Returns an array of files representing the values to show by default in
 the file chooser shortcuts panel.
getChronology()
- Method in interface java.time.chrono.
ChronoLocalDate
Gets the chronology of this date.
getChronology()
- Method in interface java.time.chrono.
ChronoLocalDateTime
Gets the chronology of this date-time.
getChronology()
- Method in interface java.time.chrono.
ChronoPeriod
Gets the chronology that defines the meaning of the supported units.
getChronology()
- Method in interface java.time.chrono.
ChronoZonedDateTime
Gets the chronology of this date-time.
getChronology()
- Method in class java.time.chrono.
HijrahDate
Gets the chronology of this date, which is the Hijrah calendar system.
getChronology()
- Method in class java.time.chrono.
JapaneseDate
Gets the chronology of this date, which is the Japanese calendar system.
getChronology()
- Method in class java.time.chrono.
MinguoDate
Gets the chronology of this date, which is the Minguo calendar system.
getChronology()
- Method in class java.time.chrono.
ThaiBuddhistDate
Gets the chronology of this date, which is the Thai Buddhist calendar system.
getChronology()
- Method in class java.time.format.
DateTimeFormatter
Gets the overriding chronology to be used during formatting.
getChronology()
- Method in class java.time.
LocalDate
Gets the chronology of this date, which is the ISO calendar system.
getChronology()
- Method in class java.time.
Period
Gets the chronology of this period, which is the ISO calendar system.
getCipherSuite()
- Method in class java.net.
SecureCacheResponse
Returns the cipher suite in use on the original connection that
 retrieved the network resource.
getCipherSuite()
- Method in class javax.net.ssl.
HandshakeCompletedEvent
Returns the cipher suite in use by the session which was produced
 by the handshake.
getCipherSuite()
- Method in class javax.net.ssl.
HttpsURLConnection
Returns the cipher suite in use on this connection.
getCipherSuite()
- Method in interface javax.net.ssl.
SSLSession
Returns the name of the SSL cipher suite which is used for all
 connections in the session.
getCipherSuites()
- Method in class com.sun.net.httpserver.
HttpsParameters
Returns a copy of the array of ciphersuites or
null
if none
 have been set.
getCipherSuites()
- Method in class javax.net.ssl.
SSLParameters
Returns a copy of the array of ciphersuites or null if none
 have been set.
getCite()
- Method in interface org.w3c.dom.html.
HTMLModElement
A URI designating a document that describes the reason for the change.
getCite()
- Method in interface org.w3c.dom.html.
HTMLQuoteElement
A URI designating a source document or message.
getCLA()
- Method in class javax.smartcardio.
CommandAPDU
Returns the value of the class byte CLA.
getClass()
- Method in class java.lang.
Object
Returns the runtime class of this
Object
.
getClass(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
Class
.
getClassAnnotation(Class<?>)
- Static method in class java.rmi.server.
RMIClassLoader
Returns the annotation string (representing a location for
 the class definition) that RMI will use to annotate the class
 descriptor when marshalling objects of the given class.
getClassAnnotation(Class<?>)
- Method in class java.rmi.server.
RMIClassLoaderSpi
Provides the implementation for
RMIClassLoader.getClassAnnotation(Class)
.
getClassBody()
- Method in interface com.sun.source.tree.
NewClassTree
Returns the class body if an anonymous class is being
 instantiated, and
null
otherwise.
getClassContext()
- Method in class java.lang.
SecurityManager
Deprecated.
Returns the current execution stack as an array of classes.
getClasses()
- Method in class java.lang.
Class
Returns an array containing
Class
objects representing all
 the public classes and interfaces that are members of the class
 represented by this
Class
object.
getClassGuard(Class<?>)
- Static method in class jdk.dynalink.linker.support.
Guards
Creates a guard method that tests its only argument for being of an exact particular class.
getClassLoader()
- Method in class java.lang.
Class
Returns the class loader for the class.
getClassLoader()
- Method in class java.lang.
Module
Returns the
ClassLoader
for this module.
getClassLoader()
- Method in class java.security.
ProtectionDomain
Returns the
ClassLoader
of this domain.
getClassLoader()
- Method in class jdk.jfr.consumer.
RecordedClass
Returns the class loader that defined the class.
getClassLoader(String)
- Static method in class java.rmi.server.
RMIClassLoader
Returns a class loader that loads classes from the given codebase
 URL path.
getClassLoader(String)
- Method in class java.rmi.server.
RMIClassLoaderSpi
Provides the implementation for
RMIClassLoader.getClassLoader(String)
.
getClassLoader(ObjectName)
- Method in interface javax.management.
MBeanServer
Return the named
ClassLoader
.
getClassLoader(JavaFileManager.Location)
- Method in class javax.tools.
ForwardingJavaFileManager
getClassLoader(JavaFileManager.Location)
- Method in interface javax.tools.
JavaFileManager
Returns a class loader for loading plug-ins from the given
 package-oriented location.
getClassLoaderFor(ObjectName)
- Method in interface javax.management.
MBeanServer
Return the
ClassLoader
that was used for
 loading the class of the named MBean.
getClassLoaderName()
- Method in class java.lang.
StackTraceElement
Returns the name of the class loader of the class containing the
 execution point represented by this stack trace element.
getClassLoaderRepository()
- Method in interface javax.management.
MBeanServer
Return the ClassLoaderRepository for this MBeanServer.
getClassLoaderRepository()
- Method in class javax.management.modelmbean.
RequiredModelMBean
Return the Class Loader Repository used to perform class loading.
getClassLoaderRepository(MBeanServer)
- Static method in class javax.management.
MBeanServerFactory
Return the ClassLoaderRepository used by the given MBeanServer.
getClassLoadingLock(String)
- Method in class java.lang.
ClassLoader
Returns the lock object for class loading operations.
getClassLoadingMXBean()
- Static method in class java.lang.management.
ManagementFactory
Returns the managed bean for the class loading system of
 the Java virtual machine.
getClassName()
- Method in class java.lang.management.
LockInfo
Returns the fully qualified name of the class of the lock object.
getClassName()
- Method in class java.lang.
StackTraceElement
Returns the fully qualified name of the class containing the
 execution point represented by this stack trace element.
getClassName()
- Method in interface java.lang.
StackWalker.StackFrame
Gets the
binary name
of the declaring class of the method represented by this stack frame.
getClassName()
- Method in class java.security.
Provider.Service
Return the name of the class implementing this service.
getClassName()
- Method in exception class java.util.
MissingResourceException
Gets parameter passed by constructor.
getClassName()
- Method in class javax.management.
MBeanInfo
Returns the name of the Java class of the MBean described by
 this
MBeanInfo
.
getClassName()
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns the name of the Java class of the MBean described by
 this
MBeanInfo
.
getClassName()
- Method in class javax.management.
ObjectInstance
Returns the class part.
getClassName()
- Method in interface javax.management.openmbean.
OpenMBeanInfo
Returns the fully qualified Java class name of the open MBean
 instances this
OpenMBeanInfo
describes.
getClassName()
- Method in class javax.management.openmbean.
OpenType
Returns the fully qualified Java class name of the open data values
 this open type describes.
getClassName()
- Method in class javax.naming.
Binding
Retrieves the class name of the object bound to the name of this binding.
getClassName()
- Method in class javax.naming.
NameClassPair
Retrieves the class name of the object bound to the name of this binding.
getClassName()
- Method in class javax.naming.
Reference
Retrieves the class name of the object to which this reference refers.
getClassName()
- Method in class javax.swing.
UIManager.LookAndFeelInfo
Returns the name of the class that implements this look and feel.
getClassName()
- Method in interface org.w3c.dom.html.
HTMLElement
The class attribute of the element.
getClassName(MBeanInfo)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the className that will be used in the MBeanInfo returned by
 this MBean.
getClassPath()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the Java class path that is used by the system class loader
 to search for class files.
getClear()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the clear property definition in CSS2.
getClear()
- Method in interface org.w3c.dom.html.
HTMLBRElement
Control flow of text around floats.
getClickCount()
- Method in class java.awt.event.
MouseEvent
Returns the number of mouse clicks associated with this event.
getClickCountToStart()
- Method in class javax.swing.
DefaultCellEditor
Returns the number of clicks needed to start editing.
getClient()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the client principal associated with this ticket.
getClientAddress()
- Method in class com.sun.net.httpserver.
HttpsParameters
Returns the address of the remote client initiating the connection.
getClientAddresses()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns a list of addresses from where the ticket can be used.
getClientAliases(String, Principal[])
- Method in interface javax.net.ssl.
X509KeyManager
Get the matching aliases for authenticating the client side of a secure
 socket given the public key type and the list of
 certificate issuer authorities recognized by the peer (if any).
getClientHost()
- Static method in class java.rmi.server.
RemoteServer
Returns a string representation of the client host for the
 remote method invocation being processed in the current thread.
getClientHost()
- Method in interface java.rmi.server.
ServerRef
Deprecated.
Returns the hostname of the current client.
getClientInfo()
- Method in interface java.sql.
Connection
Returns a list containing the name and current value of each client info
 property supported by the driver.
getClientInfo(String)
- Method in interface java.sql.
Connection
Returns the value of the client info property specified by name.
getClientInfoProperties()
- Method in interface java.sql.
DatabaseMetaData
Retrieves a list of the client info properties
 that the driver supports.
getClientProperty(Object)
- Method in class javax.swing.
JComponent
Returns the value of the property with the specified key.
getClientSessionContext()
- Method in class javax.net.ssl.
SSLContext
Returns the client session context, which represents the set of
 SSL sessions available for use during the handshake phase of
 client-side SSL sockets.
getClientX()
- Method in interface org.w3c.dom.events.
MouseEvent
The horizontal coordinate at which the event occurred relative to the
 DOM implementation's client area.
getClientY()
- Method in interface org.w3c.dom.events.
MouseEvent
The vertical coordinate at which the event occurred relative to the DOM
 implementation's client area.
getClip()
- Method in class java.awt.
Graphics
Gets the current clipping area.
getClip()
- Static method in class javax.sound.sampled.
AudioSystem
Obtains a clip that can be used for playing back an audio file or an
 audio stream.
getClip()
- Method in class javax.swing.
DebugGraphics
Overrides
Graphics.getClip
.
getClip()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the clip property definition in CSS2.
getClip(Mixer.Info)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains a clip from the specified mixer that can be used for playing back
 an audio file or an audio stream.
getClipBounds()
- Method in class java.awt.
Graphics
Returns the bounding rectangle of the current clipping area.
getClipBounds()
- Method in class javax.swing.
DebugGraphics
Overrides
Graphics.getClipBounds
.
getClipBounds(Rectangle)
- Method in class java.awt.
Graphics
Returns the bounding rectangle of the current clipping area.
getClippedString(JComponent, FontMetrics, String, int)
- Static method in class javax.swing.plaf.basic.
BasicGraphicsUtils
Clips the passed in string to the space provided.
getClipRect()
- Method in class java.awt.
Graphics
Deprecated.
As of JDK version 1.1,
 replaced by
getClipBounds()
.
getClob(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
CLOB
parameter as a
java.sql.Clob
object in the Java programming language.
getClob(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
Clob
object
 in the Java programming language.
getClob(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
CLOB
parameter as a
java.sql.Clob
object in the Java programming language.
getClob(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
Clob
object
 in the Java programming language.
getClosedException()
- Method in class java.util.concurrent.
SubmissionPublisher
Returns the exception associated with
closeExceptionally
, or null if
 not closed or if closed normally.
getClosedIcon()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the icon used to represent non-leaf nodes that are not
 expanded.
getClosestPathForLocation(int, int)
- Method in class javax.swing.
JTree
Returns the path to the node that is closest to x,y.
getClosestPathForLocation(JTree, int, int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the path to the node that is closest to x,y.
getClosestPathForLocation(JTree, int, int)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getClosestPathForLocation
method on each UI handled by this object.
getClosestPathForLocation(JTree, int, int)
- Method in class javax.swing.plaf.
TreeUI
Returns the path to the node that is closest to x,y.
getClosestPositionTo(int, Position.Bias, Shape, int, Position.Bias[], int, int)
- Method in class javax.swing.text.
ParagraphView
Returns the closest model position to
x
.
getClosestRowForLocation(int, int)
- Method in class javax.swing.
JTree
Returns the row to the node that is closest to x,y.
getCode()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the value of the
CODE
attribute of the
MLET
tag.
getCode()
- Method in interface javax.tools.
Diagnostic
Returns a diagnostic code indicating the type of diagnostic.
getCode()
- Method in class jdk.jshell.
Diag
Returns a diagnostic code indicating the type of diagnostic.
getCode()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Applet class file.
getCode()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Applet class file.
getCodeBase()
- Method in class java.applet.
Applet
Deprecated.
Gets the base
URL
.
getCodeBase()
- Method in interface java.applet.
AppletStub
Deprecated.
Gets the base
URL
.
getCodeBase()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the code base URL.
getCodeBase()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Optional base URI for applet.
getCodeBase()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Base URI for
classid
,
data
, and
archive
attributes.
getCodePoint()
- Method in exception class java.util.
IllegalFormatCodePointException
Returns the illegal code point as defined by
Character.isValidCodePoint(int)
.
getCodeSigners()
- Method in class java.security.
CodeSource
Returns the code signers associated with this
CodeSource
.
getCodeSigners()
- Method in class java.util.jar.
JarEntry
Returns the
CodeSigner
objects for this entry, or
null
if none.
getCodeSource()
- Method in class java.security.
ProtectionDomain
Returns the
CodeSource
of this domain.
getCodeType()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Content type for data downloaded via
classid
attribute.
getCofactor()
- Method in class java.security.spec.
ECParameterSpec
Returns the cofactor.
getCollapsed()
- Method in interface org.w3c.dom.ranges.
Range
TRUE if the Range is collapsed
getCollapsedIcon()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the collapsed icon.
getCollationElementIterator(String)
- Method in class java.text.
RuleBasedCollator
Returns a CollationElementIterator for the given String.
getCollationElementIterator(CharacterIterator)
- Method in class java.text.
RuleBasedCollator
Returns a CollationElementIterator for the given CharacterIterator.
getCollationKey(String)
- Method in class java.text.
Collator
Transforms the String into a series of bits that can be compared bitwise
 to other CollationKeys.
getCollationKey(String)
- Method in class java.text.
RuleBasedCollator
Transforms the string into a series of characters that can be compared
 with CollationKey.compareTo.
getCollection()
- Method in class java.security.cert.
CollectionCertStoreParameters
Returns the
Collection
from which
Certificate
s
 and
CRL
s are retrieved.
getCollectionCount()
- Method in interface java.lang.management.
GarbageCollectorMXBean
Returns the total number of collections that have occurred.
getCollectionTime()
- Method in interface java.lang.management.
GarbageCollectorMXBean
Returns the approximate accumulated collection elapsed time
 in milliseconds.
getCollectionUsage()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the memory usage after the Java virtual machine
 most recently expended effort in recycling unused objects
 in this memory pool.
getCollectionUsageThreshold()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the collection usage threshold value of this memory pool
 in bytes.
getCollectionUsageThresholdCount()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the number of times that the Java virtual machine
 has detected that the memory usage has reached or
 exceeded the collection usage threshold.
getColor()
- Method in class java.awt.
Graphics
Gets this graphics context's current color.
getColor()
- Method in class java.awt.
PageAttributes
Returns whether pages using these attributes will be rendered in
 color or monochrome.
getColor()
- Method in class javax.swing.
DebugGraphics
Returns the Color used for text drawing operations.
getColor()
- Method in class javax.swing.
JColorChooser
Gets the current color value from the color chooser.
getColor()
- Method in class javax.swing.text.
DefaultHighlighter.DefaultHighlightPainter
Returns the color of the highlight.
getColor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the color property definition in CSS2.
getColor()
- Method in interface org.w3c.dom.html.
HTMLBaseFontElement
Font color.
getColor()
- Method in interface org.w3c.dom.html.
HTMLFontElement
Font color.
getColor(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is a
Color
return it,
 otherwise return
null
.
getColor(Object)
- Static method in class javax.swing.
UIManager
Returns a color from the defaults.
getColor(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is a
Color
return it, otherwise return
null
.
getColor(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns a color from the defaults that is appropriate
 for the given locale.
getColor(String)
- Static method in class java.awt.
Color
Finds a color in the system properties.
getColor(String, int)
- Static method in class java.awt.
Color
Finds a color in the system properties.
getColor(String, Color)
- Static method in class java.awt.
Color
Finds a color in the system properties.
getColor(SynthContext, ColorType)
- Method in class javax.swing.plaf.synth.
SynthStyle
Returns the color for the specified state.
getColor1()
- Method in class java.awt.
GradientPaint
Returns the color C1 anchored by the point P1.
getColor2()
- Method in class java.awt.
GradientPaint
Returns the color C2 anchored by the point P2.
getColorComponents(float[])
- Method in class java.awt.
Color
Returns a
float
array containing only the color
 components of the
Color
, in the
ColorSpace
of the
Color
.
getColorComponents(ColorSpace, float[])
- Method in class java.awt.
Color
Returns a
float
array containing only the color
 components of the
Color
in the
ColorSpace
specified by the
cspace
parameter.
getColorForGap(int, int, int)
- Method in class javax.swing.plaf.metal.
MetalTabbedPaneUI
Returns the color of the gap.
getColorForState(SynthContext, ColorType)
- Method in class javax.swing.plaf.nimbus.
NimbusStyle
Returns the color for the specified state.
getColorForState(SynthContext, ColorType)
- Method in class javax.swing.plaf.synth.
SynthStyle
Returns the color for the specified state.
getColorFromModel()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Returns the color that is currently selected.
getColorModel()
- Method in class java.awt.
Component
Gets the instance of
ColorModel
used to display
 the component on the output device.
getColorModel()
- Method in class java.awt.
GraphicsConfiguration
Returns the
ColorModel
associated with this
GraphicsConfiguration
.
getColorModel()
- Method in class java.awt.image.
BufferedImage
Returns the
ColorModel
.
getColorModel()
- Method in class java.awt.image.
PixelGrabber
Get the ColorModel for the pixels stored in the array.
getColorModel()
- Method in interface java.awt.image.
RenderedImage
Returns the ColorModel associated with this image.
getColorModel()
- Method in interface java.awt.
PaintContext
Returns the
ColorModel
of the output.
getColorModel()
- Method in class java.awt.
Toolkit
Determines the color model of this toolkit's screen.
getColorModel()
- Method in class javax.imageio.
ImageTypeSpecifier
Returns the
ColorModel
specified by this object.
getColorModel(int)
- Method in class java.awt.
GraphicsConfiguration
Returns the
ColorModel
associated with this
GraphicsConfiguration
that supports the specified
 transparency.
getColors()
- Method in class java.awt.
MultipleGradientPaint
Returns a copy of the array of colors used by this gradient.
getColorSelectionModel()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Returns the model that the chooser panel is editing.
getColorSpace()
- Method in class java.awt.
Color
Returns the
ColorSpace
of this
Color
.
getColorSpace()
- Method in class java.awt.image.
ColorModel
Returns the
ColorSpace
associated with this
ColorModel
.
getColorSpace()
- Method in class java.awt.
MultipleGradientPaint
Returns the enumerated type which specifies color space for
 interpolation.
getColorSpaceType()
- Method in class java.awt.color.
ICC_Profile
Returns the color space type.
getCols()
- Method in interface org.w3c.dom.html.
HTMLFrameSetElement
The number of columns of frames in the frameset.
getCols()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Width of control (in characters).
getColSpan()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Number of columns spanned by cell.
getColumn()
- Method in class javax.swing.event.
TableModelEvent
Returns the column for the event.
getColumn()
- Method in class javax.swing.
JTable.DropLocation
Returns the column index where a dropped item should be placed in the
 table.
getColumn()
- Method in class javax.swing.
RowSorter.SortKey
Returns the index of the column.
getColumn(int)
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns the
TableColumn
object for the column
 at
columnIndex
.
getColumn(int)
- Method in interface javax.swing.table.
TableColumnModel
Returns the
TableColumn
object for the column at
columnIndex
.
getColumn(Object)
- Method in class javax.swing.
JTable
Returns the
TableColumn
object for the column in the table
 whose identifier is equal to
identifier
, when compared using
equals
.
getColumnClass(int)
- Method in class javax.swing.
JTable
Returns the type of the column appearing in the view at
 column position
column
.
getColumnClass(int)
- Method in class javax.swing.table.
AbstractTableModel
Returns
Object.class
regardless of
columnIndex
.
getColumnClass(int)
- Method in interface javax.swing.table.
TableModel
Returns the most specific superclass for all the cell values
 in the column.
getColumnClassName(int)
- Method in interface java.sql.
ResultSetMetaData
Returns the fully-qualified name of the Java class whose instances
 are manufactured if the method
ResultSet.getObject
is called to retrieve a value
 from the column.
getColumnClassName(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the fully-qualified name of the class in the Java
 programming language to which a value in the designated column
 will be mapped.
getColumnCount()
- Method in interface java.sql.
ResultSetMetaData
Returns the number of columns in this
ResultSet
object.
getColumnCount()
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the number of columns in the
RowSet
object
 for which this
RowSetMetaDataImpl
object was created.
getColumnCount()
- Method in class javax.swing.
DefaultRowSorter.ModelWrapper
Returns the number of columns in the model.
getColumnCount()
- Method in class javax.swing.
JTable
Returns the number of columns in the column model.
getColumnCount()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns the number of columns in the
tableColumns
array.
getColumnCount()
- Method in class javax.swing.table.
DefaultTableModel
Returns the number of columns in this data table.
getColumnCount()
- Method in interface javax.swing.table.
TableColumnModel
Returns the number of columns in the model.
getColumnCount()
- Method in interface javax.swing.table.
TableModel
Returns the number of columns in the model.
getColumnCount()
- Method in class javax.swing.text.
TableView.TableCell
Deprecated.
Gets the number of columns this cell spans (e.g. the
 grid width).
getColumnDisplaySize(int)
- Method in interface java.sql.
ResultSetMetaData
Indicates the designated column's normal maximum width in characters.
getColumnDisplaySize(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the normal maximum width in chars of the designated column.
getColumnHeader()
- Method in class javax.swing.
JScrollPane
Returns the column header.
getColumnHeader()
- Method in class javax.swing.
ScrollPaneLayout
Returns the
JViewport
object that is the column header.
getColumnIndex(Object)
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns the index of the first column in the
tableColumns
array whose identifier is equal to
identifier
,
 when compared using
equals
.
getColumnIndex(Object)
- Method in interface javax.swing.table.
TableColumnModel
Returns the index of the first column in the table
 whose identifier is equal to
identifier
,
 when compared using
equals
.
getColumnIndexAtX(int)
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns the index of the column that lies at position
x
,
 or -1 if no column covers this point.
getColumnIndexAtX(int)
- Method in interface javax.swing.table.
TableColumnModel
Returns the index of the column that lies on the
 horizontal point,
xPosition
;
 or -1 if it lies outside the any of the column's bounds.
getColumnLabel(int)
- Method in interface java.sql.
ResultSetMetaData
Gets the designated column's suggested title for use in printouts and
 displays.
getColumnLabel(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the suggested column title for the designated
 column for use in printouts and displays.
getColumnMargin()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns the width margin for
TableColumn
.
getColumnMargin()
- Method in interface javax.swing.table.
TableColumnModel
Returns the width between the cells in each column.
getColumnModel()
- Method in class javax.swing.
JTable
Returns the
TableColumnModel
that contains all column information
 of this table.
getColumnModel()
- Method in class javax.swing.table.
JTableHeader
Returns the
TableColumnModel
that contains all column information
 of this table header.
getColumnModelListeners()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns an array of all the column model listeners
 registered on this model.
getColumnName(int)
- Method in interface java.sql.
ResultSetMetaData
Get the designated column's name.
getColumnName(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the name of the designated column.
getColumnName(int)
- Method in class javax.swing.
JTable
Returns the name of the column appearing in the view at
 column position
column
.
getColumnName(int)
- Method in class javax.swing.table.
AbstractTableModel
Returns a default name for the column using spreadsheet conventions:
  A, B, C, ...
getColumnName(int)
- Method in class javax.swing.table.
DefaultTableModel
Returns the column name.
getColumnName(int)
- Method in interface javax.swing.table.
TableModel
Returns the name of the column at
columnIndex
.
getColumnNumber()
- Method in exception class javax.script.
ScriptException
Get the column number on which an error occurred.
getColumnNumber()
- Method in interface javax.tools.
Diagnostic
Returns the column number of the character offset returned by
Diagnostic.getPosition()
.
getColumnNumber()
- Method in interface javax.xml.stream.
Location
Return the column number where the current event ends,
 returns -1 if none is available.
getColumnNumber()
- Method in interface javax.xml.transform.
SourceLocator
Return the character position where the current document event ends.
getColumnNumber()
- Method in interface org.w3c.dom.
DOMLocator
The column number this locator is pointing to, or
-1
if
 there is no column number available.
getColumnNumber()
- Method in class org.xml.sax.helpers.
LocatorImpl
Return the saved column number (1-based).
getColumnNumber()
- Method in interface org.xml.sax.
Locator
Return the column number where the current document event ends.
getColumnNumber()
- Method in exception class org.xml.sax.
SAXParseException
The column number of the end of the text where the exception occurred.
getColumnNumber(long)
- Method in interface com.sun.source.tree.
LineMap
Finds the column for a character position.
getColumnPrivileges(String, String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the access rights for a table's columns.
getColumns()
- Method in class java.awt.
GridLayout
Gets the number of columns in this layout.
getColumns()
- Method in class java.awt.
TextArea
Returns the number of columns in this text area.
getColumns()
- Method in class java.awt.
TextField
Gets the number of columns in this text field.
getColumns()
- Method in class javax.swing.
JTextArea
Returns the number of columns in the TextArea.
getColumns()
- Method in class javax.swing.
JTextField
Returns the number of columns in this
TextField
.
getColumns()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns an
Enumeration
of all the columns in the model.
getColumns()
- Method in interface javax.swing.table.
TableColumnModel
Returns an
Enumeration
of all the columns in the model.
getColumns(String, String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of table columns available in
 the specified catalog.
getColumnSelectionAllowed()
- Method in class javax.swing.
JTable
Returns true if columns can be selected.
getColumnSelectionAllowed()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns true if column selection is allowed, otherwise false.
getColumnSelectionAllowed()
- Method in interface javax.swing.table.
TableColumnModel
Returns true if columns may be selected.
getColumnType(int)
- Method in interface java.sql.
ResultSetMetaData
Retrieves the designated column's SQL type.
getColumnType(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the type code (one of the
java.sql.Types
constants) for the SQL type of the value stored in the
 designated column.
getColumnTypeName(int)
- Method in interface java.sql.
ResultSetMetaData
Retrieves the designated column's database-specific type name.
getColumnTypeName(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the DBMS-specific type name for values stored in the
 designated column.
getColumnWidth()
- Method in class javax.swing.
JTextArea
Gets column width.
getColumnWidth()
- Method in class javax.swing.
JTextField
Returns the column width.
getComboBox()
- Method in class javax.swing.plaf.metal.
MetalComboBoxButton
Returns the
JComboBox
.
getComboIcon()
- Method in class javax.swing.plaf.metal.
MetalComboBoxButton
Returns the icon of the
JComboBox
.
getCommand()
- Method in class javax.sound.midi.
ShortMessage
Obtains the MIDI command associated with this event.
getCommand()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves the SQL query that is the command for this
RowSet
object.
getCommand()
- Method in interface javax.sql.
RowSet
Retrieves this
RowSet
object's command property.
getComment()
- Method in class java.net.
HttpCookie
Returns the comment describing the purpose of this cookie, or
null
if the cookie has no comment.
getComment()
- Method in class java.util.zip.
ZipEntry
Returns the comment string for the entry.
getComment()
- Method in class java.util.zip.
ZipFile
Returns the zip file comment, or null if none.
getCommentURL()
- Method in class java.net.
HttpCookie
Returns the comment URL describing the purpose of this cookie, or
null
if the cookie has no comment URL.
getCommitsOnValidEdit()
- Method in class javax.swing.text.
DefaultFormatter
Returns when edits are published back to the
JFormattedTextField
.
getCommitted()
- Method in class java.lang.management.
MemoryUsage
Returns the amount of memory in bytes that is committed for
 the Java virtual machine to use.
getCommittedCharacterCount()
- Method in class java.awt.event.
InputMethodEvent
Gets the number of committed characters in the text.
getCommittedText(int, int, AttributedCharacterIterator.Attribute[])
- Method in interface java.awt.im.
InputMethodRequests
Gets an iterator providing access to the entire text and attributes
 contained in the text editing component except for uncommitted
 text.
getCommittedTextLength()
- Method in interface java.awt.im.
InputMethodRequests
Gets the length of the entire text contained in the text
 editing component except for uncommitted (composed) text.
getCommittedVirtualMemorySize()
- Method in interface com.sun.management.
OperatingSystemMXBean
Returns the amount of virtual memory that is guaranteed to
 be available to the running process in bytes,
 or
-1
if this operation is not supported.
getCommonAncestorContainer()
- Method in interface org.w3c.dom.ranges.
Range
The deepest common ancestor container of the Range's two
 boundary-points.
getCommonPoolParallelism()
- Static method in class java.util.concurrent.
ForkJoinPool
Returns the targeted parallelism level of the common pool.
getCompact()
- Method in interface org.w3c.dom.html.
HTMLDirectoryElement
Reduce spacing between list items.
getCompact()
- Method in interface org.w3c.dom.html.
HTMLDListElement
Reduce spacing between list items.
getCompact()
- Method in interface org.w3c.dom.html.
HTMLMenuElement
Reduce spacing between list items.
getCompact()
- Method in interface org.w3c.dom.html.
HTMLOListElement
Reduce spacing between list items.
getCompact()
- Method in interface org.w3c.dom.html.
HTMLUListElement
Reduce spacing between list items.
getCompactNumberInstance()
- Static method in class java.text.
NumberFormat
Returns a compact number format for the default
FORMAT
locale with
"SHORT"
format style.
getCompactNumberInstance(Locale, NumberFormat.Style)
- Static method in class java.text.
NumberFormat
Returns a compact number format for the specified
locale
and
formatStyle
.
getCompactNumberInstance(Locale, NumberFormat.Style)
- Method in class java.text.spi.
NumberFormatProvider
Returns a new
NumberFormat
instance which formats
 a number in its compact form for the specified
locale
and
formatStyle
.
getComparator()
- Method in interface java.util.
Spliterator
If this Spliterator's source is
Spliterator.SORTED
by a
Comparator
,
 returns that
Comparator
.
getComparator()
- Method in class javax.swing.
SortingFocusTraversalPolicy
Returns the Comparator which will be used to sort the Components in a
 focus traversal cycle.
getComparator(int)
- Method in class javax.swing.
DefaultRowSorter
Returns the
Comparator
for the specified
 column.
getComparator(int)
- Method in class javax.swing.table.
TableRowSorter
Returns the
Comparator
for the specified
 column.
getCompilationMXBean()
- Static method in class java.lang.management.
ManagementFactory
Returns the managed bean for the compilation system of
 the Java virtual machine.
getCompilationUnit()
- Method in class com.sun.source.util.
TaskEvent
Returns the compilation unit for this event.
getCompilationUnit()
- Method in class com.sun.source.util.
TreePath
Returns the compilation unit associated with this path.
getCompletedTaskCount()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the approximate total number of tasks that have
 completed execution.
getCompleter()
- Method in class java.util.concurrent.
CountedCompleter
Returns the completer established in this task's constructor,
 or
null
if none.
getCompletions(Element, AnnotationMirror, ExecutableElement, String)
- Method in class javax.annotation.processing.
AbstractProcessor
Returns an empty iterable of completions.
getCompletions(Element, AnnotationMirror, ExecutableElement, String)
- Method in interface javax.annotation.processing.
Processor
Returns to the tool infrastructure an iterable of suggested
 completions to an annotation.
getComponent()
- Method in class java.awt.dnd.
DragGestureEvent
Returns the
Component
associated
 with this
DragGestureEvent
.
getComponent()
- Method in class java.awt.dnd.
DragGestureRecognizer
This method returns the
Component
that is to be "observed" by the
DragGestureRecognizer
for drag initiating gestures.
getComponent()
- Method in class java.awt.dnd.
DragSourceContext
Returns the
Component
associated with this
DragSourceContext
.
getComponent()
- Method in class java.awt.dnd.
DropTarget
Gets the
Component
associated
 with this
DropTarget
.
getComponent()
- Method in class java.awt.dnd.
DropTargetContext
This method returns the
Component
associated with
 this
DropTargetContext
.
getComponent()
- Method in class java.awt.event.
ComponentEvent
Returns the originator of the event.
getComponent()
- Method in class java.awt.event.
HierarchyEvent
Returns the originator of the event.
getComponent()
- Method in interface java.beans.beancontext.
BeanContextChildComponentProxy
Gets the
java.awt.Component
associated with
 this
BeanContextChild
.
getComponent()
- Method in class javax.swing.
ComponentInputMap
Returns the component the
InputMap
was created for.
getComponent()
- Method in class javax.swing.
DefaultCellEditor
Returns a reference to the editor component.
getComponent()
- Method in class javax.swing.event.
AncestorEvent
Returns the component that the listener was added to.
getComponent()
- Method in class javax.swing.
JMenu
Returns the
java.awt.Component
used to
 paint this
MenuElement
.
getComponent()
- Method in class javax.swing.
JMenuBar
Implemented to be a
MenuElement
.
getComponent()
- Method in class javax.swing.
JMenuItem
Returns the
java.awt.Component
used to paint
 this object.
getComponent()
- Method in class javax.swing.
JPopupMenu
Returns this
JPopupMenu
component.
getComponent()
- Method in class javax.swing.
JToolTip
Returns the component the tooltip applies to.
getComponent()
- Method in interface javax.swing.
MenuElement
This method should return the
java.awt.Component
used to paint the
 receiving element.
getComponent()
- Method in class javax.swing.plaf.basic.
BasicTextUI
Fetches the text component associated with this
 UI implementation.
getComponent()
- Method in class javax.swing.plaf.synth.
SynthContext
Returns the hosting component containing the region.
getComponent()
- Method in interface javax.swing.
Renderer
Returns the component used to render the value.
getComponent()
- Method in class javax.swing.text.
ComponentView
Fetch the component associated with the view.
getComponent()
- Method in class javax.swing.text.
DefaultCaret
Gets the text editor component that this caret is
 is bound to.
getComponent()
- Method in class javax.swing.
TransferHandler.TransferSupport
Returns the target component of this transfer.
getComponent(int)
- Method in class java.awt.
Container
Gets the nth component in this container.
getComponent(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the component setting from the attribute list.
getComponentAfter(Container, Component)
- Method in class java.awt.
ContainerOrderFocusTraversalPolicy
Returns the Component that should receive the focus after aComponent.
getComponentAfter(Container, Component)
- Method in class java.awt.
FocusTraversalPolicy
Returns the Component that should receive the focus after aComponent.
getComponentAfter(Container, Component)
- Method in class javax.swing.
DefaultFocusManager
Returns the component after.
getComponentAfter(Container, Component)
- Method in class javax.swing.
LayoutFocusTraversalPolicy
Returns the Component that should receive the focus after aComponent.
getComponentAfter(Container, Component)
- Method in class javax.swing.
SortingFocusTraversalPolicy
Returns the Component that should receive the focus after aComponent.
getComponentAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the component at
index
.
getComponentAt(int, int)
- Method in class java.awt.
Component
Determines if this component or one of its immediate
 subcomponents contains the (
x
,
y
) location,
 and if so, returns the containing component.
getComponentAt(int, int)
- Method in class java.awt.
Container
Locates the component that contains the x,y position.
getComponentAt(Point)
- Method in class java.awt.
Component
Returns the component or subcomponent that contains the
 specified point.
getComponentAt(Point)
- Method in class java.awt.
Container
Gets the component that contains the specified point.
getComponentAtIndex(int)
- Method in class javax.swing.
JMenuBar
Deprecated.
replaced by
getComponent(int i)
getComponentAtIndex(int)
- Method in class javax.swing.
JPopupMenu
Deprecated.
replaced by
Container.getComponent(int)
getComponentAtIndex(int)
- Method in class javax.swing.
JToolBar
Returns the component at the specified index.
getComponentBefore(Container, Component)
- Method in class java.awt.
ContainerOrderFocusTraversalPolicy
Returns the Component that should receive the focus before aComponent.
getComponentBefore(Container, Component)
- Method in class java.awt.
FocusTraversalPolicy
Returns the Component that should receive the focus before aComponent.
getComponentBefore(Container, Component)
- Method in class javax.swing.
DefaultFocusManager
Returns the component before.
getComponentBefore(Container, Component)
- Method in class javax.swing.
LayoutFocusTraversalPolicy
Returns the Component that should receive the focus before aComponent.
getComponentBefore(Container, Component)
- Method in class javax.swing.
SortingFocusTraversalPolicy
Returns the Component that should receive the focus before aComponent.
getComponentColor(JComponent, String, Color, float, float, int)
- Method in class javax.swing.plaf.nimbus.
AbstractRegionPainter
Get a color property from the given JComponent.
getComponentCount()
- Method in class java.awt.
Container
Gets the number of components in this panel.
getComponentCountInLayer(int)
- Method in class javax.swing.
JLayeredPane
Returns the number of children currently in the specified layer.
getComponentGraphics(Graphics)
- Method in class javax.swing.
JComponent
Returns the graphics object used to paint this component.
getComponentIndex(Component)
- Method in class javax.swing.
JMenuBar
Returns the index of the specified component.
getComponentIndex(Component)
- Method in class javax.swing.
JPopupMenu
Returns the index of the specified component.
getComponentIndex(Component)
- Method in class javax.swing.
JToolBar
Returns the index of the specified component.
getComponentListeners()
- Method in class java.awt.
Component
Returns an array of all the component listeners
 registered on this component.
getComponentOrientation()
- Method in class java.awt.
Component
Retrieves the language-sensitive orientation that is to be used to order
 the elements or text within this component.
getComponentPopupMenu()
- Method in class javax.swing.
JComponent
Returns
JPopupMenu
that assigned for this component.
getComponents()
- Method in class java.awt.
Container
Gets all the components in this container.
getComponents(float[])
- Method in class java.awt.
Color
Returns a
float
array containing the color and alpha
 components of the
Color
, in the
ColorSpace
of the
Color
.
getComponents(int, int[], int)
- Method in class java.awt.image.
ColorModel
Returns an array of unnormalized color/alpha components given a pixel
 in this
ColorModel
.
getComponents(int, int[], int)
- Method in class java.awt.image.
ComponentColorModel
Returns an array of unnormalized color/alpha components given a pixel
 in this
ColorModel
.
getComponents(int, int[], int)
- Method in class java.awt.image.
DirectColorModel
Returns an array of unnormalized color/alpha components given a pixel
 in this
ColorModel
.
getComponents(int, int[], int)
- Method in class java.awt.image.
IndexColorModel
Returns an array of unnormalized color/alpha components for a
 specified pixel in this
ColorModel
.
getComponents(ColorSpace, float[])
- Method in class java.awt.
Color
Returns a
float
array containing the color and alpha
 components of the
Color
, in the
ColorSpace
specified by the
cspace
parameter.
getComponents(Object, int[], int)
- Method in class java.awt.image.
ColorModel
Returns an array of unnormalized color/alpha components given a pixel
 in this
ColorModel
.
getComponents(Object, int[], int)
- Method in class java.awt.image.
ComponentColorModel
Returns an array of unnormalized color/alpha components given a pixel
 in this
ColorModel
.
getComponents(Object, int[], int)
- Method in class java.awt.image.
DirectColorModel
Returns an array of unnormalized color/alpha components given a pixel
 in this
ColorModel
.
getComponents(Object, int[], int)
- Method in class java.awt.image.
IndexColorModel
Returns an array of unnormalized color/alpha components for
 a specified pixel in this
ColorModel
.
getComponentsInLayer(int)
- Method in class javax.swing.
JLayeredPane
Returns an array of the components in the specified layer.
getComponentSize()
- Method in class java.awt.image.
ColorModel
Returns an array of the number of bits per color/alpha component.
getComponentSize()
- Method in class java.awt.image.
IndexColorModel
Returns an array of the number of bits for each color/alpha component.
getComponentSize(int)
- Method in class java.awt.image.
ColorModel
Returns the number of bits for the specified color/alpha component.
getComponentState()
- Method in class javax.swing.plaf.synth.
SynthContext
Returns the state of the widget, which is a bitmask of the
 values defined in
SynthConstants
.
getComponentToLayer()
- Method in class javax.swing.
JLayeredPane
Returns the hashtable that maps components to layers.
getComponentType()
- Method in class java.lang.
Class
Returns the
Class
representing the component type of an
 array.
getComponentType()
- Method in interface javax.lang.model.type.
ArrayType
Returns the component type of this array type.
getComponentWithFocus()
- Static method in class com.sun.java.accessibility.util.
AWTEventMonitor
Returns the component that currently has keyboard focus.
getComponentZOrder(Component)
- Method in class java.awt.
Container
Returns the z-order index of the component inside the container.
getComposite()
- Method in class java.awt.
Graphics2D
Returns the current
Composite
in the
Graphics2D
context.
getCompositeData()
- Method in class javax.management.openmbean.
CompositeDataInvocationHandler
Return the
CompositeData
that was supplied to the
       constructor.
getCompositeType()
- Method in class com.sun.management.
GcInfo
getCompositeType()
- Method in interface javax.management.openmbean.
CompositeData
Returns the
composite type
of this
composite data
instance.
getCompositeType()
- Method in class javax.management.openmbean.
CompositeDataSupport
Returns the
composite type
of this
composite data
instance.
getCompressedSize()
- Method in class java.util.zip.
ZipEntry
Returns the size of the compressed entry data.
getCompressionMode()
- Method in class javax.imageio.
ImageWriteParam
Returns the current compression mode, if compression is
 supported.
getCompressionQuality()
- Method in class javax.imageio.
ImageWriteParam
Returns the current compression quality setting.
getCompressionQualityDescriptions()
- Method in class javax.imageio.
ImageWriteParam
Returns an array of
String
s that may be used along
 with
getCompressionQualityValues
as part of a user
 interface for setting or displaying the compression quality
 level.
getCompressionQualityValues()
- Method in class javax.imageio.
ImageWriteParam
Returns an array of
float
s that may be used along
 with
getCompressionQualityDescriptions
as part of a user
 interface for setting or displaying the compression quality
 level.
getCompressionThreshold()
- Method in class javax.swing.text.
StyleContext
Returns the maximum number of key/value pairs to try and
 compress into unique/immutable sets.
getCompressionType()
- Method in class javax.imageio.
ImageWriteParam
Returns the currently set compression type, or
null
if none has been set.
getCompressionTypes()
- Method in class javax.imageio.
ImageWriteParam
Returns a list of available compression types, as an array or
String
s, or
null
if a compression
 type may not be chosen using these interfaces.
getComputedStyle(Element, String)
- Method in interface org.w3c.dom.css.
ViewCSS
This method is used to get the computed style as it is defined in [
CSS2
].
getConcurrency()
- Method in interface java.sql.
ResultSet
Retrieves the concurrency mode of this
ResultSet
object.
getConcurrency()
- Method in class javax.sql.rowset.
BaseRowSet
Returns the concurrency for this
RowSet
object.
getCondition()
- Method in interface com.sun.source.tree.
AssertTree
Returns the condition being asserted.
getCondition()
- Method in interface com.sun.source.tree.
ConditionalExpressionTree
Returns the condition.
getCondition()
- Method in interface com.sun.source.tree.
DoWhileLoopTree
Returns the condition of the loop.
getCondition()
- Method in interface com.sun.source.tree.
ForLoopTree
Returns the condition of the
for
statement.
getCondition()
- Method in interface com.sun.source.tree.
IfTree
Returns the condition of the if-statement.
getCondition()
- Method in interface com.sun.source.tree.
WhileLoopTree
Returns the condition of the loop.
getConditionForKeyStroke(KeyStroke)
- Method in class javax.swing.
JComponent
Returns the condition that determines whether a registered action
 occurs in response to the specified keystroke.
getConfiguration()
- Method in class java.security.
DomainLoadStoreParameter
Gets the identifier for the domain configuration data.
getConfiguration()
- Static method in class javax.security.auth.login.
Configuration
Get the installed login Configuration.
getConfiguration(String)
- Static method in class jdk.jfr.
Configuration
Returns a predefined configuration.
getConfigurations()
- Method in class java.awt.
GraphicsDevice
Returns all of the
GraphicsConfiguration
objects associated with this
GraphicsDevice
.
getConfigurations()
- Static method in class jdk.jfr.
Configuration
Returns an immutable list of predefined configurations for this Java Virtual Machine (JVM).
getConfigurations()
- Method in class jdk.jfr.consumer.
MetadataEvent
Returns a list of configurations.
getConfigurations()
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Returns the list of predefined configurations for this Java Virtual Machine (JVM).
getConflictValue(int)
- Method in interface javax.sql.rowset.spi.
SyncResolver
Retrieves the value in the designated column in the current row of this
SyncResolver
object, which is the value in the data source
 that caused a conflict.
getConflictValue(String)
- Method in interface javax.sql.rowset.spi.
SyncResolver
Retrieves the value in the designated column in the current row of this
SyncResolver
object, which is the value in the data source
 that caused a conflict.
getConfState()
- Method in interface org.ietf.jgss.
GSSContext
Determines if data confidentiality is available
 over the context.
getConnectControls()
- Method in class javax.naming.ldap.
InitialLdapContext
getConnectControls()
- Method in interface javax.naming.ldap.
LdapContext
Retrieves the connection request controls in effect for this context.
getConnection()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the connection that produced this metadata object.
getConnection()
- Method in interface java.sql.
Statement
Retrieves the
Connection
object
 that produced this
Statement
object.
getConnection()
- Method in interface javax.sql.
DataSource
Attempts to establish a connection with the data source that
 this
DataSource
object represents.
getConnection()
- Method in interface javax.sql.
PooledConnection
Creates and returns a
Connection
object that is a handle
 for the physical connection that
 this
PooledConnection
object represents.
getConnection()
- Method in interface javax.sql.
RowSetInternal
Retrieves the
Connection
object that was passed to this
RowSet
object.
getConnection(String)
- Static method in class java.sql.
DriverManager
Attempts to establish a connection to the given database URL.
getConnection(String, String)
- Method in interface javax.sql.
DataSource
Attempts to establish a connection with the data source that
 this
DataSource
object represents.
getConnection(String, String, String)
- Static method in class java.sql.
DriverManager
Attempts to establish a connection to the given database URL.
getConnection(String, Properties)
- Static method in class java.sql.
DriverManager
Attempts to establish a connection to the given database URL.
getConnectionId()
- Method in class javax.management.remote.
JMXConnectionNotification
The connection ID to which this notification pertains.
getConnectionId()
- Method in interface javax.management.remote.
JMXConnector
Gets this connection's ID from the connector server.
getConnectionId()
- Method in interface javax.management.remote.rmi.
RMIConnection
Returns the connection ID.
getConnectionId()
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
getConnectionId()
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
getConnectionId()
- Method in class javax.management.remote.rmi.
RMIConnector
getConnectionIds()
- Method in class javax.management.remote.
JMXConnectorServer
getConnectionIds()
- Method in interface javax.management.remote.
JMXConnectorServerMBean
The list of IDs for currently-open connections to this
 connector server.
getConnectionState()
- Method in interface com.sun.tools.jconsole.
JConsoleContext
Returns the current connection state.
getConnectTimeout()
- Method in class java.net.
URLConnection
Returns setting for connect timeout.
getConstantExpression()
- Method in interface com.sun.source.tree.
ConstantCaseLabelTree
The constant expression for the case.
getConstantExpression(Object)
- Method in interface javax.lang.model.util.
Elements
Returns the text of a
constant expression
representing a
 primitive value or a string.
getConstantValue()
- Method in interface javax.lang.model.element.
VariableElement
Returns the value of this variable if this is a
final
field initialized to a compile-time constant.
getConstraint(String)
- Method in class javax.swing.
SpringLayout.Constraints
Returns the value of the specified edge, which may be
 a derived value, or even
null
.
getConstraint(String, Component)
- Method in class javax.swing.
SpringLayout
Returns the spring controlling the distance between
 the specified edge of
 the component and the top or left edge of its parent.
getConstraints(Component)
- Method in class java.awt.
BorderLayout
Gets the constraints for the specified component
getConstraints(Component)
- Method in class java.awt.
GridBagLayout
Gets the constraints for the specified component.
getConstraints(Component)
- Method in class javax.swing.
SpringLayout
Returns the constraints for the specified component.
getConstructor(Class<?>...)
- Method in class java.lang.
Class
Returns a
Constructor
object that reflects the specified
 public constructor of the class represented by this
Class
object.
getConstructor(String)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
Returns the ModelMBeanConstructorInfo requested by name.
getConstructorMethod(Class<?>, String)
- Static method in class jdk.dynalink.beans.
BeansLinker
Return the dynamic method of constructor of the given class and the given
 signature.
getConstructors()
- Method in class java.lang.
Class
Returns an array containing
Constructor
objects reflecting
 all the public constructors of the class represented by this
Class
object.
getConstructors()
- Method in class javax.management.
MBeanInfo
Returns the list of the public constructors of the MBean.
getConstructors()
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns the list of the public constructors  of the MBean.
getConstructors()
- Method in interface javax.management.openmbean.
OpenMBeanInfo
Returns an array of
OpenMBeanConstructorInfo
instances
 describing each constructor in the open MBean described by this
OpenMBeanInfo
instance.
getConstructors(MBeanConstructorInfo[], Object)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the MBeanConstructorInfo[] that will be used in the MBeanInfo
 returned by this MBean.
getContainer()
- Method in class java.awt.event.
ContainerEvent
Returns the originator of the event.
getContainer()
- Method in interface java.beans.beancontext.
BeanContextContainerProxy
Gets the
java.awt.Container
associated
 with this
BeanContext
.
getContainer()
- Method in class javax.swing.text.
View
Fetches the container hosting the view.
getContainerGap(JComponent, int, Container)
- Method in class javax.swing.
LayoutStyle
Returns the amount of space to place between the component and specified
 edge of its parent.
getContainerListeners()
- Method in class java.awt.
Container
Returns an array of all the container listeners
 registered on this container.
getContent()
- Method in interface com.sun.source.doctree.
UnknownBlockTagTree
Returns the content of an unrecognized block tag.
getContent()
- Method in interface com.sun.source.doctree.
UnknownInlineTagTree
Returns the content of an unrecognized inline tag.
getContent()
- Method in class java.net.
URL
Gets the contents of this URL.
getContent()
- Method in class java.net.
URLConnection
Retrieves the contents of this URL connection.
getContent()
- Method in class javax.naming.
BinaryRefAddr
Retrieves the contents of this address as an Object.
getContent()
- Method in class javax.naming.
RefAddr
Retrieves the contents of this address.
getContent()
- Method in class javax.naming.
StringRefAddr
Retrieves the contents of this address.
getContent()
- Method in class javax.swing.text.
AbstractDocument
Gets the content for the document.
getContent()
- Method in class javax.swing.text.html.parser.
Element
Get content model
getContent()
- Method in interface javax.xml.crypto.dsig.keyinfo.
KeyInfo
Returns an
unmodifiable
 list
containing the key information.
getContent()
- Method in interface javax.xml.crypto.dsig.keyinfo.
X509Data
Returns an
unmodifiable
 list
of the content in this
X509Data
.
getContent()
- Method in interface javax.xml.crypto.dsig.
SignatureProperty
Returns an
unmodifiable
 list
of one or more
XMLStructure
s that are contained in
 this
SignatureProperty
.
getContent()
- Method in interface javax.xml.crypto.dsig.
XMLObject
Returns an
unmodifiable
 list
of
XMLStructure
s contained in this
XMLObject
,
 which represent elements from any namespace.
getContent()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the content property definition in CSS2.
getContent()
- Method in interface org.w3c.dom.html.
HTMLMetaElement
Associated information.
getContent(Class<?>[])
- Method in class java.net.
URL
Gets the contents of this URL.
getContent(Class<?>[])
- Method in class java.net.
URLConnection
Retrieves the contents of this URL connection.
getContent(URLConnection)
- Method in class java.net.
ContentHandler
Given a URL connect stream positioned at the beginning of the
 representation of an object, this method reads that stream and
 creates an object from it.
getContent(URLConnection, Class[])
- Method in class java.net.
ContentHandler
Given a URL connect stream positioned at the beginning of the
 representation of an object, this method reads that stream and
 creates an object that matches one of the types specified.
getContentBorderInsets(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the content border insets.
getContentDocument()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
The document this frame contains, if there is any and it is available,
 or
null
otherwise.
getContentDocument()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
The document this frame contains, if there is any and it is available,
 or
null
otherwise.
getContentDocument()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
The document this object contains, if there is any and it is
 available, or
null
otherwise.
getContentEncoding()
- Method in class java.net.
URLConnection
Returns the value of the
content-encoding
header field.
getContentHandler()
- Method in class javax.xml.validation.
ValidatorHandler
Gets the
ContentHandler
which receives the
 augmented validation result.
getContentHandler()
- Method in class org.xml.sax.helpers.
ParserAdapter
Return the current content handler.
getContentHandler()
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Get the content event handler.
getContentHandler()
- Method in interface org.xml.sax.
XMLReader
Return the current content handler.
getContentLength()
- Method in class java.net.
URLConnection
Returns the value of the
content-length
header field.
getContentLengthLong()
- Method in class java.net.
URLConnection
Returns the value of the
content-length
header field as a
 long.
getContentPane()
- Method in class javax.swing.
JApplet
Deprecated.
Returns the contentPane object for this applet.
getContentPane()
- Method in class javax.swing.
JDialog
Returns the
contentPane
object for this dialog.
getContentPane()
- Method in class javax.swing.
JFrame
Returns the
contentPane
object for this frame.
getContentPane()
- Method in class javax.swing.
JInternalFrame
Returns the content pane for this internal frame.
getContentPane()
- Method in class javax.swing.
JRootPane
Returns the content pane -- the container that holds the components
 parented by the root pane.
getContentPane()
- Method in class javax.swing.
JWindow
Returns the
Container
which is the
contentPane
for this window.
getContentPane()
- Method in interface javax.swing.
RootPaneContainer
Returns the contentPane.
getContents()
- Method in class java.util.
ListResourceBundle
Returns an array in which each item is a pair of objects in an
Object
array.
getContents()
- Method in class javax.accessibility.
AccessibleResourceBundle
Deprecated.
Returns the mapping between the programmatic keys and the localized
 display strings.
getContents()
- Method in class jdk.jfr.
Configuration
Returns a textual representation of the configuration (for example, the
 contents of a JFC file).
getContents()
- Method in class jdk.management.jfr.
ConfigurationInfo
Returns the textual representation of the configuration associated with
 this
ConfigurationInfo
, typically the contents of the
 configuration file that was used to create the configuration.
getContents(Object)
- Method in class java.awt.datatransfer.
Clipboard
Returns a transferable object representing the current contents of the
 clipboard.
getContentType()
- Method in class java.net.
URLConnection
Returns the value of the
content-type
header field.
getContentType()
- Method in class javax.swing.
JEditorPane
Gets the type of content that this editor
 is currently set to deal with.
getContentType()
- Method in class javax.swing.text.
DefaultEditorKit
Gets the MIME type of the data that this
 kit represents support for.
getContentType()
- Method in class javax.swing.text.
EditorKit
Gets the MIME type of the data that this
 kit represents support for.
getContentType()
- Method in class javax.swing.text.html.
HTMLEditorKit
Get the MIME type of the data that this
 kit represents support for.
getContentType()
- Method in class javax.swing.text.rtf.
RTFEditorKit
Get the MIME type of the data that this
 kit represents support for.
getContentType()
- Method in class jdk.jfr.
SettingDescriptor
Returns a textual identifier that specifies how a value that is represented by
 this
SettingDescriptor
object is interpreted or formatted.
getContentType()
- Method in class jdk.jfr.
ValueDescriptor
Returns a textual identifier that specifies how a value represented by
 this
ValueDescriptor
is interpreted or formatted.
getContentType()
- Method in class jdk.management.jfr.
SettingDescriptorInfo
Returns the content type of the setting associated this
SettingDescriptorInfo
(for example,
"jdk.jfr.Timespan"
).
getContentTypeFor(String)
- Method in interface java.net.
FileNameMap
Gets the MIME type for the specified file name.
getContext()
- Method in class com.sun.tools.jconsole.
JConsolePlugin
Returns the
JConsoleContext
object representing
 the connection to an application.
getContext()
- Static method in class java.security.
AccessController
Deprecated.
This method takes a "snapshot" of the current calling context, which
 includes the current thread's inherited
AccessControlContext
and any limited privilege scope, and places it in an
AccessControlContext
object.
getContext()
- Method in class java.security.spec.
EdDSAParameterSpec
Get the context that the signature will use.
getContext()
- Method in class javax.script.
AbstractScriptEngine
Returns the value of the protected
context
field.
getContext()
- Method in interface javax.script.
ScriptEngine
Returns the default
ScriptContext
of the
ScriptEngine
whose Bindings, Reader
 and Writers are used for script executions when no
ScriptContext
is specified.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthButtonUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthColorChooserUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthComboBoxUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthDesktopIconUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthDesktopPaneUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthEditorPaneUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthInternalFrameUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthLabelUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthListUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthMenuBarUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthMenuItemUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthMenuUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthOptionPaneUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthPanelUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthPopupMenuUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthProgressBarUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthRootPaneUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthScrollBarUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthScrollPaneUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthSeparatorUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthSliderUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthSpinnerUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthSplitPaneUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthTabbedPaneUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthTableHeaderUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthTableUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthTextAreaUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthTextFieldUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthToolBarUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthToolTipUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthTreeUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in interface javax.swing.plaf.synth.
SynthUI
Returns the Context for the specified component.
getContext(JComponent)
- Method in class javax.swing.plaf.synth.
SynthViewportUI
Returns the Context for the specified component.
getContextClassLoader()
- Method in class java.lang.
Thread
Returns the context
ClassLoader
for this thread.
getContextualShaper(int)
- Static method in class java.awt.font.
NumericShaper
Returns a contextual shaper for the provided unicode range(s).
getContextualShaper(int, int)
- Static method in class java.awt.font.
NumericShaper
Returns a contextual shaper for the provided unicode range(s).
getContextualShaper(Set<NumericShaper.Range>)
- Static method in class java.awt.font.
NumericShaper
Returns a contextual shaper for the provided Unicode
 range(s).
getContextualShaper(Set<NumericShaper.Range>, NumericShaper.Range)
- Static method in class java.awt.font.
NumericShaper
Returns a contextual shaper for the provided Unicode range(s).
getContinuationContext(CannotProceedException)
- Static method in class javax.naming.spi.
NamingManager
Creates a context in which to continue a context operation.
getContinuationDirContext(CannotProceedException)
- Static method in class javax.naming.spi.
DirectoryManager
Creates a context in which to continue a
DirContext
operation.
getContinueExistingPeriodicTasksAfterShutdownPolicy()
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Gets the policy on whether to continue executing existing
 periodic tasks even when this executor has been
shutdown
.
getControl()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the control color of the current theme.
getControl()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the control color.
getControl(String)
- Method in interface java.util.spi.
ResourceBundleControlProvider
Returns a
ResourceBundle.Control
instance that is used
 to handle resource bundle loading for the given
baseName
.
getControl(List<String>)
- Static method in class java.util.
ResourceBundle.Control
Returns a
ResourceBundle.Control
in which the
getFormats
method returns the specified
formats
.
getControl(Control.Type)
- Method in interface javax.sound.sampled.
Line
Obtains a control of the specified type, if there is any.
getControlButtonsAreShown()
- Method in class javax.swing.
JFileChooser
Returns the value of the
controlButtonsAreShown
property.
getControlDarkShadow()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the control dark shadow color of the current theme.
getControlDarkShadow()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the control dark shadow color.
getControlDisabled()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the control disabled color of the current theme.
getControlDisabled()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the control disabled color.
getControlFlag()
- Method in class javax.security.auth.login.
AppConfigurationEntry
Return the controlFlag
 (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)
 for this
LoginModule
.
getControlHighlight()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the control highlight color of the current theme.
getControlHighlight()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the control highlight color.
getControlInfo()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the control info color of the current theme.
getControlInfo()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the control info color.
getControlInstance(Control)
- Method in class javax.naming.ldap.
ControlFactory
Creates a control using this control factory.
getControlInstance(Control, Context, Hashtable<?, ?>)
- Static method in class javax.naming.ldap.
ControlFactory
Creates a control using known control factories.
getController()
- Method in class javax.imageio.
IIOParam
Returns whatever
IIOParamController
is currently
 installed.
getController()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns whatever
IIOMetadataController
is currently
 installed.
getController(int)
- Method in interface javax.sound.midi.
MidiChannel
Obtains the current value of the specified controller.
getControlObject()
- Method in interface java.awt.im.spi.
InputMethod
Returns a control object from this input method, or null.
getControls()
- Method in interface javax.naming.ldap.
HasControls
Retrieves an array of
Control
s from the object that
 implements this interface.
getControls()
- Method in interface javax.sound.sampled.
Line
Obtains the set of controls associated with this line.
getControlShadow()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the control shadow color of the current theme.
getControlShadow()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the control shadow color.
getControlSize()
- Method in class javax.swing.plaf.metal.
MetalCheckBoxIcon
Returns the size of the control.
getControlTextColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the control text color of the current theme.
getControlTextColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the control text color.
getControlTextColor()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the control text color.
getControlTextFont()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the control text font.
getControlTextFont()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the control text font of the current theme.
getControlTextFont()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the control text font.
getConversion()
- Method in exception class java.util.
FormatFlagsConversionMismatchException
Returns the incompatible conversion.
getConversion()
- Method in exception class java.util.
IllegalFormatConversionException
Returns the inapplicable conversion.
getConversion()
- Method in exception class java.util.
UnknownFormatConversionException
Returns the unknown conversion.
getCookie()
- Method in class javax.naming.ldap.
PagedResultsResponseControl
Retrieves the server-generated cookie.
getCookie()
- Method in interface org.w3c.dom.html.
HTMLDocument
The cookies associated with this document.
getCookies()
- Method in interface java.net.
CookieStore
Get all not-expired cookies in cookie store.
getCookieStore()
- Method in class java.net.
CookieManager
To retrieve current cookie store.
getCoords()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Comma-separated list of lengths, defining an active region geometry.
getCoords()
- Method in interface org.w3c.dom.html.
HTMLAreaElement
Comma-separated list of lengths, defining an active region geometry.
getCopies()
- Method in class java.awt.
JobAttributes
Returns the number of copies the application should render for jobs
 using these attributes.
getCopies()
- Method in class java.awt.print.
PrinterJob
Gets the number of copies to be printed.
getCopyAction()
- Static method in class javax.swing.
TransferHandler
Returns an
Action
that performs copy operations to the
 clipboard.
getCorePoolSize()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the core number of threads.
getCorner(String)
- Method in class javax.swing.
JScrollPane
Returns the component at the specified corner.
getCorner(String)
- Method in class javax.swing.
ScrollPaneLayout
Returns the
Component
at the specified corner.
getCount()
- Method in interface java.lang.management.
BufferPoolMXBean
Returns an estimate of the number of buffers in the pool.
getCount()
- Method in class java.lang.management.
MemoryNotificationInfo
Returns the number of times that the memory usage has crossed
 a threshold when the notification was constructed.
getCount()
- Method in class java.util.concurrent.
CountDownLatch
Returns the current count.
getCount()
- Method in class java.util.
DoubleSummaryStatistics
Return the count of values recorded.
getCount()
- Method in class java.util.
IntSummaryStatistics
Returns the count of values recorded.
getCount()
- Method in class java.util.
LongSummaryStatistics
Returns the count of values recorded.
getCount()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns the number of data items present in the field.
getCount()
- Method in class javax.imageio.plugins.tiff.
TIFFTag
Returns the value count of this tag.
getCounter()
- Method in class javax.crypto.spec.
ChaCha20ParameterSpec
Returns the configured counter value.
getCounterIncrement()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the counter-increment property definition in CSS2.
getCounterReset()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the counter-reset property definition in CSS2.
getCounterValue()
- Method in interface org.w3c.dom.css.
CSSPrimitiveValue
This method is used to get the Counter value.
getCountLimit()
- Method in class javax.naming.directory.
SearchControls
Retrieves the maximum number of entries that will be returned
 as a result of the search.
getCountry()
- Method in class java.util.
Locale
Returns the country/region code for this locale, which should
 either be the empty string, an uppercase ISO 3166 2-letter code,
 or a UN M.49 3-digit code.
getCpuLoad()
- Method in interface com.sun.management.
OperatingSystemMXBean
Returns the "recent cpu usage" for the operating environment.
getCrc()
- Method in class java.util.zip.
ZipEntry
Returns the CRC-32 checksum of the uncompressed entry data.
getCreationDate(String)
- Method in class java.security.
KeyStore
Returns the creation date of the entry identified by the given alias.
getCreationTime()
- Method in class java.util.zip.
ZipEntry
Returns the creation time of the entry.
getCreationTime()
- Method in interface javax.net.ssl.
SSLSession
Returns the time at which this Session representation was created,
 in milliseconds since midnight, January 1, 1970 UTC.
getCredDelegState()
- Method in interface org.ietf.jgss.
GSSContext
Determines if credential delegation is enabled on
 this context.
getCredentialClass()
- Method in class javax.security.auth.
PrivateCredentialPermission
Returns the Class name of the Credential associated with this
PrivateCredentialPermission
.
getCriticalExtensionOIDs()
- Method in interface java.security.cert.
X509Extension
Gets a Set of the OID strings for the extension(s) marked
 CRITICAL in the certificate/CRL managed by the object
 implementing this interface.
getCRLs(CRLSelector)
- Method in class java.security.cert.
CertStore
Returns a
Collection
of
CRL
s that
 match the specified selector.
getCrossFeedResolution(int)
- Method in class javax.print.attribute.
ResolutionSyntax
Returns this resolution attribute's cross feed direction resolution in
 the given units.
getCrossFeedResolutionDphi()
- Method in class javax.print.attribute.
ResolutionSyntax
Returns this resolution attribute's cross feed direction resolution in
 units of dphi.
getCrossPlatformLookAndFeelClassName()
- Static method in class javax.swing.
UIManager
Returns the name of the
LookAndFeel
class that implements
 the default cross platform look and feel -- the Java
 Look and Feel (JLF).
getCrossReference(String, String, String, String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the foreign key columns in the given foreign key
 table that reference the primary key or the columns representing a unique constraint of the  parent table (could be the same or a different table).
getCrtCoefficient()
- Method in interface java.security.interfaces.
RSAMultiPrimePrivateCrtKey
Returns the crtCoefficient.
getCrtCoefficient()
- Method in interface java.security.interfaces.
RSAPrivateCrtKey
Returns the crtCoefficient.
getCrtCoefficient()
- Method in class java.security.spec.
RSAMultiPrimePrivateCrtKeySpec
Returns the crtCoefficient.
getCrtCoefficient()
- Method in class java.security.spec.
RSAOtherPrimeInfo
Returns the prime's crtCoefficient.
getCrtCoefficient()
- Method in class java.security.spec.
RSAPrivateCrtKeySpec
Returns the crtCoefficient.
getCssFloat()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the float property definition in CSS2.
getCssRules()
- Method in interface org.w3c.dom.css.
CSSMediaRule
A list of all CSS rules contained within the media block.
getCssRules()
- Method in interface org.w3c.dom.css.
CSSStyleSheet
The list of all CSS rules contained within the style sheet.
getCssText()
- Method in interface org.w3c.dom.css.
CSSRule
The parsable textual representation of the rule.
getCssText()
- Method in interface org.w3c.dom.css.
CSSStyleDeclaration
The parsable textual representation of the declaration block
 (excluding the surrounding curly braces).
getCssText()
- Method in interface org.w3c.dom.css.
CSSValue
A string representation of the current value.
getCssValueType()
- Method in interface org.w3c.dom.css.
CSSValue
A code defining the type of the value as defined above.
getCtrlKey()
- Method in interface org.w3c.dom.events.
MouseEvent
Used to indicate whether the 'ctrl' key was depressed during the firing
 of the event.
getCtrlP1()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the first control point.
getCtrlP1()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the first control point.
getCtrlP1()
- Method in class java.awt.geom.
CubicCurve2D
Returns the first control point.
getCtrlP2()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the second control point.
getCtrlP2()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the second control point.
getCtrlP2()
- Method in class java.awt.geom.
CubicCurve2D
Returns the second control point.
getCtrlPt()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the control point.
getCtrlPt()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the control point.
getCtrlPt()
- Method in class java.awt.geom.
QuadCurve2D
Returns the control point.
getCtrlX()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the X coordinate of the control point in
double
precision.
getCtrlX()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the X coordinate of the control point in
double
precision.
getCtrlX()
- Method in class java.awt.geom.
QuadCurve2D
Returns the X coordinate of the control point in
double
precision.
getCtrlX1()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the X coordinate of the first control point in double precision.
getCtrlX1()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the X coordinate of the first control point in double precision.
getCtrlX1()
- Method in class java.awt.geom.
CubicCurve2D
Returns the X coordinate of the first control point in double precision.
getCtrlX2()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the X coordinate of the second control point
 in double precision.
getCtrlX2()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the X coordinate of the second control point
 in double precision.
getCtrlX2()
- Method in class java.awt.geom.
CubicCurve2D
Returns the X coordinate of the second control point
 in double precision.
getCtrlY()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the Y coordinate of the control point in
double
precision.
getCtrlY()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the Y coordinate of the control point in
double
precision.
getCtrlY()
- Method in class java.awt.geom.
QuadCurve2D
Returns the Y coordinate of the control point in
double
precision.
getCtrlY1()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the Y coordinate of the first control point in double precision.
getCtrlY1()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the Y coordinate of the first control point in double precision.
getCtrlY1()
- Method in class java.awt.geom.
CubicCurve2D
Returns the Y coordinate of the first control point in double precision.
getCtrlY2()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the Y coordinate of the second control point
 in double precision.
getCtrlY2()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the Y coordinate of the second control point
 in double precision.
getCtrlY2()
- Method in class java.awt.geom.
CubicCurve2D
Returns the Y coordinate of the second control point
 in double precision.
getCue()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the cue property definition in CSS2.
getCueAfter()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the cue-after property definition in CSS2.
getCueBefore()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the cue-before property definition in CSS2.
getCurrency()
- Method in class java.text.
DecimalFormat
Gets the currency used by this decimal format when formatting
 currency values.
getCurrency()
- Method in class java.text.
DecimalFormatSymbols
Gets the currency of these DecimalFormatSymbols.
getCurrency()
- Method in class java.text.
NumberFormat
Gets the currency used by this number format when formatting
 currency values.
getCurrencyCode()
- Method in class java.util.
Currency
Gets the ISO 4217 currency code of this currency.
getCurrencyInstance()
- Static method in class java.text.
NumberFormat
Returns a currency format for the current default
FORMAT
locale.
getCurrencyInstance(Locale)
- Static method in class java.text.
NumberFormat
Returns a currency format for the specified locale.
getCurrencyInstance(Locale)
- Method in class java.text.spi.
NumberFormatProvider
Returns a new
NumberFormat
instance which formats
 monetary values for the specified locale.
getCurrencySymbol()
- Method in class java.text.
DecimalFormatSymbols
Returns the currency symbol for the currency of these
 DecimalFormatSymbols in their locale.
getCurrent()
- Method in class java.awt.
CheckboxGroup
Deprecated.
As of JDK version 1.1,
 replaced by
getSelectedCheckbox()
.
getCurrentAccessibleContext()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the AccessibleContext for the table cell renderer.
getCurrentAccessibleValue()
- Method in class java.awt.
Button.AccessibleAWTButton
Get the value of this object as a Number.
getCurrentAccessibleValue()
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Get the value of this object as a Number.
getCurrentAccessibleValue()
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Get the value of this object as a Number.
getCurrentAccessibleValue()
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Get the value of this object as a Number.
getCurrentAccessibleValue()
- Method in class java.awt.
Scrollbar.AccessibleAWTScrollBar
Get the accessible value of this object.
getCurrentAccessibleValue()
- Method in interface javax.accessibility.
AccessibleValue
Get the value of this object as a
Number
.
getCurrentAccessibleValue()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Get the value of this object as a Number.
getCurrentAccessibleValue()
- Method in class javax.swing.
JInternalFrame.AccessibleJInternalFrame
Get the value of this object as a Number.
getCurrentAccessibleValue()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon
Gets the value of this object as a
Number
.
getCurrentAccessibleValue()
- Method in class javax.swing.
JProgressBar.AccessibleJProgressBar
Gets the accessible value of this object.
getCurrentAccessibleValue()
- Method in class javax.swing.
JScrollBar.AccessibleJScrollBar
Get the accessible value of this object.
getCurrentAccessibleValue()
- Method in class javax.swing.
JSlider.AccessibleJSlider
Get the accessible value of this object.
getCurrentAccessibleValue()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Get the value of this object as a Number.
getCurrentAccessibleValue()
- Method in class javax.swing.
JSplitPane.AccessibleJSplitPane
Gets the accessible value of this object.
getCurrentComponent()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the table cell renderer component.
getCurrentDataFlavors()
- Method in class java.awt.dnd.
DropTargetContext
get the available DataFlavors of the
Transferable
operand of this operation.
getCurrentDataFlavors()
- Method in class java.awt.dnd.
DropTargetDragEvent
This method returns the current
DataFlavor
s from the
DropTargetContext
.
getCurrentDataFlavors()
- Method in class java.awt.dnd.
DropTargetDropEvent
This method returns the current DataFlavors.
getCurrentDataFlavorsAsList()
- Method in class java.awt.dnd.
DropTargetContext
This method returns the currently available DataFlavors
 of the
Transferable
operand
 as a
java.util.List
.
getCurrentDataFlavorsAsList()
- Method in class java.awt.dnd.
DropTargetDragEvent
This method returns the current
DataFlavor
s
 as a
java.util.List
getCurrentDataFlavorsAsList()
- Method in class java.awt.dnd.
DropTargetDropEvent
This method returns the currently available
DataFlavor
s as a
java.util.List
.
getCurrentDirectory()
- Method in class javax.swing.
JFileChooser
Returns the current directory.
getCurrentEvent()
- Static method in class java.awt.
EventQueue
Returns the event currently being dispatched by the
EventQueue
associated with the calling thread.
getCurrentFocusCycleRoot()
- Method in class java.awt.
KeyboardFocusManager
Returns the current focus cycle root, if the current focus cycle root is
 in the same context as the calling thread.
getCurrentKeyboardFocusManager()
- Static method in class java.awt.
KeyboardFocusManager
Returns the current KeyboardFocusManager instance for the calling
 thread's context.
getCurrentLine()
- Method in class javax.swing.text.html.parser.
Parser
Returns the line number of the line currently being parsed.
getCurrentLineLength()
- Method in class javax.swing.text.
AbstractWriter
Returns the current line length.
getCurrentManager()
- Static method in class javax.swing.
FocusManager
Returns the current
KeyboardFocusManager
instance
 for the calling thread's context.
getCurrentMousePosition()
- Static method in class com.sun.java.accessibility.util.
EventQueueMonitor
Return the last recorded position of the mouse in screen coordinates.
getCurrentNode()
- Method in interface org.w3c.dom.traversal.
TreeWalker
The node at which the
TreeWalker
is currently positioned.
getCurrentPath()
- Method in class com.sun.source.util.
DocTreePathScanner
Returns the current path for the node, as built up by the currently
 active set of scan calls.
getCurrentPath()
- Method in class com.sun.source.util.
TreePathScanner
Returns the current path for the node, as built up by the currently
 active set of scan calls.
getCurrentPoint()
- Method in class java.awt.geom.
Path2D
Returns the coordinates most recently added to the end of the path
 as a
Point2D
object.
getCurrentPos()
- Method in class javax.swing.text.html.parser.
Parser
Returns the current position.
getCurrentServiceClasses()
- Method in interface java.beans.beancontext.
BeanContextServices
Gets the currently available services for this context.
getCurrentServiceClasses()
- Method in class java.beans.beancontext.
BeanContextServicesSupport
getCurrentServiceSelectors()
- Method in class java.beans.beancontext.
BeanContextServiceAvailableEvent
Gets the list of service dependent selectors.
getCurrentServiceSelectors(BeanContextServices, Class<?>)
- Method in interface java.beans.beancontext.
BeanContextServiceProvider
Invoked by
BeanContextServices
, this method
 gets the current service selectors for the specified service.
getCurrentServiceSelectors(BeanContextServices, Class<?>)
- Method in class java.beans.beancontext.
BeanContextServicesSupport.BCSSProxyServiceProvider
getCurrentServiceSelectors(Class<?>)
- Method in interface java.beans.beancontext.
BeanContextServices
Gets the list of service dependent service parameters
 (Service Selectors) for the specified service, by
 calling getCurrentServiceSelectors() on the
 underlying BeanContextServiceProvider.
getCurrentServiceSelectors(Class<?>)
- Method in class java.beans.beancontext.
BeanContextServicesSupport
getCurrentTarget()
- Method in interface org.w3c.dom.events.
Event
Used to indicate the
EventTarget
whose
EventListeners
are currently being processed.
getCurrentTheme()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Return the theme currently being used by
MetalLookAndFeel
.
getCurrentThreadAllocatedBytes()
- Method in interface com.sun.management.
ThreadMXBean
Returns an approximation of the total amount of memory, in bytes,
 allocated in heap memory for the current thread.
getCurrentThreadCpuTime()
- Method in interface java.lang.management.
ThreadMXBean
Returns the total CPU time for the current thread in nanoseconds.
getCurrentThreadUserTime()
- Method in interface java.lang.management.
ThreadMXBean
Returns the CPU time that the current thread has executed
 in user mode in nanoseconds.
getCurrentWriter()
- Method in class javax.swing.text.
AbstractDocument
Fetches the current writing thread if there is one.
getCursor()
- Method in class com.sun.java.accessibility.util.
Translator
Get the
Cursor
of this object.
getCursor()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the
Cursor
of this object.
getCursor()
- Method in class java.awt.
Component
Gets the cursor set in the component.
getCursor()
- Method in class java.awt.dnd.
DragSourceContext
Returns the current custom drag
Cursor
.
getCursor()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Get the Cursor of this object.
getCursor()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the
Cursor
of this object.
getCursor()
- Method in interface javax.accessibility.
AccessibleComponent
Gets the cursor of this object.
getCursor()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getCursor()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
Cursor
of this object.
getCursor()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
getCursor()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getCursor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the cursor property definition in CSS2.
getCursorName()
- Method in interface java.sql.
ResultSet
Retrieves the name of the SQL cursor used by this
ResultSet
object.
getCursorType()
- Method in class java.awt.
Frame
Deprecated.
As of JDK version 1.1,
 replaced by
Component.getCursor()
.
getCurve()
- Method in class java.security.spec.
ECParameterSpec
Returns the elliptic curve that this parameter defines.
getCustomEditor()
- Method in interface java.beans.
PropertyEditor
A PropertyEditor may choose to make available a full custom Component
 that edits its property value.
getCustomEditor()
- Method in class java.beans.
PropertyEditorSupport
A PropertyEditor may chose to make available a full custom Component
 that edits its property value.
getCustomizerClass()
- Method in class java.beans.
BeanDescriptor
Gets the Class object for the bean's customizer.
getCutAction()
- Static method in class javax.swing.
TransferHandler
Returns an
Action
that performs cut operations to the
 clipboard.
getCycleMethod()
- Method in class java.awt.
MultipleGradientPaint
Returns the enumerated type which specifies cycling behavior.
getDaemonThreadCount()
- Method in interface java.lang.management.
ThreadMXBean
Returns the current number of live platform threads that are daemon threads.
getDashArray()
- Method in class java.awt.
BasicStroke
Returns the array representing the lengths of the dash segments.
getDashPhase()
- Method in class java.awt.
BasicStroke
Returns the current dash phase.
getData()
- Method in class com.sun.security.jgss.
AuthorizationDataEntry
Get a copy of the ad-data field.
getData()
- Method in class java.awt.color.
ICC_Profile
Returns a byte array corresponding to the data of this
ICC_Profile
.
getData()
- Method in class java.awt.image.
BufferedImage
Returns the image as one large tile.
getData()
- Method in class java.awt.image.
DataBufferByte
Returns the default (first) byte data array.
getData()
- Method in class java.awt.image.
DataBufferDouble
Returns the default (first)
double
data array.
getData()
- Method in class java.awt.image.
DataBufferFloat
Returns the default (first)
float
data array.
getData()
- Method in class java.awt.image.
DataBufferInt
Returns the default (first) int data array in
DataBuffer
.
getData()
- Method in class java.awt.image.
DataBufferShort
Returns the default (first) byte data array.
getData()
- Method in class java.awt.image.
DataBufferUShort
Returns the default (first) unsigned-short data array.
getData()
- Method in interface java.awt.image.
RenderedImage
Returns the image as one large tile (for tile based
 images this will require fetching the whole image
 and copying the image data over).
getData()
- Method in class java.net.
DatagramPacket
Returns the data buffer.
getData()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns a reference to the data object associated with the field.
getData()
- Method in class javax.imageio.stream.
IIOByteBuffer
Returns a reference to the byte array.
getData()
- Method in class javax.smartcardio.
CommandAPDU
Returns a copy of the data bytes in the command body.
getData()
- Method in class javax.smartcardio.
ResponseAPDU
Returns a copy of the data bytes in the response body.
getData()
- Method in class javax.sound.midi.
MetaMessage
Obtains a copy of the data for the meta message.
getData()
- Method in class javax.sound.midi.
SoundbankResource
Obtains the sampled audio that is stored in this
SoundbankResource
.
getData()
- Method in class javax.sound.midi.
SysexMessage
Obtains a copy of the data for the system exclusive message.
getData()
- Method in class javax.swing.text.html.
FormSubmitEvent
Gets the form submission data.
getData()
- Method in class javax.swing.text.html.parser.
Entity
Returns the
data
.
getData()
- Method in interface javax.xml.stream.events.
Characters
Get the character data of this event
getData()
- Method in interface javax.xml.stream.events.
ProcessingInstruction
The data section of the processing instruction
getData()
- Method in interface org.w3c.dom.
CharacterData
The character data of the node that implements this interface.
getData()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
A URI specifying the location of the object's data.
getData()
- Method in interface org.w3c.dom.
ProcessingInstruction
The content of this processing instruction.
getData(int)
- Method in class java.awt.color.
ICC_Profile
Returns a particular tagged data element from the profile as a byte
 array.
getData(int)
- Method in class java.awt.image.
DataBufferByte
Returns the data array for the specified bank.
getData(int)
- Method in class java.awt.image.
DataBufferDouble
Returns the data array for the specified bank.
getData(int)
- Method in class java.awt.image.
DataBufferFloat
Returns the data array for the specified bank.
getData(int)
- Method in class java.awt.image.
DataBufferInt
Returns the data array for the specified bank.
getData(int)
- Method in class java.awt.image.
DataBufferShort
Returns the data array for the specified bank.
getData(int)
- Method in class java.awt.image.
DataBufferUShort
Returns the data array for the specified bank.
getData(DataFlavor)
- Method in class java.awt.datatransfer.
Clipboard
Returns an object representing the current contents of this clipboard in
 the specified
DataFlavor
.
getData(Rectangle)
- Method in class java.awt.image.
BufferedImage
Computes and returns an arbitrary region of the
BufferedImage
.
getData(Rectangle)
- Method in interface java.awt.image.
RenderedImage
Computes and returns an arbitrary region of the RenderedImage.
getData1()
- Method in class javax.sound.midi.
ShortMessage
Obtains the first data byte in the message.
getData2()
- Method in class javax.sound.midi.
ShortMessage
Obtains the second data byte in the message.
getDatabaseMajorVersion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the major version number of the underlying database.
getDatabaseMinorVersion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the minor version number of the underlying database.
getDatabaseProductName()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the name of this database product.
getDatabaseProductVersion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the version number of this database product.
getDataBitOffset()
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the data bit offset in bits.
getDataBuffer()
- Method in class java.awt.image.
Raster
Returns the DataBuffer associated with this Raster.
getDataClass()
- Method in class javax.sound.midi.
SoundbankResource
Obtains the class used by this sample to represent its data.
getDataElement(float[], int)
- Method in class java.awt.image.
ColorModel
Returns a pixel value represented as an
int
in this
ColorModel
, given an array of normalized color/alpha
 components.
getDataElement(float[], int)
- Method in class java.awt.image.
ComponentColorModel
Returns a pixel value represented as an
int
in this
ColorModel
, given an array of normalized color/alpha
 components.
getDataElement(int[], int)
- Method in class java.awt.image.
ColorModel
Returns a pixel value represented as an
int
in this
ColorModel
, given an array of unnormalized color/alpha
 components.
getDataElement(int[], int)
- Method in class java.awt.image.
ComponentColorModel
Returns a pixel value represented as an int in this
ColorModel
,
 given an array of unnormalized color/alpha components.
getDataElement(int[], int)
- Method in class java.awt.image.
DirectColorModel
Returns a pixel value represented as an
int
in this
ColorModel
, given an array of unnormalized color/alpha
 components.
getDataElement(int[], int)
- Method in class java.awt.image.
IndexColorModel
Returns a pixel value represented as an int in this
ColorModel
given an array of unnormalized
 color/alpha components.
getDataElements(float[], int, Object)
- Method in class java.awt.image.
ColorModel
Returns a data element array representation of a pixel in this
ColorModel
, given an array of normalized color/alpha
 components.
getDataElements(float[], int, Object)
- Method in class java.awt.image.
ComponentColorModel
Returns a data element array representation of a pixel in this
ColorModel
, given an array of normalized color/alpha
 components.
getDataElements(int[], int, Object)
- Method in class java.awt.image.
ColorModel
Returns a data element array representation of a pixel in this
ColorModel
, given an array of unnormalized color/alpha
 components.
getDataElements(int[], int, Object)
- Method in class java.awt.image.
ComponentColorModel
Returns a data element array representation of a pixel in this
ColorModel
, given an array of unnormalized color/alpha
 components.
getDataElements(int[], int, Object)
- Method in class java.awt.image.
DirectColorModel
Returns a data element array representation of a pixel in this
ColorModel
, given an array of unnormalized color/alpha
 components.
getDataElements(int[], int, Object)
- Method in class java.awt.image.
IndexColorModel
Returns a data element array representation of a pixel in this
ColorModel
given an array of unnormalized color/alpha
 components.
getDataElements(int, int, int, int, Object)
- Method in class java.awt.image.
Raster
Returns the pixel data for the specified rectangle of pixels in a
 primitive array of type TransferType.
getDataElements(int, int, int, int, Object, DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the pixel data for the specified rectangle of pixels in a
 primitive array of type TransferType.
getDataElements(int, int, Object)
- Method in class java.awt.image.
Raster
Returns data for a single pixel in a primitive array of type
 TransferType.
getDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Returns data for a single pixel in a primitive array of type
 TransferType.
getDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Returns data for a single pixel in a primitive array of type
TransferType
.
getDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns data for a single pixel in a primitive array of type
 TransferType.
getDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns data for a single pixel in a primitive array of type
 TransferType.
getDataElements(int, int, Object, DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns data for a single pixel in a primitive array of type
 TransferType.
getDataElements(int, Object)
- Method in class java.awt.image.
ColorModel
Returns a data element array representation of a pixel in this
ColorModel
, given an integer pixel representation in
 the default RGB color model.
getDataElements(int, Object)
- Method in class java.awt.image.
ComponentColorModel
Returns a data element array representation of a pixel in this
ColorModel
, given an integer pixel representation
 in the default RGB color model.
getDataElements(int, Object)
- Method in class java.awt.image.
DirectColorModel
Returns a data element array representation of a pixel in this
ColorModel
, given an integer pixel representation in the
 default RGB color model.
getDataElements(int, Object)
- Method in class java.awt.image.
IndexColorModel
Returns a data element array representation of a pixel in this
 ColorModel, given an integer pixel representation in the
 default RGB color model.
getDataFlavors()
- Method in class javax.swing.
TransferHandler.TransferSupport
Returns the data flavors for this transfer.
getDataLength(int)
- Method in class javax.sound.midi.
ShortMessage
Retrieves the number of data bytes associated with a particular status
 byte value.
getDatalink()
- Method in class javax.sql.rowset.serial.
SerialDatalink
Returns a new URL that is a copy of this
SerialDatalink
object.
getDataSize()
- Method in exception class java.sql.
DataTruncation
Gets the number of bytes of data that should have been transferred.
getDataSourceLock()
- Method in class javax.sql.rowset.spi.
SyncProvider
Returns the current data source lock severity level active in this
SyncProvider
implementation.
getDataSourceName()
- Method in class javax.sql.rowset.
BaseRowSet
Returns the logical name that when supplied to a naming service
 that uses the Java Naming and Directory Interface (JNDI) API, will
 retrieve a
javax.sql.DataSource
object.
getDataSourceName()
- Method in interface javax.sql.
RowSet
Retrieves the logical name that identifies the data source for this
RowSet
object.
getDataType()
- Method in class java.awt.image.
DataBuffer
Returns the data type of this DataBuffer.
getDataType()
- Method in class java.awt.image.
SampleModel
Returns the data type of the DataBuffer storing the pixel data.
getDataTypes()
- Method in class javax.imageio.plugins.tiff.
TIFFTag
Returns a bit mask indicating the set of data types that may
 be used to store the data associated with the tag.
getDataTypeSize(int)
- Static method in class java.awt.image.
DataBuffer
Returns the size (in bits) of the data type, given a datatype tag.
getDataVector()
- Method in class javax.swing.table.
DefaultTableModel
Returns the
Vector
of
Vectors
that contains the table's
  data values.
getDate()
- Method in class java.net.
URLConnection
Returns the value of the
date
header field.
getDate()
- Method in class java.security.cert.
PKIXParameters
Returns the time for which the validity of the certification path
 should be determined.
getDate()
- Method in class java.sql.
Time
Deprecated.
getDate()
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.get(Calendar.DAY_OF_MONTH)
.
getDate()
- Method in class javax.swing.
SpinnerDateModel
Returns the current element in this sequence of
Date
s.
getDate(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
DATE
parameter as a
java.sql.Date
object.
getDate(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
java.sql.Date
object in the Java programming language.
getDate(int, Calendar)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
DATE
parameter as a
java.sql.Date
object, using
 the given
Calendar
object
 to construct the date.
getDate(int, Calendar)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.sql.Date
object
 in the Java programming language.
getDate(Integer)
- Method in class javax.management.timer.
Timer
Gets a copy of the date associated to a timer notification.
getDate(Integer)
- Method in interface javax.management.timer.
TimerMBean
Gets a copy of the date associated to a timer notification.
getDate(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
DATE
parameter as a
java.sql.Date
object.
getDate(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
java.sql.Date
object in the Java programming language.
getDate(String, Calendar)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
DATE
parameter as a
java.sql.Date
object, using
 the given
Calendar
object
 to construct the date.
getDate(String, Calendar)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.sql.Date
object
 in the Java programming language.
getDateAndTime()
- Method in class java.security.cert.
X509CRLSelector
Returns the dateAndTime criterion.
getDateFormatSymbols()
- Method in class java.text.
SimpleDateFormat
Gets a copy of the date and time format symbols of this date format.
getDateInstance()
- Static method in class java.text.
DateFormat
Gets the date formatter with the default formatting style
 for the default
FORMAT
locale.
getDateInstance(int)
- Static method in class java.text.
DateFormat
Gets the date formatter with the given formatting style
 for the default
FORMAT
locale.
getDateInstance(int, Locale)
- Static method in class java.text.
DateFormat
Gets the date formatter with the given formatting style
 for the given locale.
getDateInstance(int, Locale)
- Method in class java.text.spi.
DateFormatProvider
Returns a new
DateFormat
instance which formats date
 with the given formatting style for the specified locale.
getDateTime()
- Method in interface org.w3c.dom.html.
HTMLModElement
The date and time of the change.
getDateTimeAfter()
- Method in class java.time.zone.
ZoneOffsetTransition
Gets the local transition date-time, as would be expressed with the 'after' offset.
getDateTimeBefore()
- Method in class java.time.zone.
ZoneOffsetTransition
Gets the local transition date-time, as would be expressed with the 'before' offset.
getDateTimeInstance()
- Static method in class java.text.
DateFormat
Gets the date/time formatter with the default formatting style
 for the default
FORMAT
locale.
getDateTimeInstance(int, int)
- Static method in class java.text.
DateFormat
Gets the date/time formatter with the given date and time
 formatting styles for the default
FORMAT
locale.
getDateTimeInstance(int, int, Locale)
- Static method in class java.text.
DateFormat
Gets the date/time formatter with the given formatting styles
 for the given locale.
getDateTimeInstance(int, int, Locale)
- Method in class java.text.spi.
DateFormatProvider
Returns a new
DateFormat
instance which formats date and time
 with the given formatting style for the specified locale.
getDay()
- Method in class java.sql.
Time
Deprecated.
getDay()
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.get(Calendar.DAY_OF_WEEK)
.
getDay()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the day of month or
DatatypeConstants.FIELD_UNDEFINED
.
getDaylightSavings(Instant)
- Method in class java.time.zone.
ZoneRules
Gets the amount of daylight savings in use for the specified instant in this zone.
getDayOfMonth()
- Method in class java.time.
LocalDate
Gets the day-of-month field.
getDayOfMonth()
- Method in class java.time.
LocalDateTime
Gets the day-of-month field.
getDayOfMonth()
- Method in class java.time.
MonthDay
Gets the day-of-month field.
getDayOfMonth()
- Method in class java.time.
OffsetDateTime
Gets the day-of-month field.
getDayOfMonth()
- Method in class java.time.
ZonedDateTime
Gets the day-of-month field.
getDayOfMonthIndicator()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Gets the indicator of the day-of-month of the transition.
getDayOfWeek()
- Method in class java.time.
LocalDate
Gets the day-of-week field, which is an enum
DayOfWeek
.
getDayOfWeek()
- Method in class java.time.
LocalDateTime
Gets the day-of-week field, which is an enum
DayOfWeek
.
getDayOfWeek()
- Method in class java.time.
OffsetDateTime
Gets the day-of-week field, which is an enum
DayOfWeek
.
getDayOfWeek()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Gets the day-of-week of the transition.
getDayOfWeek()
- Method in class java.time.
ZonedDateTime
Gets the day-of-week field, which is an enum
DayOfWeek
.
getDayOfYear()
- Method in class java.time.
LocalDate
Gets the day-of-year field.
getDayOfYear()
- Method in class java.time.
LocalDateTime
Gets the day-of-year field.
getDayOfYear()
- Method in class java.time.
OffsetDateTime
Gets the day-of-year field.
getDayOfYear()
- Method in class java.time.
ZonedDateTime
Gets the day-of-year field.
getDays()
- Method in class java.time.
Period
Gets the amount of days of this period.
getDays()
- Method in class javax.xml.datatype.
Duration
Obtains the value of the DAYS field as an integer value,
 or 0 if not present.
getDCHuffmanTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageReadParam
Returns a copy of the array of DC Huffman tables set on the
 most recent call to
setDecodeTables
, or
null
if tables are not currently set.
getDCHuffmanTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageWriteParam
Returns a copy of the array of DC Huffman tables set on the
 most recent call to
setEncodeTables
, or
null
if tables are not currently set.
getDebugGraphicsOptions()
- Method in class javax.swing.
JComponent
Returns the state of graphics debugging.
getDebugOptions()
- Method in class javax.swing.
DebugGraphics
Returns the current debugging options for this DebugGraphics.
getDecayTime()
- Method in class javax.sound.sampled.
ReverbType
Obtains the decay time, which is the amount of time over which the late
 reflections attenuate to effective zero.
getDecimalFormatSymbols()
- Method in class java.text.
DecimalFormat
Returns a copy of the decimal format symbols, which is generally not
 changed by the programmer or user.
getDecimalSeparator()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used for decimal sign.
getDecimalSeparator()
- Method in class java.time.format.
DecimalStyle
Gets the character that represents the decimal point.
getDecimalStyle()
- Method in class java.time.format.
DateTimeFormatter
Gets the DecimalStyle to be used during formatting.
getDeclaration()
- Method in interface javax.xml.stream.events.
EntityReference
Return the declaration of this entity.
getDeclaration(String)
- Method in class javax.swing.text.html.
StyleSheet
Translates a CSS declaration to an AttributeSet that represents
 the CSS declaration.
getDeclare()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Declare (for future reference), but do not instantiate, this object.
getDeclaredAnnotation(Class<A>)
- Method in class java.lang.
Class
Returns this element's annotation for the specified type if
 such an annotation is
directly present
, else null.
getDeclaredAnnotation(Class<A>)
- Method in class java.lang.
Package
Returns this element's annotation for the specified type if
 such an annotation is
directly present
, else null.
getDeclaredAnnotation(Class<T>)
- Method in class java.lang.reflect.
AccessibleObject
Returns this element's annotation for the specified type if
 such an annotation is
directly present
, else null.
getDeclaredAnnotation(Class<T>)
- Method in interface java.lang.reflect.
AnnotatedElement
Returns this element's annotation for the specified type if
 such an annotation is
directly present
, else null.
getDeclaredAnnotation(Class<T>)
- Method in class java.lang.reflect.
Parameter
Returns this element's annotation for the specified type if
 such an annotation is
directly present
, else null.
getDeclaredAnnotations()
- Method in class java.lang.
Class
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in class java.lang.
Module
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in class java.lang.
Package
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in class java.lang.reflect.
AccessibleObject
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in interface java.lang.reflect.
AnnotatedElement
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in interface java.lang.reflect.
AnnotatedType
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in class java.lang.reflect.
Constructor
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in class java.lang.reflect.
Executable
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in class java.lang.reflect.
Method
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in class java.lang.reflect.
Parameter
Returns annotations that are
directly present
on this element.
getDeclaredAnnotations()
- Method in class java.lang.reflect.
RecordComponent
Returns annotations that are
directly present
on this element.
getDeclaredAnnotationsByType(Class<A>)
- Method in class java.lang.
Class
Returns this element's annotation(s) for the specified type if
 such annotations are either
directly present
or
indirectly present
.
getDeclaredAnnotationsByType(Class<A>)
- Method in class java.lang.
Package
getDeclaredAnnotationsByType(Class<T>)
- Method in class java.lang.reflect.
AccessibleObject
Returns this element's annotation(s) for the specified type if
 such annotations are either
directly present
or
indirectly present
.
getDeclaredAnnotationsByType(Class<T>)
- Method in interface java.lang.reflect.
AnnotatedElement
Returns this element's annotation(s) for the specified type if
 such annotations are either
directly present
or
indirectly present
.
getDeclaredAnnotationsByType(Class<T>)
- Method in class java.lang.reflect.
Parameter
Returns this element's annotation(s) for the specified type if
 such annotations are either
directly present
or
indirectly present
.
getDeclaredClasses()
- Method in class java.lang.
Class
Returns an array of
Class
objects reflecting all the
 classes and interfaces declared as members of the class represented by
 this
Class
object.
getDeclaredConstructor(Class<?>...)
- Method in class java.lang.
Class
Returns a
Constructor
object that reflects the specified
 constructor of the class represented by this
Class
object.
getDeclaredConstructors()
- Method in class java.lang.
Class
Returns an array of
Constructor
objects reflecting all the
 constructors implicitly or explicitly declared by the class represented by this
Class
object.
getDeclaredField(String)
- Method in class java.lang.
Class
Returns a
Field
object that reflects the specified declared
 field of the class or interface represented by this
Class
object.
getDeclaredFields()
- Method in class java.lang.
Class
Returns an array of
Field
objects reflecting all the fields
 declared by the class or interface represented by this
Class
object.
getDeclaredMethod(String, Class<?>...)
- Method in class java.lang.
Class
Returns a
Method
object that reflects the specified
 declared method of the class or interface represented by this
Class
object.
getDeclaredMethods()
- Method in class java.lang.
Class
Returns an array containing
Method
objects reflecting all the
 declared methods of the class or interface represented by this
Class
object, including public, protected, default (package)
 access, and private methods, but excluding inherited methods.
getDeclaredPrefixes()
- Method in class org.xml.sax.helpers.
NamespaceSupport
Return an enumeration of all prefixes declared in this context.
getDeclaredType(TypeElement, TypeMirror...)
- Method in interface javax.lang.model.util.
Types
Returns the type corresponding to a type element and
 actual type arguments.
getDeclaredType(DeclaredType, TypeElement, TypeMirror...)
- Method in interface javax.lang.model.util.
Types
Returns the type corresponding to a type element
 and actual type arguments, given a
containing type
of which it is a member.
getDeclaringClass()
- Method in class java.lang.
Class
If the class or interface represented by this
Class
object
 is a member of another class, returns the
Class
object
 representing the class in which it was declared.
getDeclaringClass()
- Method in class java.lang.
Enum
Returns the Class object corresponding to this enum constant's
 enum type.
getDeclaringClass()
- Method in interface java.lang.invoke.
MethodHandleInfo
Returns the class in which the cracked method handle's underlying member was defined.
getDeclaringClass()
- Method in class java.lang.reflect.
Constructor
Returns the
Class
object representing the class that
 declares the constructor represented by this object.
getDeclaringClass()
- Method in class java.lang.reflect.
Executable
Returns the
Class
object representing the class or interface
 that declares the executable represented by this object.
getDeclaringClass()
- Method in class java.lang.reflect.
Field
Returns the
Class
object representing the class or interface
 that declares the field represented by this
Field
object.
getDeclaringClass()
- Method in interface java.lang.reflect.
Member
Returns the Class object representing the class or interface
 that declares the member or constructor represented by this Member.
getDeclaringClass()
- Method in class java.lang.reflect.
Method
Returns the
Class
object representing the class or interface
 that declares the method represented by this object.
getDeclaringClass()
- Method in interface java.lang.
StackWalker.StackFrame
Gets the declaring
Class
for the method represented by
 this stack frame.
getDeclaringExecutable()
- Method in class java.lang.reflect.
Parameter
Returns the
Executable
declaring this parameter.
getDeclaringRecord()
- Method in class java.lang.reflect.
RecordComponent
Returns the record class which declares this record component.
getDecoder()
- Static method in class java.util.
Base64
Returns a
Base64.Decoder
that decodes using the
Basic
type base64 encoding scheme.
getDecomposition()
- Method in class java.text.
Collator
Get the decomposition mode of this Collator.
getDeconstructor()
- Method in interface com.sun.source.tree.
DeconstructionPatternTree
Returns the deconstructed type.
getDeepestComponentAt(Component, int, int)
- Static method in class javax.swing.
SwingUtilities
Returns the deepest visible descendent Component of
parent
that contains the location
x
,
y
.
getDefault()
- Static method in class java.net.
Authenticator
Gets the default authenticator.
getDefault()
- Static method in class java.net.
CookieHandler
Gets the system-wide cookie handler.
getDefault()
- Static method in class java.net.
ProxySelector
Gets the system-wide proxy selector.
getDefault()
- Static method in class java.net.
ResponseCache
Gets the system-wide response cache.
getDefault()
- Static method in class java.nio.file.
FileSystems
Returns the default
FileSystem
.
getDefault()
- Static method in class java.util.
Locale
Gets the current value of the default locale for this instance
 of the Java Virtual Machine.
getDefault()
- Static method in interface java.util.random.
RandomGenerator
Returns a
RandomGenerator
meeting the minimal requirement
 of having an
algorithm
whose state bits are greater than or equal 64.
getDefault()
- Static method in class java.util.random.
RandomGeneratorFactory
Returns a
RandomGeneratorFactory
meeting the minimal requirement
 of having an algorithm whose state bits are greater than or equal 64.
getDefault()
- Static method in class java.util.
TimeZone
Gets the default
TimeZone
of the Java virtual machine.
getDefault()
- Static method in class javax.net.
ServerSocketFactory
Returns a copy of the environment's default socket factory.
getDefault()
- Static method in class javax.net.
SocketFactory
Returns a copy of the environment's default socket factory.
getDefault()
- Static method in class javax.net.ssl.
SSLContext
Returns the default SSL context.
getDefault()
- Static method in class javax.net.ssl.
SSLServerSocketFactory
Returns the default SSL server socket factory.
getDefault()
- Static method in class javax.net.ssl.
SSLSocketFactory
Returns the default SSL socket factory.
getDefault()
- Static method in class javax.smartcardio.
TerminalFactory
Returns the default TerminalFactory instance.
getDefault(Locale.Category)
- Static method in class java.util.
Locale
Gets the current value of the default locale for the specified Category
 for this instance of the Java Virtual Machine.
getDefaultAction()
- Method in interface javax.swing.text.
Keymap
Fetches the default action to fire if a
 key is typed (i.e. a KEY_TYPED KeyEvent is received)
 and there is no binding for it.
getDefaultActions()
- Method in class java.awt.dnd.
DropTarget
Gets an
int
representing the
 current action(s) supported by this
DropTarget
.
getDefaultAlgorithm()
- Static method in class javax.net.ssl.
KeyManagerFactory
Obtains the default KeyManagerFactory algorithm name.
getDefaultAlgorithm()
- Static method in class javax.net.ssl.
TrustManagerFactory
Obtains the default TrustManagerFactory algorithm name.
getDefaultAllowUserInteraction()
- Static method in class java.net.
URLConnection
Returns the default value of the
allowUserInteraction
field.
getDefaultAttributeValue(Class<? extends Attribute>)
- Method in interface javax.print.
PrintService
Determines this print service's default printing attribute value in the
 given category.
getDefaultButton()
- Method in class javax.swing.
JRootPane
Returns the value of the
defaultButton
property.
getDefaultButton(JFileChooser)
- Method in class javax.swing.plaf.
FileChooserUI
Returns default button for current
LookAndFeel
.
getDefaultChecked()
- Method in interface org.w3c.dom.html.
HTMLInputElement
When
type
has the value "Radio" or "Checkbox", this
 represents the HTML checked attribute of the element.
getDefaultChoice()
- Method in class javax.security.auth.callback.
ChoiceCallback
Get the defaultChoice.
getDefaultChooserPanels()
- Static method in class javax.swing.colorchooser.
ColorChooserComponentFactory
Returns the default chooser panels.
getDefaultCipherSuites()
- Method in class javax.net.ssl.
SSLServerSocketFactory
Returns the list of cipher suites which are enabled by default.
getDefaultCipherSuites()
- Method in class javax.net.ssl.
SSLSocketFactory
Returns the list of cipher suites which are enabled by default.
getDefaultClassLoader()
- Method in class javax.management.remote.rmi.
RMIServerImpl
Gets the default
ClassLoader
used by this connector
 server.
getDefaultClosedIcon()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the default icon, for the current laf, that is used to
 represent non-leaf nodes that are not expanded.
getDefaultCloseOperation()
- Method in class javax.swing.
JDialog
Returns the operation which occurs when the user
 initiates a "close" on this dialog.
getDefaultCloseOperation()
- Method in class javax.swing.
JFrame
Returns the operation that occurs when the user
 initiates a "close" on this frame.
getDefaultCloseOperation()
- Method in class javax.swing.
JInternalFrame
Returns the default operation that occurs when the user
 initiates a "close" on this internal frame.
getDefaultComponent(Container)
- Method in class java.awt.
ContainerOrderFocusTraversalPolicy
Returns the default Component to focus.
getDefaultComponent(Container)
- Method in class java.awt.
FocusTraversalPolicy
Returns the default Component to focus.
getDefaultComponent(Container)
- Method in class javax.swing.
SortingFocusTraversalPolicy
Returns the default Component to focus.
getDefaultConfiguration()
- Method in class java.awt.
GraphicsDevice
Returns the default
GraphicsConfiguration
associated with this
GraphicsDevice
.
getDefaultController()
- Method in class javax.imageio.
IIOParam
Returns the default
IIOParamController
, if there
 is one, regardless of the currently installed controller.
getDefaultController()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns the default
IIOMetadataController
, if there
 is one, regardless of the currently installed controller.
getDefaultCursor()
- Static method in class java.awt.
Cursor
Return the system default cursor.
getDefaultCursor()
- Method in class javax.swing.text.html.
HTMLEditorKit
Returns the default cursor.
getDefaultDigestAlgorithm()
- Static method in class jdk.security.jarsigner.
JarSigner.Builder
Gets the default digest algorithm.
getDefaultDirectory()
- Method in class javax.swing.filechooser.
FileSystemView
Return the user's default starting directory for the file chooser.
getDefaultDomain()
- Method in interface javax.management.
MBeanServer
getDefaultDomain()
- Method in interface javax.management.
MBeanServerConnection
Returns the default domain used for naming the MBean.
getDefaultDomain(Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.getDefaultDomain()
.
getDefaultDomain(Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
getDefaultDomain(Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
getDefaultDragSource()
- Static method in class java.awt.dnd.
DragSource
Gets the
DragSource
object associated with
 the underlying platform.
getDefaultEditor(Class<?>)
- Method in class javax.swing.
JTable
Returns the editor to be used when no editor has been set in
 a
TableColumn
.
getDefaultEventIndex()
- Method in interface java.beans.
BeanInfo
A bean may have a default event typically applied when this bean is used.
getDefaultEventIndex()
- Method in class java.beans.
SimpleBeanInfo
Deny knowledge of a default event.
getDefaultFlavorMap()
- Static method in class java.awt.datatransfer.
SystemFlavorMap
Returns the default FlavorMap for this thread's ClassLoader.
getDefaultFocusTraversalKeys(int)
- Method in class java.awt.
KeyboardFocusManager
Returns a Set of default focus traversal keys for a given traversal
 operation.
getDefaultFocusTraversalPolicy()
- Method in class java.awt.
KeyboardFocusManager
Returns the default FocusTraversalPolicy.
getDefaultFormatter()
- Method in class javax.swing.text.
DefaultFormatterFactory
Returns the
JFormattedTextField.AbstractFormatter
to use
 as a last resort, eg in case a display, edit or null
JFormattedTextField.AbstractFormatter
has not been specified.
getDefaultFractionDigits()
- Method in class java.util.
Currency
Gets the default number of fraction digits used with this currency.
getDefaultHostnameVerifier()
- Static method in class javax.net.ssl.
HttpsURLConnection
Gets the default
HostnameVerifier
that is inherited
 by new instances of this class.
getDefaultIcon()
- Method in class javax.swing.plaf.basic.
BasicRadioButtonUI
Returns the default icon.
getDefaultIcon(AbstractButton)
- Method in class javax.swing.plaf.synth.
SynthButtonUI
Returns the default icon.
getDefaultImageMetadata(ImageTypeSpecifier, ImageWriteParam)
- Method in class javax.imageio.
ImageWriter
Returns an
IIOMetadata
object containing default
 values for encoding an image of the given type.
getDefaultInitCtx()
- Method in class javax.naming.
InitialContext
Retrieves the initial context by calling
NamingManager.getInitialContext()
and cache it in defaultInitCtx.
getDefaultInstance()
- Static method in class javax.imageio.spi.
IIORegistry
Returns the default
IIORegistry
instance used by
 the Image I/O API.
getDefaultLeafIcon()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the default icon, for the current laf, that is used to
 represent leaf nodes.
getDefaultLightWeightPopupEnabled()
- Static method in class javax.swing.
JPopupMenu
Gets the
defaultLightWeightPopupEnabled
property,
  which by default is
true
.
getDefaultLocale()
- Static method in class javax.swing.
JComponent
Returns the default locale used to initialize each JComponent's
 locale property upon creation.
getDefaultLocale()
- Method in class javax.swing.
UIDefaults
Returns the default locale.
getDefaultName()
- Method in class javax.security.auth.callback.
NameCallback
Get the default name.
getDefaultNamespacePrefix()
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
getDefaultNamespacePrefix()
- Method in interface javax.xml.crypto.
XMLCryptoContext
Returns the default namespace prefix.
getDefaultOpenIcon()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the default icon, for the current laf, that is used to
 represent non-leaf nodes that are expanded.
getDefaultOption()
- Method in class javax.security.auth.callback.
ConfirmationCallback
Get the default option.
getDefaultPort()
- Method in class java.net.
URL
Gets the default port number of the protocol associated
 with this
URL
.
getDefaultPort()
- Method in class java.net.
URLStreamHandler
Returns the default port for a URL parsed by this handler.
getDefaultPrintService()
- Method in class javax.print.
PrintServiceLookup
Not called directly by applications.
getDefaultPropertyIndex()
- Method in interface java.beans.
BeanInfo
A bean may have a default property commonly updated when this bean is customized.
getDefaultPropertyIndex()
- Method in class java.beans.
SimpleBeanInfo
Deny knowledge of a default property.
getDefaultProviderInstance()
- Static method in class java.rmi.server.
RMIClassLoader
Returns the canonical instance of the default provider
 for the service provider interface
RMIClassLoaderSpi
.
getDefaultQueue()
- Static method in class javax.swing.text.
LayoutQueue
Fetch the default layout queue.
getDefaultReadParam()
- Method in class javax.imageio.
ImageReader
Returns a default
ImageReadParam
object
 appropriate for this format.
getDefaultRenderer()
- Method in class javax.swing.table.
JTableHeader
Returns the default renderer used when no
headerRenderer
is defined by a
TableColumn
.
getDefaultRenderer(Class<?>)
- Method in class javax.swing.
JTable
Returns the cell renderer to be used when no renderer has been set in
 a
TableColumn
.
getDefaultRepresentationClass()
- Method in class java.awt.datatransfer.
DataFlavor
Returns the default representation class.
getDefaultRepresentationClassAsString()
- Method in class java.awt.datatransfer.
DataFlavor
Returns the name of the default representation class.
getDefaultRequestProperty(String)
- Static method in class java.net.
URLConnection
Deprecated.
The instance specific getRequestProperty method
 should be used after an appropriate instance of URLConnection
 is obtained.
getDefaultRootElement()
- Method in class javax.swing.text.
AbstractDocument
Returns the root element that views should be based upon
 unless some other mechanism for assigning views to element
 structures is provided.
getDefaultRootElement()
- Method in class javax.swing.text.
DefaultStyledDocument
Gets the default root element.
getDefaultRootElement()
- Method in interface javax.swing.text.
Document
Returns the root element that views should be based upon,
 unless some other mechanism for assigning views to element
 structures is provided.
getDefaultRootElement()
- Method in class javax.swing.text.
PlainDocument
Gets the default root element for the document model.
getDefaults()
- Method in class javax.swing.
LookAndFeel
Returns the look and feel defaults.
getDefaults()
- Method in class javax.swing.plaf.basic.
BasicLookAndFeel
Returns the look and feel defaults.
getDefaults()
- Method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the look and feel defaults.
getDefaults()
- Method in class javax.swing.plaf.multi.
MultiLookAndFeel
Creates, initializes, and returns
 the look and feel specific defaults.
getDefaults()
- Method in class javax.swing.plaf.synth.
SynthLookAndFeel
Returns the defaults for this SynthLookAndFeel.
getDefaults()
- Static method in class javax.swing.
UIManager
Returns the defaults.
getDefaultScreenDevice()
- Method in class java.awt.
GraphicsEnvironment
Returns the default screen
GraphicsDevice
.
getDefaultSelected()
- Method in interface org.w3c.dom.html.
HTMLOptionElement
Represents the value of the HTML selected attribute.
getDefaultSelection()
- Method in class java.awt.
JobAttributes
Specifies whether, for jobs using these attributes, the application
 should print all pages, the range specified by the return value of
getPageRanges
, or the current selection.
getDefaultSignatureAlgorithm(PrivateKey)
- Static method in class jdk.security.jarsigner.
JarSigner.Builder
Gets the default signature algorithm for a private key.
getDefaultSize()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Return the default size of an empty display area of the combo box using
 the current renderer and font.
getDefaultSize()
- Method in class javax.swing.plaf.synth.
SynthComboBoxUI
Returns the default size of an empty display area of the combo box using
 the current renderer and font.
getDefaultSocketFactory()
- Static method in class java.rmi.server.
RMISocketFactory
Returns a reference to the default socket factory used
 by this RMI implementation.
getDefaultSoundbank()
- Method in interface javax.sound.midi.
Synthesizer
Obtains the default soundbank for the synthesizer, if one exists.
getDefaultSSLParameters()
- Method in class javax.net.ssl.
SSLContext
Returns a copy of the SSLParameters indicating the default
 settings for this SSL context.
getDefaultSSLSocketFactory()
- Static method in class javax.net.ssl.
HttpsURLConnection
Gets the default static
SSLSocketFactory
that is
 inherited by new instances of this class.
getDefaultStratum()
- Method in interface com.sun.jdi.
VirtualMachine
Return this VM's default stratum.
getDefaultStream()
- Static method in class java.rmi.server.
LogStream
Deprecated.
no replacement
getDefaultStreamMetadata(ImageWriteParam)
- Method in class javax.imageio.
ImageWriter
Returns an
IIOMetadata
object containing default
 values for encoding a stream of images.
getDefaultStyleContext()
- Static method in class javax.swing.text.
StyleContext
Returns default AttributeContext shared by all documents that
 don't bother to define/supply their own context.
getDefaultText()
- Method in class javax.security.auth.callback.
TextInputCallback
Get the default text.
getDefaultTextIconGap(AbstractButton)
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Returns the default gap between a text and an icon.
getDefaultToolkit()
- Static method in class java.awt.
Toolkit
Gets the default toolkit.
getDefaultTransactionIsolation()
- Method in interface java.sql.
DatabaseMetaData
Retrieves this database's default transaction isolation level.
getDefaultTransform()
- Method in class java.awt.
GraphicsConfiguration
Returns the default
AffineTransform
for this
GraphicsConfiguration
.
getDefaultTreeModel()
- Static method in class javax.swing.
JTree
Creates and returns a sample
TreeModel
.
getDefaultType()
- Static method in class java.security.cert.
CertPathBuilder
Returns the default
CertPathBuilder
type as specified by
 the
certpathbuilder.type
security property, or the string
 "PKIX" if no such property exists.
getDefaultType()
- Static method in class java.security.cert.
CertPathValidator
Returns the default
CertPathValidator
type as specified by
 the
certpathvalidator.type
security property, or the string
 "PKIX" if no such property exists.
getDefaultType()
- Static method in class java.security.cert.
CertStore
Returns the default
CertStore
type as specified by the
certstore.type
security property, or the string
 "LDAP" if no such property exists.
getDefaultType()
- Static method in class java.security.
KeyStore
Returns the default keystore type as specified by the
keystore.type
security property, or the string
 "jks" (acronym for "Java keystore")
 if no such property exists.
getDefaultType()
- Static method in class javax.smartcardio.
TerminalFactory
Get the default TerminalFactory type.
getDefaultUncaughtExceptionHandler()
- Static method in class java.lang.
Thread
Returns the default handler invoked when a thread abruptly terminates
 due to an uncaught exception.
getDefaultUseCaches()
- Method in class java.net.
URLConnection
Returns the default value of a
URLConnection
's
useCaches
flag.
getDefaultUseCaches(String)
- Static method in class java.net.
URLConnection
Returns the default value of the
useCaches
flag for the given protocol.
getDefaultValue()
- Method in interface com.sun.source.tree.
MethodTree
Returns the default value, if this is an element within
 an annotation type declaration.
getDefaultValue()
- Method in class java.lang.reflect.
Method
Returns the default value for the annotation member represented by
 this
Method
instance.
getDefaultValue()
- Method in interface javax.lang.model.element.
ExecutableElement
Returns the default value if this executable is an annotation
 interface element.
getDefaultValue()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns the default value for the attribute described by this
OpenMBeanAttributeInfoSupport
instance, if specified,
 or
null
otherwise.
getDefaultValue()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns the default value for this parameter, if it has one, or
null
otherwise.
getDefaultValue()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns the default value for the parameter described by this
OpenMBeanParameterInfoSupport
instance, if specified,
 or
null
otherwise.
getDefaultValue()
- Method in class javax.swing.text.html.
CSS.Attribute
Fetch the default value for the attribute.
getDefaultValue()
- Method in class jdk.jfr.
SettingDescriptor
Returns the default value for this setting descriptor.
getDefaultValue()
- Method in class jdk.management.jfr.
SettingDescriptorInfo
Returns the default value of the setting associated this
SettingDescriptorInfo
(for example,
"20 ms"
).
getDefaultValue()
- Method in interface org.w3c.dom.html.
HTMLInputElement
When the
type
attribute of the element has the value
 "Text", "File" or "Password", this represents the HTML value attribute
 of the element.
getDefaultValue()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Represents the contents of the element.
getDefaultView()
- Method in interface org.w3c.dom.views.
DocumentView
The default
AbstractView
for this
Document
,
 or
null
if none available.
getDefaultWriteParam()
- Method in class javax.imageio.
ImageWriter
Returns a new
ImageWriteParam
object of the
 appropriate type for this file format containing default
 values, that is, those values that would be used
 if no
ImageWriteParam
object were specified.
getDefer()
- Method in interface org.w3c.dom.html.
HTMLScriptElement
Indicates that the user agent can defer processing of the script.
getDefinedPackage(String)
- Method in class java.lang.
ClassLoader
Returns a
Package
of the given
name
that
 has been defined by this class loader.
getDefinedPackages()
- Method in class java.lang.
ClassLoader
Returns all of the
Package
s that have been defined by
 this class loader.
getDefinitionClass()
- Method in class java.lang.instrument.
ClassDefinition
Returns the class.
getDefinitionClassFile()
- Method in class java.lang.instrument.
ClassDefinition
Returns the array of bytes that contains the new class file.
getDelay()
- Method in class javax.swing.
JMenu
Returns the suggested delay, in milliseconds, before submenus
 are popped up or down.
getDelay()
- Method in class javax.swing.
Timer
Returns the delay, in milliseconds,
 between firings of action events.
getDelay(TimeUnit)
- Method in interface java.util.concurrent.
Delayed
Returns the remaining delay associated with this object, in the
 given time unit.
getDelegatedTask()
- Method in class javax.net.ssl.
SSLEngine
Returns a delegated
Runnable
task for
 this
SSLEngine
.
getDelegCred()
- Method in interface org.ietf.jgss.
GSSContext
Obtains the credentials delegated by the context
 initiator to the context acceptor.
getDelegPolicyState()
- Method in interface com.sun.security.jgss.
ExtendedGSSContext
Returns the delegation policy response.
getDependency()
- Method in interface javax.lang.model.element.
ModuleElement.RequiresDirective
Returns the module that is required.
getDepth()
- Method in interface java.security.cert.
PolicyNode
Returns the depth of this node in the valid policy tree.
getDepth()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the depth of the tree rooted at this node -- the longest
 distance from this node to a leaf.
getDepth(int)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.DirectoryComboBoxModel
Returns the depth of
i
-th file.
getDER()
- Method in class org.ietf.jgss.
Oid
Returns the full ASN.1 DER encoding for this oid object, which
 includes the tag and length.
getDereferencedData()
- Method in interface javax.xml.crypto.dsig.
Reference
Returns the dereferenced data, if
reference caching
is enabled.
getDerefLinkFlag()
- Method in class javax.naming.directory.
SearchControls
Determines whether links will be dereferenced during the search.
getDerivedColor(Color, Color, float)
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Decodes and returns a color, which is derived from a offset between two
 other colors.
getDerivedColor(Color, Color, float, boolean)
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Decodes and returns a color, which is derived from an offset between two
 other colors.
getDerivedColor(String, float, float, float, int, boolean)
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Get a derived color, derived colors are shared instances and is color
 value will change when its parent UIDefault color changes.
getDerivedGauge()
- Method in class javax.management.monitor.
CounterMonitor
Deprecated.
As of JMX 1.2, replaced by
CounterMonitor.getDerivedGauge(ObjectName)
getDerivedGauge()
- Method in interface javax.management.monitor.
CounterMonitorMBean
Deprecated.
As of JMX 1.2, replaced by
CounterMonitorMBean.getDerivedGauge(ObjectName)
getDerivedGauge()
- Method in class javax.management.monitor.
GaugeMonitor
Deprecated.
As of JMX 1.2, replaced by
GaugeMonitor.getDerivedGauge(ObjectName)
getDerivedGauge()
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Deprecated.
As of JMX 1.2, replaced by
GaugeMonitorMBean.getDerivedGauge(ObjectName)
getDerivedGauge()
- Method in class javax.management.monitor.
MonitorNotification
Gets the derived gauge of this monitor notification.
getDerivedGauge()
- Method in class javax.management.monitor.
StringMonitor
Deprecated.
As of JMX 1.2, replaced by
StringMonitor.getDerivedGauge(ObjectName)
getDerivedGauge()
- Method in interface javax.management.monitor.
StringMonitorMBean
Deprecated.
As of JMX 1.2, replaced by
StringMonitorMBean.getDerivedGauge(ObjectName)
getDerivedGauge(ObjectName)
- Method in class javax.management.monitor.
CounterMonitor
Gets the derived gauge of the specified object, if this object is
 contained in the set of observed MBeans, or
null
otherwise.
getDerivedGauge(ObjectName)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Gets the derived gauge for the specified MBean.
getDerivedGauge(ObjectName)
- Method in class javax.management.monitor.
GaugeMonitor
Gets the derived gauge of the specified object, if this object is
 contained in the set of observed MBeans, or
null
otherwise.
getDerivedGauge(ObjectName)
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Gets the derived gauge for the specified MBean.
getDerivedGauge(ObjectName)
- Method in class javax.management.monitor.
StringMonitor
Gets the derived gauge of the specified object, if this object is
 contained in the set of observed MBeans, or
null
otherwise.
getDerivedGauge(ObjectName)
- Method in interface javax.management.monitor.
StringMonitorMBean
Gets the derived gauge for the specified MBean.
getDerivedGaugeTimeStamp()
- Method in class javax.management.monitor.
CounterMonitor
Deprecated.
As of JMX 1.2, replaced by
CounterMonitor.getDerivedGaugeTimeStamp(ObjectName)
getDerivedGaugeTimeStamp()
- Method in interface javax.management.monitor.
CounterMonitorMBean
Deprecated.
As of JMX 1.2, replaced by
CounterMonitorMBean.getDerivedGaugeTimeStamp(ObjectName)
getDerivedGaugeTimeStamp()
- Method in class javax.management.monitor.
GaugeMonitor
Deprecated.
As of JMX 1.2, replaced by
GaugeMonitor.getDerivedGaugeTimeStamp(ObjectName)
getDerivedGaugeTimeStamp()
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Deprecated.
As of JMX 1.2, replaced by
GaugeMonitorMBean.getDerivedGaugeTimeStamp(ObjectName)
getDerivedGaugeTimeStamp()
- Method in class javax.management.monitor.
StringMonitor
Deprecated.
As of JMX 1.2, replaced by
StringMonitor.getDerivedGaugeTimeStamp(ObjectName)
getDerivedGaugeTimeStamp()
- Method in interface javax.management.monitor.
StringMonitorMBean
Deprecated.
As of JMX 1.2, replaced by
StringMonitorMBean.getDerivedGaugeTimeStamp(ObjectName)
getDerivedGaugeTimeStamp(ObjectName)
- Method in class javax.management.monitor.
CounterMonitor
Gets the derived gauge timestamp of the specified object, if
 this object is contained in the set of observed MBeans, or
0
otherwise.
getDerivedGaugeTimeStamp(ObjectName)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Gets the derived gauge timestamp for the specified MBean.
getDerivedGaugeTimeStamp(ObjectName)
- Method in class javax.management.monitor.
GaugeMonitor
Gets the derived gauge timestamp of the specified object, if
 this object is contained in the set of observed MBeans, or
0
otherwise.
getDerivedGaugeTimeStamp(ObjectName)
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Gets the derived gauge timestamp for the specified MBean.
getDerivedGaugeTimeStamp(ObjectName)
- Method in class javax.management.monitor.
StringMonitor
Gets the derived gauge timestamp of the specified object, if
 this object is contained in the set of observed MBeans, or
0
otherwise.
getDerivedGaugeTimeStamp(ObjectName)
- Method in interface javax.management.monitor.
StringMonitorMBean
Gets the derived gauge timestamp for the specified MBean.
getDescendantToggledPaths(TreePath)
- Method in class javax.swing.
JTree
Returns an
Enumeration
of
TreePaths
that have been expanded that
 are descendants of
parent
.
getDescent()
- Method in class java.awt.font.
GraphicAttribute
Returns the descent of this
GraphicAttribute
.
getDescent()
- Method in class java.awt.font.
ImageGraphicAttribute
Returns the descent of this
ImageGraphicAttribute
.
getDescent()
- Method in class java.awt.font.
LineMetrics
Returns the descent of the text.
getDescent()
- Method in class java.awt.font.
ShapeGraphicAttribute
Returns the descent of this
ShapeGraphicAttribute
.
getDescent()
- Method in class java.awt.font.
TextLayout
Returns the descent of this
TextLayout
.
getDescent()
- Method in class java.awt.
FontMetrics
Determines the
font descent
of the
Font
described by this
FontMetrics
object.
getDescent(GlyphView)
- Method in class javax.swing.text.
GlyphView.GlyphPainter
Returns of the descent.
getDescription()
- Method in interface com.sun.source.doctree.
IndexTree
Returns the description, if any.
getDescription()
- Method in interface com.sun.source.doctree.
ParamTree
Returns the description of the parameter.
getDescription()
- Method in interface com.sun.source.doctree.
ProvidesTree
Returns a description of the service type being provided by the module.
getDescription()
- Method in interface com.sun.source.doctree.
ReturnTree
Returns the description of the return value of a method.
getDescription()
- Method in interface com.sun.source.doctree.
SerialDataTree
Returns the description of the serial data.
getDescription()
- Method in interface com.sun.source.doctree.
SerialFieldTree
Returns the description of the serial field.
getDescription()
- Method in interface com.sun.source.doctree.
SerialTree
Returns the description of the field, or the word
 "include" or "exclude".
getDescription()
- Method in interface com.sun.source.doctree.
ThrowsTree
Returns a description of the reasons why the
 exception may be thrown.
getDescription()
- Method in interface com.sun.source.doctree.
UsesTree
Returns a description of the use of service type within the module.
getDescription()
- Method in exception class java.util.regex.
PatternSyntaxException
Retrieves the description of the error.
getDescription()
- Method in class javax.management.
MBeanFeatureInfo
Returns the human-readable description of the feature.
getDescription()
- Method in class javax.management.
MBeanInfo
Returns a human readable description of the MBean.
getDescription()
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns a human readable description of the MBean.
getDescription()
- Method in interface javax.management.openmbean.
OpenMBeanConstructorInfo
Returns a human readable description of the constructor
 described by this
OpenMBeanConstructorInfo
instance.
getDescription()
- Method in interface javax.management.openmbean.
OpenMBeanInfo
Returns a human readable description of the type of open MBean
 instances this
OpenMBeanInfo
describes.
getDescription()
- Method in interface javax.management.openmbean.
OpenMBeanOperationInfo
Returns a human readable description of the operation
 described by this
OpenMBeanOperationInfo
instance.
getDescription()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns a human readable description of the parameter
 described by this
OpenMBeanParameterInfo
instance.
getDescription()
- Method in class javax.management.openmbean.
OpenType
Returns the text description of this
OpenType
instance.
getDescription()
- Method in class javax.management.relation.
RoleInfo
Returns description text for the role.
getDescription()
- Method in class javax.sound.midi.
MidiDevice.Info
Obtains the description of the device.
getDescription()
- Method in interface javax.sound.midi.
Soundbank
Obtains a textual description of the sound bank, suitable for display.
getDescription()
- Method in class javax.sound.sampled.
Mixer.Info
Obtains the description of the mixer.
getDescription()
- Method in class javax.swing.event.
HyperlinkEvent
Get the description of the link as a string.
getDescription()
- Method in class javax.swing.filechooser.
FileFilter
The description of this filter.
getDescription()
- Method in class javax.swing.filechooser.
FileNameExtensionFilter
The description of this filter.
getDescription()
- Method in class javax.swing.
ImageIcon
Gets the description of the image.
getDescription()
- Method in class javax.swing.
LookAndFeel
Return a one line description of this look and feel implementation,
 e.g.
getDescription()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI.AcceptAllFileFilter
The description of this filter.
getDescription()
- Method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns a short description of this look and feel.
getDescription()
- Method in class javax.swing.plaf.multi.
MultiLookAndFeel
Returns a one-line description of this look and feel.
getDescription()
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Returns a textual description of this look and feel.
getDescription()
- Method in class javax.swing.plaf.synth.
SynthLookAndFeel
Returns a textual description of SynthLookAndFeel.
getDescription()
- Method in interface jdk.javadoc.doclet.
Doclet.Option
Returns the description of the option.
getDescription()
- Method in class jdk.jfr.
Configuration
Returns a short sentence that describes the configuration (for example
"Low
 overhead configuration safe for continuous use in production
 environments"
)
getDescription()
- Method in class jdk.jfr.
EventType
Returns a short sentence that describes the event class.
getDescription()
- Method in class jdk.jfr.
SettingDescriptor
Returns a sentence that describes the setting (for example
"Record event with duration
 above or equal to threshold"
).
getDescription()
- Method in class jdk.jfr.
ValueDescriptor
Returns a sentence describing the value (for example,
"Maximum
 throughput in the transaction system. Value is reset after each new
 batch."
).
getDescription()
- Method in class jdk.management.jfr.
ConfigurationInfo
Returns a short sentence that describes the configuration associated with
 this
ConfigurationInfo
(for example,
"Low
 overhead configuration safe for continuous use in production
 environments"
.
getDescription()
- Method in class jdk.management.jfr.
EventTypeInfo
Returns a short sentence or two describing the event type associated with
 this
EventTypeInfo
, for example
"Garbage collection performed by the JVM""
.
getDescription()
- Method in class jdk.management.jfr.
SettingDescriptorInfo
Returns the description of the setting associated this
SettingDescriptorInfo
(for example,
"The duration an event must exceed to be be recorded"
).
getDescription(File)
- Method in class javax.swing.filechooser.
FileView
A human readable description of the file.
getDescription(File)
- Method in class javax.swing.
JFileChooser
Returns the file description.
getDescription(String)
- Method in class javax.management.openmbean.
CompositeType
Returns the description of the item whose name is
itemName
,
 or
null
if this
CompositeType
instance does not define any item
 whose name is
itemName
.
getDescription(Locale)
- Method in class javax.imageio.spi.
IIOServiceProvider
Returns a brief, human-readable description of this service
 provider and its associated implementation.
getDescription(MBeanAttributeInfo)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the description that will be used in the MBeanAttributeInfo
 returned by this MBean.
getDescription(MBeanConstructorInfo)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the description that will be used in the MBeanConstructorInfo
 returned by this MBean.
getDescription(MBeanConstructorInfo, MBeanParameterInfo, int)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the description that will be used for the
sequence
MBeanParameterInfo of the MBeanConstructorInfo returned by this MBean.
getDescription(MBeanFeatureInfo)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the description that will be used in the MBeanFeatureInfo
 returned by this MBean.
getDescription(MBeanInfo)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the description that will be used in the MBeanInfo returned by
 this MBean.
getDescription(MBeanOperationInfo)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the description that will be used in the MBeanOperationInfo
 returned by this MBean.
getDescription(MBeanOperationInfo, MBeanParameterInfo, int)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the description that will be used for the
sequence
MBeanParameterInfo of the MBeanOperationInfo returned by this MBean.
getDescriptor()
- Method in class java.lang.
Module
Returns the module descriptor for this module or
null
if this
 module is an unnamed module.
getDescriptor()
- Method in interface java.lang.
StackWalker.StackFrame
Returns the
descriptor
of the method represented by
 this stack frame as defined by
The Java Virtual Machine Specification
.
getDescriptor()
- Method in interface javax.management.
DescriptorRead
Returns a copy of Descriptor.
getDescriptor()
- Method in class javax.management.
MBeanFeatureInfo
Returns the descriptor for the feature.
getDescriptor()
- Method in class javax.management.
MBeanInfo
Get the descriptor of this MBeanInfo.
getDescriptor()
- Method in class javax.management.modelmbean.
ModelMBeanAttributeInfo
Gets a copy of the associated Descriptor for the
 ModelMBeanAttributeInfo.
getDescriptor()
- Method in class javax.management.modelmbean.
ModelMBeanConstructorInfo
Returns a copy of the associated Descriptor.
getDescriptor()
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
getDescriptor()
- Method in class javax.management.modelmbean.
ModelMBeanNotificationInfo
Returns a copy of the associated Descriptor for the
 ModelMBeanNotificationInfo.
getDescriptor()
- Method in class javax.management.modelmbean.
ModelMBeanOperationInfo
Returns a copy of the associated Descriptor of the
 ModelMBeanOperationInfo.
getDescriptor()
- Method in interface jdk.dynalink.
RelinkableCallSite
Returns the descriptor for this call site.
getDescriptor()
- Method in class jdk.dynalink.support.
AbstractRelinkableCallSite
getDescriptor()
- Method in class jdk.jfr.consumer.
RecordedMethod
Returns the method descriptor for this method (for example,
"(Ljava/lang/String;)V"
).
getDescriptor(String)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
Returns a Descriptor requested by name.
getDescriptor(String, String)
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns a Descriptor requested by name and descriptorType.
getDescriptor(String, String)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
getDescriptors(String)
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns a Descriptor array consisting of all
 Descriptors for the ModelMBeanInfo of type inDescriptorType.
getDescriptors(String)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
getDesignAxisDefaults()
- Method in interface java.awt.font.
MultipleMaster
Returns an array of default design values for each axis.
getDesignAxisNames()
- Method in interface java.awt.font.
MultipleMaster
Returns the name for each design axis.
getDesignAxisRanges()
- Method in interface java.awt.font.
MultipleMaster
Returns an array of design limits interleaved in the form [from→to]
 for each axis.
getDesktop()
- Static method in class java.awt.
Desktop
Returns the
Desktop
instance of the current
 desktop context.
getDesktopColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the desktop color of the current theme.
getDesktopColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the desktop color.
getDesktopColor()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the desktop color.
getDesktopIcon()
- Method in class javax.swing.
JInternalFrame
Returns the
JDesktopIcon
used when this
JInternalFrame
is iconified.
getDesktopIconBorder()
- Static method in class javax.swing.plaf.metal.
MetalBorders
Returns a border instance for a Desktop Icon.
getDesktopManager()
- Method in class javax.swing.
JDesktopPane
Returns the
DesktopManger
that handles
 desktop-specific UI actions.
getDesktopManager()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Returns the proper DesktopManager.
getDesktopPane()
- Method in class javax.swing.
JInternalFrame
Convenience method that searches the ancestor hierarchy for a
JDesktop
instance.
getDesktopPane()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon
Convenience method to ask the icon for the
Desktop
object it belongs to.
getDesktopPaneForComponent(Component)
- Static method in class javax.swing.
JOptionPane
Returns the specified component's desktop pane.
getDesktopProperty(String)
- Method in class java.awt.
Toolkit
Obtains a value for the specified desktop property.
getDesktopPropertyValue(String, Object)
- Static method in class javax.swing.
LookAndFeel
Returns the value of the specified system desktop property by
 invoking
Toolkit.getDefaultToolkit().getDesktopProperty()
.
getDestination()
- Method in class java.awt.
JobAttributes
Specifies whether output will be to a printer or a file for jobs using
 these attributes.
getDestination()
- Method in class javax.imageio.
ImageReadParam
Returns the
BufferedImage
currently set by the
setDestination
method, or
null
if none is set.
getDestination()
- Method in class jdk.jfr.
Recording
Returns the destination file, where recording data is written when the
 recording stops, or
null
if no destination is set.
getDestination()
- Method in class jdk.management.jfr.
RecordingInfo
Returns destination path where data, for the recording associated with
 this
RecordingInfo
, should be written when the recording stops,
 or
null
if the recording should not be written.
getDestination(ImageReadParam, Iterator<ImageTypeSpecifier>, int, int)
- Static method in class javax.imageio.
ImageReader
Returns the
BufferedImage
to which decoded pixel
 data should be written.
getDestinationBands()
- Method in class javax.imageio.
ImageReadParam
Returns the set of band indices where data will be placed.
getDestinationOffset()
- Method in class javax.imageio.
IIOParam
Returns the offset in the destination image at which pixels are
 to be placed.
getDestinationType()
- Method in class javax.imageio.
IIOParam
Returns the type of image to be returned by the read, if one
 was set by a call to
setDestination(ImageTypeSpecifier)
, as an
ImageTypeSpecifier
.
getDetail()
- Method in interface com.sun.source.tree.
AssertTree
Returns the detail expression.
getDetail()
- Method in interface org.w3c.dom.events.
UIEvent
Specifies some detail information about the
Event
,
 depending on the type of event.
getDeterminant()
- Method in class java.awt.geom.
AffineTransform
Returns the determinant of the matrix representation of the transform.
getDevice()
- Method in class java.awt.
GraphicsConfiguration
Returns the
GraphicsDevice
associated with this
GraphicsConfiguration
.
getDevice()
- Method in class java.awt.
PointerInfo
Returns the
GraphicsDevice
where the mouse pointer was at the
 moment this
PointerInfo
was created.
getDevice(MidiDevice.Info)
- Method in class javax.sound.midi.spi.
MidiDeviceProvider
Obtains an instance of the device represented by the info object.
getDeviceConfiguration()
- Method in class java.awt.
Graphics2D
Returns the device configuration associated with this
Graphics2D
.
getDeviceInfo()
- Method in interface javax.sound.midi.
MidiDevice
Obtains information about the device, including its Java class and
Strings
containing its name, vendor, and description.
getDeviceInfo()
- Method in class javax.sound.midi.spi.
MidiDeviceProvider
Obtains the set of info objects representing the device or devices
 provided by this
MidiDeviceProvider
.
getDiagnostic()
- Method in interface com.sun.source.doctree.
ErroneousTree
Returns a diagnostic object giving details about
 the reason the body text is in error.
getDiagnosticOptions()
- Method in interface com.sun.management.
HotSpotDiagnosticMXBean
Returns a list of
VMOption
objects for all diagnostic options.
getDiagnostics()
- Method in class javax.tools.
DiagnosticCollector
Returns a list view of diagnostics collected by this object.
getDiagnosticWriter()
- Method in interface jdk.javadoc.doclet.
Reporter
Returns a writer that can be used to write diagnostic output,
 or
null
if no such writer is available.
getDialog()
- Method in class java.awt.
JobAttributes
Returns whether, for jobs using these attributes, the user should see
 a print dialog in which to modify the print settings, and which type of
 print dialog should be displayed.
getDialogTitle()
- Method in class javax.swing.
JFileChooser
Gets the string that goes in the
JFileChooser
's titlebar.
getDialogTitle(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the title of this dialog
getDialogTitle(JFileChooser)
- Method in class javax.swing.plaf.
FileChooserUI
Returns the dialog title.
getDialogTitle(JFileChooser)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getDialogTitle
method on each UI handled by this object.
getDialogType()
- Method in class javax.swing.
JFileChooser
Returns the type of this dialog.
getDifferenceMode()
- Method in class javax.management.monitor.
CounterMonitor
Gets the difference mode flag value common to all observed MBeans.
getDifferenceMode()
- Method in interface javax.management.monitor.
CounterMonitorMBean
Gets the difference mode flag value.
getDifferenceMode()
- Method in class javax.management.monitor.
GaugeMonitor
Gets the difference mode flag value common to all observed MBeans.
getDifferenceMode()
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Gets the difference mode flag value.
getDigestAlgorithm()
- Method in class java.security.spec.
MGF1ParameterSpec
Returns the algorithm name of the message digest used by the mask
 generation function.
getDigestAlgorithm()
- Method in class java.security.spec.
PSSParameterSpec
Returns the message digest algorithm name.
getDigestAlgorithm()
- Method in class javax.crypto.spec.
OAEPParameterSpec
Returns the message digest algorithm name.
getDigestAlgorithm()
- Method in class jdk.security.jarsigner.
JarSigner
Returns the digest algorithm for this
JarSigner
.
getDigestInputStream()
- Method in interface javax.xml.crypto.dsig.
Reference
Returns the pre-digested input stream, if
reference caching
is enabled.
getDigestLength()
- Method in class java.security.
MessageDigest
Returns the length of the digest in bytes, or 0 if this operation is
 not supported by the provider and the implementation is not cloneable.
getDigestMethod()
- Method in interface javax.xml.crypto.dsig.
Reference
Returns the digest method of this
Reference
.
getDigestValue()
- Method in interface javax.xml.crypto.dsig.
Reference
Returns the digest value of this
Reference
.
getDigit()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used for a digit in a pattern.
getDimAnnotations()
- Method in interface com.sun.source.tree.
NewArrayTree
Returns the annotations on each of the dimension
 expressions.
getDimension()
- Method in class javax.management.openmbean.
ArrayType
Returns the dimension of arrays described by this
ArrayType
instance.
getDimension(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is a
Dimension
return it,
 otherwise return
null
.
getDimension(Object)
- Static method in class javax.swing.
UIManager
Returns a dimension from the defaults.
getDimension(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is a
Dimension
return it, otherwise return
null
.
getDimension(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns a dimension from the defaults that is appropriate
 for the given locale.
getDimensions()
- Method in interface com.sun.source.tree.
NewArrayTree
Returns the dimension expressions for the type.
getDir()
- Method in interface org.w3c.dom.html.
HTMLElement
Specifies the base direction of directionally neutral text and the
 directionality of tables.
getDirection()
- Method in class javax.swing.plaf.basic.
BasicArrowButton
Returns the direction of the arrow.
getDirection()
- Method in class javax.swing.text.
DefaultStyledDocument.ElementSpec
Gets the direction.
getDirection()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the direction property definition in CSS2.
getDirectionality(char)
- Static method in class java.lang.
Character
Returns the Unicode directionality property for the given
 character.
getDirectionality(int)
- Static method in class java.lang.
Character
Returns the Unicode directionality property for the given
 character (Unicode code point).
getDirectives()
- Method in interface com.sun.source.tree.
ModuleTree
Returns the directives in the module declaration.
getDirectives()
- Method in interface javax.lang.model.element.
ModuleElement
Returns the directives contained in the declaration of this module.
getDirectories()
- Method in class javax.swing.plaf.basic.
BasicDirectoryModel
Returns a list of directories.
getDirectory()
- Method in class java.awt.
FileDialog
Gets the directory of this file dialog.
getDirectory()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns the associated
TIFFDirectory
, if available.
getDirectory()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Property to remember the directory that is currently selected in the UI.
getDirectoryName()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the directory name.
getDirectoryName()
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Returns the directory name.
getDirtyRegion(JComponent)
- Method in class javax.swing.
RepaintManager
Return the current dirty region for a component.
getDisabled()
- Method in interface org.w3c.dom.html.
HTMLButtonElement
The control is unavailable in this context.
getDisabled()
- Method in interface org.w3c.dom.html.
HTMLInputElement
The control is unavailable in this context.
getDisabled()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
Enables/disables the link.
getDisabled()
- Method in interface org.w3c.dom.html.
HTMLOptGroupElement
The control is unavailable in this context.
getDisabled()
- Method in interface org.w3c.dom.html.
HTMLOptionElement
The control is unavailable in this context.
getDisabled()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
The control is unavailable in this context.
getDisabled()
- Method in interface org.w3c.dom.html.
HTMLStyleElement
Enables/disables the style sheet.
getDisabled()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
The control is unavailable in this context.
getDisabled()
- Method in interface org.w3c.dom.stylesheets.
StyleSheet
false
if the style sheet is applied to the document.
getDisabledIcon()
- Method in class javax.swing.
AbstractButton
Returns the icon used by the button when it's disabled.
getDisabledIcon()
- Method in class javax.swing.
JLabel
Returns the icon used by the label when it's disabled.
getDisabledIcon(JComponent, Icon)
- Method in class javax.swing.
LookAndFeel
Returns an
Icon
with a disabled appearance.
getDisabledIcon(JComponent, Icon)
- Method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns an
Icon
with a disabled appearance.
getDisabledIconAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the tab disabled icon at
index
.
getDisabledObjectNames()
- Method in class javax.management.relation.
MBeanServerNotificationFilter
Gets all the ObjectNames disabled.
getDisabledSelectedIcon()
- Method in class javax.swing.
AbstractButton
Returns the icon used by the button when it's disabled and selected.
getDisabledSelectedIcon(JComponent, Icon)
- Method in class javax.swing.
LookAndFeel
Returns an
Icon
for use by disabled
 components that are also selected.
getDisabledSelectedIcon(JComponent, Icon)
- Method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns an
Icon
for use by disabled
 components that are also selected.
getDisabledTextColor()
- Method in class javax.swing.plaf.metal.
MetalButtonUI
Returns the color of a disabled text.
getDisabledTextColor()
- Method in class javax.swing.plaf.metal.
MetalRadioButtonUI
Returns the color of the disabled text.
getDisabledTextColor()
- Method in class javax.swing.plaf.metal.
MetalToggleButtonUI
Returns the color of a disabled text.
getDisabledTextColor()
- Method in class javax.swing.text.
JTextComponent
Fetches the current color used to render the
 disabled text.
getDiscard()
- Method in class java.net.
HttpCookie
Returns the discard attribute of the cookie
getDismissDelay()
- Method in class javax.swing.
ToolTipManager
Returns the dismissal delay value.
getDisplay()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the display property definition in CSS2.
getDisplayCountry()
- Method in class java.util.
Locale
Returns a name for the locale's country that is appropriate for display to the
 user.
getDisplayCountry(String, Locale)
- Method in class java.util.spi.
LocaleNameProvider
Returns a localized name for the given
IETF BCP47
region code (either ISO 3166 country code or UN M.49 area
 codes) and the given locale that is appropriate for display to the user.
getDisplayCountry(Locale)
- Method in class java.util.
Locale
Returns a name for the locale's country that is appropriate for display to the
 user.
getDisplayedMnemonic()
- Method in class javax.swing.
JLabel
Return the keycode that indicates a mnemonic key.
getDisplayedMnemonicIndex()
- Method in class javax.swing.
AbstractButton
Returns the character, as an index, that the look and feel should
 provide decoration for as representing the mnemonic character.
getDisplayedMnemonicIndex()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Provides a hint to the look and feel as to the index of the character in
getDisplayName
that should be visually identified as the
 mnemonic.
getDisplayedMnemonicIndex()
- Method in class javax.swing.
JLabel
Returns the character, as an index, that the look and feel should
 provide decoration for as representing the mnemonic character.
getDisplayedMnemonicIndexAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the character, as an index, that the look and feel should
 provide decoration for as representing the mnemonic character.
getDisplayFormatter()
- Method in class javax.swing.text.
DefaultFormatterFactory
Returns the
JFormattedTextField.AbstractFormatter
to use
 if the
JFormattedTextField
is not being edited and either
 the value is not-null, or the value is null and a null formatter has
 has not been specified.
getDisplayLanguage()
- Method in class java.util.
Locale
Returns a name for the locale's language that is appropriate for display to the
 user.
getDisplayLanguage(String, Locale)
- Method in class java.util.spi.
LocaleNameProvider
Returns a localized name for the given
IETF BCP47
language code and the given locale that is appropriate for
 display to the user.
getDisplayLanguage(Locale)
- Method in class java.util.
Locale
Returns a name for the locale's language that is appropriate for display to the
 user.
getDisplayMode()
- Method in class java.awt.
GraphicsDevice
Returns the current display mode of this
GraphicsDevice
.
getDisplayModes()
- Method in class java.awt.
GraphicsDevice
Returns all display modes available for this
GraphicsDevice
.
getDisplayName()
- Method in class java.beans.
FeatureDescriptor
Gets the localized display name of this feature.
getDisplayName()
- Method in class java.net.
NetworkInterface
Get the display name of this network interface.
getDisplayName()
- Method in class java.util.
Currency
Gets the name that is suitable for displaying this currency for
 the default
DISPLAY
locale.
getDisplayName()
- Method in class java.util.
Locale
Returns a name for the locale that is appropriate for display to the
 user.
getDisplayName()
- Method in class java.util.
TimeZone
Returns a long standard time name of this
TimeZone
suitable for
 presentation to the user in the default locale.
getDisplayName()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Returns a string containing the display name of the panel.
getDisplayName(boolean, int)
- Method in class java.util.
TimeZone
Returns a name in the specified
style
of this
TimeZone
suitable for presentation to the user in the default locale.
getDisplayName(boolean, int, Locale)
- Method in class java.util.
TimeZone
Returns a name in the specified
style
of this
TimeZone
suitable for presentation to the user in the specified
locale
.
getDisplayName(int, int, Locale)
- Method in class java.util.
Calendar
Returns the string representation of the calendar
field
value in the given
style
and
locale
.
getDisplayName(String, boolean, int, Locale)
- Method in class java.util.spi.
TimeZoneNameProvider
Returns a name for the given time zone ID that's suitable for
 presentation to the user in the specified locale.
getDisplayName(String, int, int, int, Locale)
- Method in class java.util.spi.
CalendarNameProvider
Returns the string representation (display name) of the calendar
field value
in the given
style
and
locale
.
getDisplayName(String, Locale)
- Method in class java.util.spi.
CurrencyNameProvider
Returns a name for the currency that is appropriate for display to the
 user.
getDisplayName(TextStyle, Locale)
- Method in interface java.time.chrono.
Chronology
Gets the textual representation of this chronology.
getDisplayName(TextStyle, Locale)
- Method in interface java.time.chrono.
Era
Gets the textual representation of this era.
getDisplayName(TextStyle, Locale)
- Method in enum class java.time.chrono.
HijrahEra
Gets the textual representation of this era.
getDisplayName(TextStyle, Locale)
- Method in class java.time.chrono.
JapaneseEra
Gets the textual representation of this era.
getDisplayName(TextStyle, Locale)
- Method in enum class java.time.chrono.
MinguoEra
Gets the textual representation of this era.
getDisplayName(TextStyle, Locale)
- Method in enum class java.time.chrono.
ThaiBuddhistEra
Gets the textual representation of this era.
getDisplayName(TextStyle, Locale)
- Method in enum class java.time.
DayOfWeek
Gets the textual representation, such as 'Mon' or 'Friday'.
getDisplayName(TextStyle, Locale)
- Method in enum class java.time.
Month
Gets the textual representation, such as 'Jan' or 'December'.
getDisplayName(TextStyle, Locale)
- Method in class java.time.
ZoneId
Gets the textual representation of the zone, such as 'British Time' or
 '+02:00'.
getDisplayName(Locale)
- Method in interface java.time.temporal.
TemporalField
Gets the display name for the field in the requested locale.
getDisplayName(Locale)
- Method in class java.util.
Currency
Gets the name that is suitable for displaying this currency for
 the specified locale.
getDisplayName(Locale)
- Method in class java.util.
Locale
Returns a name for the locale that is appropriate for display
 to the user.
getDisplayName(Locale)
- Method in class java.util.
TimeZone
Returns a long standard time name of this
TimeZone
suitable for
 presentation to the user in the specified
locale
.
getDisplayNames(int, int, Locale)
- Method in class java.util.
Calendar
Returns a
Map
containing all names of the calendar
field
in the given
style
and
locale
and their corresponding field values.
getDisplayNames(String, int, int, Locale)
- Method in class java.util.spi.
CalendarNameProvider
Returns a
Map
containing all string representations (display
 names) of the
Calendar
field
in the given
style
and
locale
and their corresponding field values.
getDisplayScript()
- Method in class java.util.
Locale
Returns a name for the locale's script that is appropriate for display to
 the user.
getDisplayScript(String, Locale)
- Method in class java.util.spi.
LocaleNameProvider
Returns a localized name for the given
IETF BCP47
script code and the given locale that is appropriate for
 display to the user.
getDisplayScript(Locale)
- Method in class java.util.
Locale
Returns a name for the locale's script that is appropriate
 for display to the user.
getDisplaySize()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Returns the calculated size of the display area.
getDisplayUnicodeExtensionKey(String, Locale)
- Method in class java.util.spi.
LocaleNameProvider
Returns a localized name for the given
Unicode extension
key,
 and the given locale that is appropriate for display to the user.
getDisplayUnicodeExtensionType(String, String, Locale)
- Method in class java.util.spi.
LocaleNameProvider
Returns a localized name for the given
Unicode extension
type,
 and the given locale that is appropriate for display to the user.
getDisplayVariant()
- Method in class java.util.
Locale
Returns a name for the locale's variant code that is appropriate for display to the
 user.
getDisplayVariant(String, Locale)
- Method in class java.util.spi.
LocaleNameProvider
Returns a localized name for the given variant code and the given locale that
 is appropriate for display to the user.
getDisplayVariant(Locale)
- Method in class java.util.
Locale
Returns a name for the locale's variant code that is appropriate for display to the
 user.
getDivider()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the divider between the top Components.
getDividerBorderSize()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Deprecated.
As of Java 2 platform v1.3, instead set the border on the
 divider.
getDividerLocation()
- Method in class javax.swing.
JSplitPane
Returns the last value passed to
setDividerLocation
.
getDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the location of the divider, which may differ from what
 the splitpane thinks the location of the divider is.
getDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
getDividerLocation
method on each UI handled by this object.
getDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.
SplitPaneUI
Returns the location of the divider.
getDividerSize()
- Method in class javax.swing.
JSplitPane
Returns the size of the divider.
getDividerSize()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Returns the size of the divider, that is the width if the splitpane
 is HORIZONTAL_SPLIT, or the height of VERTICAL_SPLIT.
getDivisionType()
- Method in class javax.sound.midi.
MidiFileFormat
Obtains the timing division type for the MIDI file.
getDivisionType()
- Method in class javax.sound.midi.
Sequence
Obtains the timing division type for this sequence.
getDoc()
- Method in interface javax.print.
MultiDoc
Obtain the current doc object.
getDocComment()
- Method in class com.sun.source.util.
DocTreePath
Returns the
DocCommentTree
associated with this path.
getDocComment(TreePath)
- Method in class com.sun.source.util.
Trees
Returns the doc comment, if any, for the
Tree
node identified by a given
TreePath
.
getDocComment(Element)
- Method in interface javax.lang.model.util.
Elements
Returns the text of the documentation ("Javadoc")
 comment of an element.
getDocCommentTree(TreePath)
- Method in class com.sun.source.util.
DocTrees
Returns the doc comment tree, if any, for the Tree node identified by a given TreePath.
getDocCommentTree(Element)
- Method in class com.sun.source.util.
DocTrees
Returns the doc comment tree of the given element.
getDocCommentTree(Element, String)
- Method in class com.sun.source.util.
DocTrees
Returns the doc comment tree of the given file whose path is
 specified relative to the given element.
getDocCommentTree(FileObject)
- Method in class com.sun.source.util.
DocTrees
Returns the doc comment tree of the given file.
getDocFlavor()
- Method in interface javax.print.
Doc
Determines the doc flavor in which this doc object will supply its piece
 of print data.
getDocFlavor()
- Method in class javax.print.
SimpleDoc
Determines the doc flavor in which this doc object will supply its piece
 of print data.
getDockingColor()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Gets the color displayed when over a docking area
getDocTreeFactory()
- Method in class com.sun.source.util.
DocTrees
Returns a utility object for creating
DocTree
objects.
getDocTreePath(FileObject, PackageElement)
- Method in class com.sun.source.util.
DocTrees
Returns a doc tree path containing the doc comment tree of the given file.
getDocTrees()
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns an instance of the
DocTrees
utility class.
getDoctype()
- Method in interface org.w3c.dom.
Document
The Document Type Declaration (see
DocumentType
)
 associated with this document.
getDocument()
- Method in interface javax.swing.event.
DocumentEvent
Gets the document that sourced the change event.
getDocument()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Retrieves the underlying model.
getDocument()
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Gets the document that sourced the change event.
getDocument()
- Method in class javax.swing.text.
AbstractWriter
Fetches the document.
getDocument()
- Method in class javax.swing.text.
DocumentFilter.FilterBypass
Returns the Document the mutation is occurring on.
getDocument()
- Method in interface javax.swing.text.
Element
Fetches the document associated with this element.
getDocument()
- Method in class javax.swing.text.
JTextComponent
Fetches the model associated with the editor.
getDocument()
- Method in class javax.swing.text.
View
Fetches the model associated with the view.
getDocument()
- Method in interface org.w3c.dom.views.
AbstractView
The source
DocumentView
of which this is an
AbstractView
.
getDocumentBase()
- Method in class java.applet.
Applet
Deprecated.
Gets the
URL
of the document in which this applet is embedded.
getDocumentBase()
- Method in interface java.applet.
AppletStub
Deprecated.
Gets the
URL
of the document in which the applet is embedded.
getDocumentBase()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the MLet text file's base URL.
getDocumentElement()
- Method in interface org.w3c.dom.
Document
This is a convenience attribute that allows direct access to the child
 node that is the document element of the document.
getDocumentFilter()
- Method in class javax.swing.
JFormattedTextField.AbstractFormatter
Subclass and override if you wish to provide a
DocumentFilter
to restrict what can be input.
getDocumentFilter()
- Method in class javax.swing.text.
AbstractDocument
Returns the
DocumentFilter
that is responsible for
 filtering of insertion/removal.
getDocumentFilter()
- Method in class javax.swing.text.
DefaultFormatter
Returns the
DocumentFilter
used to restrict the characters
 that can be input into the
JFormattedTextField
.
getDocumentListeners()
- Method in class javax.swing.text.
AbstractDocument
Returns an array of all the document listeners
 registered on this document.
getDocumentProperties()
- Method in class javax.swing.text.
AbstractDocument
Supports managing a set of properties.
getDocumentTypeDeclaration()
- Method in interface javax.xml.stream.events.
DTD
Returns the entire Document Type Declaration as a string, including the
 internal DTD subset.
getDocumentURI()
- Method in interface org.w3c.dom.
Document
The location of the document or
null
if undefined or if
 the
Document
was created using
DOMImplementation.createDocument
.
getDoInput()
- Method in class java.net.
URLConnection
Returns the value of this
URLConnection
's
doInput
flag.
getDomain()
- Method in class com.sun.security.auth.module.
NTSystem
Get the domain for the current NT user.
getDomain()
- Method in class java.net.
HttpCookie
Returns the domain name set for this cookie.
getDomain()
- Method in class javax.management.
ObjectName
Returns the domain part.
getDomain()
- Method in interface org.w3c.dom.html.
HTMLDocument
The domain name of the server that served the document, or
null
if the server cannot be identified by a domain name.
getDomainCombiner()
- Method in class java.security.
AccessControlContext
Deprecated.
Get the
DomainCombiner
associated with this
AccessControlContext
.
getDomainName()
- Method in class javax.naming.ldap.spi.
LdapDnsProviderResult
Returns the domain name resolved from the LDAP URL.
getDomains()
- Method in interface javax.management.
MBeanServer
getDomains()
- Method in interface javax.management.
MBeanServerConnection
Returns the list of domains in which any MBean is currently
 registered.
getDomains(Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.getDomains()
.
getDomains(Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
getDomains(Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
getDomainSID()
- Method in class com.sun.security.auth.module.
NTSystem
Get a printable SID for the current NT user's domain.
getDomConfig()
- Method in interface org.w3c.dom.
Document
The configuration used when
Document.normalizeDocument()
is invoked.
getDomConfig()
- Method in interface org.w3c.dom.ls.
LSParser
The
DOMConfiguration
object used when parsing an input
 source.
getDomConfig()
- Method in interface org.w3c.dom.ls.
LSSerializer
The
DOMConfiguration
object used by the
LSSerializer
when serializing a DOM node.
getDOMImplementation()
- Method in class javax.xml.parsers.
DocumentBuilder
Obtain an instance of a
DOMImplementation
object.
getDOMImplementation(String)
- Method in class org.w3c.dom.bootstrap.
DOMImplementationRegistry
Return the first implementation that has the desired
 features, or
null
if none is found.
getDOMImplementation(String)
- Method in interface org.w3c.dom.
DOMImplementationSource
A method to request the first DOM implementation that supports the
 specified features.
getDOMImplementationList(String)
- Method in class org.w3c.dom.bootstrap.
DOMImplementationRegistry
Return a list of implementations that support the
 desired features.
getDOMImplementationList(String)
- Method in interface org.w3c.dom.
DOMImplementationSource
A method to request a list of DOM implementations that support the
 specified features and versions, as specified in .
getDoOutput()
- Method in class java.net.
URLConnection
Returns the value of this
URLConnection
's
doOutput
flag.
getDot()
- Method in class javax.swing.event.
CaretEvent
Fetches the location of the caret.
getDot()
- Method in interface javax.swing.text.
Caret
Fetches the current position of the caret.
getDot()
- Method in class javax.swing.text.
DefaultCaret
Fetches the current position of the caret.
getDotBias()
- Method in class javax.swing.text.
DefaultCaret
Returns the bias of the caret position.
getDouble()
- Method in class java.nio.
ByteBuffer
Relative
get
method for reading a double value.
getDouble(int)
- Method in class java.nio.
ByteBuffer
Absolute
get
method for reading a double value.
getDouble(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
DOUBLE
parameter as a
double
in the Java programming language.
getDouble(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
double
in the Java programming language.
getDouble(Object)
- Method in class java.lang.reflect.
Field
Gets the value of a static or instance field of type
double
or of another primitive type convertible to
 type
double
via a widening conversion.
getDouble(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object, as a
double
.
getDouble(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
DOUBLE
parameter as a
double
in the Java programming language.
getDouble(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
double
in the Java programming language.
getDouble(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
double
or of another primitive
 type that is convertible to type
double
by a widening conversion.
getDouble(String, double)
- Method in class java.util.prefs.
AbstractPreferences
Implements the
getDouble
method as per the specification in
Preferences.getDouble(String,double)
.
getDouble(String, double)
- Method in class java.util.prefs.
Preferences
Returns the double value represented by the string associated with the
 specified key in this preference node.
getDoubleBufferMaximumSize()
- Method in class javax.swing.
RepaintManager
Returns the maximum double buffer size.
getDoubleParameter(int)
- Method in class java.awt.image.renderable.
ParameterBlock
A convenience method to return a parameter as a double.
getDragAction()
- Method in class java.awt.dnd.
DragGestureEvent
Returns an
int
representing the
 action selected by the user.
getDragEnabled()
- Method in class javax.swing.
JColorChooser
Gets the value of the
dragEnabled
property.
getDragEnabled()
- Method in class javax.swing.
JFileChooser
Gets the value of the
dragEnabled
property.
getDragEnabled()
- Method in class javax.swing.
JList
Returns whether or not automatic drag handling is enabled.
getDragEnabled()
- Method in class javax.swing.
JTable
Returns whether or not automatic drag handling is enabled.
getDragEnabled()
- Method in class javax.swing.
JTree
Returns whether or not automatic drag handling is enabled.
getDragEnabled()
- Method in class javax.swing.text.
JTextComponent
Returns whether or not automatic drag handling is enabled.
getDraggedColumn()
- Method in class javax.swing.table.
JTableHeader
Returns the dragged column, if and only if, a drag is in
 process, otherwise returns
null
.
getDraggedDistance()
- Method in class javax.swing.table.
JTableHeader
Returns the column's horizontal distance from its original
 position, if and only if, a drag is in process.
getDragImage()
- Method in class javax.swing.
TransferHandler
Returns the drag image.
getDragImageOffset()
- Method in class javax.swing.
TransferHandler
Returns an anchor offset for the image to drag.
getDragMode()
- Method in class javax.swing.
JDesktopPane
Gets the current "dragging style" used by the desktop pane.
getDragOrigin()
- Method in class java.awt.dnd.
DragGestureEvent
Returns a
Point
in the coordinates
 of the
Component
over which the drag originated.
getDragSource()
- Method in class java.awt.dnd.
DragGestureEvent
Returns the
DragSource
.
getDragSource()
- Method in class java.awt.dnd.
DragGestureRecognizer
This method returns the
DragSource
this
DragGestureRecognizer
will use in order to process the Drag and Drop
 operation.
getDragSource()
- Method in class java.awt.dnd.
DragSourceContext
Returns the
DragSource
that instantiated this
DragSourceContext
.
getDragSourceContext()
- Method in class java.awt.dnd.
DragSourceEvent
This method returns the
DragSourceContext
that
 originated the event.
getDragSourceListeners()
- Method in class java.awt.dnd.
DragSource
Gets all the
DragSourceListener
s
 registered with this
DragSource
.
getDragSourceMotionListeners()
- Method in class java.awt.dnd.
DragSource
Gets all of the
DragSourceMotionListener
s
 registered with this
DragSource
.
getDragThreshold()
- Static method in class java.awt.dnd.
DragSource
Returns the drag gesture motion threshold.
getDrawGraphics()
- Method in class java.awt.
Component.BltBufferStrategy
getDrawGraphics()
- Method in class java.awt.
Component.FlipBufferStrategy
getDrawGraphics()
- Method in class java.awt.image.
BufferStrategy
Creates a graphics context for the drawing buffer.
getDrawsLayeredHighlights()
- Method in class javax.swing.text.
DefaultHighlighter
Return the draw layered highlights.
getDriver(String)
- Static method in class java.sql.
DriverManager
Attempts to locate a driver that understands the given URL.
getDriverMajorVersion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves this JDBC driver's major version number.
getDriverMinorVersion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves this JDBC driver's minor version number.
getDriverName()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the name of this JDBC driver.
getDrivers()
- Static method in class java.sql.
DriverManager
Retrieves an Enumeration with all of the currently loaded JDBC drivers
 to which the current caller has access.
getDriverVersion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the version number of this JDBC driver as a
String
.
getDropAction()
- Method in class java.awt.dnd.
DragSourceDragEvent
This method returns the logical intersection of
 the target drop action and the set of drop actions supported by
 the drag source.
getDropAction()
- Method in class java.awt.dnd.
DragSourceDropEvent
This method returns an
int
representing
 the action performed by the target on the subject of the drop.
getDropAction()
- Method in class java.awt.dnd.
DropTargetDragEvent
This method returns the user drop action.
getDropAction()
- Method in class java.awt.dnd.
DropTargetDropEvent
This method returns the user drop action.
getDropAction()
- Method in class javax.swing.
TransferHandler.TransferSupport
Returns the action chosen for the drop, when this
TransferSupport
represents a drop.
getDropLineRect(JTree.DropLocation)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns a unbounding box for the drop line.
getDropLocation()
- Method in class javax.swing.
JList
Returns the location that this component should visually indicate
 as the drop location during a DnD operation over the component,
 or
null
if no location is to currently be shown.
getDropLocation()
- Method in class javax.swing.
JTable
Returns the location that this component should visually indicate
 as the drop location during a DnD operation over the component,
 or
null
if no location is to currently be shown.
getDropLocation()
- Method in class javax.swing.
JTree
Returns the location that this component should visually indicate
 as the drop location during a DnD operation over the component,
 or
null
if no location is to currently be shown.
getDropLocation()
- Method in class javax.swing.text.
JTextComponent
Returns the location that this component should visually indicate
 as the drop location during a DnD operation over the component,
 or
null
if no location is to currently be shown.
getDropLocation()
- Method in class javax.swing.
TransferHandler.TransferSupport
Returns the current (non-
null
) drop location for the component,
 when this
TransferSupport
represents a drop.
getDropMode()
- Method in class javax.swing.
JList
Returns the drop mode for this component.
getDropMode()
- Method in class javax.swing.
JTable
Returns the drop mode for this component.
getDropMode()
- Method in class javax.swing.
JTree
Returns the drop mode for this component.
getDropMode()
- Method in class javax.swing.text.
JTextComponent
Returns the drop mode for this component.
getDropPoint()
- Method in class javax.swing.
TransferHandler.DropLocation
Returns the drop point, representing the mouse's
 current location within the component.
getDropSuccess()
- Method in class java.awt.dnd.
DragSourceDropEvent
This method returns a
boolean
indicating
 if the drop was successful.
getDropTarget()
- Method in class java.awt.
Component
Gets the
DropTarget
associated with this
Component
.
getDropTarget()
- Method in class java.awt.dnd.
DropTargetContext
This method returns the
DropTarget
associated with this
DropTargetContext
.
getDropTargetContext()
- Method in class java.awt.dnd.
DropTarget
Gets the
DropTargetContext
associated
 with this
DropTarget
.
getDropTargetContext()
- Method in class java.awt.dnd.
DropTargetEvent
This method returns the
DropTargetContext
associated with this
DropTargetEvent
.
getDSTSavings()
- Method in class java.util.
SimpleTimeZone
Returns the amount of time in milliseconds that the clock is
 advanced during daylight saving time.
getDSTSavings()
- Method in class java.util.
TimeZone
Returns the amount of time to be added to local standard time
 to get local wall clock time.
getDTD(String)
- Static method in class javax.swing.text.html.parser.
DTD
Returns a DTD with the specified
name
.
getDTDHandler()
- Method in class org.xml.sax.helpers.
ParserAdapter
Return the current DTD handler.
getDTDHandler()
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Get the current DTD event handler.
getDTDHandler()
- Method in interface org.xml.sax.
XMLReader
Return the current DTD handler.
getDTDType()
- Method in interface javax.xml.stream.events.
Attribute
Gets the type of this attribute, default is
 the String "CDATA".
getDumpOnExit()
- Method in class jdk.jfr.
Recording
Returns whether this recording is dumped to disk when the JVM exits.
getDumpOnExit()
- Method in class jdk.management.jfr.
RecordingInfo
Returns if the recording associated with this
RecordingInfo
should be dumped to file when the JVM exits.
getDuration()
- Method in class com.sun.management.
GcInfo
Returns the elapsed time of this GC in milliseconds.
getDuration()
- Method in enum class java.time.temporal.
ChronoUnit
Gets the estimated duration of this unit in the ISO calendar system.
getDuration()
- Method in interface java.time.temporal.
TemporalUnit
Gets the duration of this unit, which may be an estimate.
getDuration()
- Method in class java.time.zone.
ZoneOffsetTransition
Gets the duration of the transition.
getDuration()
- Method in class jdk.jfr.consumer.
RecordedEvent
Returns the duration of the event, measured in nanoseconds.
getDuration()
- Method in class jdk.jfr.
Recording
Returns the specified duration for this recording, or
null
if no
 duration is set.
getDuration()
- Method in class jdk.management.jfr.
RecordingInfo
Returns the desired duration, measured in seconds, of the recording
 associated with this
RecordingInfo
, or
0
if no duration
 has been set.
getDuration(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a timespan field.
getEarliestSequenceNumber()
- Method in class javax.management.remote.
NotificationResult
Returns the sequence number of the earliest notification still
 in the buffer.
getEarlyReflectionDelay()
- Method in class javax.sound.sampled.
ReverbType
Returns the early reflection delay time in microseconds.
getEarlyReflectionIntensity()
- Method in class javax.sound.sampled.
ReverbType
Returns the early reflection intensity in decibels.
getEastPane()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Returns the east pane.
getEchoChar()
- Method in class java.awt.
TextField
Gets the character that is to be used for echoing.
getEchoChar()
- Method in class javax.swing.
JPasswordField
Returns the character to be used for echoing.
getEdgeCondition()
- Method in class java.awt.image.
ConvolveOp
Returns the edge condition.
getEdit()
- Method in class javax.swing.event.
UndoableEditEvent
Returns the edit value.
getEditFormatter()
- Method in class javax.swing.text.
DefaultFormatterFactory
Returns the
JFormattedTextField.AbstractFormatter
to use
 if the
JFormattedTextField
is being edited and either
 the value is not-null, or the value is null and a null formatter has
 has not been specified.
getEditingColumn()
- Method in class javax.swing.
JTable
Returns the index of the column that contains the cell currently
 being edited.
getEditingPath()
- Method in class javax.swing.
JTree
Returns the path to the element that is currently being edited.
getEditingPath(JTree)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the path to the element that is being edited.
getEditingPath(JTree)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getEditingPath
method on each UI handled by this object.
getEditingPath(JTree)
- Method in class javax.swing.plaf.
TreeUI
Returns the path to the element that is being edited.
getEditingRow()
- Method in class javax.swing.
JTable
Returns the index of the row that contains the cell currently
 being edited.
getEditor()
- Method in class javax.swing.
JComboBox
Returns the editor used to paint and edit the selected item in the
JComboBox
field.
getEditor()
- Method in class javax.swing.
JSpinner
Returns the component that displays and potentially
 changes the model's value.
getEditor(ActionEvent)
- Method in class javax.swing.text.
StyledEditorKit.StyledTextAction
Gets the target editor for an action.
getEditorComponent()
- Method in interface javax.swing.
ComboBoxEditor
Returns the component that should be added to the tree hierarchy for
 this editor
getEditorComponent()
- Method in class javax.swing.
JTable
Returns the component that is handling the editing session.
getEditorComponent()
- Method in class javax.swing.plaf.basic.
BasicComboBoxEditor
getEditorKit()
- Method in class javax.swing.
JEditorPane
Fetches the currently installed kit for handling content.
getEditorKit(JTextComponent)
- Method in class javax.swing.plaf.basic.
BasicEditorPaneUI
Fetches the EditorKit for the UI.
getEditorKit(JTextComponent)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Fetches the EditorKit for the UI.
getEditorKit(JTextComponent)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getEditorKit
method on each UI handled by this object.
getEditorKit(JTextComponent)
- Method in class javax.swing.plaf.
TextUI
Fetches the binding of services that set a policy
 for the type of document being edited.
getEditorKitClassNameForContentType(String)
- Static method in class javax.swing.
JEditorPane
Returns the currently registered
EditorKit
class name for the
 type
type
.
getEditorKitForContentType(String)
- Method in class javax.swing.
JEditorPane
Fetches the editor kit to use for the given type
 of content.
getEditorSearchPath()
- Static method in class java.beans.
PropertyEditorManager
Gets the package names that will be searched for property editors.
getEffectiveKeyBits()
- Method in class javax.crypto.spec.
RC2ParameterSpec
Returns the effective key size in bits.
getElem(int)
- Method in class java.awt.image.
DataBuffer
Returns the requested data array element from the first (default) bank
 as an integer.
getElem(int)
- Method in class java.awt.image.
DataBufferByte
Returns the requested data array element from the first (default) bank.
getElem(int)
- Method in class java.awt.image.
DataBufferDouble
Returns the requested data array element from the first
 (default) bank as an
int
.
getElem(int)
- Method in class java.awt.image.
DataBufferFloat
Returns the requested data array element from the first
 (default) bank as an
int
.
getElem(int)
- Method in class java.awt.image.
DataBufferInt
Returns the requested data array element from the first (default) bank.
getElem(int)
- Method in class java.awt.image.
DataBufferShort
Returns the requested data array element from the first (default) bank.
getElem(int)
- Method in class java.awt.image.
DataBufferUShort
Returns the requested data array element from the first (default) bank.
getElem(int, int)
- Method in class java.awt.image.
DataBuffer
Returns the requested data array element from the specified bank
 as an integer.
getElem(int, int)
- Method in class java.awt.image.
DataBufferByte
Returns the requested data array element from the specified bank.
getElem(int, int)
- Method in class java.awt.image.
DataBufferDouble
Returns the requested data array element from the specified
 bank as an
int
.
getElem(int, int)
- Method in class java.awt.image.
DataBufferFloat
Returns the requested data array element from the specified
 bank as an
int
.
getElem(int, int)
- Method in class java.awt.image.
DataBufferInt
Returns the requested data array element from the specified bank.
getElem(int, int)
- Method in class java.awt.image.
DataBufferShort
Returns the requested data array element from the specified bank.
getElem(int, int)
- Method in class java.awt.image.
DataBufferUShort
Returns the requested data array element from the specified bank.
getElemDouble(int)
- Method in class java.awt.image.
DataBuffer
Returns the requested data array element from the first (default) bank
 as a double.
getElemDouble(int)
- Method in class java.awt.image.
DataBufferDouble
Returns the requested data array element from the first
 (default) bank as a
double
.
getElemDouble(int)
- Method in class java.awt.image.
DataBufferFloat
Returns the requested data array element from the first
 (default) bank as a
double
.
getElemDouble(int, int)
- Method in class java.awt.image.
DataBuffer
Returns the requested data array element from the specified bank as
 a double.
getElemDouble(int, int)
- Method in class java.awt.image.
DataBufferDouble
Returns the requested data array element from the specified
 bank as a
double
.
getElemDouble(int, int)
- Method in class java.awt.image.
DataBufferFloat
Returns the requested data array element from the specified
 bank as a
double
.
getElement()
- Method in interface javax.swing.event.
DocumentEvent.ElementChange
Returns the element represented.
getElement()
- Method in class javax.swing.text.
AbstractDocument.ElementEdit
Returns the underlying element.
getElement()
- Method in class javax.swing.text.html.parser.
TagElement
Returns the element.
getElement()
- Method in class javax.swing.text.
View
Fetches the structural portion of the subject that this
 view is mapped to.
getElement(int)
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets a child element.
getElement(int)
- Method in class javax.swing.text.
AbstractDocument.BranchElement
Gets a child element.
getElement(int)
- Method in class javax.swing.text.
AbstractDocument.LeafElement
Gets a child element.
getElement(int)
- Method in interface javax.swing.text.
Element
Fetches the child element at the given index.
getElement(int)
- Method in class javax.swing.text.html.parser.
DTD
Gets an element by index.
getElement(DocTreePath)
- Method in class com.sun.source.util.
DocTrees
Returns the language model element referred to by the leaf node of the given
DocTreePath
, or
null
if unknown.
getElement(TreePath)
- Method in class com.sun.source.util.
Trees
Returns the
Element
for the
Tree
node identified by a given
TreePath
.
getElement(String)
- Method in class javax.swing.text.html.
HTMLDocument
Returns the element that has the given id
Attribute
.
getElement(String)
- Method in class javax.swing.text.html.parser.
DTD
Gets an element by name.
getElement(Element, Object, Object)
- Method in class javax.swing.text.html.
HTMLDocument
Returns the child element of
e
that contains the
 attribute,
attribute
with value
value
, or
null
if one isn't found.
getElementAt(int)
- Method in class javax.swing.
DefaultComboBoxModel
getElementAt(int)
- Method in class javax.swing.
DefaultListModel
Returns the component at the specified index.
getElementAt(int)
- Method in interface javax.swing.
ListModel
Returns the value at the specified index.
getElementAt(int)
- Method in class javax.swing.plaf.basic.
BasicDirectoryModel
getElementAt(int)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.DirectoryComboBoxModel
getElementAt(int)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.FilterComboBoxModel
getElementById(String)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
Returns the
Element
with the specified ID attribute value.
getElementById(String)
- Method in interface org.w3c.dom.
Document
Returns the
Element
that has an ID attribute with the
 given value.
getElementCount()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the number of children for the element.
getElementCount()
- Method in class javax.swing.text.
AbstractDocument.BranchElement
Gets the number of children for the element.
getElementCount()
- Method in class javax.swing.text.
AbstractDocument.LeafElement
Returns the number of child elements.
getElementCount()
- Method in interface javax.swing.text.
Element
Gets the number of child elements contained by this element.
getElementDescription(String, Locale)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns a
String
containing a description of the
 named element, or
null
.
getElementDescription(String, Locale)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
Returns a
String
containing a description of the
 named element, or
null
.
getElementIndex(int)
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the child element index closest to the given model offset.
getElementIndex(int)
- Method in class javax.swing.text.
AbstractDocument.BranchElement
Gets the child element index closest to the given model offset.
getElementIndex(int)
- Method in class javax.swing.text.
AbstractDocument.LeafElement
Gets the child element index closest to the given model offset.
getElementIndex(int)
- Method in interface javax.swing.text.
Element
Gets the child element index closest to the given offset.
getElementIterator()
- Method in class javax.swing.text.
AbstractWriter
Fetches the ElementIterator.
getElementMaxChildren(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the maximum number of children of the named element
 with child policy
CHILD_POLICY_REPEAT
.
getElementMaxChildren(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getElementMinChildren(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the minimum number of children of the named element
 with child policy
CHILD_POLICY_REPEAT
.
getElementMinChildren(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getElementOpenType()
- Method in class javax.management.openmbean.
ArrayType
Returns the
open type
of element values contained
 in the arrays described by this
ArrayType
instance.
getElements()
- Method in class com.sun.source.util.
JavacTask
Returns a utility object for dealing with program elements.
getElements()
- Method in class javax.swing.
ButtonGroup
Returns all the buttons that are participating in
 this group.
getElements()
- Method in interface org.w3c.dom.html.
HTMLFormElement
Returns a collection of all control elements in the form.
getElements(Vector<Element>)
- Method in class javax.swing.text.html.parser.
ContentModel
Update elemVec with the list of elements that are
 part of the this contentModel.
getElementsAnnotatedWith(Class<? extends Annotation>)
- Method in interface javax.annotation.processing.
RoundEnvironment
Returns the elements annotated with the given annotation interface.
getElementsAnnotatedWith(TypeElement)
- Method in interface javax.annotation.processing.
RoundEnvironment
Returns the elements annotated with the given annotation interface.
getElementsAnnotatedWithAny(Set<Class<? extends Annotation>>)
- Method in interface javax.annotation.processing.
RoundEnvironment
Returns the elements annotated with one or more of the given
 annotation interfaces.
getElementsAnnotatedWithAny(TypeElement...)
- Method in interface javax.annotation.processing.
RoundEnvironment
Returns the elements annotated with one or more of the given
 annotation interfaces.
getElementsAt(HTMLDocument, int)
- Method in class javax.swing.text.html.
HTMLEditorKit.HTMLTextAction
Returns an array of the Elements that contain
offset
.
getElementsByName(String)
- Method in interface org.w3c.dom.html.
HTMLDocument
Returns the (possibly empty) collection of elements whose
name
value is given by
elementName
.
getElementsByTagName(String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
getElementsByTagName(String)
- Method in interface org.w3c.dom.
Document
Returns a
NodeList
of all the
Elements
in
 document order with a given tag name and are contained in the
 document.
getElementsByTagName(String)
- Method in interface org.w3c.dom.
Element
Returns a
NodeList
of all descendant
Elements
with a given tag name, in document order.
getElementsByTagNameNS(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
Equivalent to
getElementsByTagName(localName)
.
getElementsByTagNameNS(String, String)
- Method in interface org.w3c.dom.
Document
Returns a
NodeList
of all the
Elements
with a
 given local name and namespace URI in document order.
getElementsByTagNameNS(String, String)
- Method in interface org.w3c.dom.
Element
Returns a
NodeList
of all the descendant
Elements
with a given local name and namespace URI in
 document order.
getElementText()
- Method in class javax.xml.stream.util.
EventReaderDelegate
getElementText()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getElementText()
- Method in interface javax.xml.stream.
XMLEventReader
Reads the content of a text-only element.
getElementText()
- Method in interface javax.xml.stream.
XMLStreamReader
Reads the content of a text-only element, an exception is thrown if this is
 not a text-only element.
getElementTypeInfo()
- Method in class javax.xml.validation.
TypeInfoProvider
Returns the immutable
TypeInfo
object for the current
 element.
getElementUtils()
- Method in interface javax.annotation.processing.
ProcessingEnvironment
Returns an implementation of some utility methods for
 operating on elements.
getElementUtils()
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns an instance of the
Elements
utility class.
getElementValues()
- Method in interface javax.lang.model.element.
AnnotationMirror
Returns the values of this annotation's elements.
getElementValuesWithDefaults(AnnotationMirror)
- Method in interface javax.lang.model.util.
Elements
Returns the values of an annotation's elements, including defaults.
getElemFloat(int)
- Method in class java.awt.image.
DataBuffer
Returns the requested data array element from the first (default) bank
 as a float.
getElemFloat(int)
- Method in class java.awt.image.
DataBufferDouble
Returns the requested data array element from the first
 (default) bank as a
float
.
getElemFloat(int)
- Method in class java.awt.image.
DataBufferFloat
Returns the requested data array element from the first
 (default) bank as a
float
.
getElemFloat(int, int)
- Method in class java.awt.image.
DataBuffer
Returns the requested data array element from the specified bank
 as a float.
getElemFloat(int, int)
- Method in class java.awt.image.
DataBufferDouble
Returns the requested data array element from the specified
 bank as a
float
.
getElemFloat(int, int)
- Method in class java.awt.image.
DataBufferFloat
Returns the requested data array element from the specified
 bank as a
float
.
getElevation()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the elevation property definition in CSS2.
getElseStatement()
- Method in interface com.sun.source.tree.
IfTree
Returns the statement to be executed if the condition is false,
 or
null
if there is no such statement.
getEmptyCells()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the empty-cells property definition in CSS2.
getEmptySet()
- Method in interface javax.swing.text.
AbstractDocument.AttributeContext
Fetches an empty AttributeSet.
getEmptySet()
- Method in class javax.swing.text.
StyleContext
Fetches an empty AttributeSet.
getEnabledAttributes()
- Method in class javax.management.
AttributeChangeNotificationFilter
Gets all the enabled attribute names for this filter.
getEnabledCipherSuites()
- Method in class javax.net.ssl.
SSLEngine
Returns the names of the SSL cipher suites which are currently
 enabled for use on this engine.
getEnabledCipherSuites()
- Method in class javax.net.ssl.
SSLServerSocket
Returns the list of cipher suites which are currently enabled
 for use by newly accepted connections.
getEnabledCipherSuites()
- Method in class javax.net.ssl.
SSLSocket
Returns the names of the SSL cipher suites which are currently
 enabled for use on this connection.
getEnabledCipherSuites()
- Method in class javax.rmi.ssl.
SslRMIServerSocketFactory
Returns the names of the cipher suites enabled on SSL
 connections accepted by server sockets created by this factory,
 or
null
if this factory uses the cipher suites
 that are enabled by default.
getEnabledObjectNames()
- Method in class javax.management.relation.
MBeanServerNotificationFilter
Gets all the ObjectNames enabled.
getEnabledProtocols()
- Method in class javax.net.ssl.
SSLEngine
Returns the names of the protocol versions which are currently
 enabled for use with this
SSLEngine
.
getEnabledProtocols()
- Method in class javax.net.ssl.
SSLServerSocket
Returns the names of the protocols which are currently
 enabled for use by the newly accepted connections.
getEnabledProtocols()
- Method in class javax.net.ssl.
SSLSocket
Returns the names of the protocol versions which are currently
 enabled for use on this connection.
getEnabledProtocols()
- Method in class javax.rmi.ssl.
SslRMIServerSocketFactory
Returns the names of the protocol versions enabled on SSL
 connections accepted by server sockets created by this factory,
 or
null
if this factory uses the protocol versions
 that are enabled by default.
getEnabledTypes()
- Method in class javax.management.
NotificationFilterSupport
Gets all the enabled notification types for this filter.
getEnableRetransmissions()
- Method in class javax.net.ssl.
SSLParameters
Returns whether DTLS handshake retransmissions should be enabled.
getEnableSessionCreation()
- Method in class javax.net.ssl.
SSLEngine
Returns true if new SSL sessions may be established by this engine.
getEnableSessionCreation()
- Method in class javax.net.ssl.
SSLServerSocket
Returns true if new SSL sessions may be established by the
 sockets which are created from this server socket.
getEnableSessionCreation()
- Method in class javax.net.ssl.
SSLSocket
Returns true if new SSL sessions may be established by this socket.
getEnclosedElements()
- Method in interface javax.lang.model.element.
Element
Returns the elements that are, loosely speaking, directly
 enclosed by this element.
getEnclosedElements()
- Method in interface javax.lang.model.element.
ModuleElement
Returns the packages within this module.
getEnclosedElements()
- Method in interface javax.lang.model.element.
PackageElement
Returns the
top-level
classes and interfaces within this package.
getEnclosedElements()
- Method in interface javax.lang.model.element.
TypeElement
Returns the fields, methods, constructors, record components,
 and member classes and interfaces that are directly declared in
 this class or interface.
getEnclosingClass()
- Method in interface com.sun.source.tree.
Scope
Returns the innermost type element containing the position of this scope.
getEnclosingClass()
- Method in class java.lang.
Class
Returns the immediately enclosing class of the underlying
 class.
getEnclosingConstructor()
- Method in class java.lang.
Class
If this
Class
object represents a local or anonymous
 class within a constructor, returns a
Constructor
object representing
 the immediately enclosing constructor of the underlying
 class.
getEnclosingElement()
- Method in interface javax.lang.model.element.
Element
Returns the innermost element
 within which this element is, loosely speaking, enclosed.
getEnclosingElement()
- Method in interface javax.lang.model.element.
ExecutableElement
Returns the class or interface defining the executable.
getEnclosingElement()
- Method in interface javax.lang.model.element.
ModuleElement
Returns
null
since a module is not enclosed by another
 element.
getEnclosingElement()
- Method in interface javax.lang.model.element.
PackageElement
Returns the enclosing module if such a module exists; otherwise
null
.
getEnclosingElement()
- Method in interface javax.lang.model.element.
RecordComponentElement
Returns the enclosing element of this record component.
getEnclosingElement()
- Method in interface javax.lang.model.element.
TypeElement
Returns the package of a top-level class or interface and
 returns the immediately lexically enclosing element for a
nested
class or interface.
getEnclosingElement()
- Method in interface javax.lang.model.element.
TypeParameterElement
Returns the
generic element
of this type parameter.
getEnclosingElement()
- Method in interface javax.lang.model.element.
VariableElement
Returns the enclosing element of this variable.
getEnclosingExpression()
- Method in interface com.sun.source.tree.
NewClassTree
Returns the enclosing expression, or
null
if none.
getEnclosingMethod()
- Method in interface com.sun.source.tree.
Scope
Returns the innermost executable element containing the position of this scope.
getEnclosingMethod()
- Method in class java.lang.
Class
If this
Class
object represents a local or anonymous
 class within a method, returns a
Method
object representing the
 immediately enclosing method of the underlying class.
getEnclosingScope()
- Method in interface com.sun.source.tree.
Scope
Returns the enclosing scope.
getEnclosingType()
- Method in interface javax.lang.model.type.
DeclaredType
Returns the type of the innermost enclosing instance or a
NoType
of kind
NONE
if there is no enclosing
 instance.
getEncoded()
- Method in class java.security.
AlgorithmParameters
Returns the parameters in their primary encoding format.
getEncoded()
- Method in class java.security.cert.
Certificate
Returns the encoded form of this certificate.
getEncoded()
- Method in class java.security.cert.
CertPath
Returns the encoded form of this certification path, using the default
 encoding.
getEncoded()
- Method in class java.security.cert.
PolicyQualifierInfo
Returns the ASN.1 DER encoded form of this
PolicyQualifierInfo
.
getEncoded()
- Method in class java.security.cert.
X509CRL
Returns the ASN.1 DER-encoded form of this CRL.
getEncoded()
- Method in class java.security.cert.
X509CRLEntry
Returns the ASN.1 DER-encoded form of this CRL Entry,
 that is the inner SEQUENCE.
getEncoded()
- Method in interface java.security.
Key
Returns the key in its primary encoding format, or
null
if this key does not support encoding.
getEncoded()
- Method in class java.security.
PKCS12Attribute
Returns the attribute's ASN.1 DER encoding.
getEncoded()
- Method in class java.security.spec.
EncodedKeySpec
Returns the encoded key.
getEncoded()
- Method in class java.security.spec.
PKCS8EncodedKeySpec
Returns the key bytes, encoded according to the PKCS #8 standard.
getEncoded()
- Method in class java.security.spec.
X509EncodedKeySpec
Returns the key bytes, encoded according to the X.509 standard.
getEncoded()
- Method in class javax.crypto.
EncryptedPrivateKeyInfo
Returns the ASN.1 encoding of this object.
getEncoded()
- Method in class javax.crypto.spec.
SecretKeySpec
Returns the key material of this secret key.
getEncoded()
- Method in class javax.net.ssl.
SNIServerName
Returns a copy of the encoded server name value of this server name.
getEncoded()
- Method in class javax.security.auth.kerberos.
EncryptionKey
Returns the key material of this key.
getEncoded()
- Method in class javax.security.auth.kerberos.
KerberosCredMessage
Returns the DER encoded form of the KRB_CRED message.
getEncoded()
- Method in class javax.security.auth.kerberos.
KerberosKey
Returns the key material of this secret key.
getEncoded()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns an ASN.1 encoding of the entire ticket.
getEncoded()
- Method in class javax.security.auth.x500.
X500Principal
Returns the distinguished name in ASN.1 DER encoded form.
getEncoded()
- Method in class javax.security.cert.
Certificate
Deprecated.
Returns the encoded form of this certificate.
getEncoded(String)
- Method in class java.security.
AlgorithmParameters
Returns the parameters encoded in the specified scheme.
getEncoded(String)
- Method in class java.security.cert.
CertPath
Returns the encoded form of this certification path, using the
 specified encoding.
getEncodedValue()
- Method in class javax.naming.ldap.
BasicControl
Retrieves the control's ASN.1 BER encoded value.
getEncodedValue()
- Method in interface javax.naming.ldap.
Control
Retrieves the ASN.1 BER encoded value of the LDAP control.
getEncodedValue()
- Method in interface javax.naming.ldap.
ExtendedRequest
Retrieves the ASN.1 BER encoded value of the LDAP extended operation
 request.
getEncodedValue()
- Method in interface javax.naming.ldap.
ExtendedResponse
Retrieves the ASN.1 BER encoded value of the LDAP extended operation
 response.
getEncodedValue()
- Method in class javax.naming.ldap.
StartTlsRequest
Retrieves the StartTLS request's ASN.1 BER encoded value.
getEncodedValue()
- Method in class javax.naming.ldap.
StartTlsResponse
Retrieves the StartTLS response's ASN.1 BER encoded value.
getEncoder()
- Static method in class java.util.
Base64
Returns a
Base64.Encoder
that encodes using the
Basic
type base64 encoding scheme.
getEncoding()
- Method in class java.io.
InputStreamReader
Returns the name of the character encoding being used by this stream.
getEncoding()
- Method in class java.io.
OutputStreamWriter
Returns the name of the character encoding being used by this stream.
getEncoding()
- Method in class java.util.logging.
Handler
Return the character encoding for this
Handler
.
getEncoding()
- Method in class javax.sound.sampled.
AudioFormat
Obtains the type of encoding for sounds in this format.
getEncoding()
- Method in interface javax.xml.crypto.dsig.
XMLObject
Returns the encoding URI of this
XMLObject
.
getEncoding()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getEncoding()
- Method in interface javax.xml.stream.
XMLStreamReader
Return input encoding if known or null if unknown.
getEncoding()
- Method in interface org.w3c.dom.css.
CSSCharsetRule
The encoding information used in this
@charset
rule.
getEncoding()
- Method in interface org.w3c.dom.ls.
LSInput
The character encoding, if known.
getEncoding()
- Method in interface org.w3c.dom.ls.
LSOutput
The character encoding to use for the output.
getEncoding()
- Method in interface org.xml.sax.ext.
Locator2
Returns the name of the character encoding for the entity.
getEncoding()
- Method in class org.xml.sax.ext.
Locator2Impl
Returns the current value of the encoding property.
getEncoding()
- Method in class org.xml.sax.
InputSource
Get the character encoding for a byte stream or URI.
getEncodings()
- Method in class java.security.cert.
CertPath
Returns an iteration of the encodings supported by this certification
 path, with the default encoding first.
getEncryptedData()
- Method in class javax.crypto.
EncryptedPrivateKeyInfo
Returns the encrypted data.
getEnctype()
- Method in interface org.w3c.dom.html.
HTMLFormElement
The content type of the submitted form,  generally
 "application/x-www-form-urlencoded".
getEnd()
- Method in class javax.swing.
SpinnerDateModel
Returns the last
Date
in the sequence.
getEndCap()
- Method in class java.awt.
BasicStroke
Returns the end cap style.
getEndContainer()
- Method in interface org.w3c.dom.ranges.
Range
Node within which the Range ends
getEndIndex()
- Method in interface java.text.
CharacterIterator
Returns the end index of the text.
getEndIndex()
- Method in class java.text.
FieldPosition
Retrieves the index of the character following the last character in the
 requested field.
getEndIndex()
- Method in class java.text.
StringCharacterIterator
Implements CharacterIterator.getEndIndex() for String.
getEndIndex()
- Method in class javax.accessibility.
AccessibleHyperlink
Gets the index with the hypertext document at which this link ends.
getEndIndex()
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink
Get the index with the hypertext document at which this
 link ends
getEndIndex()
- Method in class javax.swing.text.
Segment
Returns the end index of the text.
getEndOffset()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the ending offset in the model for the element.
getEndOffset()
- Method in class javax.swing.text.
AbstractDocument.BranchElement
Gets the ending offset in the model for the element.
getEndOffset()
- Method in class javax.swing.text.
AbstractDocument.LeafElement
Gets the ending offset in the model for the element.
getEndOffset()
- Method in class javax.swing.text.
AbstractWriter
Returns the last offset to be output.
getEndOffset()
- Method in interface javax.swing.text.
Element
Fetches the offset from the beginning of the document
 that this element ends at.
getEndOffset()
- Method in class javax.swing.text.
GlyphView
Fetches the portion of the model that this view is responsible for.
getEndOffset()
- Method in interface javax.swing.text.
Highlighter.Highlight
Gets the ending model offset for the highlight.
getEndOffset()
- Method in class javax.swing.text.html.
HTMLDocument.Iterator
Returns the end of the range for which the current occurrence of
 the tag is defined and has the same attributes.
getEndOffset()
- Method in class javax.swing.text.
View
Fetches the portion of the model for which this view is
 responsible.
getEndOffset()
- Method in interface org.w3c.dom.ranges.
Range
Offset within the ending node of the Range.
getEndPoint()
- Method in class java.awt.geom.
Arc2D
Returns the ending point of the arc.
getEndPoint()
- Method in class java.awt.
LinearGradientPaint
Returns a copy of the end point of the gradient axis.
getEndpointIdentificationAlgorithm()
- Method in class javax.net.ssl.
SSLParameters
Gets the endpoint identification algorithm.
getEndpoints()
- Method in class javax.naming.ldap.spi.
LdapDnsProviderResult
Returns the possibly empty list of individual server endpoints resolved
 from the LDAP URL.
getEndPosition()
- Method in class javax.swing.text.
AbstractDocument
Returns a position that represents the end of the document.
getEndPosition()
- Method in interface javax.swing.text.
Document
Returns a position that represents the end of the document.
getEndPosition()
- Method in interface javax.tools.
Diagnostic
Returns the character offset from the beginning of the file
 associated with this diagnostic that indicates the end of the
 problem.
getEndPosition()
- Method in class jdk.jshell.
Diag
Returns the character offset from the beginning of the file
 associated with this diagnostic that indicates the end of the
 problem.
getEndPosition(CompilationUnitTree, DocCommentTree, DocTree)
- Method in interface com.sun.source.util.
DocSourcePositions
Returns the ending position of the tree within the comment within the file.
getEndPosition(CompilationUnitTree, Tree)
- Method in interface com.sun.source.util.
SourcePositions
Returns the ending position of tree within file.
getEndTime()
- Method in class com.sun.management.
GcInfo
Returns the end time of this GC in milliseconds
 since the Java virtual machine was started.
getEndTime()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the expiration time for this ticket's validity period.
getEndTime()
- Method in class jdk.jfr.consumer.
RecordedEvent
Returns the end time of the event.
getEngine()
- Method in class javax.script.
CompiledScript
Returns the
ScriptEngine
whose
compile
method created this
CompiledScript
.
getEngineByExtension(String)
- Method in class javax.script.
ScriptEngineManager
Look up and create a
ScriptEngine
for a given extension.
getEngineByMimeType(String)
- Method in class javax.script.
ScriptEngineManager
Look up and create a
ScriptEngine
for a given mime type.
getEngineByName(String)
- Method in class javax.script.
ScriptEngineManager
Looks up and creates a
ScriptEngine
for a given  name.
getEngineFactories()
- Method in class javax.script.
ScriptEngineManager
Returns a list whose elements are instances of all the
ScriptEngineFactory
classes
 found by the discovery mechanism.
getEngineName()
- Method in interface javax.script.
ScriptEngineFactory
Returns the full  name of the
ScriptEngine
.
getEngineVersion()
- Method in interface javax.script.
ScriptEngineFactory
Returns the version of the
ScriptEngine
.
getEntities()
- Method in interface javax.xml.stream.events.
DTD
Return a List containing the general entities, both external and
 internal, declared in the DTD.
getEntities()
- Method in interface org.w3c.dom.
DocumentType
A
NamedNodeMap
containing the general entities, both
 external and internal, declared in the DTD.
getEntity(int)
- Method in class javax.swing.text.html.parser.
DTD
Gets a character entity.
getEntity(String)
- Method in class javax.swing.text.html.parser.
DTD
Gets an entity by name.
getEntityResolver()
- Method in class org.xml.sax.helpers.
ParserAdapter
Return the current entity resolver.
getEntityResolver()
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Get the current entity resolver.
getEntityResolver()
- Method in interface org.xml.sax.
XMLReader
Return the current entity resolver.
getEntries()
- Method in class java.util.jar.
Manifest
Returns a Map of the entries contained in this Manifest.
getEntry(String)
- Method in class java.util.jar.
JarFile
Returns the
ZipEntry
for the given base entry name or
null
if not found.
getEntry(String)
- Method in class java.util.zip.
ZipFile
Returns the zip file entry for the specified name, or null
 if not found.
getEntry(String, KeyStore.ProtectionParameter)
- Method in class java.security.
KeyStore
Gets a keystore
Entry
for the specified alias
 with the specified protection parameter.
getEntryName()
- Method in class java.net.
JarURLConnection
Return the entry name for this connection.
getEnumConstants()
- Method in class java.lang.
Class
Returns the elements of this enum class or null if this
 Class object does not represent an enum class.
getEnumValueTable()
- Method in class javax.print.attribute.
EnumSyntax
Returns the enumeration value table for this enumeration value's
 enumeration class.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
Chromaticity
Returns the enumeration value table for class
Chromaticity
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
ColorSupported
Returns the enumeration value table for class
ColorSupported
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
Compression
Returns the enumeration value table for class
Compression
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
DialogTypeSelection
Returns the enumeration value table for class
DialogTypeSelection
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
Fidelity
Returns the enumeration value table for class
Fidelity
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
Finishings
Returns the enumeration value table for class
Finishings
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
JobSheets
Returns the enumeration value table for class
JobSheets
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
JobState
Returns the enumeration value table for class
JobState
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
JobStateReason
Returns the enumeration value table for class
JobStateReason
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
MediaName
Returns the enumeration value table for class
MediaTray
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
MediaSizeName
Returns the enumeration value table for class
MediaSizeName
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
MediaTray
Returns the enumeration value table for class
MediaTray
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
MultipleDocumentHandling
Returns the enumeration value table for class
MultipleDocumentHandling
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
OrientationRequested
Returns the enumeration value table for class
OrientationRequested
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
PDLOverrideSupported
Returns the enumeration value table for class
PDLOverrideSupported
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
PresentationDirection
Returns the enumeration value table for class
PresentationDirection
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
PrinterIsAcceptingJobs
Returns the enumeration value table for class
PrinterIsAcceptingJobs
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
PrinterState
Returns the enumeration value table for class
PrinterState
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
PrinterStateReason
Returns the enumeration value table for class
PrinterStateReason
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
PrintQuality
Returns the enumeration value table for class
PrintQuality
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
ReferenceUriSchemesSupported
Returns the enumeration value table for class
ReferenceUriSchemesSupported
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
Severity
Returns the enumeration value table for class
Severity
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
SheetCollate
Returns the enumeration value table for class
SheetCollate
.
getEnumValueTable()
- Method in class javax.print.attribute.standard.
Sides
Returns the enumeration value table for class
Sides
.
getenv()
- Static method in class java.lang.
System
Returns an unmodifiable string map view of the current system environment.
getenv(String)
- Static method in class java.lang.
System
Gets the value of the specified environment variable.
getEnvironment()
- Method in exception class javax.naming.
CannotProceedException
Retrieves the environment that was in effect when this exception
 was created.
getEnvironment()
- Method in interface javax.naming.
Context
Retrieves the environment in effect for this context.
getEnvironment()
- Method in class javax.naming.
InitialContext
getEon()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the high order component for XML Schema 1.0 dateTime datatype field for
year
.
getEonAndYear()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the XML Schema 1.0 dateTime datatype field for
year
.
getEpochSecond()
- Method in class java.time.
Instant
Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z.
getEra()
- Method in interface java.time.chrono.
ChronoLocalDate
Gets the era, as defined by the chronology.
getEra()
- Method in class java.time.chrono.
HijrahDate
Gets the era applicable at this date.
getEra()
- Method in class java.time.chrono.
JapaneseDate
Gets the era applicable at this date.
getEra()
- Method in class java.time.chrono.
MinguoDate
Gets the era applicable at this date.
getEra()
- Method in class java.time.chrono.
ThaiBuddhistDate
Gets the era applicable at this date.
getEra()
- Method in class java.time.
LocalDate
Gets the era applicable at this date.
getEras()
- Method in class java.text.
DateFormatSymbols
Gets era strings.
getErrorCode()
- Method in exception class java.sql.
SQLException
Retrieves the vendor-specific exception code
 for this
SQLException
object.
getErrorHandler()
- Method in class javax.xml.validation.
SchemaFactory
Gets the current
ErrorHandler
set to this
SchemaFactory
.
getErrorHandler()
- Method in class javax.xml.validation.
Validator
Gets the current
ErrorHandler
set to this
Validator
.
getErrorHandler()
- Method in class javax.xml.validation.
ValidatorHandler
Gets the current
ErrorHandler
set to this
ValidatorHandler
.
getErrorHandler()
- Method in class org.xml.sax.helpers.
ParserAdapter
Return the current error handler.
getErrorHandler()
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Get the current error event handler.
getErrorHandler()
- Method in interface org.xml.sax.
XMLReader
Return the current error handler.
getErrorIndex()
- Method in class java.text.
ParsePosition
Retrieve the index at which an error occurred, or -1 if the
 error index has not been set.
getErrorIndex()
- Method in exception class java.time.format.
DateTimeParseException
Returns the index where the error was found.
getErrorIndex()
- Method in exception class java.util.
IllformedLocaleException
Returns the index where the error was found.
getErrorListener()
- Method in class javax.xml.transform.
Transformer
Get the error event handler in effect for the transformation.
getErrorListener()
- Method in class javax.xml.transform.
TransformerFactory
Get the error event handler for the TransformerFactory.
getErrorManager()
- Method in class java.util.logging.
Handler
Retrieves the ErrorManager for this Handler.
getErrorOffset()
- Method in exception class java.text.
ParseException
Returns the position where the error was found.
getErrorsAny()
- Method in class java.awt.
MediaTracker
Returns a list of all media that have encountered an error.
getErrorsID(int)
- Method in class java.awt.
MediaTracker
Returns a list of media with the specified ID that
 have encountered an error.
getErrorStream()
- Method in class java.lang.
Process
Returns the input stream connected to the error output of the
 process.
getErrorStream()
- Method in class java.net.
HttpURLConnection
Returns the error stream if the connection failed
 but the server sent useful data nonetheless.
getErrorTrees()
- Method in interface com.sun.source.tree.
ErroneousTree
Returns any trees that were saved in this node.
getErrorWriter()
- Method in interface javax.script.
ScriptContext
Returns the
Writer
used to display error output.
getErrorWriter()
- Method in class javax.script.
SimpleScriptContext
Returns the
Writer
used to display error output.
getEscapeProcessing()
- Method in class javax.sql.rowset.
BaseRowSet
Ascertains whether escape processing is enabled for this
RowSet
object.
getEscapeProcessing()
- Method in interface javax.sql.
RowSet
Retrieves whether escape processing is enabled for this
RowSet
object.
getEstimatedMajorSpan()
- Method in class javax.swing.text.
AsyncBoxView
Is the major span currently estimated?
getEtchedBorderUIResource()
- Static method in class javax.swing.plaf.
BorderUIResource
Returns a etched border UI resource.
getEtchedInsets()
- Static method in class javax.swing.plaf.basic.
BasicGraphicsUtils
Returns the amount of space taken up by a border drawn by
drawEtchedRect()
getEtchType()
- Method in class javax.swing.border.
EtchedBorder
Returns which etch-type is set on the etched border.
getEvent()
- Method in interface org.w3c.dom.html.
HTMLScriptElement
Reserved for future use.
getEventAllocator()
- Method in class javax.xml.stream.
XMLInputFactory
Gets the allocator used by streams created with this factory
getEventContext()
- Method in class javax.naming.event.
NamingEvent
Retrieves the event source that fired this event.
getEventContext()
- Method in class javax.naming.event.
NamingExceptionEvent
Retrieves the
EventContext
that fired this event.
getEventMask()
- Method in class java.awt.event.
AWTEventListenerProxy
Returns the event mask associated with the listener.
getEventPhase()
- Method in interface org.w3c.dom.events.
Event
Used to indicate which phase of event flow is currently being
 evaluated.
getEventPropertyName()
- Method in class java.beans.
EventHandler
Returns the property of the event that should be
 used in the action applied to the target.
getEventSetDescriptors()
- Method in interface java.beans.
BeanInfo
Returns the event descriptors of the bean
 that define the types of events fired by this bean.
getEventSetDescriptors()
- Method in class java.beans.
SimpleBeanInfo
Deny knowledge of event sets.
getEventType()
- Method in class javax.swing.event.
HyperlinkEvent
Gets the type of event.
getEventType()
- Method in interface javax.xml.stream.events.
XMLEvent
Returns an integer code for this event.
getEventType()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getEventType()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns an integer code that indicates the type of the event the cursor is
 pointing to.
getEventType()
- Method in class jdk.jfr.consumer.
RecordedEvent
Returns the event type that describes the event.
getEventType()
- Method in class jdk.jfr.
EventFactory
Returns the event type that is associated with this event factory.
getEventType(Class<? extends Event>)
- Static method in class jdk.jfr.
EventType
Returns the event type for an event class, or
null
if it doesn't
 exist.
getEventTypes()
- Method in class jdk.jfr.consumer.
MetadataEvent
Returns a list of the current event types being used.
getEventTypes()
- Method in class jdk.jfr.
FlightRecorder
Returns an immutable list that contains all currently registered events.
getEventTypes()
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Returns the list of currently registered event types.
getExactSizeIfKnown()
- Method in interface java.util.
Spliterator
Convenience method that returns
Spliterator.estimateSize()
if this
 Spliterator is
Spliterator.SIZED
, else
-1
.
getException()
- Method in class java.awt.event.
InvocationEvent
Returns any Exception caught while executing
 the Runnable's
run()
method.
getException()
- Method in exception class java.lang.
ClassNotFoundException
Returns the exception that was raised if an error occurred while
 attempting to load the class.
getException()
- Method in exception class java.lang.
ExceptionInInitializerError
Returns the exception that occurred during a static initialization that
 caused this error to be created.
getException()
- Method in exception class java.security.
PrivilegedActionException
Returns the exception thrown by the privileged computation that
 resulted in this
PrivilegedActionException
.
getException()
- Method in class java.util.concurrent.
ForkJoinTask
Returns the exception thrown by the base computation, or a
CancellationException
if cancelled, or
null
if
 none or if the method has not yet completed.
getException()
- Method in class javax.naming.event.
NamingExceptionEvent
Retrieves the exception that was thrown.
getException()
- Method in class javax.naming.ldap.
SortResponseControl
Retrieves the NamingException appropriate for the result code.
getException()
- Method in interface javax.naming.ldap.
UnsolicitedNotification
Retrieves the exception as constructed using information
 sent by the server.
getException()
- Method in exception class javax.xml.parsers.
FactoryConfigurationError
Return the actual exception (if any) that caused this exception to
 be raised.
getException()
- Method in exception class javax.xml.stream.
FactoryConfigurationError
Return the nested exception (if any)
getException()
- Method in exception class javax.xml.transform.
TransformerException
This method retrieves an exception that this exception wraps.
getException()
- Method in exception class javax.xml.transform.
TransformerFactoryConfigurationError
Return the actual exception (if any) that caused this exception to
 be raised.
getException()
- Method in class jdk.dynalink.linker.
GuardedInvocation
Returns the exception type that if thrown by the invocation should
 invalidate the linkage of this guarded invocation.
getException()
- Method in exception class org.xml.sax.
SAXException
Return the embedded exception, if any.
getExceptionClassName()
- Method in exception class jdk.jshell.
EvalException
Returns the name of the Throwable subclass which was thrown in the
 executing client.
getExceptionListener()
- Method in class java.beans.
Encoder
Gets the exception handler for this stream.
getExceptionListener()
- Method in class java.beans.
XMLDecoder
Gets the exception handler for this stream.
getExceptionName()
- Method in interface com.sun.source.doctree.
ThrowsTree
Returns the name of the exception being documented.
getExceptionTypes()
- Method in class java.lang.reflect.
Constructor
Returns an array of
Class
objects that represent the
 types of exceptions declared to be thrown by the underlying
 executable represented by this object.
getExceptionTypes()
- Method in class java.lang.reflect.
Executable
Returns an array of
Class
objects that represent the
 types of exceptions declared to be thrown by the underlying
 executable represented by this object.
getExceptionTypes()
- Method in class java.lang.reflect.
Method
Returns an array of
Class
objects that represent the
 types of exceptions declared to be thrown by the underlying
 executable represented by this object.
getExclusiveOwnerThread()
- Method in class java.util.concurrent.locks.
AbstractOwnableSynchronizer
Returns the thread last set by
setExclusiveOwnerThread
,
 or
null
if never set.
getExclusiveQueuedThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Returns a collection containing threads that may be waiting to
 acquire in exclusive mode.
getExclusiveQueuedThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Returns a collection containing threads that may be waiting to
 acquire in exclusive mode.
getExecuteExistingDelayedTasksAfterShutdownPolicy()
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Gets the policy on whether to execute existing delayed
 tasks even when this executor has been
shutdown
.
getExecutor()
- Method in class com.sun.net.httpserver.
HttpServer
Returns this server's
Executor
object if one was specified with
HttpServer.setExecutor(Executor)
, or
null
if none was specified.
getExecutor()
- Method in class java.util.concurrent.
SubmissionPublisher
Returns the Executor used for asynchronous delivery.
getExemptionMechanism()
- Method in class javax.crypto.
Cipher
Returns the exemption mechanism object used with this
Cipher
object.
getExp()
- Method in exception class javax.management.
BadBinaryOpValueExpException
Returns the
ValueExp
that originated the exception.
getExpandedDescendants(TreePath)
- Method in class javax.swing.
JTree
Returns an
Enumeration
of the descendants of the
 path
parent
that
 are currently expanded.
getExpandedIcon()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the expanded icon.
getExpandedState(TreePath)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns true if the path is expanded, and visible.
getExpandedState(TreePath)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Returns true if the path is expanded, and visible.
getExpandedState(TreePath)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns true if the path is expanded, and visible.
getExpandEntityReferences()
- Method in interface org.w3c.dom.traversal.
NodeIterator
The value of this flag determines whether the children of entity
 reference nodes are visible to the
NodeIterator
.
getExpandEntityReferences()
- Method in interface org.w3c.dom.traversal.
TreeWalker
The value of this flag determines whether the children of entity
 reference nodes are visible to the
TreeWalker
.
getExpandsSelectedPaths()
- Method in class javax.swing.
JTree
Returns the
expandsSelectedPaths
property.
getExpectedPolicies()
- Method in interface java.security.cert.
PolicyNode
Returns the set of expected policies that would satisfy this
 node's valid policy in the next certificate to be processed.
getExpiration()
- Method in class java.net.
URLConnection
Returns the value of the
expires
header field.
getExplanation()
- Method in exception class javax.naming.
NamingException
Retrieves the explanation associated with this exception.
getExponent()
- Method in class java.security.spec.
RSAOtherPrimeInfo
Returns the prime's exponent.
getExponent(double)
- Static method in class java.lang.
Math
Returns the unbiased exponent used in the representation of a
double
.
getExponent(double)
- Static method in class java.lang.
StrictMath
Returns the unbiased exponent used in the representation of a
double
.
getExponent(float)
- Static method in class java.lang.
Math
Returns the unbiased exponent used in the representation of a
float
.
getExponent(float)
- Static method in class java.lang.
StrictMath
Returns the unbiased exponent used in the representation of a
float
.
getExponentSeparator()
- Method in class java.text.
DecimalFormatSymbols
Returns the string used to separate the mantissa from the exponent.
getExponentSize()
- Method in class javax.crypto.spec.
DHGenParameterSpec
Returns the size in bits of the random exponent (private value).
getExportedKeys(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the foreign key columns that reference the
 given table's primary key columns (the foreign keys exported by a
 table).
getExpression()
- Method in interface com.sun.source.tree.
ArrayAccessTree
Returns the expression for the array being accessed.
getExpression()
- Method in interface com.sun.source.tree.
AssignmentTree
Returns the expression being assigned to the variable.
getExpression()
- Method in interface com.sun.source.tree.
CaseTree
Deprecated.
Please use
CaseTree.getExpressions()
.
getExpression()
- Method in interface com.sun.source.tree.
CompoundAssignmentTree
Returns the expression on the right hand side of the compound assignment.
getExpression()
- Method in interface com.sun.source.tree.
EnhancedForLoopTree
Returns the expression yielding the values for the control variable.
getExpression()
- Method in interface com.sun.source.tree.
ExpressionStatementTree
Returns the expression constituting this statement.
getExpression()
- Method in interface com.sun.source.tree.
InstanceOfTree
Returns the expression to be tested.
getExpression()
- Method in interface com.sun.source.tree.
MemberSelectTree
Returns the expression for which a member is to be selected.
getExpression()
- Method in interface com.sun.source.tree.
ParenthesizedTree
Returns the expression within the parentheses.
getExpression()
- Method in interface com.sun.source.tree.
ReturnTree
Returns the expression to be returned.
getExpression()
- Method in interface com.sun.source.tree.
SwitchExpressionTree
Returns the expression for the
switch
expression.
getExpression()
- Method in interface com.sun.source.tree.
SwitchTree
Returns the expression for the
switch
statement.
getExpression()
- Method in interface com.sun.source.tree.
SynchronizedTree
Returns the expression on which to synchronize.
getExpression()
- Method in interface com.sun.source.tree.
ThrowTree
Returns the expression to be thrown.
getExpression()
- Method in interface com.sun.source.tree.
TypeCastTree
Returns the expression being cast.
getExpression()
- Method in interface com.sun.source.tree.
UnaryTree
Returns the expression that is the operand of the unary operator.
getExpression()
- Method in class javax.xml.crypto.dsig.spec.
XPathType
Returns the XPath expression to be evaluated.
getExpressions()
- Method in interface com.sun.source.tree.
CaseTree
Returns the labels for this case.
getExpressions()
- Method in interface com.sun.source.tree.
StringTemplateTree
PREVIEW
Returns list of expressions.
getExtendedCacheKeys(JComponent)
- Method in class javax.swing.plaf.nimbus.
AbstractRegionPainter
Get any extra attributes which the painter implementation would like
 to include in the image cache lookups.
getExtendedKeyCode()
- Method in class java.awt.event.
KeyEvent
Returns an extended key code for the event.
getExtendedKeyCodeForChar(int)
- Static method in class java.awt.event.
KeyEvent
Returns an extended key code for a unicode character.
getExtendedKeyUsage()
- Method in class java.security.cert.
X509Certificate
Gets an unmodifiable list of Strings representing the OBJECT
 IDENTIFIERs of the
ExtKeyUsageSyntax
field of the
 extended key usage extension, (OID = 2.5.29.37).
getExtendedKeyUsage()
- Method in class java.security.cert.
X509CertSelector
Returns the extendedKeyUsage criterion.
getExtendedState()
- Method in class java.awt.
Frame
Gets the state of this frame.
getExtendsBound()
- Method in interface javax.lang.model.type.
WildcardType
Returns the upper bound of this wildcard.
getExtendsClause()
- Method in interface com.sun.source.tree.
ClassTree
Returns the supertype of this type declaration,
 or
null
if none is provided.
getExtension()
- Method in class javax.sound.sampled.
AudioFileFormat.Type
Obtains the common file name extension for this file type.
getExtension(char)
- Method in class java.util.
Locale
Returns the extension (or private use) value associated with
 the specified key, or null if there is no extension
 associated with the key.
getExtensionKeys()
- Method in class java.util.
Locale
Returns the set of extension keys associated with this locale, or the
 empty set if it has no extensions.
getExtensions()
- Method in exception class java.security.cert.
CertificateRevokedException
Returns a map of X.509 extensions containing additional information
 about the revoked certificate, such as the Invalidity Date
 Extension.
getExtensions()
- Method in interface javax.script.
ScriptEngineFactory
Returns an immutable list of filename extensions, which generally identify scripts
 written in the language supported by this
ScriptEngine
.
getExtensions()
- Method in class javax.swing.filechooser.
FileNameExtensionFilter
Returns the set of file name extensions files are tested against.
getExtensionValue(String)
- Method in interface java.security.cert.
X509Extension
Gets the DER-encoded OCTET string for the extension value
 (
extnValue
) identified by the passed-in
oid
String.
getExtent()
- Method in interface javax.swing.
BoundedRangeModel
Returns the model's extent, the length of the inner range that
 begins at the model's value.
getExtent()
- Method in class javax.swing.
DefaultBoundedRangeModel
Returns the model's extent.
getExtent()
- Method in class javax.swing.
JSlider
Returns the "extent" from the
BoundedRangeModel
.
getExtentSize()
- Method in class javax.swing.
JViewport
Returns the size of the visible part of the view in view coordinates.
getExternalElements()
- Method in interface javax.xml.crypto.dsig.keyinfo.
PGPData
Returns an
unmodifiable list
of
XMLStructure
s representing elements from an external
 namespace.
getExternalSubset(String, String)
- Method in class org.xml.sax.ext.
DefaultHandler2
Tells the parser that if no external subset has been declared
 in the document text, none should be used.
getExternalSubset(String, String)
- Method in interface org.xml.sax.ext.
EntityResolver2
Allows applications to provide an external subset for documents
 that don't explicitly define one.
getExtra()
- Method in class java.util.zip.
ZipEntry
Returns the extra field data for the entry.
getExtraImageMetadataFormatNames()
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns an array of
String
s containing the names
 of additional document formats, other than the native and
 standard formats, recognized by the
getAsTree
and
setFromTree
methods on
 the image metadata objects produced or consumed by this
 plug-in.
getExtraMetadataFormatNames()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an array of
String
s containing the names
 of additional metadata formats, other than the native and standard
 formats, recognized by this plug-in's
getAsTree
,
setFromTree
, and
mergeTree
methods.
getExtraNameCharacters()
- Method in interface java.sql.
DatabaseMetaData
Retrieves all the "extra" characters that can be used in unquoted
 identifier names (those beyond a-z, A-Z, 0-9 and _).
getExtraStreamMetadataFormatNames()
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns an array of
String
s containing the names
 of additional document formats, other than the native and
 standard formats, recognized by the
getAsTree
and
setFromTree
methods on
 the stream metadata objects produced or consumed by this
 plug-in.
getFace()
- Method in interface org.w3c.dom.html.
HTMLBaseFontElement
Font face identifier.
getFace()
- Method in interface org.w3c.dom.html.
HTMLFontElement
Font face identifier.
getFactory()
- Method in class java.util.concurrent.
ForkJoinPool
Returns the factory used for constructing new workers.
getFactory()
- Method in interface javax.script.
ScriptEngine
Returns a
ScriptEngineFactory
for the class to which this
ScriptEngine
belongs.
getFactoryClassLocation()
- Method in class javax.naming.
Reference
Retrieves the location of the factory of the object
 to which this reference refers.
getFactoryClassName()
- Method in class javax.naming.
Reference
Retrieves the class name of the factory of the object
 to which this reference refers.
getFailedProperties()
- Method in exception class java.sql.
SQLClientInfoException
Returns the list of client info properties that could not be set.
getFailureHandler()
- Static method in class java.rmi.server.
RMISocketFactory
Returns the handler for socket creation failure set by the
setFailureHandler
method.
getFallbackLocale(String, Locale)
- Method in class java.util.
ResourceBundle.Control
Returns a
Locale
to be used as a fallback locale for
 further resource bundle searches by the
ResourceBundle.getBundle
factory method.
getFalseExpression()
- Method in interface com.sun.source.tree.
ConditionalExpressionTree
Returns the expression to be evaluated if the condition is false.
getFamily()
- Method in class java.awt.
Font
Returns the family name of this
Font
.
getFamily(Locale)
- Method in class java.awt.
Font
Returns the family name of this
Font
, localized for
 the specified locale.
getFD()
- Method in class java.io.
FileInputStream
Returns the
FileDescriptor
object  that represents the connection to
 the actual file in the file system being
 used by this
FileInputStream
.
getFD()
- Method in class java.io.
FileOutputStream
Returns the file descriptor associated with this stream.
getFD()
- Method in class java.io.
RandomAccessFile
Returns the opaque file descriptor object associated with this
 stream.
getFeature(String)
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Get the state of the named feature.
getFeature(String)
- Method in class javax.xml.parsers.
SAXParserFactory
Returns the particular property requested for in the underlying
 implementation of org.xml.sax.XMLReader.
getFeature(String)
- Method in class javax.xml.transform.
TransformerFactory
Look up the value of a feature.
getFeature(String)
- Method in class javax.xml.validation.
SchemaFactory
Look up the value of a feature flag.
getFeature(String)
- Method in class javax.xml.validation.
Validator
Look up the value of a feature flag.
getFeature(String)
- Method in class javax.xml.validation.
ValidatorHandler
Look up the value of a feature flag.
getFeature(String)
- Method in class javax.xml.xpath.
XPathFactory
Get the state of the named feature.
getFeature(String)
- Method in class org.xml.sax.helpers.
ParserAdapter
Check a parser feature flag.
getFeature(String)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Look up the value of a feature.
getFeature(String)
- Method in interface org.xml.sax.
XMLReader
Look up the value of a feature flag.
getFeature(String, String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
getFeature(String, String)
- Method in interface org.w3c.dom.
DOMImplementation
This method returns a specialized object which implements the
 specialized APIs of the specified feature and version, as specified
 in
DOM Features
.
getFeature(String, String)
- Method in interface org.w3c.dom.
Node
This method returns a specialized object which implements the
 specialized APIs of the specified feature and version, as specified
 in .
getFeedResolution(int)
- Method in class javax.print.attribute.
ResolutionSyntax
Returns this resolution attribute's feed direction resolution in the
 given units.
getFeedResolutionDphi()
- Method in class javax.print.attribute.
ResolutionSyntax
Returns this resolution attribute's feed direction resolution in units of
 dphi.
getFetchDirection()
- Method in interface java.sql.
ResultSet
Retrieves the fetch direction for this
ResultSet
object.
getFetchDirection()
- Method in interface java.sql.
Statement
Retrieves the direction for fetching rows from
 database tables that is the default for result sets
 generated from this
Statement
object.
getFetchDirection()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves this
RowSet
object's current setting for the
 fetch direction.
getFetchSize()
- Method in interface java.sql.
ResultSet
Retrieves the fetch size for this
ResultSet
object.
getFetchSize()
- Method in interface java.sql.
Statement
Retrieves the number of result set rows that is the default
 fetch size for
ResultSet
objects
 generated from this
Statement
object.
getFetchSize()
- Method in class javax.sql.rowset.
BaseRowSet
Returns the fetch size for this
RowSet
object.
getField()
- Method in class java.security.spec.
EllipticCurve
Returns the finite field
field
that this
 elliptic curve is over.
getField()
- Method in class java.text.
FieldPosition
Retrieves the field identifier.
getField(String)
- Method in class java.io.
ObjectStreamClass
Get the field of this class by name.
getField(String)
- Method in class java.lang.
Class
Returns a
Field
object that reflects the specified public member
 field of the class or interface represented by this
Class
object.
getField(String)
- Method in class jdk.jfr.
EventType
Returns the field with the specified name, or
null
if it doesn't
 exist.
getField(DatatypeConstants.Field)
- Method in class javax.xml.datatype.
Duration
Gets the value of a field.
GetField()
- Constructor for class java.io.
ObjectInputStream.GetField
Constructor for subclasses to call.
getFieldAttribute()
- Method in class java.text.
FieldPosition
Returns the field identifier as an attribute constant
 from one of the
Field
subclasses.
getFieldNames()
- Method in interface javax.management.
Descriptor
Returns all the field names in the descriptor.
getFieldNames()
- Method in class javax.management.
ImmutableDescriptor
getFieldNames()
- Method in class javax.management.modelmbean.
DescriptorSupport
getFields()
- Method in class java.io.
ObjectStreamClass
Return an array of the fields of this serializable class.
getFields()
- Method in class java.lang.
Class
Returns an array containing
Field
objects reflecting all
 the accessible public fields of the class or interface represented by
 this
Class
object.
getFields()
- Method in interface javax.management.
Descriptor
Returns all of the fields contained in this descriptor as a string array.
getFields()
- Method in class javax.management.
ImmutableDescriptor
getFields()
- Method in class javax.management.modelmbean.
DescriptorSupport
getFields()
- Method in class javax.sql.rowset.serial.
SerialJavaObject
Returns an array of
Field
objects that contains each
 field of the object that this helper class is serializing.
getFields()
- Method in class jdk.jfr.consumer.
RecordedEvent
Returns the list of descriptors that describes the fields of the event.
getFields()
- Method in class jdk.jfr.consumer.
RecordedObject
Returns an immutable list of the fields for this object.
getFields()
- Method in class jdk.jfr.
EventType
Returns an immutable list of descriptors that describe the event fields of
 this event type.
getFields()
- Method in class jdk.jfr.
ValueDescriptor
Returns an immutable list of value descriptors if the type is complex,
 else an empty list.
getFields(int)
- Method in class javax.swing.text.
InternationalFormatter
Returns the
Format.Field
constants associated with
 the text at
offset
.
getFieldSize()
- Method in interface java.security.spec.
ECField
Returns the field size in bits.
getFieldSize()
- Method in class java.security.spec.
ECFieldF2m
Returns the field size in bits which is
m
for this characteristic 2 finite field.
getFieldSize()
- Method in class java.security.spec.
ECFieldFp
Returns the field size in bits which is size of prime p
 for this prime finite field.
getFieldValue(String)
- Method in interface javax.management.
Descriptor
Returns the value for a specific field name, or null if no value
 is present for that name.
getFieldValue(String)
- Method in class javax.management.
ImmutableDescriptor
getFieldValue(String)
- Method in class javax.management.modelmbean.
DescriptorSupport
getFieldValues(String...)
- Method in interface javax.management.
Descriptor
Returns all the field values in the descriptor as an array of Objects.
getFieldValues(String...)
- Method in class javax.management.
ImmutableDescriptor
getFieldValues(String...)
- Method in class javax.management.modelmbean.
DescriptorSupport
getFile()
- Method in class java.awt.
FileDialog
Gets the selected file of this file dialog.
getFile()
- Method in class java.net.
URL
Gets the file name of this
URL
.
getFile()
- Method in exception class java.nio.file.
FileSystemException
Returns the file used to create this exception.
getFileAttributeView(Class<V>)
- Method in interface java.nio.file.
SecureDirectoryStream
Returns a new file attribute view to access the file attributes of this
 directory.
getFileAttributeView(Path, Class<V>, LinkOption...)
- Static method in class java.nio.file.
Files
Returns a file attribute view of a given type.
getFileAttributeView(Path, Class<V>, LinkOption...)
- Method in class java.nio.file.spi.
FileSystemProvider
Returns a file attribute view of a given type.
getFileAttributeView(T, Class<V>, LinkOption...)
- Method in interface java.nio.file.
SecureDirectoryStream
Returns a new file attribute view to access the file attributes of a file
 in this directory.
getFileChooser()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the file chooser.
getFileChooserDetailViewIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
FileChooserDetailViewIcon
.
getFileChooserHomeFolderIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
FileChooserHomeFolderIcon
.
getFileChooserListViewIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
FileChooserListViewIcon
.
getFileChooserNewFolderIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
FileChooserNewFolderIcon
.
getFileChooserUpFolderIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
FileChooserUpFolderIcon
.
getFileDescriptor()
- Method in class java.net.
DatagramSocketImpl
Gets the datagram socket file descriptor.
getFileDescriptor()
- Method in class java.net.
SocketImpl
Returns the value of this socket's
fd
field.
getFileFilter()
- Method in class javax.swing.
JFileChooser
Returns the currently selected file filter.
getFileForInput(JavaFileManager.Location, String, String)
- Method in class javax.tools.
ForwardingJavaFileManager
getFileForInput(JavaFileManager.Location, String, String)
- Method in interface javax.tools.
JavaFileManager
Returns a
file object
for input
 representing the specified
relative
 name
in the specified package in the given package-oriented location.
getFileForOutput(JavaFileManager.Location, String, String, FileObject)
- Method in class javax.tools.
ForwardingJavaFileManager
getFileForOutput(JavaFileManager.Location, String, String, FileObject)
- Method in interface javax.tools.
JavaFileManager
Returns a
file object
for output
 representing the specified
relative
 name
in the specified package in the given location.
getFileForOutputForOriginatingFiles(JavaFileManager.Location, String, String, FileObject...)
- Method in class javax.tools.
ForwardingJavaFileManager
Returns a
file object
for output
 representing the specified
relative
 name
in the specified package in the given location.
getFileForOutputForOriginatingFiles(JavaFileManager.Location, String, String, FileObject...)
- Method in interface javax.tools.
JavaFileManager
Returns a
file object
for output
 representing the specified
relative
 name
in the specified package in the given location.
getFileKind(TypeElement)
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns the file kind of a type element.
getFileName()
- Method in class java.awt.
JobAttributes
Specifies the file name for the output file for jobs using these
 attributes.
getFileName()
- Method in class java.lang.
StackTraceElement
Returns the name of the source file containing the execution point
 represented by this stack trace element.
getFileName()
- Method in interface java.lang.
StackWalker.StackFrame
Returns the name of the source file containing the execution point
 represented by this stack frame.
getFileName()
- Method in interface java.nio.file.
Path
Returns the name of the file or directory denoted by this path as a
Path
object.
getFileName()
- Method in exception class javax.script.
ScriptException
Get the source of the script causing the error.
getFileName()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the file name.
getFilenameFilter()
- Method in class java.awt.
FileDialog
Determines this file dialog's filename filter.
getFileNameMap()
- Static method in class java.net.
URLConnection
Loads filename map (a mimetable) from a data file.
getFileObjectOf(Element)
- Method in interface javax.lang.model.util.
Elements
Returns the file object for this element or
null
if
 there is no such file object.
getFilePointer()
- Method in class java.io.
RandomAccessFile
Returns the current offset in this file.
getFiler()
- Method in interface javax.annotation.processing.
ProcessingEnvironment
Returns the filer used to create new source, class, or auxiliary
 files.
getFiles()
- Method in class java.awt.desktop.
FilesEvent
Gets the list of files.
getFiles()
- Method in class java.awt.
FileDialog
Returns files that the user selects.
getFiles()
- Method in class javax.swing.plaf.basic.
BasicDirectoryModel
Returns a list of files.
getFiles(File, boolean)
- Method in class javax.swing.filechooser.
FileSystemView
Gets the list of shown (i.e. not hidden) files.
getFileSelectionMode()
- Method in class javax.swing.
JFileChooser
Returns the current file-selection mode.
getFileStore(Path)
- Static method in class java.nio.file.
Files
Returns the
FileStore
representing the file store where a file
 is located.
getFileStore(Path)
- Method in class java.nio.file.spi.
FileSystemProvider
Returns the
FileStore
representing the file store where a file
 is located.
getFileStoreAttributeView(Class<V>)
- Method in class java.nio.file.
FileStore
Returns a
FileStoreAttributeView
of the given type.
getFileStores()
- Method in class java.nio.file.
FileSystem
Returns an object to iterate over the underlying file stores.
getFileSuffixes()
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns an array of
String
s containing a list of
 file suffixes associated with the formats that are generally
 usable by the
ImageReader
or
ImageWriter
implementation associated with this
 service provider.
getFileSystem()
- Method in interface java.nio.file.
Path
Returns the file system that created this object.
getFileSystem(URI)
- Static method in class java.nio.file.
FileSystems
Returns a reference to an existing
FileSystem
.
getFileSystem(URI)
- Method in class java.nio.file.spi.
FileSystemProvider
Returns an existing
FileSystem
created by this provider.
getFileSystemView()
- Static method in class javax.swing.filechooser.
FileSystemView
Returns the file system view.
getFileSystemView()
- Method in class javax.swing.
JFileChooser
Returns the file system view.
getFileView()
- Method in class javax.swing.
JFileChooser
Returns the current file view.
getFileView(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
getFileView(JFileChooser)
- Method in class javax.swing.plaf.
FileChooserUI
Returns a file view.
getFileView(JFileChooser)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getFileView
method on each UI handled by this object.
getFillsViewportHeight()
- Method in class javax.swing.
JTable
Returns whether or not this table is always made large enough
 to fill the height of an enclosing viewport.
getFilter()
- Method in class java.util.logging.
Handler
Get the current
Filter
for this
Handler
.
getFilter()
- Method in class java.util.logging.
Logger
Get the current filter for this Logger.
getFilter()
- Method in interface javax.sql.rowset.
FilteredRowSet
Retrieves the active filter for this
FilteredRowSet
object.
getFilter()
- Method in class javax.xml.crypto.dsig.spec.
XPathType
Returns the filter operation.
getFilter()
- Method in interface org.w3c.dom.ls.
LSParser
When a filter is provided, the implementation will call out to the
 filter as it is constructing the DOM tree structure.
getFilter()
- Method in interface org.w3c.dom.ls.
LSSerializer
When the application provides a filter, the serializer will call out
 to the filter before serializing each Node.
getFilter()
- Method in interface org.w3c.dom.traversal.
NodeIterator
The
NodeFilter
used to screen nodes.
getFilter()
- Method in interface org.w3c.dom.traversal.
TreeWalker
The filter used to screen nodes.
getFilterInstance(ImageConsumer)
- Method in class java.awt.image.
ImageFilter
Returns a unique instance of an ImageFilter object which will
 actually perform the filtering for the specified ImageConsumer.
getFilters()
- Method in class com.sun.net.httpserver.
HttpContext
Returns this context's
List
of
filters
.
getFinallyBlock()
- Method in interface com.sun.source.tree.
TryTree
Returns the finally block provided in the
try
statement,
 or
null
if there is none.
getFirst()
- Method in class java.util.
ArrayDeque
getFirst()
- Method in class java.util.
ArrayList
Gets the first element of this collection.
getFirst()
- Method in class java.util.concurrent.
ConcurrentLinkedDeque
getFirst()
- Method in class java.util.concurrent.
CopyOnWriteArrayList
Gets the first element of this collection.
getFirst()
- Method in class java.util.concurrent.
LinkedBlockingDeque
getFirst()
- Method in interface java.util.
Deque
Retrieves, but does not remove, the first element of this deque.
getFirst()
- Method in class java.util.
LinkedHashSet
Gets the first element of this collection.
getFirst()
- Method in class java.util.
LinkedList
Returns the first element in this list.
getFirst()
- Method in interface java.util.
List
Gets the first element of this collection.
getFirst()
- Method in interface java.util.
SequencedCollection
Gets the first element of this collection.
getFirst()
- Method in interface java.util.
SortedSet
Gets the first element of this collection.
getFirst(String)
- Method in class com.sun.net.httpserver.
Headers
Returns the first value from the
List
of
String
values
 for the given
key
, or
null
if no mapping for the
key
exists.
getFirstChild()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the first child of this node, or
null
if
 the node has no children.
getFirstChild()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns this node's first child.
getFirstChild()
- Method in interface org.w3c.dom.
Node
The first child of this node.
getFirstColumn()
- Method in interface javax.accessibility.
AccessibleTableModelChange
Returns the first column that changed.
getFirstColumn()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableModelChange
Returns the first column.
getFirstComponent(Container)
- Method in class java.awt.
ContainerOrderFocusTraversalPolicy
Returns the first Component in the traversal cycle.
getFirstComponent(Container)
- Method in class java.awt.
FocusTraversalPolicy
Returns the first Component in the traversal cycle.
getFirstComponent(Container)
- Method in class javax.swing.
DefaultFocusManager
Returns the first component.
getFirstComponent(Container)
- Method in class javax.swing.
LayoutFocusTraversalPolicy
Returns the first Component in the traversal cycle.
getFirstComponent(Container)
- Method in class javax.swing.
SortingFocusTraversalPolicy
Returns the first Component in the traversal cycle.
getFirstDayOfWeek()
- Method in class java.time.temporal.
WeekFields
Gets the first day-of-week.
getFirstDayOfWeek()
- Method in class java.util.
Calendar
Gets what the first day of the week is; e.g.,
SUNDAY
in the U.S.,
MONDAY
in France.
getFirstDayOfWeek(Locale)
- Method in class java.util.spi.
CalendarDataProvider
Returns the first day of a week in the given
locale
.
getFirstElementChild()
- Method in interface org.w3c.dom.
ElementTraversal
Returns a reference to the first child node of the element which is of
 the
Element
type.
getFirstIndex()
- Method in class javax.swing.event.
ListSelectionEvent
Returns the index of the first row whose selection may have changed.
getFirstLeaf()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Finds and returns the first leaf that is a descendant of this node --
 either this node or its first child's first leaf.
getFirstLineIndent(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the first line indent setting.
getFirstQueuedThread()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Returns the first (longest-waiting) thread in the queue, or
null
if no threads are currently queued.
getFirstQueuedThread()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Returns the first (longest-waiting) thread in the queue, or
null
if no threads are currently queued.
getFirstRow()
- Method in interface javax.accessibility.
AccessibleTableModelChange
Returns the first row that changed.
getFirstRow()
- Method in class javax.swing.event.
TableModelEvent
Returns the first row that changed.
getFirstRow()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableModelChange
Returns the first row.
getFirstSentence()
- Method in interface com.sun.source.doctree.
DocCommentTree
Returns the first sentence of a documentation comment.
getFirstSentence(List<? extends DocTree>)
- Method in interface com.sun.source.util.
DocTreeFactory
Gets the first sentence contained in a list of content.
getFirstSentence(List<? extends DocTree>)
- Method in class com.sun.source.util.
DocTrees
Returns the list of
DocTree
representing the first sentence of
 a comment.
getFirstVisibleIndex()
- Method in class javax.swing.
JList
Returns the smallest list index that is currently visible.
getFixedCellHeight()
- Method in class javax.swing.
JList
Returns the value of the
fixedCellHeight
property.
getFixedCellWidth()
- Method in class javax.swing.
JList
Returns the value of the
fixedCellWidth
property.
getFixedRate(Integer)
- Method in class javax.management.timer.
Timer
Gets a copy of the flag indicating whether a periodic notification is
 executed at
fixed-delay
or at
fixed-rate
.
getFixedRate(Integer)
- Method in interface javax.management.timer.
TimerMBean
Gets a copy of the flag indicating whether a periodic notification is
 executed at
fixed-delay
or at
fixed-rate
.
getFlags()
- Method in interface com.sun.source.tree.
ModifiersTree
Returns the flags in this modifiers tree.
getFlags()
- Method in exception class java.util.
DuplicateFormatFlagsException
Returns the set of flags which contains a duplicate flag.
getFlags()
- Method in exception class java.util.
FormatFlagsConversionMismatchException
Returns the incompatible flag.
getFlags()
- Method in exception class java.util.
IllegalFormatFlagsException
Returns the set of flags which contains an illegal combination.
getFlags()
- Method in exception class java.util.
UnknownFormatFlagsException
Returns the set of flags which contains an unknown flag.
getFlags()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the flags associated with this ticket.
getFlatness()
- Method in class java.awt.geom.
CubicCurve2D
Returns the flatness of this curve.
getFlatness()
- Method in class java.awt.geom.
FlatteningPathIterator
Returns the flatness of this iterator.
getFlatness()
- Method in class java.awt.geom.
QuadCurve2D
Returns the flatness, or maximum distance of a
 control point from the line connecting the end points, of this
QuadCurve2D
.
getFlatness(double[], int)
- Static method in class java.awt.geom.
CubicCurve2D
Returns the flatness of the cubic curve specified
 by the control points stored in the indicated array at the
 indicated index.
getFlatness(double[], int)
- Static method in class java.awt.geom.
QuadCurve2D
Returns the flatness, or maximum distance of a
 control point from the line connecting the end points, of the
 quadratic curve specified by the control points stored in the
 indicated array at the indicated index.
getFlatness(double, double, double, double, double, double)
- Static method in class java.awt.geom.
QuadCurve2D
Returns the flatness, or maximum distance of a
 control point from the line connecting the end points, of the
 quadratic curve specified by the indicated control points.
getFlatness(double, double, double, double, double, double, double, double)
- Static method in class java.awt.geom.
CubicCurve2D
Returns the flatness of the cubic curve specified
 by the indicated control points.
getFlatnessSq()
- Method in class java.awt.geom.
CubicCurve2D
Returns the square of the flatness of this curve.
getFlatnessSq()
- Method in class java.awt.geom.
QuadCurve2D
Returns the square of the flatness, or maximum distance of a
 control point from the line connecting the end points, of this
QuadCurve2D
.
getFlatnessSq(double[], int)
- Static method in class java.awt.geom.
CubicCurve2D
Returns the square of the flatness of the cubic curve specified
 by the control points stored in the indicated array at the
 indicated index.
getFlatnessSq(double[], int)
- Static method in class java.awt.geom.
QuadCurve2D
Returns the square of the flatness, or maximum distance of a
 control point from the line connecting the end points, of the
 quadratic curve specified by the control points stored in the
 indicated array at the indicated index.
getFlatnessSq(double, double, double, double, double, double)
- Static method in class java.awt.geom.
QuadCurve2D
Returns the square of the flatness, or maximum distance of a
 control point from the line connecting the end points, of the
 quadratic curve specified by the indicated control points.
getFlatnessSq(double, double, double, double, double, double, double, double)
- Static method in class java.awt.geom.
CubicCurve2D
Returns the square of the flatness of the cubic curve specified
 by the indicated control points.
getFlavorListeners()
- Method in class java.awt.datatransfer.
Clipboard
Returns an array of all the
FlavorListener
s currently registered
 on this
Clipboard
.
getFlavorMap()
- Method in class java.awt.dnd.
DragSource
This method returns the
FlavorMap
for this
DragSource
.
getFlavorMap()
- Method in class java.awt.dnd.
DropTarget
Gets the
FlavorMap
associated with this
DropTarget
.
getFlavorsForNative(String)
- Method in interface java.awt.datatransfer.
FlavorTable
Returns a
List
of
DataFlavor
s to which the specified
String
corresponds.
getFlavorsForNative(String)
- Method in class java.awt.datatransfer.
SystemFlavorMap
Returns a
List
of
DataFlavor
s to which the specified
String
native can be translated by the data transfer subsystem.
getFlavorsForNatives(String[])
- Method in interface java.awt.datatransfer.
FlavorMap
Returns a
Map
of the specified
String
natives to their
 corresponding
DataFlavor
.
getFlavorsForNatives(String[])
- Method in class java.awt.datatransfer.
SystemFlavorMap
Returns a
Map
of the specified
String
natives to their
 most preferred
DataFlavor
.
getFlightRecorder()
- Static method in class jdk.jfr.
FlightRecorder
Returns the Flight Recorder for the platform.
getFlipContents()
- Method in class java.awt.
BufferCapabilities
Returns the resulting contents of the back buffer after page-flipping.
getFloat()
- Method in class java.nio.
ByteBuffer
Relative
get
method for reading a float value.
getFloat(int)
- Method in class java.nio.
ByteBuffer
Absolute
get
method for reading a float value.
getFloat(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
FLOAT
parameter
 as a
float
in the Java programming language.
getFloat(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
float
in the Java programming language.
getFloat(Object)
- Method in class java.lang.reflect.
Field
Gets the value of a static or instance field of type
float
or of another primitive type convertible to
 type
float
via a widening conversion.
getFloat(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object, as a
float
.
getFloat(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
FLOAT
parameter as a
float
in the Java programming language.
getFloat(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
float
in the Java programming language.
getFloat(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
float
or of another primitive
 type convertible to type
float
by a widening conversion.
getFloat(String, float)
- Method in class java.util.prefs.
AbstractPreferences
Implements the
getFloat
method as per the specification in
Preferences.getFloat(String,float)
.
getFloat(String, float)
- Method in class java.util.prefs.
Preferences
Returns the float value represented by the string associated with the
 specified key in this preference node.
getFloatingColor()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Gets the color displayed when over a floating area
getFloatParameter(int)
- Method in class java.awt.image.renderable.
ParameterBlock
A convenience method to return a parameter as a float.
getFloatValue(short)
- Method in interface org.w3c.dom.css.
CSSPrimitiveValue
This method is used to get a float value in a specified unit.
getFlowAxis()
- Method in class javax.swing.text.
FlowView
Fetches the axis along which views should be
 flowed.
getFlowSpan(int)
- Method in class javax.swing.text.
FlowView
Fetch the constraining span to flow against for
 the given child index.
getFlowSpan(int)
- Method in class javax.swing.text.
ParagraphView
Fetches the constraining span to flow against for
 the given child index.
getFlowStart(int)
- Method in class javax.swing.text.
FlowView
Fetch the location along the flow axis that the
 flow span will start at.
getFlowStart(int)
- Method in class javax.swing.text.
ParagraphView
Fetches the location along the flow axis that the
 flow span will start at.
getFlushedPosition()
- Method in interface javax.imageio.stream.
ImageInputStream
Returns the earliest position in the stream to which seeking
 may be performed.
getFlushedPosition()
- Method in class javax.imageio.stream.
ImageInputStreamImpl
getFocusableWindowState()
- Method in class java.awt.
Window
Returns whether this Window can become the focused Window if it meets
 the other requirements outlined in
isFocusableWindow
.
getFocusAccelerator()
- Method in class javax.swing.text.
JTextComponent
Returns the key accelerator that will cause the receiving
 text component to get the focus.
getFocusColor()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the focus color.
getFocusColor()
- Method in class javax.swing.plaf.metal.
MetalButtonUI
Returns the color of the focused button.
getFocusColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the focus color of the current theme.
getFocusColor()
- Method in class javax.swing.plaf.metal.
MetalRadioButtonUI
Returns the color of the focused
JRadioButton
.
getFocusColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the focus color.
getFocusColor()
- Method in class javax.swing.plaf.metal.
MetalToggleButtonUI
Returns the color of a focused toggle button.
getFocusCycleRootAncestor()
- Method in class java.awt.
Component
Returns the Container which is the focus cycle root of this Component's
 focus traversal cycle.
getFocusCycleRootAncestor()
- Method in class java.awt.
Window
Always returns
null
because Windows have no ancestors; they
 represent the top of the Component hierarchy.
getFocusCycleRootAncestor()
- Method in class javax.swing.
JInternalFrame
Always returns
null
because
JInternalFrame
s
 must always be roots of a focus
 traversal cycle.
getFocusedComponent()
- Method in class javax.swing.text.
TextAction
Fetches the text component that currently has focus.
getFocusedWindow()
- Method in class java.awt.
KeyboardFocusManager
Returns the focused Window, if the focused Window is in the same context
 as the calling thread.
getFocusIndex()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the index of the tab that has focus.
getFocusListeners()
- Method in class java.awt.
Component
Returns an array of all the focus listeners
 registered on this component.
getFocusLostBehavior()
- Method in class javax.swing.
JFormattedTextField
Returns the behavior when focus is lost.
getFocusOwner()
- Method in class java.awt.
KeyboardFocusManager
Returns the focus owner, if the focus owner is in the same context as
 the calling thread.
getFocusOwner()
- Method in class java.awt.
Window
Returns the child Component of this Window that has focus if this Window
 is focused; returns null otherwise.
getFocusOwner()
- Method in class javax.swing.
JInternalFrame
If this
JInternalFrame
is active,
 returns the child that has focus.
getFocusPoint()
- Method in class java.awt.
RadialGradientPaint
Returns a copy of the focus point of the radial gradient.
getFocusTraversalKeys(int)
- Method in class java.awt.
Component
Returns the Set of focus traversal keys for a given traversal operation
 for this Component.
getFocusTraversalKeys(int)
- Method in class java.awt.
Container
Returns the Set of focus traversal keys for a given traversal operation
 for this Container.
getFocusTraversalKeys(int)
- Method in class java.awt.
Window
Gets a focus traversal key for this Window.
getFocusTraversalKeysEnabled()
- Method in class java.awt.
Component
Returns whether focus traversal keys are enabled for this Component.
getFocusTraversalPolicy()
- Method in class java.awt.
Container
Returns the focus traversal policy that will manage keyboard traversal
 of this Container's children, or null if this Container is not a focus
 cycle root.
getFollowRedirects()
- Static method in class java.net.
HttpURLConnection
Returns a
boolean
indicating
 whether or not HTTP redirects (3xx) should
 be automatically followed.
getFont()
- Method in class com.sun.java.accessibility.util.
Translator
Get the
Font
of this object.
getFont()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the
Font
of this object.
getFont()
- Method in class java.awt.
Component
Gets the font of this component.
getFont()
- Method in class java.awt.font.
GlyphVector
Returns the
Font
associated with this
GlyphVector
.
getFont()
- Method in class java.awt.
FontMetrics
Gets the
Font
described by this
FontMetrics
object.
getFont()
- Method in class java.awt.
Graphics
Gets the current font.
getFont()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Get the Font of this object.
getFont()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the
Font
of this object.
getFont()
- Method in class java.awt.
MenuComponent
Gets the font used for this menu component.
getFont()
- Method in interface java.awt.
MenuContainer
Returns the font in use by this container.
getFont()
- Method in interface javax.accessibility.
AccessibleComponent
Gets the font of this object.
getFont()
- Method in class javax.swing.
DebugGraphics
Returns the Font used for text drawing operations.
getFont()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getFont()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
Font
of this object.
getFont()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
getFont()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getFont()
- Method in class javax.swing.text.
GlyphView
Fetch the font that the glyphs should be based
 upon.
getFont()
- Method in class javax.swing.text.
LabelView
Fetches the font that the glyphs should be based upon.
getFont()
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Gets the font used for editing.
getFont()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Gets the font of this component.
getFont()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font property definition in CSS2.
getFont(Component)
- Method in class javax.swing.border.
TitledBorder
Returns default font of the titled border.
getFont(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is a
Font
return it,
 otherwise return
null
.
getFont(Object)
- Static method in class javax.swing.
UIManager
Returns a font from the defaults.
getFont(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is a
Font
return it, otherwise return
null
.
getFont(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns a font from the defaults that is appropriate
 for the given locale.
getFont(String)
- Static method in class java.awt.
Font
Returns a
Font
object from the system properties list.
getFont(String, int, int)
- Method in class javax.swing.text.
StyleContext
Gets a new font.
getFont(String, Font)
- Static method in class java.awt.
Font
Gets the specified
Font
from the system properties
 list.
getFont(Map<? extends AttributedCharacterIterator.Attribute, ?>)
- Static method in class java.awt.
Font
Returns a
Font
appropriate to the attributes.
getFont(SynthContext)
- Method in class javax.swing.plaf.synth.
SynthStyle
Returns the Font for the specified state.
getFont(AttributeSet)
- Method in class javax.swing.text.
DefaultStyledDocument
Gets the font from an attribute set.
getFont(AttributeSet)
- Method in class javax.swing.text.html.
StyleSheet
Fetches the font to use for the given set of attributes.
getFont(AttributeSet)
- Method in class javax.swing.text.
StyleContext
Gets the font from an attribute set.
getFont(AttributeSet)
- Method in interface javax.swing.text.
StyledDocument
Takes a set of attributes and turn it into a font
 specification.
getFontFamily()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-family property definition in CSS2.
getFontFamily(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the font family setting from the attribute list.
getFontForState(SynthContext)
- Method in class javax.swing.plaf.nimbus.
NimbusStyle
Returns the font for the specified state.
getFontForState(SynthContext)
- Method in class javax.swing.plaf.synth.
SynthStyle
Returns the font for the specified state.
getFontList()
- Method in class java.awt.
Toolkit
Deprecated.
see
GraphicsEnvironment.getAvailableFontFamilyNames()
getFontMetrics()
- Method in class java.awt.
Graphics
Gets the font metrics of the current font.
getFontMetrics()
- Method in class javax.swing.
DebugGraphics
Overrides
Graphics.getFontMetrics
.
getFontMetrics()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the font metrics.
getFontMetrics()
- Method in class javax.swing.text.
FieldView
Fetches the font metrics associated with the component hosting
 this view.
getFontMetrics()
- Method in class javax.swing.text.
LabelView
Deprecated.
FontMetrics are not used for glyph rendering
  when running in the JDK.
getFontMetrics(Font)
- Method in class com.sun.java.accessibility.util.
Translator
Get the
FontMetrics
of this object.
getFontMetrics(Font)
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the
FontMetrics
of this object.
getFontMetrics(Font)
- Method in class java.awt.
Component
Gets the font metrics for the specified font.
getFontMetrics(Font)
- Method in class java.awt.
Graphics
Gets the font metrics for the specified font.
getFontMetrics(Font)
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Get the FontMetrics of this object.
getFontMetrics(Font)
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the
FontMetrics
of this object.
getFontMetrics(Font)
- Method in class java.awt.
Toolkit
Deprecated.
As of JDK version 1.2, replaced by the
Font
method
getLineMetrics
.
getFontMetrics(Font)
- Method in interface javax.accessibility.
AccessibleComponent
Gets the
FontMetrics
of this object.
getFontMetrics(Font)
- Method in class javax.swing.
DebugGraphics
Overrides
Graphics.getFontMetrics
.
getFontMetrics(Font)
- Method in class javax.swing.
JComponent
Gets the
FontMetrics
for the specified
Font
.
getFontMetrics(Font)
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getFontMetrics(Font)
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the
FontMetrics
of this object.
getFontMetrics(Font)
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
getFontMetrics(Font)
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getFontMetrics(Font)
- Method in class javax.swing.text.
StyleContext
Returns font metrics for a font.
getFontName()
- Method in class java.awt.
Font
Returns the font face name of this
Font
.
getFontName(Locale)
- Method in class java.awt.
Font
Returns the font face name of the
Font
, localized
 for the specified locale.
getFontRenderContext()
- Method in class java.awt.font.
GlyphVector
Returns the
FontRenderContext
associated with this
GlyphVector
.
getFontRenderContext()
- Method in class java.awt.
FontMetrics
Gets the
FontRenderContext
used by this
FontMetrics
object to measure text.
getFontRenderContext()
- Method in class java.awt.
Graphics2D
Get the rendering context of the
Font
within this
Graphics2D
context.
getFontSize()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-size property definition in CSS2.
getFontSize(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the font size setting from the attribute list.
getFontSizeAdjust()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-size-adjust property definition in CSS2.
getFontStretch()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-stretch property definition in CSS2.
getFontStyle()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-style property definition in CSS2.
getFontTable(int)
- Method in interface java.awt.font.
OpenType
Returns the table as an array of bytes for a specified tag.
getFontTable(int, int, int)
- Method in interface java.awt.font.
OpenType
Returns a subset of the table as an array of bytes
 for a specified tag.
getFontTable(String)
- Method in interface java.awt.font.
OpenType
Returns the table as an array of bytes for a specified tag.
getFontTable(String, int, int)
- Method in interface java.awt.font.
OpenType
Returns a subset of the table as an array of bytes
 for a specified tag.
getFontTableSize(int)
- Method in interface java.awt.font.
OpenType
Returns the size of the table for a specified tag.
getFontTableSize(String)
- Method in interface java.awt.font.
OpenType
Returns the size of the table for a specified tag.
getFontVariant()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-variant property definition in CSS2.
getFontWeight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the font-weight property definition in CSS2.
getForeground()
- Method in class com.sun.java.accessibility.util.
Translator
Get the foreground
Color
of this object.
getForeground()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the foreground color of this object.
getForeground()
- Method in class java.awt.
Component
Gets the foreground color of this component.
getForeground()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Get the foreground color of this object.
getForeground()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the foreground color of this object.
getForeground()
- Method in interface javax.accessibility.
AccessibleComponent
Gets the foreground color of this object.
getForeground()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getForeground()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the foreground color of this object.
getForeground()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Get the foreground color of this object.
getForeground()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getForeground()
- Method in class javax.swing.text.
GlyphView
Fetch the foreground color to use to render the
 glyphs.
getForeground()
- Method in class javax.swing.text.
LabelView
Fetches the foreground color to use to render the glyphs.
getForeground(AttributeSet)
- Method in class javax.swing.text.
DefaultStyledDocument
Gets the foreground color from an attribute set.
getForeground(AttributeSet)
- Method in class javax.swing.text.html.
StyleSheet
Takes a set of attributes and turn it into a foreground color
 specification.
getForeground(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the foreground color setting from the attribute list.
getForeground(AttributeSet)
- Method in class javax.swing.text.
StyleContext
Takes a set of attributes and turn it into a foreground color
 specification.
getForeground(AttributeSet)
- Method in interface javax.swing.text.
StyledDocument
Takes a set of attributes and turn it into a foreground color
 specification.
getForegroundAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the tab foreground color at
index
.
getForegroundPainter(SynthContext)
- Method in class javax.swing.plaf.nimbus.
NimbusStyle
Gets the appropriate foreground Painter, if there is one, for the state
 specified in the given SynthContext.
getForkJoinTaskTag()
- Method in class java.util.concurrent.
ForkJoinTask
Returns the tag for this task.
getForm()
- Method in interface org.w3c.dom.html.
HTMLButtonElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLFieldSetElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLIsIndexElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLLabelElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLLegendElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLOptionElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
Returns the
FORM
element containing this control.
getForm()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Returns the
FORM
element containing this control.
getFormat()
- Method in interface com.sun.source.doctree.
ValueTree
Returns the format string, or
null
if none was provided.
getFormat()
- Method in interface java.security.
Certificate
Deprecated.
Returns the name of the coding format.
getFormat()
- Method in interface java.security.
Key
Returns the name of the primary encoding format of this key,
 or
null
if this key does not support encoding.
getFormat()
- Method in class java.security.spec.
EncodedKeySpec
Returns the name of the encoding format associated with this
 key specification.
getFormat()
- Method in class java.security.spec.
PKCS8EncodedKeySpec
Returns the name of the encoding format associated with this
 key specification.
getFormat()
- Method in class java.security.spec.
X509EncodedKeySpec
Returns the name of the encoding format associated with this
 key specification.
getFormat()
- Method in class javax.crypto.spec.
SecretKeySpec
Returns the name of the encoding format for this secret key.
getFormat()
- Method in class javax.security.auth.kerberos.
EncryptionKey
Returns the name of the encoding format for this key.
getFormat()
- Method in class javax.security.auth.kerberos.
KerberosKey
Returns the name of the encoding format for this secret key.
getFormat()
- Method in class javax.sound.sampled.
AudioFileFormat
Obtains the format of the audio data contained in the audio file.
getFormat()
- Method in class javax.sound.sampled.
AudioInputStream
Obtains the audio format of the sound data in this audio input stream.
getFormat()
- Method in interface javax.sound.sampled.
DataLine
Obtains the current format (encoding, sample rate, number of channels,
 etc.) of the data line's audio data.
getFormat()
- Method in class javax.swing.
JSpinner.DateEditor
Returns the
java.text.SimpleDateFormat
object the
JFormattedTextField
uses to parse and format
 numbers.
getFormat()
- Method in class javax.swing.
JSpinner.NumberEditor
Returns the
java.text.DecimalFormat
object the
JFormattedTextField
uses to parse and format
 numbers.
getFormat()
- Method in class javax.swing.text.
InternationalFormatter
Returns the format that dictates the legal values that can be edited
 and displayed.
getFormatId()
- Method in interface javax.transaction.xa.
Xid
Obtain the format identifier part of the XID.
getFormatName()
- Method in class javax.imageio.
ImageReader
Returns a
String
identifying the format of the
 input source.
getFormatNames()
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns an array of
String
s containing
 human-readable names for the formats that are generally usable
 by the
ImageReader
or
ImageWriter
implementation associated with this service provider.
getFormats()
- Method in class java.text.
ChoiceFormat
Get the formats passed in the constructor.
getFormats()
- Method in class java.text.
MessageFormat
Gets the formats used for the format elements in the
 previously set pattern string.
getFormats()
- Method in class javax.sound.sampled.
DataLine.Info
Obtains a set of audio formats supported by the data line.
getFormats(String)
- Method in class java.util.
ResourceBundle.Control
Returns a
List
of
String
s containing
 formats to be used to load resource bundles for the given
baseName
.
getFormatsByArgumentIndex()
- Method in class java.text.
MessageFormat
Gets the formats used for the values passed into
format
methods or returned from
parse
methods.
getFormatSpecifier()
- Method in exception class java.util.
MissingFormatArgumentException
Returns the unmatched format specifier.
getFormatSpecifier()
- Method in exception class java.util.
MissingFormatWidthException
Returns the format specifier which does not have a width.
getFormattedTextField()
- Method in class javax.swing.
JFormattedTextField.AbstractFormatter
Returns the current
JFormattedTextField
the
AbstractFormatter
is installed on.
getFormatter()
- Method in class java.util.logging.
Handler
Return the
Formatter
for this
Handler
.
getFormatter()
- Method in class javax.swing.
JFormattedTextField
Returns the
AbstractFormatter
that is used to format and
 parse the current value.
getFormatter(JFormattedTextField)
- Method in class javax.swing.
JFormattedTextField.AbstractFormatterFactory
Returns an
AbstractFormatter
that can handle formatting
 of the passed in
JFormattedTextField
.
getFormatter(JFormattedTextField)
- Method in class javax.swing.text.
DefaultFormatterFactory
Returns either the default formatter, display formatter, editor
 formatter or null formatter based on the state of the
 JFormattedTextField.
getFormatterFactory()
- Method in class javax.swing.
JFormattedTextField
Returns the current
AbstractFormatterFactory
.
getForms()
- Method in interface org.w3c.dom.html.
HTMLDocument
A collection of all the forms of a document.
getFractionalMetricsHint()
- Method in class java.awt.font.
FontRenderContext
Return the text fractional metrics rendering mode hint used in this
FontRenderContext
.
getFractionalSecond()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns fractional seconds.
getFractions()
- Method in class java.awt.
MultipleGradientPaint
Returns a copy of the array of floats used by this gradient
 to calculate color distribution.
getFragment()
- Method in class java.net.
URI
Returns the decoded fragment component of this URI.
getFragments()
- Method in interface com.sun.source.tree.
StringTemplateTree
PREVIEW
Returns string fragments.
getFrame()
- Method in class java.awt.geom.
RectangularShape
Returns the framing
Rectangle2D
that defines the overall shape of this object.
getFrame()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Specifies which external table borders to render.
getFrameBorder()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
Request frame borders.
getFrameBorder()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
Request frame borders.
getFrameCount()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Returns the number of frames for the complete animation loop
 used by an indeterminate JProgessBar.
getFrameForComponent(Component)
- Static method in class javax.swing.
JOptionPane
Returns the specified component's
Frame
.
getFrameIcon()
- Method in class javax.swing.
JInternalFrame
Returns the image displayed in the title bar of this internal frame (usually
 in the top-left corner).
getFrameLength()
- Method in class javax.sound.sampled.
AudioFileFormat
Obtains the length of the audio data contained in the file, expressed in
 sample frames.
getFrameLength()
- Method in class javax.sound.sampled.
AudioInputStream
Obtains the length of the stream, expressed in sample frames rather than
 bytes.
getFrameLength()
- Method in interface javax.sound.sampled.
Clip
Obtains the media length in sample frames.
getFramePosition()
- Method in interface javax.sound.sampled.
DataLine
Obtains the current position in the audio data, in sample frames.
getFramePosition()
- Method in class javax.sound.sampled.
LineEvent
Obtains the position in the line's audio data when the event occurred,
 expressed in sample frames.
getFrameRate()
- Method in class javax.sound.sampled.
AudioFormat
Obtains the frame rate in frames per second.
getFrames()
- Static method in class java.awt.
Frame
Returns an array of all
Frame
s created by this application.
getFrames()
- Method in class jdk.jfr.consumer.
RecordedStackTrace
Returns the frames in the stack trace.
getFrameSize()
- Method in class javax.sound.sampled.
AudioFormat
Obtains the frame size in bytes.
getFreeMemorySize()
- Method in interface com.sun.management.
OperatingSystemMXBean
Returns the amount of free memory in bytes.
getFreePhysicalMemorySize()
- Method in interface com.sun.management.
OperatingSystemMXBean
Deprecated.
Use
OperatingSystemMXBean.getFreeMemorySize()
instead of
 this historically named method.
getFreeSpace()
- Method in class java.io.
File
Returns the number of unallocated bytes in the partition
named
by this abstract path name.
getFreeSwapSpaceSize()
- Method in interface com.sun.management.
OperatingSystemMXBean
Returns the amount of free swap space in bytes.
getFrom(TemporalAccessor)
- Method in enum class java.time.temporal.
ChronoField
getFrom(TemporalAccessor)
- Method in interface java.time.temporal.
TemporalField
Gets the value of this field from the specified temporal object.
getFromIndex()
- Method in class javax.swing.event.
TableColumnModelEvent
Returns the fromIndex.
getFromPage()
- Method in class java.awt.
JobAttributes
Returns, for jobs using these attributes, the first page to be
 printed, if a range of pages is to be printed.
getFrontBufferCapabilities()
- Method in class java.awt.
BufferCapabilities
Returns the image capabilities of the front (displayed) buffer.
getFullBody()
- Method in interface com.sun.source.doctree.
DocCommentTree
Returns the entire body of a documentation comment, appearing
 before any block tags, including the first sentence.
getFullScreenWindow()
- Method in class java.awt.
GraphicsDevice
Returns the
Window
object representing the
 full-screen window if the device is in full-screen mode.
getFunctionalInterfaceClass()
- Method in class java.lang.invoke.
SerializedLambda
Get the name of the invoked type to which this
 lambda has been converted
getFunctionalInterfaceMethodName()
- Method in class java.lang.invoke.
SerializedLambda
Get the name of the primary method for the functional interface
 to which this lambda has been converted.
getFunctionalInterfaceMethodSignature()
- Method in class java.lang.invoke.
SerializedLambda
Get the signature of the primary method for the functional
 interface to which this lambda has been converted.
getFunctionColumns(String, String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the given catalog's system or user
 function parameters and return type.
getFunctions(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the  system and user functions available
 in the given catalog.
getG()
- Method in interface java.security.interfaces.
DSAParams
Returns the base,
g
.
getG()
- Method in class java.security.spec.
DSAParameterSpec
Returns the base
g
.
getG()
- Method in class java.security.spec.
DSAPrivateKeySpec
Returns the base
g
.
getG()
- Method in class java.security.spec.
DSAPublicKeySpec
Returns the base
g
.
getG()
- Method in class javax.crypto.spec.
DHParameterSpec
Returns the base generator
g
.
getG()
- Method in class javax.crypto.spec.
DHPrivateKeySpec
Returns the base generator
g
.
getG()
- Method in class javax.crypto.spec.
DHPublicKeySpec
Returns the base generator
g
.
getGamma()
- Method in class java.awt.color.
ICC_ProfileGray
Returns a gamma value representing the tone reproduction curve (TRC).
getGamma(int)
- Method in class java.awt.color.
ICC_ProfileRGB
Returns a gamma value representing the tone reproduction curve (TRC) for
 a particular component.
getGapEnd()
- Method in class javax.swing.text.
GapContent
Access to the end of the gap.
getGapStart()
- Method in class javax.swing.text.
GapContent
Access to the start of the gap.
getGarbageCollectorMXBeans()
- Static method in class java.lang.management.
ManagementFactory
Returns a list of
GarbageCollectorMXBean
objects
 in the Java virtual machine.
getGcAction()
- Method in class com.sun.management.
GarbageCollectionNotificationInfo
Returns the action performed by the garbage collector
getGcCause()
- Method in class com.sun.management.
GarbageCollectionNotificationInfo
Returns the cause of the garbage collection
getGcInfo()
- Method in class com.sun.management.
GarbageCollectionNotificationInfo
Returns the GC information related to the last garbage collection
getGcName()
- Method in class com.sun.management.
GarbageCollectionNotificationInfo
Returns the name of the garbage collector used to perform the collection
getGeneratedKeys()
- Method in interface java.sql.
Statement
Retrieves any auto-generated keys created as a result of executing this
Statement
object.
getGenerator()
- Method in class java.security.spec.
ECParameterSpec
Returns the generator which is also known as the base point.
getGenericComponentType()
- Method in interface java.lang.reflect.
GenericArrayType
Returns a
Type
object representing the component type
 of this array.
getGenericDeclaration()
- Method in interface java.lang.reflect.
TypeVariable
Returns the
GenericDeclaration
object representing the
 generic declaration declared for this type variable.
getGenericDisplayName(String, int, Locale)
- Method in class java.util.spi.
TimeZoneNameProvider
Returns a generic name for the given time zone
ID
that's suitable
 for presentation to the user in the specified
locale
.
getGenericElement()
- Method in interface javax.lang.model.element.
TypeParameterElement
Returns the generic class, interface, method, or constructor that is
 parameterized by this type parameter.
getGenericExceptionTypes()
- Method in class java.lang.reflect.
Constructor
Returns an array of
Type
objects that represent the
 exceptions declared to be thrown by this executable object.
getGenericExceptionTypes()
- Method in class java.lang.reflect.
Executable
Returns an array of
Type
objects that represent the
 exceptions declared to be thrown by this executable object.
getGenericExceptionTypes()
- Method in class java.lang.reflect.
Method
Returns an array of
Type
objects that represent the
 exceptions declared to be thrown by this executable object.
getGenericInterfaces()
- Method in class java.lang.
Class
Returns the
Type
s representing the interfaces
 directly implemented by the class or interface represented by
 this
Class
object.
getGenericParameterTypes()
- Method in class java.lang.reflect.
Constructor
Returns an array of
Type
objects that represent the
 formal parameter types, in declaration order, of the executable
 represented by this object.
getGenericParameterTypes()
- Method in class java.lang.reflect.
Executable
Returns an array of
Type
objects that represent the
 formal parameter types, in declaration order, of the executable
 represented by this object.
getGenericParameterTypes()
- Method in class java.lang.reflect.
Method
Returns an array of
Type
objects that represent the
 formal parameter types, in declaration order, of the executable
 represented by this object.
getGenericReturnType()
- Method in class java.lang.reflect.
Method
Returns a
Type
object that represents the formal return
 type of the method represented by this
Method
object.
getGenericSignature()
- Method in class java.lang.reflect.
RecordComponent
Returns a
String
that describes the generic type signature for
 this record component.
getGenericSuperclass()
- Method in class java.lang.
Class
Returns the
Type
representing the direct superclass of
 the entity (class, interface, primitive type or void) represented by
 this
Class
object.
getGenericType()
- Method in class java.lang.reflect.
Field
Returns a
Type
object that represents the declared type for
 the field represented by this
Field
object.
getGenericType()
- Method in class java.lang.reflect.
RecordComponent
Returns a
Type
object that represents the declared type for
 this record component.
getGestureModifiers()
- Method in class java.awt.dnd.
DragSourceDragEvent
This method returns an
int
representing
 the current state of the input device modifiers
 associated with the user's gesture.
getGestureModifiersEx()
- Method in class java.awt.dnd.
DragSourceDragEvent
This method returns an
int
representing
 the current state of the input device extended modifiers
 associated with the user's gesture.
getGetListenerMethod()
- Method in class java.beans.
EventSetDescriptor
Gets the method used to access the registered event listeners.
getGid()
- Method in class com.sun.security.auth.module.
UnixSystem
Get the GID for the current Unix user.
getGlassPane()
- Method in class javax.swing.
JApplet
Deprecated.
Returns the glassPane object for this applet.
getGlassPane()
- Method in class javax.swing.
JDialog
Returns the
glassPane
object for this dialog.
getGlassPane()
- Method in class javax.swing.
JFrame
Returns the
glassPane
object for this frame.
getGlassPane()
- Method in class javax.swing.
JInternalFrame
Returns the glass pane for this internal frame.
getGlassPane()
- Method in class javax.swing.
JLayer
Returns the
JLayer
's glassPane component or
null
.
getGlassPane()
- Method in class javax.swing.
JRootPane
Returns the current glass pane for this
JRootPane
.
getGlassPane()
- Method in class javax.swing.
JWindow
Returns the
glassPane Component
for this window.
getGlassPane()
- Method in interface javax.swing.
RootPaneContainer
Returns the glassPane.
getGlobal()
- Static method in class java.util.logging.
Logger
Return global logger object with the name Logger.GLOBAL_LOGGER_NAME.
getGlobalActiveWindow()
- Method in class java.awt.
KeyboardFocusManager
Returns the active Window, even if the calling thread is in a different
 context than the active Window.
getGlobalCurrentFocusCycleRoot()
- Method in class java.awt.
KeyboardFocusManager
Returns the current focus cycle root, even if the calling thread is in a
 different context than the current focus cycle root.
getGlobalFocusedWindow()
- Method in class java.awt.
KeyboardFocusManager
Returns the focused Window, even if the calling thread is in a different
 context than the focused Window.
getGlobalFocusOwner()
- Method in class java.awt.
KeyboardFocusManager
Returns the focus owner, even if the calling thread is in a different
 context than the focus owner.
getGlobalPermanentFocusOwner()
- Method in class java.awt.
KeyboardFocusManager
Returns the permanent focus owner, even if the calling thread is in a
 different context than the permanent focus owner.
getGlobalTransactionId()
- Method in interface javax.transaction.xa.
Xid
Obtain the global transaction identifier part of XID as an array
 of bytes.
getGlyphCharIndex(int)
- Method in class java.awt.font.
GlyphVector
Returns the character index of the specified glyph.
getGlyphCharIndices(int, int, int[])
- Method in class java.awt.font.
GlyphVector
Returns the character indices of the specified glyphs.
getGlyphCode(int)
- Method in class java.awt.font.
GlyphVector
Returns the glyphcode of the specified glyph.
getGlyphCodes(int, int, int[])
- Method in class java.awt.font.
GlyphVector
Returns an array of glyphcodes for the specified glyphs.
getGlyphJustificationInfo(int)
- Method in class java.awt.font.
GlyphVector
Returns the justification information for the glyph at
 the specified index into this
GlyphVector
.
getGlyphLogicalBounds(int)
- Method in class java.awt.font.
GlyphVector
Returns the logical bounds of the specified glyph within this
GlyphVector
.
getGlyphMetrics(int)
- Method in class java.awt.font.
GlyphVector
Returns the metrics of the glyph at the specified index into
 this
GlyphVector
.
getGlyphOutline(int)
- Method in class java.awt.font.
GlyphVector
Returns a
Shape
whose interior corresponds to the
 visual representation of the specified glyph
 within this
GlyphVector
.
getGlyphOutline(int, float, float)
- Method in class java.awt.font.
GlyphVector
Returns a
Shape
whose interior corresponds to the
 visual representation of the specified glyph
 within this
GlyphVector
, offset to x, y.
getGlyphPainter()
- Method in class javax.swing.text.
GlyphView
Fetch the currently installed glyph painter.
getGlyphPixelBounds(int, FontRenderContext, float, float)
- Method in class java.awt.font.
GlyphVector
Returns the pixel bounds of the glyph at index when this
GlyphVector
is rendered in a
Graphics
with the
 given
FontRenderContext
at the given location.
getGlyphPosition(int)
- Method in class java.awt.font.
GlyphVector
Returns the position of the specified glyph relative to the
 origin of this
GlyphVector
.
getGlyphPositions(int, int, float[])
- Method in class java.awt.font.
GlyphVector
Returns an array of glyph positions for the specified glyphs.
getGlyphTransform(int)
- Method in class java.awt.font.
GlyphVector
Returns the transform of the specified glyph within this
GlyphVector
.
getGlyphVisualBounds(int)
- Method in class java.awt.font.
GlyphVector
Returns the visual bounds of the specified glyph within the
GlyphVector
.
getGoHomeAction()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns a go home action.
getGranularityPeriod()
- Method in class javax.management.monitor.
Monitor
Gets the granularity period (in milliseconds).
getGranularityPeriod()
- Method in interface javax.management.monitor.
MonitorMBean
Gets the granularity period (in milliseconds).
getGraphics()
- Method in class java.awt.
Component
Creates a graphics context for this component.
getGraphics()
- Method in class java.awt.image.
AbstractMultiResolutionImage
As per the contract of the base
Image#getGraphics()
method,
 this implementation will always throw
UnsupportedOperationException
since only off-screen images can return a
Graphics
object.
getGraphics()
- Method in class java.awt.image.
BufferedImage
This method returns a
Graphics2D
, but is here
 for backwards compatibility.
getGraphics()
- Method in class java.awt.
Image
Creates a graphics context for drawing to an off-screen image.
getGraphics()
- Method in class java.awt.image.
VolatileImage
This method returns a
Graphics2D
, but is here
 for backwards compatibility.
getGraphics()
- Method in class java.awt.
PrintJob
Gets a Graphics object that will draw to the next page.
getGraphics()
- Method in class javax.swing.
JApplet
Deprecated.
Creates a graphics context for this component.
getGraphics()
- Method in class javax.swing.
JComponent
Returns this component's graphics context, which lets you draw
 on a component.
getGraphics()
- Method in class javax.swing.
JDialog
Creates a graphics context for this component.
getGraphics()
- Method in class javax.swing.
JFrame
Creates a graphics context for this component.
getGraphics()
- Method in class javax.swing.
JWindow
Creates a graphics context for this component.
getGraphics()
- Method in class javax.swing.text.
View
Fetch a
Graphics
for rendering.
getGraphicsConfiguration()
- Method in class java.awt.
Component
Gets the
GraphicsConfiguration
associated with this
Component
.
getGraphicsUtils(SynthContext)
- Method in class javax.swing.plaf.synth.
SynthStyle
Returns the
SynthGraphicUtils
for the specified context.
getGreatestMinimum(int)
- Method in class java.util.
Calendar
Returns the highest minimum value for the given calendar field
 of this
Calendar
instance.
getGreatestMinimum(int)
- Method in class java.util.
GregorianCalendar
Returns the highest minimum value for the given calendar field
 of this
GregorianCalendar
instance.
getGreen()
- Method in class java.awt.
Color
Returns the green component in the range 0-255 in the default sRGB
 space.
getGreen()
- Method in interface org.w3c.dom.css.
RGBColor
This attribute is used for the green value of the RGB color.
getGreen(int)
- Method in class java.awt.image.
ColorModel
Returns the green color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getGreen(int)
- Method in class java.awt.image.
ComponentColorModel
Returns the green color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getGreen(int)
- Method in class java.awt.image.
DirectColorModel
Returns the green color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getGreen(int)
- Method in class java.awt.image.
IndexColorModel
Returns the green color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getGreen(Object)
- Method in class java.awt.image.
ColorModel
Returns the green color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getGreen(Object)
- Method in class java.awt.image.
ComponentColorModel
Returns the green color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getGreen(Object)
- Method in class java.awt.image.
DirectColorModel
Returns the green color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getGreenMask()
- Method in class java.awt.image.
DirectColorModel
Returns the mask indicating which bits in an
int
pixel
 representation contain the green color component.
getGreens(byte[])
- Method in class java.awt.image.
IndexColorModel
Copies the array of green color components into the specified array.
getGregorianChange()
- Method in class java.util.
GregorianCalendar
Gets the Gregorian Calendar change date.
getGridColor()
- Method in class javax.swing.
JTable
Returns the color used to draw grid lines.
getGridColumn()
- Method in class javax.swing.text.
TableView.TableCell
Deprecated.
Gets the column of the grid location
getGridRow()
- Method in class javax.swing.text.
TableView.TableCell
Deprecated.
Gets the row of the grid location
getGrooveInsets()
- Static method in class javax.swing.plaf.basic.
BasicGraphicsUtils
Returns the amount of space taken up by a border drawn by
drawGroove()
getGroup()
- Method in interface javax.swing.
ButtonModel
Returns the group that the button belongs to.
getGroup()
- Method in class javax.swing.
DefaultButtonModel
Returns the group that the button belongs to.
getGroupIDs()
- Method in class com.sun.security.auth.module.
NTSystem
Get the printable group SIDs for the current NT user.
getGroupingSeparator()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used for grouping separator.
getGroupingSize()
- Method in class java.text.
CompactNumberFormat
Returns the grouping size.
getGroupingSize()
- Method in class java.text.
DecimalFormat
Return the grouping size.
getGroups()
- Method in class com.sun.security.auth.module.
UnixSystem
Get the supplementary groups for the current Unix user.
getGuarantor()
- Method in interface java.security.
Certificate
Deprecated.
Returns the guarantor of the certificate, that is, the principal
 guaranteeing that the public key associated with this certificate
 is that of the principal associated with this certificate.
getGuard()
- Method in interface com.sun.source.tree.
CaseTree
The guard for the case.
getGuard()
- Method in class jdk.dynalink.linker.
GuardedInvocation
Returns the guard method handle.
getGuardedInvocation(LinkRequest)
- Method in interface jdk.dynalink.linker.
LinkerServices
Creates a guarded invocation delegating back to the
DynamicLinker
that exposes this linker services object.
getGuardedInvocation(LinkRequest, LinkerServices)
- Method in class jdk.dynalink.beans.
BeansLinker
getGuardedInvocation(LinkRequest, LinkerServices)
- Method in interface jdk.dynalink.linker.
GuardingDynamicLinker
Creates a guarded invocation appropriate for a particular invocation with
 the specified arguments at a call site.
getGuardedInvocation(LinkRequest, LinkerServices)
- Method in class jdk.dynalink.linker.support.
CompositeGuardingDynamicLinker
Delegates the call to its component linkers.
getGuardedInvocation(LinkRequest, LinkerServices)
- Method in class jdk.dynalink.linker.support.
CompositeTypeBasedGuardingDynamicLinker
getHAdjustable()
- Method in class java.awt.
ScrollPane
Returns the
ScrollPaneAdjustable
object which
 represents the state of the horizontal scrollbar.
getHandler()
- Method in class com.sun.net.httpserver.
HttpContext
Returns the handler for this context.
getHandler()
- Method in class javax.xml.transform.sax.
SAXResult
Get the
ContentHandler
that is the Result.
getHandlers()
- Method in class java.util.logging.
Logger
Get the Handlers associated with this logger.
getHandshakeApplicationProtocol()
- Method in class javax.net.ssl.
SSLEngine
Returns the application protocol value negotiated on a SSL/TLS
 handshake currently in progress.
getHandshakeApplicationProtocol()
- Method in class javax.net.ssl.
SSLSocket
Returns the application protocol value negotiated on a SSL/TLS
 handshake currently in progress.
getHandshakeApplicationProtocolSelector()
- Method in class javax.net.ssl.
SSLEngine
Retrieves the callback function that selects an application protocol
 value during a SSL/TLS/DTLS handshake.
getHandshakeApplicationProtocolSelector()
- Method in class javax.net.ssl.
SSLSocket
Retrieves the callback function that selects an application protocol
 value during a SSL/TLS/DTLS handshake.
getHandshakeSession()
- Method in class javax.net.ssl.
SSLEngine
Returns the
SSLSession
being constructed during a SSL/TLS/DTLS
 handshake.
getHandshakeSession()
- Method in class javax.net.ssl.
SSLSocket
Returns the
SSLSession
being constructed during a SSL/TLS
 handshake.
getHandshakeStatus()
- Method in class javax.net.ssl.
SSLEngine
Returns the current handshake status for this
SSLEngine
.
getHandshakeStatus()
- Method in class javax.net.ssl.
SSLEngineResult
Gets the handshake status of this
SSLEngine
operation.
getHardwareAddress()
- Method in class java.net.
NetworkInterface
Returns the hardware address (usually MAC) of the interface if it
 has one and if it can be accessed given the current privileges.
getHashColor()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the hash color.
getHead(Handler)
- Method in class java.util.logging.
Formatter
Return the header string for a set of formatted records.
getHead(Handler)
- Method in class java.util.logging.
XMLFormatter
Return the header string for a set of XML formatted records.
getHeaderField(int)
- Method in class java.net.
HttpURLConnection
Returns the value for the
n
th
header field.
getHeaderField(int)
- Method in class java.net.
URLConnection
Returns the value for the
n
th
header field.
getHeaderField(String)
- Method in class java.net.
URLConnection
Returns the value of the named header field.
getHeaderFieldDate(String, long)
- Method in class java.net.
URLConnection
Returns the value of the named field parsed as date.
getHeaderFieldInt(String, int)
- Method in class java.net.
URLConnection
Returns the value of the named field parsed as a number.
getHeaderFieldKey(int)
- Method in class java.net.
HttpURLConnection
Returns the key for the
n
th
header field.
getHeaderFieldKey(int)
- Method in class java.net.
URLConnection
Returns the key for the
n
th
header field.
getHeaderFieldLong(String, long)
- Method in class java.net.
URLConnection
Returns the value of the named field parsed as a number.
getHeaderFields()
- Method in class java.net.
URLConnection
Returns an unmodifiable Map of the header fields.
getHeaderRect(int)
- Method in class javax.swing.table.
JTableHeader
Returns the rectangle containing the header tile at
column
.
getHeaderRenderer()
- Method in class javax.swing.table.
TableColumn
Returns the
TableCellRenderer
used to draw the header of the
TableColumn
.
getHeaders()
- Method in class java.net.
CacheResponse
Returns the response headers as a Map.
getHeaders()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
List of
id
attribute values for header cells.
getHeaderValue()
- Method in class javax.swing.table.
TableColumn
Returns the
Object
used as the value for the header
 renderer.
getHeapMemoryUsage()
- Method in interface java.lang.management.
MemoryMXBean
Returns the current memory usage of the heap that
 is used for object allocation.
getHeight()
- Method in class java.awt.
Component
Returns the current height of this component.
getHeight()
- Method in class java.awt.
Dimension
Returns the height of this
Dimension
in double
 precision.
getHeight()
- Method in class java.awt.
DisplayMode
Returns the height of the display, in pixels.
getHeight()
- Method in class java.awt.font.
LineMetrics
Returns the height of the text.
getHeight()
- Method in class java.awt.
FontMetrics
Gets the standard height of a line of text in this font.
getHeight()
- Method in class java.awt.geom.
Arc2D.Double
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.geom.
Arc2D.Float
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.geom.
Dimension2D
Returns the height of this
Dimension
in double
 precision.
getHeight()
- Method in class java.awt.geom.
Ellipse2D.Double
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.geom.
Ellipse2D.Float
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.geom.
Rectangle2D.Double
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.geom.
Rectangle2D.Float
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.geom.
RectangularShape
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.geom.
RoundRectangle2D.Double
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.geom.
RoundRectangle2D.Float
Returns the height of the framing rectangle
 in
double
precision.
getHeight()
- Method in class java.awt.image.
BufferedImage
Returns the height of the
BufferedImage
.
getHeight()
- Method in class java.awt.image.
Kernel
Returns the height of this
Kernel
.
getHeight()
- Method in class java.awt.image.
PixelGrabber
Get the height of the pixel buffer (after adjusting for image height).
getHeight()
- Method in class java.awt.image.
Raster
Returns the height in pixels of the Raster.
getHeight()
- Method in interface java.awt.image.renderable.
RenderableImage
Gets the height in user coordinate space.
getHeight()
- Method in class java.awt.image.renderable.
RenderableImageOp
Gets the height in user coordinate space.
getHeight()
- Method in interface java.awt.image.
RenderedImage
Returns the height of the RenderedImage.
getHeight()
- Method in class java.awt.image.
SampleModel
Returns the height in pixels.
getHeight()
- Method in class java.awt.image.
VolatileImage
Returns the height of the
VolatileImage
.
getHeight()
- Method in class java.awt.print.
PageFormat
Returns the height, in 1/72nds of an inch, of the page.
getHeight()
- Method in class java.awt.print.
Paper
Returns the height of the page in 1/72nds of an inch.
getHeight()
- Method in class java.awt.
Rectangle
Returns the height of the bounding
Rectangle
in
double
precision.
getHeight()
- Method in class javax.swing.
JComponent
Returns the current height of this component.
getHeight()
- Method in class javax.swing.
SpringLayout.Constraints
Returns the value of the
height
property.
getHeight()
- Method in class javax.swing.text.
BoxView
Returns the current height of the box.
getHeight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the height property definition in CSS2.
getHeight()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Override height.
getHeight()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
Frame height.
getHeight()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Override height.
getHeight()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Override height.
getHeight()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Cell height.
getHeight(int)
- Method in class javax.imageio.
ImageReader
Returns the height in pixels of the given image within the
 input source.
getHeight(int)
- Method in class javax.print.attribute.standard.
MediaPrintableArea
Get the
height
of the printable area in the specified units.
getHeight(ImageObserver)
- Method in class java.awt.image.
AbstractMultiResolutionImage
This method simply delegates to the same method on the base image and
 it is equivalent to:
getBaseImage().getHeight(observer)
.
getHeight(ImageObserver)
- Method in class java.awt.image.
BufferedImage
Returns the height of the
BufferedImage
.
getHeight(ImageObserver)
- Method in class java.awt.
Image
Determines the height of the image.
getHeight(GlyphView)
- Method in class javax.swing.text.
GlyphView.GlyphPainter
Returns of the height.
getHeightOfHighValueLabel()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the height of the highest value label.
getHeightOfLowValueLabel()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the height of the lowest value label.
getHeightOfTallestLabel()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the height of the tallest label.
getHelpMenu()
- Method in class java.awt.
MenuBar
Gets the help menu on the menu bar.
getHelpMenu()
- Method in class javax.swing.
JMenuBar
Gets the help menu for the menu bar.
getHere()
- Method in interface javax.xml.crypto.dom.
DOMURIReference
Returns the here node.
getHgap()
- Method in class java.awt.
BorderLayout
Returns the horizontal gap between components.
getHgap()
- Method in class java.awt.
CardLayout
Gets the horizontal gap between components.
getHgap()
- Method in class java.awt.
FlowLayout
Gets the horizontal gap between components
 and between the components and the borders
 of the
Container
getHgap()
- Method in class java.awt.
GridLayout
Gets the horizontal gap between components.
getHideActionText()
- Method in class javax.swing.
AbstractButton
Returns the value of the
hideActionText
property, which
 determines whether the button displays text from the
Action
.
getHierarchyBoundsListeners()
- Method in class java.awt.
Component
Returns an array of all the hierarchy bounds listeners
 registered on this component.
getHierarchyListeners()
- Method in class java.awt.
Component
Returns an array of all the hierarchy listeners
 registered on this component.
getHighestValue()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the biggest value that has an entry in the label table.
getHighestValueLabel()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the label that corresponds to the lowest slider value in the
 label table.
getHighlightColor()
- Method in class javax.swing.border.
EtchedBorder
Returns the highlight color of the etched border.
getHighlightColor()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the highlight color.
getHighlightColor(Component)
- Method in class javax.swing.border.
EtchedBorder
Returns the highlight color of the etched border
 when rendered on the specified component.
getHighlightedTextColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the highlighted text color of the current theme.
getHighlightedTextColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the highlighted text color.
getHighlighter()
- Method in class javax.swing.text.
JTextComponent
Fetches the object responsible for making highlights.
getHighlightInnerColor()
- Method in class javax.swing.border.
BevelBorder
Returns the inner highlight color of the bevel border.
getHighlightInnerColor(Component)
- Method in class javax.swing.border.
BevelBorder
Returns the inner highlight color of the bevel border
 when rendered on the specified component.
getHighlightOuterColor()
- Method in class javax.swing.border.
BevelBorder
Returns the outer highlight color of the bevel border.
getHighlightOuterColor(Component)
- Method in class javax.swing.border.
BevelBorder
Returns the outer highlight color of the bevel border
 when rendered on the specified component.
getHighlights()
- Method in class javax.swing.text.
DefaultHighlighter
Makes a copy of the highlights.
getHighlights()
- Method in interface javax.swing.text.
Highlighter
Fetches the current list of highlights.
getHighThreshold()
- Method in class javax.management.monitor.
GaugeMonitor
Gets the high threshold value common to all observed MBeans.
getHighThreshold()
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Gets the high threshold value.
getHistoricalBytes()
- Method in class javax.smartcardio.
ATR
Returns a copy of the historical bytes in this ATR.
getHoldability()
- Method in interface java.sql.
Connection
Retrieves the current holdability of
ResultSet
objects
 created using this
Connection
object.
getHoldability()
- Method in interface java.sql.
ResultSet
Retrieves the holdability of this
ResultSet
object
getHoldCount()
- Method in class java.util.concurrent.locks.
ReentrantLock
Queries the number of holds on this lock by the current thread.
getHoldCount()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock.WriteLock
Queries the number of holds on this write lock by the current
 thread.
getHomeDirectory()
- Method in class javax.swing.filechooser.
FileSystemView
Returns the home directory.
getHonorsVisibility()
- Method in class javax.swing.
GroupLayout
Returns whether component visibility is considered when sizing and
 positioning components.
getHorizontalAlignment()
- Method in class javax.swing.
AbstractButton
Returns the horizontal alignment of the icon and text.
getHorizontalAlignment()
- Method in class javax.swing.
JLabel
Returns the alignment of the label's contents along the X axis.
getHorizontalAlignment()
- Method in class javax.swing.
JTextField
Returns the horizontal alignment of the text.
getHorizontalLegBuffer()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
The horizontal element of legs between nodes starts at the
 right of the left-hand side of the child node by default.
getHorizontalScrollBar()
- Method in class javax.swing.
JScrollPane
Returns the horizontal scroll bar that controls the viewport's
 horizontal view position.
getHorizontalScrollBar()
- Method in class javax.swing.
ScrollPaneLayout
Returns the
JScrollBar
object that handles horizontal scrolling.
getHorizontalScrollBarPolicy()
- Method in class javax.swing.
JScrollPane
Returns the horizontal scroll bar policy value.
getHorizontalScrollBarPolicy()
- Method in class javax.swing.
ScrollPaneLayout
Returns the horizontal scrollbar-display policy.
getHorizontalSliderThumbIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns a thumb icon to be used by horizontal slider.
getHorizontalTextPosition()
- Method in class javax.swing.
AbstractButton
Returns the horizontal position of the text relative to the icon.
getHorizontalTextPosition()
- Method in class javax.swing.
JLabel
Returns the horizontal position of the label's text,
 relative to its image.
getHorizontalVisibility()
- Method in class javax.swing.
JTextField
Gets the visibility of the text field.
getHost()
- Method in class java.net.
URI
Returns the host component of this URI.
getHost()
- Method in class java.net.
URL
Gets the host name of this
URL
, if applicable.
getHost()
- Method in class javax.management.remote.
JMXServiceURL
The host part of the Service URL.
getHostAddress()
- Method in class java.net.
Inet4Address
Returns the IP address string in textual presentation form.
getHostAddress()
- Method in class java.net.
Inet6Address
Returns the IP address string in textual presentation.
getHostAddress()
- Method in class java.net.
InetAddress
Returns the IP address string in textual presentation.
getHostAddress(URL)
- Method in class java.net.
URLStreamHandler
Get the IP address of our host.
getHostName()
- Method in class java.net.
InetAddress
Gets the host name for this IP address.
getHostName()
- Method in class java.net.
InetSocketAddress
Gets the
hostname
.
getHostnameVerifier()
- Method in class javax.net.ssl.
HttpsURLConnection
Gets the
HostnameVerifier
in place on this instance.
getHostString()
- Method in class java.net.
InetSocketAddress
Returns the hostname, or the String form of the address if it
 doesn't have a hostname (it was created using a literal).
getHour()
- Method in class java.time.
LocalDateTime
Gets the hour-of-day field.
getHour()
- Method in class java.time.
LocalTime
Gets the hour-of-day field.
getHour()
- Method in class java.time.
OffsetDateTime
Gets the hour-of-day field.
getHour()
- Method in class java.time.
OffsetTime
Gets the hour-of-day field.
getHour()
- Method in class java.time.
ZonedDateTime
Gets the hour-of-day field.
getHour()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the hour of day or
DatatypeConstants.FIELD_UNDEFINED
if this field is not defined.
getHours()
- Method in class java.sql.
Date
Deprecated.
getHours()
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.get(Calendar.HOUR_OF_DAY)
.
getHours()
- Method in class javax.xml.datatype.
Duration
Obtains the value of the HOURS field as an integer value,
 or 0 if not present.
getHref()
- Method in interface org.w3c.dom.css.
CSSImportRule
The location of the style sheet to be imported.
getHref()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
The URI of the linked resource.
getHref()
- Method in interface org.w3c.dom.html.
HTMLAreaElement
The URI of the linked resource.
getHref()
- Method in interface org.w3c.dom.html.
HTMLBaseElement
The base URI.
getHref()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
The URI of the linked resource.
getHref()
- Method in interface org.w3c.dom.stylesheets.
StyleSheet
If the style sheet is a linked style sheet, the value of its attribute
 is its location.
getHreflang()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Language code of the linked resource.
getHreflang()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
Language code of the linked resource.
getHSBColor(float, float, float)
- Static method in class java.awt.
Color
Creates a
Color
object based on the specified values
 for the HSB color model.
getHScrollbarHeight()
- Method in class java.awt.
ScrollPane
Returns the height that would be occupied by a horizontal
 scrollbar, which is independent of whether it is currently
 displayed by the scroll pane or not.
getHspace()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Horizontal space to the left and right of this image, applet, or
 object.
getHspace()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Horizontal space to the left and right of this image.
getHspace()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Horizontal space to the left and right of this image, applet, or
 object.
getHTMLBaseline(View, int, int)
- Static method in class javax.swing.plaf.basic.
BasicHTML
Returns the baseline for the html renderer.
getHTMLDocument(JEditorPane)
- Method in class javax.swing.text.html.
HTMLEditorKit.HTMLTextAction
Returns
HTMLDocument
of the given
JEditorPane
.
getHTMLEditorKit(JEditorPane)
- Method in class javax.swing.text.html.
HTMLEditorKit.HTMLTextAction
Returns
HTMLEditorKit
of the given
JEditorPane
.
getHtmlFor()
- Method in interface org.w3c.dom.html.
HTMLLabelElement
This attribute links this label with another form control by
id
attribute.
getHtmlFor()
- Method in interface org.w3c.dom.html.
HTMLScriptElement
Reserved for future use.
getHTMLTag()
- Method in class javax.swing.text.html.parser.
TagElement
Returns the tag constant corresponding to the name of the
element
getHttpContext()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns the
HttpContext
for this exchange.
getHttpEquiv()
- Method in interface org.w3c.dom.html.
HTMLMetaElement
HTTP response header name.
getHttpsConfigurator()
- Method in class com.sun.net.httpserver.
HttpsParameters
Returns the
HttpsConfigurator
for this
HttpsParameters
.
getHttpsConfigurator()
- Method in class com.sun.net.httpserver.
HttpsServer
Gets this server's
HttpsConfigurator
object, if it has been set.
getHumanPresentableName()
- Method in class java.awt.datatransfer.
DataFlavor
Returns the human presentable name for the data format that this
DataFlavor
represents.
getHyperlinkListeners()
- Method in class javax.swing.
JEditorPane
Returns an array of all the
HyperLinkListener
s added
 to this JEditorPane with addHyperlinkListener().
getICC_Profiles()
- Method in class java.awt.image.
ColorConvertOp
Returns the array of ICC_Profiles used to construct this ColorConvertOp.
getIcon()
- Method in class javax.swing.
AbstractButton
Returns the default icon.
getIcon()
- Method in class javax.swing.
JLabel
Returns the graphic image (glyph, icon) that the label displays.
getIcon()
- Method in class javax.swing.
JOptionPane
Returns the icon this pane displays.
getIcon()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Returns the icon from the
JOptionPane
the receiver is providing
 the look and feel for, or the default icon as returned from
getDefaultIcon
.
getIcon(int)
- Method in interface java.beans.
BeanInfo
Returns an image that can be used to represent the bean in toolboxes or toolbars.
getIcon(int)
- Method in class java.beans.
SimpleBeanInfo
Claim there are no icons available.
getIcon(File)
- Method in class javax.swing.filechooser.
FileView
The icon that represents this file in the
JFileChooser
.
getIcon(File)
- Method in class javax.swing.
JFileChooser
Returns the icon for this file or type of file, depending
 on the system.
getIcon(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is an
Icon
return it,
 otherwise return
null
.
getIcon(Object)
- Static method in class javax.swing.
UIManager
Returns an
Icon
from the defaults.
getIcon(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is an
Icon
return it, otherwise return
null
.
getIcon(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns an
Icon
from the defaults that is appropriate
 for the given locale.
getIcon(AbstractButton)
- Method in class javax.swing.plaf.synth.
SynthButtonUI
Returns the Icon to use for painting the button.
getIcon(SynthContext, Object)
- Method in class javax.swing.plaf.synth.
SynthStyle
Convenience method to get a specific style property whose value is
 an Icon.
getIcon(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the icon setting from the attribute list.
getIconAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the tab icon at
index
.
getIconForTab(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the icon for a tab.
getIconForType(int)
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Returns the icon to use for the passed in type.
getIconHeight()
- Method in interface javax.swing.
Icon
Returns the icon's height.
getIconHeight()
- Method in class javax.swing.
ImageIcon
Gets the height of the icon.
getIconHeight()
- Method in class javax.swing.plaf.
IconUIResource
getIconHeight()
- Method in class javax.swing.plaf.metal.
MetalCheckBoxIcon
getIconHeight()
- Method in class javax.swing.plaf.metal.
MetalComboBoxIcon
Created a stub to satisfy the interface.
getIconHeight()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.FileIcon16
getIconHeight()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.FolderIcon16
getIconHeight()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.PaletteCloseIcon
getIconHeight()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.TreeControlIcon
getIconHeight()
- Method in interface javax.swing.plaf.synth.
SynthIcon
getIconHeight(Icon, SynthContext)
- Static method in class javax.swing.plaf.synth.
SynthGraphicsUtils
Returns the icon's height.
getIconHeight(SynthContext)
- Method in interface javax.swing.plaf.synth.
SynthIcon
Returns the icon's height for the given synth context.
getIconImage()
- Method in class java.awt.
Frame
Returns the image to be displayed as the icon for this frame.
getIconImage()
- Method in class java.awt.
Taskbar
Obtains an image of this application's icon.
getIconImages()
- Method in class java.awt.
Window
Returns the sequence of images to be displayed as the icon for this window.
getIconTextGap()
- Method in class javax.swing.
AbstractButton
Returns the amount of space between the text and the icon
 displayed in this button.
getIconTextGap()
- Method in class javax.swing.
JLabel
Returns the amount of space between the text and the icon
 displayed in this label.
getIconWidth()
- Method in interface javax.swing.
Icon
Returns the icon's width.
getIconWidth()
- Method in class javax.swing.
ImageIcon
Gets the width of the icon.
getIconWidth()
- Method in class javax.swing.plaf.
IconUIResource
getIconWidth()
- Method in class javax.swing.plaf.metal.
MetalCheckBoxIcon
getIconWidth()
- Method in class javax.swing.plaf.metal.
MetalComboBoxIcon
Created a stub to satisfy the interface.
getIconWidth()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.FileIcon16
getIconWidth()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.FolderIcon16
getIconWidth()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.PaletteCloseIcon
getIconWidth()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.TreeControlIcon
getIconWidth()
- Method in interface javax.swing.plaf.synth.
SynthIcon
getIconWidth(Icon, SynthContext)
- Static method in class javax.swing.plaf.synth.
SynthGraphicsUtils
Returns the icon's width.
getIconWidth(SynthContext)
- Method in interface javax.swing.plaf.synth.
SynthIcon
Returns the icon's width for the given synth context.
getId()
- Method in class com.sun.management.
GcInfo
Returns the identifier of this garbage collection which is
 the number of collections that this collector has done.
getId()
- Method in class java.lang.
Thread
Deprecated.
This method is not final and may be overridden to return a
 value that is not the thread ID. Use
Thread.threadId()
instead.
getId()
- Method in interface java.security.cert.
Extension
Gets the extensions's object identifier.
getId()
- Method in interface java.time.chrono.
Chronology
Gets the ID of the chronology.
getId()
- Method in class java.time.chrono.
HijrahChronology
Gets the ID of the chronology.
getId()
- Method in class java.time.chrono.
IsoChronology
Gets the ID of the chronology - 'ISO'.
getId()
- Method in class java.time.chrono.
JapaneseChronology
Gets the ID of the chronology - 'Japanese'.
getId()
- Method in class java.time.chrono.
MinguoChronology
Gets the ID of the chronology - 'Minguo'.
getId()
- Method in class java.time.chrono.
ThaiBuddhistChronology
Gets the ID of the chronology - 'ThaiBuddhist'.
getId()
- Method in class java.time.
ZoneId
Gets the unique time-zone ID.
getId()
- Method in class java.time.
ZoneOffset
Gets the normalized zone offset ID.
getId()
- Method in interface javax.net.ssl.
SSLSession
Returns the identifier assigned to this Session.
getId()
- Method in interface javax.xml.crypto.dsig.keyinfo.
KeyInfo
Return the optional Id attribute of this
KeyInfo
, which
 may be useful for referencing this
KeyInfo
from other
 XML structures.
getId()
- Method in interface javax.xml.crypto.dsig.
Manifest
Returns the Id of this
Manifest
.
getId()
- Method in interface javax.xml.crypto.dsig.
Reference
Returns the optional
Id
attribute of this
Reference
, which permits this reference to be
 referenced from elsewhere.
getId()
- Method in interface javax.xml.crypto.dsig.
SignatureProperties
Returns the Id of this
SignatureProperties
.
getId()
- Method in interface javax.xml.crypto.dsig.
SignatureProperty
Returns the Id of this
SignatureProperty
.
getId()
- Method in interface javax.xml.crypto.dsig.
SignedInfo
Returns the optional
Id
attribute of this
SignedInfo
.
getId()
- Method in interface javax.xml.crypto.dsig.
XMLObject
Returns the Id of this
XMLObject
.
getId()
- Method in interface javax.xml.crypto.dsig.
XMLSignature
Returns the optional Id of this
XMLSignature
.
getId()
- Method in interface javax.xml.crypto.dsig.
XMLSignature.SignatureValue
Returns the optional
Id
attribute of this
SignatureValue
, which permits this element to be
 referenced from elsewhere.
getId()
- Method in class javax.xml.datatype.
DatatypeConstants.Field
Get id of this Field.
getId()
- Method in class jdk.jfr.consumer.
RecordedClass
Returns a unique ID for the class.
getId()
- Method in class jdk.jfr.consumer.
RecordedClassLoader
Returns a unique ID for the class loader.
getId()
- Method in class jdk.jfr.consumer.
RecordedThread
Returns a unique ID for both native threads and Java threads that can't be
 reused within the lifespan of the JVM.
getId()
- Method in class jdk.jfr.
EventType
Returns a unique ID for this event type in the Java Virtual Machine (JVM).
getId()
- Method in class jdk.jfr.
Recording
Returns a unique ID for this recording.
getId()
- Method in class jdk.management.jfr.
EventTypeInfo
Returns the unique ID for the event type associated with this
EventTypeInfo
, not guaranteed to be the same for different Java
 Virtual Machines (JVMs) instances.
getId()
- Method in class jdk.management.jfr.
RecordingInfo
Returns the unique ID for the recording associated with this
RecordingInfo
.
getId()
- Method in interface org.w3c.dom.html.
HTMLElement
The element's identifier.
getID()
- Method in class java.awt.
AWTEvent
Returns the event type.
getID()
- Method in class java.util.
TimeZone
Gets the ID of this time zone.
getID()
- Method in interface javax.naming.directory.
Attribute
Retrieves the id of this attribute.
getID()
- Method in class javax.naming.directory.
BasicAttribute
getID()
- Method in class javax.naming.ldap.
BasicControl
Retrieves the control's object identifier string.
getID()
- Method in interface javax.naming.ldap.
Control
Retrieves the object identifier assigned for the LDAP control.
getID()
- Method in interface javax.naming.ldap.
ExtendedRequest
Retrieves the object identifier of the request.
getID()
- Method in interface javax.naming.ldap.
ExtendedResponse
Retrieves the object identifier of the response.
getID()
- Method in class javax.naming.ldap.
StartTlsRequest
Retrieves the StartTLS request's object identifier string.
getID()
- Method in class javax.naming.ldap.
StartTlsResponse
Retrieves the StartTLS response's object identifier string.
getID()
- Method in class javax.swing.
LookAndFeel
Return a string that identifies this look and feel.
getID()
- Method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns an identifier for this look and feel.
getID()
- Method in class javax.swing.plaf.multi.
MultiLookAndFeel
Returns a string, suitable for use by applications/services,
 that identifies this look and feel.
getID()
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Return a string that identifies this look and feel.
getID()
- Method in class javax.swing.plaf.synth.
ColorType
Returns a unique id, as an integer, for this ColorType.
getID()
- Method in class javax.swing.plaf.synth.
SynthLookAndFeel
Return a string that identifies this look and feel.
getIdentifier()
- Method in interface com.sun.source.tree.
MemberSelectTree
Returns the name of the member to be selected.
getIdentifier()
- Method in interface com.sun.source.tree.
NewClassTree
Returns the name of the class being instantiated.
getIdentifier()
- Method in class javax.swing.
RowFilter.Entry
Returns the identifier (in the model) of the entry.
getIdentifier()
- Method in class javax.swing.table.
TableColumn
Returns the
identifier
object for this column.
getIdentifier()
- Method in interface org.w3c.dom.css.
Counter
This attribute is used for the identifier of the counter.
getIdentifier(int)
- Method in class javax.swing.
DefaultRowSorter.ModelWrapper
Returns the identifier for the specified row.
getIdentifierQuoteString()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the string used to quote SQL identifiers.
getIdentity(String)
- Method in class java.security.
IdentityScope
Deprecated.
Returns the
Identity
in this scope with the specified
 name (if any).
getIdentity(Principal)
- Method in class java.security.
IdentityScope
Deprecated.
Retrieves the
Identity
whose name is the same as that of the
 specified principal.
getIdentity(PublicKey)
- Method in class java.security.
IdentityScope
Deprecated.
Retrieves the
identity
with the specified public key.
getIdentityGuard(Object)
- Static method in class jdk.dynalink.linker.support.
Guards
Creates a guard method that tests its only argument for being referentially identical to another object
getIdentityHashCode()
- Method in class java.lang.management.
LockInfo
Returns the identity hash code of the lock object
 returned from the
System.identityHashCode(java.lang.Object)
method.
getIds()
- Method in interface javax.net.ssl.
SSLSessionContext
Returns an Enumeration of all known session id's grouped under this
SSLSessionContext
.
getIDs()
- Method in interface javax.naming.directory.
Attributes
Retrieves an enumeration of the ids of the attributes in the
 attribute set.
getIDs()
- Method in class javax.naming.directory.
BasicAttributes
getIDstring()
- Method in class java.awt.
GraphicsDevice
Returns the identification string associated with this
GraphicsDevice
.
getIfModifiedSince()
- Method in class java.net.
URLConnection
Returns the value of this object's
ifModifiedSince
field.
getIgnoreRepaint()
- Method in class java.awt.
Component
Returns whether or not paint messages received from the operating system
 should be ignored.
getImage()
- Method in class java.awt.
TexturePaint
Returns the
BufferedImage
texture used to
 fill the shapes.
getImage()
- Method in class java.awt.
TrayIcon
Returns the current image used for this
TrayIcon
.
getImage()
- Method in class javax.swing.
ImageIcon
Returns this icon's
Image
.
getImage()
- Method in class javax.swing.text.html.
ImageView
Returns the image to render.
getImage(String)
- Method in class java.awt.
Toolkit
Returns an image which gets pixel data from the specified file,
 whose format can be either GIF, JPEG or PNG.
getImage(URL)
- Method in class java.applet.
Applet
Deprecated.
Returns an
Image
object that can then be painted on the screen.
getImage(URL)
- Method in interface java.applet.
AppletContext
Deprecated.
Returns an
Image
object that can then be painted on the screen.
getImage(URL)
- Method in class java.awt.
Toolkit
Returns an image which gets pixel data from the specified URL.
getImage(URL, String)
- Method in class java.applet.
Applet
Deprecated.
Returns an
Image
object that can then be painted on the screen.
getImageableHeight()
- Method in class java.awt.print.
PageFormat
Return the height, in 1/72nds of an inch, of the imageable
 area of the page.
getImageableHeight()
- Method in class java.awt.print.
Paper
Returns the height of this
Paper
object's imageable
 area.
getImageableWidth()
- Method in class java.awt.print.
PageFormat
Returns the width, in 1/72nds of an inch, of the imageable
 area of the page.
getImageableWidth()
- Method in class java.awt.print.
Paper
Returns the width of this
Paper
object's imageable
 area.
getImageableX()
- Method in class java.awt.print.
PageFormat
Returns the x coordinate of the upper left point of the
 imageable area of the
Paper
object
 associated with this
PageFormat
.
getImageableX()
- Method in class java.awt.print.
Paper
Returns the x coordinate of the upper-left corner of this
Paper
object's imageable area.
getImageableY()
- Method in class java.awt.print.
PageFormat
Returns the y coordinate of the upper left point of the
 imageable area of the
Paper
object
 associated with this
PageFormat
.
getImageableY()
- Method in class java.awt.print.
Paper
Returns the y coordinate of the upper-left corner of this
Paper
object's imageable area.
getImageCapabilities()
- Method in class java.awt.
GraphicsConfiguration
Returns the image capabilities of this
GraphicsConfiguration
.
getImageLoadStatus()
- Method in class javax.swing.
ImageIcon
Returns the status of the image loading operation.
getImageMetadata(int)
- Method in class javax.imageio.
ImageReader
Returns an
IIOMetadata
object containing metadata
 associated with the given image, or
null
if the
 reader does not support reading metadata, is set to ignore
 metadata, or if no metadata is available.
getImageMetadata(int, String, Set<String>)
- Method in class javax.imageio.
ImageReader
Returns an
IIOMetadata
object representing the
 metadata associated with the given image, or
null
if the reader does not support reading metadata or none
 is available.
getImageMetadataFormat(String)
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns an
IIOMetadataFormat
object describing the
 given image metadata format, or
null
if no
 description is available.
getImageObserver()
- Method in class javax.swing.
ImageIcon
Returns the image observer for the image.
getImageReader(ImageWriter)
- Static method in class javax.imageio.
ImageIO
Returns an
ImageReader
corresponding to the given
ImageWriter
, if there is one, or
null
if the plug-in for this
ImageWriter
does not
 specify a corresponding
ImageReader
, or if the
 given
ImageWriter
is not registered.
getImageReaders(Object)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageReader
s that claim to be able to
 decode the supplied
Object
, typically an
ImageInputStream
.
getImageReadersByFormatName(String)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageReader
s that claim to be able to
 decode the named format.
getImageReadersByMIMEType(String)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageReader
s that claim to be able to
 decode files with the given MIME type.
getImageReadersBySuffix(String)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageReader
s that claim to be able to
 decode files with the given suffix.
getImageReaderSpiNames()
- Method in class javax.imageio.spi.
ImageWriterSpi
Returns an array of
String
s containing all the
 fully qualified names of all the
ImageReaderSpi
classes that can understand the internal metadata
 representation used by the
ImageWriter
associated
 with this service provider, or
null
if there are
 no such
ImageReaders
specified.
getImages()
- Method in interface org.w3c.dom.html.
HTMLDocument
A collection of all the
IMG
elements in a document.
getImageTranscoders(ImageReader, ImageWriter)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageTranscoder
s that claim to be
 able to transcode between the metadata of the given
ImageReader
and
ImageWriter
.
getImageTypes(int)
- Method in class javax.imageio.
ImageReader
Returns an
Iterator
containing possible image
 types to which the given image may be decoded, in the form of
ImageTypeSpecifiers
s.
getImageURL()
- Method in class java.awt.
SplashScreen
Returns the current splash screen image.
getImageURL()
- Method in class javax.swing.text.html.
ImageView
Return a URL for the image source,
 or null if it could not be determined.
getImageWriter(ImageReader)
- Static method in class javax.imageio.
ImageIO
Returns an
ImageWriter
corresponding to the given
ImageReader
, if there is one, or
null
if the plug-in for this
ImageReader
does not
 specify a corresponding
ImageWriter
, or if the
 given
ImageReader
is not registered.
getImageWriters(ImageTypeSpecifier, String)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageWriter
s that claim to be able to
 encode images of the given layout (specified using an
ImageTypeSpecifier
) in the given format.
getImageWritersByFormatName(String)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageWriter
s that claim to be able to
 encode the named format.
getImageWritersByMIMEType(String)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageWriter
s that claim to be able to
 encode files with the given MIME type.
getImageWritersBySuffix(String)
- Static method in class javax.imageio.
ImageIO
Returns an
Iterator
containing all currently
 registered
ImageWriter
s that claim to be able to
 encode files with the given suffix.
getImageWriterSpiNames()
- Method in class javax.imageio.spi.
ImageReaderSpi
Returns an array of
String
s containing the fully
 qualified names of all the
ImageWriterSpi
classes
 that can understand the internal metadata representation used
 by the
ImageReader
associated with this service
 provider, or
null
if there are no such
ImageWriter
s specified.
getImpact()
- Method in class javax.management.
MBeanOperationInfo
Returns the impact of the method, one of
INFO, ACTION, ACTION_INFO, UNKNOWN
.
getImpact()
- Method in interface javax.management.openmbean.
OpenMBeanOperationInfo
Returns an
int
constant qualifying the impact of the
 operation described by this
OpenMBeanOperationInfo
instance.
getImpact(MBeanOperationInfo)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the
impact
flag of the operation that will be used in
 the MBeanOperationInfo returned by this MBean.
getImpersonationToken()
- Method in class com.sun.security.auth.module.
NTSystem
Get an impersonation token for the current NT user.
getImplClass()
- Method in class java.lang.invoke.
SerializedLambda
Get the name of the class containing the implementation
 method.
getImplementation()
- Method in class javax.management.
StandardMBean
Get the implementation of this Standard MBean (or MXBean).
getImplementation()
- Method in interface org.w3c.dom.
Document
The
DOMImplementation
object that handles this document.
getImplementationClass()
- Method in class javax.management.
StandardMBean
Get the class of the implementation of this Standard MBean (or MXBean).
getImplementationName()
- Method in class javax.management.
MBeanServerDelegate
Returns the JMX implementation name (the name of this product).
getImplementationName()
- Method in interface javax.management.
MBeanServerDelegateMBean
Returns the JMX implementation name (the name of this product).
getImplementationNames()
- Method in interface com.sun.source.tree.
ProvidesTree
Returns the names of the implementation types being provided.
getImplementations()
- Method in interface javax.lang.model.element.
ModuleElement.ProvidesDirective
Returns the implementations of the service being provided.
getImplementationTitle()
- Method in class java.lang.
Package
Return the title of this package.
getImplementationVendor()
- Method in class java.lang.
Package
Returns the vendor that implemented this package,
null
is returned if it is not known.
getImplementationVendor()
- Method in class javax.management.
MBeanServerDelegate
Returns the JMX implementation vendor (the vendor of this product).
getImplementationVendor()
- Method in interface javax.management.
MBeanServerDelegateMBean
Returns the JMX implementation vendor (the vendor of this product).
getImplementationVersion()
- Method in class java.lang.
Package
Return the version of this implementation.
getImplementationVersion()
- Method in class javax.management.
MBeanServerDelegate
Returns the JMX implementation version (the version of this product).
getImplementationVersion()
- Method in interface javax.management.
MBeanServerDelegateMBean
Returns the JMX implementation version (the version of this product).
getImplementsClause()
- Method in interface com.sun.source.tree.
ClassTree
Returns the interfaces implemented by this type declaration.
getImplicitDownCycleTraversal()
- Method in class java.awt.
ContainerOrderFocusTraversalPolicy
Returns whether this ContainerOrderFocusTraversalPolicy transfers focus
 down-cycle implicitly.
getImplicitDownCycleTraversal()
- Method in class javax.swing.
SortingFocusTraversalPolicy
Returns whether this SortingFocusTraversalPolicy transfers focus down-
 cycle implicitly.
getImplMethodKind()
- Method in class java.lang.invoke.
SerializedLambda
Get the method handle kind (see
MethodHandleInfo
) of
 the implementation method.
getImplMethodName()
- Method in class java.lang.invoke.
SerializedLambda
Get the name of the implementation method.
getImplMethodSignature()
- Method in class java.lang.invoke.
SerializedLambda
Get the signature of the implementation method.
getImportedKeys(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the primary key columns that are
 referenced by the given table's foreign key columns (the primary keys
 imported by a table).
getImports()
- Method in interface com.sun.source.tree.
CompilationUnitTree
Returns the import declarations appearing in this compilation unit,
 or an empty list if there are no import declarations.
getInactiveControlTextColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the inactive control text color of the current theme.
getInactiveControlTextColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the inactive control text color.
getInactiveControlTextColor()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the inactive control text color.
getInactiveSystemTextColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the inactive system text color of the current theme.
getInactiveSystemTextColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the inactive system text color.
getIncludedElements()
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns the module, package and type elements that should be
included
in the
 documentation.
getIndentLevel()
- Method in class javax.swing.text.
AbstractWriter
Returns the current indentation level.
getIndentSpace()
- Method in class javax.swing.text.
AbstractWriter
Returns the amount of space to indent.
getIndex()
- Method in interface com.sun.source.tree.
ArrayAccessTree
Returns the expression for the index.
getIndex()
- Method in class java.beans.
IndexedPropertyChangeEvent
Gets the index of the property that was changed.
getIndex()
- Method in class java.net.
NetworkInterface
Returns the index of this network interface.
getIndex()
- Method in exception class java.net.
URISyntaxException
Returns an index into the input string of the position at which the
 parse error occurred, or
-1
if this position is not known.
getIndex()
- Method in exception class java.nio.file.
InvalidPathException
Returns an index into the input string of the position at which the
 error occurred, or
-1
if this position is not known.
getIndex()
- Method in exception class java.security.cert.
CertPathValidatorException
Returns the index of the certificate in the certification path
 that caused the exception to be thrown.
getIndex()
- Method in exception class java.sql.
DataTruncation
Retrieves the index of the column or parameter that was truncated.
getIndex()
- Method in interface java.text.
CharacterIterator
Returns the current index.
getIndex()
- Method in class java.text.
ParsePosition
Retrieve the current parse position.
getIndex()
- Method in class java.text.
StringCharacterIterator
Implements CharacterIterator.getIndex() for String.
getIndex()
- Method in exception class java.util.regex.
PatternSyntaxException
Retrieves the error index.
getIndex()
- Method in interface javax.swing.event.
DocumentEvent.ElementChange
Fetches the index within the element represented.
getIndex()
- Method in class javax.swing.
JList.DropLocation
Returns the index where dropped data should be placed in the
 list.
getIndex()
- Method in class javax.swing.text.
AbstractDocument.ElementEdit
Returns the index into the list of elements.
getIndex()
- Method in class javax.swing.text.html.parser.
Element
Get index.
getIndex()
- Method in class javax.swing.text.
JTextComponent.DropLocation
Returns the index where dropped data should be inserted into the
 associated component.
getIndex()
- Method in class javax.swing.text.
Segment
Returns the current index.
getIndex()
- Method in interface org.w3c.dom.html.
HTMLOptionElement
The index of this
OPTION
in its parent
SELECT
, starting from 0.
getIndex(int)
- Method in class javax.swing.
SizeSequence
Returns the index of the entry
 that corresponds to the specified position.
getIndex(String)
- Method in interface org.xml.sax.
Attributes
Look up the index of an attribute by XML qualified (prefixed) name.
getIndex(String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Look up an attribute's index by qualified (prefixed) name.
getIndex(String, String)
- Method in interface org.xml.sax.
Attributes
Look up the index of an attribute by Namespace name.
getIndex(String, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Look up an attribute's index by Namespace name.
getIndex(TreeNode)
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Returns the index of
node
in the receivers children.
getIndex(TreeNode)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the index of the specified child in this node's child array.
getIndex(TreeNode)
- Method in interface javax.swing.tree.
TreeNode
Returns the index of
node
in the receivers children.
getIndex0()
- Method in class javax.swing.event.
ListDataEvent
Returns the lower index of the range.
getIndex1()
- Method in class javax.swing.event.
ListDataEvent
Returns the upper index of the range.
getIndexAtPoint(Point)
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Given a point in local coordinates, return the zero-based index
 of the character under that Point.
getIndexAtPoint(Point)
- Method in interface javax.accessibility.
AccessibleText
Given a point in local coordinates, return the zero-based index of the
 character under that point.
getIndexAtPoint(Point)
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Given a point in local coordinates, return the zero-based index
 of the character under that Point.
getIndexAtPoint(Point)
- Method in class javax.swing.
JLabel.AccessibleJLabel
Given a point in local coordinates, return the zero-based index
 of the character under that Point.
getIndexAtPoint(Point)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Given a point in local coordinates, return the zero-based index
 of the character under that Point.
getIndexAtPoint(Point)
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Given a point in local coordinates, return the zero-based index
 of the character under that Point.
getIndexAtPoint(Point)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Given a point in local coordinates, return the zero-based index
 of the character under that Point.
getIndexedPropertyType()
- Method in class java.beans.
IndexedPropertyDescriptor
Returns the Java type info for the indexed property.
getIndexedReadMethod()
- Method in class java.beans.
IndexedPropertyDescriptor
Gets the method that should be used to read an indexed
 property value.
getIndexedWriteMethod()
- Method in class java.beans.
IndexedPropertyDescriptor
Gets the method that should be used to write an indexed property value.
getIndexInfo(String, String, String, boolean, boolean)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the given table's indices and statistics.
getIndexNames()
- Method in class javax.management.openmbean.
TabularType
Returns, in the same order as was given to this instance's
 constructor, an unmodifiable List of the names of the items the
 values of which are used to uniquely index each row element of
 tabular data values described by this
TabularType
instance.
getIndexOf(Component)
- Method in class javax.swing.
JLayeredPane
Returns the index of the specified Component.
getIndexOf(Object)
- Method in class javax.swing.
DefaultComboBoxModel
Returns the index-position of the specified object in the list.
getIndexOfChild(Object, Object)
- Method in class javax.swing.tree.
DefaultTreeModel
Returns the index of child in parent.
getIndexOfChild(Object, Object)
- Method in interface javax.swing.tree.
TreeModel
Returns the index of child in parent.
getIndexOfSize(float)
- Static method in class javax.swing.text.html.
StyleSheet
Returns the index of HTML/CSS size model.
getInetAddress()
- Method in class java.net.
DatagramSocket
Returns the address to which this socket is connected.
getInetAddress()
- Method in class java.net.
ServerSocket
Returns the local address of this server socket.
getInetAddress()
- Method in class java.net.
Socket
Returns the address to which the socket is connected.
getInetAddress()
- Method in class java.net.
SocketImpl
Returns the value of this socket's
address
field.
getInetAddresses()
- Method in class java.net.
NetworkInterface
Get an Enumeration with all or a subset of the InetAddresses bound to
 this network interface.
getInfinity()
- Method in class java.text.
DecimalFormatSymbols
Gets the string used to represent infinity.
getInfo()
- Method in class java.security.
Identity
Deprecated.
Returns general information previously specified for this
Identity
.
getInfo()
- Method in class java.security.
Provider
Returns a human-readable description of the
Provider
and its
 services.
getInheritsPopupMenu()
- Method in class javax.swing.
JComponent
Returns true if the JPopupMenu should be inherited from the parent.
getInit()
- Method in class java.lang.management.
MemoryUsage
Returns the amount of memory in bytes that the Java virtual machine
 initially requests from the operating system for memory management.
getInitialComponent(Window)
- Method in class java.awt.
FocusTraversalPolicy
Returns the Component that should receive the focus when a Window is
 made visible for the first time.
getInitialComponent(JInternalFrame)
- Method in class javax.swing.
InternalFrameFocusTraversalPolicy
Returns the Component that should receive the focus when a
 JInternalFrame is selected for the first time.
getInitialContext(Hashtable<?, ?>)
- Method in interface javax.naming.spi.
InitialContextFactory
Creates an Initial Context for beginning name resolution.
getInitialContext(Hashtable<?, ?>)
- Static method in class javax.naming.spi.
NamingManager
Creates an initial context using the specified environment
 properties.
getInitialDelay()
- Method in class javax.swing.
Timer
Returns the
Timer
's initial delay.
getInitialDelay()
- Method in class javax.swing.
ToolTipManager
Returns the initial delay value.
getInitializer()
- Method in interface com.sun.source.tree.
ForLoopTree
Returns any initializers of the
for
statement.
getInitializer()
- Method in interface com.sun.source.tree.
VariableTree
Returns the initializer for the variable, or
null
if none.
getInitializers()
- Method in interface com.sun.source.tree.
NewArrayTree
Returns the initializer expressions.
getInitialLocation(Insets)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Returns the left inset, unless the
Insets
are null in which case
 0 is returned.
getInitialPolicies()
- Method in class java.security.cert.
PKIXParameters
Returns an immutable
Set
of initial
 policy identifiers (OID strings), indicating that any one of these
 policies would be acceptable to the certificate user for the purposes of
 certification path processing.
getInitialSelectionValue()
- Method in class javax.swing.
JOptionPane
Returns the input value that is displayed as initially selected to the user.
getInitialValue()
- Method in class javax.swing.
JOptionPane
Returns the initial value.
getInitialValueIndex()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Returns the initial index into the buttons to select.
getInitiatedClasses(ClassLoader)
- Method in interface java.lang.instrument.
Instrumentation
Returns an array of all classes which
loader
can find by name
 via
ClassLoader::loadClass
,
Class::forName
and bytecode linkage.
getInitiatorAddress()
- Method in class org.ietf.jgss.
ChannelBinding
Get the initiator's address for this channel binding.
getInitThreshold()
- Method in class javax.management.monitor.
CounterMonitor
Gets the initial threshold value common to all observed objects.
getInitThreshold()
- Method in interface javax.management.monitor.
CounterMonitorMBean
Gets the initial threshold value common to all observed objects.
getInput()
- Method in exception class java.net.
URISyntaxException
Returns the input string.
getInput()
- Method in exception class java.nio.file.
InvalidPathException
Returns the input string.
getInput()
- Method in class javax.imageio.
ImageReader
Returns the
ImageInputStream
or other
Object
previously set as the input source.
getInput()
- Method in interface org.w3c.dom.ls.
LSLoadEvent
The input source that was parsed.
getInput()
- Method in interface org.w3c.dom.ls.
LSProgressEvent
The input source that is being parsed.
getInputArguments()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the input arguments passed to the Java virtual machine
 which does not include the arguments to the
main
method.
getInputAttributes()
- Method in class javax.swing.
JTextPane
Gets the input attributes for the pane.
getInputAttributes()
- Method in class javax.swing.text.html.
HTMLEditorKit
Gets the input attributes used for the styled
 editing actions.
getInputAttributes()
- Method in class javax.swing.text.
StyledEditorKit
Gets the input attributes for the pane.
getInputClass()
- Method in class javax.imageio.spi.
ImageInputStreamSpi
Returns a
Class
object representing the class or
 interface type that must be implemented by an input source in
 order to be "wrapped" in an
ImageInputStream
via
 the
createInputStreamInstance
method.
getInputContext()
- Method in class java.awt.
Component
Gets the input context used by this component for handling
 the communication with input methods when text is entered
 in this component.
getInputContext()
- Method in class java.awt.
Window
Gets the input context for this window.
getInputEncoding()
- Method in interface org.w3c.dom.
Document
An attribute specifying the encoding used for this document at the time
 of the parsing.
getInputEncoding()
- Method in interface org.w3c.dom.
Entity
An attribute specifying the encoding used for this entity at the time
 of parsing, when it is an external parsed entity.
getInputEvent()
- Method in class javax.swing.event.
HyperlinkEvent
Returns the
InputEvent
that triggered the hyperlink event.
getInputLength()
- Method in exception class java.nio.charset.
MalformedInputException
Returns the length of the input.
getInputLength()
- Method in exception class java.nio.charset.
UnmappableCharacterException
Returns the length of the input.
getInputMap()
- Method in class javax.swing.
JComponent
Returns the
InputMap
that is used when the
 component has focus.
getInputMap(int)
- Method in class javax.swing.
JComponent
Returns the
InputMap
that is used during
condition
.
getInputMethodControlObject()
- Method in class java.awt.im.
InputContext
Returns a control object from the current input method, or null.
getInputMethodDisplayName(Locale, Locale)
- Method in interface java.awt.im.spi.
InputMethodDescriptor
Returns the user-visible name of the corresponding
 input method for the given input locale in the language in which
 the name will be displayed.
getInputMethodIcon(Locale)
- Method in interface java.awt.im.spi.
InputMethodDescriptor
Returns an icon for the corresponding input method.
getInputMethodListeners()
- Method in class java.awt.
Component
Returns an array of all the input method listeners
 registered on this component.
getInputMethodRequests()
- Method in class java.awt.
Component
Gets the input method request handler which supports
 requests from input methods for this component.
getInputMethodRequests()
- Method in class javax.swing.text.
JTextComponent
getInputSource()
- Method in class javax.xml.transform.sax.
SAXSource
Get the SAX InputSource to be used for the Source.
getInputStream()
- Method in class java.lang.
Process
Returns the input stream connected to the normal output of the
 process.
getInputStream()
- Method in class java.net.
Socket
Returns an input stream for this socket.
getInputStream()
- Method in class java.net.
SocketImpl
Returns an input stream for this socket.
getInputStream()
- Method in class java.net.
URLConnection
Returns an input stream that reads from this open connection.
getInputStream()
- Method in interface java.rmi.server.
RemoteCall
Deprecated.
no replacement
getInputStream()
- Method in class javax.xml.transform.stream.
StreamSource
Get the byte stream that was set with setByteStream.
getInputStream(ZipEntry)
- Method in class java.util.jar.
JarFile
Returns an input stream for reading the contents of the specified
 zip file entry.
getInputStream(ZipEntry)
- Method in class java.util.zip.
ZipFile
Returns an input stream for reading the contents of the specified
 zip file entry.
getInputTypes()
- Method in class javax.imageio.spi.
ImageReaderSpi
Returns an array of
Class
objects indicating what
 types of objects may be used as arguments to the reader's
setInput
method.
getInputValue()
- Method in class javax.swing.
JOptionPane
Returns the value the user has input, if
wantsInput
is true.
getInputVerifier()
- Method in class javax.swing.
JComponent
Returns the input verifier for this component.
getINS()
- Method in class javax.smartcardio.
CommandAPDU
Returns the value of the instruction byte INS.
getInsertionIndex()
- Method in class java.awt.font.
TextHitInfo
Returns the insertion index.
getInsertPositionOffset()
- Method in interface java.awt.im.
InputMethodRequests
Gets the offset of the insert position in the committed text contained
 in the text editing component.
getInset(int, View)
- Method in class javax.swing.text.html.
StyleSheet.BoxPainter
Fetches the inset needed on a given side to
 account for the margin, border, and padding.
getInsets()
- Method in class java.awt.
Container
Determines the insets of this container, which indicate the size
 of the container's border.
getInsets()
- Method in class javax.swing.
JComponent
If a border has been set on this component, returns the
 border's insets; otherwise calls
super.getInsets
.
getInsets()
- Method in class javax.swing.
JViewport
Returns the insets (border) dimensions as (0,0,0,0), since borders
 are not supported on a
JViewport
.
getInsets()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Gets the insets from the JComboBox.
getInsets()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
If a border has been set on this component, returns the
 border's insets, else calls super.getInsets.
getInsets(Insets)
- Method in class javax.swing.
JComponent
Returns an
Insets
object containing this component's inset
 values.
getInsets(Insets)
- Method in class javax.swing.
JViewport
Returns an
Insets
object containing this
JViewport
s inset values.
getInsets(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is an
Insets
return it,
 otherwise return
null
.
getInsets(Object)
- Static method in class javax.swing.
UIManager
Returns an
Insets
object from the defaults.
getInsets(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is an
Insets
return it, otherwise return
null
.
getInsets(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns an
Insets
object from the defaults that is
 appropriate for the given locale.
getInsets(JComponent)
- Method in class javax.swing.plaf.basic.
BasicDesktopIconUI
Returns the insets.
getInsets(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the insets.
getInsets(SynthContext, Insets)
- Method in class javax.swing.plaf.nimbus.
NimbusStyle
Returns the Insets that are used to calculate sizing information.
getInsets(SynthContext, Insets)
- Method in class javax.swing.plaf.synth.
SynthStyle
Returns the Insets that are used to calculate sizing information.
getInsetSpan(int)
- Method in class javax.swing.text.
AsyncBoxView
Fetch the span along an axis that is taken up by the insets.
getInsideAllocation(Shape)
- Method in class javax.swing.text.
CompositeView
Translates the immutable allocation given to the view
 to a mutable allocation that represents the interior
 allocation (i.e. the bounds of the given allocation
 with the top, left, bottom, and right insets removed.
getInsideBorder()
- Method in class javax.swing.border.
CompoundBorder
Returns the inside border object.
getInstalledLookAndFeels()
- Static method in class javax.swing.
UIManager
Returns an array of
LookAndFeelInfo
s representing the
LookAndFeel
implementations currently available.
getInstance()
- Static method in class java.awt.im.
InputContext
Returns a new InputContext instance.
getInstance()
- Static method in class java.lang.
StackWalker
Returns a
StackWalker
instance.
getInstance()
- Static method in class java.text.
Collator
Gets the Collator for the current default locale.
getInstance()
- Static method in class java.text.
DateFormat
Get a default date/time formatter that uses the SHORT style for both the
 date and the time.
getInstance()
- Static method in class java.text.
DateFormatSymbols
Gets the
DateFormatSymbols
instance for the default
 locale.
getInstance()
- Static method in class java.text.
DecimalFormatSymbols
Gets the
DecimalFormatSymbols
instance for the default
 locale.
getInstance()
- Static method in class java.text.
NumberFormat
Returns a general-purpose number format for the current default
FORMAT
locale.
getInstance()
- Static method in class java.util.
Calendar
Gets a calendar using the default time zone and locale.
getInstance()
- Static method in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
Returns a shared instance of a
BaselineTIFFTagSet
.
getInstance()
- Static method in class javax.imageio.plugins.tiff.
ExifGPSTagSet
Returns a shared instance of an
ExifGPSTagSet
.
getInstance()
- Static method in class javax.imageio.plugins.tiff.
ExifInteroperabilityTagSet
Returns the shared instance of
ExifInteroperabilityTagSet
.
getInstance()
- Static method in class javax.imageio.plugins.tiff.
ExifParentTIFFTagSet
Returns a shared instance of an
ExifParentTIFFTagSet
.
getInstance()
- Static method in class javax.imageio.plugins.tiff.
ExifTIFFTagSet
Returns a shared instance of an
ExifTIFFTagSet
.
getInstance()
- Static method in class javax.imageio.plugins.tiff.
FaxTIFFTagSet
Returns a shared instance of a
FaxTIFFTagSet
.
getInstance()
- Static method in class javax.imageio.plugins.tiff.
GeoTIFFTagSet
Returns a shared instance of a
GeoTIFFTagSet
.
getInstance()
- Static method in class javax.security.auth.kerberos.
KeyTab
Returns the default
KeyTab
instance that is bound
 to an unknown service principal.
getInstance()
- Static method in class javax.swing.
LayoutStyle
Returns the shared instance of
LayoutStyle
.
getInstance()
- Static method in class javax.xml.crypto.dsig.keyinfo.
KeyInfoFactory
Returns a
KeyInfoFactory
that supports the
 default XML processing mechanism and representation type ("DOM").
getInstance()
- Static method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Returns an
XMLSignatureFactory
that supports the
 default XML processing mechanism and representation type ("DOM").
getInstance()
- Static method in class org.ietf.jgss.
GSSManager
Returns the default GSSManager implementation.
getInstance(byte[])
- Static method in class java.awt.color.
ICC_Profile
Constructs an
ICC_Profile
object corresponding to the data in a
 byte array.
getInstance(byte[])
- Static method in class javax.security.cert.
X509Certificate
Deprecated.
Instantiates an X509Certificate object, and initializes it with
 the specified byte array.
getInstance(int)
- Static method in class java.awt.
AlphaComposite
Creates an
AlphaComposite
object with the specified rule.
getInstance(int)
- Static method in class java.awt.color.
ColorSpace
Returns a
ColorSpace
representing one of the specific predefined
 color spaces.
getInstance(int)
- Static method in class java.awt.color.
ICC_Profile
Constructs an
ICC_Profile
corresponding to one of the specific
 color spaces defined by the
ColorSpace
class (for example
CS_sRGB
).
getInstance(int, float)
- Static method in class java.awt.
AlphaComposite
Creates an
AlphaComposite
object with the specified rule and
 the constant alpha to multiply with the alpha of the source.
getInstance(File)
- Static method in class javax.security.auth.kerberos.
KeyTab
Returns a
KeyTab
instance from a
File
object
 that is bound to an unknown service principal.
getInstance(File, char[])
- Static method in class java.security.
KeyStore
Returns a loaded keystore object of the appropriate keystore type.
getInstance(File, KeyStore.LoadStoreParameter)
- Static method in class java.security.
KeyStore
Returns a loaded keystore object of the appropriate keystore type.
getInstance(InputStream)
- Static method in class java.awt.color.
ICC_Profile
Constructs an
ICC_Profile
corresponding to the data in an
InputStream
.
getInstance(InputStream)
- Static method in class javax.security.cert.
X509Certificate
Deprecated.
Instantiates an X509Certificate object, and initializes it with
 the data read from the input stream
inStream
.
getInstance(StackWalker.Option)
- Static method in class java.lang.
StackWalker
Returns a
StackWalker
instance with the given option specifying
 the stack frame information it can access.
getInstance(String)
- Static method in class java.awt.color.
ICC_Profile
Constructs an
ICC_Profile
corresponding to the data in a file.
getInstance(String)
- Static method in class java.security.
AlgorithmParameterGenerator
Returns an
AlgorithmParameterGenerator
object for generating
 a set of parameters to be used with the specified algorithm.
getInstance(String)
- Static method in class java.security.
AlgorithmParameters
Returns a parameter object for the specified algorithm.
getInstance(String)
- Static method in class java.security.cert.
CertificateFactory
Returns a certificate factory object that implements the
 specified certificate type.
getInstance(String)
- Static method in class java.security.cert.
CertPathBuilder
Returns a
CertPathBuilder
object that implements the
 specified algorithm.
getInstance(String)
- Static method in class java.security.cert.
CertPathValidator
Returns a
CertPathValidator
object that implements the
 specified algorithm.
getInstance(String)
- Static method in class java.security.
KeyFactory
Returns a
KeyFactory
object that converts
 public/private keys of the specified algorithm.
getInstance(String)
- Static method in class java.security.
KeyPairGenerator
Returns a
KeyPairGenerator
object that generates public/private
 key pairs for the specified algorithm.
getInstance(String)
- Static method in class java.security.
KeyStore
Returns a
KeyStore
object of the specified type.
getInstance(String)
- Static method in class java.security.
MessageDigest
Returns a
MessageDigest
object that implements the specified
 digest algorithm.
getInstance(String)
- Static method in class java.security.
SecureRandom
Returns a
SecureRandom
object that implements the specified
 Random Number Generator (RNG) algorithm.
getInstance(String)
- Static method in class java.security.
Signature
Returns a
Signature
object that implements the specified
 signature algorithm.
getInstance(String)
- Static method in class java.util.
Currency
Returns the
Currency
instance for the given currency code.
getInstance(String)
- Static method in class javax.crypto.
Cipher
Returns a
Cipher
object that implements the specified
 transformation.
getInstance(String)
- Static method in class javax.crypto.
ExemptionMechanism
Returns an
ExemptionMechanism
object that implements the
 specified exemption mechanism algorithm.
getInstance(String)
- Static method in class javax.crypto.
KEM
Returns a
KEM
object that implements the specified algorithm.
getInstance(String)
- Static method in class javax.crypto.
KeyAgreement
Returns a
KeyAgreement
object that implements the
 specified key agreement algorithm.
getInstance(String)
- Static method in class javax.crypto.
KeyGenerator
Returns a
KeyGenerator
object that generates secret keys
 for the specified algorithm.
getInstance(String)
- Static method in class javax.crypto.
Mac
Returns a
Mac
object that implements the
 specified MAC algorithm.
getInstance(String)
- Static method in class javax.crypto.
SecretKeyFactory
Returns a
SecretKeyFactory
object that converts
 secret keys of the specified algorithm.
getInstance(String)
- Static method in class javax.management.
ObjectName
Return an instance of ObjectName that can be used anywhere
 an object obtained with
new
 ObjectName(name)
can be used.
getInstance(String)
- Static method in class javax.net.ssl.
KeyManagerFactory
Returns a
KeyManagerFactory
object that acts as a
 factory for key managers.
getInstance(String)
- Static method in class javax.net.ssl.
SSLContext
Returns a
SSLContext
object that implements the
 specified secure socket protocol.
getInstance(String)
- Static method in class javax.net.ssl.
TrustManagerFactory
Returns a
TrustManagerFactory
object that acts as a
 factory for trust managers.
getInstance(String)
- Static method in class javax.sql.rowset.spi.
SyncFactory
Returns the
SyncProvider
instance identified by
providerID
.
getInstance(String)
- Static method in class javax.xml.crypto.dsig.keyinfo.
KeyInfoFactory
Returns a
KeyInfoFactory
that supports the
 specified XML processing mechanism and representation type (ex: "DOM").
getInstance(String)
- Static method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Returns an
XMLSignatureFactory
that supports the
 specified XML processing mechanism and representation type (ex: "DOM").
getInstance(String, Object)
- Static method in class javax.smartcardio.
TerminalFactory
Returns a TerminalFactory of the specified type that is initialized
 with the specified parameters.
getInstance(String, Object, String)
- Static method in class javax.smartcardio.
TerminalFactory
Returns a TerminalFactory of the specified type that is initialized
 with the specified parameters.
getInstance(String, Object, Provider)
- Static method in class javax.smartcardio.
TerminalFactory
Returns a TerminalFactory of the specified type that is initialized
 with the specified parameters.
getInstance(String, String)
- Static method in class java.security.
AlgorithmParameterGenerator
Returns an
AlgorithmParameterGenerator
object for generating
 a set of parameters to be used with the specified algorithm.
getInstance(String, String)
- Static method in class java.security.
AlgorithmParameters
Returns a parameter object for the specified algorithm.
getInstance(String, String)
- Static method in class java.security.cert.
CertificateFactory
Returns a certificate factory object for the specified
 certificate type.
getInstance(String, String)
- Static method in class java.security.cert.
CertPathBuilder
Returns a
CertPathBuilder
object that implements the
 specified algorithm.
getInstance(String, String)
- Static method in class java.security.cert.
CertPathValidator
Returns a
CertPathValidator
object that implements the
 specified algorithm.
getInstance(String, String)
- Static method in class java.security.
KeyFactory
Returns a
KeyFactory
object that converts
 public/private keys of the specified algorithm.
getInstance(String, String)
- Static method in class java.security.
KeyPairGenerator
Returns a
KeyPairGenerator
object that generates public/private
 key pairs for the specified algorithm.
getInstance(String, String)
- Static method in class java.security.
KeyStore
Returns a
KeyStore
object of the specified type.
getInstance(String, String)
- Static method in class java.security.
MessageDigest
Returns a
MessageDigest
object that implements the specified
 digest algorithm.
getInstance(String, String)
- Static method in class java.security.
SecureRandom
Returns a
SecureRandom
object that implements the specified
 Random Number Generator (RNG) algorithm.
getInstance(String, String)
- Static method in class java.security.
Signature
Returns a
Signature
object that implements the specified
 signature algorithm.
getInstance(String, String)
- Static method in class javax.crypto.
Cipher
Returns a
Cipher
object that implements the specified
 transformation.
getInstance(String, String)
- Static method in class javax.crypto.
ExemptionMechanism
Returns an
ExemptionMechanism
object that implements the
 specified exemption mechanism algorithm.
getInstance(String, String)
- Static method in class javax.crypto.
KEM
Returns a
KEM
object that implements the specified algorithm
 from the specified security provider.
getInstance(String, String)
- Static method in class javax.crypto.
KeyAgreement
Returns a
KeyAgreement
object that implements the
 specified key agreement algorithm.
getInstance(String, String)
- Static method in class javax.crypto.
KeyGenerator
Returns a
KeyGenerator
object that generates secret keys
 for the specified algorithm.
getInstance(String, String)
- Static method in class javax.crypto.
Mac
Returns a
Mac
object that implements the
 specified MAC algorithm.
getInstance(String, String)
- Static method in class javax.crypto.
SecretKeyFactory
Returns a
SecretKeyFactory
object that converts
 secret keys of the specified algorithm.
getInstance(String, String)
- Static method in class javax.net.ssl.
KeyManagerFactory
Returns a
KeyManagerFactory
object that acts as a
 factory for key managers.
getInstance(String, String)
- Static method in class javax.net.ssl.
SSLContext
Returns a
SSLContext
object that implements the
 specified secure socket protocol.
getInstance(String, String)
- Static method in class javax.net.ssl.
TrustManagerFactory
Returns a
TrustManagerFactory
object that acts as a
 factory for trust managers.
getInstance(String, String)
- Static method in class javax.xml.crypto.dsig.keyinfo.
KeyInfoFactory
Returns a
KeyInfoFactory
that supports the
 requested XML processing mechanism and representation type (ex: "DOM"),
 as supplied by the specified provider.
getInstance(String, String)
- Static method in class javax.xml.crypto.dsig.
TransformService
Returns a
TransformService
that supports the specified
 algorithm URI (ex:
Transform.XPATH2
) and mechanism type
 (ex: DOM).
getInstance(String, String)
- Static method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Returns an
XMLSignatureFactory
that supports the
 requested XML processing mechanism and representation type (ex: "DOM"),
 as supplied by the specified provider.
getInstance(String, String, String)
- Static method in class javax.management.
ObjectName
Return an instance of ObjectName that can be used anywhere
 an object obtained with
new ObjectName(domain, key, value)
can be used.
getInstance(String, String, String)
- Static method in class javax.xml.crypto.dsig.
TransformService
Returns a
TransformService
that supports the specified
 algorithm URI (ex:
Transform.XPATH2
) and mechanism type
 (ex: DOM) as supplied by the specified provider.
getInstance(String, String, Provider)
- Static method in class javax.xml.crypto.dsig.
TransformService
Returns a
TransformService
that supports the specified
 algorithm URI (ex:
Transform.XPATH2
) and mechanism type
 (ex: DOM) as supplied by the specified provider.
getInstance(String, CertStoreParameters)
- Static method in class java.security.cert.
CertStore
Returns a
CertStore
object that implements the specified
CertStore
type and is initialized with the specified
 parameters.
getInstance(String, CertStoreParameters, String)
- Static method in class java.security.cert.
CertStore
Returns a
CertStore
object that implements the specified
CertStore
type.
getInstance(String, CertStoreParameters, Provider)
- Static method in class java.security.cert.
CertStore
Returns a
CertStore
object that implements the specified
CertStore
type.
getInstance(String, Policy.Parameters)
- Static method in class java.security.
Policy
Deprecated.
Returns a Policy object of the specified type.
getInstance(String, Policy.Parameters, String)
- Static method in class java.security.
Policy
Deprecated.
Returns a
Policy
object of the specified type.
getInstance(String, Policy.Parameters, Provider)
- Static method in class java.security.
Policy
Deprecated.
Returns a
Policy
object of the specified type.
getInstance(String, Provider)
- Static method in class java.security.
AlgorithmParameterGenerator
Returns an
AlgorithmParameterGenerator
object for generating
 a set of parameters to be used with the specified algorithm.
getInstance(String, Provider)
- Static method in class java.security.
AlgorithmParameters
Returns a parameter object for the specified algorithm.
getInstance(String, Provider)
- Static method in class java.security.cert.
CertificateFactory
Returns a certificate factory object for the specified
 certificate type.
getInstance(String, Provider)
- Static method in class java.security.cert.
CertPathBuilder
Returns a
CertPathBuilder
object that implements the
 specified algorithm.
getInstance(String, Provider)
- Static method in class java.security.cert.
CertPathValidator
Returns a
CertPathValidator
object that implements the
 specified algorithm.
getInstance(String, Provider)
- Static method in class java.security.
KeyFactory
Returns a
KeyFactory
object that converts
 public/private keys of the specified algorithm.
getInstance(String, Provider)
- Static method in class java.security.
KeyPairGenerator
Returns a
KeyPairGenerator
object that generates public/private
 key pairs for the specified algorithm.
getInstance(String, Provider)
- Static method in class java.security.
KeyStore
Returns a
KeyStore
object of the specified type.
getInstance(String, Provider)
- Static method in class java.security.
MessageDigest
Returns a
MessageDigest
object that implements the specified
 digest algorithm.
getInstance(String, Provider)
- Static method in class java.security.
SecureRandom
Returns a
SecureRandom
object that implements the specified
 Random Number Generator (RNG) algorithm.
getInstance(String, Provider)
- Static method in class java.security.
Signature
Returns a
Signature
object that implements the specified
 signature algorithm.
getInstance(String, Provider)
- Static method in class javax.crypto.
Cipher
Returns a
Cipher
object that implements the specified
 transformation.
getInstance(String, Provider)
- Static method in class javax.crypto.
ExemptionMechanism
Returns an
ExemptionMechanism
object that implements the
 specified exemption mechanism algorithm.
getInstance(String, Provider)
- Static method in class javax.crypto.
KEM
Returns a
KEM
object that implements the specified algorithm
 from the specified security provider.
getInstance(String, Provider)
- Static method in class javax.crypto.
KeyAgreement
Returns a
KeyAgreement
object that implements the
 specified key agreement algorithm.
getInstance(String, Provider)
- Static method in class javax.crypto.
KeyGenerator
Returns a
KeyGenerator
object that generates secret keys
 for the specified algorithm.
getInstance(String, Provider)
- Static method in class javax.crypto.
Mac
Returns a
Mac
object that implements the
 specified MAC algorithm.
getInstance(String, Provider)
- Static method in class javax.crypto.
SecretKeyFactory
Returns a
SecretKeyFactory
object that converts
 secret keys of the specified algorithm.
getInstance(String, Provider)
- Static method in class javax.net.ssl.
KeyManagerFactory
Returns a
KeyManagerFactory
object that acts as a
 factory for key managers.
getInstance(String, Provider)
- Static method in class javax.net.ssl.
SSLContext
Returns a
SSLContext
object that implements the
 specified secure socket protocol.
getInstance(String, Provider)
- Static method in class javax.net.ssl.
TrustManagerFactory
Returns a
TrustManagerFactory
object that acts as a
 factory for trust managers.
getInstance(String, Provider)
- Static method in class javax.xml.crypto.dsig.keyinfo.
KeyInfoFactory
Returns a
KeyInfoFactory
that supports the
 requested XML processing mechanism and representation type (ex: "DOM"),
 as supplied by the specified provider.
getInstance(String, Provider)
- Static method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Returns an
XMLSignatureFactory
that supports the
 requested XML processing mechanism and representation type (ex: "DOM"),
 as supplied by the specified provider.
getInstance(String, SecureRandomParameters)
- Static method in class java.security.
SecureRandom
Returns a
SecureRandom
object that implements the specified
 Random Number Generator (RNG) algorithm and supports the specified
SecureRandomParameters
request.
getInstance(String, SecureRandomParameters, String)
- Static method in class java.security.
SecureRandom
Returns a
SecureRandom
object that implements the specified
 Random Number Generator (RNG) algorithm and supports the specified
SecureRandomParameters
request.
getInstance(String, SecureRandomParameters, Provider)
- Static method in class java.security.
SecureRandom
Returns a
SecureRandom
object that implements the specified
 Random Number Generator (RNG) algorithm and supports the specified
SecureRandomParameters
request.
getInstance(String, Hashtable<String, String>)
- Static method in class javax.management.
ObjectName
Return an instance of ObjectName that can be used anywhere
 an object obtained with
new ObjectName(domain, table)
can be used.
getInstance(String, Configuration.Parameters)
- Static method in class javax.security.auth.login.
Configuration
Returns a Configuration object of the specified type.
getInstance(String, Configuration.Parameters, String)
- Static method in class javax.security.auth.login.
Configuration
Returns a Configuration object of the specified type.
getInstance(String, Configuration.Parameters, Provider)
- Static method in class javax.security.auth.login.
Configuration
Returns a Configuration object of the specified type.
getInstance(Locale)
- Static method in class java.text.
Collator
Gets the Collator for the desired locale.
getInstance(Locale)
- Static method in class java.text.
DateFormatSymbols
Gets the
DateFormatSymbols
instance for the specified
 locale.
getInstance(Locale)
- Static method in class java.text.
DecimalFormatSymbols
Gets the
DecimalFormatSymbols
instance for the specified
 locale.
getInstance(Locale)
- Static method in class java.text.
NumberFormat
Returns a general-purpose number format for the specified locale.
getInstance(Locale)
- Method in class java.text.spi.
CollatorProvider
Returns a new
Collator
instance for the specified locale.
getInstance(Locale)
- Method in class java.text.spi.
DateFormatSymbolsProvider
Returns a new
DateFormatSymbols
instance for the
 specified locale.
getInstance(Locale)
- Method in class java.text.spi.
DecimalFormatSymbolsProvider
Returns a new
DecimalFormatSymbols
instance for the
 specified locale.
getInstance(Locale)
- Static method in class java.util.
Calendar
Gets a calendar using the default time zone and specified locale.
getInstance(Locale)
- Static method in class java.util.
Currency
Returns the
Currency
instance for the country of the
 given locale.
getInstance(Set<StackWalker.Option>)
- Static method in class java.lang.
StackWalker
Returns a
StackWalker
instance with the given
options
specifying
 the stack frame information it can access.
getInstance(Set<StackWalker.Option>, int)
- Static method in class java.lang.
StackWalker
Returns a
StackWalker
instance with the given
options
specifying
 the stack frame information it can access.
getInstance(TimeZone)
- Static method in class java.util.
Calendar
Gets a calendar using the specified time zone and default locale.
getInstance(TimeZone, Locale)
- Static method in class java.util.
Calendar
Gets a calendar with the specified time zone and locale.
getInstance(ObjectName)
- Static method in class javax.management.
ObjectName
Return an instance of ObjectName that can be used anywhere
 the given object can be used.
getInstance(KerberosPrincipal)
- Static method in class javax.security.auth.kerberos.
KeyTab
Returns the default
KeyTab
instance that is bound
 to the specified service principal.
getInstance(KerberosPrincipal, File)
- Static method in class javax.security.auth.kerberos.
KeyTab
Returns a
KeyTab
instance from a
File
object
 that is bound to the specified service principal.
getInstanceFollowRedirects()
- Method in class java.net.
HttpURLConnection
Returns the value of this
HttpURLConnection
's
instanceFollowRedirects
field.
getInstanceMethodNames(Class<?>)
- Static method in class jdk.dynalink.beans.
BeansLinker
Returns a set of names of all instance methods of a class.
getInstanceOf(Object, Class<?>)
- Static method in class java.beans.
Beans
From a given bean, obtain an object representing a specified
 type view of that source object.
getInstanceOfGuard(Class<?>)
- Static method in class jdk.dynalink.linker.support.
Guards
Creates a guard method that tests its only argument for being an instance of a particular class.
getInstanceStrong()
- Static method in class java.security.
SecureRandom
Returns a
SecureRandom
object that was selected by using
 the algorithms/providers specified in the
securerandom.strongAlgorithms
Security
property.
getInstant()
- Method in class java.time.zone.
ZoneOffsetTransition
Gets the transition instant.
getInstant()
- Method in class java.util.logging.
LogRecord
Gets the instant that the event occurred.
getInstant(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a timestamp field.
getInstantiatedMethodType()
- Method in class java.lang.invoke.
SerializedLambda
Get the signature of the primary functional interface method
 after type variables are substituted with their instantiation
 from the capture site.
getInstrument(Patch)
- Method in interface javax.sound.midi.
Soundbank
Obtains an
Instrument
from the given
Patch
.
getInstruments()
- Method in interface javax.sound.midi.
Soundbank
Obtains a list of instruments contained in this sound bank.
getInt()
- Method in class java.nio.
ByteBuffer
Relative
get
method for reading an int value.
getInt(int)
- Method in class java.nio.
ByteBuffer
Absolute
get
method for reading an int value.
getInt(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
INTEGER
parameter
 as an
int
in the Java programming language.
getInt(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 an
int
in the Java programming language.
getInt(Object)
- Method in class java.lang.reflect.
Field
Gets the value of a static or instance field of type
int
or of another primitive type convertible to
 type
int
via a widening conversion.
getInt(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is an
Integer
return its
 integer value, otherwise return 0.
getInt(Object)
- Static method in class javax.swing.
UIManager
Returns an integer from the defaults.
getInt(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object, as an
int
.
getInt(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is an
Integer
return its integer value, otherwise return 0.
getInt(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns an integer from the defaults that is appropriate
 for the given locale.
getInt(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
INTEGER
parameter as an
int
in the Java programming language.
getInt(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 an
int
in the Java programming language.
getInt(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
int
or of another primitive type
 that is convertible to type
int
by a widening conversion.
getInt(String, int)
- Method in class java.util.prefs.
AbstractPreferences
Implements the
getInt
method as per the specification in
Preferences.getInt(String,int)
.
getInt(String, int)
- Method in class java.util.prefs.
Preferences
Returns the int value represented by the string associated with the
 specified key in this preference node.
getInt(SynthContext, Object, int)
- Method in class javax.swing.plaf.synth.
SynthStyle
Convenience method to get a specific style property whose value is
 a
Number
.
getInteger(String)
- Static method in class java.lang.
Integer
Determines the integer value of the system property with the
 specified name.
getInteger(String, int)
- Static method in class java.lang.
Integer
Determines the integer value of the system property with the
 specified name.
getInteger(String, Integer)
- Static method in class java.lang.
Integer
Returns the integer value of the system property with the
 specified name.
getIntegerAttributeValue(AttributeSet, HTML.Attribute, int)
- Static method in class javax.swing.text.html.
HTML
Fetches an integer attribute value.
getIntegerInstance()
- Static method in class java.text.
NumberFormat
Returns an integer number format for the current default
FORMAT
locale.
getIntegerInstance(Locale)
- Static method in class java.text.
NumberFormat
Returns an integer number format for the specified locale.
getIntegerInstance(Locale)
- Method in class java.text.spi.
NumberFormatProvider
Returns a new
NumberFormat
instance which formats
 integer values for the specified locale.
getIntegState()
- Method in interface org.ietf.jgss.
GSSContext
Determines if data integrity is available
 over the context.
getIntercellSpacing()
- Method in class javax.swing.
JTable
Returns the horizontal and vertical space between cells.
getInterface()
- Method in class java.net.
MulticastSocket
Deprecated.
The network interface may not be uniquely identified by
             the InetAddress returned.
             Use
MulticastSocket.getNetworkInterface()
instead.
getInterface(Class<T>)
- Method in interface javax.script.
Invocable
Returns an implementation of an interface using functions compiled in
 the interpreter.
getInterface(Object, Class<T>)
- Method in interface javax.script.
Invocable
Returns an implementation of an interface using member functions of
 a scripting object compiled in the interpreter.
getInterfaceAddresses()
- Method in class java.net.
NetworkInterface
Get a List of all or a subset of the
InterfaceAddresses
of this network interface.
getInterfaces()
- Method in class java.lang.
Class
Returns the interfaces directly implemented by the class or interface
 represented by this
Class
object.
getInterfaces()
- Method in interface javax.lang.model.element.
TypeElement
Returns the interface types directly implemented by this class
 or extended by this interface.
getInteriorRectangle(Component, int, int, int, int)
- Method in class javax.swing.border.
AbstractBorder
This convenience method calls the static method.
getInteriorRectangle(Component, Border, int, int, int, int)
- Static method in class javax.swing.border.
AbstractBorder
Returns a rectangle using the arguments minus the
 insets of the border.
getInternalFrame()
- Method in class javax.swing.event.
InternalFrameEvent
Returns the originator of the event.
getInternalFrame()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon
Returns the
JInternalFrame
that this
DesktopIcon
is associated with.
getInternalFrameAltMaximizeIcon(int)
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Constructs a new instance of
InternalFrameAltMaximizeIcon
.
getInternalFrameBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JInternalFrame
.
getInternalFrameCloseIcon(int)
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Constructs a new instance of
InternalFrameCloseIcon
.
getInternalFrameDefaultMenuIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
InternalFrameDefaultMenuIcon
.
getInternalFrameListeners()
- Method in class javax.swing.
JInternalFrame
Returns an array of all the
InternalFrameListener
s added
 to this
JInternalFrame
with
addInternalFrameListener
.
getInternalFrameMaximizeIcon(int)
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Constructs a new instance of
InternalFrameMaximizeIcon
.
getInternalFrameMinimizeIcon(int)
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Constructs a new instance of
InternalFrameMinimizeIcon
.
getInternalSubset()
- Method in interface org.w3c.dom.
DocumentType
The internal subset as a string, or
null
if there is none.
getInternationalCurrencySymbol()
- Method in class java.text.
DecimalFormatSymbols
Returns the ISO 4217 currency code of the currency of these
 DecimalFormatSymbols.
getInterpolationType()
- Method in class java.awt.image.
AffineTransformOp
Returns the interpolation type used by this op.
getIntParameter(int)
- Method in class java.awt.image.renderable.
ParameterBlock
A convenience method to return a parameter as an int.
getInvalidCharacters()
- Method in class javax.swing.text.
MaskFormatter
Returns the characters that are not valid for input.
getInvalidIteratorState()
- Method in interface org.w3c.dom.xpath.
XPathResult
Signifies that the iterator has become invalid.
getInvalidityDate()
- Method in exception class java.security.cert.
CertificateRevokedException
Returns the invalidity date, as specified in the Invalidity Date
 extension of this
CertificateRevokedException
.
getInverted()
- Method in class javax.swing.
JSlider
Returns true if the value-range shown for the slider is reversed,
getInvocation()
- Method in class jdk.dynalink.linker.
GuardedInvocation
Returns the invocation method handle.
getInvocationHandler(Object)
- Static method in class java.lang.reflect.
Proxy
Returns the invocation handler for the specified proxy instance.
getInvoker()
- Method in class javax.swing.
JPopupMenu
Returns the component which is the 'invoker' of this
 popup menu.
getInvokesStopCellEditing()
- Method in class javax.swing.
JTree
Returns the indicator that tells what happens when editing is
 interrupted.
getIOException()
- Method in exception class java.awt.print.
PrinterIOException
Returns the
IOException
that terminated
 the print job.
getIsMap()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Use server-side image map.
getISO3Country()
- Method in class java.util.
Locale
Returns a three-letter abbreviation of this locale's country.
getISO3Language()
- Method in class java.util.
Locale
Returns a three-letter abbreviation of this locale's language.
getISOCountries()
- Static method in class java.util.
Locale
Returns a list of all 2-letter country codes defined in ISO 3166.
getISOCountries(Locale.IsoCountryCode)
- Static method in class java.util.
Locale
Returns a
Set
of ISO3166 country codes for the specified type.
getISOLanguages()
- Static method in class java.util.
Locale
Returns a list of all 2-letter language codes defined in ISO 639.
getIssuer()
- Method in class java.security.cert.
X509CertSelector
Returns the issuer criterion as an
X500Principal
.
getIssuerAlternativeNames()
- Method in class java.security.cert.
X509Certificate
Gets an immutable collection of issuer alternative names from the
IssuerAltName
extension, (OID = 2.5.29.18).
getIssuerAsBytes()
- Method in class java.security.cert.
X509CertSelector
Returns the issuer criterion as a byte array.
getIssuerAsString()
- Method in class java.security.cert.
X509CertSelector
Deprecated.
Use
X509CertSelector.getIssuer()
or
X509CertSelector.getIssuerAsBytes()
instead. This method should not be relied on as it can fail to match
 some certificates because of a loss of encoding information in the
 RFC 2253 String form of some distinguished names.
getIssuerDN()
- Method in class java.security.cert.
X509Certificate
Deprecated.
Use
X509Certificate.getIssuerX500Principal()
instead. This method
 returns the
issuer
as an implementation specific
Principal
object, which should not be relied upon by portable
 code.
getIssuerDN()
- Method in class java.security.cert.
X509CRL
Deprecated.
Use
X509CRL.getIssuerX500Principal()
instead. This method
 returns the
issuer
as an implementation specific
Principal
object, which should not be relied upon by portable
 code.
getIssuerDN()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the
issuer
(issuer distinguished name) value from
 the certificate.
getIssuerName()
- Method in interface javax.xml.crypto.dsig.keyinfo.
X509IssuerSerial
Returns the X.500 distinguished name of this
X509IssuerSerial
in
RFC 2253
String format.
getIssuerNames()
- Method in class java.security.cert.
X509CRLSelector
Returns a copy of the issuerNames criterion.
getIssuers()
- Method in class java.security.cert.
X509CRLSelector
Returns the issuerNames criterion.
getIssuerUniqueID()
- Method in class java.security.cert.
X509Certificate
Gets the
issuerUniqueID
value from the certificate.
getIssuerX500Principal()
- Method in class java.security.cert.
X509Certificate
Returns the issuer (issuer distinguished name) value from the
 certificate as an
X500Principal
.
getIssuerX500Principal()
- Method in class java.security.cert.
X509CRL
Returns the issuer (issuer distinguished name) value from the
 CRL as an
X500Principal
.
getItalicAngle()
- Method in class java.awt.
Font
Returns the italic angle of this
Font
.
getItem()
- Method in class java.awt.event.
ItemEvent
Returns the item affected by the event.
getItem()
- Method in interface javax.swing.
ComboBoxEditor
Returns the edited item
getItem()
- Method in class javax.swing.plaf.basic.
BasicComboBoxEditor
getItem(int)
- Method in class java.awt.
Choice
Gets the string at the specified index in this
Choice
menu.
getItem(int)
- Method in class java.awt.
List
Gets the item associated with the specified index.
getItem(int)
- Method in class java.awt.
Menu
Gets the item located at the specified index of this menu.
getItem(int)
- Method in class javax.swing.
JMenu
Returns the
JMenuItem
at the specified position.
getItemAt(int)
- Method in class javax.swing.
JComboBox
Returns the list item at the specified index.
getItemCount()
- Method in class java.awt.
Choice
Returns the number of items in this
Choice
menu.
getItemCount()
- Method in class java.awt.
List
Gets the number of items in the list.
getItemCount()
- Method in class java.awt.
Menu
Get the number of items in this menu.
getItemCount()
- Method in class javax.swing.
JComboBox
Returns the number of items in the list.
getItemCount()
- Method in class javax.swing.
JMenu
Returns the number of items on the menu, including separators.
getItemListeners()
- Method in class java.awt.
Checkbox
Returns an array of all the item listeners
 registered on this checkbox.
getItemListeners()
- Method in class java.awt.
CheckboxMenuItem
Returns an array of all the item listeners
 registered on this checkbox menuitem.
getItemListeners()
- Method in class java.awt.
Choice
Returns an array of all the item listeners
 registered on this choice.
getItemListeners()
- Method in class java.awt.
List
Returns an array of all the item listeners
 registered on this list.
getItemListeners()
- Method in class javax.swing.
AbstractButton
Returns an array of all the
ItemListener
s added
 to this AbstractButton with addItemListener().
getItemListeners()
- Method in class javax.swing.
DefaultButtonModel
Returns an array of all the item listeners
 registered on this
DefaultButtonModel
.
getItemListeners()
- Method in class javax.swing.
JComboBox
Returns an array of all the
ItemListener
s added
 to this JComboBox with addItemListener().
getItems()
- Method in class java.awt.
List
Gets the items in the list.
getItemSelectable()
- Method in class java.awt.event.
ItemEvent
Returns the originator of the event.
getIterationCount()
- Method in interface javax.crypto.interfaces.
PBEKey
Returns the iteration count or 0 if not specified.
getIterationCount()
- Method in class javax.crypto.spec.
PBEKeySpec
Returns the iteration count or 0 if not specified.
getIterationCount()
- Method in class javax.crypto.spec.
PBEParameterSpec
Returns the iteration count.
getIterator()
- Method in class java.text.
AttributedString
Creates an AttributedCharacterIterator instance that provides access to the entire contents of
 this string.
getIterator(AttributedCharacterIterator.Attribute[])
- Method in class java.text.
AttributedString
Creates an AttributedCharacterIterator instance that provides access to
 selected contents of this string.
getIterator(AttributedCharacterIterator.Attribute[], int, int)
- Method in class java.text.
AttributedString
Creates an AttributedCharacterIterator instance that provides access to
 selected contents of this string.
getIterator(HTML.Tag)
- Method in class javax.swing.text.html.
HTMLDocument
Fetches an iterator for the specified HTML tag.
getIV()
- Method in class javax.crypto.
Cipher
Returns the initialization vector (IV) in a new buffer.
getIV()
- Method in class javax.crypto.spec.
GCMParameterSpec
Returns the Initialization Vector (IV).
getIV()
- Method in class javax.crypto.spec.
IvParameterSpec
Returns the initialization vector (IV).
getIV()
- Method in class javax.crypto.spec.
RC2ParameterSpec
Returns the IV or null if this parameter set does not contain an IV.
getIV()
- Method in class javax.crypto.spec.
RC5ParameterSpec
Returns the IV or null if this parameter set does not contain an IV.
getJarEntry()
- Method in class java.net.
JarURLConnection
Return the JAR entry object for this connection, if any.
getJarEntry(String)
- Method in class java.util.jar.
JarFile
Returns the
JarEntry
for the given base entry name or
null
if not found.
getJarFile()
- Method in class java.net.
JarURLConnection
Return the JAR file for this connection.
getJarFiles()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the list of
.jar
files specified by the
ARCHIVE
attribute of the
MLET
tag.
getJarFileURL()
- Method in class java.net.
JarURLConnection
Returns the URL for the Jar file for this connection.
getJavaFileForInput(JavaFileManager.Location, String, JavaFileObject.Kind)
- Method in class javax.tools.
ForwardingJavaFileManager
getJavaFileForInput(JavaFileManager.Location, String, JavaFileObject.Kind)
- Method in interface javax.tools.
JavaFileManager
Returns a
file object
for input
 representing the specified class of the specified kind in the
 given package-oriented location.
getJavaFileForOutput(JavaFileManager.Location, String, JavaFileObject.Kind, FileObject)
- Method in class javax.tools.
ForwardingJavaFileManager
getJavaFileForOutput(JavaFileManager.Location, String, JavaFileObject.Kind, FileObject)
- Method in interface javax.tools.
JavaFileManager
Returns a
file object
for output
 representing the specified class of the specified kind in the
 given package-oriented location.
getJavaFileForOutputForOriginatingFiles(JavaFileManager.Location, String, JavaFileObject.Kind, FileObject...)
- Method in class javax.tools.
ForwardingJavaFileManager
Returns a
file object
for output
 representing the specified class of the specified kind in the
 given package-oriented location.
getJavaFileForOutputForOriginatingFiles(JavaFileManager.Location, String, JavaFileObject.Kind, FileObject...)
- Method in interface javax.tools.
JavaFileManager
Returns a
file object
for output
 representing the specified class of the specified kind in the
 given package-oriented location.
getJavaFileManager()
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns the file manager used to read and write files.
getJavaFileObjects(File...)
- Method in interface javax.tools.
StandardJavaFileManager
Returns file objects representing the given files.
getJavaFileObjects(String...)
- Method in interface javax.tools.
StandardJavaFileManager
Returns file objects representing the given file names.
getJavaFileObjects(Path...)
- Method in interface javax.tools.
StandardJavaFileManager
Returns file objects representing the given paths.
getJavaFileObjectsFromFiles(Iterable<? extends File>)
- Method in interface javax.tools.
StandardJavaFileManager
Returns file objects representing the given files.
getJavaFileObjectsFromPaths(Iterable<? extends Path>)
- Method in interface javax.tools.
StandardJavaFileManager
Deprecated.
use
StandardJavaFileManager.getJavaFileObjectsFromPaths(Collection)
instead,
 to prevent the possibility of accidentally calling the method with a
 single
Path
as such an argument. Although
Path
implements
Iterable<Path>
, it would almost never be correct to pass a single
Path
and have it be treated as an
Iterable
of its
 components.
getJavaFileObjectsFromPaths(Collection<? extends Path>)
- Method in interface javax.tools.
StandardJavaFileManager
Returns file objects representing the given paths.
getJavaFileObjectsFromStrings(Iterable<String>)
- Method in interface javax.tools.
StandardJavaFileManager
Returns file objects representing the given file names.
getJavaInitializationString()
- Method in interface java.beans.
PropertyEditor
Returns a fragment of Java code that can be used to set a property
 to match the editors current state.
getJavaInitializationString()
- Method in class java.beans.
PropertyEditorSupport
This method is intended for use when generating Java code to set
 the value of the property.
getJavaName()
- Method in class jdk.jfr.consumer.
RecordedThread
Returns the Java thread name, or
null
if doesn't exist.
getJavaThreadId()
- Method in class jdk.jfr.consumer.
RecordedThread
Returns the Java thread ID, or
-1
if it's not a Java thread.
getJDBCMajorVersion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the major JDBC version number for this
 driver.
getJDBCMinorVersion()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the minor JDBC version number for this
 driver.
getJMenuBar()
- Method in class javax.swing.
JApplet
Deprecated.
Returns the menubar set on this applet.
getJMenuBar()
- Method in class javax.swing.
JDialog
Returns the menubar set on this dialog.
getJMenuBar()
- Method in class javax.swing.
JFrame
Returns the menubar set on this frame.
getJMenuBar()
- Method in class javax.swing.
JInternalFrame
Returns the current
JMenuBar
for this
JInternalFrame
, or
null
if no menu bar has been set.
getJMenuBar()
- Method in class javax.swing.
JRootPane
Returns the menu bar from the layered pane.
getJobName()
- Method in class java.awt.print.
PrinterJob
Gets the name of the document to be printed.
getJoinType()
- Method in interface javax.sql.rowset.
JoinRowSet
Returns a
int
describing the set SQL
JOIN
type
 governing this JoinRowSet instance.
getJustificationInfo()
- Method in class java.awt.font.
GraphicAttribute
Returns the justification information for this
GraphicAttribute
.
getJustifiedLayout(float)
- Method in class java.awt.font.
TextLayout
Creates a copy of this
TextLayout
justified to the
 specified width.
getKeepAlive()
- Method in class java.net.
Socket
Tests if
SO_KEEPALIVE
is enabled.
getKeepAliveTime(TimeUnit)
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the thread keep-alive time, which is the amount of time
 that threads may remain idle before being terminated.
getKernel()
- Method in class java.awt.image.
ConvolveOp
Returns the Kernel.
getKernelData(float[])
- Method in class java.awt.image.
Kernel
Returns the kernel data in row major order.
getKey()
- Method in class java.awt.
MenuShortcut
Returns the raw keycode of this MenuShortcut.
getKey()
- Method in class java.util.
AbstractMap.SimpleEntry
Returns the key corresponding to this entry.
getKey()
- Method in class java.util.
AbstractMap.SimpleImmutableEntry
Returns the key corresponding to this entry.
getKey()
- Method in interface java.util.
Map.Entry
Returns the key corresponding to this entry.
getKey()
- Method in exception class java.util.
MissingResourceException
Gets parameter passed by constructor.
getKey()
- Method in class java.util.prefs.
PreferenceChangeEvent
Returns the key of the preference that was changed.
getKey()
- Method in class javax.accessibility.
AccessibleRelation
Returns the key for this relation.
getKey()
- Method in class javax.crypto.spec.
DESedeKeySpec
Returns the DES-EDE key.
getKey()
- Method in class javax.crypto.spec.
DESKeySpec
Returns the DES key material.
getKey()
- Method in interface javax.xml.crypto.
KeySelectorResult
Returns the selected key.
getKey(String, char[])
- Method in class java.security.
KeyStore
Returns the key associated with the given alias, using the given
 password to recover it.
getKeyChar()
- Method in class java.awt.
AWTKeyStroke
Returns the character for this
AWTKeyStroke
.
getKeyChar()
- Method in class java.awt.event.
KeyEvent
Returns the character associated with the key in this event.
getKeyCode()
- Method in class java.awt.
AWTKeyStroke
Returns the numeric key code for this
AWTKeyStroke
.
getKeyCode()
- Method in class java.awt.event.
KeyEvent
Returns the integer keyCode associated with the key in this event.
getKeyColumns()
- Method in interface javax.sql.rowset.
CachedRowSet
Returns an array containing one or more column numbers indicating the columns
 that form a key that uniquely
 identifies a row in this
CachedRowSet
object.
getKeyEventDispatchers()
- Method in class java.awt.
KeyboardFocusManager
Returns this KeyboardFocusManager's KeyEventDispatcher chain as a List.
getKeyEventPostProcessors()
- Method in class java.awt.
KeyboardFocusManager
Returns this KeyboardFocusManager's KeyEventPostProcessor chain as a
 List.
getKeyEventType()
- Method in class java.awt.
AWTKeyStroke
Returns the type of
KeyEvent
which corresponds to
 this
AWTKeyStroke
.
getKeyId()
- Method in interface javax.xml.crypto.dsig.keyinfo.
PGPData
Returns the PGP public key identifier of this
PGPData
as
 defined in
RFC 2440
,
 section 11.2.
getKeyInfo()
- Method in interface javax.xml.crypto.dsig.
XMLSignature
Returns the key info of this
XMLSignature
.
getKeyInfoFactory()
- Method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Returns a
KeyInfoFactory
that creates
KeyInfo
objects.
getKeyLength()
- Method in class javax.crypto.spec.
PBEKeySpec
Returns the to-be-derived key length or 0 if not specified.
getKeyListener()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Implementation of ComboPopup.getKeyListener().
getKeyListener()
- Method in interface javax.swing.plaf.basic.
ComboPopup
Returns a key listener that will be added to the combo box or null.
getKeyListeners()
- Method in class java.awt.
Component
Returns an array of all the key listeners
 registered on this component.
getKeyLocation()
- Method in class java.awt.event.
KeyEvent
Returns the location of the key that originated this key event.
getKeyManagers()
- Method in class javax.net.ssl.
KeyManagerFactory
Returns one key manager for each type of key material.
getKeymap()
- Method in class javax.swing.text.
JTextComponent
Fetches the keymap currently active in this text
 component.
getKeymap(String)
- Static method in class javax.swing.text.
JTextComponent
Fetches a named keymap previously added to the document.
getKeymapName()
- Method in class javax.swing.plaf.basic.
BasicTextUI
Fetches the name of the keymap that will be installed/used
 by default for this UI.
getKeyModifiersText(int)
- Static method in class java.awt.event.
KeyEvent
Deprecated.
It is recommended that extended modifier keys and
InputEvent.getModifiersExText(int)
be used instead
getKeyPacket()
- Method in interface javax.xml.crypto.dsig.keyinfo.
PGPData
Returns the PGP key material packet of this
PGPData
as
 defined in
RFC 2440
,
 section 5.5.
getKeyParams()
- Method in class java.security.spec.
RSAKeyGenParameterSpec
Returns the parameters to be associated with key.
getKeyProperty(String)
- Method in class javax.management.
ObjectName
Obtains the value associated with a key in a key property.
getKeyPropertyList()
- Method in class javax.management.
ObjectName
Returns the key properties as a Hashtable.
getKeyPropertyListString()
- Method in class javax.management.
ObjectName
Returns a string representation of the list of key
 properties specified at creation time.
getKeys()
- Method in class java.util.
ListResourceBundle
Returns an
Enumeration
of the keys contained in
 this
ResourceBundle
and its parent bundles.
getKeys()
- Method in class java.util.
PropertyResourceBundle
Returns an
Enumeration
of the keys contained in
 this
ResourceBundle
and its parent bundles.
getKeys()
- Method in class java.util.
ResourceBundle
Returns an enumeration of the keys.
getKeys()
- Method in class javax.swing.
AbstractAction
Returns an array of
Object
s which are keys for
 which values have been set for this
AbstractAction
,
 or
null
if no keys have values set.
getKeys(KerberosPrincipal)
- Method in class javax.security.auth.kerberos.
KeyTab
Returns fresh keys for the given Kerberos principal.
getKeySelectionManager()
- Method in class javax.swing.
JComboBox
Returns the list's key-selection manager.
getKeySelector()
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
getKeySelector()
- Method in interface javax.xml.crypto.
XMLCryptoContext
Returns the key selector for finding a key.
getKeySelectorResult()
- Method in interface javax.xml.crypto.dsig.
XMLSignature
Returns the result of the
KeySelector
, if specified, after
 this
XMLSignature
has been signed or validated.
getKeysize()
- Method in class java.security.spec.
RSAKeyGenParameterSpec
Returns the keysize.
getKeySpec(Key)
- Method in class javax.crypto.
EncryptedPrivateKeyInfo
Extract the enclosed PKCS8EncodedKeySpec object from the
 encrypted data and return it.
getKeySpec(Key, Class<T>)
- Method in class java.security.
KeyFactory
Returns a specification (key material) of the given key object.
getKeySpec(Key, String)
- Method in class javax.crypto.
EncryptedPrivateKeyInfo
Extract the enclosed PKCS8EncodedKeySpec object from the
 encrypted data and return it.
getKeySpec(Key, Provider)
- Method in class javax.crypto.
EncryptedPrivateKeyInfo
Extract the enclosed PKCS8EncodedKeySpec object from the
 encrypted data and return it.
getKeySpec(Cipher)
- Method in class javax.crypto.
EncryptedPrivateKeyInfo
Extract the enclosed PKCS8EncodedKeySpec object from the
 encrypted data and return it.
getKeySpec(SecretKey, Class<?>)
- Method in class javax.crypto.
SecretKeyFactory
Returns a specification (key material) of the given key object
 in the requested format.
getKeyStore()
- Method in class java.security.
KeyStore.Builder
Returns the
KeyStore
described by this object.
getKeyStroke(char)
- Static method in class javax.swing.
KeyStroke
Returns a shared instance of a
KeyStroke
that represents a
KEY_TYPED
event for the
 specified character.
getKeyStroke(char, boolean)
- Static method in class javax.swing.
KeyStroke
Deprecated.
use getKeyStroke(char)
getKeyStroke(int, int)
- Static method in class javax.swing.
KeyStroke
Returns a shared instance of a KeyStroke, given a numeric key code and a
 set of modifiers.
getKeyStroke(int, int, boolean)
- Static method in class javax.swing.
KeyStroke
Returns a shared instance of a KeyStroke, given a numeric key code and a
 set of modifiers, specifying whether the key is activated when it is
 pressed or released.
getKeyStroke(Character, int)
- Static method in class javax.swing.
KeyStroke
Returns a shared instance of a
KeyStroke
that represents a
KEY_TYPED
event for the
 specified Character object and a
 set of modifiers.
getKeyStroke(String)
- Static method in class javax.swing.
KeyStroke
Parses a string and returns a
KeyStroke
.
getKeyStrokeForEvent(KeyEvent)
- Static method in class javax.swing.
KeyStroke
Returns a KeyStroke which represents the stroke which generated a given
 KeyEvent.
getKeyStrokesForAction(Action)
- Method in interface javax.swing.text.
Keymap
Fetches the keystrokes that will result in
 the given action.
getKeyText(int)
- Static method in class java.awt.event.
KeyEvent
Returns a String describing the keyCode, such as "HOME", "F1" or "A".
getKeyType()
- Method in class javax.security.auth.kerberos.
EncryptionKey
Returns the key type for this key.
getKeyType()
- Method in class javax.security.auth.kerberos.
KerberosKey
Returns the key type for this long-term key.
getKeyUsage()
- Method in class java.security.cert.
X509Certificate
Gets a boolean array representing bits of
 the
KeyUsage
extension, (OID = 2.5.29.15).
getKeyUsage()
- Method in class java.security.cert.
X509CertSelector
Returns the keyUsage criterion.
getKind()
- Method in interface com.sun.source.doctree.
DocTree
Returns the kind of this tree.
getKind()
- Method in interface com.sun.source.tree.
Tree
Returns the kind of this tree.
getKind()
- Method in class com.sun.source.util.
TaskEvent
Returns the kind for this event.
getKind()
- Method in interface javax.lang.model.element.
Element
Returns the
kind
of this element.
getKind()
- Method in interface javax.lang.model.element.
ModuleElement.Directive
Returns the
kind
of this directive.
getKind()
- Method in interface javax.lang.model.type.
TypeMirror
Returns the
kind
of this type.
getKind()
- Method in interface javax.tools.
Diagnostic
Returns the kind of this diagnostic, for example, error or
 warning.
getKind()
- Method in class javax.tools.
ForwardingJavaFileObject
getKind()
- Method in interface javax.tools.
JavaFileObject
Returns the kind of this file object.
getKind()
- Method in class javax.tools.
SimpleJavaFileObject
getKind()
- Method in interface jdk.javadoc.doclet.
Doclet.Option
Returns the option kind.
getL()
- Method in class javax.crypto.spec.
DHParameterSpec
Returns the size in bits,
l
, of the random exponent
 (private value).
getLabel()
- Method in interface com.sun.source.doctree.
LinkTree
Returns the label, if any, of the link.
getLabel()
- Method in interface com.sun.source.tree.
BreakTree
Returns the label for this
break
statement.
getLabel()
- Method in interface com.sun.source.tree.
ContinueTree
Returns the label for this
continue
statement.
getLabel()
- Method in interface com.sun.source.tree.
LabeledStatementTree
Returns the label.
getLabel()
- Method in class java.awt.
Button
Gets the label of this button.
getLabel()
- Method in class java.awt.
Checkbox
Gets the label of this check box.
getLabel()
- Method in class java.awt.
MenuItem
Gets the label for this menu item.
getLabel()
- Method in class javax.swing.
AbstractButton
Deprecated.
- Replaced by
getText
getLabel()
- Method in class javax.swing.
JPopupMenu
Returns the popup menu's label
getLabel()
- Method in class javax.swing.text.html.
Option
Fetch the label associated with the option.
getLabel()
- Method in class jdk.jfr.
Configuration
Returns a human-readable name (for example,
"Continuous" or "Profiling"
}.
getLabel()
- Method in class jdk.jfr.
EventType
Returns a human-readable name (for example,
"CPU Load"
).
getLabel()
- Method in class jdk.jfr.
SettingDescriptor
Returns a human-readable name that describes the setting (for example,
"Threshold"
).
getLabel()
- Method in class jdk.jfr.
ValueDescriptor
Returns a human-readable name that describes the value (for example,
"Maximum Throughput"
).
getLabel()
- Method in class jdk.management.jfr.
ConfigurationInfo
Returns the human-readable name (for example,
"Continuous"
or
"Profiling"
) for
 the configuration associated with this
ConfigurationInfo
getLabel()
- Method in class jdk.management.jfr.
EventTypeInfo
Returns the label, a human-readable name, associated with the event type
 for this
EventTypeInfo
(for example,
"Garbage Collection"
).
getLabel()
- Method in class jdk.management.jfr.
SettingDescriptorInfo
Returns the human-readable name of the setting associated with this
SettingDescriptorInfo
(for example,
"Threshold"
).
getLabel()
- Method in interface org.w3c.dom.html.
HTMLOptGroupElement
Assigns a label to this option group.
getLabel()
- Method in interface org.w3c.dom.html.
HTMLOptionElement
Option label for use in hierarchical menus.
getLabelFor()
- Method in class javax.swing.
JLabel
Get the component this is labelling.
getLabels()
- Method in interface com.sun.source.tree.
CaseTree
Returns the labels for this case.
getLabelTable()
- Method in class javax.swing.
JSlider
Returns the dictionary of what labels to draw at which values.
getLang()
- Method in interface org.w3c.dom.html.
HTMLElement
Language code defined in RFC 1766.
getLanguage()
- Method in class java.util.
Locale
Returns the language code of this Locale.
getLanguageName()
- Method in interface javax.script.
ScriptEngineFactory
Returns the name of the scripting language supported by this
ScriptEngine
.
getLanguageVersion()
- Method in interface javax.script.
ScriptEngineFactory
Returns the version of the scripting language supported by this
ScriptEngine
.
getLargeDisplayIcon()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Returns the large display icon for the panel.
getLargeMaxRows()
- Method in interface java.sql.
Statement
Retrieves the maximum number of rows that a
ResultSet
object produced by this
Statement
object can contain.
getLargestMinimum()
- Method in class java.time.temporal.
ValueRange
Gets the largest possible minimum value that the field can take.
getLargestPoolSize()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the largest number of threads that have ever
 simultaneously been in the pool.
getLargeUpdateCount()
- Method in interface java.sql.
Statement
Retrieves the current result as an update count; if the result
 is a
ResultSet
object or there are no more results, -1
  is returned.
getLargeUpdateCounts()
- Method in exception class java.sql.
BatchUpdateException
Retrieves the update count for each update statement in the batch
 update that executed successfully before this exception occurred.
getLast()
- Method in class java.util.
ArrayDeque
getLast()
- Method in class java.util.
ArrayList
Gets the last element of this collection.
getLast()
- Method in class java.util.concurrent.
ConcurrentLinkedDeque
getLast()
- Method in class java.util.concurrent.
CopyOnWriteArrayList
Gets the last element of this collection.
getLast()
- Method in class java.util.concurrent.
LinkedBlockingDeque
getLast()
- Method in interface java.util.
Deque
Retrieves, but does not remove, the last element of this deque.
getLast()
- Method in class java.util.
LinkedHashSet
Gets the last element of this collection.
getLast()
- Method in class java.util.
LinkedList
Returns the last element in this list.
getLast()
- Method in interface java.util.
List
Gets the last element of this collection.
getLast()
- Method in interface java.util.
SequencedCollection
Gets the last element of this collection.
getLast()
- Method in interface java.util.
SortedSet
Gets the last element of this collection.
getLastAccessedTime()
- Method in interface javax.net.ssl.
SSLSession
Returns the last time this Session representation was accessed by the
 session level infrastructure, in milliseconds since
 midnight, January 1, 1970 UTC.
getLastAccessTime()
- Method in class java.util.zip.
ZipEntry
Returns the last access time of the entry.
getLastChild()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the last child of this node, or
null
if
 the node has no children.
getLastChild()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns this node's last child.
getLastChild()
- Method in interface org.w3c.dom.
Node
The last child of this node.
getLastChildPath(TreePath)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns a path to the last child of
parent
.
getLastColumn()
- Method in interface javax.accessibility.
AccessibleTableModelChange
Returns the last column that changed.
getLastColumn()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableModelChange
Returns the last column.
getLastComponent(Container)
- Method in class java.awt.
ContainerOrderFocusTraversalPolicy
Returns the last Component in the traversal cycle.
getLastComponent(Container)
- Method in class java.awt.
FocusTraversalPolicy
Returns the last Component in the traversal cycle.
getLastComponent(Container)
- Method in class javax.swing.
DefaultFocusManager
Returns the last component.
getLastComponent(Container)
- Method in class javax.swing.
LayoutFocusTraversalPolicy
Returns the last Component in the traversal cycle.
getLastComponent(Container)
- Method in class javax.swing.
SortingFocusTraversalPolicy
Returns the last Component in the traversal cycle.
getLastCursor()
- Method in class javax.swing.
JInternalFrame
Returns the last
Cursor
that was set by the
setCursor
method that is not a resizable
Cursor
.
getLastDividerLocation()
- Method in class javax.swing.
JSplitPane
Returns the last location the divider was at.
getLastDragLocation()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the last drag location of the
JSplitPane
.
getLastElementChild()
- Method in interface org.w3c.dom.
ElementTraversal
Returns a reference to the last child node of the element which is of
 the
Element
type.
getLastGcInfo()
- Method in interface com.sun.management.
GarbageCollectorMXBean
Returns the GC information about the most recent GC.
getLastIndex()
- Method in class javax.swing.event.
ListSelectionEvent
Returns the index of the last row whose selection may have changed.
getLastLeaf()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Finds and returns the last leaf that is a descendant of this node --
 either this node or its last child's last leaf.
getLastModified()
- Method in class java.net.
URLConnection
Returns the value of the
last-modified
header field.
getLastModified()
- Method in interface javax.tools.
FileObject
Returns the time this file object was last modified.
getLastModified()
- Method in class javax.tools.
ForwardingFileObject
getLastModified()
- Method in class javax.tools.
SimpleJavaFileObject
This implementation returns
0L
.
getLastModifiedTime()
- Method in class java.util.zip.
ZipEntry
Returns the last modification time of the entry.
getLastModifiedTime(Path, LinkOption...)
- Static method in class java.nio.file.
Files
Returns a file's last modified time.
getLastPathComponent()
- Method in class javax.swing.tree.
TreePath
Returns the last element of this path.
getLastRow()
- Method in interface javax.accessibility.
AccessibleTableModelChange
Returns the last row that changed.
getLastRow()
- Method in class javax.swing.event.
TableModelEvent
Returns the last row that changed.
getLastRow()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableModelChange
Returns the last row.
getLastSelectedPathComponent()
- Method in class javax.swing.
JTree
Returns the last path component of the selected path.
getLastVisibleIndex()
- Method in class javax.swing.
JList
Returns the largest list index that is currently visible.
getLatency()
- Method in interface javax.sound.midi.
Synthesizer
Obtains the processing latency incurred by this synthesizer, expressed in
 microseconds.
getLateReflectionDelay()
- Method in class javax.sound.sampled.
ReverbType
Returns the late reflection delay time in microseconds.
getLateReflectionIntensity()
- Method in class javax.sound.sampled.
ReverbType
Returns the late reflection intensity in decibels.
getLayer()
- Method in class java.lang.
Module
Returns the module layer that contains this module or
null
if
 this module is not in a module layer.
getLayer()
- Method in class javax.swing.
JInternalFrame
Convenience method for getting the layer attribute of this component.
getLayer(Component)
- Method in class javax.swing.
JLayeredPane
Returns the layer attribute for the specified Component.
getLayer(JComponent)
- Static method in class javax.swing.
JLayeredPane
Gets the layer property for a JComponent, it
 does not cause any side effects like setLayer().
getLayeredPane()
- Method in class javax.swing.
JApplet
Deprecated.
Returns the layeredPane object for this applet.
getLayeredPane()
- Method in class javax.swing.
JDialog
Returns the
layeredPane
object for this dialog.
getLayeredPane()
- Method in class javax.swing.
JFrame
Returns the
layeredPane
object for this frame.
getLayeredPane()
- Method in class javax.swing.
JInternalFrame
Returns the layered pane for this internal frame.
getLayeredPane()
- Method in class javax.swing.
JRootPane
Gets the layered pane used by the root pane.
getLayeredPane()
- Method in class javax.swing.
JWindow
Returns the
layeredPane
object for this window.
getLayeredPane()
- Method in interface javax.swing.
RootPaneContainer
Returns the layeredPane.
getLayeredPaneAbove(Component)
- Static method in class javax.swing.
JLayeredPane
Convenience method that returns the first JLayeredPane which
 contains the specified component.
getLayerEventMask()
- Method in class javax.swing.
JLayer
Returns the bitmap of event mask to receive by this
JLayer
and its
LayerUI
.
getLayout()
- Method in class java.awt.
Container
Gets the layout manager for this container.
getLayout(int, int)
- Method in class java.awt.font.
TextMeasurer
Returns a
TextLayout
on the given character range.
getLayoutAlignmentX(Container)
- Method in class java.awt.
BorderLayout
Returns the alignment along the x axis.
getLayoutAlignmentX(Container)
- Method in class java.awt.
CardLayout
Returns the alignment along the x axis.
getLayoutAlignmentX(Container)
- Method in class java.awt.
GridBagLayout
Returns the alignment along the x axis.
getLayoutAlignmentX(Container)
- Method in interface java.awt.
LayoutManager2
Returns the alignment along the x axis.
getLayoutAlignmentX(Container)
- Method in class javax.swing.
BoxLayout
Returns the alignment along the X axis for the container.
getLayoutAlignmentX(Container)
- Method in class javax.swing.
GroupLayout
Returns the alignment along the x axis.
getLayoutAlignmentX(Container)
- Method in class javax.swing.
JRootPane.RootLayout
getLayoutAlignmentX(Container)
- Method in class javax.swing.
OverlayLayout
Returns the alignment along the x axis for the container.
getLayoutAlignmentX(Container)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Returns the alignment along the x axis.
getLayoutAlignmentX(Container)
- Method in class javax.swing.
SpringLayout
Returns 0.5f (centered).
getLayoutAlignmentY(Container)
- Method in class java.awt.
BorderLayout
Returns the alignment along the y axis.
getLayoutAlignmentY(Container)
- Method in class java.awt.
CardLayout
Returns the alignment along the y axis.
getLayoutAlignmentY(Container)
- Method in class java.awt.
GridBagLayout
Returns the alignment along the y axis.
getLayoutAlignmentY(Container)
- Method in interface java.awt.
LayoutManager2
Returns the alignment along the y axis.
getLayoutAlignmentY(Container)
- Method in class javax.swing.
BoxLayout
Returns the alignment along the Y axis for the container.
getLayoutAlignmentY(Container)
- Method in class javax.swing.
GroupLayout
Returns the alignment along the y axis.
getLayoutAlignmentY(Container)
- Method in class javax.swing.
JRootPane.RootLayout
getLayoutAlignmentY(Container)
- Method in class javax.swing.
OverlayLayout
Returns the alignment along the y axis for the container.
getLayoutAlignmentY(Container)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Returns the alignment along the y axis.
getLayoutAlignmentY(Container)
- Method in class javax.swing.
SpringLayout
Returns 0.5f (centered).
getLayoutComponent(Container, Object)
- Method in class java.awt.
BorderLayout
Returns the component that corresponds to the given constraint location
 based on the target
Container
's component orientation.
getLayoutComponent(Object)
- Method in class java.awt.
BorderLayout
Gets the component that was added using the given constraint
getLayoutDimensions()
- Method in class java.awt.
GridBagLayout
Determines column widths and row heights for the layout grid.
getLayoutFlags()
- Method in class java.awt.font.
GlyphVector
Returns flags describing the global state of the GlyphVector.
getLayoutInfo(Container, int)
- Method in class java.awt.
GridBagLayout
Fills in an instance of
GridBagLayoutInfo
for the
 current set of managed children.
GetLayoutInfo(Container, int)
- Method in class java.awt.
GridBagLayout
This method is obsolete and supplied for backwards
 compatibility only; new code should call
getLayoutInfo
instead.
getLayoutOrientation()
- Method in class javax.swing.
JList
Returns the layout orientation property for the list:
VERTICAL
if the layout is a single column of cells,
VERTICAL_WRAP
if the
 layout is "newspaper style" with the content flowing vertically then
 horizontally, or
HORIZONTAL_WRAP
if the layout is "newspaper
 style" with the content flowing horizontally then vertically.
getLayoutOrigin()
- Method in class java.awt.
GridBagLayout
Determines the origin of the layout area, in the graphics coordinate
 space of the target container.
getLayoutPath()
- Method in class java.awt.font.
TextLayout
Return the LayoutPath, or null if the layout path is the
 default path (x maps to advance, y maps to offset).
getLayoutQueue()
- Method in class javax.swing.text.
AsyncBoxView
Fetch the queue to use for layout.
getLayoutStyle()
- Method in class javax.swing.
GroupLayout
Returns the
LayoutStyle
used for calculating the preferred
 gap between components.
getLayoutStyle()
- Method in class javax.swing.
LookAndFeel
Returns the
LayoutStyle
for this look
 and feel.
getLayoutStyle()
- Method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns a
LayoutStyle
implementing the Java look and feel
 design guidelines.
getLayoutView(int)
- Method in class javax.swing.text.
ParagraphView
Returns the view at a given
index
.
getLayoutViewCount()
- Method in class javax.swing.text.
ParagraphView
Returns the number of views that this view is
 responsible for.
getLayoutWeights()
- Method in class java.awt.
GridBagLayout
Determines the weights of the layout grid's columns and rows.
getLeader()
- Method in class javax.swing.text.
TabStop
Returns the leader of the tab.
getLeading()
- Method in class java.awt.font.
LineMetrics
Returns the leading of the text.
getLeading()
- Method in class java.awt.font.
TextLayout
Returns the leading of the
TextLayout
.
getLeading()
- Method in class java.awt.
FontMetrics
Determines the
standard leading
of the
Font
described by this
FontMetrics
object.
getLeadSelectionIndex()
- Method in class javax.swing.
DefaultListSelectionModel
Return the second index argument from the most recent call to
 setSelectionInterval(), addSelectionInterval() or removeSelectionInterval().
getLeadSelectionIndex()
- Method in class javax.swing.
JList
Returns the lead selection index.
getLeadSelectionIndex()
- Method in interface javax.swing.
ListSelectionModel
Return the second index argument from the most recent call to
 setSelectionInterval(), addSelectionInterval() or removeSelectionInterval().
getLeadSelectionPath()
- Method in class javax.swing.
JTree
Returns the path identified as the lead.
getLeadSelectionPath()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the last path that was added.
getLeadSelectionPath()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the last path that was added.
getLeadSelectionRow()
- Method in class javax.swing.
JTree
Returns the row index corresponding to the lead path.
getLeadSelectionRow()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the lead row of the selection.
getLeadSelectionRow()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the lead selection index.
getLeadSelectionRow()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the lead selection index.
getLeaf()
- Method in class com.sun.source.util.
DocTreePath
Returns the leaf node for this path.
getLeaf()
- Method in class com.sun.source.util.
TreePath
Returns the leaf node for this path.
getLeafCount()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the total number of leaves that are descendants of this node.
getLeafIcon()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the icon used to represent leaf nodes.
getLeastMaximum(int)
- Method in class java.util.
Calendar
Returns the lowest maximum value for the given calendar field
 of this
Calendar
instance.
getLeastMaximum(int)
- Method in class java.util.
GregorianCalendar
Returns the lowest maximum value for the given calendar field
 of this
GregorianCalendar
instance.
getLeastSignificantBits()
- Method in class java.util.
UUID
Returns the least significant 64 bits of this UUID's 128 bit value.
getLeft()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the left property definition in CSS2.
getLeft()
- Method in interface org.w3c.dom.css.
Rect
This attribute is used for the left of the rect.
getLeftChildIndent()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the left child indent.
getLeftComponent()
- Method in class javax.swing.
JSplitPane
Returns the component to the left (or above) the divider.
getLeftIndent(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the left indent setting.
getLeftInset()
- Method in class javax.swing.text.
AsyncBoxView
Get the left part of the margin around the view.
getLeftInset()
- Method in class javax.swing.text.
CompositeView
Gets the left inset.
getLeftOperand()
- Method in interface com.sun.source.tree.
BinaryTree
Returns the left (first) operand of the expression.
getLegalValues()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns an unmodifiable Set of legal values for the attribute
 described by this
OpenMBeanAttributeInfoSupport
instance, if specified, or
null
otherwise.
getLegalValues()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns the set of legal values for this parameter, if it has
 one, or
null
otherwise.
getLegalValues()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns an unmodifiable Set of legal values for the parameter
 described by this
OpenMBeanParameterInfoSupport
instance, if specified, or
null
otherwise.
getLength()
- Method in class java.net.
DatagramPacket
Returns the length of the data to be sent or the length of the
 data received.
getLength()
- Method in class java.text.
Bidi
Return the length of text in the line.
getLength()
- Method in class javax.imageio.metadata.
IIOMetadataNode
getLength()
- Method in class javax.imageio.stream.
IIOByteBuffer
Returns the length of the data of interest within the byte
 array returned by
getData
.
getLength()
- Method in class javax.sound.midi.
MidiMessage
Obtains the total length of the MIDI message in bytes.
getLength()
- Method in interface javax.swing.event.
DocumentEvent
Returns the length of the change.
getLength()
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Returns the length of the change.
getLength()
- Method in class javax.swing.text.
AbstractDocument
Returns the length of the data.
getLength()
- Method in class javax.swing.text.
DefaultStyledDocument.ElementSpec
Gets the length.
getLength()
- Method in interface javax.swing.text.
Document
Returns number of characters of content currently
 in the document.
getLength()
- Method in interface org.w3c.dom.
CharacterData
The number of 16-bit units that are available through
data
and the
substringData
method below.
getLength()
- Method in interface org.w3c.dom.css.
CSSRuleList
The number of
CSSRules
in the list.
getLength()
- Method in interface org.w3c.dom.css.
CSSStyleDeclaration
The number of properties that have been explicitly set in this
 declaration block.
getLength()
- Method in interface org.w3c.dom.css.
CSSValueList
The number of
CSSValues
in the list.
getLength()
- Method in interface org.w3c.dom.
DOMImplementationList
The number of
DOMImplementation
s in the list.
getLength()
- Method in interface org.w3c.dom.
DOMStringList
The number of
DOMString
s in the list.
getLength()
- Method in interface org.w3c.dom.html.
HTMLCollection
This attribute specifies the length or  size of the list.
getLength()
- Method in interface org.w3c.dom.html.
HTMLFormElement
The number of form controls in the form.
getLength()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
The number of options in this
SELECT
.
getLength()
- Method in interface org.w3c.dom.
NamedNodeMap
The number of nodes in this map.
getLength()
- Method in interface org.w3c.dom.
NameList
The number of pairs (name and namespaceURI) in the list.
getLength()
- Method in interface org.w3c.dom.
NodeList
The number of nodes in the list.
getLength()
- Method in interface org.w3c.dom.stylesheets.
MediaList
The number of media in the list.
getLength()
- Method in interface org.w3c.dom.stylesheets.
StyleSheetList
The number of
StyleSheets
in the list.
getLength()
- Method in interface org.xml.sax.
AttributeList
Deprecated.
Return the number of attributes in this list.
getLength()
- Method in interface org.xml.sax.
Attributes
Return the number of attributes in the list.
getLength()
- Method in class org.xml.sax.helpers.
AttributeListImpl
Deprecated.
Return the number of attributes in the list.
getLength()
- Method in class org.xml.sax.helpers.
AttributesImpl
Return the number of attributes in the list.
getLength(Object)
- Static method in class java.lang.reflect.
Array
Returns the length of the specified array object, as an
int
.
getLengths()
- Method in class javax.imageio.plugins.jpeg.
JPEGHuffmanTable
Returns an array of
short
s containing the number of values
 for each length in the Huffman table.
getLetterSpacing()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the letter-spacing property definition in CSS2.
getLevel()
- Method in class java.util.logging.
Handler
Get the log level specifying which messages will be
 logged by this
Handler
.
getLevel()
- Method in class java.util.logging.
Logger
Get the log Level that has been specified for this Logger.
getLevel()
- Method in class java.util.logging.
LogRecord
Get the logging message level, for example Level.SEVERE.
getLevel()
- Method in interface javax.sound.sampled.
DataLine
Obtains the current volume level for the line.
getLevel()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the number of levels above this node -- the distance from
 the root to this node.
getLevelAt(int)
- Method in class java.text.
Bidi
Return the resolved level of the character at offset.
getLexicalHandler()
- Method in class javax.xml.transform.sax.
SAXResult
Get a SAX2
LexicalHandler
for the output.
getLibraryDirectory()
- Method in class javax.management.loading.
MLet
Deprecated.
Gets the current directory used by the library loader for
 storing native libraries before they are loaded into memory.
getLibraryDirectory()
- Method in interface javax.management.loading.
MLetMBean
Deprecated.
Gets the current directory used by the library loader for
 storing native libraries before they are loaded into memory.
getLibraryPath()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the Java library path.
getLifetime()
- Method in interface org.ietf.jgss.
GSSContext
Determines what the remaining lifetime for this
 context is.
getLimit()
- Method in class javax.swing.undo.
UndoManager
Returns the maximum number of edits this
UndoManager
holds.
getLimits()
- Method in class java.text.
ChoiceFormat
Get the limits passed in the constructor.
getLine()
- Method in class javax.sound.sampled.
LineEvent
Obtains the audio line that is the source of this event.
getLine(Line.Info)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains a line that matches the description in the specified
Line.Info
object.
getLine(Line.Info)
- Method in interface javax.sound.sampled.
Mixer
Obtains a line that is available for use and that matches the description
 in the specified
Line.Info
object.
getLineBreakIndex(int, float)
- Method in class java.awt.font.
TextMeasurer
Returns the index of the first character which will not fit on
 on a line beginning at
start
and possible
 measuring up to
maxAdvance
in graphical width.
getLineBuffer()
- Method in class javax.swing.text.
PlainView
Gives access to a buffer that can be used to fetch
 text from the associated document.
getLineBuffer()
- Method in class javax.swing.text.
WrappedPlainView
Gives access to a buffer that can be used to fetch
 text from the associated document.
getLineClass()
- Method in class javax.sound.sampled.
Line.Info
Obtains the class of the line that this
Line.Info
object
 describes.
getLineColor()
- Method in class javax.swing.border.
LineBorder
Returns the color of the border.
getLineCount()
- Method in class javax.swing.
JTextArea
Determines the number of lines contained in the area.
getLineEndOffset(int)
- Method in class javax.swing.
JTextArea
Determines the offset of the end of the given line.
getLineHeight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the line-height property definition in CSS2.
getLineIncrement()
- Method in class java.awt.
Scrollbar
Deprecated.
As of JDK version 1.1,
 replaced by
getUnitIncrement()
.
getLineInfo()
- Method in interface javax.sound.sampled.
Line
Obtains the
Line.Info
object describing this line.
getLineInstance()
- Static method in class java.text.
BreakIterator
Returns a new
BreakIterator
instance
 for
line breaks
for the
default locale
.
getLineInstance(Locale)
- Static method in class java.text.
BreakIterator
Returns a new
BreakIterator
instance
 for
line breaks
for the given locale.
getLineInstance(Locale)
- Method in class java.text.spi.
BreakIteratorProvider
Returns a new
BreakIterator
instance
 for
line breaks
for the given locale.
getLineJoin()
- Method in class java.awt.
BasicStroke
Returns the line join style.
getLineLength()
- Method in class javax.swing.text.
AbstractWriter
Returns the maximum line length.
getLineMap()
- Method in interface com.sun.source.tree.
CompilationUnitTree
Returns the line map for this compilation unit, if available,
 or
null
if the line map is not available.
getLineMetrics(char[], int, int, FontRenderContext)
- Method in class java.awt.
Font
Returns a
LineMetrics
object created with the
 specified arguments.
getLineMetrics(char[], int, int, Graphics)
- Method in class java.awt.
FontMetrics
Returns the
LineMetrics
object for the specified
 character array in the specified
Graphics
context.
getLineMetrics(String, int, int, FontRenderContext)
- Method in class java.awt.
Font
Returns a
LineMetrics
object created with the
 specified arguments.
getLineMetrics(String, int, int, Graphics)
- Method in class java.awt.
FontMetrics
Returns the
LineMetrics
object for the specified
String
in the specified
Graphics
context.
getLineMetrics(String, FontRenderContext)
- Method in class java.awt.
Font
Returns a
LineMetrics
object created with the specified
String
and
FontRenderContext
.
getLineMetrics(String, Graphics)
- Method in class java.awt.
FontMetrics
Returns the
LineMetrics
object for the specified
String
in the specified
Graphics
context.
getLineMetrics(CharacterIterator, int, int, FontRenderContext)
- Method in class java.awt.
Font
Returns a
LineMetrics
object created with the
 specified arguments.
getLineMetrics(CharacterIterator, int, int, Graphics)
- Method in class java.awt.
FontMetrics
Returns the
LineMetrics
object for the specified
CharacterIterator
in the specified
Graphics
context.
getLineNumber()
- Method in class java.io.
LineNumberInputStream
Deprecated.
Returns the current line number.
getLineNumber()
- Method in class java.io.
LineNumberReader
Get the current line number.
getLineNumber()
- Method in class java.lang.
StackTraceElement
Returns the line number of the source line containing the execution
 point represented by this stack trace element.
getLineNumber()
- Method in interface java.lang.
StackWalker.StackFrame
Returns the line number of the source line containing the execution
 point represented by this stack frame.
getLineNumber()
- Method in exception class javax.script.
ScriptException
Get the line number on which an error occurred.
getLineNumber()
- Method in interface javax.tools.
Diagnostic
Returns the line number of the character offset returned by
Diagnostic.getPosition()
.
getLineNumber()
- Method in interface javax.xml.stream.
Location
Return the line number where the current event ends,
 returns -1 if none is available.
getLineNumber()
- Method in interface javax.xml.transform.
SourceLocator
Return the line number where the current document event ends.
getLineNumber()
- Method in class jdk.jfr.consumer.
RecordedFrame
Returns the line number for the execution point that is represented by this
 recorded frame, or
-1
if doesn't exist
getLineNumber()
- Method in interface org.w3c.dom.
DOMLocator
The line number this locator is pointing to, or
-1
if
 there is no column number available.
getLineNumber()
- Method in class org.xml.sax.helpers.
LocatorImpl
Return the saved line number (1-based).
getLineNumber()
- Method in interface org.xml.sax.
Locator
Return the line number where the current document event ends.
getLineNumber()
- Method in exception class org.xml.sax.
SAXParseException
The line number of the end of the text where the exception occurred.
getLineNumber(long)
- Method in interface com.sun.source.tree.
LineMap
Finds the line containing a position; a line termination
 character is on the line it terminates.
getLineOfOffset(int)
- Method in class javax.swing.
JTextArea
Translates an offset into the components text to a
 line number.
getLineSeparator()
- Method in class javax.swing.text.
AbstractWriter
Returns the string used to represent newlines.
getLineSpacing(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the line spacing setting.
getLineStartOffset(int)
- Method in class javax.swing.
JTextArea
Determines the offset of the start of the given line.
getLineWidth()
- Method in class java.awt.
BasicStroke
Returns the line width.
getLineWrap()
- Method in class javax.swing.
JTextArea
Gets the line-wrapping policy of the text area.
getLink()
- Method in interface org.w3c.dom.html.
HTMLBodyElement
Color of links that are not active and unvisited.
getLink(int)
- Method in interface javax.accessibility.
AccessibleHypertext
Returns the nth Link of this Hypertext document.
getLink(int)
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport
Returns the index into an array of hyperlinks that
 index.
getLinkCount()
- Method in interface javax.accessibility.
AccessibleHypertext
Returns the number of links within this hypertext document.
getLinkCount()
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport
Returns the number of links within this hypertext doc.
getLinkCursor()
- Method in class javax.swing.text.html.
HTMLEditorKit
Returns the cursor to use over hyper links.
getLinkedCallSiteLocation()
- Static method in class jdk.dynalink.
DynamicLinker
Returns a stack trace element describing the location of the
invokedynamic
call site currently being linked on the current
 thread.
getLinkerForClass(Class<?>)
- Method in class jdk.dynalink.beans.
BeansLinker
Returns a bean linker for a particular single class.
getLinkerServices()
- Method in class jdk.dynalink.
DynamicLinker
Returns the object representing the linker services of this class that
 are normally exposed to individual
language-specific linkers
.
getLinkExplanation()
- Method in exception class javax.naming.
LinkException
Retrieves the explanation associated with the problem encountered
 when resolving a link.
getLinkIndex(int)
- Method in interface javax.accessibility.
AccessibleHypertext
Returns the index into an array of hyperlinks that is associated with
 this character index, or -1 if there is no hyperlink associated with this
 index.
getLinkIndex(int)
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport
Returns the index into an array of hyperlinks that
 is associated with this character index, or -1 if there
 is no hyperlink associated with this index.
getLinkLocation(File)
- Method in class javax.swing.filechooser.
FileSystemView
Returns the regular file referenced by the specified link file if
 the specified file is a shell interpreted link.
getLinkName()
- Method in class javax.naming.
LinkRef
Retrieves the name of this link.
getLinkRemainingName()
- Method in exception class javax.naming.
LinkException
Retrieves the remaining unresolved portion of the link name.
getLinkResolvedName()
- Method in exception class javax.naming.
LinkException
Retrieves the leading portion of the link name that was resolved
 successfully.
getLinkResolvedObj()
- Method in exception class javax.naming.
LinkException
Retrieves the object to which resolution was successful.
getLinks()
- Method in interface org.w3c.dom.html.
HTMLDocument
A collection of all
AREA
elements and anchor (
A
) elements in a document with a value for the
href
attribute.
getLinkText(int)
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport
Returns the contiguous text within the document that
 is associated with this hyperlink.
getList()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Implementation of ComboPopup.getList().
getList()
- Method in interface javax.swing.plaf.basic.
ComboPopup
Returns the list that is being used to draw the items in the combo box.
getList()
- Method in class javax.swing.
SpinnerListModel
Returns the
List
that defines the sequence for this model.
getListCellRendererComponent(JList<?>, Object, int, boolean, boolean)
- Method in class javax.swing.
DefaultListCellRenderer
getListCellRendererComponent(JList<?>, Object, int, boolean, boolean)
- Method in class javax.swing.plaf.basic.
BasicComboBoxRenderer
getListCellRendererComponent(JList<? extends E>, E, int, boolean, boolean)
- Method in interface javax.swing.
ListCellRenderer
Return a component that has been configured to display the specified
 value.
getListDataListeners()
- Method in class javax.swing.
AbstractListModel
Returns an array of all the list data listeners
 registered on this
AbstractListModel
.
getListener()
- Method in class java.util.
EventListenerProxy
Returns the listener associated with the proxy.
getListenerCount()
- Method in class com.sun.java.accessibility.util.
AccessibilityListenerList
Returns the total number of listeners for this listener list.
getListenerCount()
- Method in class javax.swing.event.
EventListenerList
Returns the total number of listeners for this listener list.
getListenerCount(Class<?>)
- Method in class javax.swing.event.
EventListenerList
Returns the total number of listeners of the supplied type
 for this listener list.
getListenerCount(Class<? extends EventListener>)
- Method in class com.sun.java.accessibility.util.
AccessibilityListenerList
Return the total number of listeners of the supplied type
 for this listener list.
getListenerID()
- Method in class javax.management.remote.
TargetedNotification
The ID of the listener to which the notification is
    targeted.
getListenerList()
- Method in class com.sun.java.accessibility.util.
AccessibilityListenerList
Passes back the event listener list as an array of listener type, listener pairs.
getListenerList()
- Method in class javax.swing.event.
EventListenerList
Passes back the event listener list as an array
 of ListenerType-listener pairs.
getListenerMethodDescriptors()
- Method in class java.beans.
EventSetDescriptor
Gets the
MethodDescriptor
s of the target listener interface.
getListenerMethodName()
- Method in class java.beans.
EventHandler
Returns the name of the method that will trigger the action.
getListenerMethods()
- Method in class java.beans.
EventSetDescriptor
Gets the methods of the target listener interface.
getListeners(Class<T>)
- Method in class java.awt.
Button
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
Button
.
getListeners(Class<T>)
- Method in class java.awt.
Checkbox
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
Checkbox
.
getListeners(Class<T>)
- Method in class java.awt.
CheckboxMenuItem
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
CheckboxMenuItem
.
getListeners(Class<T>)
- Method in class java.awt.
Choice
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
Choice
.
getListeners(Class<T>)
- Method in class java.awt.
Component
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
Component
.
getListeners(Class<T>)
- Method in class java.awt.
Container
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
Container
.
getListeners(Class<T>)
- Method in class java.awt.dnd.
DragSource
Gets all the objects currently registered as
Foo
Listener
s upon this
DragSource
.
getListeners(Class<T>)
- Method in class java.awt.
List
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
List
.
getListeners(Class<T>)
- Method in class java.awt.
MenuItem
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
MenuItem
.
getListeners(Class<T>)
- Method in class java.awt.
Scrollbar
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
Scrollbar
.
getListeners(Class<T>)
- Method in class java.awt.
TextComponent
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
TextComponent
.
getListeners(Class<T>)
- Method in class java.awt.
TextField
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
TextField
.
getListeners(Class<T>)
- Method in class java.awt.
Window
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
Window
.
getListeners(Class<T>)
- Method in class javax.swing.
AbstractListModel
Returns an array of all the objects currently registered as
Foo
Listener
s
 upon this model.
getListeners(Class<T>)
- Method in class javax.swing.
AbstractSpinnerModel
Return an array of all the listeners of the given type that
 were added to this model.
getListeners(Class<T>)
- Method in class javax.swing.
DefaultBoundedRangeModel
Returns an array of all the objects currently registered as
Foo
Listener
s
 upon this model.
getListeners(Class<T>)
- Method in class javax.swing.
DefaultButtonModel
Returns an array of all the objects currently registered as
Foo
Listener
s
 upon this model.
getListeners(Class<T>)
- Method in class javax.swing.
DefaultListSelectionModel
Returns an array of all the objects currently registered as
Foo
Listener
s
 upon this model.
getListeners(Class<T>)
- Method in class javax.swing.
DefaultSingleSelectionModel
Returns an array of all the objects currently registered as
Foo
Listener
s
 upon this model.
getListeners(Class<T>)
- Method in class javax.swing.event.
EventListenerList
Return an array of all the listeners of the given type.
getListeners(Class<T>)
- Method in class javax.swing.
JComponent
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
JComponent
.
getListeners(Class<T>)
- Method in class javax.swing.table.
AbstractTableModel
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this
AbstractTableModel
.
getListeners(Class<T>)
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this model.
getListeners(Class<T>)
- Method in class javax.swing.text.
AbstractDocument
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this document.
getListeners(Class<T>)
- Method in class javax.swing.text.
DefaultCaret
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this caret.
getListeners(Class<T>)
- Method in class javax.swing.text.
StyleContext.NamedStyle
Return an array of all the listeners of the given type that
 were added to this model.
getListeners(Class<T>)
- Method in class javax.swing.
Timer
Returns an array of all the objects currently registered as
Foo
Listener
s
 upon this
Timer
.
getListeners(Class<T>)
- Method in class javax.swing.tree.
DefaultTreeModel
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this model.
getListeners(Class<T>)
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns an array of all the objects currently registered
 as
Foo
Listener
s
 upon this model.
getListeners(EventListener, Class<T>)
- Static method in class java.awt.
AWTEventMulticaster
Returns an array of all the objects chained as
Foo
Listener
s by the specified
java.util.EventListener
.
getListenerType()
- Method in class java.beans.
EventSetDescriptor
Gets the
Class
object for the target interface.
getListPainter(AttributeSet)
- Method in class javax.swing.text.html.
StyleSheet
Fetches the list formatter to use for the given set
 of CSS attributes.
getListSelectionListeners()
- Method in class javax.swing.
DefaultListSelectionModel
Returns an array of all the list selection listeners
 registered on this
DefaultListSelectionModel
.
getListSelectionListeners()
- Method in class javax.swing.
JList
Returns an array of all the
ListSelectionListener
s added
 to this
JList
by way of
addListSelectionListener
.
getListStyle()
- Method in interface org.w3c.dom.css.
Counter
This attribute is used for the style of the list.
getListStyle()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the list-style property definition in CSS2.
getListStyleImage()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the list-style-image property definition in CSS2.
getListStylePosition()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the list-style-position property definition in CSS2.
getListStyleType()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the list-style-type property definition in CSS2.
getLoadedClassCount()
- Method in interface java.lang.management.
ClassLoadingMXBean
Returns the number of classes that are currently loaded in the
 Java virtual machine.
getLoadedInstruments()
- Method in interface javax.sound.midi.
Synthesizer
Obtains a list of the instruments that are currently loaded onto this
Synthesizer
.
getLoadingImageIcon()
- Method in class javax.swing.text.html.
ImageView
Returns the icon to use while in the process of loading the image.
getLoadsSynchronously()
- Method in class javax.swing.text.html.
ImageView
Returns
true
if the image should be loaded when first asked for.
getLocalAddress()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns the local address on which the request was received.
getLocalAddress()
- Method in class java.net.
DatagramSocket
Gets the local address to which the socket is bound.
getLocalAddress()
- Method in class java.net.
Socket
Gets the local address to which the socket is bound.
getLocalAddress()
- Method in class java.nio.channels.
AsynchronousServerSocketChannel
Returns the socket address that this channel's socket is bound to.
getLocalAddress()
- Method in class java.nio.channels.
AsynchronousSocketChannel
Returns the socket address that this channel's socket is bound to.
getLocalAddress()
- Method in class java.nio.channels.
DatagramChannel
Returns the socket address that this channel's socket is bound to.
getLocalAddress()
- Method in interface java.nio.channels.
NetworkChannel
Returns the socket address that this channel's socket is bound to.
getLocalAddress()
- Method in class java.nio.channels.
ServerSocketChannel
Returns the socket address that this channel's socket is bound to.
getLocalAddress()
- Method in class java.nio.channels.
SocketChannel
Returns the socket address that this channel's socket is bound to.
getLocalBounds(Component)
- Static method in class javax.swing.
SwingUtilities
Return the rectangle (0,0,bounds.width,bounds.height) for the component
aComponent
getLocalCertificateChain()
- Method in class java.net.
SecureCacheResponse
Returns the certificate chain that were sent to the server during
 handshaking of the original connection that retrieved the
 network resource.
getLocalCertificates()
- Method in class javax.net.ssl.
HandshakeCompletedEvent
Returns the certificate(s) that were sent to the peer during
 handshaking.
getLocalCertificates()
- Method in class javax.net.ssl.
HttpsURLConnection
Returns the certificate(s) that were sent to the server during
 handshaking.
getLocalCertificates()
- Method in interface javax.net.ssl.
SSLSession
Returns the certificate(s) that were sent to the peer during
 handshaking.
getLocale()
- Method in class com.sun.java.accessibility.util.
Translator
Gets the
Locale
of the component.
getLocale()
- Method in class java.applet.
Applet
Deprecated.
Gets the locale of the applet.
getLocale()
- Method in class java.awt.
Component.AccessibleAWTComponent
Returns the locale of this object.
getLocale()
- Method in class java.awt.
Component
Gets the locale of this component.
getLocale()
- Method in class java.awt.im.
InputContext
Returns the current locale of the current input method or keyboard
 layout.
getLocale()
- Method in interface java.awt.im.spi.
InputMethod
Returns the current input locale.
getLocale()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Gets the locale of the component.
getLocale()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Returns the locale of this object.
getLocale()
- Method in class java.awt.
Window
Gets the
Locale
object that is associated
 with this window, if the locale has been set.
getLocale()
- Method in class java.beans.beancontext.
BeanContextSupport
Gets the locale for this
BeanContext
.
getLocale()
- Method in class java.text.
DecimalFormatSymbols
Returns locale used to create this instance.
getLocale()
- Method in class java.text.
MessageFormat
Gets the locale that's used when creating or comparing subformats.
getLocale()
- Method in class java.time.format.
DateTimeFormatter
Gets the locale to be used during formatting.
getLocale()
- Method in class java.util.
ResourceBundle
Returns the locale of this resource bundle.
getLocale()
- Method in class javax.accessibility.
AccessibleContext
Gets the locale of the component.
getLocale()
- Method in interface javax.annotation.processing.
ProcessingEnvironment
Returns the current locale or
null
if no locale is in
 effect.
getLocale()
- Method in class javax.imageio.
ImageReader
Returns the currently set
Locale
, or
null
if none has been set.
getLocale()
- Method in class javax.imageio.
ImageWriteParam
Returns the currently set
Locale
, or
null
if only a default
Locale
is
 supported.
getLocale()
- Method in class javax.imageio.
ImageWriter
Returns the currently set
Locale
, or
null
if none has been set.
getLocale()
- Method in class javax.print.attribute.
TextSyntax
Returns this text attribute's text string's natural language (locale).
getLocale()
- Method in class javax.security.auth.callback.
LanguageCallback
Get the retrieved
Locale
.
getLocale()
- Method in class javax.swing.
ImageIcon.AccessibleImageIcon
Returns the locale of this object.
getLocale()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getLocale()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the locale of the component.
getLocale()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Gets the locale of the component.
getLocale()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Gets the locale of the component.
getLocale()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getLocale()
- Method in class jdk.javadoc.doclet.
StandardDoclet
Returns the locale for this doclet.
getLocalElements()
- Method in interface com.sun.source.tree.
Scope
Returns the elements directly contained in this scope.
getLocalGraphicsEnvironment()
- Static method in class java.awt.
GraphicsEnvironment
Returns the local
GraphicsEnvironment
.
getLocalHost()
- Static method in class java.net.
InetAddress
Returns the address of the local host.
getLocalizedCompressionTypeName()
- Method in class javax.imageio.
ImageWriteParam
Returns a localized version of the name of the current
 compression type, using the
Locale
returned by
getLocale
.
getLocalizedDateTimePattern(String, Chronology, Locale)
- Static method in class java.time.format.
DateTimeFormatterBuilder
Returns the formatting pattern for the requested template for a locale and chronology.
getLocalizedDateTimePattern(FormatStyle, FormatStyle, Chronology, Locale)
- Static method in class java.time.format.
DateTimeFormatterBuilder
Gets the formatting pattern for date and time styles for a locale and chronology.
getLocalizedLogger(String, ResourceBundle, Module)
- Method in class java.lang.
System.LoggerFinder
Returns a localizable instance of
Logger
for the given
module
.
getLocalizedMessage()
- Method in exception class java.lang.
Throwable
Creates a localized description of this throwable.
getLocalizedName()
- Method in class java.util.logging.
Level
Return the localized string name of the Level, for
 the current default locale.
getLocalName()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Equivalent to
getNodeName
.
getLocalName()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getLocalName()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the (local) name of the current event.
getLocalName()
- Method in interface org.w3c.dom.
Node
Returns the local part of the qualified name of this node.
getLocalName(int)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's local name by index.
getLocalName(int)
- Method in class org.xml.sax.helpers.
AttributesImpl
Return an attribute's local name.
getLocalPart()
- Method in class javax.xml.namespace.
QName
Get the local part of this
QName
.
getLocalPatternChars()
- Method in class java.text.
DateFormatSymbols
Gets localized date-time pattern characters.
getLocalPort()
- Method in class java.net.
DatagramSocket
Returns the port number on the local host to which this socket
 is bound.
getLocalPort()
- Method in class java.net.
DatagramSocketImpl
Gets the local port.
getLocalPort()
- Method in class java.net.
ServerSocket
Returns the port number on which this socket is listening.
getLocalPort()
- Method in class java.net.
Socket
Returns the local port number to which this socket is bound.
getLocalPort()
- Method in class java.net.
SocketImpl
Returns the value of this socket's
localport
field.
getLocalPrincipal()
- Method in class java.net.
SecureCacheResponse
Returns the principal that was sent to the server during
 handshaking in the original connection that retrieved the
 network resource.
getLocalPrincipal()
- Method in class javax.net.ssl.
HandshakeCompletedEvent
Returns the principal that was sent to the peer during handshaking.
getLocalPrincipal()
- Method in class javax.net.ssl.
HttpsURLConnection
Returns the principal that was sent to the server during handshaking.
getLocalPrincipal()
- Method in interface javax.net.ssl.
SSLSession
Returns the principal that was sent to the peer during handshaking.
getLocalSocketAddress()
- Method in class java.net.
DatagramSocket
Returns the address of the endpoint this socket is bound to.
getLocalSocketAddress()
- Method in class java.net.
ServerSocket
Returns the address of the endpoint this socket is bound to.
getLocalSocketAddress()
- Method in class java.net.
Socket
Returns the address of the endpoint this socket is bound to.
getLocalSupportedSignatureAlgorithms()
- Method in class javax.net.ssl.
ExtendedSSLSession
Obtains an array of supported signature algorithms that the local side
 is willing to use.
getLocalTime()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Gets the local time of day of the transition which must be checked with
ZoneOffsetTransitionRule.isMidnightEndOfDay()
.
getLocation()
- Method in class com.sun.java.accessibility.util.
Translator
Returns the location of the object relative to parent.
getLocation()
- Method in class java.awt.
Component.AccessibleAWTComponent
Gets the location of the object relative to the parent in the form
 of a point specifying the object's top-left corner in the screen's
 coordinate space.
getLocation()
- Method in class java.awt.
Component
Gets the location of this component in the form of a
 point specifying the component's top-left corner.
getLocation()
- Method in class java.awt.dnd.
DragSourceEvent
This method returns a
Point
indicating the cursor
 location in screen coordinates at the moment this event occurred, or
null
if the cursor location is not specified for this
 event.
getLocation()
- Method in class java.awt.dnd.
DropTargetDragEvent
This method returns a
Point
indicating the
Cursor
's current
 location within the
Component'
s
 coordinates.
getLocation()
- Method in class java.awt.dnd.
DropTargetDropEvent
This method returns a
Point
indicating the
Cursor
's current
 location in the
Component
's coordinates.
getLocation()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Gets the location of the object relative to the parent in the
 form of a point specifying the object's top-left corner in the
 screen's coordinate space.
getLocation()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Gets the location of the object relative to the parent in the form
 of a point specifying the object's top-left corner in the screen's
 coordinate space.
getLocation()
- Method in class java.awt.
Point
Returns the location of this point.
getLocation()
- Method in class java.awt.
PointerInfo
Returns the
Point
that represents the coordinates of the pointer
 on the screen.
getLocation()
- Method in class java.awt.
Rectangle
Returns the location of this
Rectangle
.
getLocation()
- Method in exception class java.net.
HttpRetryException
Returns the value of the Location header field if the
 error resulted from redirection.
getLocation()
- Method in class java.security.
CodeSource
Returns the location associated with this
CodeSource
.
getLocation()
- Method in interface javax.accessibility.
AccessibleComponent
Gets the location of the object relative to the parent in the form of a
 point specifying the object's top-left corner in the screen's coordinate
 space.
getLocation()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getLocation()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Gets the location of the object relative to the parent
 in the form of a point specifying the object's
 top-left corner in the screen's coordinate space.
getLocation()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
getLocation()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getLocation()
- Method in interface javax.xml.stream.events.
XMLEvent
Return the location of this event.
getLocation()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getLocation()
- Method in exception class javax.xml.stream.
XMLStreamException
Gets the location of the exception
getLocation()
- Method in interface javax.xml.stream.
XMLStreamReader
Return the current location of the processor.
getLocation()
- Method in interface org.w3c.dom.
DOMError
The location of the error.
getLocation(Point)
- Method in class java.awt.
Component
Stores the x,y origin of this component into "return value"
rv
and return
rv
.
getLocation(Point)
- Method in class javax.swing.
JComponent
Stores the x,y origin of this component into "return value"
rv
and returns
rv
.
getLocation(JavaFileManager.Location)
- Method in interface javax.tools.
StandardJavaFileManager
Returns the search path associated with the given location.
getLocationAsPaths(JavaFileManager.Location)
- Method in interface javax.tools.
StandardJavaFileManager
Returns the search path associated with the given location.
getLocationAsString()
- Method in exception class javax.xml.transform.
TransformerException
Get the location information as a string.
getLocationForModule(JavaFileManager.Location, String)
- Method in class javax.tools.
ForwardingJavaFileManager
getLocationForModule(JavaFileManager.Location, String)
- Method in interface javax.tools.
JavaFileManager
Gets a location for a named module within a location, which may be either
 a module-oriented location or an output location.
getLocationForModule(JavaFileManager.Location, JavaFileObject)
- Method in class javax.tools.
ForwardingJavaFileManager
getLocationForModule(JavaFileManager.Location, JavaFileObject)
- Method in interface javax.tools.
JavaFileManager
Gets a location for the module containing a specific file
 to be found within a location, which may be either
 a module-oriented location or an output location.
getLocationInJTree()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
Returns the relative location of the node
getLocationOffset(int, int)
- Method in interface java.awt.im.
InputMethodRequests
Gets the offset within the composed text for the specified absolute x
 and y coordinates on the screen.
getLocationOnScreen()
- Method in class com.sun.java.accessibility.util.
Translator
Returns the location of the object on the screen.
getLocationOnScreen()
- Method in class java.awt.
Component.AccessibleAWTComponent
Returns the location of the object on the screen.
getLocationOnScreen()
- Method in class java.awt.
Component
Gets the location of this component in the form of a point
 specifying the component's top-left corner in the screen's
 coordinate space.
getLocationOnScreen()
- Method in class java.awt.event.
MouseEvent
Returns the absolute x, y position of the event.
getLocationOnScreen()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Returns the location of the object on the screen.
getLocationOnScreen()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Returns the location of the object on the screen.
getLocationOnScreen()
- Method in interface javax.accessibility.
AccessibleComponent
Returns the location of the object on the screen.
getLocationOnScreen()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getLocationOnScreen()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
Returns the location of the object on the screen.
getLocationOnScreen()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
getLocationOnScreen()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getLocator()
- Method in exception class javax.xml.transform.
TransformerException
Method getLocator retrieves an instance of a SourceLocator
 object that specifies where an error occurred.
getLockedMonitors()
- Method in class java.lang.management.
ThreadInfo
Returns an array of
MonitorInfo
objects, each of which
 represents an object monitor currently locked by the thread
 associated with this
ThreadInfo
.
getLockedStackDepth()
- Method in class java.lang.management.
MonitorInfo
Returns the depth in the stack trace where the object monitor
 was locked.
getLockedStackFrame()
- Method in class java.lang.management.
MonitorInfo
Returns the stack frame that locked the object monitor.
getLockedSynchronizers()
- Method in class java.lang.management.
ThreadInfo
Returns an array of
LockInfo
objects, each of which
 represents an
ownable
 synchronizer
currently locked by the thread associated with
 this
ThreadInfo
.
getLockInfo()
- Method in class java.lang.management.
ThreadInfo
Returns the
LockInfo
of an object for which
 the thread associated with this
ThreadInfo
is blocked waiting.
getLockingKeyState(int)
- Method in class java.awt.
Toolkit
Returns whether the given locking key on the keyboard is currently in
 its "on" state.
getLockName()
- Method in class java.lang.management.
ThreadInfo
Returns the
string representation
of an object for which the thread associated with this
ThreadInfo
is blocked waiting.
getLockOwnerId()
- Method in class java.lang.management.
ThreadInfo
Returns the ID of the thread which owns the object
 for which the thread associated with this
ThreadInfo
is blocked waiting.
getLockOwnerName()
- Method in class java.lang.management.
ThreadInfo
Returns the name of the thread which owns the object
 for which the thread associated with this
ThreadInfo
is blocked waiting.
getLog()
- Static method in class java.rmi.server.
RemoteServer
Returns stream for the RMI call log.
getLogger()
- Static method in class javax.sql.rowset.spi.
SyncFactory
Returns the logging object for applications to retrieve
 synchronization events posted by SyncProvider implementations.
getLogger(String)
- Static method in class java.lang.
System
Returns an instance of
Logger
for the caller's
 use.
getLogger(String)
- Static method in class java.util.logging.
Logger
Find or create a logger for a named subsystem.
getLogger(String)
- Method in class java.util.logging.
LogManager
Method to find a named logger.
getLogger(String, Module)
- Method in class java.lang.
System.LoggerFinder
Returns an instance of
Logger
for the given
module
.
getLogger(String, String)
- Static method in class java.util.logging.
Logger
Find or create a logger for a named subsystem.
getLogger(String, ResourceBundle)
- Static method in class java.lang.
System
Returns a localizable instance of
Logger
for the caller's use.
getLoggerFinder()
- Static method in class java.lang.
System.LoggerFinder
Returns the
LoggerFinder
instance.
getLoggerLevel(String)
- Method in interface java.lang.management.
PlatformLoggingMXBean
Gets the name of the log
level
associated with the specified logger.
getLoggerLevel(String)
- Method in interface java.util.logging.
LoggingMXBean
Deprecated.
Gets the name of the log level associated with the specified logger.
getLoggerName()
- Method in class java.util.logging.
LogRecord
Get the source Logger's name.
getLoggerNames()
- Method in interface java.lang.management.
PlatformLoggingMXBean
Returns the list of the currently registered
logger
names.
getLoggerNames()
- Method in interface java.util.logging.
LoggingMXBean
Deprecated.
Returns the list of currently registered logger names.
getLoggerNames()
- Method in class java.util.logging.
LogManager
Get an enumeration of known logger names.
getLoggingMXBean()
- Static method in class java.util.logging.
LogManager
Deprecated.
java.util.logging.LoggingMXBean
is deprecated and
      replaced with
java.lang.management.PlatformLoggingMXBean
. Use
ManagementFactory.getPlatformMXBean
(PlatformLoggingMXBean.class)
      instead.
getLogicalBounds()
- Method in class java.awt.font.
GlyphVector
Returns the logical bounds of this
GlyphVector
.
getLogicalHighlightShape(int, int)
- Method in class java.awt.font.
TextLayout
Returns a
Shape
enclosing the logical selection in the
 specified range, extended to the natural bounds of this
TextLayout
.
getLogicalHighlightShape(int, int, Rectangle2D)
- Method in class java.awt.font.
TextLayout
Returns a
Shape
enclosing the logical selection in the
 specified range, extended to the specified
bounds
.
getLogicalRangesForVisualSelection(TextHitInfo, TextHitInfo)
- Method in class java.awt.font.
TextLayout
Returns the logical ranges of text corresponding to a visual selection.
getLogicalStyle()
- Method in class javax.swing.
JTextPane
Fetches the logical style assigned to the paragraph represented
 by the current position of the caret, or
null
.
getLogicalStyle(int)
- Method in class javax.swing.text.
DefaultStyledDocument
Fetches the logical style assigned to the paragraph
 represented by the given position.
getLogicalStyle(int)
- Method in interface javax.swing.text.
StyledDocument
Gets a logical style for a given position in a paragraph.
getLogicalView(FlowView)
- Method in class javax.swing.text.
FlowView.FlowStrategy
This method gives flow strategies access to the logical
 view of the FlowView.
getLoginModuleName()
- Method in class javax.security.auth.login.
AppConfigurationEntry
Get the class name of the configured
LoginModule
.
getLoginTimeout()
- Static method in class java.sql.
DriverManager
Gets the maximum time in seconds that a driver can wait
 when attempting to log in to a database.
getLoginTimeout()
- Method in interface javax.sql.
CommonDataSource
Gets the maximum time in seconds that this data source can wait
 while attempting to connect to a database.
getLoginTimeout()
- Method in interface javax.sql.
ConnectionPoolDataSource
Gets the maximum time in seconds that this data source can wait
 while attempting to connect to a database.
getLoginTimeout()
- Method in interface javax.sql.
DataSource
Gets the maximum time in seconds that this data source can wait
 while attempting to connect to a database.
getLoginTimeout()
- Method in interface javax.sql.
XADataSource
Gets the maximum time in seconds that this data source can wait
 while attempting to connect to a database.
getLogManager()
- Static method in class java.util.logging.
LogManager
Returns the global LogManager object.
getLogStream()
- Static method in class java.sql.
DriverManager
Deprecated.
Use
getLogWriter
getLogTimers()
- Static method in class javax.swing.
Timer
Returns
true
if logging is enabled.
getLogWriter()
- Static method in class java.sql.
DriverManager
Retrieves the log writer.
getLogWriter()
- Method in interface javax.sql.
CommonDataSource
Retrieves the log writer for this
DataSource
object.
getLogWriter()
- Method in interface javax.sql.
ConnectionPoolDataSource
Retrieves the log writer for this
DataSource
object.
getLogWriter()
- Method in interface javax.sql.
DataSource
Retrieves the log writer for this
DataSource
object.
getLogWriter()
- Method in interface javax.sql.
XADataSource
Retrieves the log writer for this
DataSource
object.
getLong()
- Method in class java.nio.
ByteBuffer
Relative
get
method for reading a long value.
getLong(int)
- Method in class java.nio.
ByteBuffer
Absolute
get
method for reading a long value.
getLong(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
BIGINT
parameter
 as a
long
in the Java programming language.
getLong(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
long
in the Java programming language.
getLong(Object)
- Method in class java.lang.reflect.
Field
Gets the value of a static or instance field of type
long
or of another primitive type convertible to
 type
long
via a widening conversion.
getLong(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object, as a
long
.
getLong(String)
- Static method in class java.lang.
Long
Determines the
long
value of the system property
 with the specified name.
getLong(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
BIGINT
parameter as a
long
in the Java programming language.
getLong(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
long
in the Java programming language.
getLong(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
long
or of another primitive
 type that is convertible to type
long
by a widening conversion.
getLong(String, long)
- Static method in class java.lang.
Long
Determines the
long
value of the system property
 with the specified name.
getLong(String, long)
- Method in class java.util.prefs.
AbstractPreferences
Implements the
getLong
method as per the specification in
Preferences.getLong(String,long)
.
getLong(String, long)
- Method in class java.util.prefs.
Preferences
Returns the long value represented by the string associated with the
 specified key in this preference node.
getLong(String, Long)
- Static method in class java.lang.
Long
Returns the
long
value of the system property with
 the specified name.
getLong(TemporalField)
- Method in interface java.time.chrono.
ChronoZonedDateTime
getLong(TemporalField)
- Method in interface java.time.chrono.
Era
Gets the value of the specified field from this era as a
long
.
getLong(TemporalField)
- Method in class java.time.chrono.
HijrahDate
getLong(TemporalField)
- Method in class java.time.chrono.
JapaneseDate
getLong(TemporalField)
- Method in class java.time.chrono.
MinguoDate
getLong(TemporalField)
- Method in class java.time.chrono.
ThaiBuddhistDate
getLong(TemporalField)
- Method in enum class java.time.
DayOfWeek
Gets the value of the specified field from this day-of-week as a
long
.
getLong(TemporalField)
- Method in class java.time.
Instant
Gets the value of the specified field from this instant as a
long
.
getLong(TemporalField)
- Method in class java.time.
LocalDate
Gets the value of the specified field from this date as a
long
.
getLong(TemporalField)
- Method in class java.time.
LocalDateTime
Gets the value of the specified field from this date-time as a
long
.
getLong(TemporalField)
- Method in class java.time.
LocalTime
Gets the value of the specified field from this time as a
long
.
getLong(TemporalField)
- Method in enum class java.time.
Month
Gets the value of the specified field from this month-of-year as a
long
.
getLong(TemporalField)
- Method in class java.time.
MonthDay
Gets the value of the specified field from this month-day as a
long
.
getLong(TemporalField)
- Method in class java.time.
OffsetDateTime
Gets the value of the specified field from this date-time as a
long
.
getLong(TemporalField)
- Method in class java.time.
OffsetTime
Gets the value of the specified field from this time as a
long
.
getLong(TemporalField)
- Method in interface java.time.temporal.
TemporalAccessor
Gets the value of the specified field as a
long
.
getLong(TemporalField)
- Method in class java.time.
Year
Gets the value of the specified field from this year as a
long
.
getLong(TemporalField)
- Method in class java.time.
YearMonth
Gets the value of the specified field from this year-month as a
long
.
getLong(TemporalField)
- Method in class java.time.
ZonedDateTime
Gets the value of the specified field from this date-time as a
long
.
getLong(TemporalField)
- Method in class java.time.
ZoneOffset
Gets the value of the specified field from this offset as a
long
.
getLongDesc()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
URI designating a long description of this image or frame.
getLongDesc()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
URI designating a long description of this image or frame.
getLongDesc()
- Method in interface org.w3c.dom.html.
HTMLImageElement
URI designating a long description of this image or frame.
getLongFramePosition()
- Method in interface javax.sound.sampled.
DataLine
Obtains the current position in the audio data, in sample frames.
getLongParameter(int)
- Method in class java.awt.image.renderable.
ParameterBlock
A convenience method to return a parameter as a long.
getLongThreadID()
- Method in class java.util.logging.
LogRecord
Get a thread identifier for the thread where message originated
getLookAndFeel()
- Static method in class javax.swing.
UIManager
Returns the current look and feel or
null
.
getLookAndFeelDefaults()
- Static method in class javax.swing.
UIManager
Returns the
UIDefaults
from the current look and feel,
 that were obtained at the time the look and feel was installed.
getLookup()
- Method in class jdk.dynalink.
SecureLookupSupplier
Returns the lookup secured by this
SecureLookupSupplier
.
getLookupPrivileged()
- Method in class jdk.dynalink.
SecureLookupSupplier
Returns the value of
SecureLookupSupplier.getLookup()
without a security check.
getLoopbackAddress()
- Static method in class java.net.
InetAddress
Returns the loopback address.
getLoopbackMode()
- Method in class java.net.
MulticastSocket
Deprecated.
Use
DatagramSocket.getOption(SocketOption)
with
StandardSocketOptions.IP_MULTICAST_LOOP
instead.
getLoopCount()
- Method in interface javax.sound.midi.
Sequencer
Obtains the number of repetitions for playback.
getLoopEndPoint()
- Method in interface javax.sound.midi.
Sequencer
Obtains the end position of the loop, in MIDI ticks.
getLoopStartPoint()
- Method in interface javax.sound.midi.
Sequencer
Obtains the start position of the loop, in MIDI ticks.
getLowerBound()
- Method in interface javax.lang.model.type.
TypeVariable
Returns the lower bound of this type variable.
getLowerBounds()
- Method in interface java.lang.reflect.
WildcardType
Returns an array of
Type
objects representing the
 lower bound(s) of this type variable.
getLoweredBevelBorderUIResource()
- Static method in class javax.swing.plaf.
BorderUIResource
Returns a lowered bevel border UI resource.
getLowestSetBit()
- Method in class java.math.
BigInteger
Returns the index of the rightmost (lowest-order) one bit in this
 BigInteger (the number of zero bits to the right of the rightmost
 one bit).
getLowestValue()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the smallest value that has an entry in the label table.
getLowestValueLabel()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the label that corresponds to the highest slider value in the
 label table.
getLowSrc()
- Method in interface org.w3c.dom.html.
HTMLImageElement
URI designating the source of this image, for low-resolution output.
getLowThreshold()
- Method in class javax.management.monitor.
GaugeMonitor
Gets the low threshold value common to all observed MBeans.
getLowThreshold()
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Gets the low threshold value.
getLSB()
- Method in class java.awt.font.
GlyphMetrics
Returns the left (top) side bearing of the glyph.
getLub(CatchTree)
- Method in class com.sun.source.util.
Trees
Returns the lub of an exception parameter declared in a catch clause.
getM()
- Method in class java.security.spec.
ECFieldF2m
Returns the value
m
of this characteristic
 2 finite field.
getMacLength()
- Method in class javax.crypto.
Mac
Returns the length of the MAC in bytes.
getMagicCaretPosition()
- Method in interface javax.swing.text.
Caret
Gets the current caret visual location.
getMagicCaretPosition()
- Method in class javax.swing.text.
DefaultCaret
Gets the saved caret position.
getMainAttributes()
- Method in class java.net.
JarURLConnection
Returns the main Attributes for the JAR file for this
 connection.
getMainAttributes()
- Method in class java.util.jar.
Manifest
Returns the main Attributes for the Manifest.
getMajor()
- Method in exception class org.ietf.jgss.
GSSException
Returns the GSS-API level major error code for the problem causing
 this exception to be thrown.
getMajorAxis()
- Method in class javax.swing.text.
AsyncBoxView
Fetch the major axis (the axis the children
 are tiled along).
getMajorOffset()
- Method in class javax.swing.text.
AsyncBoxView.ChildState
Get the offset along the major axis.
getMajorSpan()
- Method in class javax.swing.text.
AsyncBoxView.ChildState
What is the span along the major axis.
getMajorString()
- Method in exception class org.ietf.jgss.
GSSException
Returns a string explaining the GSS-API level major error code in
 this exception.
getMajorTickSpacing()
- Method in class javax.swing.
JSlider
This method returns the major tick spacing.
getMajorVersion()
- Method in class java.awt.color.
ICC_Profile
Returns profile major version.
getMajorVersion()
- Method in interface java.sql.
Driver
Retrieves the driver's major version number.
getManagementSpecVersion()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the version of the specification for the management interface
 implemented by the running Java virtual machine.
getManifest()
- Method in class java.net.
JarURLConnection
Returns the Manifest for this connection, or null if none.
getManifest()
- Method in class java.util.jar.
JarFile
Returns the jar file manifest, or
null
if none.
getManifest()
- Method in class java.util.jar.
JarInputStream
Returns the
Manifest
for this JAR file when it is the first entry
 in the stream (or the second entry if the first entry in the stream is
META-INF/
and the second entry is
META-INF/MANIFEST.MF
), or
null
otherwise.
getMap()
- Method in class java.util.concurrent.
ConcurrentHashMap.KeySetView
Returns the map backing this view.
getMappedValue()
- Method in class java.util.concurrent.
ConcurrentHashMap.KeySetView
Returns the default mapped value for additions,
 or
null
if additions are not supported.
getMapSize()
- Method in class java.awt.image.
IndexColorModel
Returns the size of the color/alpha component arrays in this
IndexColorModel
.
getMargin()
- Method in class javax.swing.
AbstractButton
Returns the margin between the button's border and
 the label.
getMargin()
- Method in class javax.swing.
JMenuBar
Returns the margin between the menubar's border and
 its menus.
getMargin()
- Method in class javax.swing.
JPopupMenu
Returns the margin, in pixels, between the popup menu's border and
 its containers.
getMargin()
- Method in class javax.swing.
JToolBar
Returns the margin between the tool bar's border and
 its buttons.
getMargin()
- Method in class javax.swing.text.
JTextComponent
Returns the margin between the text component's border and
 its text.
getMargin()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin property definition in CSS2.
getMarginBottom()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin-bottom property definition in CSS2.
getMarginHeight()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
Frame margin height, in pixels.
getMarginHeight()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
Frame margin height, in pixels.
getMarginLeft()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin-left property definition in CSS2.
getMarginRight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin-right property definition in CSS2.
getMarginTop()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the margin-top property definition in CSS2.
getMarginWidth()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
Frame margin width, in pixels.
getMarginWidth()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
Frame margin width, in pixels.
getMark()
- Method in class javax.swing.event.
CaretEvent
Fetches the location of other end of a logical
 selection.
getMark()
- Method in interface javax.swing.text.
Caret
Fetches the current position of the mark.
getMark()
- Method in class javax.swing.text.
DefaultCaret
Fetches the current position of the mark.
getMarkBias()
- Method in class javax.swing.text.
DefaultCaret
Returns the bias of the mark.
getMarkerOffset()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the marker-offset property definition in CSS2.
getMarks()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the marks property definition in CSS2.
getMask()
- Method in class javax.swing.text.
MaskFormatter
Returns the formatting mask.
getMask(int)
- Method in class java.awt.image.
PackedColorModel
Returns the mask indicating which bits in a pixel
 contain the specified color/alpha sample.
getMaskForButton(int)
- Static method in class java.awt.event.
InputEvent
A method to obtain a mask for any existing mouse button.
getMasks()
- Method in class java.awt.image.
PackedColorModel
Returns a mask array indicating which bits in a pixel
 contain the color and alpha samples.
getMasterSyncMode()
- Method in interface javax.sound.midi.
Sequencer
Obtains the current master synchronization mode for this sequencer.
getMasterSyncModes()
- Method in interface javax.sound.midi.
Sequencer
Obtains the set of master synchronization modes supported by this
 sequencer.
getMatchAllSubjectAltNames()
- Method in class java.security.cert.
X509CertSelector
Indicates if the
X509Certificate
must contain all
 or at least one of the subjectAlternativeNames
 specified in the
setSubjectAlternativeNames
or
addSubjectAlternativeName
methods.
getMatchColumnIndexes()
- Method in interface javax.sql.rowset.
Joinable
Retrieves the indexes of the match columns that were set for this
RowSet
object with the method
setMatchColumn(int[] columnIdxes)
.
getMatchColumnNames()
- Method in interface javax.sql.rowset.
Joinable
Retrieves the names of the match columns that were set for this
RowSet
object with the method
setMatchColumn(String [] columnNames)
.
getMatchingRuleID()
- Method in class javax.naming.ldap.
SortKey
Retrieves the matching rule ID used to order the attribute values.
getMatrix()
- Method in class java.awt.color.
ICC_ProfileRGB
Returns a 3x3
float
matrix constructed from the X, Y, and Z
 components of the profile's
redColorantTag
,
greenColorantTag
, and
blueColorantTag
.
getMatrix()
- Method in class java.awt.image.
BandCombineOp
Returns a copy of the linear combination matrix.
getMatrix()
- Method in class java.awt.print.
PageFormat
Returns a transformation matrix that translates user
 space rendering to the requested orientation
 of the page.
getMatrix(double[])
- Method in class java.awt.geom.
AffineTransform
Retrieves the 6 specifiable values in the 3x3 affine transformation
 matrix and places them into an array of double precisions values.
getMatteColor()
- Method in class javax.swing.border.
MatteBorder
Returns the color used for tiling the border or null
 if a tile icon is being used.
getMax()
- Method in class java.lang.management.
MemoryUsage
Returns the maximum amount of memory in bytes that can be
 used for memory management.
getMax()
- Method in class java.util.
DoubleSummaryStatistics
Returns the maximum recorded value,
Double.NaN
if any recorded
 value was NaN or
Double.NEGATIVE_INFINITY
if no values were
 recorded.
getMax()
- Method in class java.util.
IntSummaryStatistics
Returns the maximum value recorded, or
Integer.MIN_VALUE
if no
 values have been recorded.
getMax()
- Method in class java.util.
LongSummaryStatistics
Returns the maximum value recorded, or
Long.MIN_VALUE
if no
 values have been recorded
getMaxAdvance()
- Method in class java.awt.
FontMetrics
Returns an estimate of the maximum advance width of any character
 in the
Font
described by this
FontMetrics
object,
 with important caveats, enumerated below.
getMaxAge()
- Method in class java.net.
HttpCookie
Returns the maximum age of the cookie, specified in seconds.
getMaxAge()
- Method in class jdk.jfr.
Recording
Returns the length of time that the data is kept in the disk repository
 before it is removed.
getMaxAge()
- Method in class jdk.management.jfr.
RecordingInfo
Returns how many seconds data should be kept on disk, or
0
if
 data is to be kept forever.
getMaxAllowedKeyLength(String)
- Static method in class javax.crypto.
Cipher
Returns the maximum key length for the specified transformation
 according to the installed JCE jurisdiction policy files.
getMaxAllowedParameterSpec(String)
- Static method in class javax.crypto.
Cipher
Returns an {code AlgorithmParameterSpec} object which contains
 the maximum
Cipher
parameter value according to the
 jurisdiction policy file.
getMaxAscent()
- Method in class java.awt.
FontMetrics
Determines the maximum ascent of the
Font
described by this
FontMetrics
object.
getMaxBinaryLiteralLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of hex characters this database allows in an
 inline binary literal.
getMaxBufferCapacity()
- Method in class java.util.concurrent.
SubmissionPublisher
Returns the maximum per-subscriber buffer capacity.
getMaxBufferSize()
- Method in class javax.sound.sampled.
DataLine.Info
Obtains the maximum buffer size supported by the data line.
getMaxCatalogNameLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters that this database allows in a
 catalog name.
getMaxChainLength()
- Method in class jdk.dynalink.support.
ChainedCallSite
The maximum number of method handles in the chain.
getMaxCharactersPerLineCount()
- Method in class javax.swing.
JOptionPane
Returns the maximum number of characters to place on a line in a
 message.
getMaxCharactersPerLineCount()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Returns the maximum number of characters to place on a line.
getMaxCharBounds(FontRenderContext)
- Method in class java.awt.
Font
Returns the bounds for the character with the maximum
 bounds as defined in the specified
FontRenderContext
.
getMaxCharBounds(Graphics)
- Method in class java.awt.
FontMetrics
Returns the bounds for the character with the maximum bounds
 in the specified
Graphics
context.
getMaxCharLiteralLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters this database allows
 for a character literal.
getMaxColumnNameLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters this database allows
 for a column name.
getMaxColumnsInGroupBy()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of columns this database allows in a
GROUP BY
clause.
getMaxColumnsInIndex()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of columns this database allows in an index.
getMaxColumnsInOrderBy()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of columns this database allows in an
ORDER BY
clause.
getMaxColumnsInSelect()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of columns this database allows in a
SELECT
list.
getMaxColumnsInTable()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of columns this database allows in a table.
getMaxConnections()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of concurrent connections to this
 database that are possible.
getMaxCRL()
- Method in class java.security.cert.
X509CRLSelector
Returns the maxCRLNumber criterion.
getMaxCursorNameLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters that this database allows in a
 cursor name.
getMaxDecent()
- Method in class java.awt.
FontMetrics
Deprecated.
As of JDK version 1.1.1,
 replaced by
getMaxDescent()
.
getMaxDegree()
- Method in class javax.management.relation.
RoleInfo
Returns maximum degree for corresponding role reference.
getMaxDescent()
- Method in class java.awt.
FontMetrics
Determines the maximum descent of the
Font
described by this
FontMetrics
object.
getMaxExpansion(int)
- Method in class java.text.
CollationElementIterator
Return the maximum length of any expansion sequences that end
 with the specified comparison order.
getMaxFieldSize()
- Method in interface java.sql.
Statement
Retrieves the maximum number of bytes that can be
 returned for character and binary column values in a
ResultSet
object produced by this
Statement
object.
getMaxFieldSize()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves the maximum number of bytes that can be used for a column
 value in this
RowSet
object.
getMaxFieldSize()
- Method in interface javax.sql.
RowSet
Retrieves the maximum number of bytes that may be returned
 for certain column values.
getMaxFileDescriptorCount()
- Method in interface com.sun.management.
UnixOperatingSystemMXBean
Returns the maximum number of file descriptors.
getMaxHeight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the max-height property definition in CSS2.
getMaximizedBounds()
- Method in class java.awt.
Frame
Gets maximized bounds for this frame.
getMaximum()
- Method in interface java.awt.
Adjustable
Gets the maximum value of the adjustable object.
getMaximum()
- Method in class java.awt.
Scrollbar
Gets the maximum value of this scroll bar.
getMaximum()
- Method in class java.awt.
ScrollPaneAdjustable
getMaximum()
- Method in class java.time.temporal.
ValueRange
Gets the maximum value that the field can take.
getMaximum()
- Method in class javax.sound.sampled.
FloatControl
Obtains the maximum value permitted.
getMaximum()
- Method in interface javax.swing.
BoundedRangeModel
Returns the model's maximum.
getMaximum()
- Method in class javax.swing.
DefaultBoundedRangeModel
Returns the model's maximum.
getMaximum()
- Method in class javax.swing.
JProgressBar
Returns the progress bar's
maximum
value
 from the
BoundedRangeModel
.
getMaximum()
- Method in class javax.swing.
JScrollBar
The maximum value of the scrollbar is maximum - extent.
getMaximum()
- Method in class javax.swing.
JSlider
Returns the maximum value supported by the slider
 from the
BoundedRangeModel
.
getMaximum()
- Method in class javax.swing.
ProgressMonitor
Returns the maximum value -- the higher end of the progress value.
getMaximum()
- Method in class javax.swing.
SpinnerNumberModel
Returns the last number in the sequence.
getMaximum()
- Method in class javax.swing.text.
InternationalFormatter
Returns the maximum permissible value.
getMaximum(int)
- Method in class java.util.
Calendar
Returns the maximum value for the given calendar field of this
Calendar
instance.
getMaximum(int)
- Method in class java.util.
GregorianCalendar
Returns the maximum value for the given calendar field of this
GregorianCalendar
instance.
getMaximumAccessibleValue()
- Method in class java.awt.
Button.AccessibleAWTButton
Get the maximum value of this object as a Number.
getMaximumAccessibleValue()
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Get the maximum value of this object as a Number.
getMaximumAccessibleValue()
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Get the maximum value of this object as a Number.
getMaximumAccessibleValue()
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Get the maximum value of this object as a Number.
getMaximumAccessibleValue()
- Method in class java.awt.
Scrollbar.AccessibleAWTScrollBar
Get the maximum accessible value of this object.
getMaximumAccessibleValue()
- Method in interface javax.accessibility.
AccessibleValue
Get the maximum value of this object as a
Number
.
getMaximumAccessibleValue()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Get the maximum value of this object as a Number.
getMaximumAccessibleValue()
- Method in class javax.swing.
JInternalFrame.AccessibleJInternalFrame
Get the maximum value of this object as a Number.
getMaximumAccessibleValue()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon
Gets the maximum value of this object as a
Number
.
getMaximumAccessibleValue()
- Method in class javax.swing.
JProgressBar.AccessibleJProgressBar
Gets the maximum accessible value of this object.
getMaximumAccessibleValue()
- Method in class javax.swing.
JScrollBar.AccessibleJScrollBar
Get the maximum accessible value of this object.
getMaximumAccessibleValue()
- Method in class javax.swing.
JSlider.AccessibleJSlider
Get the maximum accessible value of this object.
getMaximumAccessibleValue()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Get the maximum value of this object as a Number.
getMaximumAccessibleValue()
- Method in class javax.swing.
JSplitPane.AccessibleJSplitPane
Gets the maximum accessible value of this object.
getMaximumCharHeight(SynthContext)
- Method in class javax.swing.plaf.synth.
SynthGraphicsUtils
Returns the maximum height of the Font from the passed in
 SynthContext.
getMaximumCursorColors()
- Method in class java.awt.
Toolkit
Returns the maximum number of colors the Toolkit supports in a custom cursor
 palette.
getMaximumDividerLocation()
- Method in class javax.swing.
JSplitPane
Returns the maximum location of the divider from the look and feel
 implementation.
getMaximumDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Gets the maximum location of the divider.
getMaximumDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
getMaximumDividerLocation
method on each UI handled by this object.
getMaximumDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.
SplitPaneUI
Returns the maximum possible location of the divider.
getMaximumFractionDigits()
- Method in class java.text.
DecimalFormat
Gets the maximum number of digits allowed in the fraction portion of a
 number.
getMaximumFractionDigits()
- Method in class java.text.
NumberFormat
Returns the maximum number of digits allowed in the fraction portion of a
 number.
getMaximumIntegerDigits()
- Method in class java.text.
DecimalFormat
Gets the maximum number of digits allowed in the integer portion of a
 number.
getMaximumIntegerDigits()
- Method in class java.text.
NumberFormat
Returns the maximum number of digits allowed in the integer portion of a
 number.
getMaximumPacketSize()
- Method in class javax.net.ssl.
SSLParameters
Returns the maximum expected network packet size in bytes for
 SSL/TLS/DTLS records.
getMaximumPoolSize()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the maximum allowed number of threads.
getMaximumRowCount()
- Method in class javax.swing.
JComboBox
Returns the maximum number of items the combo box can display
 without a scrollbar
getMaximumSize()
- Method in class java.awt.
Component
Gets the maximum size of this component.
getMaximumSize()
- Method in class java.awt.
Container
Returns the maximum size of this container.
getMaximumSize()
- Method in class javax.swing.
JComponent
If the maximum size has been set to a non-
null
value
 just returns it.
getMaximumSize()
- Method in class javax.swing.
JScrollBar
The scrollbar is flexible along it's scrolling axis and
 rigid along the other axis.
getMaximumSize()
- Method in class javax.swing.
JToolBar.Separator
Returns the maximum size for the separator.
getMaximumSize()
- Method in class javax.swing.plaf.basic.
BasicArrowButton
Returns the maximum size of the
BasicArrowButton
.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicDesktopIconUI
Desktop icons can not be resized.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Returns the maximum size.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicLabelUI
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the maximum size.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the maximum size for the passed in component,
 This is passed off to the current layout manager.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTableHeaderUI
Return the maximum size of the header.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTableUI
Return the maximum size of the table.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Gets the maximum size for the editor component.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the maximum size for this component, which will be the
 preferred size if the instance is currently in a JTree, or 0, 0.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.
ComponentUI
Returns the specified component's maximum size appropriate for
 the look and feel.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.
LayerUI
If the
JLayer
's view component is not
null
,
 this returns the result of  the view's
getMaximumSize()
method.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Returns the maximum size of the
JFileChooser
.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiButtonUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiColorChooserUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopIconUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopPaneUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiInternalFrameUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiLabelUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiListUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuBarUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuItemUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPanelUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiProgressBarUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiRootPaneUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollBarUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollPaneUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSeparatorUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSliderUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSpinnerUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableHeaderUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolBarUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolTipUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiViewportUI
Invokes the
getMaximumSize
method on each UI handled by this object.
getMaximumSize(SynthContext, Font, String, Icon, int, int, int, int, int, int)
- Method in class javax.swing.plaf.synth.
SynthGraphicsUtils
Returns the maximum size needed to properly render an icon and text.
getMaximumSpan(int)
- Method in class javax.swing.text.
AsyncBoxView
Determines the maximum span for this view along an
 axis.
getMaximumSpan(int)
- Method in class javax.swing.text.
BoxView
Determines the maximum span for this view along an
 axis.
getMaximumSpan(int)
- Method in class javax.swing.text.
ComponentView
Determines the maximum span for this view along an
 axis.
getMaximumSpan(int)
- Method in class javax.swing.text.html.
BlockView
Determines the maximum span for this view along an
 axis.
getMaximumSpan(int)
- Method in class javax.swing.text.html.
FormView
Determines the maximum span for this view along an
 axis.
getMaximumSpan(int)
- Method in class javax.swing.text.html.
ParagraphView
Determines the maximum span for this view along an
 axis.
getMaximumSpan(int)
- Method in class javax.swing.text.
View
Determines the maximum span for this view along an
 axis.
getMaximumSpan(int)
- Method in class javax.swing.text.
WrappedPlainView
Determines the maximum span for this view along an
 axis.
getMaximumThumbSize()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Returns the largest acceptable size for the thumb.
getMaximumValue()
- Method in class javax.swing.
Spring
Returns the
maximum
value of this
Spring
.
getMaximumWindowBounds()
- Method in class java.awt.
GraphicsEnvironment
Returns the maximum bounds for centered Windows.
getMaximumZoneSize()
- Method in class javax.swing.text.
ZoneView
Get the current maximum zone size.
getMaxIndexLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of bytes this database allows for an
 index, including all of the parts of the index.
getMaxLabel()
- Method in class javax.sound.sampled.
FloatControl
Obtains the label for the maximum value, such as "Right" or "Full".
getMaxLength()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Maximum number of characters for text fields, when
type
has the value "Text" or "Password".
getMaxLines(Line.Info)
- Method in interface javax.sound.sampled.
Mixer
Obtains the approximate maximum number of lines of the requested type
 that can be open simultaneously on the mixer.
getMaxLogicalLobSize()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of bytes this database allows for
 the logical size for a
LOB
.
getMaxPage()
- Method in class java.awt.
JobAttributes
Specifies the maximum value the user can specify as the last page to
 be printed for jobs using these attributes.
getMaxPathLength()
- Method in class java.security.cert.
PKIXBuilderParameters
Returns the value of the maximum number of intermediate non-self-issued
 certificates that may exist in a certification path.
getMaxPolyphony()
- Method in interface javax.sound.midi.
Synthesizer
Obtains the maximum number of notes that this synthesizer can sound
 simultaneously.
getMaxPriority()
- Method in class java.lang.
ThreadGroup
Returns the maximum priority of this thread group.
getMaxProcedureNameLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters that this database allows in a
 procedure name.
getMaxReceivers()
- Method in interface javax.sound.midi.
MidiDevice
Obtains the maximum number of MIDI IN connections available on this MIDI
 device for receiving MIDI data.
getMaxRows()
- Method in interface java.sql.
Statement
Retrieves the maximum number of rows that a
ResultSet
object produced by this
Statement
object can contain.
getMaxRows()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves the maximum number of rows that this
RowSet
object may contain.
getMaxRows()
- Method in interface javax.sql.
RowSet
Retrieves the maximum number of rows that this
RowSet
object can contain.
getMaxRowSize()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of bytes this database allows in
 a single row.
getMaxSchemaNameLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters that this database allows in a
 schema name.
getMaxSelectionIndex()
- Method in class javax.swing.
DefaultListSelectionModel
Returns the last selected index or -1 if the selection is empty.
getMaxSelectionIndex()
- Method in class javax.swing.
JList
Returns the largest selected cell index, or
-1
if the selection
 is empty.
getMaxSelectionIndex()
- Method in interface javax.swing.
ListSelectionModel
Returns the last selected index or -1 if the selection is empty.
getMaxSelectionRow()
- Method in class javax.swing.
JTree
Returns the largest selected row.
getMaxSelectionRow()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the largest value obtained from the RowMapper for the
 current set of selected TreePaths.
getMaxSelectionRow()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the largest value obtained from the RowMapper for the
 current set of selected TreePaths.
getMaxSize()
- Method in class jdk.jfr.
Recording
Returns the maximum size, measured in bytes, at which data is no longer kept in the disk repository.
getMaxSize()
- Method in class jdk.management.jfr.
RecordingInfo
Returns the amount of data, measured in bytes, the recording associated
 with this
RecordingInfo
, should be kept on disk, before it's
 rotated away, or
0
if data is to be kept indefinitely.
getMaxSortKeys()
- Method in class javax.swing.
DefaultRowSorter
Returns the maximum number of sort keys.
getMaxStatementLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters this database allows in
 an SQL statement.
getMaxStatements()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of active statements to this database
 that can be open at the same time.
getMaxTableNameLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters this database allows in
 a table name.
getMaxTablesInSelect()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of tables this database allows in a
SELECT
statement.
getMaxTransmitters()
- Method in interface javax.sound.midi.
MidiDevice
Obtains the maximum number of MIDI OUT connections available on this MIDI
 device for transmitting MIDI data.
getMaxUserNameLength()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the maximum number of characters this database allows in
 a user name.
getMaxValue()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns the maximal value for the attribute described by this
OpenMBeanAttributeInfoSupport
instance, if specified,
 or
null
otherwise.
getMaxValue()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns the maximal value for this parameter, if it has one, or
null
otherwise.
getMaxValue()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns the maximal value for the parameter described by this
OpenMBeanParameterInfoSupport
instance, if specified,
 or
null
otherwise.
getMaxValue(int)
- Method in class java.awt.color.
ColorSpace
Returns the maximum normalized color component value for the specified
 component.
getMaxValue(int)
- Method in class java.awt.color.
ICC_ColorSpace
Returns the maximum normalized color component value for the specified
 component.
getMaxWidth()
- Method in class javax.swing.table.
TableColumn
Returns the maximum width for the
TableColumn
.
getMaxWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the max-width property definition in CSS2.
getMaxX()
- Method in class java.awt.geom.
RectangularShape
Returns the largest X coordinate of the framing
 rectangle of the
Shape
in
double
precision.
getMaxY()
- Method in class java.awt.geom.
RectangularShape
Returns the largest Y coordinate of the framing
 rectangle of the
Shape
in
double
precision.
getMaxZonesLoaded()
- Method in class javax.swing.text.
ZoneView
Get the current setting of the number of zones
 allowed to be loaded at the same time.
getMBeanCount()
- Method in interface javax.management.
MBeanServer
Returns the number of MBeans registered in the MBean server.
getMBeanCount()
- Method in interface javax.management.
MBeanServerConnection
Returns the number of MBeans registered in the MBean server.
getMBeanCount(Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.getMBeanCount()
.
getMBeanCount(Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
getMBeanCount(Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
getMBeanDescriptor()
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns the ModelMBean's descriptor which contains MBean wide
 policies.
getMBeanDescriptor()
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
getMBeanInfo()
- Method in interface javax.management.
DynamicMBean
Provides the exposed attributes and actions of the Dynamic MBean using an MBeanInfo object.
getMBeanInfo()
- Method in class javax.management.modelmbean.
RequiredModelMBean
Returns the attributes, operations, constructors and notifications
 that this RequiredModelMBean exposes for management.
getMBeanInfo()
- Method in class javax.management.
StandardMBean
Get the
MBeanInfo
for this MBean.
getMBeanInfo(ObjectName)
- Method in interface javax.management.
MBeanServer
getMBeanInfo(ObjectName)
- Method in interface javax.management.
MBeanServerConnection
This method discovers the attributes and operations that an
 MBean exposes for management.
getMBeanInfo(ObjectName, Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.getMBeanInfo(ObjectName)
.
getMBeanInfo(ObjectName, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
getMBeanInfo(ObjectName, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
getMBeanInterface()
- Method in class javax.management.
StandardMBean
Get the Management Interface of this Standard MBean (or MXBean).
getMBeanName()
- Method in class javax.management.
MBeanServerNotification
Returns the  object name of the MBean that caused the notification.
getMBeanServer()
- Static method in class javax.management.
QueryEval
Return the MBean server that was most recently given to the
setMBeanServer
method by this thread.
getMBeanServer()
- Method in class javax.management.remote.
JMXConnectorServer
Returns the MBean server that this connector server is
 attached to.
getMBeanServer()
- Method in interface javax.management.remote.
MBeanServerForwarder
Returns the MBeanServer object to which requests will be forwarded.
getMBeanServer()
- Method in class javax.management.remote.rmi.
RMIServerImpl
The
MBeanServer
to which this connector server
 is attached.
getMBeanServerConnection()
- Method in interface com.sun.tools.jconsole.
JConsoleContext
Returns the
MBeanServerConnection
for the
 connection to an application.
getMBeanServerConnection()
- Method in class javax.management.
MBeanServerInvocationHandler
The MBean server connection through which the methods of
 a proxy using this handler are forwarded.
getMBeanServerConnection()
- Method in interface javax.management.remote.
JMXConnector
Returns an
MBeanServerConnection
object
 representing a remote MBean server.
getMBeanServerConnection()
- Method in class javax.management.remote.rmi.
RMIConnector
getMBeanServerConnection(Subject)
- Method in interface javax.management.remote.
JMXConnector
Deprecated, for removal: This API element is subject to removal in a future version.
This method supported the legacy Subject Delegation feature,
 and is only useful in conjunction with other APIs which are deprecated and
 subject to removal in a future release. Consequently, this method is also
 deprecated and subject to removal. There is no replacement.
getMBeanServerConnection(Subject)
- Method in class javax.management.remote.rmi.
RMIConnector
getMBeanServerId()
- Method in class javax.management.
MBeanServerDelegate
Returns the MBean server agent identity.
getMBeanServerId()
- Method in interface javax.management.
MBeanServerDelegateMBean
Returns the MBean server agent identity.
getMBeansFromURL(String)
- Method in class javax.management.loading.
MLet
Deprecated.
Loads a text file containing MLET tags that define the MBeans to
 be added to the MBean server.
getMBeansFromURL(String)
- Method in interface javax.management.loading.
MLetMBean
Deprecated.
Loads a text file containing MLET tags that define the MBeans
 to be added to the MBean server.
getMBeansFromURL(URL)
- Method in class javax.management.loading.
MLet
Deprecated.
Loads a text file containing MLET tags that define the MBeans to
 be added to the MBean server.
getMBeansFromURL(URL)
- Method in interface javax.management.loading.
MLetMBean
Deprecated.
Loads a text file containing MLET tags that define the MBeans
 to be added to the MBean server.
getMBeansToUnregister()
- Method in class javax.management.relation.
RelationNotification
Returns the list of ObjectNames of MBeans expected to be unregistered
 due to a relation removal (only for relation removal).
getMech()
- Method in interface org.ietf.jgss.
GSSContext
Determines what mechanism is being used for this
 context.
getMechanismName()
- Method in interface javax.security.sasl.
SaslClient
Returns the IANA-registered mechanism name of this SASL client.
getMechanismName()
- Method in interface javax.security.sasl.
SaslServer
Returns the IANA-registered mechanism name of this SASL server.
getMechanismNames(Map<String, ?>)
- Method in interface javax.security.sasl.
SaslClientFactory
Returns an array of names of mechanisms that match the specified
 mechanism selection policies.
getMechanismNames(Map<String, ?>)
- Method in interface javax.security.sasl.
SaslServerFactory
Returns an array of names of mechanisms that match the specified
 mechanism selection policies.
getMechanismType()
- Method in class javax.xml.crypto.dsig.keyinfo.
KeyInfoFactory
Returns the type of the XML processing mechanism and representation
 supported by this
KeyInfoFactory
(ex: "DOM")
getMechanismType()
- Method in class javax.xml.crypto.dsig.
TransformService
Returns the mechanism type supported by this
TransformService
.
getMechanismType()
- Method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Returns the type of the XML processing mechanism and representation
 supported by this
XMLSignatureFactory
(ex: "DOM").
getMechs()
- Method in interface org.ietf.jgss.
GSSCredential
Returns a list of mechanisms supported by this credential.
getMechs()
- Method in class org.ietf.jgss.
GSSManager
Returns a list of mechanisms that are available to GSS-API callers
 through this GSSManager.
getMechsForName(Oid)
- Method in class org.ietf.jgss.
GSSManager
Returns a list of mechanisms that support the indicated name type.
getMedia()
- Method in class java.awt.
PageAttributes
Returns the paper size for pages using these attributes.
getMedia()
- Method in interface org.w3c.dom.css.
CSSImportRule
A list of media types for which this style sheet may be used.
getMedia()
- Method in interface org.w3c.dom.css.
CSSMediaRule
A list of media types for this rule.
getMedia()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
Designed for use with one or more target media.
getMedia()
- Method in interface org.w3c.dom.html.
HTMLStyleElement
Designed for use with one or more target media.
getMedia()
- Method in interface org.w3c.dom.stylesheets.
StyleSheet
The intended destination media for style information.
getMediaSizeForName(MediaSizeName)
- Static method in class javax.print.attribute.standard.
MediaSize
Get the
MediaSize
for the specified named media.
getMediaSizeName()
- Method in class javax.print.attribute.standard.
MediaSize
Get the media name, if any, for this size.
getMediaSubtype()
- Method in class javax.print.
DocFlavor
Returns this doc flavor object's media subtype (from the MIME type).
getMediaText()
- Method in interface org.w3c.dom.stylesheets.
MediaList
The parsable textual representation of the media list.
getMediaType()
- Method in class javax.print.
DocFlavor
Returns this doc flavor object's media type (from the MIME type).
getMediaWhitePoint()
- Method in class java.awt.color.
ICC_ProfileGray
Returns a float array of length 3 containing the X, Y, and Z components
 of the mediaWhitePointTag in the ICC profile.
getMediaWhitePoint()
- Method in class java.awt.color.
ICC_ProfileRGB
Returns an array that contains the components of the profile's
mediaWhitePointTag
.
getMember(String)
- Method in class netscape.javascript.
JSObject
Retrieves a named member of a JavaScript object.
getMemberControls()
- Method in class javax.sound.sampled.
CompoundControl
Returns the set of member controls that comprise the compound control.
getMembers()
- Method in interface com.sun.source.tree.
ClassTree
Returns the members declared in this type declaration.
getMembers()
- Method in class javax.print.attribute.
SetOfIntegerSyntax
Obtain this set-of-integer attribute's members in canonical array form.
getMemoryManagerMXBeans()
- Static method in class java.lang.management.
ManagementFactory
Returns a list of
MemoryManagerMXBean
objects
 in the Java virtual machine.
getMemoryManagerNames()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the name of memory managers that manages this memory pool.
getMemoryMXBean()
- Static method in class java.lang.management.
ManagementFactory
Returns the managed bean for the memory system of
 the Java virtual machine.
getMemoryPoolMXBeans()
- Static method in class java.lang.management.
ManagementFactory
Returns a list of
MemoryPoolMXBean
objects in the
 Java virtual machine.
getMemoryPoolNames()
- Method in interface java.lang.management.
MemoryManagerMXBean
Returns the name of memory pools that this memory manager manages.
getMemoryUsageAfterGc()
- Method in class com.sun.management.
GcInfo
Returns the memory usage of all memory pools
 at the end of this GC.
getMemoryUsageBeforeGc()
- Method in class com.sun.management.
GcInfo
Returns the memory usage of all memory pools
 at the beginning of this GC.
getMemoryUsed()
- Method in interface java.lang.management.
BufferPoolMXBean
Returns an estimate of the memory that the Java virtual machine is using
 for this buffer pool.
getMenu()
- Method in class java.awt.
Taskbar
Gets PopupMenu used to add items to this application's icon in system task area.
getMenu(int)
- Method in class java.awt.
MenuBar
Gets the specified menu.
getMenu(int)
- Method in class javax.swing.
JMenuBar
Returns the menu at the specified position in the menu bar.
getMenuArrowIcon()
- Static method in class javax.swing.plaf.basic.
BasicIconFactory
Returns a menu arrow icon.
getMenuArrowIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns an icon to be used by
JMenu
.
getMenuBackground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the menu background color of the current theme.
getMenuBackground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the menu background color.
getMenuBar()
- Method in class java.awt.
Frame
Gets the menu bar for this frame.
getMenuBar()
- Method in class javax.swing.
JInternalFrame
Deprecated.
As of Swing version 1.0.3,
 replaced by
getJMenuBar()
.
getMenuBar()
- Method in class javax.swing.
JRootPane
Deprecated.
As of Swing version 1.0.3
  replaced by
getJMenuBar()
.
getMenuBarBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JMenuBar
.
getMenuComponent(int)
- Method in class javax.swing.
JMenu
Returns the component at position
n
.
getMenuComponentCount()
- Method in class javax.swing.
JMenu
Returns the number of components on the menu.
getMenuComponents()
- Method in class javax.swing.
JMenu
Returns an array of
Component
s of the menu's
 subcomponents.
getMenuCount()
- Method in class java.awt.
MenuBar
Gets the number of menus on the menu bar.
getMenuCount()
- Method in class javax.swing.
JMenuBar
Returns the number of items in the menu bar.
getMenuDisabledForeground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the menu disabled foreground color of the current theme.
getMenuDisabledForeground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the menu disabled foreground color.
getMenuDisabledForeground()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the menu disabled foreground color.
getMenuDragMouseListeners()
- Method in class javax.swing.
JMenuItem
Returns an array of all the
MenuDragMouseListener
s added
 to this JMenuItem with addMenuDragMouseListener().
getMenuForeground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the menu foreground color of the current theme.
getMenuForeground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the menu foreground color.
getMenuItemArrowIcon()
- Static method in class javax.swing.plaf.basic.
BasicIconFactory
Returns a menu item arrow icon.
getMenuItemArrowIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns an icon to be used by
JMenuItem
.
getMenuItemCheckIcon()
- Static method in class javax.swing.plaf.basic.
BasicIconFactory
Returns a menu item check icon.
getMenuItemCheckIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns an icon to be used by
JCheckBoxMenuItem
.
getMenuKeyListeners()
- Method in class javax.swing.
JMenuItem
Returns an array of all the
MenuKeyListener
s added
 to this JMenuItem with addMenuKeyListener().
getMenuKeyListeners()
- Method in class javax.swing.
JPopupMenu
Returns an array of all the
MenuKeyListener
s added
 to this JPopupMenu with addMenuKeyListener().
getMenuListeners()
- Method in class javax.swing.
JMenu
Returns an array of all the
MenuListener
s added
 to this JMenu with addMenuListener().
getMenuSelectedBackground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the menu selected background color of the current theme.
getMenuSelectedBackground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the menu selected background color.
getMenuSelectedForeground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the menu selected foreground color of the current theme.
getMenuSelectedForeground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the menu selected foreground color.
getMenuSelectionManager()
- Method in class javax.swing.event.
MenuDragMouseEvent
Returns the current menu selection manager.
getMenuSelectionManager()
- Method in class javax.swing.event.
MenuKeyEvent
Returns the current menu selection manager.
getMenuShortcutKeyMask()
- Method in class java.awt.
Toolkit
Deprecated.
It is recommended that extended modifier keys and
Toolkit.getMenuShortcutKeyMaskEx()
be used instead
getMenuShortcutKeyMaskEx()
- Method in class java.awt.
Toolkit
Determines which extended modifier key is the appropriate accelerator
 key for menu shortcuts.
getMenuTextFont()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the menu text font.
getMenuTextFont()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the menu text font of the current theme.
getMenuTextFont()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the menu text font.
getMessage()
- Method in exception class java.awt.
HeadlessException
Returns the detail message string of this
HeadlessException
.
getMessage()
- Method in exception class java.io.
InvalidClassException
Produce the message and include the classname, if present.
getMessage()
- Method in exception class java.io.
WriteAbortedException
Produce the message and include the message from the nested
 exception, if there is one.
getMessage()
- Method in exception class java.lang.
NullPointerException
Returns the detail message string of this throwable.
getMessage()
- Method in exception class java.lang.
Throwable
Returns the detail message string of this throwable.
getMessage()
- Method in exception class java.net.
URISyntaxException
Returns a string describing the parse error.
getMessage()
- Method in exception class java.nio.charset.
MalformedInputException
Returns the message.
getMessage()
- Method in exception class java.nio.charset.
UnmappableCharacterException
Returns the message.
getMessage()
- Method in exception class java.nio.file.
FileSystemException
Returns the detail message string.
getMessage()
- Method in exception class java.nio.file.
InvalidPathException
Returns a string describing the error.
getMessage()
- Method in exception class java.rmi.
RemoteException
Returns the detail message, including the message from the cause, if
 any, of this exception.
getMessage()
- Method in exception class java.rmi.server.
ServerCloneException
Returns the detail message, including the message from the cause, if
 any, of this exception.
getMessage()
- Method in class java.util.logging.
LogRecord
Get the "raw" log message, before localization or formatting.
getMessage()
- Method in exception class java.util.regex.
PatternSyntaxException
Returns a multi-line string containing the description of the syntax
 error and its index, the erroneous regular-expression pattern, and a
 visual indication of the error index within the pattern.
getMessage()
- Method in interface javax.annotation.processing.
Completion
Returns an informative message about the completion.
getMessage()
- Method in class javax.management.
Notification
Get the notification message.
getMessage()
- Method in exception class javax.script.
ScriptException
Returns a message containing the String passed to a constructor as well as
 line and column numbers and filename if any of these are known.
getMessage()
- Method in class javax.security.auth.callback.
TextOutputCallback
Get the message to be displayed.
getMessage()
- Method in class javax.sound.midi.
MidiEvent
Obtains the MIDI message contained in the event.
getMessage()
- Method in class javax.sound.midi.
MidiMessage
Obtains the MIDI message data.
getMessage()
- Method in class javax.swing.
JOptionPane
Returns the message-object this pane displays.
getMessage()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Returns the message to display from the
JOptionPane
the receiver is
 providing the look and feel for.
getMessage()
- Method in exception class javax.xml.parsers.
FactoryConfigurationError
Return the message (if any) for this error .
getMessage()
- Method in exception class javax.xml.stream.
FactoryConfigurationError
Report the message associated with this error
getMessage()
- Method in exception class javax.xml.transform.
TransformerFactoryConfigurationError
Return the message (if any) for this error .
getMessage()
- Method in exception class org.ietf.jgss.
GSSException
Returns a textual representation of both the major and the minor
 status codes.
getMessage()
- Method in interface org.w3c.dom.
DOMError
An implementation specific string describing the error that occurred.
getMessage()
- Method in exception class org.xml.sax.
SAXException
Return a detail message for this exception.
getMessage(Locale)
- Method in interface javax.tools.
Diagnostic
Returns a localized message for the given locale.
getMessage(Locale)
- Method in class jdk.jshell.
Diag
Returns a localized message for the given locale.
getMessageAndLocation()
- Method in exception class javax.xml.transform.
TransformerException
Get the error message with location information
 appended.
getMessageDigest()
- Method in class java.security.
DigestInputStream
Returns the message digest associated with this stream.
getMessageDigest()
- Method in class java.security.
DigestOutputStream
Returns the message digest associated with this stream.
getMessager()
- Method in interface javax.annotation.processing.
ProcessingEnvironment
Returns the messager used to report errors, warnings, and other
 notices.
getMessageType()
- Method in class javax.security.auth.callback.
ConfirmationCallback
Get the message type.
getMessageType()
- Method in class javax.security.auth.callback.
TextOutputCallback
Get the message type.
getMessageType()
- Method in class javax.swing.
JOptionPane
Returns the message type.
getMetadata()
- Method in class javax.imageio.
IIOImage
Returns a reference to the current
IIOMetadata
object, or
null
is none is set.
getMetaData()
- Method in interface java.sql.
Connection
Retrieves a
DatabaseMetaData
object that contains
 metadata about the database to which this
Connection
object represents a connection.
getMetaData()
- Method in interface java.sql.
PreparedStatement
Retrieves a
ResultSetMetaData
object that contains
 information about the columns of the
ResultSet
object
 that will be returned when this
PreparedStatement
object
 is executed.
getMetaData()
- Method in interface java.sql.
ResultSet
Retrieves the  number, types and properties of
 this
ResultSet
object's columns.
getMetadataFormat(String)
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataFormat
object describing the
 given metadata format, or
null
if no description
 is available.
getMetadataFormatNames()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an array of
String
s containing the names
 of all metadata formats, including the native and standard
 formats, recognized by this plug-in's
getAsTree
,
setFromTree
, and
mergeTree
methods.
getMetaKey()
- Method in interface org.w3c.dom.events.
MouseEvent
Used to indicate whether the 'meta' key was depressed during the firing
 of the event.
getMethod()
- Method in class java.beans.
MethodDescriptor
Gets the method that this MethodDescriptor encapsulates.
getMethod()
- Method in class java.util.zip.
ZipEntry
Returns the compression method of the entry.
getMethod()
- Method in class javax.swing.text.html.
FormSubmitEvent
Gets the form method type.
getMethod()
- Method in class jdk.jfr.consumer.
RecordedFrame
Returns the method for the execution point that is represented by this
 recorded frame.
getMethod()
- Method in interface org.w3c.dom.html.
HTMLFormElement
HTTP method used to submit form.
getMethod(String, Class<?>...)
- Method in class java.lang.
Class
Returns a
Method
object that reflects the specified public
 member method of the class or interface represented by this
Class
object.
getMethodCallSyntax(String, String, String...)
- Method in interface javax.script.
ScriptEngineFactory
Returns a String which can be used to invoke a method of a  Java object using the syntax
 of the supported scripting language.
getMethodDescriptors()
- Method in interface java.beans.
BeanInfo
Returns the method descriptors of the bean
 that define the externally visible methods supported by this bean.
getMethodDescriptors()
- Method in class java.beans.
SimpleBeanInfo
Deny knowledge of methods.
getMethodName()
- Method in class java.beans.
Statement
Returns the name of the method to invoke.
getMethodName()
- Method in class java.lang.
StackTraceElement
Returns the name of the method containing the execution point
 represented by this stack trace element.
getMethodName()
- Method in interface java.lang.
StackWalker.StackFrame
Gets the name of the method represented by this stack frame.
getMethods()
- Method in class java.lang.
Class
Returns an array containing
Method
objects reflecting all the
 public methods of the class or interface represented by this
Class
object, including those declared by the class or interface and
 those inherited from superclasses and superinterfaces.
getMethodSelect()
- Method in interface com.sun.source.tree.
MethodInvocationTree
Returns the expression identifying the method to be invoked.
getMethodType()
- Method in interface java.lang.invoke.
MethodHandleInfo
Returns the nominal type of the cracked symbolic reference, expressed as a method type.
getMethodType()
- Method in interface java.lang.
StackWalker.StackFrame
Returns the
MethodType
representing the parameter types and
 the return type for the method represented by this stack frame.
getMethodType()
- Method in class jdk.dynalink.
CallSiteDescriptor
The type of the method at the call site.
getMGFAlgorithm()
- Method in class java.security.spec.
PSSParameterSpec
Returns the mask generation function algorithm name.
getMGFAlgorithm()
- Method in class javax.crypto.spec.
OAEPParameterSpec
Returns the mask generation function algorithm name.
getMGFParameters()
- Method in class java.security.spec.
PSSParameterSpec
Returns the parameters for the mask generation function.
getMGFParameters()
- Method in class javax.crypto.spec.
OAEPParameterSpec
Returns the parameters for the mask generation function.
getMIC(byte[], int, int, MessageProp)
- Method in interface org.ietf.jgss.
GSSContext
Returns a token containing a cryptographic Message Integrity Code
 (MIC) for the supplied message,  for transfer to the peer
 application.
getMIC(InputStream, OutputStream, MessageProp)
- Method in interface org.ietf.jgss.
GSSContext
Deprecated.
The stream-based methods have been removed from RFC 8353.
 Use
GSSContext.getMIC(byte[], int, int, MessageProp)
instead.
getMicrosecondLength()
- Method in class javax.sound.midi.
MidiFileFormat
Obtains the length of the MIDI file, expressed in microseconds.
getMicrosecondLength()
- Method in class javax.sound.midi.
Sequence
Obtains the duration of this sequence, expressed in microseconds.
getMicrosecondLength()
- Method in interface javax.sound.midi.
Sequencer
Obtains the length of the current sequence, expressed in microseconds, or
 0 if no sequence is set.
getMicrosecondLength()
- Method in interface javax.sound.sampled.
Clip
Obtains the media duration in microseconds.
getMicrosecondPosition()
- Method in interface javax.sound.midi.
MidiDevice
Obtains the current time-stamp of the device, in microseconds.
getMicrosecondPosition()
- Method in interface javax.sound.midi.
Sequencer
Obtains the current position in the sequence, expressed in microseconds.
getMicrosecondPosition()
- Method in interface javax.sound.sampled.
DataLine
Obtains the current position in the audio data, in microseconds.
getMidiDevice()
- Method in interface javax.sound.midi.
MidiDeviceReceiver
Obtains a
MidiDevice
object which is an owner of this
Receiver
.
getMidiDevice()
- Method in interface javax.sound.midi.
MidiDeviceTransmitter
Obtains a
MidiDevice
object which is an owner of this
Transmitter
.
getMidiDevice(MidiDevice.Info)
- Static method in class javax.sound.midi.
MidiSystem
Obtains the requested MIDI device.
getMidiDeviceInfo()
- Static method in class javax.sound.midi.
MidiSystem
Obtains an array of information objects representing the set of all MIDI
 devices available on the system.
getMidiFileFormat(File)
- Static method in class javax.sound.midi.
MidiSystem
Obtains the MIDI file format of the specified
File
.
getMidiFileFormat(File)
- Method in class javax.sound.midi.spi.
MidiFileReader
Obtains the MIDI file format of the
File
provided.
getMidiFileFormat(InputStream)
- Static method in class javax.sound.midi.
MidiSystem
Obtains the MIDI file format of the data in the specified input stream.
getMidiFileFormat(InputStream)
- Method in class javax.sound.midi.spi.
MidiFileReader
Obtains the MIDI file format of the input stream provided.
getMidiFileFormat(URL)
- Static method in class javax.sound.midi.
MidiSystem
Obtains the MIDI file format of the data in the specified URL.
getMidiFileFormat(URL)
- Method in class javax.sound.midi.spi.
MidiFileReader
Obtains the MIDI file format of the
URL
provided.
getMidiFileTypes()
- Static method in class javax.sound.midi.
MidiSystem
Obtains the set of MIDI file types for which file writing support is
 provided by the system.
getMidiFileTypes()
- Method in class javax.sound.midi.spi.
MidiFileWriter
Obtains the set of MIDI file types for which file writing support is
 provided by this file writer.
getMidiFileTypes(Sequence)
- Static method in class javax.sound.midi.
MidiSystem
Obtains the set of MIDI file types that the system can write from the
 sequence specified.
getMidiFileTypes(Sequence)
- Method in class javax.sound.midi.spi.
MidiFileWriter
Obtains the file types that this file writer can write from the sequence
 specified.
getMidLabel()
- Method in class javax.sound.sampled.
FloatControl
Obtains the label for the mid-point value, such as "Center" or "Default".
getMidTermsOfReductionPolynomial()
- Method in class java.security.spec.
ECFieldF2m
Returns an integer array which contains the order of the
 middle term(s) of the reduction polynomial for polynomial
 basis or null for normal basis.
getMillis()
- Method in class java.util.logging.
LogRecord
Get truncated event time in milliseconds since 1970.
getMillisecond()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the millisecond precision of
XMLGregorianCalendar.getFractionalSecond()
.
getMillisToDecideToPopup()
- Method in class javax.swing.
ProgressMonitor
Returns the amount of time this object waits before deciding whether
 or not to popup a progress monitor.
getMillisToPopup()
- Method in class javax.swing.
ProgressMonitor
Returns the amount of time it will take for the popup to appear.
getMimeDecoder()
- Static method in class java.util.
Base64
Returns a
Base64.Decoder
that decodes using the
MIME
type base64 decoding scheme.
getMimeEncoder()
- Static method in class java.util.
Base64
Returns a
Base64.Encoder
that encodes using the
MIME
type base64 encoding scheme.
getMimeEncoder(int, byte[])
- Static method in class java.util.
Base64
Returns a
Base64.Encoder
that encodes using the
MIME
type base64 encoding scheme
 with specified line length and line separators.
getMimeType()
- Method in class java.awt.datatransfer.
DataFlavor
Returns the MIME type string for this
DataFlavor
.
getMimeType()
- Method in class javax.print.
DocFlavor
Returns this doc flavor object's MIME type string based on the canonical
 form.
getMimeType()
- Method in interface javax.xml.crypto.dsig.
XMLObject
Returns the mime type of this
XMLObject
.
getMimeType()
- Method in class javax.xml.crypto.
OctetStreamData
Returns the MIME type associated with the data object represented by this
OctetStreamData
.
getMimeTypes()
- Method in interface javax.accessibility.
AccessibleStreamable
Returns an array of
DataFlavor
objects for the MIME types this
 object supports.
getMimeTypes()
- Method in interface javax.script.
ScriptEngineFactory
Returns an immutable list of mimetypes, associated with scripts that
 can be executed by the engine.
getMIMETypes()
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns an array of
String
s containing a list of
 MIME types associated with the formats that are generally
 usable by the
ImageReader
or
ImageWriter
implementation associated with this
 service provider.
getMin()
- Method in class java.util.
DoubleSummaryStatistics
Returns the minimum recorded value,
Double.NaN
if any recorded
 value was NaN or
Double.POSITIVE_INFINITY
if no values were
 recorded.
getMin()
- Method in class java.util.
IntSummaryStatistics
Returns the minimum value recorded, or
Integer.MAX_VALUE
if no
 values have been recorded.
getMin()
- Method in class java.util.
LongSummaryStatistics
Returns the minimum value recorded, or
Long.MAX_VALUE
if no
 values have been recorded.
getMinBufferSize()
- Method in class javax.sound.sampled.
DataLine.Info
Obtains the minimum buffer size supported by the data line.
getMinCRL()
- Method in class java.security.cert.
X509CRLSelector
Returns the minCRLNumber criterion.
getMinDegree()
- Method in class javax.management.relation.
RoleInfo
Returns minimum degree for corresponding role reference.
getMinHeight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the min-height property definition in CSS2.
getMinimalDaysInFirstWeek()
- Method in class java.time.temporal.
WeekFields
Gets the minimal number of days in the first week.
getMinimalDaysInFirstWeek()
- Method in class java.util.
Calendar
Gets what the minimal days required in the first week of the year are;
 e.g., if the first week is defined as one that contains the first day
 of the first month of a year, this method returns 1.
getMinimalDaysInFirstWeek(Locale)
- Method in class java.util.spi.
CalendarDataProvider
Returns the minimal number of days required in the first week of a
 year.
getMinimum()
- Method in interface java.awt.
Adjustable
Gets the minimum value of the adjustable object.
getMinimum()
- Method in class java.awt.
Scrollbar
Gets the minimum value of this scroll bar.
getMinimum()
- Method in class java.awt.
ScrollPaneAdjustable
getMinimum()
- Method in class java.time.temporal.
ValueRange
Gets the minimum value that the field can take.
getMinimum()
- Method in class javax.sound.sampled.
FloatControl
Obtains the minimum value permitted.
getMinimum()
- Method in interface javax.swing.
BoundedRangeModel
Returns the minimum acceptable value.
getMinimum()
- Method in class javax.swing.
DefaultBoundedRangeModel
Returns the model's minimum.
getMinimum()
- Method in class javax.swing.
JProgressBar
Returns the progress bar's
minimum
value
 from the
BoundedRangeModel
.
getMinimum()
- Method in class javax.swing.
JScrollBar
Returns the minimum value supported by the scrollbar
 (usually zero).
getMinimum()
- Method in class javax.swing.
JSlider
Returns the minimum value supported by the slider
 from the
BoundedRangeModel
.
getMinimum()
- Method in class javax.swing.
ProgressMonitor
Returns the minimum value -- the lower end of the progress value.
getMinimum()
- Method in class javax.swing.
SpinnerNumberModel
Returns the first number in this sequence.
getMinimum()
- Method in class javax.swing.text.
InternationalFormatter
Returns the minimum permissible value.
getMinimum(int)
- Method in class java.util.
Calendar
Returns the minimum value for the given calendar field of this
Calendar
instance.
getMinimum(int)
- Method in class java.util.
GregorianCalendar
Returns the minimum value for the given calendar field of this
GregorianCalendar
instance.
getMinimumAccessibleValue()
- Method in class java.awt.
Button.AccessibleAWTButton
Get the minimum value of this object as a Number.
getMinimumAccessibleValue()
- Method in class java.awt.
Checkbox.AccessibleAWTCheckbox
Get the minimum value of this object as a Number.
getMinimumAccessibleValue()
- Method in class java.awt.
CheckboxMenuItem.AccessibleAWTCheckboxMenuItem
Get the minimum value of this object as a Number.
getMinimumAccessibleValue()
- Method in class java.awt.
MenuItem.AccessibleAWTMenuItem
Get the minimum value of this object as a Number.
getMinimumAccessibleValue()
- Method in class java.awt.
Scrollbar.AccessibleAWTScrollBar
Get the minimum accessible value of this object.
getMinimumAccessibleValue()
- Method in interface javax.accessibility.
AccessibleValue
Get the minimum value of this object as a
Number
.
getMinimumAccessibleValue()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Get the minimum value of this object as a Number.
getMinimumAccessibleValue()
- Method in class javax.swing.
JInternalFrame.AccessibleJInternalFrame
Get the minimum value of this object as a Number.
getMinimumAccessibleValue()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon
Gets the minimum value of this object as a
Number
.
getMinimumAccessibleValue()
- Method in class javax.swing.
JProgressBar.AccessibleJProgressBar
Gets the minimum accessible value of this object.
getMinimumAccessibleValue()
- Method in class javax.swing.
JScrollBar.AccessibleJScrollBar
Get the minimum accessible value of this object.
getMinimumAccessibleValue()
- Method in class javax.swing.
JSlider.AccessibleJSlider
Get the minimum accessible value of this object.
getMinimumAccessibleValue()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Get the minimum value of this object as a Number.
getMinimumAccessibleValue()
- Method in class javax.swing.
JSplitPane.AccessibleJSplitPane
Gets the minimum accessible value of this object.
getMinimumDividerLocation()
- Method in class javax.swing.
JSplitPane
Returns the minimum location of the divider from the look and feel
 implementation.
getMinimumDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Gets the minimum location of the divider.
getMinimumDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
getMinimumDividerLocation
method on each UI handled by this object.
getMinimumDividerLocation(JSplitPane)
- Method in class javax.swing.plaf.
SplitPaneUI
Returns the minimum possible location of the divider.
getMinimumFractionDigits()
- Method in class java.text.
DecimalFormat
Gets the minimum number of digits allowed in the fraction portion of a
 number.
getMinimumFractionDigits()
- Method in class java.text.
NumberFormat
Returns the minimum number of digits allowed in the fraction portion of a
 number.
getMinimumHorizontalSize()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the minimum horizontal size.
getMinimumIntegerDigits()
- Method in class java.text.
DecimalFormat
Gets the minimum number of digits allowed in the integer portion of a
 number.
getMinimumIntegerDigits()
- Method in class java.text.
NumberFormat
Returns the minimum number of digits allowed in the integer portion of a
 number.
getMinimumOptionPaneSize()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Returns the minimum size the option pane should be.
getMinimumSize()
- Method in class java.awt.
Component
Gets the minimum size of this component.
getMinimumSize()
- Method in class java.awt.
Container
Returns the minimum size of this container.
getMinimumSize()
- Method in class java.awt.
List
Determines the minimum size of this scrolling list.
getMinimumSize()
- Method in class java.awt.
TextArea
Determines the minimum size of this text area.
getMinimumSize()
- Method in class java.awt.
TextField
Gets the minimum dimensions for this text field.
getMinimumSize()
- Method in class javax.swing.
JComponent
If the minimum size has been set to a non-
null
value
 just returns it.
getMinimumSize()
- Method in class javax.swing.
JScrollBar
The scrollbar is flexible along it's scrolling axis and
 rigid along the other axis.
getMinimumSize()
- Method in class javax.swing.
JToolBar.Separator
Returns the minimum size for the separator.
getMinimumSize()
- Method in class javax.swing.plaf.basic.
BasicArrowButton
Returns the minimum size of the
BasicArrowButton
.
getMinimumSize()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Returns the minimum size of the divider.
getMinimumSize(int)
- Method in class java.awt.
List
Gets the minimum dimensions for a list with the specified
 number of rows.
getMinimumSize(int)
- Method in class java.awt.
TextField
Gets the minimum dimensions for a text field with
 the specified number of columns.
getMinimumSize(int, int)
- Method in class java.awt.
TextArea
Determines the minimum size of a text area with the specified
 number of rows and columns.
getMinimumSize(Component)
- Method in class javax.swing.border.
TitledBorder
Returns the minimum dimensions this border requires
 in order to fully display the border and title.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
The minimum size is the size of the display area plus insets plus the button.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Returns the minimum size.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicLabelUI
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
The Minimum size for this component is 10.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the minimum size.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the minimum size for the passed in component,
 This is passed off to the current layout manager.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTableHeaderUI
Return the minimum size of the header.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTableUI
Return the minimum size of the table.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextAreaUI
The method is overridden to take into account caret width.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Gets the minimum size for the editor component.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the minimum size for this component.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.
ComponentUI
Returns the specified component's minimum size appropriate for
 the look and feel.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.
LayerUI
If the
JLayer
's view component is not
null
,
 this returns the result of  the view's
getMinimalSize()
method.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Returns the minimum size of the
JFileChooser
.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiButtonUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiColorChooserUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopIconUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopPaneUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiInternalFrameUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiLabelUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiListUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuBarUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuItemUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPanelUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiProgressBarUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiRootPaneUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollBarUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollPaneUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSeparatorUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSliderUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSpinnerUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableHeaderUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolBarUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolTipUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiViewportUI
Invokes the
getMinimumSize
method on each UI handled by this object.
getMinimumSize(JComponent)
- Method in class javax.swing.plaf.synth.
SynthComboBoxUI
The minimum size is the size of the display area plus insets plus the button.
getMinimumSize(SynthContext, Font, String, Icon, int, int, int, int, int, int)
- Method in class javax.swing.plaf.synth.
SynthGraphicsUtils
Returns the minimum size needed to properly render an icon and text.
getMinimumSpan(int)
- Method in class javax.swing.text.
AsyncBoxView
Determines the minimum span for this view along an
 axis.
getMinimumSpan(int)
- Method in class javax.swing.text.
BoxView
Determines the minimum span for this view along an
 axis.
getMinimumSpan(int)
- Method in class javax.swing.text.
ComponentView
Determines the minimum span for this view along an
 axis.
getMinimumSpan(int)
- Method in class javax.swing.text.
GlyphView
Determines the minimum span for this view along an axis.
getMinimumSpan(int)
- Method in class javax.swing.text.html.
BlockView
Determines the minimum span for this view along an
 axis.
getMinimumSpan(int)
- Method in class javax.swing.text.html.
ParagraphView
Determines the minimum span for this view along an
 axis.
getMinimumSpan(int)
- Method in class javax.swing.text.
View
Determines the minimum span for this view along an
 axis.
getMinimumSpan(int)
- Method in class javax.swing.text.
WrappedPlainView
Determines the minimum span for this view along an
 axis.
getMinimumThumbSize()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Returns the smallest acceptable size for the thumb.
getMinimumValue()
- Method in class javax.swing.
Spring
Returns the
minimum
value of this
Spring
.
getMinimumVerticalSize()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the minimum vertical size.
getMinIndex()
- Method in class javax.imageio.
ImageReader
Returns the lowest valid index for reading an image, thumbnail,
 or image metadata.
getMinLabel()
- Method in class javax.sound.sampled.
FloatControl
Obtains the label for the minimum value, such as "Left" or "Off".
getMinor()
- Method in exception class org.ietf.jgss.
GSSException
Returns the mechanism level error code for the problem causing this
 exception to be thrown.
getMinorAxis()
- Method in class javax.swing.text.
AsyncBoxView
Fetch the minor axis (the axis orthogonal
 to the tiled axis).
getMinorOffset()
- Method in class javax.swing.text.
AsyncBoxView.ChildState
What is the offset along the minor axis
getMinorSpan()
- Method in class javax.swing.text.
AsyncBoxView.ChildState
What is the span along the minor axis.
getMinorStatus()
- Method in class org.ietf.jgss.
MessageProp
Retrieves the minor status code that the underlying mechanism might
 have set for this per-message operation.
getMinorString()
- Method in exception class org.ietf.jgss.
GSSException
Returns a string explaining the mechanism specific error code.
getMinorString()
- Method in class org.ietf.jgss.
MessageProp
Retrieves a string explaining the minor status code.
getMinorTickSpacing()
- Method in class javax.swing.
JSlider
This method returns the minor tick spacing.
getMinorVersion()
- Method in class java.awt.color.
ICC_Profile
Returns profile minor version.
getMinorVersion()
- Method in interface java.sql.
Driver
Gets the driver's minor version number.
getMinPage()
- Method in class java.awt.
JobAttributes
Specifies the minimum value the user can specify as the first page to
 be printed for jobs using these attributes.
getMinSelectionIndex()
- Method in class javax.swing.
DefaultListSelectionModel
Returns the first selected index or -1 if the selection is empty.
getMinSelectionIndex()
- Method in class javax.swing.
JList
Returns the smallest selected cell index, or
-1
if the selection
 is empty.
getMinSelectionIndex()
- Method in interface javax.swing.
ListSelectionModel
Returns the first selected index or -1 if the selection is empty.
getMinSelectionRow()
- Method in class javax.swing.
JTree
Returns the smallest selected row.
getMinSelectionRow()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the smallest value obtained from the RowMapper for the
 current set of selected TreePaths.
getMinSelectionRow()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the smallest value obtained from the RowMapper for the
 current set of selected TreePaths.
getMinSize(Container, GridBagLayoutInfo)
- Method in class java.awt.
GridBagLayout
Figures out the minimum size of the
 parent based on the information from
getLayoutInfo
.
GetMinSize(Container, GridBagLayoutInfo)
- Method in class java.awt.
GridBagLayout
This method is obsolete and supplied for backwards
 compatibility only; new code should call
getMinSize
instead.
getMinTileX()
- Method in class java.awt.image.
BufferedImage
Returns the minimum tile index in the x direction.
getMinTileX()
- Method in interface java.awt.image.
RenderedImage
Returns the minimum tile index in the X direction.
getMinTileY()
- Method in class java.awt.image.
BufferedImage
Returns the minimum tile index in the y direction.
getMinTileY()
- Method in interface java.awt.image.
RenderedImage
Returns the minimum tile index in the Y direction.
getMinusSign()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used to represent minus sign.
getMinute()
- Method in class java.time.
LocalDateTime
Gets the minute-of-hour field.
getMinute()
- Method in class java.time.
LocalTime
Gets the minute-of-hour field.
getMinute()
- Method in class java.time.
OffsetDateTime
Gets the minute-of-hour field.
getMinute()
- Method in class java.time.
OffsetTime
Gets the minute-of-hour field.
getMinute()
- Method in class java.time.
ZonedDateTime
Gets the minute-of-hour field.
getMinute()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the minute of hour or
DatatypeConstants.FIELD_UNDEFINED
if this field is not defined.
getMinutes()
- Method in class java.sql.
Date
Deprecated.
getMinutes()
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.get(Calendar.MINUTE)
.
getMinutes()
- Method in class javax.xml.datatype.
Duration
Obtains the value of the MINUTES field as an integer value,
 or 0 if not present.
getMinValue()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns the minimal value for the attribute described by this
OpenMBeanAttributeInfoSupport
instance, if specified,
 or
null
otherwise.
getMinValue()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns the minimal value for this parameter, if it has one, or
null
otherwise.
getMinValue()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns the minimal value for the parameter described by this
OpenMBeanParameterInfoSupport
instance, if specified,
 or
null
otherwise.
getMinValue(int)
- Method in class java.awt.color.
ColorSpace
Returns the minimum normalized color component value for the specified
 component.
getMinValue(int)
- Method in class java.awt.color.
ICC_ColorSpace
Returns the minimum normalized color component value for the specified
 component.
getMinWidth()
- Method in class javax.swing.table.
TableColumn
Returns the minimum width for the
TableColumn
.
getMinWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the min-width property definition in CSS2.
getMinX()
- Method in class java.awt.geom.
RectangularShape
Returns the smallest X coordinate of the framing
 rectangle of the
Shape
in
double
precision.
getMinX()
- Method in class java.awt.image.
BufferedImage
Returns the minimum x coordinate of this
BufferedImage
.
getMinX()
- Method in class java.awt.image.
Raster
Returns the minimum valid X coordinate of the Raster.
getMinX()
- Method in interface java.awt.image.renderable.
RenderableImage
Gets the minimum X coordinate of the rendering-independent image data.
getMinX()
- Method in class java.awt.image.renderable.
RenderableImageOp
Gets the minimum X coordinate of the rendering-independent image data.
getMinX()
- Method in interface java.awt.image.
RenderedImage
Returns the minimum X coordinate (inclusive) of the RenderedImage.
getMinY()
- Method in class java.awt.geom.
RectangularShape
Returns the smallest Y coordinate of the framing
 rectangle of the
Shape
in
double
precision.
getMinY()
- Method in class java.awt.image.
BufferedImage
Returns the minimum y coordinate of this
BufferedImage
.
getMinY()
- Method in class java.awt.image.
Raster
Returns the minimum valid Y coordinate of the Raster.
getMinY()
- Method in interface java.awt.image.renderable.
RenderableImage
Gets the minimum Y coordinate of the rendering-independent image data.
getMinY()
- Method in class java.awt.image.renderable.
RenderableImageOp
Gets the minimum Y coordinate of the rendering-independent image data.
getMinY()
- Method in interface java.awt.image.
RenderedImage
Returns the minimum Y coordinate (inclusive) of the RenderedImage.
getMissingGlyphCode()
- Method in class java.awt.
Font
Returns the glyphCode which is used when this
Font
does not have a glyph for a specified unicode code point.
getMiterLimit()
- Method in class java.awt.
BasicStroke
Returns the limit of miter joins.
getMixer(Mixer.Info)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the requested audio mixer.
getMixer(Mixer.Info)
- Method in class javax.sound.sampled.spi.
MixerProvider
Obtains an instance of the mixer represented by the info object.
getMixerInfo()
- Static method in class javax.sound.sampled.
AudioSystem
Obtains an array of mixer info objects that represents the set of audio
 mixers that are currently installed on the system.
getMixerInfo()
- Method in interface javax.sound.sampled.
Mixer
Obtains information about this mixer, including the product's name,
 version, vendor, etc.
getMixerInfo()
- Method in class javax.sound.sampled.spi.
MixerProvider
Obtains the set of info objects representing the mixer or mixers provided
 by this MixerProvider.
getMnemonic()
- Method in class javax.swing.
AbstractButton
Returns the keyboard mnemonic from the current model.
getMnemonic()
- Method in interface javax.swing.
ButtonModel
Gets the keyboard mnemonic for the button.
getMnemonic()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Provides a hint to the look and feel as to the
KeyEvent.VK
constant that can be used as a mnemonic to
 access the panel.
getMnemonic()
- Method in class javax.swing.
DefaultButtonModel
Gets the keyboard mnemonic for the button.
getMnemonicAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the keyboard mnemonic for accessing the specified tab.
getModalExclusionType()
- Method in class java.awt.
Window
Returns the modal exclusion type of this window.
getModalityType()
- Method in class java.awt.
Dialog
Returns the modality type of this dialog.
getMode()
- Method in interface com.sun.source.tree.
MemberReferenceTree
Returns the mode of the reference.
getMode()
- Method in class java.awt.
FileDialog
Indicates whether this file dialog box is for loading from a file
 or for saving to a file.
getModel()
- Method in class javax.swing.
AbstractButton
Returns the model that this button represents.
getModel()
- Method in class javax.swing.
DefaultRowSorter
Returns the underlying model.
getModel()
- Method in class javax.swing.
DefaultRowSorter.ModelWrapper
Returns the underlying model that this
Model
is
 wrapping.
getModel()
- Method in class javax.swing.
JComboBox
Returns the data model currently used by the
JComboBox
.
getModel()
- Method in class javax.swing.
JList
Returns the data model that holds the list of items displayed
 by the
JList
component.
getModel()
- Method in class javax.swing.
JProgressBar
Returns the data model used by this progress bar.
getModel()
- Method in class javax.swing.
JScrollBar
Returns data model that handles the scrollbar's four
 fundamental properties: minimum, maximum, value, extent.
getModel()
- Method in class javax.swing.
JSlider
Returns the
BoundedRangeModel
that handles the slider's three
 fundamental properties: minimum, maximum, value.
getModel()
- Method in class javax.swing.
JSpinner.DateEditor
Return our spinner ancestor's
SpinnerDateModel
.
getModel()
- Method in class javax.swing.
JSpinner
Returns the
SpinnerModel
that defines
 this spinners sequence of values.
getModel()
- Method in class javax.swing.
JSpinner.ListEditor
Return our spinner ancestor's
SpinnerNumberModel
.
getModel()
- Method in class javax.swing.
JSpinner.NumberEditor
Return our spinner ancestor's
SpinnerNumberModel
.
getModel()
- Method in class javax.swing.
JTabbedPane
Returns the model associated with this tabbedpane.
getModel()
- Method in class javax.swing.
JTable
Returns the
TableModel
that provides the data displayed by this
JTable
.
getModel()
- Method in class javax.swing.
JTree
Returns the
TreeModel
that is providing the data.
getModel()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns the model.
getModel()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the tree model.
getModel()
- Method in class javax.swing.
RowFilter.Entry
Returns the underlying model.
getModel()
- Method in class javax.swing.
RowSorter
Returns the underlying model.
getModel()
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the
TreeModel
that is providing the data.
getModelIndex()
- Method in class javax.swing.table.
TableColumn
Returns the model index for this column.
getModelRowCount()
- Method in class javax.swing.
DefaultRowSorter
Returns the number of rows in the underlying model.
getModelRowCount()
- Method in class javax.swing.
RowSorter
Returns the number of rows in the underlying model.
getModelWrapper()
- Method in class javax.swing.
DefaultRowSorter
Returns the model wrapper providing the data that is being sorted and
 filtered.
getModificationOp()
- Method in class javax.naming.directory.
ModificationItem
Retrieves the modification code of this modification item.
getModifier()
- Method in class javax.swing.text.html.parser.
AttributeList
Returns the attribute modifier.
getModifiers()
- Method in interface com.sun.source.tree.
ClassTree
Returns the modifiers, including any annotations,
 for this type declaration.
getModifiers()
- Method in interface com.sun.source.tree.
MethodTree
Returns the modifiers, including any annotations for the method being declared.
getModifiers()
- Method in interface com.sun.source.tree.
VariableTree
Returns the modifiers, including any annotations, on the declaration.
getModifiers()
- Method in class java.awt.
AWTKeyStroke
Returns the modifier keys for this
AWTKeyStroke
.
getModifiers()
- Method in class java.awt.event.
ActionEvent
Returns the modifier keys held down during this action event.
getModifiers()
- Method in class java.awt.event.
InputEvent
Deprecated.
It is recommended that extended modifier keys and
InputEvent.getModifiersEx()
be used instead
getModifiers()
- Method in class java.lang.
Class
Returns the Java language modifiers for this class or interface, encoded
 in an integer.
getModifiers()
- Method in interface java.lang.invoke.
MethodHandleInfo
Returns the access modifiers of the underlying member.
getModifiers()
- Method in class java.lang.reflect.
Constructor
Returns the Java language
modifiers
for
 the executable represented by this object.
getModifiers()
- Method in class java.lang.reflect.
Executable
Returns the Java language
modifiers
for
 the executable represented by this object.
getModifiers()
- Method in class java.lang.reflect.
Field
Returns the Java language modifiers for the field represented
 by this
Field
object, as an integer.
getModifiers()
- Method in interface java.lang.reflect.
Member
Returns the Java language modifiers for the member or
 constructor represented by this Member, as an integer.
getModifiers()
- Method in class java.lang.reflect.
Method
Returns the Java language
modifiers
for
 the executable represented by this object.
getModifiers()
- Method in class java.lang.reflect.
Parameter
Returns the Java language
modifiers
for
 the parameter represented by this object.
getModifiers()
- Method in interface javax.lang.model.element.
Element
Returns the modifiers of this element, excluding annotations.
getModifiers()
- Method in class jdk.jfr.consumer.
RecordedClass
Returns the modifiers of the class.
getModifiers()
- Method in class jdk.jfr.consumer.
RecordedMethod
Returns the modifiers for this method.
getModifiersEx()
- Method in class java.awt.event.
InputEvent
Returns the extended modifier mask for this event.
getModifiersExText(int)
- Static method in class java.awt.event.
InputEvent
Returns a String describing the extended modifier keys and
 mouse buttons, such as "Shift", "Button1", or "Ctrl+Shift".
getModule()
- Method in interface com.sun.source.tree.
CompilationUnitTree
Returns the module tree associated with this compilation unit,
 or
null
if there is no module declaration.
getModule()
- Method in class java.lang.
Class
Returns the module that this class or interface is a member of.
getModuleElement(CharSequence)
- Method in interface javax.lang.model.util.
Elements
Returns a module element given its fully qualified name.
getModuleMode()
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns the required level of module documentation.
getModuleName()
- Method in interface com.sun.source.tree.
RequiresTree
Returns the name of the module that is required.
getModuleName()
- Method in class java.lang.
StackTraceElement
Returns the module name of the module containing the execution point
 represented by this stack trace element.
getModuleNames()
- Method in interface com.sun.source.tree.
ExportsTree
Returns the names of the modules to which the package is exported,
 or null, if the package is exported to all modules.
getModuleNames()
- Method in interface com.sun.source.tree.
OpensTree
Returns the names of the modules to which the package is opened,
 or null, if the package is opened to all modules.
getModuleOf(Element)
- Method in interface javax.lang.model.util.
Elements
Returns the module of an element.
getModuleType()
- Method in interface com.sun.source.tree.
ModuleTree
Returns the type of this module.
getModuleVersion()
- Method in class java.lang.
StackTraceElement
Returns the module version of the module containing the execution point
 represented by this stack trace element.
getModulus()
- Method in interface java.security.interfaces.
RSAKey
Returns the modulus.
getModulus()
- Method in class java.security.spec.
RSAPrivateKeySpec
Returns the modulus.
getModulus()
- Method in class java.security.spec.
RSAPublicKeySpec
Returns the modulus.
getModulus()
- Method in class javax.management.monitor.
CounterMonitor
Gets the modulus value common to all observed MBeans.
getModulus()
- Method in interface javax.management.monitor.
CounterMonitorMBean
Gets the modulus value.
getMonetaryDecimalSeparator()
- Method in class java.text.
DecimalFormatSymbols
Returns the monetary decimal separator.
getMonetaryGroupingSeparator()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used for grouping separator for currencies.
getMono()
- Method in interface javax.sound.midi.
MidiChannel
Obtains the current mono/poly mode.
getMonth()
- Method in class java.sql.
Time
Deprecated.
getMonth()
- Method in class java.time.
LocalDate
Gets the month-of-year field using the
Month
enum.
getMonth()
- Method in class java.time.
LocalDateTime
Gets the month-of-year field using the
Month
enum.
getMonth()
- Method in class java.time.
MonthDay
Gets the month-of-year field using the
Month
enum.
getMonth()
- Method in class java.time.
OffsetDateTime
Gets the month-of-year field using the
Month
enum.
getMonth()
- Method in class java.time.
YearMonth
Gets the month-of-year field using the
Month
enum.
getMonth()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Gets the month of the transition.
getMonth()
- Method in class java.time.
ZonedDateTime
Gets the month-of-year field using the
Month
enum.
getMonth()
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.get(Calendar.MONTH)
.
getMonth()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the month of this calendar or
DatatypeConstants.FIELD_UNDEFINED
.
getMonths()
- Method in class java.text.
DateFormatSymbols
Gets month strings.
getMonths()
- Method in class java.time.
Period
Gets the amount of months of this period.
getMonths()
- Method in class javax.xml.datatype.
Duration
Obtains the value of the MONTHS field as an integer value,
 or 0 if not present.
getMonthValue()
- Method in class java.time.
LocalDate
Gets the month-of-year field from 1 to 12.
getMonthValue()
- Method in class java.time.
LocalDateTime
Gets the month-of-year field from 1 to 12.
getMonthValue()
- Method in class java.time.
MonthDay
Gets the month-of-year field from 1 to 12.
getMonthValue()
- Method in class java.time.
OffsetDateTime
Gets the month-of-year field from 1 to 12.
getMonthValue()
- Method in class java.time.
YearMonth
Gets the month-of-year field from 1 to 12.
getMonthValue()
- Method in class java.time.
ZonedDateTime
Gets the month-of-year field from 1 to 12.
getMoreResults()
- Method in interface java.sql.
Statement
Moves to this
Statement
object's next result, returns
true
if it is a
ResultSet
object, and
 implicitly closes any current
ResultSet
object(s) obtained with the method
getResultSet
.
getMoreResults(int)
- Method in interface java.sql.
Statement
Moves to this
Statement
object's next result, deals with
 any current
ResultSet
object(s) according  to the instructions
 specified by the given flag, and returns
true
if the next result is a
ResultSet
object.
getMostRecentEventTime()
- Static method in class java.awt.
EventQueue
Returns the timestamp of the most recent event that had a timestamp, and
 that was dispatched from the
EventQueue
associated with the
 calling thread.
getMostRecentFocusOwner()
- Method in class java.awt.
Window
Returns the child Component of this Window that will receive the focus
 when this Window is focused.
getMostRecentFocusOwner()
- Method in class javax.swing.
JInternalFrame
Returns the child component of this
JInternalFrame
that will receive the
 focus when this
JInternalFrame
is selected.
getMostSignificantBits()
- Method in class java.util.
UUID
Returns the most significant 64 bits of this UUID's 128 bit value.
getMouseListener()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Implementation of ComboPopup.getMouseListener().
getMouseListener()
- Method in interface javax.swing.plaf.basic.
ComboPopup
Returns a mouse listener that will be added to the combo box or null.
getMouseListeners()
- Method in class java.awt.
Component
Returns an array of all the mouse listeners
 registered on this component.
getMouseListeners()
- Method in class java.awt.
TrayIcon
Returns an array of all the mouse listeners
 registered on this
TrayIcon
.
getMouseModifiersText(int)
- Static method in class java.awt.event.
MouseEvent
Returns a
String
instance describing the modifier keys and
 mouse buttons that were down during the event, such as "Shift",
 or "Ctrl+Shift".
getMouseMotionListener()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Implementation of ComboPopup.getMouseMotionListener().
getMouseMotionListener()
- Method in interface javax.swing.plaf.basic.
ComboPopup
Returns a mouse motion listener that will be added to the combo box or null.
getMouseMotionListeners()
- Method in class java.awt.
Component
Returns an array of all the mouse motion listeners
 registered on this component.
getMouseMotionListeners()
- Method in class java.awt.
TrayIcon
Returns an array of all the mouse-motion listeners
 registered on this
TrayIcon
.
getMousePosition()
- Method in class java.awt.
Component
Returns the position of the mouse pointer in this
Component
's
 coordinate space if the
Component
is directly under the mouse
 pointer, otherwise returns
null
.
getMousePosition(boolean)
- Method in class java.awt.
Container
Returns the position of the mouse pointer in this
Container
's
 coordinate space if the
Container
is under the mouse pointer,
 otherwise returns
null
.
getMouseWheelListeners()
- Method in class java.awt.
Component
Returns an array of all the mouse wheel listeners
 registered on this component.
getMTU()
- Method in class java.net.
NetworkInterface
Returns the Maximum Transmission Unit (MTU) of this interface.
getMultiClickThreshhold()
- Method in class javax.swing.
AbstractButton
Gets the amount of time (in milliseconds) required between
 mouse press events for the button to generate the corresponding
 action events.
getMultiDocPrintServices(DocFlavor[], AttributeSet)
- Method in class javax.print.
PrintServiceLookup
Not called directly by applications.
getMultiple()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
If true, multiple
OPTION
elements may  be selected in
 this
SELECT
.
getMultipleDocumentHandling()
- Method in class java.awt.
JobAttributes
Specifies the handling of multiple copies, including collation, for
 jobs using these attributes.
getMultiplier()
- Method in class java.text.
DecimalFormat
Gets the multiplier for use in percent, per mille, and similar
 formats.
getMute()
- Method in interface javax.sound.midi.
MidiChannel
Obtains the current mute state for this channel.
getMutualAuthState()
- Method in interface org.ietf.jgss.
GSSContext
Determines if mutual authentication is enabled on
 this context.
getName()
- Method in class com.sun.management.
VMOption
Returns the name of this VM option.
getName()
- Method in class com.sun.net.httpserver.
HttpPrincipal
Returns the contents of this principal in the form
realm:username
.
getName()
- Method in class com.sun.security.auth.
LdapPrincipal
Returns the name originally used to create this principal.
getName()
- Method in class com.sun.security.auth.module.
NTSystem
Get the username for the current NT user.
getName()
- Method in class com.sun.security.auth.
NTDomainPrincipal
Return the Windows NT domain name for this
NTDomainPrincipal
.
getName()
- Method in class com.sun.security.auth.
NTSid
Return a string version of this
NTSid
.
getName()
- Method in class com.sun.security.auth.
NTUserPrincipal
Return the Windows NT username for this
NTPrincipal
.
getName()
- Method in class com.sun.security.auth.
UnixNumericGroupPrincipal
Return the user's group identification number (GID) for this
UnixNumericGroupPrincipal
.
getName()
- Method in class com.sun.security.auth.
UnixNumericUserPrincipal
Return the user identification number (UID) for this
UnixNumericUserPrincipal
.
getName()
- Method in class com.sun.security.auth.
UnixPrincipal
Return the Unix username for this
UnixPrincipal
.
getName()
- Method in class com.sun.security.auth.
UserPrincipal
Returns the name of this principal.
getName()
- Method in interface com.sun.source.doctree.
AttributeTree
Returns the name of the attribute.
getName()
- Method in interface com.sun.source.doctree.
AuthorTree
Returns the name of the author.
getName()
- Method in interface com.sun.source.doctree.
EndElementTree
Returns the name of this element.
getName()
- Method in interface com.sun.source.doctree.
EntityTree
Returns the name or value of the entity.
getName()
- Method in interface com.sun.source.doctree.
IdentifierTree
Returns the name of the identifier.
getName()
- Method in interface com.sun.source.doctree.
ParamTree
Returns the name of the parameter.
getName()
- Method in interface com.sun.source.doctree.
SerialFieldTree
Returns the name of the serial field.
getName()
- Method in interface com.sun.source.doctree.
StartElementTree
Returns the name of the element.
getName()
- Method in interface com.sun.source.tree.
IdentifierTree
Returns the name of the identifier.
getName()
- Method in interface com.sun.source.tree.
MemberReferenceTree
Returns the name of the reference.
getName()
- Method in interface com.sun.source.tree.
MethodTree
Returns the name of the method being declared.
getName()
- Method in interface com.sun.source.tree.
ModuleTree
Returns the name of the module.
getName()
- Method in interface com.sun.source.tree.
TypeParameterTree
Returns the name of the type parameter.
getName()
- Method in interface com.sun.source.tree.
VariableTree
Returns the name of the variable being declared or empty name if both the variable
 is unnamed and the preview features are enabled (Unnamed Patterns and Variables).
getName()
- Method in interface com.sun.source.util.
Plugin
Returns the user-friendly name of this plug-in.
getName()
- Method in class java.awt.
Component
Gets the name of the component.
getName()
- Method in class java.awt.
Cursor
Returns the name of this cursor.
getName()
- Method in class java.awt.datatransfer.
Clipboard
Returns the name of this clipboard object.
getName()
- Method in class java.awt.
Font
Returns the logical name of this
Font
.
getName()
- Method in class java.awt.
MenuComponent
Gets the name of the menu component.
getName()
- Method in class java.beans.
FeatureDescriptor
Gets the programmatic name of this feature.
getName()
- Method in class java.io.
File
Returns the name of the file or directory denoted by this abstract
 pathname.
getName()
- Method in class java.io.
ObjectStreamClass
Returns the name of the class described by this descriptor.
getName()
- Method in class java.io.
ObjectStreamField
Get the name of this field.
getName()
- Method in class java.lang.
Class
Returns the  name of the entity (class, interface, array class,
 primitive type, or void) represented by this
Class
object.
getName()
- Method in class java.lang.
ClassLoader
Returns the name of this class loader or
null
if
 this class loader is not named.
getName()
- Method in interface java.lang.invoke.
MethodHandleInfo
Returns the name of the cracked method handle's underlying member.
getName()
- Method in interface java.lang.management.
BufferPoolMXBean
Returns the name representing this buffer pool.
getName()
- Method in interface java.lang.management.
CompilationMXBean
Returns the name of the Just-in-time (JIT) compiler.
getName()
- Method in interface java.lang.management.
MemoryManagerMXBean
Returns the name representing this memory manager.
getName()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the name representing this memory pool.
getName()
- Method in interface java.lang.management.
OperatingSystemMXBean
Returns the operating system name.
getName()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the name representing the running Java virtual machine.
getName()
- Method in class java.lang.
Module
Returns the module name or
null
if this module is an unnamed
 module.
getName()
- Method in class java.lang.
Package
Return the name of this package.
getName()
- Method in class java.lang.reflect.
Constructor
Returns the name of this constructor, as a string.
getName()
- Method in class java.lang.reflect.
Executable
Returns the name of the executable represented by this object.
getName()
- Method in class java.lang.reflect.
Field
Returns the name of the field represented by this
Field
object.
getName()
- Method in interface java.lang.reflect.
Member
Returns the simple name of the underlying member or constructor
 represented by this Member.
getName()
- Method in class java.lang.reflect.
Method
Returns the name of the method represented by this
Method
object, as a
String
.
getName()
- Method in class java.lang.reflect.
Parameter
Returns the name of the parameter.
getName()
- Method in class java.lang.reflect.
RecordComponent
Returns the name of this record component.
getName()
- Method in interface java.lang.reflect.
TypeVariable
Returns the name of this type variable, as it occurs in the source code.
getName()
- Method in interface java.lang.
System.Logger
Returns the name of this logger.
getName()
- Method in enum class java.lang.
System.Logger.Level
Returns the name of this level.
getName()
- Method in class java.lang.
Thread
Returns this thread's name.
getName()
- Method in class java.lang.
ThreadGroup
Returns the name of this thread group.
getName()
- Method in class java.net.
HttpCookie
Returns the name of the cookie.
getName()
- Method in class java.net.
NetworkInterface
Get the name of this network interface.
getName()
- Method in exception class java.nio.file.attribute.
UserPrincipalNotFoundException
Returns the user principal name if this exception was created with the
 user principal name that was not found, otherwise
null
.
getName()
- Method in class java.security.
Identity
Deprecated.
Returns this identity's name.
getName()
- Method in interface java.security.
KeyStore.Entry.Attribute
Returns the attribute's name.
getName()
- Method in class java.security.
Permission
Returns the name of this
Permission
.
getName()
- Method in class java.security.
PKCS12Attribute
Returns the attribute's ASN.1 Object Identifier represented as a
 list of dot-separated integers.
getName()
- Method in interface java.security.
Principal
Returns the name of this
Principal
.
getName()
- Method in class java.security.
Provider
Returns the name of this
Provider
.
getName()
- Method in class java.security.spec.
NamedParameterSpec
Returns the standard name that determines the algorithm parameters.
getName()
- Method in enum class java.sql.
JDBCType
Returns the
SQLType
name that represents a SQL data type.
getName()
- Method in interface java.sql.
SQLType
Returns the
SQLType
name that represents a SQL data type.
getName()
- Method in class java.text.
AttributedCharacterIterator.Attribute
Returns the name of the attribute.
getName()
- Method in class java.util.logging.
Level
Return the non-localized string name of the Level.
getName()
- Method in class java.util.logging.
Logger
Get the name for this logger.
getName()
- Method in class java.util.zip.
ZipEntry
Returns the name of the entry.
getName()
- Method in class java.util.zip.
ZipFile
Returns the path name of the ZIP file.
getName()
- Method in class javax.accessibility.
AccessibilityProvider
Returns the name of this service provider.
getName()
- Method in class javax.crypto.
ExemptionMechanism
Returns the exemption mechanism name of this
ExemptionMechanism
object.
getName()
- Method in class javax.imageio.plugins.tiff.
TIFFTag
Returns the name of the tag, as it will appear in image metadata.
getName()
- Method in class javax.management.
Attribute
Returns a String containing the  name of the attribute.
getName()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the value of the
NAME
attribute of the
MLET
tag.
getName()
- Method in class javax.management.
MBeanFeatureInfo
Returns the name of the feature.
getName()
- Method in interface javax.management.openmbean.
OpenMBeanConstructorInfo
Returns the name of the constructor
 described by this
OpenMBeanConstructorInfo
instance.
getName()
- Method in interface javax.management.openmbean.
OpenMBeanOperationInfo
Returns the name of the operation
 described by this
OpenMBeanOperationInfo
instance.
getName()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns the name of the parameter
 described by this
OpenMBeanParameterInfo
instance.
getName()
- Method in class javax.management.relation.
RoleInfo
Returns the name of the role.
getName()
- Method in class javax.management.remote.
JMXPrincipal
Returns the name of this principal.
getName()
- Method in class javax.naming.
NameClassPair
Retrieves the name of this binding.
getName()
- Method in class javax.net.ssl.
SSLSessionBindingEvent
Returns the name to which the object is being bound, or the name
 from which the object is being unbound.
getName()
- Method in interface javax.print.attribute.
Attribute
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Chromaticity
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
ColorSupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Compression
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Copies
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
CopiesSupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
DateTimeAtCompleted
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
DateTimeAtCreation
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
DateTimeAtProcessing
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Destination
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
DialogOwner
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
DialogTypeSelection
Gets the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
DocumentName
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Fidelity
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Finishings
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobHoldUntil
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobImpressions
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobImpressionsCompleted
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobImpressionsSupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobKOctets
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobKOctetsProcessed
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobKOctetsSupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobMediaSheets
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobMediaSheetsCompleted
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobMediaSheetsSupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobMessageFromOperator
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobName
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobOriginatingUserName
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobPriority
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobPrioritySupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobSheets
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobState
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobStateReason
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
JobStateReasons
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Media
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
MediaPrintableArea
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
MediaSize
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
MultipleDocumentHandling
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
NumberOfDocuments
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
NumberOfInterveningJobs
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
NumberUp
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
NumberUpSupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
OrientationRequested
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
OutputDeviceAssigned
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PageRanges
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PagesPerMinute
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PagesPerMinuteColor
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PDLOverrideSupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PresentationDirection
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterInfo
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterIsAcceptingJobs
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterLocation
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterMakeAndModel
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterMessageFromOperator
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterMoreInfo
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterMoreInfoManufacturer
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterName
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterResolution
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterState
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterStateReason
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterStateReasons
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrinterURI
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
PrintQuality
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
QueuedJobCount
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
ReferenceUriSchemesSupported
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
RequestingUserName
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Severity
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
SheetCollate
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in class javax.print.attribute.standard.
Sides
Get the name of the category of which this attribute value is an
 instance.
getName()
- Method in interface javax.print.
PrintService
Returns a string name for this print service which may be used by
 applications to request a particular print service.
getName()
- Method in class javax.security.auth.callback.
NameCallback
Get the retrieved name.
getName()
- Method in class javax.security.auth.kerberos.
KerberosPrincipal
The returned string corresponds to the single-string
 representation of a Kerberos Principal name as specified in
 Section 2.1 of
RFC 1964
.
getName()
- Method in class javax.security.auth.x500.
X500Principal
Returns a string representation of the X.500 distinguished name using
 the format defined in RFC 2253.
getName()
- Method in class javax.smartcardio.
CardTerminal
Returns the unique name of this terminal.
getName()
- Method in class javax.sound.midi.
MidiDevice.Info
Obtains the name of the device.
getName()
- Method in interface javax.sound.midi.
Soundbank
Obtains the name of the sound bank.
getName()
- Method in class javax.sound.midi.
SoundbankResource
Obtains the name of the resource.
getName()
- Method in class javax.sound.sampled.
Mixer.Info
Obtains the name of the mixer.
getName()
- Method in class javax.sound.sampled.
Port.Info
Obtains the name of the port.
getName()
- Method in class javax.sound.sampled.
ReverbType
Obtains the name of this reverb type.
getName()
- Method in class javax.swing.
LookAndFeel
Return a short string that identifies this look and feel, e.g.
getName()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the name of this theme.
getName()
- Method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the name of this look and feel.
getName()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the name of this theme.
getName()
- Method in class javax.swing.plaf.metal.
OceanTheme
Return the name of this theme, "Ocean".
getName()
- Method in class javax.swing.plaf.multi.
MultiLookAndFeel
Returns a string, suitable for use in menus,
 that identifies this look and feel.
getName()
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Return a short string that identifies this look and feel.
getName()
- Method in class javax.swing.plaf.synth.
Region
Returns the name of the region.
getName()
- Method in class javax.swing.plaf.synth.
SynthLookAndFeel
Return a short string that identifies this look and feel.
getName()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the name of the element.
getName()
- Method in class javax.swing.text.
AbstractDocument.BranchElement
Gets the element name.
getName()
- Method in class javax.swing.text.
AbstractDocument.LeafElement
Gets the element name.
getName()
- Method in class javax.swing.text.
DefaultStyledDocument.SectionElement
Gets the name of the element.
getName()
- Method in interface javax.swing.text.
Element
Fetches the name of the element.
getName()
- Method in class javax.swing.text.html.
HTMLDocument.BlockElement
Gets the name of the element.
getName()
- Method in class javax.swing.text.html.
HTMLDocument.RunElement
Gets the name of the element.
getName()
- Method in class javax.swing.text.html.parser.
AttributeList
Returns the attribute name.
getName()
- Method in class javax.swing.text.html.parser.
DTD
Gets the name of the DTD.
getName()
- Method in class javax.swing.text.html.parser.
Element
Get the name of the element.
getName()
- Method in class javax.swing.text.html.parser.
Entity
Gets the name of the entity.
getName()
- Method in interface javax.swing.text.
Keymap
Fetches the name of the set of key-bindings.
getName()
- Method in interface javax.swing.text.
Style
Fetches the name of the style.
getName()
- Method in class javax.swing.text.
StyleContext.NamedStyle
Fetches the name of the style.
getName()
- Method in class javax.swing.
UIManager.LookAndFeelInfo
Returns the name of the look and feel in a form suitable
 for a menu or other presentation
getName()
- Method in enum class javax.tools.
DocumentationTool.Location
getName()
- Method in interface javax.tools.
FileObject
Returns a user-friendly name for this file object.
getName()
- Method in class javax.tools.
ForwardingFileObject
getName()
- Method in interface javax.tools.
JavaFileManager.Location
Returns the name of this location.
getName()
- Method in class javax.tools.
SimpleJavaFileObject
getName()
- Method in enum class javax.tools.
StandardLocation
getName()
- Method in interface javax.xml.crypto.dsig.keyinfo.
KeyName
Returns the name of this
KeyName
.
getName()
- Method in interface javax.xml.stream.events.
Attribute
Returns the QName for this attribute.
getName()
- Method in interface javax.xml.stream.events.
EndElement
Get the name of this event
getName()
- Method in interface javax.xml.stream.events.
EntityDeclaration
The entity's name
getName()
- Method in interface javax.xml.stream.events.
EntityReference
The name of the entity
getName()
- Method in interface javax.xml.stream.events.
NotationDeclaration
The notation name.
getName()
- Method in interface javax.xml.stream.events.
StartElement
Get the name of this event
getName()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getName()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns a QName for the current START_ELEMENT or END_ELEMENT event
getName()
- Method in class jdk.dynalink.
NamedOperation
Returns the name of this named operation.
getName()
- Method in interface jdk.javadoc.doclet.
Doclet
Returns a name identifying the doclet.
getName()
- Method in class jdk.javadoc.doclet.
StandardDoclet
getName()
- Method in interface jdk.javadoc.doclet.
Taglet
Returns the name of the tag supported by this taglet.
getName()
- Method in class jdk.jfr.
Configuration
Returns an identifying name (for example,
"default" or "profile")
.
getName()
- Method in class jdk.jfr.consumer.
RecordedClass
Returns the fully qualified name of the class (for example,
"java.lang.String"
).
getName()
- Method in class jdk.jfr.consumer.
RecordedClassLoader
Returns the name of the class loader (for example, "boot", "platform", and
 "app").
getName()
- Method in class jdk.jfr.consumer.
RecordedMethod
Returns the name of this method, for example
"toString"
.
getName()
- Method in class jdk.jfr.consumer.
RecordedThreadGroup
Returns the name of the thread group, or
null
if doesn't exist.
getName()
- Method in class jdk.jfr.
EventType
Returns an identifier for the event (for example,
"jdk.CPULoad"
).
getName()
- Method in class jdk.jfr.
Recording
Returns the name of this recording.
getName()
- Method in class jdk.jfr.
SettingDescriptor
Returns the name of the setting (for example,
"threshold"
).
getName()
- Method in class jdk.jfr.
ValueDescriptor
Returns the name of the value (for example,
"maxThroughput"
).
getName()
- Method in class jdk.management.jfr.
ConfigurationInfo
Returns the name of the configuration associated with this
ConfigurationInfo
(for example,
"default"
).
getName()
- Method in class jdk.management.jfr.
EventTypeInfo
Returns the name for the event type associated with this
EventTypeInfo
(for example,
"jdk.GarbageCollection"
).
getName()
- Method in class jdk.management.jfr.
RecordingInfo
Returns the name of the recording associated with this
RecordingInfo
.
getName()
- Method in class jdk.management.jfr.
SettingDescriptorInfo
Returns the name of the setting associated with this
SettingDescriptorInfo
(for example,
"threshold"
).
getName()
- Method in interface org.ietf.jgss.
GSSCredential
Retrieves the name of the entity that the credential asserts.
getName()
- Method in interface org.w3c.dom.
Attr
Returns the name of this attribute.
getName()
- Method in interface org.w3c.dom.
DocumentType
The name of DTD; i.e., the name immediately following the
DOCTYPE
keyword.
getName()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Anchor name.
getName()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
The name of the applet.
getName()
- Method in interface org.w3c.dom.html.
HTMLButtonElement
Form control or object name when submitted with a form.
getName()
- Method in interface org.w3c.dom.html.
HTMLFormElement
Names the form.
getName()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
The frame name (object of the
target
attribute).
getName()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
The frame name (object of the
target
attribute).
getName()
- Method in interface org.w3c.dom.html.
HTMLImageElement
The name of the element (for backwards compatibility).
getName()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Form control or object name when submitted with a form.
getName()
- Method in interface org.w3c.dom.html.
HTMLMapElement
Names the map (for use with
usemap
).
getName()
- Method in interface org.w3c.dom.html.
HTMLMetaElement
Meta information name.
getName()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Form control or object name when submitted with a form.
getName()
- Method in interface org.w3c.dom.html.
HTMLParamElement
The name of a run-time parameter.
getName()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
Form control or object name when submitted with a form.
getName()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Form control or object name when submitted with a form.
getName(int)
- Method in class java.awt.color.
ColorSpace
Returns the name of the component given the component index.
getName(int)
- Static method in class java.lang.
Character
Returns the name of the specified character
codePoint
, or null if the code point is
unassigned
.
getName(int)
- Method in interface java.nio.file.
Path
Returns a name element of this path as a
Path
object.
getName(int)
- Method in interface org.w3c.dom.
NameList
Returns the
index
th name item in the collection.
getName(int)
- Method in interface org.xml.sax.
AttributeList
Deprecated.
Return the name of an attribute in this list (by position).
getName(int)
- Method in class org.xml.sax.helpers.
AttributeListImpl
Deprecated.
Get the name of an attribute (by position).
getName(File)
- Method in class javax.swing.filechooser.
FileView
The name of the file.
getName(File)
- Method in class javax.swing.
JFileChooser
Returns the filename.
getName(CharSequence)
- Method in interface javax.lang.model.util.
Elements
Returns a name with the same sequence of characters as the
 argument.
getName(String)
- Method in class javax.security.auth.x500.
X500Principal
Returns a string representation of the X.500 distinguished name
 using the specified format.
getName(String, Map<String, String>)
- Method in class javax.security.auth.x500.
X500Principal
Returns a string representation of the X.500 distinguished name
 using the specified format.
getName(Operation)
- Static method in class jdk.dynalink.
NamedOperation
If the passed operation is a named operation, returns its
NamedOperation.getName()
, otherwise returns null.
getName(Oid)
- Method in interface org.ietf.jgss.
GSSCredential
Retrieves a Mechanism Name of the entity that the credential
 asserts.
getNameConstraints()
- Method in class java.security.cert.
TrustAnchor
Returns the name constraints parameter.
getNameConstraints()
- Method in class java.security.cert.
X509CertSelector
Returns the name constraints criterion.
getNameCount()
- Method in interface java.nio.file.
Path
Returns the number of name elements in the path.
getNamedGroups()
- Method in class javax.net.ssl.
SSLParameters
Returns a prioritized array of key exchange named groups names that
 can be used over the SSL/TLS/DTLS protocols.
getNamedItem(String)
- Method in interface org.w3c.dom.
NamedNodeMap
Retrieves a node specified by name.
getNamedItemNS(String, String)
- Method in interface org.w3c.dom.
NamedNodeMap
Retrieves a node specified by local name and namespace URI.
getNamedValues()
- Method in class javax.imageio.plugins.tiff.
TIFFTag
Returns an array of values for which mnemonic names are defined.
getNameExpression()
- Method in interface com.sun.source.tree.
VariableTree
Returns the qualified identifier for the name being "declared".
getNameInNamespace()
- Method in interface javax.naming.
Context
Retrieves the full name of this context within its own namespace.
getNameInNamespace()
- Method in class javax.naming.
InitialContext
getNameInNamespace()
- Method in class javax.naming.
NameClassPair
Retrieves the full name of this binding.
getNameParser(String)
- Method in interface javax.naming.
Context
Retrieves the parser associated with the named context.
getNameParser(String)
- Method in class javax.naming.
InitialContext
getNameParser(Name)
- Method in interface javax.naming.
Context
Retrieves the parser associated with the named context.
getNameParser(Name)
- Method in class javax.naming.
InitialContext
getNames()
- Method in interface javax.script.
ScriptEngineFactory
Returns an immutable list of  short names for the
ScriptEngine
, which may be used to
 identify the
ScriptEngine
by the
ScriptEngineManager
.
getNames()
- Method in interface jdk.javadoc.doclet.
Doclet.Option
Returns the list of names that may be used to identify the option.
getNames()
- Method in class jdk.jshell.
SourceCodeAnalysis.QualifiedNames
Known qualified names for the given simple name in the original code.
getNamesForMech(Oid)
- Method in class org.ietf.jgss.
GSSManager
Returns then name types supported by the indicated mechanism.
getNamespace(int)
- Method in class jdk.dynalink.
NamespaceOperation
Returns the i-th namespace in this namespace operation.
getNamespaceContext()
- Method in interface javax.xml.stream.events.
StartElement
Gets a read-only namespace context.
getNamespaceContext()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getNamespaceContext()
- Method in interface javax.xml.stream.
XMLEventWriter
Returns the current namespace context.
getNamespaceContext()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns a read only namespace context for the current
 position.
getNamespaceContext()
- Method in interface javax.xml.stream.
XMLStreamWriter
Returns the current namespace context.
getNamespaceContext()
- Method in interface javax.xml.xpath.
XPath
Return the current namespace context.
getNamespaceCount()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getNamespaceCount()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the count of namespaces declared on this START_ELEMENT or END_ELEMENT,
 this method is only valid on a START_ELEMENT, END_ELEMENT or NAMESPACE.
getNamespaceCount()
- Method in class jdk.dynalink.
NamespaceOperation
Returns the number of namespaces in this namespace operation.
getNamespaceMap()
- Method in class javax.xml.crypto.dsig.spec.
XPathFilterParameterSpec
Returns a map of namespace prefixes.
getNamespaceMap()
- Method in class javax.xml.crypto.dsig.spec.
XPathType
Returns a map of namespace prefixes.
getNamespacePrefix(int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getNamespacePrefix(int)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the prefix for the namespace declared at the
 index.
getNamespacePrefix(String, String)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
This implementation uses an internal
HashMap
to get the prefix
 that the specified URI maps to.
getNamespacePrefix(String, String)
- Method in interface javax.xml.crypto.
XMLCryptoContext
Returns the namespace prefix that the specified namespace URI is
 associated with.
getNamespaces()
- Method in interface javax.xml.stream.events.
EndElement
Returns an Iterator of namespaces that have gone out
 of scope.
getNamespaces()
- Method in interface javax.xml.stream.events.
StartElement
Returns an Iterator of namespaces declared on this element.
getNamespaces()
- Method in class jdk.dynalink.
NamespaceOperation
Returns the namespaces in this namespace operation.
getNamespaces(Operation)
- Static method in class jdk.dynalink.
NamespaceOperation
If the passed operation is a namespace operation, returns its
NamespaceOperation.getNamespaces()
, otherwise returns an empty array.
getNamespaceURI()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns
null
, since namespaces are not supported.
getNamespaceURI()
- Method in class javax.xml.namespace.
QName
Get the Namespace URI of this
QName
.
getNamespaceURI()
- Method in interface javax.xml.stream.events.
Namespace
Gets the uri bound to the prefix of this namespace
getNamespaceURI()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getNamespaceURI()
- Method in interface javax.xml.stream.
XMLStreamReader
If the current event is a START_ELEMENT or END_ELEMENT  this method
 returns the URI of the prefix or the default namespace.
getNamespaceURI()
- Method in interface org.w3c.dom.
Node
The namespace URI of this node, or
null
if it is
 unspecified (see ).
getNamespaceURI(int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getNamespaceURI(int)
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the uri for the namespace declared at the
 index.
getNamespaceURI(int)
- Method in interface org.w3c.dom.
NameList
Returns the
index
th namespaceURI item in the collection.
getNamespaceURI(String)
- Method in interface javax.xml.namespace.
NamespaceContext
Get Namespace URI bound to a prefix in the current scope.
getNamespaceURI(String)
- Method in interface javax.xml.stream.events.
StartElement
Gets the value that the prefix is bound to in the
 context of this element.
getNamespaceURI(String)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getNamespaceURI(String)
- Method in interface javax.xml.stream.
XMLStreamReader
Return the uri for the given prefix.
getNameType()
- Method in class javax.security.auth.kerberos.
KerberosPrincipal
Returns the name type of the
KerberosPrincipal
.
getNaN()
- Method in class java.text.
DecimalFormatSymbols
Gets the string used to represent "not a number".
getNano()
- Method in class java.time.
Duration
Gets the number of nanoseconds within the second in this duration.
getNano()
- Method in class java.time.
Instant
Gets the number of nanoseconds, later along the time-line, from the start
 of the second.
getNano()
- Method in class java.time.
LocalDateTime
Gets the nano-of-second field.
getNano()
- Method in class java.time.
LocalTime
Gets the nano-of-second field.
getNano()
- Method in class java.time.
OffsetDateTime
Gets the nano-of-second field.
getNano()
- Method in class java.time.
OffsetTime
Gets the nano-of-second field.
getNano()
- Method in class java.time.
ZonedDateTime
Gets the nano-of-second field.
getNanos()
- Method in class java.sql.
Timestamp
Gets this
Timestamp
object's
nanos
value.
getNativeContainer(Component)
- Static method in class java.awt.
Toolkit
Give native peers the ability to query the native container
 given a native component (eg the direct parent may be lightweight).
getNativeImageMetadataFormatName()
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns the name of the "native" image metadata format for
 this plug-in, which typically allows for lossless encoding and
 transmission of the image metadata stored in the format handled by
 this plug-in.
getNativeMetadataFormatName()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns the name of the "native" metadata format for this
 plug-in, which typically allows for lossless encoding and
 transmission of the metadata stored in the format handled by
 this plug-in.
getNativesForFlavor(DataFlavor)
- Method in interface java.awt.datatransfer.
FlavorTable
Returns a
List
of
String
natives to which the specified
DataFlavor
corresponds.
getNativesForFlavor(DataFlavor)
- Method in class java.awt.datatransfer.
SystemFlavorMap
Returns a
List
of
String
natives to which the specified
DataFlavor
can be translated by the data transfer subsystem.
getNativesForFlavors(DataFlavor[])
- Method in interface java.awt.datatransfer.
FlavorMap
Returns a
Map
of the specified
DataFlavor
s to their
 corresponding
String
native.
getNativesForFlavors(DataFlavor[])
- Method in class java.awt.datatransfer.
SystemFlavorMap
Returns a
Map
of the specified
DataFlavor
s to their most
 preferred
String
native.
getNativeStreamMetadataFormatName()
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns the name of the "native" stream metadata format for
 this plug-in, which typically allows for lossless encoding and
 transmission of the stream metadata stored in the format handled by
 this plug-in.
getNavigationFilter()
- Method in class javax.swing.
JFormattedTextField.AbstractFormatter
Subclass and override if you wish to provide a filter to restrict
 where the user can navigate to.
getNavigationFilter()
- Method in class javax.swing.text.
DefaultFormatter
Returns the
NavigationFilter
used to restrict where the
 cursor can be placed.
getNavigationFilter()
- Method in class javax.swing.text.
JTextComponent
Returns the
NavigationFilter
.
getNbNotifications()
- Method in class javax.management.timer.
Timer
Gets the number of timer notifications registered into the list of notifications.
getNbNotifications()
- Method in interface javax.management.timer.
TimerMBean
Gets the number of timer notifications registered into the list of notifications.
getNbOccurences(Integer)
- Method in class javax.management.timer.
Timer
Gets a copy of the remaining number of occurrences associated to a timer notification.
getNbOccurences(Integer)
- Method in interface javax.management.timer.
TimerMBean
Gets a copy of the remaining number of occurrences associated to a timer notification.
getNc()
- Method in class javax.smartcardio.
CommandAPDU
Returns the number of data bytes in the command body (Nc) or 0 if this
 APDU has no body.
getNCharacterStream(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated parameter as a
java.io.Reader
object in the Java programming language.
getNCharacterStream(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.io.Reader
object.
getNCharacterStream(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated parameter as a
java.io.Reader
object in the Java programming language.
getNCharacterStream(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.io.Reader
object.
getNClob(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
NCLOB
parameter as a
java.sql.NClob
object in the Java programming language.
getNClob(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
NClob
object
 in the Java programming language.
getNClob(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
NCLOB
parameter as a
java.sql.NClob
object in the Java programming language.
getNClob(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
NClob
object
 in the Java programming language.
getNe()
- Method in class javax.smartcardio.
CommandAPDU
Returns the maximum number of expected data bytes in a response
 APDU (Ne).
getNeedClientAuth()
- Method in class com.sun.net.httpserver.
HttpsParameters
Returns whether client authentication should be required.
getNeedClientAuth()
- Method in class javax.net.ssl.
SSLEngine
Returns true if the engine will
require
client authentication.
getNeedClientAuth()
- Method in class javax.net.ssl.
SSLParameters
Returns whether client authentication should be required.
getNeedClientAuth()
- Method in class javax.net.ssl.
SSLServerSocket
Returns true if client authentication will be
required
on
 newly
accept
ed server-mode
SSLSocket
s.
getNeedClientAuth()
- Method in class javax.net.ssl.
SSLSocket
Returns true if the socket will
require
client authentication.
getNeedClientAuth()
- Method in class javax.rmi.ssl.
SslRMIServerSocketFactory
Returns
true
if client authentication is
 required on SSL connections accepted by server sockets created
 by this factory.
getNeededLocation(int, int)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider.DragController
Returns the x argument, since this is used for horizontal
 splits.
getNeededLocation(int, int)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider.VerticalDragController
Returns the y argument, since this is used for vertical
 splits.
getNegativePrefix()
- Method in class java.text.
DecimalFormat
Get the negative prefix.
getNegativeSign()
- Method in class java.time.format.
DecimalStyle
Gets the character that represents the negative sign.
getNegativeSuffix()
- Method in class java.text.
DecimalFormat
Get the negative suffix.
getNegotiatedProperty(String)
- Method in interface javax.security.sasl.
SaslClient
Retrieves the negotiated property.
getNegotiatedProperty(String)
- Method in interface javax.security.sasl.
SaslServer
Retrieves the negotiated property.
getNestedException()
- Method in exception class javax.xml.stream.
XMLStreamException
Gets the nested exception.
getNestedPatterns()
- Method in interface com.sun.source.tree.
DeconstructionPatternTree
Returns the nested patterns.
getNestHost()
- Method in class java.lang.
Class
Returns the nest host of the
nest
to which the class
 or interface represented by this
Class
object belongs.
getNestingKind()
- Method in interface javax.lang.model.element.
TypeElement
Returns the
nesting kind
of this class or interface element.
getNestingKind()
- Method in class javax.tools.
ForwardingJavaFileObject
getNestingKind()
- Method in interface javax.tools.
JavaFileObject
Provides a hint about the nesting level of the class
 represented by this file object.
getNestingKind()
- Method in class javax.tools.
SimpleJavaFileObject
This implementation returns
null
.
getNestMembers()
- Method in class java.lang.
Class
Returns an array containing
Class
objects representing all the
 classes and interfaces that are members of the nest to which the class
 or interface represented by this
Class
object belongs.
getNetworkInterface()
- Method in class java.net.
MulticastSocket
Get the multicast network interface set for outgoing multicast
 datagrams sent from this socket.
getNetworkInterfaces()
- Static method in class java.net.
NetworkInterface
Returns an
Enumeration
of all the interfaces on this machine.
getNetworkPrefixLength()
- Method in class java.net.
InterfaceAddress
Returns the network prefix length for this address.
getNetworkTimeout()
- Method in interface java.sql.
Connection
Retrieves the number of milliseconds the driver will
 wait for a database request to complete.
getNewBinding()
- Method in class javax.naming.event.
NamingEvent
Retrieves the binding of the object after the change.
getNewDocument()
- Method in interface org.w3c.dom.ls.
LSLoadEvent
The document that finished loading.
getNewFolderAction()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns a new folder action.
getNewLeadSelectionPath()
- Method in class javax.swing.event.
TreeSelectionEvent
Returns the current lead path.
getNewLine()
- Method in interface org.w3c.dom.ls.
LSSerializer
The end-of-line sequence of characters to be used in the XML being
 written out.
getNewRoleValue()
- Method in class javax.management.relation.
RelationNotification
Returns new value of updated role (only for role update).
getNewState()
- Method in class java.awt.event.
WindowEvent
For
WINDOW_STATE_CHANGED
events returns the
 new state of the window.
getNewValue()
- Method in class java.beans.
PropertyChangeEvent
Gets the new value for the property, expressed as an Object.
getNewValue()
- Method in class java.util.prefs.
PreferenceChangeEvent
Returns the new value for the preference.
getNewValue()
- Method in class javax.management.
AttributeChangeNotification
Gets the new value of the attribute which has changed.
getNewValue()
- Method in interface org.w3c.dom.events.
MutationEvent
newValue
indicates the new value of the
Attr
node in DOMAttrModified events, and of the
CharacterData
node in DOMCharacterDataModified events.
getNext()
- Method in class javax.swing.text.html.parser.
AttributeList
Returns the next attribute in the list.
getNextEastWestVisualPositionFrom(int, Position.Bias, Shape, int, Position.Bias[])
- Method in class javax.swing.text.
CompositeView
Returns the next visual position for the cursor, in either the
 east or west direction.
getNextElementSibling()
- Method in interface org.w3c.dom.
ElementTraversal
Returns a reference to the sibling node of the element which most immediately
 follows the element in document order, and which is of the
Element
type.
getNextEntry()
- Method in class java.util.jar.
JarInputStream
Reads the next ZIP file entry and positions the stream at the
 beginning of the entry data.
getNextEntry()
- Method in class java.util.zip.
ZipInputStream
Reads the next ZIP file entry and positions the stream at the
 beginning of the entry data.
getNextEvent()
- Method in class java.awt.
EventQueue
Removes an event from the
EventQueue
and
 returns it.
getNextException()
- Method in exception class java.sql.
SQLException
Retrieves the exception chained to this
SQLException
object by setNextException(SQLException ex).
getNextFocusableComponent()
- Method in class javax.swing.
JComponent
Deprecated.
As of 1.4, replaced by
FocusTraversalPolicy
.
getNextJarEntry()
- Method in class java.util.jar.
JarInputStream
Reads the next JAR file entry and positions the stream at the
 beginning of the entry data.
getNextLeaf()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the leaf after this node or null if this node is the
 last leaf in the tree.
getNextLeftHit(int)
- Method in class java.awt.font.
TextLayout
Returns the hit for the next caret to the left (top); if no
 such hit, returns
null
.
getNextLeftHit(int, TextLayout.CaretPolicy)
- Method in class java.awt.font.
TextLayout
Returns the hit for the next caret to the left (top); if no
 such hit, returns
null
.
getNextLeftHit(TextHitInfo)
- Method in class java.awt.font.
TextLayout
Returns the hit for the next caret to the left (top); if no such
 hit, returns
null
.
getNextMatch(String, int, Position.Bias)
- Method in class javax.swing.
JList
Returns the next list element whose
toString
value
 starts with the given prefix.
getNextMatch(String, int, Position.Bias)
- Method in class javax.swing.
JTree
Returns the TreePath to the next tree element that
 begins with a prefix.
getNextNode()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the node that follows this node in a preorder traversal of this
 node's tree.
getNextNorthSouthVisualPositionFrom(int, Position.Bias, Shape, int, Position.Bias[])
- Method in class javax.swing.text.
CompositeView
Returns the next visual position for the cursor, in either the
 north or south direction.
getNextNorthSouthVisualPositionFrom(int, Position.Bias, Shape, int, Position.Bias[])
- Method in class javax.swing.text.
ParagraphView
Returns the next visual position for the cursor, in
 either the east or west direction.
getNextRightHit(int)
- Method in class java.awt.font.
TextLayout
Returns the hit for the next caret to the right (bottom); if no
 such hit, returns
null
.
getNextRightHit(int, TextLayout.CaretPolicy)
- Method in class java.awt.font.
TextLayout
Returns the hit for the next caret to the right (bottom); if no
 such hit, returns
null
.
getNextRightHit(TextHitInfo)
- Method in class java.awt.font.
TextLayout
Returns the hit for the next caret to the right (bottom); if there
 is no such hit, returns
null
.
getNextSequenceNumber()
- Method in class javax.management.remote.
NotificationResult
Returns the sequence number of the next notification available
 for querying.
getNextSibling()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the next sibling of this node, or
null
if
 the node has no next sibling.
getNextSibling()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the next sibling of this node in the parent's children array.
getNextSibling()
- Method in class javax.xml.crypto.dsig.dom.
DOMSignContext
Returns the nextSibling node.
getNextSibling()
- Method in class javax.xml.transform.dom.
DOMResult
Get the child node before which the result nodes will be inserted.
getNextSibling()
- Method in interface org.w3c.dom.
Node
The node immediately following this node.
getNextTabIndex(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the next tab index.
getNextTabIndexInRun(int, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the next tab index in the run.
getNextTabRun(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the next tab run.
getNextUpdate()
- Method in class java.security.cert.
X509CRL
Gets the
nextUpdate
date from the CRL.
getNextValue()
- Method in class javax.swing.
JSpinner
Returns the object in the sequence that comes after the object returned
 by
getValue()
.
getNextValue()
- Method in class javax.swing.
SpinnerDateModel
Returns the next
Date
in the sequence, or
null
if
 the next date is after
end
.
getNextValue()
- Method in class javax.swing.
SpinnerListModel
Returns the next legal value of the underlying sequence or
null
if value is already the last element.
getNextValue()
- Method in interface javax.swing.
SpinnerModel
Return the object in the sequence that comes after the object returned
 by
getValue()
.
getNextValue()
- Method in class javax.swing.
SpinnerNumberModel
Returns the next number in the sequence.
getNextVisualPositionFrom(int, Position.Bias, Shape, int, Position.Bias[])
- Method in class javax.swing.text.
AsyncBoxView
Provides a way to determine the next visually represented model
 location that one might place a caret.
getNextVisualPositionFrom(int, Position.Bias, Shape, int, Position.Bias[])
- Method in class javax.swing.text.
CompositeView
Provides a way to determine the next visually represented model
 location that one might place a caret.
getNextVisualPositionFrom(int, Position.Bias, Shape, int, Position.Bias[])
- Method in class javax.swing.text.
GlyphView
Provides a way to determine the next visually represented model
 location that one might place a caret.
getNextVisualPositionFrom(int, Position.Bias, Shape, int, Position.Bias[])
- Method in class javax.swing.text.
View
Provides a way to determine the next visually represented model
 location at which one might place a caret.
getNextVisualPositionFrom(GlyphView, int, Position.Bias, Shape, int, Position.Bias[])
- Method in class javax.swing.text.
GlyphView.GlyphPainter
Provides a way to determine the next visually represented model
 location that one might place a caret.
getNextVisualPositionFrom(JTextComponent, int, Position.Bias, int, Position.Bias[])
- Method in class javax.swing.plaf.basic.
BasicTextUI
Provides a way to determine the next visually represented model
 location that one might place a caret.
getNextVisualPositionFrom(JTextComponent, int, Position.Bias, int, Position.Bias[])
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getNextVisualPositionFrom
method on each UI handled by this object.
getNextVisualPositionFrom(JTextComponent, int, Position.Bias, int, Position.Bias[])
- Method in class javax.swing.plaf.
TextUI
Provides a way to determine the next visually represented model
 location that one might place a caret.
getNextVisualPositionFrom(JTextComponent, int, Position.Bias, int, Position.Bias[])
- Method in class javax.swing.text.
NavigationFilter
Returns the next visual position to place the caret at from an
 existing position.
getNextWarning()
- Method in exception class java.sql.
SQLWarning
Retrieves the warning chained to this
SQLWarning
object by
setNextWarning
.
getNextWarning()
- Method in exception class javax.sql.rowset.
RowSetWarning
Retrieves the warning chained to this
RowSetWarning
object.
getNextWord(JTextComponent, int)
- Static method in class javax.swing.text.
Utilities
Determines the start of the next word for the given location.
getNode()
- Method in class java.util.prefs.
PreferenceChangeEvent
Returns the preference node that emitted the event.
getNode()
- Method in class javax.xml.crypto.dom.
DOMStructure
Returns the node contained in this
DOMStructure
.
getNode()
- Method in class javax.xml.crypto.dsig.dom.
DOMValidateContext
Returns the node.
getNode()
- Method in class javax.xml.transform.dom.
DOMResult
Get the node that will contain the result DOM tree.
getNode()
- Method in class javax.xml.transform.dom.
DOMSource
Get the node that represents a Source DOM tree.
getNodeDimensions()
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the object that renders nodes in the tree, and which is
 responsible for calculating the dimensions of individual nodes.
getNodeDimensions(Object, int, int, boolean, Rectangle)
- Method in class javax.swing.plaf.basic.
BasicTreeUI.NodeDimensionsHandler
Responsible for getting the size of a particular node.
getNodeDimensions(Object, int, int, boolean, Rectangle)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns, by reference in
placeIn
,
 the size needed to represent
value
.
getNodeDimensions(Object, int, int, boolean, Rectangle)
- Method in class javax.swing.tree.
AbstractLayoutCache.NodeDimensions
Returns, by reference in bounds, the size and x origin to
 place value at.
getNodeName()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the node name associated with this node.
getNodeName()
- Method in interface org.w3c.dom.
Node
The name of this node, depending on its type; see the table above.
getNodeType()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the node type, which is always
ELEMENT_NODE
.
getNodeType()
- Method in interface org.w3c.dom.
Node
A code representing the type of the underlying object, as defined above.
getNodeValue()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the value associated with this node.
getNodeValue()
- Method in interface org.w3c.dom.
Node
The value of this node, depending on its type; see the table above.
getNoFallbackControl(List<String>)
- Static method in class java.util.
ResourceBundle.Control
Returns a
ResourceBundle.Control
in which the
getFormats
method returns the specified
formats
and the
getFallbackLocale
method returns
null
.
getNoHref()
- Method in interface org.w3c.dom.html.
HTMLAreaElement
Specifies that this area is inactive, i.e., has no associated action.
getNoImageIcon()
- Method in class javax.swing.text.html.
ImageView
Returns the icon to use if the image could not be found.
getNonce()
- Method in class javax.crypto.spec.
ChaCha20ParameterSpec
Returns the nonce value.
getNonContinuousLayoutDivider()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the divider to use when the
JSplitPane
is configured to
 not continuously layout.
getNonCriticalExtensionOIDs()
- Method in interface java.security.cert.
X509Extension
Gets a Set of the OID strings for the extension(s) marked
 NON-CRITICAL in the certificate/CRL managed by the object
 implementing this interface.
getNonHeapMemoryUsage()
- Method in interface java.lang.management.
MemoryMXBean
Returns the current memory usage of non-heap memory that
 is used by the Java virtual machine.
getNonRolloverBorder(AbstractButton)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Returns a non-rollover border for the button.
getNoResize()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
When true, forbid user from resizing frame.
getNormalBounds()
- Method in class javax.swing.
JInternalFrame
If the
JInternalFrame
is not in maximized state, returns
getBounds()
; otherwise, returns the bounds that the
JInternalFrame
would be restored to.
getNormalizedComponents(int[], int, float[], int)
- Method in class java.awt.image.
ColorModel
Returns an array of all of the color/alpha components in normalized
 form, given an unnormalized component array.
getNormalizedComponents(int[], int, float[], int)
- Method in class java.awt.image.
ComponentColorModel
Returns an array of all of the color/alpha components in normalized
 form, given an unnormalized component array.
getNormalizedComponents(Object, float[], int)
- Method in class java.awt.image.
ColorModel
Returns an array of all of the color/alpha components in normalized
 form, given a pixel in this
ColorModel
.
getNormalizedComponents(Object, float[], int)
- Method in class java.awt.image.
ComponentColorModel
Returns an array of all of the color/alpha components in normalized
 form, given a pixel in this
ColorModel
.
getNormalizingTransform()
- Method in class java.awt.
GraphicsConfiguration
Returns an
AffineTransform
that can be concatenated
 with the default
AffineTransform
of a
GraphicsConfiguration
so that 72 units in user
 space equals 1 inch in device space.
getNorthPane()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Returns the north pane.
getNoShade()
- Method in interface org.w3c.dom.html.
HTMLHRElement
Indicates to the user agent that there should be no shading in the
 rendering of this element.
getNotAfter()
- Method in class java.security.cert.
X509Certificate
Gets the
notAfter
date from the validity period of
 the certificate.
getNotAfter()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the
notAfter
date from the validity period of
 the certificate.
getNotationName()
- Method in interface javax.xml.stream.events.
EntityDeclaration
The name of the associated notation.
getNotationName()
- Method in interface org.w3c.dom.
Entity
For unparsed entities, the name of the notation for the entity.
getNotations()
- Method in interface javax.xml.stream.events.
DTD
Return a List containing the notations declared in the DTD.
getNotations()
- Method in interface org.w3c.dom.
DocumentType
A
NamedNodeMap
containing the notations declared in the
 DTD.
getNotBefore()
- Method in class java.security.cert.
X509Certificate
Gets the
notBefore
date from the validity period of
 the certificate.
getNotBefore()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the
notBefore
date from the validity period of
 the certificate.
getNote()
- Method in class javax.swing.
ProgressMonitor
Specifies the additional note that is displayed along with the
 progress message.
getNotification()
- Method in class javax.management.remote.
TargetedNotification
The emitted notification.
getNotification()
- Method in class javax.naming.ldap.
UnsolicitedNotificationEvent
Returns the unsolicited notification.
getNotification(String)
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns a ModelMBeanNotificationInfo requested by name.
getNotification(String)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
getNotificationID()
- Method in class javax.management.timer.
TimerNotification
Gets the identifier of this timer notification.
getNotificationIDs(String)
- Method in class javax.management.timer.
Timer
Gets all the identifiers of timer notifications corresponding to the specified type.
getNotificationIDs(String)
- Method in interface javax.management.timer.
TimerMBean
Gets all the identifiers of timer notifications corresponding to the specified type.
getNotificationInfo()
- Method in class javax.management.
MBeanServerDelegate
getNotificationInfo()
- Method in class javax.management.modelmbean.
RequiredModelMBean
Returns the array of Notifications always generated by the
 RequiredModelMBean.
getNotificationInfo()
- Method in class javax.management.monitor.
CounterMonitor
Returns a
NotificationInfo
object containing the
 name of the Java class of the notification and the notification
 types sent by the counter monitor.
getNotificationInfo()
- Method in class javax.management.monitor.
GaugeMonitor
Returns a
NotificationInfo
object containing the
 name of the Java class of the notification and the notification
 types sent by the gauge monitor.
getNotificationInfo()
- Method in class javax.management.monitor.
StringMonitor
Returns a
NotificationInfo
object containing the name of
 the Java class of the notification and the notification types sent by
 the string monitor.
getNotificationInfo()
- Method in interface javax.management.
NotificationBroadcaster
Returns an array indicating, for each notification this
 MBean may send, the name of the Java class of the notification
 and the notification type.
getNotificationInfo()
- Method in class javax.management.
NotificationBroadcasterSupport
getNotificationInfo()
- Method in class javax.management.relation.
RelationService
Returns a NotificationInfo object containing the name of the Java class
 of the notification and the notification types sent.
getNotificationInfo()
- Method in class javax.management.remote.
JMXConnectorServer
Returns an array indicating the notifications that this MBean
 sends.
getNotificationInfo()
- Method in class javax.management.
StandardEmitterMBean
getNotificationMessage(Integer)
- Method in class javax.management.timer.
Timer
Gets the timer notification detailed message corresponding to the specified identifier.
getNotificationMessage(Integer)
- Method in interface javax.management.timer.
TimerMBean
Gets the timer notification detailed message corresponding to the specified identifier.
getNotifications()
- Method in class javax.management.
MBeanInfo
Returns the list of the notifications emitted by the MBean.
getNotifications()
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns the list of the notifications emitted by the MBean.
getNotifications()
- Method in interface javax.management.openmbean.
OpenMBeanInfo
Returns an array of
MBeanNotificationInfo
instances
 describing each notification emitted by the open MBean
 described by this
OpenMBeanInfo
instance.
getNotificationType(Integer)
- Method in class javax.management.timer.
Timer
Gets the timer notification type corresponding to the specified identifier.
getNotificationType(Integer)
- Method in interface javax.management.timer.
TimerMBean
Gets the timer notification type corresponding to the specified identifier.
getNotificationUserData(Integer)
- Method in class javax.management.timer.
Timer
Gets the timer notification user data object corresponding to the specified identifier.
getNotificationUserData(Integer)
- Method in interface javax.management.timer.
TimerMBean
Gets the timer notification user data object corresponding to the specified identifier.
getNotifTypes()
- Method in class javax.management.
MBeanNotificationInfo
Returns the array of strings (in dot notation) containing the
 notification types that the MBean may emit.
getNotify()
- Method in class javax.management.monitor.
CounterMonitor
Gets the notification's on/off switch value common to all
 observed MBeans.
getNotify()
- Method in interface javax.management.monitor.
CounterMonitorMBean
Gets the notification's on/off switch value.
getNotifyDiffer()
- Method in class javax.management.monitor.
StringMonitor
Gets the differing notification's on/off switch value common to
 all observed MBeans.
getNotifyDiffer()
- Method in interface javax.management.monitor.
StringMonitorMBean
Gets the differing notification's on/off switch value.
getNotifyHigh()
- Method in class javax.management.monitor.
GaugeMonitor
Gets the high notification's on/off switch value common to all
 observed MBeans.
getNotifyHigh()
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Gets the high notification's on/off switch value.
getNotifyLow()
- Method in class javax.management.monitor.
GaugeMonitor
Gets the low notification's on/off switch value common to all
 observed MBeans.
getNotifyLow()
- Method in interface javax.management.monitor.
GaugeMonitorMBean
Gets the low notification's on/off switch value.
getNotifyMatch()
- Method in class javax.management.monitor.
StringMonitor
Gets the matching notification's on/off switch value common to
 all observed MBeans.
getNotifyMatch()
- Method in interface javax.management.monitor.
StringMonitorMBean
Gets the matching notification's on/off switch value.
getNoType(TypeKind)
- Method in interface javax.lang.model.util.
Types
Returns a pseudo-type used where no actual type is appropriate.
getNow(T)
- Method in class java.util.concurrent.
CompletableFuture
Returns the result value (or throws any encountered exception)
 if completed, else returns the given valueIfAbsent.
getNoWrap()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Suppress word wrapping.
getNr()
- Method in class javax.smartcardio.
ResponseAPDU
Returns the number of data bytes in the response body (Nr) or 0 if this
 APDU has no body.
getNString(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated
NCHAR
,
NVARCHAR
or
LONGNVARCHAR
parameter as
 a
String
in the Java programming language.
getNString(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
String
in the Java programming language.
getNString(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated
NCHAR
,
NVARCHAR
or
LONGNVARCHAR
parameter as
 a
String
in the Java programming language.
getNString(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
String
in the Java programming language.
getNullFormatter()
- Method in class javax.swing.text.
DefaultFormatterFactory
Returns the formatter to use if the value is null.
getNullType()
- Method in interface javax.lang.model.util.
Types
Returns the null type.
getNumBands()
- Method in class java.awt.image.
Raster
Returns the number of bands (samples per pixel) in this Raster.
getNumBands()
- Method in class java.awt.image.
SampleModel
Returns the total number of bands of image data.
getNumBands()
- Method in class javax.imageio.
ImageTypeSpecifier
Return the number of bands
 specified by this object.
getNumBanks()
- Method in class java.awt.image.
DataBuffer
Returns the number of banks in this DataBuffer.
getNumber()
- Method in class javax.imageio.plugins.tiff.
TIFFTag
Returns the integer used to represent the tag.
getNumber()
- Method in class javax.swing.
SpinnerNumberModel
Returns the value of the current element of the sequence.
getNumberFormat()
- Method in class java.text.
DateFormat
Gets the number formatter which this date/time formatter uses to
 format and parse a time.
getNumberInstance()
- Static method in class java.text.
NumberFormat
Returns a general-purpose number format for the current default
FORMAT
locale.
getNumberInstance(Locale)
- Static method in class java.text.
NumberFormat
Returns a general-purpose number format for the specified locale.
getNumberInstance(Locale)
- Method in class java.text.spi.
NumberFormatProvider
Returns a new general-purpose
NumberFormat
instance for
 the specified locale.
getNumberOfButtons()
- Static method in class java.awt.
MouseInfo
Returns the number of buttons on the mouse.
getNumberOfDependents()
- Method in class java.util.concurrent.
CompletableFuture
Returns the estimated number of CompletableFutures whose
 completions are awaiting completion of this CompletableFuture.
getNumberOfPages()
- Method in class java.awt.print.
Book
Returns the number of pages in this
Book
.
getNumberOfPages()
- Method in interface java.awt.print.
Pageable
Returns the number of pages in the set.
getNumberOfSubscribers()
- Method in class java.util.concurrent.
SubmissionPublisher
Returns the number of current subscribers.
getNumberValue()
- Method in interface org.w3c.dom.xpath.
XPathResult
The value of this number result.
getNumberWaiting()
- Method in class java.util.concurrent.
CyclicBarrier
Returns the number of parties currently waiting at the barrier.
getNumChars()
- Method in class java.awt.font.
LineMetrics
Returns the number of characters (
char
values) in the text whose
 metrics are encapsulated by this
LineMetrics
object.
getNumColorComponents()
- Method in class java.awt.image.
ColorModel
Returns the number of color components in this
ColorModel
.
getNumComponents()
- Method in class java.awt.color.
ColorSpace
Returns the number of components of this ColorSpace.
getNumComponents()
- Method in class java.awt.color.
ICC_Profile
Returns the number of color components in the "input" color space of this
 profile.
getNumComponents()
- Method in class java.awt.image.
ColorModel
Returns the number of components, including alpha, in this
ColorModel
.
getNumComponents()
- Method in class java.awt.image.
LookupTable
Returns the number of components in the lookup table.
getNumComponents()
- Method in class javax.imageio.
ImageTypeSpecifier
Return the number of color components
 specified by this object.
getNumDataElements()
- Method in class java.awt.image.
ComponentSampleModel
Returns the number of data elements needed to transfer a pixel
 with the
ComponentSampleModel.getDataElements(int, int, Object, DataBuffer)
and
ComponentSampleModel.setDataElements(int, int, Object, DataBuffer)
methods.
getNumDataElements()
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the number of data elements needed to transfer one pixel
 via the
MultiPixelPackedSampleModel.getDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer)
and
MultiPixelPackedSampleModel.setDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer)
methods.
getNumDataElements()
- Method in class java.awt.image.
Raster
Returns the number of data elements needed to transfer one pixel
  via the getDataElements and setDataElements methods.
getNumDataElements()
- Method in class java.awt.image.
SampleModel
Returns the number of data elements needed to transfer a pixel
  via the getDataElements and setDataElements methods.
getNumDataElements()
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns the number of data elements needed to transfer one pixel
 via the getDataElements and setDataElements methods.
getNumDesignAxes()
- Method in interface java.awt.font.
MultipleMaster
Returns the number of multiple master design controls.
getNumericCode()
- Method in class java.util.
Currency
Returns the ISO 4217 numeric code of this currency.
getNumericCodeAsString()
- Method in class java.util.
Currency
Returns the 3 digit ISO 4217 numeric code of this currency as a
String
.
getNumericFunctions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves a comma-separated list of math functions available with
 this database.
getNumericValue(char)
- Static method in class java.lang.
Character
Returns the
int
value that the specified Unicode
 character represents.
getNumericValue(int)
- Static method in class java.lang.
Character
Returns the
int
value that the specified
 character (Unicode code point) represents.
getNumFactors()
- Method in class java.awt.image.
RescaleOp
Returns the number of scaling factors and offsets used in this
 RescaleOp.
getNumGlyphs()
- Method in class java.awt.
Font
Returns the number of glyphs in this
Font
.
getNumGlyphs()
- Method in class java.awt.font.
GlyphVector
Returns the number of glyphs in this
GlyphVector
.
getNumImages(boolean)
- Method in class javax.imageio.
ImageReader
Returns the number of images, not including thumbnails, available
 from the current input source.
getNumParameters()
- Method in class java.awt.image.renderable.
ParameterBlock
Returns the number of parameters (not including source images).
getNumSources()
- Method in class java.awt.image.renderable.
ParameterBlock
Returns the number of source images.
getNumThumbnails()
- Method in class javax.imageio.
IIOImage
Returns the number of thumbnails stored in this
IIOImage
.
getNumThumbnails(int)
- Method in class javax.imageio.
ImageReader
Returns the number of thumbnail preview images associated with
 the given image.
getNumThumbnailsSupported(ImageTypeSpecifier, ImageWriteParam, IIOMetadata, IIOMetadata)
- Method in class javax.imageio.
ImageWriter
Returns the number of thumbnails supported by the format being
 written, given the image type and any additional write
 parameters and metadata objects that will be used during
 encoding.
getNumTIFFFields()
- Method in class javax.imageio.plugins.tiff.
TIFFDirectory
Returns the number of
TIFFField
s in this directory.
getNumXTiles()
- Method in class java.awt.image.
BufferedImage
Returns the number of tiles in the x direction.
getNumXTiles()
- Method in interface java.awt.image.
RenderedImage
Returns the number of tiles in the X direction.
getNumYTiles()
- Method in class java.awt.image.
BufferedImage
Returns the number of tiles in the y direction.
getNumYTiles()
- Method in interface java.awt.image.
RenderedImage
Returns the number of tiles in the Y direction.
getObject()
- Method in class java.security.
GuardedObject
Retrieves the guarded object, or throws an exception if access
 to the guarded object is denied by the guard.
getObject()
- Method in class java.security.
SignedObject
Retrieves the encapsulated object.
getObject()
- Method in interface java.sql.
Ref
Retrieves the SQL structured type instance referenced by
 this
Ref
object.
getObject()
- Method in class javax.naming.
Binding
Retrieves the object bound to the name of this binding.
getObject()
- Method in class javax.naming.spi.
DirStateFactory.Result
Retrieves the object to be bound.
getObject()
- Method in class javax.sql.rowset.serial.
SerialJavaObject
Returns an
Object
that is a copy of this
SerialJavaObject
object.
getObject()
- Method in class javax.sql.rowset.serial.
SerialRef
Returns an
Object
representing the SQL structured type
 to which this
SerialRef
object refers.
getObject()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Serialized applet file.
getObject(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated parameter as an
Object
in the Java programming language.
getObject(int)
- Method in interface java.sql.
ResultSet
Gets the value of the designated column in the current row
 of this
ResultSet
object as
 an
Object
in the Java programming language.
getObject(int, Class<T>)
- Method in interface java.sql.
CallableStatement
Returns an object representing the value of OUT parameter
parameterIndex
and will convert from the
 SQL type of the parameter to the requested Java data type, if the
 conversion is supported.
getObject(int, Class<T>)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object and will convert from the
 SQL type of the column to the requested Java data type, if the
 conversion is supported.
getObject(int, Map<String, Class<?>>)
- Method in interface java.sql.
CallableStatement
Returns an object representing the value of OUT parameter
parameterIndex
and uses
map
for the custom
 mapping of the parameter value.
getObject(int, Map<String, Class<?>>)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as an
Object
in the Java programming language.
getObject(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a parameter as an
Object
in the Java
 programming language.
getObject(String)
- Method in interface java.sql.
ResultSet
Gets the value of the designated column in the current row
 of this
ResultSet
object as
 an
Object
in the Java programming language.
getObject(String)
- Method in class java.util.
ResourceBundle
Gets an object for the given key from this resource bundle or one of its parents.
getObject(String, Class<T>)
- Method in interface java.sql.
CallableStatement
Returns an object representing the value of OUT parameter
parameterName
and will convert from the
 SQL type of the parameter to the requested Java data type, if the
 conversion is supported.
getObject(String, Class<T>)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object and will convert from the
 SQL type of the column to the requested Java data type, if the
 conversion is supported.
getObject(String, Map<String, Class<?>>)
- Method in interface java.sql.
CallableStatement
Returns an object representing the value of OUT parameter
parameterName
and uses
map
for the custom
 mapping of the parameter value.
getObject(String, Map<String, Class<?>>)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as an
Object
in the Java programming language.
getObject(Key)
- Method in class javax.crypto.
SealedObject
Retrieves the original (encapsulated) object.
getObject(Key, String)
- Method in class javax.crypto.
SealedObject
Retrieves the original (encapsulated) object.
getObject(Map<String, Class<?>>)
- Method in interface java.sql.
Ref
Retrieves the referenced object and maps it to a Java type
 using the given type map.
getObject(Map<String, Class<?>>)
- Method in class javax.sql.rowset.serial.
SerialRef
Returns an
Object
representing the SQL structured type
 to which this
SerialRef
object refers.
getObject(Cipher)
- Method in class javax.crypto.
SealedObject
Retrieves the original (encapsulated) object.
getObjectArrayMaxLength(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the maximum number of array elements that may be used
 to define the
Object
reference within the named
 element.
getObjectArrayMaxLength(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getObjectArrayMinLength(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the minimum number of array elements that may be used
 to define the
Object
reference within the named
 element.
getObjectArrayMinLength(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getObjectClass(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the
Class
type of the
Object
reference stored within the element.
getObjectClass(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getObjectDefaultValue(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns an
Object
s containing the default
 value for the
Object
reference within
 the named element.
getObjectDefaultValue(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getObjectEnumerations(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns an array of
Object
s containing the legal
 enumerated values for the
Object
reference within
 the named element.
getObjectEnumerations(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getObjectForLayer(int)
- Method in class javax.swing.
JLayeredPane
Returns the Integer object associated with a specified layer.
getObjectInputFilter()
- Method in class java.io.
ObjectInputStream
Returns the deserialization filter for this stream.
getObjectInstance(Object, Name, Context, Hashtable<?, ?>)
- Static method in class javax.naming.spi.
NamingManager
Creates an instance of an object for the specified object
 and environment.
getObjectInstance(Object, Name, Context, Hashtable<?, ?>)
- Method in interface javax.naming.spi.
ObjectFactory
Creates an object using the location or reference information
 specified.
getObjectInstance(Object, Name, Context, Hashtable<?, ?>, Attributes)
- Static method in class javax.naming.spi.
DirectoryManager
Creates an instance of an object for the specified object,
 attributes, and environment.
getObjectInstance(Object, Name, Context, Hashtable<?, ?>, Attributes)
- Method in interface javax.naming.spi.
DirObjectFactory
Creates an object using the location or reference information, and attributes
 specified.
getObjectInstance(ObjectName)
- Method in interface javax.management.
MBeanServer
getObjectInstance(ObjectName)
- Method in interface javax.management.
MBeanServerConnection
Gets the
ObjectInstance
for a given MBean
 registered with the MBean server.
getObjectInstance(ObjectName, Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.getObjectInstance(ObjectName)
.
getObjectInstance(ObjectName, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
getObjectInstance(ObjectName, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
getObjectMaxValue(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the maximum legal value for the
Object
reference within the named element.
getObjectMaxValue(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getObjectMinValue(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the minimum legal value for the
Object
reference within the named element.
getObjectMinValue(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getObjectName()
- Method in interface java.lang.management.
PlatformManagedObject
Returns an
ObjectName
instance representing
 the object name of this platform managed object.
getObjectName()
- Method in class javax.management.
MBeanServerInvocationHandler
The name of the MBean within the MBean server to which methods
 are forwarded.
getObjectName()
- Method in class javax.management.
ObjectInstance
Returns the object name part.
getObjectName()
- Method in class javax.management.relation.
RelationNotification
Returns the ObjectName of the
 created/removed/updated relation.
getObjectParameter(int)
- Method in class java.awt.image.renderable.
ParameterBlock
Gets a parameter as an object.
getObjectPendingFinalizationCount()
- Method in interface java.lang.management.
MemoryMXBean
Deprecated.
Finalization has been deprecated for removal.  See
Object.finalize()
for details.
getObjects()
- Method in interface javax.xml.crypto.dsig.
XMLSignature
Returns an
unmodifiable
 list
of
XMLObject
s contained in this
XMLSignature
.
getObjectSize(Object)
- Method in interface java.lang.instrument.
Instrumentation
Returns an implementation-specific approximation of the amount of storage consumed by
 the specified object.
getObjectStreamClass()
- Method in class java.io.
ObjectInputStream.GetField
Get the ObjectStreamClass that describes the fields in the stream.
getObjectValueType(String)
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns one of the enumerated values starting with
VALUE_
, indicating the type of values
 (enumeration, range, or array) that are allowed for the
Object
reference.
getObjectValueType(String)
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getObservedAttribute()
- Method in class javax.management.monitor.
Monitor
Gets the attribute being observed.
getObservedAttribute()
- Method in interface javax.management.monitor.
MonitorMBean
Gets the attribute being observed.
getObservedAttribute()
- Method in class javax.management.monitor.
MonitorNotification
Gets the observed attribute of this monitor notification.
getObservedObject()
- Method in class javax.management.monitor.
Monitor
Deprecated.
As of JMX 1.2, replaced by
Monitor.getObservedObjects()
getObservedObject()
- Method in interface javax.management.monitor.
MonitorMBean
Deprecated.
As of JMX 1.2, replaced by
MonitorMBean.getObservedObjects()
getObservedObject()
- Method in class javax.management.monitor.
MonitorNotification
Gets the observed object of this monitor notification.
getObservedObjects()
- Method in class javax.management.monitor.
Monitor
Returns an array containing the objects being observed.
getObservedObjects()
- Method in interface javax.management.monitor.
MonitorMBean
Returns an array containing the objects being observed.
getOcspExtensions()
- Method in class java.security.cert.
PKIXRevocationChecker
Gets the optional OCSP request extensions.
getOcspResponder()
- Method in class java.security.cert.
PKIXRevocationChecker
Gets the URI that identifies the location of the OCSP responder.
getOcspResponderCert()
- Method in class java.security.cert.
PKIXRevocationChecker
Gets the OCSP responder's certificate.
getOcspResponses()
- Method in class java.security.cert.
PKIXRevocationChecker
Gets the OCSP responses.
getOctetStream()
- Method in class javax.xml.crypto.
OctetStreamData
Returns the input stream of this
OctetStreamData
.
getOffendingNode()
- Method in exception class javax.imageio.metadata.
IIOInvalidTreeException
Returns the
Node
that caused the error in parsing.
getOffscreenBuffer(Component, int, int)
- Method in class javax.swing.
RepaintManager
Return the offscreen buffer that should be used as a double buffer with
 the component
c
.
getOffset()
- Method in class java.awt.image.
DataBuffer
Returns the offset of the default bank in array elements.
getOffset()
- Method in class java.awt.image.
LookupTable
Returns the offset.
getOffset()
- Method in class java.io.
ObjectStreamField
Offset of field within instance data.
getOffset()
- Method in class java.net.
DatagramPacket
Returns the offset of the data to be sent or the offset of the
 data received.
getOffset()
- Method in class java.text.
CollationElementIterator
Returns the character offset in the original text corresponding to the next
 collation element.
getOffset()
- Method in interface java.time.chrono.
ChronoZonedDateTime
Gets the zone offset, such as '+01:00'.
getOffset()
- Method in class java.time.
OffsetDateTime
Gets the zone offset, such as '+01:00'.
getOffset()
- Method in class java.time.
OffsetTime
Gets the zone offset, such as '+01:00'.
getOffset()
- Method in class java.time.
ZonedDateTime
Gets the zone offset, such as '+01:00'.
getOffset()
- Method in class javax.imageio.stream.
IIOByteBuffer
Returns the offset within the byte array returned by
getData
at which the data of interest start.
getOffset()
- Method in class javax.management.monitor.
CounterMonitor
Gets the offset value common to all observed MBeans.
getOffset()
- Method in interface javax.management.monitor.
CounterMonitorMBean
Gets the offset value.
getOffset()
- Method in class javax.print.attribute.
EnumSyntax
Returns the lowest integer value used by this enumeration value's
 enumeration class.
getOffset()
- Method in class javax.print.attribute.standard.
Finishings
Returns the lowest integer value used by class
Finishings
.
getOffset()
- Method in class javax.print.attribute.standard.
OrientationRequested
Returns the lowest integer value used by class
OrientationRequested
.
getOffset()
- Method in class javax.print.attribute.standard.
PrintQuality
Returns the lowest integer value used by class
PrintQuality
.
getOffset()
- Method in interface javax.swing.event.
DocumentEvent
Returns the offset within the document of the start
 of the change.
getOffset()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI.DragWindow
Returns the offset.
getOffset()
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Returns the offset within the document of the start of the change.
getOffset()
- Method in class javax.swing.text.
DefaultStyledDocument.ElementSpec
Gets the starting offset.
getOffset()
- Method in interface javax.swing.text.
Position
Fetches the current offset within the document.
getOffset(int, int)
- Method in class java.awt.image.
ComponentSampleModel
Gets the offset for the first band of pixel (x,y).
getOffset(int, int)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the offset of pixel (x, y) in data array elements.
getOffset(int, int)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns the offset (in data array elements) of pixel (x,y).
getOffset(int, int)
- Method in class javax.swing.text.
BoxView
Fetches the offset of a particular child's current layout.
getOffset(int, int, int)
- Method in class java.awt.image.
ComponentSampleModel
Gets the offset for band b of pixel (x,y).
getOffset(int, int, int, int, int, int)
- Method in class java.util.
SimpleTimeZone
Returns the difference in milliseconds between local time and
 UTC, taking into account both the raw offset and the effect of
 daylight saving, for the specified date and time.
getOffset(int, int, int, int, int, int)
- Method in class java.util.
TimeZone
Gets the time zone offset, for current date, modified in case of
 daylight savings.
getOffset(long)
- Method in class java.util.
SimpleTimeZone
Returns the offset of this time zone from UTC at the given
 time.
getOffset(long)
- Method in class java.util.
TimeZone
Returns the offset of this time zone from UTC at the specified
 date.
getOffset(Instant)
- Method in class java.time.zone.
ZoneRules
Gets the offset applicable at the specified instant in these rules.
getOffset(LocalDateTime)
- Method in class java.time.zone.
ZoneRules
Gets a suitable offset for the specified local date-time in these rules.
getOffsetAfter()
- Method in class java.time.zone.
ZoneOffsetTransition
Gets the offset after the transition.
getOffsetAfter()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Gets the offset after the transition.
getOffsetBefore()
- Method in class java.time.zone.
ZoneOffsetTransition
Gets the offset before the transition.
getOffsetBefore()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Gets the offset before the transition.
getOffsetHit(int)
- Method in class java.awt.font.
TextHitInfo
Creates a
TextHitInfo
whose character index is offset
 by
delta
from the
charIndex
of this
TextHitInfo
.
getOffsets()
- Method in class java.awt.image.
DataBuffer
Returns the offsets (in array elements) of all the banks.
getOffsets(float[])
- Method in class java.awt.image.
RescaleOp
Returns the offsets in the given array.
getOldBinding()
- Method in class javax.naming.event.
NamingEvent
Retrieves the binding of the object before the change.
getOldLeadSelectionPath()
- Method in class javax.swing.event.
TreeSelectionEvent
Returns the path that was previously the lead path.
getOldRoleValue()
- Method in class javax.management.relation.
RelationNotification
Returns old value of updated role (only for role update).
getOldState()
- Method in class java.awt.event.
WindowEvent
For
WINDOW_STATE_CHANGED
events returns the
 previous state of the window.
getOldValue()
- Method in class java.beans.
PropertyChangeEvent
Gets the old value for the property, expressed as an Object.
getOldValue()
- Method in class javax.management.
AttributeChangeNotification
Gets the old value of the attribute which has changed.
getOmni()
- Method in interface javax.sound.midi.
MidiChannel
Obtains the current omni mode.
getOOBInline()
- Method in class java.net.
Socket
Tests if
SO_OOBINLINE
is enabled.
getOpacity()
- Method in class java.awt.
Window
Returns the opacity of the window.
getOpaque()
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Returns the current value,
 with memory effects as specified by
VarHandle.getOpaque(java.lang.Object...)
.
getOpaque()
- Method in class java.util.concurrent.atomic.
AtomicInteger
Returns the current value,
 with memory effects as specified by
VarHandle.getOpaque(java.lang.Object...)
.
getOpaque()
- Method in class java.util.concurrent.atomic.
AtomicLong
Returns the current value,
 with memory effects as specified by
VarHandle.getOpaque(java.lang.Object...)
.
getOpaque()
- Method in class java.util.concurrent.atomic.
AtomicReference
Returns the current value,
 with memory effects as specified by
VarHandle.getOpaque(java.lang.Object...)
.
getOpaque(int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getOpaque(java.lang.Object...)
.
getOpaque(int)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getOpaque(java.lang.Object...)
.
getOpaque(int)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Returns the current value of the element at index
i
,
 with memory effects as specified by
VarHandle.getOpaque(java.lang.Object...)
.
getOpaque(Object...)
- Method in class java.lang.invoke.
VarHandle
Returns the value of a variable, accessed in program order, but with no
 assurance of memory ordering effects with respect to other threads.
getOpenFileDescriptorCount()
- Method in interface com.sun.management.
UnixOperatingSystemMXBean
Returns the number of open file descriptors.
getOpenIcon()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the icon used to represent non-leaf nodes that are expanded.
getOpenType()
- Method in class javax.management.openmbean.
OpenMBeanAttributeInfoSupport
Returns the open type for the values of the attribute described
 by this
OpenMBeanAttributeInfoSupport
instance.
getOpenType()
- Method in interface javax.management.openmbean.
OpenMBeanParameterInfo
Returns the
open type
of the values of the parameter
 described by this
OpenMBeanParameterInfo
instance.
getOpenType()
- Method in class javax.management.openmbean.
OpenMBeanParameterInfoSupport
Returns the open type for the values of the parameter described
 by this
OpenMBeanParameterInfoSupport
instance.
getOperatingSystemMXBean()
- Static method in class java.lang.management.
ManagementFactory
Returns the managed bean for the operating system on which
 the Java virtual machine is running.
getOperation()
- Method in class java.rmi.server.
Operation
Deprecated.
no replacement
getOperation()
- Method in class jdk.dynalink.
CallSiteDescriptor
Returns the operation at the call site.
getOperation(String)
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns a ModelMBeanOperationInfo requested by name.
getOperation(String)
- Method in class javax.management.modelmbean.
ModelMBeanInfoSupport
getOperations()
- Method in interface java.rmi.server.
Skeleton
Deprecated.
no replacement
getOperations()
- Method in class javax.management.
MBeanInfo
Returns the list of operations  of the MBean.
getOperations()
- Method in interface javax.management.modelmbean.
ModelMBeanInfo
Returns the list of operations  of the MBean.
getOperations()
- Method in interface javax.management.openmbean.
OpenMBeanInfo
Returns an array of
OpenMBeanOperationInfo
instances
 describing each operation in the open MBean described by this
OpenMBeanInfo
instance.
getOppositeComponent()
- Method in class java.awt.event.
FocusEvent
Returns the other Component involved in this focus change.
getOppositeWindow()
- Method in class java.awt.event.
WindowEvent
Returns the other Window involved in this focus or activation change.
getOptimizeHuffmanTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageWriteParam
Returns the value passed into the most recent call
 to
setOptimizeHuffmanTables
, or
false
if
setOptimizeHuffmanTables
has never been called.
getOption(int)
- Method in interface java.net.
SocketOptions
Fetch the value of an option.
getOption(SctpSocketOption<T>)
- Method in class com.sun.nio.sctp.
SctpChannel
Returns the value of a socket option.
getOption(SctpSocketOption<T>)
- Method in class com.sun.nio.sctp.
SctpServerChannel
Returns the value of a socket option.
getOption(SctpSocketOption<T>, Association)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Returns the value of a socket option.
getOption(DatagramSocket, SocketOption<T>)
- Static method in class jdk.net.
Sockets
Deprecated.
use
DatagramSocket.getOption(SocketOption)
instead.
getOption(ServerSocket, SocketOption<T>)
- Static method in class jdk.net.
Sockets
Deprecated.
use
ServerSocket.getOption(SocketOption)
instead.
getOption(SocketOption<T>)
- Method in class java.net.
DatagramSocket
Returns the value of a socket option.
getOption(SocketOption<T>)
- Method in class java.net.
DatagramSocketImpl
Called to get a socket option.
getOption(SocketOption<T>)
- Method in class java.net.
ServerSocket
Returns the value of a socket option.
getOption(SocketOption<T>)
- Method in class java.net.
Socket
Returns the value of a socket option.
getOption(SocketOption<T>)
- Method in class java.net.
SocketImpl
Called to get a socket option.
getOption(SocketOption<T>)
- Method in interface java.nio.channels.
NetworkChannel
Returns the value of a socket option.
getOption(Socket, SocketOption<T>)
- Static method in class jdk.net.
Sockets
Deprecated.
use
Socket.getOption(SocketOption)
instead.
getOptions()
- Method in class java.security.cert.
PKIXRevocationChecker
Gets the revocation options.
getOptions()
- Method in interface javax.annotation.processing.
ProcessingEnvironment
Returns the processor-specific options passed to the annotation
 processing tool.
getOptions()
- Method in class javax.security.auth.callback.
ConfirmationCallback
Get the confirmation options.
getOptions()
- Method in class javax.security.auth.login.
AppConfigurationEntry
Get the options configured for this
LoginModule
.
getOptions()
- Method in class javax.swing.
JOptionPane
Returns the choices the user can make.
getOptions()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
The collection of
OPTION
elements contained by this
 element.
getOptionType()
- Method in class javax.security.auth.callback.
ConfirmationCallback
Get the option type.
getOptionType()
- Method in class javax.swing.
JOptionPane
Returns the type of options that are displayed.
getOrDefault(Object, Object)
- Method in class java.security.
Provider
getOrDefault(Object, V)
- Method in class java.util.concurrent.
ConcurrentHashMap
Returns the value to which the specified key is mapped, or the
 given default value if this map contains no mapping for the
 key.
getOrDefault(Object, V)
- Method in interface java.util.concurrent.
ConcurrentMap
Returns the value to which the specified key is mapped, or
defaultValue
if this map contains no mapping for the key.
getOrDefault(Object, V)
- Method in class java.util.concurrent.
ConcurrentSkipListMap
Returns the value to which the specified key is mapped,
 or the given defaultValue if this map contains no mapping for the key.
getOrDefault(Object, V)
- Method in interface java.util.
Map
Returns the value to which the specified key is mapped, or
defaultValue
if this map contains no mapping for the key.
getOrder()
- Method in class java.security.spec.
ECParameterSpec
Returns the order of the generator.
getOrientation()
- Method in interface java.awt.
Adjustable
Gets the orientation of the adjustable object.
getOrientation()
- Method in class java.awt.print.
PageFormat
Returns the orientation of this
PageFormat
.
getOrientation()
- Method in class java.awt.
Scrollbar
Returns the orientation of this scroll bar.
getOrientation()
- Method in class java.awt.
ScrollPaneAdjustable
Returns the orientation of this scrollbar.
getOrientation()
- Method in class javax.swing.
JProgressBar
Returns
SwingConstants.VERTICAL
or
SwingConstants.HORIZONTAL
, depending on the orientation
 of the progress bar.
getOrientation()
- Method in class javax.swing.
JScrollBar
Returns the component's orientation (horizontal or vertical).
getOrientation()
- Method in class javax.swing.
JSeparator
Returns the orientation of this separator.
getOrientation()
- Method in class javax.swing.
JSlider
Return this slider's vertical or horizontal orientation.
getOrientation()
- Method in class javax.swing.
JSplitPane
Returns the orientation.
getOrientation()
- Method in class javax.swing.
JToolBar
Returns the current orientation of the tool bar.
getOrientation()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the orientation for the
JSplitPane
.
getOrientation()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI.DragWindow
Returns the orientation of the toolbar window when the toolbar is
 floating.
getOrientation(Locale)
- Static method in class java.awt.
ComponentOrientation
Returns the orientation that is appropriate for the given locale.
getOrientation(ResourceBundle)
- Static method in class java.awt.
ComponentOrientation
Deprecated.
As of J2SE 1.4, use
ComponentOrientation.getOrientation(java.util.Locale)
.
getOrientationRequested()
- Method in class java.awt.
PageAttributes
Returns the print orientation for pages using these attributes.
getOrigin()
- Method in class com.sun.management.
VMOption
Returns the origin of the value of this VM option.
getOrigin()
- Method in class java.awt.
PageAttributes
Returns whether drawing at (0, 0) to pages using these attributes
 draws at the upper-left corner of the physical page, or at the
 upper-left corner of the printable area.
getOrigin(AnnotatedConstruct, AnnotationMirror)
- Method in interface javax.lang.model.util.
Elements
Returns the
origin
of the given annotation mirror.
getOrigin(Element)
- Method in interface javax.lang.model.util.
Elements
Returns the
origin
of the given element.
getOrigin(ModuleElement, ModuleElement.Directive)
- Method in interface javax.lang.model.util.
Elements
Returns the
origin
of the given module directive.
getOriginal()
- Method in interface javax.sql.rowset.
CachedRowSet
Returns a
ResultSet
object containing the original value of this
CachedRowSet
object.
getOriginal()
- Method in interface javax.sql.
RowSetInternal
Retrieves a
ResultSet
object containing the original
 value of this
RowSet
object.
getOriginalRow()
- Method in interface javax.sql.rowset.
CachedRowSet
Returns a
ResultSet
object containing the original value for the
 current row only of this
CachedRowSet
object.
getOriginalRow()
- Method in interface javax.sql.
RowSetInternal
Retrieves a
ResultSet
object containing the original value
 of the current row only.
getOriginalType(ErrorType)
- Method in class com.sun.source.util.
Trees
Returns the original type from the
ErrorType
object.
getOriginatingNode()
- Method in interface javax.xml.transform.dom.
DOMLocator
Return the node where the event occurred.
getOriginatingProvider()
- Method in class javax.imageio.
ImageReader
Returns the
ImageReaderSpi
that was passed in on
 the constructor.
getOriginatingProvider()
- Method in class javax.imageio.
ImageWriter
Returns the
ImageWriterSpi
object that created
 this
ImageWriter
, or
null
if this
 object was not created through the
IIORegistry
.
getOrphans()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the orphans property definition in CSS2.
getOSName()
- Method in class jdk.jfr.consumer.
RecordedThread
Returns the thread name used by the operating system.
getOSThreadId()
- Method in class jdk.jfr.consumer.
RecordedThread
Returns the thread ID used by the operating system.
getOtherFile()
- Method in exception class java.nio.file.
FileSystemException
Returns the other file used to create this exception.
getOtherHit()
- Method in class java.awt.font.
TextHitInfo
Creates a
TextHitInfo
on the other side of the
 insertion point.
getOtherPrimeInfo()
- Method in interface java.security.interfaces.
RSAMultiPrimePrivateCrtKey
Returns the otherPrimeInfo or null if there are only
 two prime factors (p and q).
getOtherPrimeInfo()
- Method in class java.security.spec.
RSAMultiPrimePrivateCrtKeySpec
Returns a copy of the otherPrimeInfo or null if there are
 only two prime factors (p and q).
getOutermostTypeElement(Element)
- Method in interface javax.lang.model.util.
Elements
Returns the outermost type element an element is contained in
 if such a containing element exists; otherwise returns
null
.
getOutline()
- Method in class java.awt.font.
GlyphVector
Returns a
Shape
whose interior corresponds to the
 visual representation of this
GlyphVector
.
getOutline()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the outline property definition in CSS2.
getOutline(float, float)
- Method in class java.awt.font.
GlyphVector
Returns a
Shape
whose interior corresponds to the
 visual representation of this
GlyphVector
when
 rendered at x, y.
getOutline(AffineTransform)
- Method in class java.awt.font.
GraphicAttribute
Return a
Shape
that represents the region that
 this
GraphicAttribute
renders.
getOutline(AffineTransform)
- Method in class java.awt.font.
ShapeGraphicAttribute
Return a
Shape
that represents the region that
 this
ShapeGraphicAttribute
renders.
getOutline(AffineTransform)
- Method in class java.awt.font.
TextLayout
Returns a
Shape
representing the outline of this
TextLayout
.
getOutlineColor()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the outline-color property definition in CSS2.
getOutlineStyle()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the outline-style property definition in CSS2.
getOutlineWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the outline-width property definition in CSS2.
getOutput()
- Method in class javax.imageio.
ImageWriter
Returns the
ImageOutputStream
or other
Object
set by the most recent call to the
setOutput
method.
getOutputClass()
- Method in class javax.imageio.spi.
ImageOutputStreamSpi
Returns a
Class
object representing the class or
 interface type that must be implemented by an output
 destination in order to be "wrapped" in an
ImageOutputStream
via the
createOutputStreamInstance
method.
getOutputFormat()
- Method in class javax.print.
StreamPrintService
Returns the document format emitted by this print service.
getOutputFormat()
- Method in class javax.print.
StreamPrintServiceFactory
Queries the factory for the document format that is emitted by printers
 obtained from this factory.
getOutputLength()
- Method in class javax.xml.crypto.dsig.spec.
HMACParameterSpec
Returns the truncation length.
getOutputProperties()
- Method in interface javax.xml.transform.
Templates
Get the properties corresponding to the effective xsl:output element.
getOutputProperties()
- Method in class javax.xml.transform.
Transformer
Get a copy of the output properties for the transformation.
getOutputProperty(String)
- Method in class javax.xml.transform.
Transformer
Get an output property that is in effect for the transformer.
getOutputSize(int)
- Method in class javax.crypto.
Cipher
Returns the length in bytes that an output buffer would need to be in
 order to hold the result of the next
update
or
doFinal
operation, given the input length
inputLen
(in bytes).
getOutputSize(int)
- Method in class javax.crypto.
ExemptionMechanism
Returns the length in bytes that an output buffer would need to be in
 order to hold the result of the next
genExemptionBlob
operation, given the input length
inputLen
(in bytes).
getOutputStatement(String)
- Method in interface javax.script.
ScriptEngineFactory
Returns a String that can be used as a statement to display the specified String  using
 the syntax of the supported scripting language.
getOutputStream()
- Method in class java.lang.
Process
Returns the output stream connected to the normal input of the
 process.
getOutputStream()
- Method in class java.net.
Socket
Returns an output stream for this socket.
getOutputStream()
- Method in class java.net.
SocketImpl
Returns an output stream for this socket.
getOutputStream()
- Method in class java.net.
URLConnection
Returns an output stream that writes to this connection.
getOutputStream()
- Method in class java.rmi.server.
LogStream
Deprecated.
no replacement
getOutputStream()
- Method in interface java.rmi.server.
RemoteCall
Deprecated.
no replacement
getOutputStream()
- Method in class javax.print.
StreamPrintService
Gets the output stream.
getOutputStream()
- Method in class javax.xml.transform.stream.
StreamResult
Get the byte stream that was set with setOutputStream.
getOutputTypes()
- Method in class javax.imageio.spi.
ImageWriterSpi
Returns an array of
Class
objects indicating what
 types of objects may be used as arguments to the writer's
setOutput
method.
getOutsideBorder()
- Method in class javax.swing.border.
CompoundBorder
Returns the outside border object.
getOverflow()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the overflow property definition in CSS2.
getOverrideStyle(Element, String)
- Method in interface org.w3c.dom.css.
DocumentCSS
This method is used to retrieve the override style declaration for a
 specified element and a specified pseudo-element.
getOverwriteMode()
- Method in class javax.swing.text.
DefaultFormatter
Returns the behavior when inserting characters.
getOwnedWindows()
- Method in class java.awt.
Window
Return an array containing all the windows this
 window currently owns.
getOwner()
- Method in class java.awt.
Window
Returns the owner of this window.
getOwner()
- Method in class java.beans.
XMLDecoder
Gets the owner of this decoder.
getOwner()
- Method in class java.beans.
XMLEncoder
Gets the owner of this encoder.
getOwner()
- Method in interface java.nio.file.attribute.
FileOwnerAttributeView
Read the file owner.
getOwner()
- Method in class java.util.concurrent.locks.
ReentrantLock
Returns the thread that currently owns this lock, or
null
if not owned.
getOwner()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Returns the thread that currently owns the write lock, or
null
if not owned.
getOwner()
- Method in class javax.print.attribute.standard.
DialogOwner
Returns a
Window owner
, if one was specified,
 otherwise
null
.
getOwner(Path, LinkOption...)
- Static method in class java.nio.file.
Files
Returns the owner of a file.
getOwnerDocument()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns
null
, since
IIOMetadataNode
s
 do not belong to any
Document
.
getOwnerDocument()
- Method in interface org.w3c.dom.
Node
The
Document
object associated with this node.
getOwnerElement()
- Method in interface org.w3c.dom.
Attr
The
Element
node this attribute is attached to or
null
if this attribute is not in use.
getOwnerElement()
- Method in interface org.w3c.dom.xpath.
XPathNamespace
The
Element
on which the namespace was in scope when it
 was requested.
getOwnerlessWindows()
- Static method in class java.awt.
Window
Returns an array of all
Window
s created by this application
 that have no owner.
getOwnerNode()
- Method in interface org.w3c.dom.stylesheets.
StyleSheet
The node that associates this style sheet with the document.
getOwnerRule()
- Method in interface org.w3c.dom.css.
CSSStyleSheet
If this style sheet comes from an
@import
rule, the
ownerRule
attribute will contain the
CSSImportRule
.
getOwnerType()
- Method in interface java.lang.reflect.
ParameterizedType
Returns a
Type
object representing the type that this type
 is a member of.
getP()
- Method in interface java.security.interfaces.
DSAParams
Returns the prime,
p
.
getP()
- Method in class java.security.spec.
DSAParameterSpec
Returns the prime
p
.
getP()
- Method in class java.security.spec.
DSAPrivateKeySpec
Returns the prime
p
.
getP()
- Method in class java.security.spec.
DSAPublicKeySpec
Returns the prime
p
.
getP()
- Method in class java.security.spec.
ECFieldFp
Returns the prime
p
of this prime finite field.
getP()
- Method in class javax.crypto.spec.
DHParameterSpec
Returns the prime modulus
p
.
getP()
- Method in class javax.crypto.spec.
DHPrivateKeySpec
Returns the prime modulus
p
.
getP()
- Method in class javax.crypto.spec.
DHPublicKeySpec
Returns the prime modulus
p
.
getP1()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the start point.
getP1()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the start point.
getP1()
- Method in class java.awt.geom.
CubicCurve2D
Returns the start point.
getP1()
- Method in class java.awt.geom.
Line2D.Double
Returns the start
Point2D
of this
Line2D
.
getP1()
- Method in class java.awt.geom.
Line2D.Float
Returns the start
Point2D
of this
Line2D
.
getP1()
- Method in class java.awt.geom.
Line2D
Returns the start
Point2D
of this
Line2D
.
getP1()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the start point.
getP1()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the start point.
getP1()
- Method in class java.awt.geom.
QuadCurve2D
Returns the start point.
getP1()
- Method in class javax.smartcardio.
CommandAPDU
Returns the value of the parameter byte P1.
getP2()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the end point.
getP2()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the end point.
getP2()
- Method in class java.awt.geom.
CubicCurve2D
Returns the end point.
getP2()
- Method in class java.awt.geom.
Line2D.Double
Returns the end
Point2D
of this
Line2D
.
getP2()
- Method in class java.awt.geom.
Line2D.Float
Returns the end
Point2D
of this
Line2D
.
getP2()
- Method in class java.awt.geom.
Line2D
Returns the end
Point2D
of this
Line2D
.
getP2()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the end point.
getP2()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the end point.
getP2()
- Method in class java.awt.geom.
QuadCurve2D
Returns the end point.
getP2()
- Method in class javax.smartcardio.
CommandAPDU
Returns the value of the parameter byte P2.
getPackage()
- Method in interface com.sun.source.tree.
CompilationUnitTree
Returns the package tree associated with this compilation unit,
 or
null
if there is no package declaration.
getPackage()
- Method in class java.lang.
Class
Gets the package of this class.
getPackage()
- Method in interface javax.lang.model.element.
ModuleElement.ExportsDirective
Returns the package being exported.
getPackage()
- Method in interface javax.lang.model.element.
ModuleElement.OpensDirective
Returns the package being opened.
getPackage(String)
- Method in class java.lang.
ClassLoader
Deprecated.
If multiple class loaders delegate to each other and define classes
 with the same package name, and one such loader relies on the lookup
 behavior of
getPackage
to return a
Package
from
 a parent loader, then the properties exposed by the
Package
may not be as expected in the rest of the program.
 For example, the
Package
will only expose annotations from the
package-info.class
file defined by the parent loader, even if
 annotations exist in a
package-info.class
file defined by
 a child loader.  A more robust approach is to use the
ClassLoader.getDefinedPackage(java.lang.String)
method which returns
 a
Package
for the specified class loader.
getPackage(String)
- Static method in class java.lang.
Package
Deprecated.
If multiple class loaders delegate to each other and define classes
 with the same package name, and one such loader relies on the lookup
 behavior of
getPackage
to return a
Package
from
 a parent loader, then the properties exposed by the
Package
may not be as expected in the rest of the program.
 For example, the
Package
will only expose annotations from the
package-info.class
file defined by the parent loader, even if
 annotations exist in a
package-info.class
file defined by
 a child loader.  A more robust approach is to use the
ClassLoader.getDefinedPackage(java.lang.String)
method which returns
 a
Package
for the specified class loader.
getPackageAnnotations()
- Method in interface com.sun.source.tree.
CompilationUnitTree
Returns the annotations listed on any package declaration
 at the head of this compilation unit, or
null
if there
 is no package declaration.
getPackageElement(CharSequence)
- Method in interface javax.lang.model.util.
Elements
Returns a package given its fully qualified name if the package is uniquely
 determinable in the environment.
getPackageElement(ModuleElement, CharSequence)
- Method in interface javax.lang.model.util.
Elements
Returns a package given its fully qualified name, as seen from the given module.
getPackageName()
- Method in interface com.sun.source.tree.
CompilationUnitTree
Returns the name contained in any package declaration
 at the head of this compilation unit, or
null
if there
 is no package declaration.
getPackageName()
- Method in interface com.sun.source.tree.
ExportsTree
Returns the name of the package to be exported.
getPackageName()
- Method in interface com.sun.source.tree.
OpensTree
Returns the name of the package to be opened.
getPackageName()
- Method in interface com.sun.source.tree.
PackageTree
Returns the name of the package being declared.
getPackageName()
- Method in class java.lang.
Class
Returns the fully qualified package name.
getPackageOf(Element)
- Method in interface javax.lang.model.util.
Elements
Returns the package of an element.
getPackages()
- Method in class java.lang.
ClassLoader
Returns all of the
Package
s that have been defined by
 this class loader and its ancestors.
getPackages()
- Method in class java.lang.
Module
Returns the set of package names for the packages in this module.
getPackages()
- Static method in class java.lang.
Package
Returns all of the
Package
s defined by the caller's class loader
 and its ancestors.
getPacketBufferSize()
- Method in interface javax.net.ssl.
SSLSession
Gets the current size of the largest SSL/TLS/DTLS packet that is
 expected when using this session.
getPadding()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonAreaLayout
Returns the padding.
getPadding()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding property definition in CSS2.
getPaddingBottom()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding-bottom property definition in CSS2.
getPaddingLeft()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding-left property definition in CSS2.
getPaddingRight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding-right property definition in CSS2.
getPaddingTop()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the padding-top property definition in CSS2.
getPage()
- Method in class javax.swing.
JEditorPane
Gets the current URL being displayed.
getPage()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the page property definition in CSS2.
getPageBreakAfter()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the page-break-after property definition in CSS2.
getPageBreakBefore()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the page-break-before property definition in CSS2.
getPageBreakInside()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the page-break-inside property definition in CSS2.
getPageDimension()
- Method in class java.awt.
PrintJob
Returns the dimensions of the page in pixels.
getPageFormat(int)
- Method in class java.awt.print.
Book
Returns the
PageFormat
of the page specified by
pageIndex
.
getPageFormat(int)
- Method in interface java.awt.print.
Pageable
Returns the
PageFormat
of the page specified by
pageIndex
.
getPageFormat(PrintRequestAttributeSet)
- Method in class java.awt.print.
PrinterJob
Calculates a
PageFormat
with values consistent with those
 supported by the current
PrintService
for this job
 (ie the value returned by
getPrintService()
) and media,
 printable area and orientation contained in
attributes
.
getPageIncrement()
- Method in class java.awt.
Scrollbar
Deprecated.
As of JDK version 1.1,
 replaced by
getBlockIncrement()
.
getPageRanges()
- Method in class java.awt.
JobAttributes
Specifies, for jobs using these attributes, the ranges of pages to be
 printed, if a range of pages is to be printed.
getPageResolution()
- Method in class java.awt.
PrintJob
Returns the resolution of the page in pixels per inch.
getPageSize()
- Method in interface javax.sql.rowset.
CachedRowSet
Returns the page-size for the
CachedRowSet
object
getPaint()
- Method in class java.awt.
Graphics2D
Returns the current
Paint
of the
Graphics2D
context.
getPaint()
- Method in class javax.swing.border.
StrokeBorder
Returns the
Paint
object used to generate a color
 during the border rendering.
getPaintContext()
- Method in class javax.swing.plaf.nimbus.
AbstractRegionPainter
Gets the PaintContext for this painting operation.
getPainter()
- Method in interface javax.swing.text.
Highlighter.Highlight
Gets the painter for the highlighter.
getPainter(SynthContext)
- Method in class javax.swing.plaf.nimbus.
NimbusStyle
Returns the
SynthPainter
that will be used for painting.
getPainter(SynthContext)
- Method in class javax.swing.plaf.synth.
SynthStyle
Returns the
SynthPainter
that will be used for painting.
getPainter(GlyphView, int, int)
- Method in class javax.swing.text.
GlyphView.GlyphPainter
Create a painter to use for the given GlyphView.
getPaintLabels()
- Method in class javax.swing.
JSlider
Tells if labels are to be painted.
getPaintTicks()
- Method in class javax.swing.
JSlider
Tells if tick marks are to be painted.
getPaintTrack()
- Method in class javax.swing.
JSlider
Tells if the track (area the slider slides in) is to be painted.
getPaper()
- Method in class java.awt.print.
PageFormat
Returns a copy of the
Paper
object associated
 with this
PageFormat
.
getParagraphAttributes()
- Method in class javax.swing.
JTextPane
Fetches the current paragraph attributes in effect
 at the location of the caret, or
null
if none.
getParagraphElement(int)
- Method in class javax.swing.text.
AbstractDocument
Get the paragraph element containing the given position.
getParagraphElement(int)
- Method in class javax.swing.text.
DefaultStyledDocument
Gets the paragraph element at the offset
pos
.
getParagraphElement(int)
- Method in class javax.swing.text.
PlainDocument
Get the paragraph element containing the given position.
getParagraphElement(int)
- Method in interface javax.swing.text.
StyledDocument
Gets the element that represents the paragraph that
 encloses the given offset within the document.
getParagraphElement(JTextComponent, int)
- Static method in class javax.swing.text.
Utilities
Determines the element to use for a paragraph/line.
getParallelism()
- Method in class java.util.concurrent.
ForkJoinPool
Returns the targeted parallelism level of this pool.
getParamClasses()
- Method in class java.awt.image.renderable.
ParameterBlock
Returns an array of Class objects describing the types
 of the parameters.
getParameter()
- Method in interface com.sun.source.tree.
CatchTree
Returns the catch variable.
getParameter()
- Method in exception class java.sql.
DataTruncation
Indicates whether the value truncated was a parameter value or
 a column value.
getParameter(String)
- Method in class java.applet.
Applet
Deprecated.
Returns the value of the named parameter in the HTML tag.
getParameter(String)
- Method in interface java.applet.
AppletStub
Deprecated.
Returns the value of the named parameter in the HTML tag.
getParameter(String)
- Method in class java.awt.datatransfer.
DataFlavor
Returns the human presentable name for this
DataFlavor
if
paramName
equals "humanPresentableName".
getParameter(String)
- Method in class java.security.
Signature
Deprecated.
getParameter(String)
- Method in class javax.print.
DocFlavor
Returns a
String
representing a MIME parameter.
getParameter(String)
- Method in interface javax.script.
ScriptEngineFactory
Returns the value of an attribute whose meaning may be implementation-specific.
getParameter(String)
- Method in class javax.xml.transform.
Transformer
Get a parameter that was explicitly set with setParameter.
getParameter(String)
- Method in interface org.w3c.dom.
DOMConfiguration
Return the value of a parameter if known.
getParameterAnnotations()
- Method in class java.lang.reflect.
Constructor
Returns an array of arrays of
Annotation
s that
 represent the annotations on the formal parameters, in
 declaration order, of the
Executable
represented by
 this object.
getParameterAnnotations()
- Method in class java.lang.reflect.
Executable
Returns an array of arrays of
Annotation
s that
 represent the annotations on the formal parameters, in
 declaration order, of the
Executable
represented by
 this object.
getParameterAnnotations()
- Method in class java.lang.reflect.
Method
Returns an array of arrays of
Annotation
s that
 represent the annotations on the formal parameters, in
 declaration order, of the
Executable
represented by
 this object.
getParameterBlock()
- Method in class java.awt.image.renderable.
RenderableImageOp
Returns a reference to the current parameter block.
getParameterClassName(int)
- Method in interface java.sql.
ParameterMetaData
Retrieves the fully-qualified name of the Java class whose instances
 should be passed to the method
PreparedStatement.setObject
.
getParameterCount()
- Method in class java.lang.reflect.
Constructor
Returns the number of formal parameters (whether explicitly
 declared or implicitly declared or neither) for the executable
 represented by this object.
getParameterCount()
- Method in class java.lang.reflect.
Executable
Returns the number of formal parameters (whether explicitly
 declared or implicitly declared or neither) for the executable
 represented by this object.
getParameterCount()
- Method in class java.lang.reflect.
Method
Returns the number of formal parameters (whether explicitly
 declared or implicitly declared or neither) for the executable
 represented by this object.
getParameterCount()
- Method in interface java.sql.
ParameterMetaData
Retrieves the number of parameters in the
PreparedStatement
object for which this
ParameterMetaData
object contains
 information.
getParameterDescriptors()
- Method in class java.beans.
MethodDescriptor
Gets the ParameterDescriptor for each of this MethodDescriptor's
 method's parameters.
getParameterInfo()
- Method in class java.applet.
Applet
Deprecated.
Returns information about the parameters that are understood by this
 applet.
getParameterizedType()
- Method in class java.lang.reflect.
Parameter
Returns a
Type
object that identifies the parameterized
 type for the parameter represented by this
Parameter
object.
getParameterMetaData()
- Method in interface java.sql.
PreparedStatement
Retrieves the number, types and properties of this
PreparedStatement
object's parameters.
getParameterMode(int)
- Method in interface java.sql.
ParameterMetaData
Retrieves the designated parameter's mode.
getParameterName(VariableElement)
- Method in interface com.sun.source.util.
ParameterNameProvider
Infer a parameter name for the given parameter.
getParameterName(MBeanConstructorInfo, MBeanParameterInfo, int)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the name that will be used for the
sequence
MBeanParameterInfo of the MBeanConstructorInfo returned by this MBean.
getParameterName(MBeanOperationInfo, MBeanParameterInfo, int)
- Method in class javax.management.
StandardMBean
Customization hook:
 Get the name that will be used for the
sequence
MBeanParameterInfo of the MBeanOperationInfo returned by this MBean.
getParameterNames()
- Method in interface org.w3c.dom.
DOMConfiguration
The list of the parameters supported by this
DOMConfiguration
object and for which at least one value
 can be set by the application.
getParameters()
- Method in interface com.sun.source.tree.
LambdaExpressionTree
Returns the parameters of this lambda expression.
getParameters()
- Method in interface com.sun.source.tree.
MethodTree
Returns the parameters of the method being declared.
getParameters()
- Method in class java.awt.image.renderable.
ParameterBlock
Returns the entire Vector of parameters.
getParameters()
- Method in class java.lang.reflect.
Executable
Returns an array of
Parameter
objects representing
 all the parameters to the underlying executable represented by
 this object.
getParameters()
- Method in class java.security.
Policy
Deprecated.
Return
Policy
parameters.
getParameters()
- Method in class java.security.
SecureRandom
Returns the effective
SecureRandomParameters
for this
SecureRandom
instance.
getParameters()
- Method in class java.security.
Signature
Returns the parameters used with this
Signature
object.
getParameters()
- Method in class java.util.logging.
LogRecord
Get the parameters to the log message.
getParameters()
- Method in class javax.crypto.
Cipher
Returns the parameters used with this
Cipher
object.
getParameters()
- Method in interface javax.lang.model.element.
ExecutableElement
Returns the formal parameters of this executable.
getParameters()
- Method in class javax.net.ssl.
CertPathTrustManagerParameters
Return a clone of the CertPathParameters encapsulated by this class.
getParameters()
- Method in class javax.net.ssl.
KeyStoreBuilderParameters
Return the unmodifiable List of the
KeyStore.Builder
s
 encapsulated by this object.
getParameters()
- Method in class javax.security.auth.login.
Configuration
Return Configuration parameters.
getParameters()
- Method in interface jdk.javadoc.doclet.
Doclet.Option
Returns the parameters of the option.
getParameterSpec()
- Method in class javax.crypto.spec.
PBEParameterSpec
Returns the cipher algorithm parameter specification.
getParameterSpec()
- Method in interface javax.xml.crypto.
AlgorithmMethod
Returns the algorithm parameters of this
AlgorithmMethod
.
getParameterSpec()
- Method in interface javax.xml.crypto.dsig.
CanonicalizationMethod
Returns the algorithm-specific input parameters associated with this
CanonicalizationMethod
.
getParameterSpec()
- Method in interface javax.xml.crypto.dsig.
DigestMethod
Returns the algorithm-specific input parameters associated with this
DigestMethod
.
getParameterSpec()
- Method in interface javax.xml.crypto.dsig.
SignatureMethod
Returns the algorithm-specific input parameters of this
SignatureMethod
.
getParameterSpec()
- Method in interface javax.xml.crypto.dsig.
Transform
Returns the algorithm-specific input parameters associated with this
Transform
.
getParameterSpec(Class<T>)
- Method in class java.security.
AlgorithmParameters
Returns a (transparent) specification of this parameter object.
getParameterType(int)
- Method in interface java.sql.
ParameterMetaData
Retrieves the designated parameter's SQL type.
getParameterTypeName(int)
- Method in interface java.sql.
ParameterMetaData
Retrieves the designated parameter's database-specific type name.
getParameterTypes()
- Method in class java.lang.reflect.
Constructor
Returns an array of
Class
objects that represent the formal
 parameter types, in declaration order, of the executable
 represented by this object.
getParameterTypes()
- Method in class java.lang.reflect.
Executable
Returns an array of
Class
objects that represent the formal
 parameter types, in declaration order, of the executable
 represented by this object.
getParameterTypes()
- Method in class java.lang.reflect.
Method
Returns an array of
Class
objects that represent the formal
 parameter types, in declaration order, of the executable
 represented by this object.
getParameterTypes()
- Method in interface javax.lang.model.type.
ExecutableType
Returns the types of this executable's formal parameters.
getParameterTypes()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the list of values of the
TYPE
attribute in
 each nested <PARAM> tag within the
MLET
tag.
getParameterValues()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the list of values of the
VALUE
attribute in
 each nested <PARAM> tag within the
MLET
tag.
getParams()
- Method in interface java.security.interfaces.
DSAKey
Returns the DSA-specific key parameters.
getParams()
- Method in interface java.security.interfaces.
ECKey
Returns the domain parameters associated
 with this key.
getParams()
- Method in interface java.security.interfaces.
EdECKey
Returns the algorithm parameters associated with the key.
getParams()
- Method in interface java.security.interfaces.
RSAKey
Returns the parameters associated with this key.
getParams()
- Method in interface java.security.interfaces.
XECKey
Returns the algorithm parameters associated
 with the key.
getParams()
- Method in class java.security.spec.
ECPrivateKeySpec
Returns the associated elliptic curve domain
 parameters.
getParams()
- Method in class java.security.spec.
ECPublicKeySpec
Returns the associated elliptic curve domain
 parameters.
getParams()
- Method in class java.security.spec.
EdECPrivateKeySpec
Get the algorithm parameters that define the curve and other settings.
getParams()
- Method in class java.security.spec.
EdECPublicKeySpec
Get the algorithm parameters that define the curve and other settings.
getParams()
- Method in class java.security.spec.
RSAPrivateKeySpec
Returns the parameters associated with this key, may be null if not
 present.
getParams()
- Method in class java.security.spec.
RSAPublicKeySpec
Returns the parameters associated with this key, may be null if not
 present.
getParams()
- Method in class java.security.spec.
XECPrivateKeySpec
Get the algorithm parameters that define the curve and other settings.
getParams()
- Method in class java.security.spec.
XECPublicKeySpec
Get the algorithm parameters that define the curve and other settings.
getParams()
- Method in interface javax.crypto.interfaces.
DHKey
Returns the key parameters.
getParams()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves an array containing the parameter values (both Objects and
 primitives) that have been set for this
RowSet
object's command and throws an
SQLException
object
 if all parameters have not been set.
getParams()
- Method in interface javax.sql.
RowSetInternal
Retrieves the parameters that have been set for this
RowSet
object's command.
getParent()
- Method in class java.awt.
Component
Gets the parent of this component.
getParent()
- Method in class java.awt.image.
Raster
Returns the parent Raster (if any) of this Raster or null.
getParent()
- Method in class java.awt.
MenuComponent
Returns the parent container for this menu component.
getParent()
- Method in class java.io.
File
Returns the pathname string of this abstract pathname's parent, or
null
if this pathname does not name a parent directory.
getParent()
- Method in class java.lang.
ClassLoader
Returns the parent class loader for delegation.
getParent()
- Method in class java.lang.
ThreadGroup
Returns the parent of this thread group.
getParent()
- Method in class java.net.
NetworkInterface
Returns the parent NetworkInterface of this interface if this is
 a subinterface, or
null
if it is a physical
 (non virtual) interface or has no parent.
getParent()
- Method in interface java.nio.file.
Path
Returns the
parent path
, or
null
if this path does not
 have a parent.
getParent()
- Method in interface java.security.cert.
PolicyNode
Returns the parent of this node, or
null
if this is the
 root node.
getParent()
- Method in class java.util.concurrent.
Phaser
Returns the parent of this phaser, or
null
if none.
getParent()
- Method in class java.util.logging.
Logger
Return the parent for this Logger.
getParent()
- Method in class java.util.prefs.
NodeChangeEvent
Returns the parent of the node that was added or removed.
getParent()
- Method in class javax.swing.
ActionMap
Returns this
ActionMap
's parent.
getParent()
- Method in class javax.swing.
InputMap
Gets this
InputMap
's parent.
getParent()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Returns the parent
TreeNode
of the receiver.
getParent()
- Method in class javax.swing.text.
View
Returns the parent of the view.
getParent()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns this node's parent or null if this node has no parent.
getParent()
- Method in interface javax.swing.tree.
TreeNode
Returns the parent
TreeNode
of the receiver.
getParent()
- Method in class javax.xml.crypto.dsig.dom.
DOMSignContext
Returns the parent node.
getParent()
- Method in class javax.xml.stream.util.
EventReaderDelegate
Get the parent of this instance.
getParent()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
Get the parent of this instance.
getParent()
- Method in class jdk.jfr.consumer.
RecordedThreadGroup
Returns the parent thread group, or
null
if it doesn't exist.
getParent()
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Get the parent reader.
getParent()
- Method in interface org.xml.sax.
XMLFilter
Get the parent reader.
getParentDirectory(File)
- Method in class javax.swing.filechooser.
FileSystemView
Returns the parent directory of
dir
.
getParentElement()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the parent of the element.
getParentElement()
- Method in interface javax.swing.text.
Element
Fetches the parent element.
getParentFile()
- Method in class java.io.
File
Returns the abstract pathname of this abstract pathname's parent,
 or
null
if this pathname does not name a parent
 directory.
getParentLogger()
- Method in interface java.sql.
Driver
Return the parent Logger of all the Loggers used by this driver.
getParentLogger()
- Method in interface javax.sql.
CommonDataSource
Return the parent Logger of all the Loggers used by this data source.
getParentLoggerName(String)
- Method in interface java.lang.management.
PlatformLoggingMXBean
Returns the name of the
parent
for the specified logger.
getParentLoggerName(String)
- Method in interface java.util.logging.
LoggingMXBean
Deprecated.
Returns the name of the parent for the specified logger.
getParentNode()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the parent of this node.
getParentNode()
- Method in interface org.w3c.dom.
Node
The parent of this node.
getParentPath()
- Method in class com.sun.source.util.
DocTreePath
Returns the path for the enclosing node, or
null
if there is no enclosing node.
getParentPath()
- Method in class com.sun.source.util.
TreePath
Returns the path for the enclosing node, or
null
if there is no enclosing node.
getParentPath()
- Method in class javax.swing.tree.
TreePath
Returns the
TreePath
of the parent.
getParentRule()
- Method in interface org.w3c.dom.css.
CSSRule
If this rule is contained inside another rule (e.g. a style rule
 inside an @media block), this is the containing rule.
getParentRule()
- Method in interface org.w3c.dom.css.
CSSStyleDeclaration
The CSS rule that contains this declaration block or
null
if this
CSSStyleDeclaration
is not attached to a
CSSRule
.
getParentStyleSheet()
- Method in interface org.w3c.dom.css.
CSSRule
The style sheet that contains this rule.
getParentStyleSheet()
- Method in interface org.w3c.dom.stylesheets.
StyleSheet
For style sheet languages that support the concept of style sheet
 inclusion, this attribute represents the including style sheet, if
 one exists.
getParentTag()
- Method in class javax.imageio.plugins.tiff.
TIFFDirectory
Returns the parent
TIFFTag
of this directory if one
 has been defined or
null
otherwise.
getParsedString()
- Method in exception class java.time.format.
DateTimeParseException
Returns the string that was being parsed.
getParser()
- Method in class javax.swing.text.html.
HTMLDocument
Returns the parser that is used when inserting HTML into the existing
 document.
getParser()
- Method in class javax.swing.text.html.
HTMLEditorKit
Fetch the parser to use for reading HTML streams.
getParser()
- Method in class javax.xml.parsers.
SAXParser
Returns the SAX parser that is encapsulated by the
 implementation of this class.
getPartialSize(int, int)
- Method in class javax.swing.text.
ParagraphView
Returns the size used by the views between
startOffset
and
endOffset
.
getPartialSpan(int, int)
- Method in class javax.swing.text.
GlyphView
Determines the span along the same axis as tab
 expansion for a portion of the view.
getPartialSpan(int, int)
- Method in interface javax.swing.text.
TabableView
Determines the span along the same axis as tab
 expansion for a portion of the view.
getParties()
- Method in class java.util.concurrent.
CyclicBarrier
Returns the number of parties required to trip this barrier.
getPassword()
- Method in class java.net.
PasswordAuthentication
Returns the user password.
getPassword()
- Method in class java.security.
KeyStore.PasswordProtection
Gets the password.
getPassword()
- Method in interface javax.crypto.interfaces.
PBEKey
Returns the password.
getPassword()
- Method in class javax.crypto.spec.
PBEKeySpec
Returns a copy of the password.
getPassword()
- Method in class javax.security.auth.callback.
PasswordCallback
Get the retrieved password.
getPassword()
- Method in class javax.sql.rowset.
BaseRowSet
Returns the password used to create a database connection for this
RowSet
object.
getPassword()
- Method in interface javax.sql.
RowSet
Retrieves the password used to create a database connection.
getPassword()
- Method in class javax.swing.
JPasswordField
Returns the text contained in this
TextComponent
.
getPasswordAuthentication()
- Method in class java.net.
Authenticator
Called when password authorization is needed.
getPasteAction()
- Static method in class javax.swing.
TransferHandler
Returns an
Action
that performs paste operations from the
 clipboard.
getPatch()
- Method in class javax.sound.midi.
Instrument
Obtains the
Patch
object that indicates the bank and program
 numbers where this instrument is to be stored in the synthesizer.
getPatchList()
- Method in class javax.sound.midi.
Sequence
Obtains a list of patches referenced in this sequence.
getPath()
- Method in class com.sun.net.httpserver.
HttpContext
Returns the path this context was created with.
getPath()
- Method in class java.io.
File
Converts this abstract pathname into a pathname string.
getPath()
- Method in class java.net.
HttpCookie
Returns the path on the server to which the browser returns this cookie.
getPath()
- Method in class java.net.
UnixDomainSocketAddress
Returns this address's path.
getPath()
- Method in class java.net.
URI
Returns the decoded path component of this URI.
getPath()
- Method in class java.net.
URL
Gets the path part of this
URL
.
getPath()
- Method in class javax.swing.event.
MenuDragMouseEvent
Returns the path to the selected menu item.
getPath()
- Method in class javax.swing.event.
MenuKeyEvent
Returns the path to the menu item referenced by this event.
getPath()
- Method in class javax.swing.event.
TreeExpansionEvent
Returns the path to the value that has been expanded/collapsed.
getPath()
- Method in class javax.swing.event.
TreeModelEvent
Convenience method to get the array of objects from the TreePath
 instance that this event wraps.
getPath()
- Method in class javax.swing.event.
TreeSelectionEvent
Returns the first path element.
getPath()
- Method in class javax.swing.
JTree.DropLocation
Returns the path where dropped data should be placed in the
 tree.
getPath()
- Method in class javax.swing.plaf.basic.
BasicMenuItemUI
Returns a menu element path.
getPath()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the path from the root, to get to this node.
getPath()
- Method in class javax.swing.tree.
TreePath
Returns an ordered array of the elements of this
TreePath
.
getPath(CompilationUnitTree, Tree)
- Static method in class com.sun.source.util.
TreePath
Returns a tree path for a tree node within a compilation unit,
 or
null
if the node is not found.
getPath(CompilationUnitTree, Tree)
- Method in class com.sun.source.util.
Trees
Returns the path to tree node within the specified compilation unit.
getPath(DocTreePath, DocTree)
- Static method in class com.sun.source.util.
DocTreePath
Returns a documentation tree path for a tree node within a subtree
 identified by a
DocTreePath
object, or
null
if the node is not found.
getPath(TreePath, DocCommentTree, DocTree)
- Static method in class com.sun.source.util.
DocTreePath
Returns a documentation tree path for a tree node within a compilation unit,
 or
null
if the node is not found.
getPath(TreePath, Tree)
- Static method in class com.sun.source.util.
TreePath
Returns a tree path for a tree node within a subtree identified by a TreePath object.
getPath(String, String...)
- Method in class java.nio.file.
FileSystem
Converts a path string, or a sequence of strings that when joined form
 a path string, to a
Path
.
getPath(String, String...)
- Method in interface javax.tools.
StandardJavaFileManager.PathFactory
Converts a path string, or a sequence of strings that when joined form a path string, to a Path.
getPath(URI)
- Method in class java.nio.file.spi.
FileSystemProvider
Return a
Path
object by converting the given
URI
.
getPath(Element)
- Method in class com.sun.source.util.
Trees
Returns the
TreePath
node for a given
Element
.
getPath(Element, AnnotationMirror)
- Method in class com.sun.source.util.
Trees
Returns the
TreePath
node for an
AnnotationMirror
on a given
Element
.
getPath(Element, AnnotationMirror, AnnotationValue)
- Method in class com.sun.source.util.
Trees
Returns the
TreePath
node for an
AnnotationValue
for an
AnnotationMirror
on a given
Element
.
getPathBetweenRows(int, int)
- Method in class javax.swing.
JTree
Returns the paths (inclusive) between the specified rows.
getPathBounds(JTree, TreePath)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the Rectangle enclosing the label portion that the
 last item in path will be drawn into.
getPathBounds(JTree, TreePath)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getPathBounds
method on each UI handled by this object.
getPathBounds(JTree, TreePath)
- Method in class javax.swing.plaf.
TreeUI
Returns the Rectangle enclosing the label portion that the
 last item in path will be drawn into.
getPathBounds(TreePath)
- Method in class javax.swing.
JTree
Returns the
Rectangle
that the specified node will be drawn
 into.
getPathClosestTo(int, int)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the path to the node that is closest to x,y.
getPathClosestTo(int, int)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Returns the path to the node that is closest to x,y.
getPathClosestTo(int, int)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns the path to the node that is closest to x,y.
getPathComponent(int)
- Method in class javax.swing.tree.
TreePath
Returns the path element at the specified index.
getPathCount()
- Method in class javax.swing.tree.
TreePath
Returns the number of elements in the path.
getPathForLocation(int, int)
- Method in class javax.swing.
JTree
Returns the path for the node at the specified location.
getPathForRow(int)
- Method in class javax.swing.
JTree
Returns the path for the specified row.
getPathForRow(int)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the path for passed in row.
getPathForRow(int)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Returns the path for passed in row.
getPathForRow(int)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns the path for
row
.
getPathForRow(JTree, int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the path for passed in row.
getPathForRow(JTree, int)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getPathForRow
method on each UI handled by this object.
getPathForRow(JTree, int)
- Method in class javax.swing.plaf.
TreeUI
Returns the path for passed in row.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
Arc2D
Returns an iteration object that defines the boundary of the
 arc.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
Area
Creates a
PathIterator
for the outline of this
Area
object.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
CubicCurve2D
Returns an iteration object that defines the boundary of the
 shape.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
Ellipse2D
Returns an iteration object that defines the boundary of this
Ellipse2D
.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
Line2D
Returns an iteration object that defines the boundary of this
Line2D
.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
Path2D.Double
Returns an iterator object that iterates along the
Shape
boundary and provides access to the geometry of the
Shape
outline.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
Path2D.Float
Returns an iterator object that iterates along the
Shape
boundary and provides access to the geometry of the
Shape
outline.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
QuadCurve2D
Returns an iteration object that defines the boundary of the
 shape of this
QuadCurve2D
.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
Rectangle2D
Returns an iteration object that defines the boundary of this
Rectangle2D
.
getPathIterator(AffineTransform)
- Method in class java.awt.geom.
RoundRectangle2D
Returns an iteration object that defines the boundary of this
RoundRectangle2D
.
getPathIterator(AffineTransform)
- Method in class java.awt.
Polygon
Returns an iterator object that iterates along the boundary of this
Polygon
and provides access to the geometry
 of the outline of this
Polygon
.
getPathIterator(AffineTransform)
- Method in interface java.awt.
Shape
Returns an iterator object that iterates along the
Shape
boundary and provides access to the geometry of the
Shape
outline.
getPathIterator(AffineTransform, double)
- Method in class java.awt.geom.
Area
Creates a
PathIterator
for the flattened outline of
 this
Area
object.
getPathIterator(AffineTransform, double)
- Method in class java.awt.geom.
CubicCurve2D
Return an iteration object that defines the boundary of the
 flattened shape.
getPathIterator(AffineTransform, double)
- Method in class java.awt.geom.
Line2D
Returns an iteration object that defines the boundary of this
 flattened
Line2D
.
getPathIterator(AffineTransform, double)
- Method in class java.awt.geom.
Path2D
Returns an iterator object that iterates along the
Shape
boundary and provides access to a flattened view of the
Shape
outline geometry.
getPathIterator(AffineTransform, double)
- Method in class java.awt.geom.
QuadCurve2D
Returns an iteration object that defines the boundary of the
 flattened shape of this
QuadCurve2D
.
getPathIterator(AffineTransform, double)
- Method in class java.awt.geom.
Rectangle2D
Returns an iteration object that defines the boundary of the
 flattened
Rectangle2D
.
getPathIterator(AffineTransform, double)
- Method in class java.awt.geom.
RectangularShape
Returns an iterator object that iterates along the
Shape
object's boundary and provides access to a
 flattened view of the outline of the
Shape
object's geometry.
getPathIterator(AffineTransform, double)
- Method in class java.awt.
Polygon
Returns an iterator object that iterates along the boundary of
 the
Shape
and provides access to the geometry of the
 outline of the
Shape
.
getPathIterator(AffineTransform, double)
- Method in interface java.awt.
Shape
Returns an iterator object that iterates along the
Shape
boundary and provides access to a flattened view of the
Shape
outline geometry.
getPathMatcher(String)
- Method in class java.nio.file.
FileSystem
Returns a
PathMatcher
that performs match operations on the
String
representation of
Path
objects by interpreting a
 given pattern.
getPaths()
- Method in class javax.swing.event.
TreeSelectionEvent
Returns the paths that have been added or removed from the selection.
getPathToNames()
- Method in class java.security.cert.
X509CertSelector
Returns a copy of the pathToNames criterion.
getPathToRoot(TreeNode)
- Method in class javax.swing.tree.
DefaultTreeModel
Builds the parents of node up to and including the root node,
 where the original node is the last element in the returned array.
getPathToRoot(TreeNode, int)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Builds the parents of node up to and including the root node,
 where the original node is the last element in the returned array.
getPathToRoot(TreeNode, int)
- Method in class javax.swing.tree.
DefaultTreeModel
Builds the parents of node up to and including the root node,
 where the original node is the last element in the returned array.
getPattern()
- Method in interface com.sun.source.tree.
InstanceOfTree
Returns the tested pattern, or null if this instanceof does not use
 a pattern.
getPattern()
- Method in interface com.sun.source.tree.
PatternCaseLabelTree
The pattern for the case.
getPattern()
- Method in exception class java.util.regex.
PatternSyntaxException
Retrieves the erroneous regular-expression pattern.
getPatternSeparator()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used to separate positive and negative subpatterns
 in a pattern.
getPause()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pause property definition in CSS2.
getPauseAfter()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pause-after property definition in CSS2.
getPauseBefore()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pause-before property definition in CSS2.
getPayload()
- Method in class jdk.incubator.vector.
ByteVector
getPayload()
- Method in class jdk.incubator.vector.
DoubleVector
getPayload()
- Method in class jdk.incubator.vector.
FloatVector
getPayload()
- Method in class jdk.incubator.vector.
IntVector
getPayload()
- Method in class jdk.incubator.vector.
LongVector
getPayload()
- Method in class jdk.incubator.vector.
ShortVector
getPayload()
- Method in class jdk.incubator.vector.
Vector
getPayload()
- Method in class jdk.incubator.vector.
VectorMask
getPayload()
- Method in class jdk.incubator.vector.
VectorShuffle
getPCSType()
- Method in class java.awt.color.
ICC_Profile
Returns the color space type of the Profile Connection Space (PCS).
getPeakThreadCount()
- Method in interface java.lang.management.
ThreadMXBean
Returns the peak live platform thread count since the Java virtual
 machine started or peak was reset.
getPeakUsage()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the peak memory usage of this memory pool since the
 Java virtual machine was started or since the peak was reset.
getPeerCertificateChain()
- Method in class javax.net.ssl.
HandshakeCompletedEvent
Deprecated, for removal: This API element is subject to removal in a future version.
The
HandshakeCompletedEvent.getPeerCertificates()
method that returns an
               array of
java.security.cert.Certificate
should
               be used instead.
getPeerCertificateChain()
- Method in interface javax.net.ssl.
SSLSession
Deprecated, for removal: This API element is subject to removal in a future version.
The
SSLSession.getPeerCertificates()
method that returns an
               array of
java.security.cert.Certificate
should
               be used instead.
getPeerCertificates()
- Method in class javax.net.ssl.
HandshakeCompletedEvent
Returns the identity of the peer which was established as part
 of defining the session.
getPeerCertificates()
- Method in interface javax.net.ssl.
SSLSession
Returns the identity of the peer which was established as part
 of defining the session.
getPeerHost()
- Method in class javax.net.ssl.
SSLEngine
Returns the host name of the peer.
getPeerHost()
- Method in interface javax.net.ssl.
SSLSession
Returns the host name of the peer in this session.
getPeerPort()
- Method in class javax.net.ssl.
SSLEngine
Returns the port number of the peer.
getPeerPort()
- Method in interface javax.net.ssl.
SSLSession
Returns the port number of the peer in this session.
getPeerPrincipal()
- Method in class java.net.
SecureCacheResponse
Returns the server's principal which was established as part of
 defining the session during the original connection that
 retrieved the network resource.
getPeerPrincipal()
- Method in class javax.net.ssl.
HandshakeCompletedEvent
Returns the identity of the peer which was established as part of
 defining the session.
getPeerPrincipal()
- Method in class javax.net.ssl.
HttpsURLConnection
Returns the server's principal which was established as part of
 defining the session.
getPeerPrincipal()
- Method in interface javax.net.ssl.
SSLSession
Returns the identity of the peer which was established as part of
 defining the session.
getPeerSupportedSignatureAlgorithms()
- Method in class javax.net.ssl.
ExtendedSSLSession
Obtains an array of supported signature algorithms that the peer is
 able to use.
getPendingCount()
- Method in class java.util.concurrent.
CountedCompleter
Returns the current pending count.
getPercent()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used for percent sign.
getPercentComplete()
- Method in class javax.swing.
JProgressBar
Returns the percent complete for the progress bar.
getPercentInstance()
- Static method in class java.text.
NumberFormat
Returns a percentage format for the current default
FORMAT
locale.
getPercentInstance(Locale)
- Static method in class java.text.
NumberFormat
Returns a percentage format for the specified locale.
getPercentInstance(Locale)
- Method in class java.text.spi.
NumberFormatProvider
Returns a new
NumberFormat
instance which formats
 percentage values for the specified locale.
getPeriod(Integer)
- Method in class javax.management.timer.
Timer
Gets a copy of the period (in milliseconds) associated to a timer notification.
getPeriod(Integer)
- Method in interface javax.management.timer.
TimerMBean
Gets a copy of the period (in milliseconds) associated to a timer notification.
getPermanentFocusOwner()
- Method in class java.awt.
KeyboardFocusManager
Returns the permanent focus owner, if the permanent focus owner is in
 the same context as the calling thread.
getPerMill()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used for per mille sign.
getPermission()
- Method in class java.net.
HttpURLConnection
Returns a
SocketPermission
object representing the
 permission necessary to connect to the destination host and port.
getPermission()
- Method in class java.net.
URLConnection
Returns a permission object representing the permission
 necessary to make the connection represented by this
 object.
getPermission()
- Method in exception class java.security.
AccessControlException
Deprecated.
Gets the
Permission
object associated with this exception, or
null
if there was no corresponding
Permission
object.
getPermissions()
- Method in class java.security.
ProtectionDomain
Returns the static permissions granted to this domain.
getPermissions(CodeSource)
- Method in class java.net.
URLClassLoader
Returns the permissions for the given codesource object.
getPermissions(CodeSource)
- Method in class java.security.
Policy
Deprecated.
Return a PermissionCollection object containing the set of
 permissions granted to the specified CodeSource.
getPermissions(CodeSource)
- Method in class java.security.
SecureClassLoader
Returns the permissions for the given CodeSource object.
getPermissions(ProtectionDomain)
- Method in class java.security.
Policy
Deprecated.
Return a PermissionCollection object containing the set of
 permissions granted to the specified ProtectionDomain.
getPermitsClause()
- Method in interface com.sun.source.tree.
ClassTree
Returns the subclasses permitted by this type declaration.
getPermittedSubclasses()
- Method in class java.lang.
Class
Returns an array containing
Class
objects representing the
 direct subinterfaces or subclasses permitted to extend or
 implement this class or interface if it is sealed.
getPermittedSubclasses()
- Method in interface javax.lang.model.element.
TypeElement
Returns the permitted classes of this class or interface
 element in declaration order.
getPersistenceDelegate(Class<?>)
- Method in class java.beans.
Encoder
Returns the persistence delegate for the given type.
getPersonalizationString()
- Method in class java.security.
DrbgParameters.Instantiation
Returns the personalization string as a byte array.
getPhase()
- Method in class java.util.concurrent.
Phaser
Returns the current phase number.
getPid()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the
process ID
representing
 the running Java virtual machine.
getPIData()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getPIData()
- Method in interface javax.xml.stream.
XMLStreamReader
Get the data section of a processing instruction
getPITarget()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getPITarget()
- Method in interface javax.xml.stream.
XMLStreamReader
Get the target of a processing instruction
getPitch()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pitch property definition in CSS2.
getPitchBend()
- Method in interface javax.sound.midi.
MidiChannel
Obtains the upward or downward pitch offset for this channel.
getPitchRange()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the pitch-range property definition in CSS2.
getPixel(int, int, double[])
- Method in class java.awt.image.
Raster
Returns the samples in an array of double for the specified pixel.
getPixel(int, int, double[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the samples for the specified pixel in an array of double.
getPixel(int, int, float[])
- Method in class java.awt.image.
Raster
Returns the samples in an array of float for the
 specified pixel.
getPixel(int, int, float[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the samples for the specified pixel in an array of float.
getPixel(int, int, int[])
- Method in class java.awt.image.
Raster
Returns the samples in an array of int for the specified pixel.
getPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Returns all samples for the specified pixel in an int array.
getPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Returns all samples for the specified pixel in an int array,
 one sample per array element.
getPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the specified single band pixel in the first element
 of an
int
array.
getPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the samples for a specified pixel in an int array,
 one sample per array element.
getPixel(int, int, int[], DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns all samples in for the specified pixel in an int array.
getPixelBitStride()
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the pixel bit stride in bits.
getPixelBounds(FontRenderContext, float, float)
- Method in class java.awt.font.
GlyphVector
Returns the pixel bounds of this
GlyphVector
when
 rendered in a graphics with the given
FontRenderContext
at the given location.
getPixelBounds(FontRenderContext, float, float)
- Method in class java.awt.font.
TextLayout
Returns the pixel bounds of this
TextLayout
when
 rendered in a graphics with the given
FontRenderContext
at the given location.
getPixelColor(int, int)
- Method in class java.awt.
Robot
Returns the color of a pixel at the given screen coordinates.
getPixels()
- Method in class java.awt.image.
PixelGrabber
Get the pixel buffer.
getPixels(int, int, int, int, double[])
- Method in class java.awt.image.
Raster
Returns a double array containing all samples for a rectangle of pixels,
 one sample per array element.
getPixels(int, int, int, int, double[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns all samples for a rectangle of pixels in a double
 array, one sample per array element.
getPixels(int, int, int, int, float[])
- Method in class java.awt.image.
Raster
Returns a float array containing all samples for a rectangle of pixels,
 one sample per array element.
getPixels(int, int, int, int, float[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns all samples for a rectangle of pixels in a float
 array, one sample per array element.
getPixels(int, int, int, int, int[])
- Method in class java.awt.image.
Raster
Returns an int array containing all samples for a rectangle of pixels,
 one sample per array element.
getPixels(int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Returns all samples for the specified rectangle of pixels in
 an int array, one sample per data array element.
getPixels(int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Returns all samples for the specified rectangle of pixels in
 an int array, one sample per array element.
getPixels(int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns all samples for a rectangle of pixels in an
 int array, one sample per array element.
getPixels(int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns all samples for the specified rectangle of pixels in
 an int array, one sample per array element.
getPixelSize()
- Method in class java.awt.image.
ColorModel
Returns the number of bits per pixel described by this
ColorModel
.
getPixelStride()
- Method in class java.awt.image.
ComponentSampleModel
Returns the pixel stride of this ComponentSampleModel.
getPlaceholder()
- Method in class javax.swing.text.
MaskFormatter
Returns the String to use if the value does not completely fill
 in the mask.
getPlaceholderCharacter()
- Method in class javax.swing.text.
MaskFormatter
Returns the character to use in place of characters that are not present
 in the value, ie the user must fill them in.
getPlain()
- Method in class java.util.concurrent.atomic.
AtomicBoolean
Returns the current value, with memory semantics of reading as
 if the variable was declared non-
volatile
.
getPlain()
- Method in class java.util.concurrent.atomic.
AtomicInteger
Returns the current value, with memory semantics of reading as
 if the variable was declared non-
volatile
.
getPlain()
- Method in class java.util.concurrent.atomic.
AtomicLong
Returns the current value, with memory semantics of reading as if the
 variable was declared non-
volatile
.
getPlain()
- Method in class java.util.concurrent.atomic.
AtomicReference
Returns the current value, with memory semantics of reading as
 if the variable was declared non-
volatile
.
getPlain(int)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Returns the current value of the element at index
i
,
 with memory semantics of reading as if the variable was declared
 non-
volatile
.
getPlain(int)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Returns the current value of the element at index
i
,
 with memory semantics of reading as if the variable was declared
 non-
volatile
.
getPlain(int)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Returns the current value of the element at index
i
,
 with memory semantics of reading as if the variable was declared
 non-
volatile
.
getPlatformClassLoader()
- Static method in class java.lang.
ClassLoader
Returns the platform class loader.
getPlatformManagementInterfaces()
- Static method in class java.lang.management.
ManagementFactory
Returns the set of
Class
objects, subinterface of
PlatformManagedObject
, representing
 all management interfaces for
 monitoring and managing the Java platform.
getPlatformMBeanServer()
- Static method in class java.lang.management.
ManagementFactory
Returns the platform
MBeanServer
.
getPlatformMXBean(Class<T>)
- Static method in class java.lang.management.
ManagementFactory
Returns the platform MXBean implementing
 the given
mxbeanInterface
which is specified
 to have one single instance in the Java virtual machine.
getPlatformMXBean(MBeanServerConnection, Class<T>)
- Static method in class java.lang.management.
ManagementFactory
Returns the platform MXBean proxy for
mxbeanInterface
which is specified to have one single
 instance in a Java virtual machine and the proxy will
 forward the method calls through the given
MBeanServerConnection
.
getPlatformMXBeans(Class<T>)
- Static method in class java.lang.management.
ManagementFactory
Returns the list of platform MXBeans implementing
 the given
mxbeanInterface
in the Java
 virtual machine.
getPlatformMXBeans(MBeanServerConnection, Class<T>)
- Static method in class java.lang.management.
ManagementFactory
Returns the list of the platform MXBean proxies for
 forwarding the method calls of the
mxbeanInterface
through the given
MBeanServerConnection
.
getPlayDuring()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the play-during property definition in CSS2.
getPluginClassName()
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns the fully-qualified class name of the
ImageReader
or
ImageWriter
plug-in
 associated with this service provider.
getPoint()
- Method in class java.awt.event.
MouseEvent
Returns the x,y position of the event relative to the source component.
getPoint()
- Method in interface java.security.interfaces.
EdECPublicKey
Get the point representing the public key.
getPoint()
- Method in class java.security.spec.
EdECPublicKeySpec
Get the point representing the public key.
getPoint1()
- Method in class java.awt.
GradientPaint
Returns a copy of the point P1 that anchors the first color.
getPoint2()
- Method in class java.awt.
GradientPaint
Returns a copy of the point P2 which anchors the second color.
getPoint2D(Point2D, Point2D)
- Method in class java.awt.image.
AffineTransformOp
Returns the location of the corresponding destination point given a
 point in the source.
getPoint2D(Point2D, Point2D)
- Method in class java.awt.image.
BandCombineOp
Returns the location of the corresponding destination point given a
 point in the source
Raster
.
getPoint2D(Point2D, Point2D)
- Method in interface java.awt.image.
BufferedImageOp
Returns the location of the corresponding destination point given a
 point in the source image.
getPoint2D(Point2D, Point2D)
- Method in class java.awt.image.
ColorConvertOp
Returns the location of the destination point given a
 point in the source.
getPoint2D(Point2D, Point2D)
- Method in class java.awt.image.
ConvolveOp
Returns the location of the destination point given a
 point in the source.
getPoint2D(Point2D, Point2D)
- Method in class java.awt.image.
LookupOp
Returns the location of the destination point given a
 point in the source.
getPoint2D(Point2D, Point2D)
- Method in interface java.awt.image.
RasterOp
Returns the location of the destination point given a
 point in the source Raster.
getPoint2D(Point2D, Point2D)
- Method in class java.awt.image.
RescaleOp
Returns the location of the destination point given a
 point in the source.
getPointerInfo()
- Static method in class java.awt.
MouseInfo
Returns a
PointerInfo
instance that represents the current
 location of the mouse pointer.
getPointSize(int)
- Method in class javax.swing.text.html.
StyleSheet
Returns the point size, given a size index.
getPointSize(String)
- Method in class javax.swing.text.html.
StyleSheet
Given a string such as "+2", "-2", or "2",
  returns a point size value.
getPolicy()
- Method in class java.security.cert.
X509CertSelector
Returns the policy criterion.
getPolicy()
- Static method in class java.security.
Policy
Deprecated.
Returns the installed
Policy
object.
getPolicyQualifier()
- Method in class java.security.cert.
PolicyQualifierInfo
Returns the ASN.1 DER encoded form of the
qualifier
field of this
PolicyQualifierInfo
.
getPolicyQualifierId()
- Method in class java.security.cert.
PolicyQualifierInfo
Returns the
policyQualifierId
field of this
PolicyQualifierInfo
.
getPolicyQualifiers()
- Method in interface java.security.cert.
PolicyNode
Returns the set of policy qualifiers associated with the
 valid policy represented by this node.
getPolicyQualifiersRejected()
- Method in class java.security.cert.
PKIXParameters
Gets the PolicyQualifiersRejected flag.
getPolicyTree()
- Method in class java.security.cert.
PKIXCertPathValidatorResult
Returns the root node of the valid policy tree resulting from the
 PKIX certification path validation algorithm.
getPolyPressure(int)
- Method in interface javax.sound.midi.
MidiChannel
Obtains the pressure with which the specified key is being depressed.
getPool()
- Static method in class java.util.concurrent.
ForkJoinTask
Returns the pool hosting the current thread, or
null
if the current thread is executing outside of any ForkJoinPool.
getPool()
- Method in class java.util.concurrent.
ForkJoinWorkerThread
Returns the pool hosting this thread.
getPooledConnection()
- Method in interface javax.sql.
ConnectionPoolDataSource
Attempts to establish a physical database connection that can
 be used as a pooled connection.
getPooledConnection(String, String)
- Method in interface javax.sql.
ConnectionPoolDataSource
Attempts to establish a physical database connection that can
 be used as a pooled connection.
getPoolIndex()
- Method in class java.util.concurrent.
ForkJoinWorkerThread
Returns the unique index number of this thread in its pool.
getPoolName()
- Method in class java.lang.management.
MemoryNotificationInfo
Returns the name of the memory pool that triggers this notification.
getPoolSize()
- Method in class java.util.concurrent.
ForkJoinPool
Returns the number of worker threads that have started but not
 yet terminated.
getPoolSize()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the current number of threads in the pool.
getPopup(Component, Component, int, int)
- Method in class javax.swing.
PopupFactory
Creates a
Popup
for the Component
owner
containing the Component
contents
.
getPopup(Component, Component, int, int, boolean)
- Method in class javax.swing.
PopupFactory
Creates a
Popup
for the Component
owner
containing the Component
contents
.
getPopup(JPopupMenu, int, int)
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Invokes the
getPopup
method on each UI handled by this object.
getPopup(JPopupMenu, int, int)
- Method in class javax.swing.plaf.
PopupMenuUI
Returns the
Popup
that will be responsible for
 displaying the
JPopupMenu
.
getPopupHeightForRowCount(int)
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Retrieves the height of the popup based on the current
 ListCellRenderer and the maximum row count.
getPopupLocation(MouseEvent)
- Method in class javax.swing.
JComponent
Returns the preferred location to display the popup menu in this
 component's coordinate system.
getPopupMenu()
- Method in class java.awt.
TrayIcon
Returns the popup menu associated with this
TrayIcon
.
getPopupMenu()
- Method in class javax.swing.
JMenu
Returns the popupmenu associated with this menu.
getPopupMenuListeners()
- Method in class javax.swing.
JComboBox
Returns an array of all the
PopupMenuListener
s added
 to this JComboBox with addPopupMenuListener().
getPopupMenuListeners()
- Method in class javax.swing.
JPopupMenu
Returns an array of all the
PopupMenuListener
s added
 to this JMenuItem with addPopupMenuListener().
getPopupMenuOrigin()
- Method in class javax.swing.
JMenu
Computes the origin for the
JMenu
's popup menu.
getPort()
- Method in class java.net.
DatagramPacket
Returns the port number on the remote host to which this datagram is
 being sent or from which the datagram was received, or 0 if not set.
getPort()
- Method in class java.net.
DatagramSocket
Returns the port number to which this socket is connected.
getPort()
- Method in class java.net.
InetSocketAddress
Gets the port number.
getPort()
- Method in class java.net.
Socket
Returns the remote port number to which this socket is connected.
getPort()
- Method in class java.net.
SocketImpl
Returns the value of this socket's
port
field.
getPort()
- Method in class java.net.
URI
Returns the port number of this URI.
getPort()
- Method in class java.net.
URL
Gets the port number of this
URL
.
getPort()
- Method in class java.security.cert.
LDAPCertStoreParameters
Returns the port number of the LDAP server.
getPort()
- Method in class javax.management.remote.
JMXServiceURL
The port of the Service URL.
getPortlist()
- Method in class java.net.
HttpCookie
Returns the port list attribute of the cookie
getPosition()
- Method in class java.awt.font.
LineBreakMeasurer
Returns the current position of this
LineBreakMeasurer
.
getPosition()
- Method in class javax.swing.text.
TabStop
Returns the position, as a float, of the tab.
getPosition()
- Method in interface javax.tools.
Diagnostic
Returns a character offset from the beginning of the source object
 associated with this diagnostic that indicates the location of
 the problem.
getPosition()
- Method in class jdk.jshell.
Diag
Returns a character offset from the beginning of the source object
 associated with this diagnostic that indicates the location of
 the problem.
getPosition()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the position property definition in CSS2.
getPosition()
- Method in interface org.w3c.dom.ls.
LSProgressEvent
The current position in the input source, including all external
 entities and other resources that have been read.
getPosition(int)
- Method in class javax.swing.
SizeSequence
Returns the start position for the specified entry.
getPosition(long, long)
- Method in interface com.sun.source.tree.
LineMap
Finds the position corresponding to a (line,column).
getPosition(Component)
- Method in class javax.swing.
JLayeredPane
Get the relative position of the component within its layer.
getPositionAbove(JTextComponent, int, float)
- Static method in class javax.swing.text.
Utilities
Determines the position in the model that is closest to the given
 view location in the row above.
getPositionAbove(JTextComponent, int, int)
- Static method in class javax.swing.text.
Utilities
Deprecated.
replaced by
Utilities.getPositionAbove(JTextComponent, int, float)
getPositionBelow(JTextComponent, int, float)
- Static method in class javax.swing.text.
Utilities
Determines the position in the model that is closest to the given
 view location in the row below.
getPositionBelow(JTextComponent, int, int)
- Static method in class javax.swing.text.
Utilities
Deprecated.
replaced by
Utilities.getPositionBelow(JTextComponent, int, float)
getPositionsInRange(Vector, int, int)
- Method in class javax.swing.text.
GapContent
Returns a Vector containing instances of UndoPosRef for the
 Positions in the range
offset
to
offset
+
length
.
getPositionsInRange(Vector, int, int)
- Method in class javax.swing.text.
StringContent
Returns a Vector containing instances of UndoPosRef for the
 Positions in the range
offset
to
offset
+
length
.
getPositivePrefix()
- Method in class java.text.
DecimalFormat
Get the positive prefix.
getPositiveSign()
- Method in class java.time.format.
DecimalStyle
Gets the character that represents the positive sign.
getPositiveSuffix()
- Method in class java.text.
DecimalFormat
Get the positive suffix.
getPosixFilePermissions(Path, LinkOption...)
- Static method in class java.nio.file.
Files
Returns a file's POSIX file permissions.
getPostamble()
- Method in interface com.sun.source.doctree.
DocCommentTree
Returns a list of trees containing the content (if any) following the
 content of the documentation comment.
getPreamble()
- Method in interface com.sun.source.doctree.
DocCommentTree
Returns a list of trees containing the content (if any) preceding
 the content of the documentation comment.
getPreciseWheelRotation()
- Method in class java.awt.event.
MouseWheelEvent
Returns the number of "clicks" the mouse wheel was rotated, as a double.
getPrecision()
- Method in class java.math.
MathContext
Returns the
precision
setting.
getPrecision()
- Method in exception class java.util.
IllegalFormatPrecisionException
Returns the precision.
getPrecision()
- Method in class javax.sound.sampled.
FloatControl
Obtains the resolution or granularity of the control, in the units that
 the control measures.
getPrecision(int)
- Method in interface java.sql.
ParameterMetaData
Retrieves the designated parameter's specified column size.
getPrecision(int)
- Method in interface java.sql.
ResultSetMetaData
Get the designated column's specified column size.
getPrecision(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the total number of digits for values stored in
 the designated column.
getPredefinedCursor(int)
- Static method in class java.awt.
Cursor
Returns a cursor object with the specified predefined type.
getPredictionResistance()
- Method in class java.security.
DrbgParameters.NextBytes
Returns whether prediction resistance is requested.
getPredictionResistance()
- Method in class java.security.
DrbgParameters.Reseed
Returns whether prediction resistance is requested.
getPreferredButtonSize(AbstractButton, int)
- Static method in class javax.swing.plaf.basic.
BasicGraphicsUtils
Returns the preferred size of the button.
getPreferredGap(JComponent, JComponent, LayoutStyle.ComponentPlacement, int, Container)
- Method in class javax.swing.
LayoutStyle
Returns the amount of space to use between two components.
getPreferredHeight()
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the preferred height.
getPreferredHeight()
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns the preferred height.
getPreferredHorizontalSize()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the preferred horizontal size.
getPreferredInnerHorizontal()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Returns preferred size of the horizontal
JProgressBar
.
getPreferredInnerVertical()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Returns preferred size of the vertical
JProgressBar
.
getPreferredMenuItemSize(JComponent, Icon, Icon, int)
- Method in class javax.swing.plaf.basic.
BasicMenuItemUI
Returns the preferred size of a menu item.
getPreferredMinSize()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the minimum preferred size.
getPreferredScrollableViewportSize()
- Method in class javax.swing.
JLayer
Returns the preferred size of the viewport for a view component.
getPreferredScrollableViewportSize()
- Method in class javax.swing.
JList
Computes the size of viewport needed to display
visibleRowCount
rows.
getPreferredScrollableViewportSize()
- Method in class javax.swing.
JTable
Returns the preferred size of the viewport for this table.
getPreferredScrollableViewportSize()
- Method in class javax.swing.
JTextArea
Returns the preferred size of the viewport if this component
 is embedded in a JScrollPane.
getPreferredScrollableViewportSize()
- Method in class javax.swing.
JTree
Returns the preferred display size of a
JTree
.
getPreferredScrollableViewportSize()
- Method in interface javax.swing.
Scrollable
Returns the preferred size of the viewport for a view component.
getPreferredScrollableViewportSize()
- Method in class javax.swing.text.
JTextComponent
Returns the preferred size of the viewport for a view component.
getPreferredSize()
- Method in class java.awt.
Component
Gets the preferred size of this component.
getPreferredSize()
- Method in class java.awt.
Container
Returns the preferred size of this container.
getPreferredSize()
- Method in class java.awt.
List
Gets the preferred size of this scrolling list.
getPreferredSize()
- Method in class java.awt.
TextArea
Determines the preferred size of this text area.
getPreferredSize()
- Method in class java.awt.
TextField
Gets the preferred size of this text field.
getPreferredSize()
- Method in class javax.swing.
JComponent
If the
preferredSize
has been set to a
 non-
null
value just returns it.
getPreferredSize()
- Method in class javax.swing.
JEditorPane
Returns the preferred size for the
JEditorPane
.
getPreferredSize()
- Method in class javax.swing.
JTextArea
Returns the preferred size of the TextArea.
getPreferredSize()
- Method in class javax.swing.
JTextField
Returns the preferred size
Dimensions
needed for this
TextField
.
getPreferredSize()
- Method in class javax.swing.
JToolBar.Separator
Returns the preferred size for the separator.
getPreferredSize()
- Method in class javax.swing.plaf.basic.
BasicArrowButton
Returns the preferred size of the
BasicArrowButton
.
getPreferredSize()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneDivider
Returns the preferred size of the divider.
getPreferredSize()
- Method in class javax.swing.table.
JTableHeader
Returns the preferred size of the table header.
getPreferredSize()
- Method in class javax.swing.tree.
DefaultTreeCellEditor.DefaultTextField
Overrides
JTextField.getPreferredSize
to
 return the preferred size based on current font, if set,
 or else use renderer's font.
getPreferredSize()
- Method in class javax.swing.tree.
DefaultTreeCellEditor.EditorContainer
Returns the preferred size for the
Container
.
getPreferredSize()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Overrides
JComponent.getPreferredSize
to
 return slightly wider preferred size value.
getPreferredSize(int)
- Method in class java.awt.
List
Gets the preferred dimensions for a list with the specified
 number of rows.
getPreferredSize(int)
- Method in class java.awt.
TextField
Gets the preferred size of this text field
 with the specified number of columns.
getPreferredSize(int, int)
- Method in class java.awt.
TextArea
Determines the preferred size of a text area with the specified
 number of rows and columns.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Returns the preferred size.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicListUI
The preferredSize of the list depends upon the layout orientation.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
If
c
is the
JOptionPane
the receiver
 is contained in, the preferred
 size that is returned is the maximum of the preferred size of
 the
LayoutManager
for the
JOptionPane
, and
getMinimumOptionPaneSize
.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicRadioButtonUI
The preferred size of the radio button
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
A vertical scrollbar's preferred width is the maximum of
 preferred widths of the (non
null
)
 increment/decrement buttons,
 and the minimum width of the thumb.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the preferred size.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the preferred size for the passed in component,
 This is passed off to the current layout manager.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTableHeaderUI
Return the preferred size of the header.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTableUI
Return the preferred size of the table.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextAreaUI
The method is overridden to take into account caret width.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Gets the preferred size for the editor component.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the preferred size to properly display the tree,
 this is a cover method for
getPreferredSize(c, true)
.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.
ComponentUI
Returns the specified component's preferred size appropriate for
 the look and feel.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.
LayerUI
If the
JLayer
's view component is not
null
,
 this returns the result of  the view's
getPreferredSize()
method.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI
Returns the preferred size of the specified
JFileChooser
.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiButtonUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiColorChooserUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopIconUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopPaneUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiInternalFrameUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiLabelUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiListUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuBarUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuItemUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPanelUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiProgressBarUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiRootPaneUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollBarUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollPaneUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSeparatorUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSliderUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSpinnerUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableHeaderUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolBarUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolTipUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.multi.
MultiViewportUI
Invokes the
getPreferredSize
method on each UI handled by this object.
getPreferredSize(JComponent)
- Method in class javax.swing.plaf.synth.
SynthScrollBarUI
A vertical scrollbar's preferred width is the maximum of
 preferred widths of the (non
null
)
 increment/decrement buttons,
 and the minimum width of the thumb.
getPreferredSize(JComponent, boolean)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the preferred size to represent the tree in
c
.
getPreferredSize(SynthContext, Font, String, Icon, int, int, int, int, int, int)
- Method in class javax.swing.plaf.synth.
SynthGraphicsUtils
Returns the preferred size needed to properly render an icon and text.
getPreferredSizeOfComponent(Component)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Returns the width of the passed in Components preferred size.
getPreferredSpan(int)
- Method in class javax.swing.text.
AsyncBoxView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.
BoxView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.
ComponentView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.
FieldView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.
GlyphView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.html.
BlockView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.html.
ImageView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.html.
ParagraphView
Determines the preferred span for this view.
getPreferredSpan(int)
- Method in class javax.swing.text.
IconView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.
PasswordView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.
PlainView
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.
View
Determines the preferred span for this view along an
 axis.
getPreferredSpan(int)
- Method in class javax.swing.text.
WrappedPlainView
Determines the preferred span for this view along an
 axis.
getPreferredThumbnailSizes(ImageTypeSpecifier, ImageWriteParam, IIOMetadata, IIOMetadata)
- Method in class javax.imageio.
ImageWriter
Returns an array of
Dimension
s indicating the
 legal size ranges for thumbnail images as they will be encoded
 in the output file or stream.
getPreferredTileSizes()
- Method in class javax.imageio.
ImageWriteParam
Returns an array of
Dimension
s indicating the
 legal size ranges for tiles as they will be encoded in the
 output file or stream.
getPreferredValue()
- Method in class javax.swing.
Spring
Returns the
preferred
value of this
Spring
.
getPreferredVerticalSize()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the preferred vertical size.
getPreferredWidth()
- Method in class javax.swing.table.
TableColumn
Returns the preferred width of the
TableColumn
.
getPreferredWidth(Rectangle)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the preferred width for the passed in region.
getPreferredWidth(Rectangle)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns the preferred width and height for the region in
visibleRegion
.
getPrefix()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns
null
, since namespaces are not supported.
getPrefix()
- Method in class javax.xml.namespace.
QName
Get the prefix of this
QName
.
getPrefix()
- Method in interface javax.xml.stream.events.
Namespace
Gets the prefix, returns "" if this is a default
 namespace declaration.
getPrefix()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getPrefix()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the prefix of the current event or null if the event does not have a prefix
getPrefix()
- Method in interface org.w3c.dom.
Node
The namespace prefix of this node, or
null
if it is
 unspecified.
getPrefix(int)
- Method in class javax.naming.
CompositeName
Creates a composite name whose components consist of a prefix of the
 components in this composite name.
getPrefix(int)
- Method in class javax.naming.
CompoundName
Creates a compound name whose components consist of a prefix of the
 components in this compound name.
getPrefix(int)
- Method in class javax.naming.ldap.
LdapName
Creates a name whose components consist of a prefix of the
 components of this LDAP name.
getPrefix(int)
- Method in interface javax.naming.
Name
Creates a name whose components consist of a prefix of the
 components of this name.
getPrefix(String)
- Method in interface javax.xml.namespace.
NamespaceContext
Get prefix bound to Namespace URI in the current scope.
getPrefix(String)
- Method in interface javax.xml.stream.
XMLEventWriter
Gets the prefix the uri is bound to
getPrefix(String)
- Method in interface javax.xml.stream.
XMLStreamWriter
Gets the prefix the uri is bound to.
getPrefix(String)
- Method in class org.xml.sax.helpers.
NamespaceSupport
Return one of the prefixes mapped to a Namespace URI.
getPrefixes()
- Method in class org.xml.sax.helpers.
NamespaceSupport
Return an enumeration of all prefixes whose declarations are
 active in the current context.
getPrefixes(String)
- Method in interface javax.xml.namespace.
NamespaceContext
Get all prefixes bound to a Namespace URI in the current
 scope.
getPrefixes(String)
- Method in class org.xml.sax.helpers.
NamespaceSupport
Return an enumeration of all prefixes for a given URI whose
 declarations are active in the current context.
getPrefixList()
- Method in class javax.xml.crypto.dsig.spec.
ExcC14NParameterSpec
Returns the inclusive namespace prefix list.
getPresentationName()
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Provides a localized, human readable description of this edit
 suitable for use in, say, a change log.
getPresentationName()
- Method in class javax.swing.undo.
AbstractUndoableEdit
This default implementation returns "".
getPresentationName()
- Method in class javax.swing.undo.
CompoundEdit
Returns
getPresentationName
from the
 last
UndoableEdit
added to
edits
.
getPresentationName()
- Method in class javax.swing.undo.
StateEdit
Gets the presentation name for this edit
getPresentationName()
- Method in interface javax.swing.undo.
UndoableEdit
Returns a localized, human-readable description of this edit, suitable
 for use in a change log, for example.
getPreservesUnknownTags()
- Method in class javax.swing.text.html.
HTMLDocument
Returns the behavior the parser observes when encountering
 unknown tags.
getPressedIcon()
- Method in class javax.swing.
AbstractButton
Returns the pressed icon for the button.
getPreviewPanel()
- Static method in class javax.swing.colorchooser.
ColorChooserComponentFactory
Returns the preview panel.
getPreviewPanel()
- Method in class javax.swing.
JColorChooser
Returns the preview panel that shows a chosen color.
getPreviousBounds(JInternalFrame)
- Method in class javax.swing.
DefaultDesktopManager
Gets the normal bounds of the component prior to the component
 being maximized.
getPreviousElementSibling()
- Method in interface org.w3c.dom.
ElementTraversal
Returns a reference to the sibling node of the element which most immediately
 precedes the element in document order, and which is of the
Element
type.
getPreviousLeaf()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the leaf before this node or null if this node is the
 first leaf in the tree.
getPreviousNode()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the node that precedes this node in a preorder traversal of
 this node's tree.
getPreviousRowCount()
- Method in class javax.swing.event.
RowSorterEvent
Returns the number of rows before the sort.
getPreviousSibling()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the previous sibling of this node, or
null
if this node has no previous sibling.
getPreviousSibling()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the previous sibling of this node in the parent's children
 array.
getPreviousSibling()
- Method in interface org.w3c.dom.
Node
The node immediately preceding this node.
getPreviousTabIndex(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the previous tab index.
getPreviousTabIndexInRun(int, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the previous tab index in the run.
getPreviousTabRun(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the previous tab run.
getPreviousValue()
- Method in class javax.swing.
JSpinner
Returns the object in the sequence that comes
 before the object returned by
getValue()
.
getPreviousValue()
- Method in class javax.swing.
SpinnerDateModel
Returns the previous
Date
in the sequence, or
null
if the previous date is before
start
.
getPreviousValue()
- Method in class javax.swing.
SpinnerListModel
Returns the previous element of the underlying sequence or
null
if value is already the first element.
getPreviousValue()
- Method in interface javax.swing.
SpinnerModel
Return the object in the sequence that comes before the object returned
 by
getValue()
.
getPreviousValue()
- Method in class javax.swing.
SpinnerNumberModel
Returns the previous number in the sequence.
getPreviousWord(JTextComponent, int)
- Static method in class javax.swing.text.
Utilities
Determine the start of the prev word for the given location.
getPrevValue()
- Method in interface org.w3c.dom.events.
MutationEvent
prevValue
indicates the previous value of the
Attr
node in DOMAttrModified events, and of the
CharacterData
node in DOMCharacterDataModified events.
getPrimary1()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the primary 1 color.
getPrimary1()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the primary 1 color.
getPrimary1()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the primary 1 color.
getPrimary2()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the primary 2 color.
getPrimary2()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the primary 2 color.
getPrimary2()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the primary 2 color.
getPrimary3()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the primary 3 color.
getPrimary3()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the primary 3 color.
getPrimary3()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the primary 3 color.
getPrimaryControl()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the primary control color of the current theme.
getPrimaryControl()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the primary control color.
getPrimaryControlDarkShadow()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the primary control dark shadow color of the current
 theme.
getPrimaryControlDarkShadow()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the primary control dark shadow color.
getPrimaryControlHighlight()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the primary control highlight color of the current
 theme.
getPrimaryControlHighlight()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the primary control highlight color.
getPrimaryControlInfo()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the primary control info color of the current theme.
getPrimaryControlInfo()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the primary control info color.
getPrimaryControlShadow()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the primary control shadow color of the current theme.
getPrimaryControlShadow()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the primary control shadow color.
getPrimaryGroupID()
- Method in class com.sun.security.auth.module.
NTSystem
Get a printable primary group SID for the current NT user.
getPrimaryKeys(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the given table's primary key columns.
getPrimaryType()
- Method in class java.awt.datatransfer.
DataFlavor
Returns the primary MIME type for this
DataFlavor
.
getPrime()
- Method in class java.security.spec.
RSAOtherPrimeInfo
Returns the prime.
getPrimeExponentP()
- Method in interface java.security.interfaces.
RSAMultiPrimePrivateCrtKey
Returns the primeExponentP.
getPrimeExponentP()
- Method in interface java.security.interfaces.
RSAPrivateCrtKey
Returns the primeExponentP.
getPrimeExponentP()
- Method in class java.security.spec.
RSAMultiPrimePrivateCrtKeySpec
Returns the primeExponentP.
getPrimeExponentP()
- Method in class java.security.spec.
RSAPrivateCrtKeySpec
Returns the primeExponentP.
getPrimeExponentQ()
- Method in interface java.security.interfaces.
RSAMultiPrimePrivateCrtKey
Returns the primeExponentQ.
getPrimeExponentQ()
- Method in interface java.security.interfaces.
RSAPrivateCrtKey
Returns the primeExponentQ.
getPrimeExponentQ()
- Method in class java.security.spec.
RSAMultiPrimePrivateCrtKeySpec
Returns the primeExponentQ.
getPrimeExponentQ()
- Method in class java.security.spec.
RSAPrivateCrtKeySpec
Returns the primeExponentQ.
getPrimeP()
- Method in interface java.security.interfaces.
RSAMultiPrimePrivateCrtKey
Returns the primeP.
getPrimeP()
- Method in interface java.security.interfaces.
RSAPrivateCrtKey
Returns the primeP.
getPrimeP()
- Method in class java.security.spec.
RSAMultiPrimePrivateCrtKeySpec
Returns the primeP.
getPrimeP()
- Method in class java.security.spec.
RSAPrivateCrtKeySpec
Returns the primeP.
getPrimePLength()
- Method in class java.security.spec.
DSAGenParameterSpec
Returns the desired length of the prime P of the
 to-be-generated DSA domain parameters in bits.
getPrimeQ()
- Method in interface java.security.interfaces.
RSAMultiPrimePrivateCrtKey
Returns the primeQ.
getPrimeQ()
- Method in interface java.security.interfaces.
RSAPrivateCrtKey
Returns the primeQ.
getPrimeQ()
- Method in class java.security.spec.
RSAMultiPrimePrivateCrtKeySpec
Returns the primeQ.
getPrimeQ()
- Method in class java.security.spec.
RSAPrivateCrtKeySpec
Returns the primeQ.
getPrimeSize()
- Method in class javax.crypto.spec.
DHGenParameterSpec
Returns the size in bits of the prime modulus.
getPrimitiveArrayType(Class<T>)
- Static method in class javax.management.openmbean.
ArrayType
Create an
ArrayType
instance in a type-safe manner.
getPrimitiveType()
- Method in interface org.w3c.dom.css.
CSSPrimitiveValue
The type of the value as defined by the constants specified above.
getPrimitiveType(Class<?>)
- Static method in class jdk.dynalink.linker.support.
TypeUtilities
When passed a class representing a wrapper for a primitive type, returns
 the class representing the corresponding primitive type.
getPrimitiveType(TypeKind)
- Method in interface javax.lang.model.util.
Types
Returns a primitive type.
getPrimitiveTypeByName(String)
- Static method in class jdk.dynalink.linker.support.
TypeUtilities
Given a name of a primitive type returns the class representing it.
getPrimitiveTypeKind()
- Method in interface com.sun.source.tree.
PrimitiveTypeTree
Returns the kind of this primitive type.
getPrincipal()
- Method in class com.sun.net.httpserver.
Authenticator.Success
Returns the authenticated user
Principal
.
getPrincipal()
- Method in class com.sun.net.httpserver.
HttpExchange
If an authenticator is set on the
HttpContext
that owns this exchange,
 then this method will return the
HttpPrincipal
that represents
 the authenticated user for this
HttpExchange
.
getPrincipal()
- Method in interface java.security.
Certificate
Deprecated.
Returns the principal of the principal-key pair being guaranteed by
 the guarantor.
getPrincipal()
- Method in class javax.security.auth.kerberos.
KerberosKey
Returns the principal that this key belongs to.
getPrincipal()
- Method in class javax.security.auth.kerberos.
KeyTab
Returns the service principal this
KeyTab
object
 is bound to.
getPrincipals()
- Method in class java.security.
ProtectionDomain
Returns an array of principals for this domain.
getPrincipals()
- Method in class javax.security.auth.
PrivateCredentialPermission
Returns the
Principal
classes and names
 associated with this
PrivateCredentialPermission
.
getPrincipals()
- Method in class javax.security.auth.
Subject
Return the
Set
of Principals associated with this
Subject
.
getPrincipals(Class<T>)
- Method in class javax.security.auth.
Subject
Return a
Set
of Principals associated with this
Subject
that are instances or subclasses of the specified
Class
.
getPrintable(int)
- Method in class java.awt.print.
Book
Returns the
Printable
instance responsible for rendering
 the page specified by
pageIndex
.
getPrintable(int)
- Method in interface java.awt.print.
Pageable
Returns the
Printable
instance responsible for
 rendering the page specified by
pageIndex
.
getPrintable(MessageFormat, MessageFormat)
- Method in class javax.swing.text.
JTextComponent
Returns a
Printable
to use for printing the content of this
JTextComponent
.
getPrintable(JTable.PrintMode, MessageFormat, MessageFormat)
- Method in class javax.swing.
JTable
Return a
Printable
for use in printing this JTable.
getPrintableArea(int)
- Method in class javax.print.attribute.standard.
MediaPrintableArea
Get the printable area as an array of 4 values in the order
x, y, w, h
.
getPrintData()
- Method in interface javax.print.
Doc
Obtains the print data representation object that contains this doc
 object's piece of print data in the format corresponding to the supported
 doc flavor.
getPrintData()
- Method in class javax.print.
SimpleDoc
Obtains the print data representation object that contains this doc
 object's piece of print data in the format corresponding to the supported
 doc flavor.
getPrinter()
- Method in class java.awt.
JobAttributes
Returns the destination printer for jobs using these attributes.
getPrinterJob()
- Method in interface java.awt.print.
PrinterGraphics
Returns the
PrinterJob
that is controlling the
 current rendering request.
getPrinterJob()
- Static method in class java.awt.print.
PrinterJob
Creates and returns a
PrinterJob
which is initially
 associated with the default printer.
getPrinterResolution()
- Method in class java.awt.
PageAttributes
Returns the print resolution for pages using these attributes.
getPrintEventType()
- Method in class javax.print.event.
PrintJobEvent
Gets the reason for this event.
getPrintJob()
- Method in interface java.awt.
PrintGraphics
Returns the PrintJob object from which this PrintGraphics
 object originated.
getPrintJob()
- Method in class javax.print.event.
PrintJobAttributeEvent
Determine the
PrintJob
to which this print job event pertains.
getPrintJob()
- Method in class javax.print.event.
PrintJobEvent
Determines the
DocPrintJob
to which this print job event
 pertains.
getPrintJob(Frame, String, JobAttributes, PageAttributes)
- Method in class java.awt.
Toolkit
Gets a
PrintJob
object which is the result of initiating
 a print operation on the toolkit's platform.
getPrintJob(Frame, String, Properties)
- Method in class java.awt.
Toolkit
Gets a
PrintJob
object which is the result of initiating
 a print operation on the toolkit's platform.
getPrintQuality()
- Method in class java.awt.
PageAttributes
Returns the print quality for pages using these attributes.
getPrintService()
- Method in class java.awt.print.
PrinterJob
Returns the service (printer) for this printer job.
getPrintService()
- Method in interface javax.print.
DocPrintJob
Determines the
PrintService
object to which this print job object
 is bound.
getPrintService()
- Method in class javax.print.event.
PrintServiceAttributeEvent
Returns the print service.
getPrintService(OutputStream)
- Method in class javax.print.
StreamPrintServiceFactory
Returns a
StreamPrintService
that can print to the specified
 output stream.
getPrintServices()
- Method in class javax.print.
PrintServiceLookup
Not called directly by applications.
getPrintServices(DocFlavor, AttributeSet)
- Method in class javax.print.
PrintServiceLookup
Locates services that can be positively confirmed to support the
 combination of attributes and
DocFlavors
specified.
getPriority()
- Method in class java.lang.management.
ThreadInfo
Returns the
thread priority
of the
 thread associated with this
ThreadInfo
.
getPriority()
- Method in class java.lang.
Thread
Returns this thread's priority.
getPrivacy()
- Method in class org.ietf.jgss.
MessageProp
Retrieves the privacy state.
getPrivate()
- Method in class java.security.
KeyPair
Returns a reference to the private key component of this key pair.
getPrivateCredentials()
- Method in class javax.security.auth.
Subject
Return the
Set
of private credentials held by this
Subject
.
getPrivateCredentials(Class<T>)
- Method in class javax.security.auth.
Subject
Return a
Set
of private credentials associated with this
Subject
that are instances or subclasses of the specified
Class
.
getPrivateExponent()
- Method in interface java.security.interfaces.
RSAPrivateKey
Returns the private exponent.
getPrivateExponent()
- Method in class java.security.spec.
RSAPrivateKeySpec
Returns the private exponent.
getPrivateKey()
- Method in class java.security.
KeyStore.PrivateKeyEntry
Gets the
PrivateKey
from this entry.
getPrivateKey()
- Method in class java.security.
Signer
Deprecated.
Returns this signer's private key.
getPrivateKey()
- Method in class javax.security.auth.x500.
X500PrivateCredential
Returns the PrivateKey.
getPrivateKey(String)
- Method in interface javax.net.ssl.
X509KeyManager
Returns the key associated with the given alias.
getPrivateKeyValid()
- Method in class java.security.cert.
X509CertSelector
Returns the privateKeyValid criterion.
getProblemType()
- Method in class javax.management.relation.
RoleUnresolved
Retrieves problem type.
getProcedureColumns(String, String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the given catalog's stored procedure parameter
 and result columns.
getProcedures(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the stored procedures available in the given
 catalog.
getProcedureTerm()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the database vendor's preferred term for "procedure".
getProcessCpuLoad()
- Method in interface com.sun.management.
OperatingSystemMXBean
Returns the "recent cpu usage" for the Java Virtual Machine process.
getProcessCpuTime()
- Method in interface com.sun.management.
OperatingSystemMXBean
Returns the CPU time used by the process on which the Java
 virtual machine is running in nanoseconds.
getProcessedDTD()
- Method in interface javax.xml.stream.events.
DTD
Returns an implementation defined representation of the DTD.
getProcessor()
- Method in interface com.sun.source.tree.
StringTemplateTree
PREVIEW
Returns templated string processor (may be qualified) or null.
getProfile()
- Method in class java.awt.color.
ICC_ColorSpace
Returns the
ICC_Profile
for this
ICC_ColorSpace
.
getProfile()
- Method in interface org.w3c.dom.html.
HTMLHeadElement
URI designating a metadata profile.
getProfileClass()
- Method in class java.awt.color.
ICC_Profile
Returns the profile class.
getProgram()
- Method in interface javax.sound.midi.
MidiChannel
Obtains the current program number for this channel.
getProgram()
- Method in class javax.sound.midi.
Patch
Returns the index, within a bank, of the instrument whose location this
Patch
specifies.
getProgram(String...)
- Method in interface javax.script.
ScriptEngineFactory
Returns a valid scripting language executable program with given statements.
getProgress()
- Method in class javax.swing.
SwingWorker
Returns the
progress
bound property.
getProgressBarBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JProgressBar
.
getProgressiveMode()
- Method in class javax.imageio.
ImageWriteParam
Returns the current mode for writing the stream in a
 progressive manner.
getProgressMonitor()
- Method in class javax.swing.
ProgressMonitorInputStream
Get the ProgressMonitor object being used by this stream.
getPrompt()
- Method in class javax.security.auth.callback.
ChoiceCallback
Get the prompt.
getPrompt()
- Method in class javax.security.auth.callback.
ConfirmationCallback
Get the prompt.
getPrompt()
- Method in class javax.security.auth.callback.
NameCallback
Get the prompt.
getPrompt()
- Method in class javax.security.auth.callback.
PasswordCallback
Get the prompt.
getPrompt()
- Method in class javax.security.auth.callback.
TextInputCallback
Get the prompt.
getPrompt()
- Method in interface org.w3c.dom.html.
HTMLIsIndexElement
The prompt message.
getPropagatedFrom()
- Method in class java.beans.beancontext.
BeanContextEvent
Gets the
BeanContext
from which this event was propagated.
getPropagationId()
- Method in class java.beans.
PropertyChangeEvent
The "propagationId" field is reserved for future use.
getProperties()
- Static method in class java.lang.
System
Determines the current system properties.
getProperties()
- Method in interface javax.xml.crypto.dsig.
SignatureProperties
Returns an
unmodifiable
 list
of one or more
SignatureProperty
s that are contained in
 this
SignatureProperties
.
getProperty(ParameterBlock, String)
- Method in interface java.awt.image.renderable.
ContextualRenderedImageFactory
Gets the appropriate instance of the property specified by the name
 parameter.
getProperty(Object)
- Method in interface com.sun.jdi.request.
EventRequest
Returns the value of the property with the specified key.
getProperty(Object)
- Method in class javax.swing.text.
AbstractDocument
A convenience method for looking up a property value.
getProperty(Object)
- Method in interface javax.swing.text.
Document
Gets the properties associated with the document.
getProperty(String)
- Method in class java.awt.image.
BufferedImage
Returns a property of the image by name.
getProperty(String)
- Method in interface java.awt.image.renderable.
RenderableImage
Gets a property from the property set of this image.
getProperty(String)
- Method in class java.awt.image.renderable.
RenderableImageOp
Gets a property from the property set of this image.
getProperty(String)
- Method in interface java.awt.image.
RenderedImage
Gets a property from the property set of this image.
getProperty(String)
- Static method in class java.lang.
System
Gets the system property indicated by the specified key.
getProperty(String)
- Static method in class java.security.
Security
Gets a security property value.
getProperty(String)
- Method in class java.util.logging.
LogManager
Get the value of a logging property.
getProperty(String)
- Method in class java.util.
Properties
Searches for the property with the specified key in this property list.
getProperty(String)
- Method in class javax.sound.midi.
MidiFileFormat
Obtain the property value specified by the key.
getProperty(String)
- Method in class javax.sound.sampled.
AudioFileFormat
Obtain the property value specified by the key.
getProperty(String)
- Method in class javax.sound.sampled.
AudioFormat
Obtain the property value specified by the key.
getProperty(String)
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
This implementation uses an internal
HashMap
to get the object
 that the specified name maps to.
getProperty(String)
- Method in interface javax.xml.crypto.
XMLCryptoContext
Returns the value of the specified property.
getProperty(String)
- Method in class javax.xml.parsers.
SAXParser
Returns the particular property requested for in the underlying
 implementation of
XMLReader
.
getProperty(String)
- Method in class javax.xml.stream.util.
EventReaderDelegate
getProperty(String)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getProperty(String)
- Method in interface javax.xml.stream.
XMLEventReader
Get the value of a feature/property from the underlying implementation
getProperty(String)
- Method in class javax.xml.stream.
XMLInputFactory
Get the value of a feature/property from the underlying implementation
getProperty(String)
- Method in class javax.xml.stream.
XMLOutputFactory
Get a feature/property on the underlying implementation
getProperty(String)
- Method in interface javax.xml.stream.
XMLStreamReader
Get the value of a feature/property from the underlying implementation
getProperty(String)
- Method in interface javax.xml.stream.
XMLStreamWriter
Get the value of a feature/property from the underlying implementation
getProperty(String)
- Method in class javax.xml.validation.
SchemaFactory
Look up the value of a property.
getProperty(String)
- Method in class javax.xml.validation.
Validator
Look up the value of a property.
getProperty(String)
- Method in class javax.xml.validation.
ValidatorHandler
Look up the value of a property.
getProperty(String)
- Method in class javax.xml.xpath.
XPathFactory
Returns the value of the specified property.
getProperty(String)
- Method in class jdk.security.jarsigner.
JarSigner
Returns the value of an additional implementation-specific property
 indicated by the specified key.
getProperty(String)
- Method in class org.xml.sax.helpers.
ParserAdapter
Get a parser property.
getProperty(String)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Look up the value of a property.
getProperty(String)
- Method in interface org.xml.sax.
XMLReader
Look up the value of a property.
getProperty(String, ImageObserver)
- Method in class java.awt.image.
AbstractMultiResolutionImage
This method simply delegates to the same method on the base image and
 it is equivalent to:
getBaseImage().getProperty(name, observer)
.
getProperty(String, ImageObserver)
- Method in class java.awt.image.
BufferedImage
Returns a property of the image by name.
getProperty(String, ImageObserver)
- Method in class java.awt.
Image
Gets a property of this image by name.
getProperty(String, String)
- Static method in class java.awt.
Toolkit
Gets a property with the specified key and default.
getProperty(String, String)
- Static method in class java.lang.
System
Gets the system property indicated by the specified key.
getProperty(String, String)
- Method in class java.util.
Properties
Searches for the property with the specified key in this property list.
getPropertyChangeEvent()
- Method in exception class java.beans.
PropertyVetoException
Gets the vetoed
PropertyChangeEvent
.
getPropertyChangeListeners()
- Method in class java.awt.
Component
Returns an array of all the property change listeners
 registered on this component.
getPropertyChangeListeners()
- Method in class java.awt.
KeyboardFocusManager
Returns an array of all the property change listeners
 registered on this keyboard focus manager.
getPropertyChangeListeners()
- Method in class java.awt.
Toolkit
Returns an array of all the property change listeners
 registered on this toolkit.
getPropertyChangeListeners()
- Method in class java.beans.
PropertyChangeSupport
Returns an array of all the listeners that were added to the
 PropertyChangeSupport object with addPropertyChangeListener().
getPropertyChangeListeners()
- Method in class javax.swing.
AbstractAction
Returns an array of all the
PropertyChangeListener
s added
 to this AbstractAction with addPropertyChangeListener().
getPropertyChangeListeners()
- Method in class javax.swing.plaf.basic.
BasicDirectoryModel
Returns an array of all the property change listeners
 registered on this component.
getPropertyChangeListeners()
- Method in class javax.swing.plaf.
LayerUI
Returns an array of all the property change listeners
 registered on this component.
getPropertyChangeListeners()
- Method in class javax.swing.table.
TableColumn
Returns an array of all the
PropertyChangeListener
s added
 to this TableColumn with addPropertyChangeListener().
getPropertyChangeListeners()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns an array of all the property change listeners
 registered on this
DefaultTreeSelectionModel
.
getPropertyChangeListeners()
- Method in class javax.swing.
UIDefaults
Returns an array of all the
PropertyChangeListener
s added
 to this UIDefaults with addPropertyChangeListener().
getPropertyChangeListeners()
- Static method in class javax.swing.
UIManager
Returns an array of all the
PropertyChangeListener
s added
 to this UIManager with addPropertyChangeListener().
getPropertyChangeListeners(String)
- Method in class java.awt.
Component
Returns an array of all the listeners which have been associated
 with the named property.
getPropertyChangeListeners(String)
- Method in class java.awt.
KeyboardFocusManager
Returns an array of all the
PropertyChangeListener
s
 associated with the named property.
getPropertyChangeListeners(String)
- Method in class java.awt.
SystemTray
Returns an array of all the listeners that have been associated
 with the named property.
getPropertyChangeListeners(String)
- Method in class java.awt.
Toolkit
Returns an array of all property change listeners
 associated with the specified name of a desktop property.
getPropertyChangeListeners(String)
- Method in class java.beans.
PropertyChangeSupport
Returns an array of all the listeners which have been associated
 with the named property.
getPropertyChangeListeners(String)
- Method in class javax.swing.plaf.
LayerUI
Returns an array of all the listeners which have been associated
 with the named property.
getPropertyChangeSupport()
- Method in class javax.swing.
SwingWorker
Returns the
PropertyChangeSupport
for this
SwingWorker
.
getPropertyCSSValue(String)
- Method in interface org.w3c.dom.css.
CSSStyleDeclaration
Used to retrieve the object representation of the value of a CSS
 property if it has been explicitly set within this declaration block.
getPropertyDescriptors()
- Method in interface java.beans.
BeanInfo
Returns descriptors for all properties of the bean.
getPropertyDescriptors()
- Method in class java.beans.
SimpleBeanInfo
Deny knowledge of properties.
getPropertyEditorClass()
- Method in class java.beans.
PropertyDescriptor
Gets any explicit PropertyEditor Class that has been registered
 for this property.
getPropertyInfo(String, Properties)
- Method in interface java.sql.
Driver
Gets information about the possible properties for this driver.
getPropertyName()
- Method in interface com.sun.source.doctree.
SystemPropertyTree
Returns the specified system property name.
getPropertyName()
- Method in class java.beans.
PropertyChangeEvent
Gets the programmatic name of the property that was changed.
getPropertyName()
- Method in class java.beans.
PropertyChangeListenerProxy
Returns the name of the named property associated with the listener.
getPropertyName()
- Method in class java.beans.
VetoableChangeListenerProxy
Returns the name of the named property associated with the listener.
getPropertyName()
- Method in enum class javax.xml.catalog.
CatalogFeatures.Feature
Returns the name of the corresponding System Property.
getPropertyNames()
- Method in class java.awt.image.
BufferedImage
Returns an array of names recognized by
getProperty(String)
or
null
, if no property names are recognized.
getPropertyNames()
- Method in interface java.awt.image.renderable.
ContextualRenderedImageFactory
Returns a list of names recognized by getProperty.
getPropertyNames()
- Method in interface java.awt.image.renderable.
RenderableImage
Returns a list of names recognized by getProperty.
getPropertyNames()
- Method in class java.awt.image.renderable.
RenderableImageOp
Return a list of names recognized by getProperty.
getPropertyNames()
- Method in interface java.awt.image.
RenderedImage
Returns an array of names recognized by
getProperty(String)
or
null
, if no property names are recognized.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Returns the property prefix.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicCheckBoxUI
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicEditorPaneUI
Fetches the name used as a key to lookup properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicFormattedTextFieldUI
Fetches the name used as a key to lookup properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicMenuItemUI
Returns a property prefix.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicPasswordFieldUI
Fetches the name used as a key to look up properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicTextAreaUI
Fetches the name used as a key to look up properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicTextFieldUI
Fetches the name used as a key to lookup properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicTextPaneUI
Fetches the name used as a key to lookup properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.basic.
BasicTextUI
Gets the name used as a key to look up properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.metal.
MetalCheckBoxUI
getPropertyPrefix()
- Method in class javax.swing.plaf.synth.
SynthFormattedTextFieldUI
Fetches the name used as a key to lookup properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.synth.
SynthPasswordFieldUI
Fetches the name used as a key to look up properties through the
 UIManager.
getPropertyPrefix()
- Method in class javax.swing.plaf.synth.
SynthTextPaneUI
Fetches the name used as a key to lookup properties through the
 UIManager.
getPropertyPriority(String)
- Method in interface org.w3c.dom.css.
CSSStyleDeclaration
Used to retrieve the priority of a CSS property (e.g. the
"important"
qualifier) if the priority has been
 explicitly set in this declaration block.
getPropertyType()
- Method in class java.beans.
PropertyDescriptor
Returns the Java type info for the property.
getPropertyValue(String)
- Method in interface org.w3c.dom.css.
CSSStyleDeclaration
Used to retrieve the value of a CSS property if it has been explicitly
 set within this declaration block.
getProtectionAlgorithm()
- Method in class java.security.
KeyStore.PasswordProtection
Gets the name of the protection algorithm.
getProtectionDomain()
- Method in class java.lang.
Class
Returns the
ProtectionDomain
of this class.
getProtectionParameter()
- Method in class java.security.
DomainLoadStoreParameter
Gets the keystore protection parameters for this domain.
getProtectionParameter()
- Method in interface java.security.
KeyStore.LoadStoreParameter
Gets the parameter used to protect keystore data.
getProtectionParameter(String)
- Method in class java.security.
KeyStore.Builder
Returns the
ProtectionParameter
that should be used to obtain
 the
Entry
with the given alias.
getProtectionParameters()
- Method in class java.security.
KeyStore.PasswordProtection
Gets the parameters supplied for the protection algorithm.
getProtectionParams()
- Method in class java.security.
DomainLoadStoreParameter
Gets the keystore protection parameters for keystores in this
 domain.
getProtocol()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns the protocol string from the request in the form
protocol/majorVersion.minorVersion
.
getProtocol()
- Method in class java.net.
URL
Gets the protocol name of this
URL
.
getProtocol()
- Method in class javax.management.remote.
JMXServiceURL
The protocol part of the Service URL.
getProtocol()
- Method in class javax.management.remote.rmi.
RMIJRMPServerImpl
getProtocol()
- Method in class javax.management.remote.rmi.
RMIServerImpl
Returns the protocol string for this object.
getProtocol()
- Method in class javax.net.ssl.
SSLContext
Returns the protocol name of this
SSLContext
object.
getProtocol()
- Method in interface javax.net.ssl.
SSLSession
Returns the standard name of the protocol used for all
 connections in the session.
getProtocol()
- Method in class javax.smartcardio.
Card
Returns the protocol in use for this card.
getProtocols()
- Method in class com.sun.net.httpserver.
HttpsParameters
Returns a copy of the array of protocols or
null
if none have been
 set.
getProtocols()
- Method in class javax.net.ssl.
SSLParameters
Returns a copy of the array of protocols or null if none
 have been set.
getPrototypeCellValue()
- Method in class javax.swing.
JList
Returns the "prototypical" cell value -- a value used to calculate a
 fixed width and height for cells.
getPrototypeDisplayValue()
- Method in class javax.swing.
JComboBox
Returns the "prototypical display" value - an Object used
 for the calculation of the display height and width.
getProvider()
- Method in class java.security.
AlgorithmParameterGenerator
Returns the provider of this algorithm parameter generator object.
getProvider()
- Method in class java.security.
AlgorithmParameters
Returns the provider of this parameter object.
getProvider()
- Method in class java.security.cert.
CertificateFactory
Returns the provider of this certificate factory.
getProvider()
- Method in class java.security.cert.
CertPathBuilder
Returns the provider of this
CertPathBuilder
.
getProvider()
- Method in class java.security.cert.
CertPathValidator
Returns the
Provider
of this
CertPathValidator
.
getProvider()
- Method in class java.security.cert.
CertStore
Returns the provider of this
CertStore
.
getProvider()
- Method in class java.security.
KeyFactory
Returns the provider of this key factory object.
getProvider()
- Method in class java.security.
KeyPairGenerator
Returns the provider of this key pair generator object.
getProvider()
- Method in class java.security.
KeyStore
Returns the provider of this keystore.
getProvider()
- Method in class java.security.
MessageDigest
Returns the provider of this message digest object.
getProvider()
- Method in class java.security.
Policy
Deprecated.
Return the
Provider
of this policy.
getProvider()
- Method in class java.security.
Provider.Service
Return the Provider of this service.
getProvider()
- Method in class java.security.
SecureRandom
Returns the provider of this
SecureRandom
object.
getProvider()
- Method in class java.security.
Signature
Returns the provider of this
Signature
object.
getProvider()
- Method in class javax.crypto.
Cipher
Returns the provider of this
Cipher
object.
getProvider()
- Method in class javax.crypto.
ExemptionMechanism
Returns the provider of this
ExemptionMechanism
object.
getProvider()
- Method in class javax.crypto.
KeyAgreement
Returns the provider of this
KeyAgreement
object.
getProvider()
- Method in class javax.crypto.
KeyGenerator
Returns the provider of this
KeyGenerator
object.
getProvider()
- Method in class javax.crypto.
Mac
Returns the provider of this
Mac
object.
getProvider()
- Method in class javax.crypto.
SecretKeyFactory
Returns the provider of this
SecretKeyFactory
object.
getProvider()
- Method in class javax.net.ssl.
KeyManagerFactory
Returns the provider of this
KeyManagerFactory
object.
getProvider()
- Method in class javax.net.ssl.
SSLContext
Returns the provider of this
SSLContext
object.
getProvider()
- Method in class javax.net.ssl.
TrustManagerFactory
Returns the provider of this
TrustManagerFactory
object.
getProvider()
- Method in class javax.security.auth.login.
Configuration
Return the Provider of this Configuration.
getProvider()
- Method in class javax.smartcardio.
TerminalFactory
Returns the provider of this TerminalFactory.
getProvider()
- Method in class javax.xml.crypto.dsig.keyinfo.
KeyInfoFactory
Returns the provider of this
KeyInfoFactory
.
getProvider()
- Method in class javax.xml.crypto.dsig.
TransformService
Returns the provider of this
TransformService
.
getProvider()
- Method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Returns the provider of this
XMLSignatureFactory
.
getProvider()
- Method in class jdk.jfr.
Configuration
Returns who created the configuration (for example
"OpenJDK"
).
getProvider()
- Method in class jdk.management.jfr.
ConfigurationInfo
Returns the provider of the configuration associated with this
ConfigurationInfo
(for example,
"OpenJDK"
).
getProvider(String)
- Static method in class java.security.
Security
Returns the provider installed with the specified name, if
 any.
getProviderGrade()
- Method in class javax.sql.rowset.spi.
SyncProvider
Returns a constant indicating the
 grade of synchronization a
RowSet
object can expect from
 this
SyncProvider
object.
getProviderID()
- Method in class javax.sql.rowset.spi.
SyncProvider
Returns the unique identifier for this
SyncProvider
object.
getProviders()
- Static method in class java.security.
Security
Returns an array containing all the installed providers.
getProviders(String)
- Static method in class java.security.
Security
Returns an array containing all installed providers that satisfy the
 specified selection criterion, or
null
if no such providers
 have been installed.
getProviders(Map<String, String>)
- Static method in class java.security.
Security
Returns an array containing all installed providers that satisfy the
 specified selection criteria, or
null
if no such providers have
 been installed.
getProxyClass(ClassLoader, Class<?>...)
- Static method in class java.lang.reflect.
Proxy
Deprecated.
Proxy classes generated in a named module are encapsulated
      and not accessible to code outside its module.
Constructor.newInstance
will throw
IllegalAccessException
when it is called on
      an inaccessible proxy class.
      Use
Proxy.newProxyInstance(ClassLoader, Class[], InvocationHandler)
to create a proxy instance instead.
getPseudoColumns(String, String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the pseudo or hidden columns available
 in a given table within the specified catalog and schema.
getPSName()
- Method in class java.awt.
Font
Returns the postscript name of this
Font
.
getPSource()
- Method in class javax.crypto.spec.
OAEPParameterSpec
Returns the source of encoding input P.
getPSSParameterSpec()
- Method in class javax.xml.crypto.dsig.spec.
RSAPSSParameterSpec
Returns the
PSSParameterSpec
object inside.
getPublic()
- Method in class java.security.
KeyPair
Returns a reference to the public key component of this key pair.
getPublicCredentials()
- Method in class javax.security.auth.
Subject
Return the
Set
of public credentials held by this
Subject
.
getPublicCredentials(Class<T>)
- Method in class javax.security.auth.
Subject
Return a
Set
of public credentials associated with this
Subject
that are instances or subclasses of the specified
Class
.
getPublicExponent()
- Method in interface java.security.interfaces.
RSAMultiPrimePrivateCrtKey
Returns the public exponent.
getPublicExponent()
- Method in interface java.security.interfaces.
RSAPrivateCrtKey
Returns the public exponent.
getPublicExponent()
- Method in interface java.security.interfaces.
RSAPublicKey
Returns the public exponent.
getPublicExponent()
- Method in class java.security.spec.
RSAKeyGenParameterSpec
Returns the public-exponent value.
getPublicExponent()
- Method in class java.security.spec.
RSAMultiPrimePrivateCrtKeySpec
Returns the public exponent.
getPublicExponent()
- Method in class java.security.spec.
RSAPrivateCrtKeySpec
Returns the public exponent.
getPublicExponent()
- Method in class java.security.spec.
RSAPublicKeySpec
Returns the public exponent.
getPublicId()
- Method in interface javax.xml.stream.events.
EntityDeclaration
The entity's public identifier, or null if none was given
getPublicId()
- Method in interface javax.xml.stream.events.
NotationDeclaration
The notation's public identifier, or null if none was given.
getPublicId()
- Method in interface javax.xml.stream.
Location
Returns the public ID of the XML
getPublicId()
- Method in interface javax.xml.transform.
SourceLocator
Return the public identifier for the current document event.
getPublicId()
- Method in class javax.xml.transform.stream.
StreamSource
Get the public identifier that was set with setPublicId.
getPublicId()
- Method in interface org.w3c.dom.
DocumentType
The public identifier of the external subset.
getPublicId()
- Method in interface org.w3c.dom.
Entity
The public identifier associated with the entity if specified, and
null
otherwise.
getPublicId()
- Method in interface org.w3c.dom.ls.
LSInput
The public identifier for this input source.
getPublicId()
- Method in interface org.w3c.dom.
Notation
The public identifier of this notation.
getPublicId()
- Method in class org.xml.sax.helpers.
LocatorImpl
Return the saved public identifier.
getPublicId()
- Method in class org.xml.sax.
InputSource
Get the public identifier for this input source.
getPublicId()
- Method in interface org.xml.sax.
Locator
Return the public identifier for the current document event.
getPublicId()
- Method in exception class org.xml.sax.
SAXParseException
Get the public identifier of the entity where the exception occurred.
getPublicKey()
- Method in class java.security.cert.
Certificate
Gets the public key from this certificate.
getPublicKey()
- Method in class java.security.cert.
PKIXCertPathValidatorResult
Returns the public key of the subject (target) of the certification
 path, including any inherited public key parameters if applicable.
getPublicKey()
- Method in interface java.security.
Certificate
Deprecated.
Returns the key of the principal-key pair being guaranteed by
 the guarantor.
getPublicKey()
- Method in class java.security.
Identity
Deprecated.
Returns this identity's public key.
getPublicKey()
- Method in class javax.security.cert.
Certificate
Deprecated.
Gets the public key from this certificate.
getPublicKey()
- Method in interface javax.xml.crypto.dsig.keyinfo.
KeyValue
Returns the public key of this
KeyValue
.
getPurgeFlag()
- Method in class javax.management.relation.
RelationService
Returns the flag to indicate if when a notification is received for the
 unregistration of an MBean referenced in a relation, if an immediate
 "purge" of the relations (look for the relations no longer valid)
 has to be performed , or if that will be performed only when the
 purgeRelations method will be explicitly called.
getPurgeFlag()
- Method in interface javax.management.relation.
RelationServiceMBean
Returns the flag to indicate if when a notification is received for the
 unregistration of an MBean referenced in a relation, if an immediate
 "purge" of the relations (look for the relations no longer valid)
 has to be performed, or if that will be performed only when the
 purgeRelations method is explicitly called.
getPushLevel()
- Method in class java.util.logging.
MemoryHandler
Get the
pushLevel
.
getQ()
- Method in interface java.security.interfaces.
DSAParams
Returns the subprime,
q
.
getQ()
- Method in class java.security.spec.
DSAParameterSpec
Returns the sub-prime
q
.
getQ()
- Method in class java.security.spec.
DSAPrivateKeySpec
Returns the sub-prime
q
.
getQ()
- Method in class java.security.spec.
DSAPublicKeySpec
Returns the sub-prime
q
.
getQName(int)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's XML qualified (prefixed) name by index.
getQName(int)
- Method in class org.xml.sax.helpers.
AttributesImpl
Return an attribute's qualified (prefixed) name.
getQNameType(Class<?>)
- Static method in enum class javax.xml.xpath.
XPathEvaluationResult.XPathResultType
Returns the QName type as specified in
XPathConstants
that
 corresponds to the specified class type.
getQOP()
- Method in class org.ietf.jgss.
MessageProp
Retrieves the QOP value.
getQTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageReadParam
Returns a copy of the array of quantization tables set on the
 most recent call to
setDecodeTables
, or
null
if tables are not currently set.
getQTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageWriteParam
Returns a copy of the array of quantization tables set on the
 most recent call to
setEncodeTables
, or
null
if tables are not currently set.
getQuadrantRotateInstance(int)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform that rotates coordinates by the specified
 number of quadrants.
getQuadrantRotateInstance(int, double, double)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform that rotates coordinates by the specified
 number of quadrants around the specified anchor point.
getQualifiedIdentifier()
- Method in interface com.sun.source.tree.
ImportTree
Returns the qualified identifier for the declaration(s)
 being imported.
getQualifiedName()
- Method in interface javax.lang.model.element.
ModuleElement
Returns the fully qualified name of this module.
getQualifiedName()
- Method in interface javax.lang.model.element.
PackageElement
Returns the fully qualified name of this package.
getQualifiedName()
- Method in interface javax.lang.model.element.
QualifiedNameable
Returns the fully qualified name of an element.
getQualifiedName()
- Method in interface javax.lang.model.element.
TypeElement
Returns the fully qualified name of this class or interface
 element.
getQualifierExpression()
- Method in interface com.sun.source.tree.
MemberReferenceTree
Returns the qualifier expression for the reference.
getQuery()
- Method in class java.net.
URI
Returns the decoded query component of this URI.
getQuery()
- Method in class java.net.
URL
Gets the query part of this
URL
.
getQueryTimeout()
- Method in interface java.sql.
Statement
Retrieves the number of seconds the driver will
 wait for a
Statement
object to execute.
getQueryTimeout()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves the maximum number of seconds the driver will wait for a
 query to execute.
getQueryTimeout()
- Method in interface javax.sql.
RowSet
Retrieves the maximum number of seconds the driver will wait for
 a statement to execute.
getQueue()
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Returns the task queue used by this executor.
getQueue()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the task queue used by this executor.
getQueuedReaderThreads()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Returns a collection containing threads that may be waiting to
 acquire the read lock.
getQueuedSubmissionCount()
- Method in class java.util.concurrent.
ForkJoinPool
Returns an estimate of the number of tasks submitted to this
 pool that have not yet begun executing.
getQueuedTaskCount()
- Method in class java.util.concurrent.
ForkJoinPool
Returns an estimate of the total number of tasks currently held
 in queues by worker threads (but not including tasks submitted
 to the pool that have not begun executing).
getQueuedTaskCount()
- Static method in class java.util.concurrent.
ForkJoinTask
Returns an estimate of the number of tasks that have been
 forked by the current worker thread but not yet executed.
getQueuedTaskCount()
- Method in class java.util.concurrent.
ForkJoinWorkerThread
Returns a (non-negative) estimate of the number of tasks in the
 thread's queue.
getQueuedThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Returns a collection containing threads that may be waiting to
 acquire.
getQueuedThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Returns a collection containing threads that may be waiting to
 acquire.
getQueuedThreads()
- Method in class java.util.concurrent.locks.
ReentrantLock
Returns a collection containing threads that may be waiting to
 acquire this lock.
getQueuedThreads()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Returns a collection containing threads that may be waiting to
 acquire either the read or write lock.
getQueuedThreads()
- Method in class java.util.concurrent.
Semaphore
Returns a collection containing threads that may be waiting to acquire.
getQueuedWriterThreads()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Returns a collection containing threads that may be waiting to
 acquire the write lock.
getQueueLength()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Returns an estimate of the number of threads waiting to
 acquire.
getQueueLength()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Returns an estimate of the number of threads waiting to
 acquire.
getQueueLength()
- Method in class java.util.concurrent.locks.
ReentrantLock
Returns an estimate of the number of threads waiting to acquire
 this lock.
getQueueLength()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Returns an estimate of the number of threads waiting to acquire
 either the read or write lock.
getQueueLength()
- Method in class java.util.concurrent.
Semaphore
Returns an estimate of the number of threads waiting to acquire.
getQuotes()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the quotes property definition in CSS2.
getRadioButtonBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JRadioButton
.
getRadioButtonIcon()
- Static method in class javax.swing.plaf.basic.
BasicIconFactory
Returns a radio button icon.
getRadioButtonIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
RadioButtonIcon
.
getRadioButtonMenuItemIcon()
- Static method in class javax.swing.plaf.basic.
BasicIconFactory
Returns a radio button menu item icon.
getRadioButtonMenuItemIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns an icon to be used by
JRadioButtonMenuItem
.
getRadius()
- Method in class java.awt.
RadialGradientPaint
Returns the radius of the circle defining the radial gradient.
getRaisedBevelBorderUIResource()
- Static method in class javax.swing.plaf.
BorderUIResource
Returns a raised bevel border UI resource.
getRange()
- Method in class java.util.
Locale.LanguageRange
Returns the language range of this
LanguageRange
.
getRanges()
- Method in class java.awt.font.
NumericShaper
Returns an
int
that ORs together the values for
 all the ranges that will be shaped.
getRangeSet()
- Method in class java.awt.font.
NumericShaper
Returns a
Set
representing all the Unicode ranges in
 this
NumericShaper
that will be shaped.
getRangeUnit()
- Method in enum class java.time.temporal.
ChronoField
getRangeUnit()
- Method in interface java.time.temporal.
TemporalField
Gets the range that the field is bound by.
getRaster()
- Method in class java.awt.image.
BufferedImage
Returns the
WritableRaster
.
getRaster()
- Method in class javax.imageio.
IIOImage
Returns the currently set
Raster
, or
null
if only a
RenderedImage
is
 available.
getRaster(int, int, int, int)
- Method in interface java.awt.
PaintContext
Returns a
Raster
containing the colors generated for
 the graphics operation.
getRawAuthority()
- Method in class java.net.
URI
Returns the raw authority component of this URI.
getRawFragment()
- Method in class java.net.
URI
Returns the raw fragment component of this URI.
getRawImageType(int)
- Method in class javax.imageio.
ImageReader
Returns an
ImageTypeSpecifier
indicating the
SampleModel
and
ColorModel
which most
 closely represents the "raw" internal format of the image.
getRawOffset()
- Method in class java.util.
SimpleTimeZone
Gets the GMT offset for this time zone.
getRawOffset()
- Method in class java.util.
TimeZone
Returns the amount of time in milliseconds to add to UTC to get
 standard time in this time zone.
getRawPath()
- Method in class java.net.
URI
Returns the raw path component of this URI.
getRawQuery()
- Method in class java.net.
URI
Returns the raw query component of this URI.
getRawResult()
- Method in class java.util.concurrent.
CountedCompleter
Returns the result of the computation.
getRawResult()
- Method in class java.util.concurrent.
ForkJoinTask
Returns the result that would be returned by
ForkJoinTask.join()
, even
 if this task completed abnormally, or
null
if this task
 is not known to have been completed.
getRawResult()
- Method in class java.util.concurrent.
RecursiveAction
Always returns
null
.
getRawResult()
- Method in class java.util.concurrent.
RecursiveTask
getRawSchemeSpecificPart()
- Method in class java.net.
URI
Returns the raw scheme-specific part of this URI.
getRawType()
- Method in interface java.lang.reflect.
ParameterizedType
Returns the
Type
object representing the class or interface
 that declared this type.
getRawUserInfo()
- Method in class java.net.
URI
Returns the raw user-information component of this URI.
getRdn(int)
- Method in class javax.naming.ldap.
LdapName
Retrieves an RDN of this LDAP name as an Rdn.
getRdns()
- Method in class javax.naming.ldap.
LdapName
Retrieves the list of relative distinguished names.
getRead()
- Method in exception class java.sql.
DataTruncation
Indicates whether or not the value was truncated on a read.
getReadableInstancePropertyNames(Class<?>)
- Static method in class jdk.dynalink.beans.
BeansLinker
Returns a set of names of all readable instance properties of a class.
getReadableStaticPropertyNames(Class<?>)
- Static method in class jdk.dynalink.beans.
BeansLinker
Returns a set of names of all readable static properties of a class.
getReader()
- Method in interface javax.script.
ScriptContext
Returns a
Reader
to be used by the script to read
 input.
getReader()
- Method in class javax.script.
SimpleScriptContext
Returns a
Reader
to be used by the script to read
 input.
getReader()
- Method in class javax.xml.transform.stream.
StreamSource
Get the character stream that was set with setReader.
getReader(int)
- Method in class javax.swing.text.html.
HTMLDocument
Fetches the reader for the parser to use when loading the document
 with HTML.
getReader(int, int, int, HTML.Tag)
- Method in class javax.swing.text.html.
HTMLDocument
Returns the reader for the parser to use to load the document
 with HTML.
getReaderFileSuffixes()
- Static method in class javax.imageio.
ImageIO
Returns an array of
String
s listing all of the
 file suffixes associated with the formats understood
 by the current set of registered readers.
getReaderFormatNames()
- Static method in class javax.imageio.
ImageIO
Returns an array of
String
s listing all of the
 informal format names understood by the current set of registered
 readers.
getReaderForText()
- Method in interface javax.print.
Doc
Obtains a reader for extracting character print data from this doc.
getReaderForText()
- Method in class javax.print.
SimpleDoc
Obtains a reader for extracting character print data from this doc.
getReaderForText(Transferable)
- Method in class java.awt.datatransfer.
DataFlavor
Gets a Reader for a text flavor, decoded, if necessary, for the expected
 charset (encoding).
getReaderMIMETypes()
- Static method in class javax.imageio.
ImageIO
Returns an array of
String
s listing all of the
 MIME types understood by the current set of registered
 readers.
getReaderServiceProviderName()
- Method in class javax.imageio.spi.
ImageTranscoderSpi
Returns the fully qualified class name of an
ImageReaderSpi
class that generates
IIOMetadata
objects that may be used as input to
 this transcoder.
getReadHoldCount()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Queries the number of reentrant read holds on this lock by the
 current thread.
getReadLockCount()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Queries the number of read locks held for this lock.
getReadLockCount()
- Method in class java.util.concurrent.locks.
StampedLock
Queries the number of read locks held for this lock.
getReadMethod()
- Method in class java.beans.
PropertyDescriptor
Gets the method that should be used to read the property value.
getReadOnly()
- Method in interface org.w3c.dom.html.
HTMLInputElement
This control is read-only.
getReadOnly()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
This control is read-only.
getReadTimeout()
- Method in class java.net.
URLConnection
Returns setting for read timeout. 0 return implies that the
 option is disabled (i.e., timeout of infinity).
getReadUnknownTags()
- Method in class javax.imageio.plugins.tiff.
TIFFImageReadParam
Retrieve the setting of whether to read fields corresponding to unknown
TIFFTag
s.
getRealm()
- Method in class com.sun.net.httpserver.
BasicAuthenticator
Returns the realm this
BasicAuthenticator
was created with.
getRealm()
- Method in class com.sun.net.httpserver.
HttpPrincipal
Returns the
realm
this object was created with.
getRealm()
- Method in class javax.security.auth.kerberos.
KerberosPrincipal
Returns the realm component of this Kerberos principal.
getRealName()
- Method in class java.util.jar.
JarEntry
Returns the real name of this
JarEntry
.
getReason()
- Method in class java.awt.desktop.
UserSessionEvent
Gets a reason of the user session change.
getReason()
- Method in exception class java.net.
HttpRetryException
Returns a string explaining why the http request could
 not be retried.
getReason()
- Method in exception class java.net.
URISyntaxException
Returns a string explaining why the input string could not be parsed.
getReason()
- Method in exception class java.nio.file.
FileSystemException
Returns the string explaining why the file system operation failed.
getReason()
- Method in exception class java.nio.file.
InvalidPathException
Returns a string explaining why the input string was rejected.
getReason()
- Method in exception class java.security.cert.
CertPathValidatorException
Returns the reason that the validation failed.
getReason()
- Method in interface javax.print.
URIException
Returns the reason of this exception.
getReceiveBufferSize()
- Method in class java.net.
DatagramSocket
Get value of the SO_RCVBUF option for this
DatagramSocket
, that is the
 buffer size, in bytes, used by the platform for input on this
DatagramSocket
.
getReceiveBufferSize()
- Method in class java.net.
ServerSocket
Gets the value of the
SO_RCVBUF
option
 for this
ServerSocket
, that is the proposed buffer size that
 will be used for Sockets accepted from this
ServerSocket
.
getReceiveBufferSize()
- Method in class java.net.
Socket
Gets the value of the
SO_RCVBUF
option
 for this
Socket
, that is the buffer size used by the platform
 for input on this
Socket
.
getReceiver()
- Method in interface javax.sound.midi.
MidiDevice
Obtains a MIDI IN receiver through which the MIDI device may receive MIDI
 data.
getReceiver()
- Static method in class javax.sound.midi.
MidiSystem
Obtains a MIDI receiver from an external MIDI port or other default
 device.
getReceiver()
- Method in interface javax.sound.midi.
Transmitter
Obtains the current receiver to which this transmitter will deliver MIDI
 messages.
getReceiver()
- Method in interface jdk.dynalink.linker.
LinkRequest
Returns the first argument for the invocation being linked; this is
 typically the receiver object.
getReceiver()
- Method in class jdk.dynalink.linker.support.
SimpleLinkRequest
getReceiverParameter()
- Method in interface com.sun.source.tree.
MethodTree
Return an explicit receiver parameter ("this" parameter),
 or
null
if none.
getReceivers()
- Method in interface javax.sound.midi.
MidiDevice
Returns all currently active, non-closed receivers connected with this
MidiDevice
.
getReceiverType()
- Method in interface javax.lang.model.element.
ExecutableElement
Returns the receiver type of this executable,
 or
NoType
with
 kind
NONE
if the executable has no receiver type.
getReceiverType()
- Method in interface javax.lang.model.type.
ExecutableType
Returns the receiver type of this executable,
 or
NoType
with
 kind
NONE
if the executable has no receiver type.
getRecipient()
- Method in class javax.security.auth.kerberos.
KerberosCredMessage
Returns the recipient of this message.
getRecordComponents()
- Method in class java.lang.
Class
Returns an array of
RecordComponent
objects representing all the
 record components of this record class, or
null
if this class is
 not a record class.
getRecordComponents()
- Method in interface javax.lang.model.element.
TypeElement
Returns the record components of this class or interface
 element in declaration order.
getRecordingOptions(long)
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Returns a map that contains the options for the recording with the
 specified ID (for example, the destination file or time span to keep
 recorded data).
getRecordings()
- Method in class jdk.jfr.
FlightRecorder
Returns an immutable list of the available recordings.
getRecordings()
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Returns the list of the available recordings, not necessarily running.
getRecordingSettings(long)
- Method in interface jdk.management.jfr.
FlightRecorderMXBean
Returns a
Map
that contains the settings for the recording with the specified ID,
 (for example, the event thresholds)
getRectValue()
- Method in interface org.w3c.dom.css.
CSSPrimitiveValue
This method is used to get the Rect value.
getRecursionLimit()
- Method in class java.awt.geom.
FlatteningPathIterator
Returns the recursion limit of this iterator.
getRed()
- Method in class java.awt.
Color
Returns the red component in the range 0-255 in the default sRGB
 space.
getRed()
- Method in interface org.w3c.dom.css.
RGBColor
This attribute is used for the red value of the RGB color.
getRed(int)
- Method in class java.awt.image.
ColorModel
Returns the red color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getRed(int)
- Method in class java.awt.image.
ComponentColorModel
Returns the red color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getRed(int)
- Method in class java.awt.image.
DirectColorModel
Returns the red color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getRed(int)
- Method in class java.awt.image.
IndexColorModel
Returns the red color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getRed(Object)
- Method in class java.awt.image.
ColorModel
Returns the red color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getRed(Object)
- Method in class java.awt.image.
ComponentColorModel
Returns the red color component for the specified pixel, scaled
 from 0 to 255 in the default RGB ColorSpace, sRGB.
getRed(Object)
- Method in class java.awt.image.
DirectColorModel
Returns the red color component for the specified pixel, scaled
 from 0 to 255 in the default RGB
ColorSpace
, sRGB.
getRedMask()
- Method in class java.awt.image.
DirectColorModel
Returns the mask indicating which bits in an
int
pixel
 representation contain the red color component.
getRedoPresentationName()
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Provides a localized, human readable description of the redoable
 form of this edit, e.g. for use as a Redo menu item.
getRedoPresentationName()
- Method in class javax.swing.undo.
AbstractUndoableEdit
Retrieves the value from the defaults table with key
AbstractUndoableEdit.redoText
and returns
 that value followed by a space, followed by
getPresentationName
.
getRedoPresentationName()
- Method in class javax.swing.undo.
CompoundEdit
Returns
getRedoPresentationName
from the last
UndoableEdit
added to
edits
.
getRedoPresentationName()
- Method in interface javax.swing.undo.
UndoableEdit
Returns a localized, human-readable description of the redoable form of
 this edit, suitable for use as a Redo menu item, for example.
getRedoPresentationName()
- Method in class javax.swing.undo.
UndoManager
Returns a description of the redoable form of this edit.
getReds(byte[])
- Method in class java.awt.image.
IndexColorModel
Copies the array of red color components into the specified array.
getReductionPolynomial()
- Method in class java.security.spec.
ECFieldF2m
Returns a BigInteger whose i-th bit corresponds to the
 i-th coefficient of the reduction polynomial for polynomial
 basis or null for normal basis.
getRef()
- Method in class java.net.
URL
Gets the anchor (also known as the "reference") of this
URL
.
getRef()
- Method in class java.rmi.server.
RemoteObject
Returns the remote reference for the remote object.
getRef(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
REF(<structured-type>)
parameter as a
Ref
object in the Java programming language.
getRef(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
Ref
object
 in the Java programming language.
getRef(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
REF(<structured-type>)
parameter as a
Ref
object in the Java programming language.
getRef(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
Ref
object
 in the Java programming language.
getRefClass(ObjectOutput)
- Method in interface java.rmi.server.
RemoteRef
Returns the class name of the ref type to be serialized onto
 the stream 'out'.
getReference()
- Method in interface com.sun.source.doctree.
LinkTree
Returns the reference of the link.
getReference()
- Method in interface com.sun.source.doctree.
SeeTree
Returns the reference.
getReference()
- Method in interface com.sun.source.doctree.
ValueTree
Returns the reference to the value.
getReference()
- Method in class java.util.concurrent.atomic.
AtomicMarkableReference
Returns the current value of the reference.
getReference()
- Method in class java.util.concurrent.atomic.
AtomicStampedReference
Returns the current value of the reference.
getReference()
- Method in interface javax.naming.
Referenceable
Retrieves the Reference of this object.
getReferencedMBeans()
- Method in interface javax.management.relation.
Relation
Retrieves MBeans referenced in the various roles of the relation.
getReferencedMBeans()
- Method in class javax.management.relation.
RelationSupport
Retrieves MBeans referenced in the various roles of the relation.
getReferencedMBeans(String)
- Method in class javax.management.relation.
RelationService
Retrieves MBeans referenced in the various roles of the relation.
getReferencedMBeans(String)
- Method in interface javax.management.relation.
RelationServiceMBean
Retrieves MBeans referenced in the various roles of the relation.
getReferenceKind()
- Method in interface java.lang.invoke.
MethodHandleInfo
Returns the reference kind of the cracked method handle, which in turn
 determines whether the method handle's underlying member was a constructor, method, or field.
getReferences()
- Method in interface javax.xml.crypto.dsig.
Manifest
Returns an
unmodifiable
 list
of one or more
Reference
s that are contained in this
Manifest
.
getReferences()
- Method in interface javax.xml.crypto.dsig.
SignedInfo
Returns an
unmodifiable list
of one or more
Reference
s.
getReferralContext()
- Method in exception class javax.naming.ldap.
LdapReferralException
Retrieves the context at which to continue the method using the
 context's environment and no controls.
getReferralContext()
- Method in exception class javax.naming.
ReferralException
Retrieves the context at which to continue the method.
getReferralContext(Hashtable<?, ?>)
- Method in exception class javax.naming.ldap.
LdapReferralException
Retrieves the context at which to continue the method using
 environment properties and no controls.
getReferralContext(Hashtable<?, ?>)
- Method in exception class javax.naming.
ReferralException
Retrieves the context at which to continue the method using
 environment properties.
getReferralContext(Hashtable<?, ?>, Control[])
- Method in exception class javax.naming.ldap.
LdapReferralException
Retrieves the context at which to continue the method using
 request controls and environment properties.
getReferralInfo()
- Method in exception class javax.naming.
ReferralException
Retrieves information (such as URLs) related to this referral.
getReferrals()
- Method in interface javax.naming.ldap.
UnsolicitedNotification
Retrieves the referral(s) sent by the server.
getReferrer()
- Method in interface org.w3c.dom.html.
HTMLDocument
Returns the URI  of the page that linked to this page.
getRefMBeanClassName()
- Method in class javax.management.relation.
RoleInfo
Returns name of type of MBean expected to be referenced in
 corresponding role.
getRefreshRate()
- Method in class java.awt.
DisplayMode
Returns the refresh rate of the display, in hertz.
getRegion()
- Method in class javax.swing.plaf.synth.
SynthContext
Returns the Region identifying this state.
getRegion(JComponent)
- Static method in class javax.swing.plaf.synth.
SynthLookAndFeel
Returns the Region for the JComponent
c
.
getRegisteredKeyStrokes()
- Method in class javax.swing.
JComponent
Returns the
KeyStrokes
that will initiate
 registered actions.
getRegisteredParties()
- Method in class java.util.concurrent.
Phaser
Returns the number of parties registered at this phaser.
getRegisteredProviders()
- Static method in class javax.sql.rowset.spi.
SyncFactory
Returns an Enumeration of currently registered synchronization
 providers.
getRegistry()
- Static method in class java.rmi.registry.
LocateRegistry
Returns a reference to the remote object
Registry
for
 the local host on the default registry port of 1099.
getRegistry(int)
- Static method in class java.rmi.registry.
LocateRegistry
Returns a reference to the remote object
Registry
for
 the local host on the specified
port
.
getRegistry(String)
- Static method in class java.rmi.registry.
LocateRegistry
Returns a reference to the remote object
Registry
on the
 specified
host
on the default registry port of 1099.
getRegistry(String, int)
- Static method in class java.rmi.registry.
LocateRegistry
Returns a reference to the remote object
Registry
on the
 specified
host
and
port
.
getRegistry(String, int, RMIClientSocketFactory)
- Static method in class java.rmi.registry.
LocateRegistry
Returns a locally created remote reference to the remote object
Registry
on the specified
host
and
port
.
getRejectedExecutionHandler()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the current handler for unexecutable tasks.
getRel()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Forward link type.
getRel()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
Forward link type.
getRelatedData()
- Method in interface org.w3c.dom.
DOMError
The related
DOMError.type
dependent data if any.
getRelatedException()
- Method in interface org.w3c.dom.
DOMError
The related platform dependent exception if any.
getRelatedNode()
- Method in interface org.w3c.dom.
DOMLocator
The node this locator is pointing to, or
null
if no node
 is available.
getRelatedNode()
- Method in interface org.w3c.dom.events.
MutationEvent
relatedNode
is used to identify a secondary node related
 to a mutation event.
getRelatedTarget()
- Method in interface org.w3c.dom.events.
MouseEvent
Used to identify a secondary
EventTarget
related to a UI
 event.
getRelationId()
- Method in interface javax.management.relation.
Relation
Returns relation identifier (used to uniquely identify the relation
 inside the Relation Service).
getRelationId()
- Method in class javax.management.relation.
RelationNotification
Returns the relation identifier of created/removed/updated relation.
getRelationId()
- Method in class javax.management.relation.
RelationSupport
Returns relation identifier (used to uniquely identify the relation
 inside the Relation Service).
getRelationServiceName()
- Method in interface javax.management.relation.
Relation
Returns ObjectName of the Relation Service handling the relation.
getRelationServiceName()
- Method in class javax.management.relation.
RelationSupport
Returns ObjectName of the Relation Service handling the relation.
getRelationTypeName()
- Method in interface javax.management.relation.
Relation
Returns name of associated relation type.
getRelationTypeName()
- Method in class javax.management.relation.
RelationNotification
Returns the relation type name of created/removed/updated relation.
getRelationTypeName()
- Method in class javax.management.relation.
RelationSupport
Returns name of associated relation type.
getRelationTypeName()
- Method in interface javax.management.relation.
RelationType
Returns the relation type name.
getRelationTypeName()
- Method in class javax.management.relation.
RelationTypeSupport
Returns the relation type name.
getRelationTypeName(String)
- Method in class javax.management.relation.
RelationService
Returns name of associated relation type for given relation.
getRelationTypeName(String)
- Method in interface javax.management.relation.
RelationServiceMBean
Returns name of associated relation type for given relation.
getRemaining()
- Method in class java.util.zip.
Inflater
Returns the total number of bytes remaining in the input buffer.
getRemainingAcceptLifetime(Oid)
- Method in interface org.ietf.jgss.
GSSCredential
Returns the lifetime in seconds for the credential to remain capable
 of accepting security contexts using the specified mechanism.
getRemainingInitLifetime(Oid)
- Method in interface org.ietf.jgss.
GSSCredential
Returns the lifetime in seconds for the credential to remain capable
 of initiating security contexts using the specified mechanism.
getRemainingLifetime()
- Method in interface org.ietf.jgss.
GSSCredential
Returns the remaining lifetime in seconds for a credential.
getRemainingName()
- Method in exception class javax.naming.
NamingException
Retrieves the remaining unresolved portion of the name.
getRemainingName()
- Method in class javax.naming.spi.
ResolveResult
Retrieves the remaining unresolved portion of the name.
getRemainingNewName()
- Method in exception class javax.naming.
CannotProceedException
Retrieves the "remaining new name" field of this exception, which is
 used when this exception is thrown during a rename() operation.
getRemoteAddress()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns the address of the remote entity invoking this request.
getRemoteAddress()
- Method in class java.nio.channels.
AsynchronousSocketChannel
Returns the remote address to which this channel's socket is connected.
getRemoteAddress()
- Method in class java.nio.channels.
DatagramChannel
Returns the remote address to which this channel's socket is connected.
getRemoteAddress()
- Method in class java.nio.channels.
SocketChannel
Returns the remote address to which this channel's socket is connected.
getRemoteAddresses()
- Method in class com.sun.nio.sctp.
SctpChannel
Returns all of the remote addresses to which this channel's socket
 is connected.
getRemoteAddresses(Association)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Returns all of the remote addresses to which the given association on
 this channel's socket is connected.
getRemoteSocketAddress()
- Method in class java.net.
DatagramSocket
Returns the address of the endpoint this socket is connected to, or
null
if it is unconnected.
getRemoteSocketAddress()
- Method in class java.net.
Socket
Returns the address of the endpoint this socket is connected to, or
null
if it is unconnected.
getRemovedEventTypes()
- Method in class jdk.jfr.consumer.
MetadataEvent
Returns a list of removed event types since the last metadata event.
getRemoveListenerMethod()
- Method in class java.beans.
EventSetDescriptor
Gets the method used to remove event listeners.
getRemoveOnCancelPolicy()
- Method in class java.util.concurrent.
ScheduledThreadPoolExecutor
Gets the policy on whether cancelled tasks should be immediately
 removed from the work queue at time of cancellation.
getRenderableSource(int)
- Method in class java.awt.image.renderable.
ParameterBlock
Returns a source as a RenderableImage.
getRenderedImage()
- Method in class javax.imageio.
IIOImage
Returns the currently set
RenderedImage
, or
null
if only a
Raster
is available.
getRenderedSource(int)
- Method in class java.awt.image.renderable.
ParameterBlock
Returns a source as a
RenderedImage
.
getRenderer()
- Method in class javax.swing.
JComboBox
Returns the renderer used to display the selected item in the
JComboBox
field.
getRenderingHint(RenderingHints.Key)
- Method in class java.awt.
Graphics2D
Returns the value of a single preference for the rendering algorithms.
getRenderingHints()
- Method in class java.awt.
Graphics2D
Gets the preferences for the rendering algorithms.
getRenderingHints()
- Method in class java.awt.image.
AffineTransformOp
Returns the rendering hints used by this transform operation.
getRenderingHints()
- Method in class java.awt.image.
BandCombineOp
Returns the rendering hints for this operation.
getRenderingHints()
- Method in interface java.awt.image.
BufferedImageOp
Returns the rendering hints for this operation.
getRenderingHints()
- Method in class java.awt.image.
ColorConvertOp
Returns the rendering hints used by this op.
getRenderingHints()
- Method in class java.awt.image.
ConvolveOp
Returns the rendering hints for this op.
getRenderingHints()
- Method in class java.awt.image.
LookupOp
Returns the rendering hints for this op.
getRenderingHints()
- Method in interface java.awt.image.
RasterOp
Returns the rendering hints for this RasterOp.
getRenderingHints()
- Method in class java.awt.image.renderable.
RenderContext
Gets the rendering hints of this
RenderContext
.
getRenderingHints()
- Method in class java.awt.image.
RescaleOp
Returns the rendering hints for this op.
getRenewTill()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the latest expiration time for this ticket, including all
 renewals.
getReorderingAllowed()
- Method in class javax.swing.table.
JTableHeader
Returns true if the user is allowed to rearrange columns by
 dragging their headers, false otherwise.
getReplacementText()
- Method in interface javax.xml.stream.events.
EntityDeclaration
The replacement text of the entity.
getReplayDetState()
- Method in interface org.ietf.jgss.
GSSContext
Determines if replay detection is enabled for the
 per-message security services from this context.
getReporter()
- Method in class jdk.javadoc.doclet.
StandardDoclet
Returns the reporter for this doclet.
getRepresentationClass()
- Method in class java.awt.datatransfer.
DataFlavor
Returns the
Class
which objects supporting this
DataFlavor
will return when this
DataFlavor
is requested.
getRepresentationClassName()
- Method in class javax.print.
DocFlavor
Returns the name of this doc flavor object's representation class.
getRepresentedClass()
- Method in class jdk.dynalink.beans.
StaticClass
Returns the represented Java class.
getRequestBody()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns a stream from which the request body can be read.
getRequestControls()
- Method in class javax.naming.ldap.
InitialLdapContext
getRequestControls()
- Method in interface javax.naming.ldap.
LdapContext
Retrieves the request controls in effect for this context.
getRequestedServerNames()
- Method in class javax.net.ssl.
ExtendedSSLSession
Obtains a
List
containing all
SNIServerName
s
 of the requested Server Name Indication (SNI) extension.
getRequestHeaders()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns an immutable
Headers
containing the HTTP headers that
 were included with this request.
getRequestHeaders()
- Method in interface com.sun.net.httpserver.
Request
Returns an immutable
Headers
containing the HTTP headers that
 were included with this request.
getRequestingHost()
- Method in class java.net.
Authenticator
Gets the
hostname
of the
 site or proxy requesting authentication, or
null
if not available.
getRequestingPort()
- Method in class java.net.
Authenticator
Gets the port number for the requested connection.
getRequestingPrompt()
- Method in class java.net.
Authenticator
Gets the prompt string given by the requestor.
getRequestingProtocol()
- Method in class java.net.
Authenticator
Give the protocol that's requesting the connection.
getRequestingScheme()
- Method in class java.net.
Authenticator
Gets the scheme of the requestor (the HTTP scheme
 for an HTTP firewall, for example).
getRequestingSite()
- Method in class java.net.
Authenticator
Gets the
InetAddress
of the
 site requesting authorization, or
null
if not available.
getRequestingURL()
- Method in class java.net.
Authenticator
Returns the URL that resulted in this
 request for authentication.
getRequestMethod()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns the request method.
getRequestMethod()
- Method in interface com.sun.net.httpserver.
Request
Returns the request method.
getRequestMethod()
- Method in class java.net.
HttpURLConnection
Get the request method.
getRequestorType()
- Method in class java.net.
Authenticator
Returns whether the requestor is a Proxy or a Server.
getRequestProperties()
- Method in class java.net.
URLConnection
Returns an unmodifiable Map of general request
 properties for this connection.
getRequestProperty(String)
- Method in class java.net.
URLConnection
Returns the value of the named general request property for this
 connection.
getRequestURI()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns the request
URI
.
getRequestURI()
- Method in interface com.sun.net.httpserver.
Request
Returns the request
URI
.
getReshowDelay()
- Method in class javax.swing.
ToolTipManager
Returns the reshow delay property.
getResizable()
- Method in class javax.swing.table.
TableColumn
Returns true if the user is allowed to resize the
TableColumn
's
 width, false otherwise.
getResizeWeight()
- Method in class javax.swing.
JSplitPane
Returns the number that determines how extra space is distributed.
getResizeWeight(int)
- Method in class javax.swing.text.
BoxView
Gets the resize weight.
getResizeWeight(int)
- Method in class javax.swing.text.
FieldView
Determines the resizability of the view along the
 given axis.
getResizeWeight(int)
- Method in class javax.swing.text.html.
BlockView
Gets the resize weight.
getResizeWeight(int)
- Method in class javax.swing.text.
TableView.TableRow
Determines the resizability of the view along the
 given axis.
getResizeWeight(int)
- Method in class javax.swing.text.
View
Determines the resizability of the view along the
 given axis.
getResizingAllowed()
- Method in class javax.swing.table.
JTableHeader
Returns true if the user is allowed to resize columns by dragging
 between their headers, false otherwise.
getResizingColumn()
- Method in class javax.swing.table.
JTableHeader
Returns the resizing column.
getResolution()
- Method in class javax.sound.midi.
MidiFileFormat
Obtains the timing resolution for the MIDI file.
getResolution()
- Method in class javax.sound.midi.
Sequence
Obtains the timing resolution for this sequence.
getResolution(int)
- Method in class javax.print.attribute.
ResolutionSyntax
Get this resolution attribute's resolution values in the given units.
getResolutionVariant(double, double)
- Method in class java.awt.image.
BaseMultiResolutionImage
getResolutionVariant(double, double)
- Method in interface java.awt.image.
MultiResolutionImage
Gets a specific image that is the best variant to represent
 this logical image at the indicated size.
getResolutionVariants()
- Method in class java.awt.image.
BaseMultiResolutionImage
getResolutionVariants()
- Method in interface java.awt.image.
MultiResolutionImage
Gets a readable list of all resolution variants.
getResolvedName()
- Method in exception class javax.naming.
NamingException
Retrieves the leading portion of the name that was resolved
 successfully.
getResolvedObj()
- Method in exception class javax.naming.
NamingException
Retrieves the object to which resolution was successful.
getResolvedObj()
- Method in class javax.naming.spi.
ResolveResult
Retrieves the Object to which resolution was successful.
getResolveParent()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the resolving parent.
getResolveParent()
- Method in interface javax.swing.text.
AttributeSet
Gets the resolving parent.
getResolveParent()
- Method in class javax.swing.text.html.
HTMLDocument.BlockElement
Gets the resolving parent.
getResolveParent()
- Method in class javax.swing.text.html.
HTMLDocument.RunElement
Gets the resolving parent.
getResolveParent()
- Method in interface javax.swing.text.
Keymap
Fetches the parent keymap used to resolve key-bindings.
getResolveParent()
- Method in class javax.swing.text.
SimpleAttributeSet
Gets the resolving parent.
getResolveParent()
- Method in class javax.swing.text.
StyleContext.NamedStyle
Gets attributes from the parent.
getResolveParent()
- Method in class javax.swing.text.
StyleContext.SmallAttributeSet
If not overridden, the resolving parent defaults to
 the parent element.
getResolverFields()
- Method in class java.time.format.
DateTimeFormatter
Gets the resolver fields to use during parsing.
getResolverStyle()
- Method in class java.time.format.
DateTimeFormatter
Gets the resolver style to use during parsing.
getResource(String)
- Method in class java.lang.
Class
Finds a resource with a given name.
getResource(String)
- Method in class java.lang.
ClassLoader
Finds the resource with the given name.
getResource(String)
- Method in interface javax.management.loading.
MLetMBean
Deprecated.
Finds the resource with the given name.
getResource(String, BeanContextChild)
- Method in interface java.beans.beancontext.
BeanContext
Analogous to
java.lang.ClassLoader.getResource()
, this
 method allows a
BeanContext
implementation to interpose
 behavior between the child
Component
and underlying
ClassLoader
.
getResource(String, BeanContextChild)
- Method in class java.beans.beancontext.
BeanContextSupport
getResource(JavaFileManager.Location, CharSequence, CharSequence)
- Method in interface javax.annotation.processing.
Filer
Returns an object for reading an existing resource.
getResourceAsStream(String)
- Method in class java.lang.
Class
Finds a resource with a given name.
getResourceAsStream(String)
- Method in class java.lang.
ClassLoader
Returns an input stream for reading the specified resource.
getResourceAsStream(String)
- Method in class java.lang.
Module
Returns an input stream for reading a resource in this module.
getResourceAsStream(String)
- Method in class java.net.
URLClassLoader
Returns an input stream for reading the specified resource.
getResourceAsStream(String)
- Method in interface javax.management.loading.
MLetMBean
Deprecated.
Returns an input stream for reading the specified resource.
getResourceAsStream(String, BeanContextChild)
- Method in interface java.beans.beancontext.
BeanContext
Analogous to
java.lang.ClassLoader.getResourceAsStream()
,
 this method allows a
BeanContext
implementation
 to interpose behavior between the child
Component
and underlying
ClassLoader
.
getResourceAsStream(String, BeanContextChild)
- Method in class java.beans.beancontext.
BeanContextSupport
getResourceBaseName()
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
Returns the currently set base name for locating
ResourceBundle
s.
getResourceBundle()
- Method in class java.util.logging.
Logger
Retrieve the localization resource bundle for this
 logger.
getResourceBundle()
- Method in class java.util.logging.
LogRecord
Get the localization resource bundle
getResourceBundleName()
- Method in class java.util.logging.
Level
Return the level's localization resource bundle name, or
 null if no localization bundle is defined.
getResourceBundleName()
- Method in class java.util.logging.
Logger
Retrieve the localization resource bundle name for this
 logger.
getResourceBundleName()
- Method in class java.util.logging.
LogRecord
Get the localization resource bundle name
getResourceResolver()
- Method in class javax.xml.validation.
SchemaFactory
Gets the current
LSResourceResolver
set to this
SchemaFactory
.
getResourceResolver()
- Method in class javax.xml.validation.
Validator
Gets the current
LSResourceResolver
set to this
Validator
.
getResourceResolver()
- Method in class javax.xml.validation.
ValidatorHandler
Gets the current
LSResourceResolver
set to this
ValidatorHandler
.
getResources()
- Method in interface com.sun.source.tree.
TryTree
Returns any resource declarations provided in the
try
statement.
getResources()
- Method in interface javax.sound.midi.
Soundbank
Extracts a list of non-Instrument resources contained in the sound bank.
getResources(String)
- Method in class java.lang.
ClassLoader
Finds all the resources with the given name.
getResources(String)
- Method in interface javax.management.loading.
MLetMBean
Deprecated.
Finds all the resources with the given name.
getResponse()
- Method in exception class java.net.http.
WebSocketHandshakeException
Returns the server's counterpart of the opening handshake.
getResponseBody()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns a stream to which the response body must be
 written.
getResponseCode()
- Method in class com.sun.net.httpserver.
Authenticator.Failure
Returns the response code to send to the client.
getResponseCode()
- Method in class com.sun.net.httpserver.
Authenticator.Retry
Returns the response code to send to the client.
getResponseCode()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns the response code, if it has already been set.
getResponseCode()
- Method in class java.net.
HttpURLConnection
Gets the status code from an HTTP response message.
getResponseControls()
- Method in class javax.naming.ldap.
InitialLdapContext
getResponseControls()
- Method in interface javax.naming.ldap.
LdapContext
Retrieves the response controls produced as a result of the last
 method invoked on this context.
getResponseHeaders()
- Method in class com.sun.net.httpserver.
HttpExchange
Returns a mutable
Headers
into which the HTTP response headers
 can be stored and which will be transmitted as part of this response.
getResponseMessage()
- Method in class java.net.
HttpURLConnection
Gets the HTTP response message, if any, returned along with the
 response code from a server.
getResultCode()
- Method in class javax.naming.ldap.
SortResponseControl
Retrieves the LDAP result code of the sort operation.
getResultSet()
- Method in interface java.sql.
Array
Retrieves a result set that contains the elements of the SQL
ARRAY
value
 designated by this
Array
object.
getResultSet()
- Method in interface java.sql.
Statement
Retrieves the current result as a
ResultSet
object.
getResultSet()
- Method in class javax.sql.rowset.serial.
SerialArray
Retrieves a
ResultSet
object that contains all of
 the elements in the
ARRAY
value that this
SerialArray
object represents.
getResultSet(long, int)
- Method in interface java.sql.
Array
Retrieves a result set holding the elements of the subarray that
 starts at index
index
and contains up to
count
successive elements.
getResultSet(long, int)
- Method in class javax.sql.rowset.serial.
SerialArray
Retrieves a
ResultSet
object holding the elements of
 the subarray that starts at
 index
index
and contains up to
count
successive elements.
getResultSet(long, int, Map<String, Class<?>>)
- Method in interface java.sql.
Array
Retrieves a result set holding the elements of the subarray that
 starts at index
index
and contains up to
count
successive elements.
getResultSet(long, int, Map<String, Class<?>>)
- Method in class javax.sql.rowset.serial.
SerialArray
Retrieves a result set holding the elements of the subarray that starts at
 Retrieves a
ResultSet
object that contains a subarray of the
 elements in this
SerialArray
object, starting at
 index
index
and containing up to
count
successive
 elements.
getResultSet(Map<String, Class<?>>)
- Method in interface java.sql.
Array
Retrieves a result set that contains the elements of the SQL
ARRAY
value designated by this
Array
object.
getResultSet(Map<String, Class<?>>)
- Method in class javax.sql.rowset.serial.
SerialArray
Retrieves a
ResultSet
object that contains all of
 the elements of the SQL
ARRAY
value represented by this
SerialArray
object.
getResultSetConcurrency()
- Method in interface java.sql.
Statement
Retrieves the result set concurrency for
ResultSet
objects
 generated by this
Statement
object.
getResultSetHoldability()
- Method in interface java.sql.
DatabaseMetaData
Retrieves this database's default holdability for
ResultSet
objects.
getResultSetHoldability()
- Method in interface java.sql.
Statement
Retrieves the result set holdability for
ResultSet
objects
 generated by this
Statement
object.
getResultSetType()
- Method in interface java.sql.
Statement
Retrieves the result set type for
ResultSet
objects
 generated by this
Statement
object.
getResultSize()
- Method in class javax.naming.ldap.
PagedResultsResponseControl
Retrieves (an estimate of) the number of entries in the search result.
getResultStream(boolean)
- Method in interface java.rmi.server.
RemoteCall
Deprecated.
no replacement
getResultType()
- Method in interface org.w3c.dom.xpath.
XPathResult
A code representing the type of this result, as defined by the type
 constants.
getReturningAttributes()
- Method in class javax.naming.directory.
SearchControls
Retrieves the attributes that will be returned as part of the search.
getReturningObjFlag()
- Method in class javax.naming.directory.
SearchControls
Determines whether objects will be returned as part of the result.
getReturnOpenType()
- Method in interface javax.management.openmbean.
OpenMBeanOperationInfo
Returns the
open type
of the values returned by the
 operation described by this
OpenMBeanOperationInfo
instance.
getReturnOpenType()
- Method in class javax.management.openmbean.
OpenMBeanOperationInfoSupport
Returns the
open type
of the values returned by the
 operation described by this
OpenMBeanOperationInfo
instance.
getReturnType()
- Method in interface com.sun.source.tree.
MethodTree
Returns the return type of the method being declared.
getReturnType()
- Method in class java.lang.reflect.
Method
Returns a
Class
object that represents the formal return type
 of the method represented by this
Method
object.
getReturnType()
- Method in interface javax.lang.model.element.
ExecutableElement
Returns the return type of this executable.
getReturnType()
- Method in interface javax.lang.model.type.
ExecutableType
Returns the return type of this executable.
getReturnType()
- Method in class javax.management.
MBeanOperationInfo
Returns the type of the method's return value.
getReturnType()
- Method in interface javax.management.openmbean.
OpenMBeanOperationInfo
Returns the fully qualified Java class name of the values
 returned by the operation described by this
OpenMBeanOperationInfo
instance.
getReuseAddress()
- Method in class java.net.
DatagramSocket
Tests if SO_REUSEADDR is enabled.
getReuseAddress()
- Method in class java.net.
ServerSocket
Tests if
SO_REUSEADDR
is enabled.
getReuseAddress()
- Method in class java.net.
Socket
Tests if
SO_REUSEADDR
is enabled.
getRev()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Reverse link type.
getRev()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
Reverse link type.
getRevocationChecker()
- Method in class java.security.cert.
CertPathBuilder
Returns a
CertPathChecker
that the encapsulated
CertPathBuilderSpi
implementation uses to check the revocation
 status of certificates.
getRevocationChecker()
- Method in class java.security.cert.
CertPathValidator
Returns a
CertPathChecker
that the encapsulated
CertPathValidatorSpi
implementation uses to check the revocation
 status of certificates.
getRevocationDate()
- Method in exception class java.security.cert.
CertificateRevokedException
Returns the date on which the certificate was revoked.
getRevocationDate()
- Method in class java.security.cert.
X509CRLEntry
Gets the revocation date from this X509CRLEntry,
 the
revocationDate
.
getRevocationReason()
- Method in exception class java.security.cert.
CertificateRevokedException
Returns the reason the certificate was revoked.
getRevocationReason()
- Method in class java.security.cert.
X509CRLEntry
Returns the reason the certificate has been revoked, as specified
 in the Reason Code extension of this CRL entry.
getRevokedCertificate(BigInteger)
- Method in class java.security.cert.
X509CRL
Gets the CRL entry, if any, with the given certificate serialNumber.
getRevokedCertificate(X509Certificate)
- Method in class java.security.cert.
X509CRL
Get the CRL entry, if any, for the given certificate.
getRevokedCertificates()
- Method in class java.security.cert.
X509CRL
Gets all the entries from this CRL.
getRGB()
- Method in class java.awt.
Color
Returns the RGB value representing the color in the default sRGB
ColorModel
.
getRGB(int)
- Method in class java.awt.image.
ColorModel
Returns the color/alpha components of the pixel in the default
 RGB color model format.
getRGB(int)
- Method in class java.awt.image.
ComponentColorModel
Returns the color/alpha components of the pixel in the default
 RGB color model format.
getRGB(int)
- Method in class java.awt.image.
DirectColorModel
Returns the color/alpha components of the pixel in the default
 RGB color model format.
getRGB(int)
- Method in class java.awt.image.
IndexColorModel
Returns the color/alpha components of the pixel in the default
 RGB color model format.
getRGB(int, int)
- Method in class java.awt.image.
BufferedImage
Returns an integer pixel in the default RGB color model
 (TYPE_INT_ARGB) and default sRGB colorspace.
getRGB(int, int, int, int, int[], int, int)
- Method in class java.awt.image.
BufferedImage
Returns an array of integer pixels in the default RGB color model
 (TYPE_INT_ARGB) and default sRGB color space,
 from a portion of the image data.
getRGB(Object)
- Method in class java.awt.image.
ColorModel
Returns the color/alpha components for the specified pixel in the
 default RGB color model format.
getRGB(Object)
- Method in class java.awt.image.
ComponentColorModel
Returns the color/alpha components for the specified pixel in the
 default RGB color model format.
getRGB(Object)
- Method in class java.awt.image.
DirectColorModel
Returns the color/alpha components for the specified pixel in the
 default RGB color model format.
getRGBColorComponents(float[])
- Method in class java.awt.
Color
Returns a
float
array containing only the color
 components of the
Color
, in the default sRGB color
 space.
getRGBColorValue()
- Method in interface org.w3c.dom.css.
CSSPrimitiveValue
This method is used to get the RGB color.
getRGBComponents(float[])
- Method in class java.awt.
Color
Returns a
float
array containing the color and alpha
 components of the
Color
, as represented in the default
 sRGB color space.
getRGBdefault()
- Static method in class java.awt.image.
ColorModel
Returns a
DirectColorModel
that describes the default
 format for integer RGB values used in many of the methods in the
 AWT image interfaces for the convenience of the programmer.
getRGBs(int[])
- Method in class java.awt.image.
IndexColorModel
Converts data for each index from the color and alpha component
 arrays to an int in the default RGB ColorModel format and copies
 the resulting 32-bit ARGB values into the specified array.
getRichness()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the richness property definition in CSS2.
getRight()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the right property definition in CSS2.
getRight()
- Method in interface org.w3c.dom.css.
Rect
This attribute is used for the right of the rect.
getRightChildIndent()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the right child indent.
getRightComponent()
- Method in class javax.swing.
JSplitPane
Returns the component to the right (or below) the divider.
getRightIndent(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the right indent setting.
getRightInset()
- Method in class javax.swing.text.
AsyncBoxView
Get the right part of the margin around the view.
getRightInset()
- Method in class javax.swing.text.
CompositeView
Gets the right inset.
getRightOperand()
- Method in interface com.sun.source.tree.
BinaryTree
Returns the right (second) operand of the expression.
getRole(String)
- Method in interface javax.management.relation.
Relation
Retrieves role value for given role name.
getRole(String)
- Method in class javax.management.relation.
RelationSupport
Retrieves role value for given role name.
getRole(String, String)
- Method in class javax.management.relation.
RelationService
Retrieves role value for given role name in given relation.
getRole(String, String)
- Method in interface javax.management.relation.
RelationServiceMBean
Retrieves role value for given role name in given relation.
getRoleCardinality(String)
- Method in interface javax.management.relation.
Relation
Returns the number of MBeans currently referenced in the given role.
getRoleCardinality(String)
- Method in class javax.management.relation.
RelationSupport
Returns the number of MBeans currently referenced in the given role.
getRoleCardinality(String, String)
- Method in class javax.management.relation.
RelationService
Retrieves the number of MBeans currently referenced in the given role.
getRoleCardinality(String, String)
- Method in interface javax.management.relation.
RelationServiceMBean
Retrieves the number of MBeans currently referenced in the
 given role.
getRoleInfo(String)
- Method in interface javax.management.relation.
RelationType
Returns the role info (RoleInfo object) for the given role info name
 (null if not found).
getRoleInfo(String)
- Method in class javax.management.relation.
RelationTypeSupport
Returns the role info (RoleInfo object) for the given role info name
 (null if not found).
getRoleInfo(String, String)
- Method in class javax.management.relation.
RelationService
Retrieves role info for given role name of a given relation type.
getRoleInfo(String, String)
- Method in interface javax.management.relation.
RelationServiceMBean
Retrieves role info for given role of a given relation type.
getRoleInfos()
- Method in interface javax.management.relation.
RelationType
Returns the list of role definitions (ArrayList of RoleInfo objects).
getRoleInfos()
- Method in class javax.management.relation.
RelationTypeSupport
Returns the list of role definitions (ArrayList of RoleInfo objects).
getRoleInfos(String)
- Method in class javax.management.relation.
RelationService
Retrieves list of role infos (RoleInfo objects) of a given relation
 type.
getRoleInfos(String)
- Method in interface javax.management.relation.
RelationServiceMBean
Retrieves list of role infos (RoleInfo objects) of a given relation
 type.
getRoleName()
- Method in class javax.management.relation.
RelationNotification
Returns name of updated role of updated relation (only for role update).
getRoleName()
- Method in class javax.management.relation.
Role
Retrieves role name.
getRoleName()
- Method in class javax.management.relation.
RoleUnresolved
Retrieves role name.
getRoles()
- Method in class javax.management.relation.
RoleResult
Retrieves list of roles successfully accessed.
getRoles(String[])
- Method in interface javax.management.relation.
Relation
Retrieves values of roles with given names.
getRoles(String[])
- Method in class javax.management.relation.
RelationSupport
Retrieves values of roles with given names.
getRoles(String, String[])
- Method in class javax.management.relation.
RelationService
Retrieves values of roles with given names in given relation.
getRoles(String, String[])
- Method in interface javax.management.relation.
RelationServiceMBean
Retrieves values of roles with given names in given relation.
getRolesUnresolved()
- Method in class javax.management.relation.
RoleResult
Retrieves list of roles unsuccessfully accessed.
getRoleValue()
- Method in class javax.management.relation.
Role
Retrieves role value.
getRoleValue()
- Method in class javax.management.relation.
RoleUnresolved
Retrieves role value.
getRolloverBorder(AbstractButton)
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Returns a rollover border for the button.
getRolloverColumn()
- Method in class javax.swing.plaf.basic.
BasicTableHeaderUI
Returns the index of the column header over which the mouse
 currently is.
getRolloverIcon()
- Method in class javax.swing.
AbstractButton
Returns the rollover icon for the button.
getRolloverSelectedIcon()
- Method in class javax.swing.
AbstractButton
Returns the rollover selection icon for the button.
getRolloverTab()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the tab the mouse is currently over, or
-1
if the mouse is no
 longer over any tab.
getRoot()
- Method in interface java.nio.file.
Path
Returns the root component of this path as a
Path
object,
 or
null
if this path does not have a root component.
getRoot()
- Method in class java.util.concurrent.
CountedCompleter
Returns the root of the current computation; i.e., this
 task if it has no completer, else its completer's root.
getRoot()
- Method in class java.util.concurrent.
Phaser
Returns the root ancestor of this phaser, which is the same as
 this phaser if it has no parent.
getRoot()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the root of the tree that contains this node.
getRoot()
- Method in class javax.swing.tree.
DefaultTreeModel
Returns the root of the tree.
getRoot()
- Method in interface javax.swing.tree.
TreeModel
Returns the root of the tree.
getRoot()
- Method in interface org.w3c.dom.traversal.
NodeIterator
The root node of the
NodeIterator
, as specified when it
 was created.
getRoot()
- Method in interface org.w3c.dom.traversal.
TreeWalker
The
root
node of the
TreeWalker
, as specified
 when it was created.
getRoot(Component)
- Static method in class javax.swing.
SwingUtilities
Returns the root component for the current component tree.
getRootCause()
- Method in exception class javax.naming.
NamingException
Retrieves the root cause of this NamingException, if any.
getRootDirectories()
- Method in class java.nio.file.
FileSystem
Returns an object to iterate over the paths of the root directories.
getRootElement()
- Method in class javax.swing.text.
DefaultStyledDocument.ElementBuffer
Gets the root element.
getRootElements()
- Method in interface javax.annotation.processing.
RoundEnvironment
Returns the
root elements
for annotation
 processing
generated
by the prior round.
getRootElements()
- Method in class javax.swing.text.
AbstractDocument
Gets all root elements defined.
getRootElements()
- Method in interface javax.swing.text.
Document
Returns all of the root elements that are defined.
getRootFrame()
- Static method in class javax.swing.
JOptionPane
Returns the
Frame
to use for the class methods in
 which a frame is not provided.
getRootName()
- Method in interface javax.imageio.metadata.
IIOMetadataFormat
Returns the name of the root element of the format.
getRootName()
- Method in class javax.imageio.metadata.
IIOMetadataFormatImpl
getRootPane()
- Method in class javax.swing.
JApplet
Deprecated.
Returns the rootPane object for this applet.
getRootPane()
- Method in class javax.swing.
JComponent
Returns the
JRootPane
ancestor for this component.
getRootPane()
- Method in class javax.swing.
JDialog
Returns the
rootPane
object for this dialog.
getRootPane()
- Method in class javax.swing.
JFrame
Returns the
rootPane
object for this frame.
getRootPane()
- Method in class javax.swing.
JInternalFrame
Returns the
rootPane
object for this internal frame.
getRootPane()
- Method in class javax.swing.
JWindow
Returns the
rootPane
object for this window.
getRootPane()
- Method in interface javax.swing.
RootPaneContainer
Return this component's single JRootPane child.
getRootPane(Component)
- Static method in class javax.swing.
SwingUtilities
If c is a JRootPane descendant return its JRootPane ancestor.
getRoots()
- Method in class javax.swing.filechooser.
FileSystemView
Returns all root partitions on this system.
getRootView(JTextComponent)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Fetches a View with the allocation of the associated
 text component (i.e. the root of the hierarchy) that
 can be traversed to determine how the model is being
 represented spatially.
getRootView(JTextComponent)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getRootView
method on each UI handled by this object.
getRootView(JTextComponent)
- Method in class javax.swing.plaf.
TextUI
Fetches a View with the allocation of the associated
 text component (i.e. the root of the hierarchy) that
 can be traversed to determine how the model is being
 represented spatially.
getRotateInstance(double)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform representing a rotation transformation.
getRotateInstance(double, double)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform that rotates coordinates according to
 a rotation vector.
getRotateInstance(double, double, double)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform that rotates coordinates around an anchor point.
getRotateInstance(double, double, double, double)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform that rotates coordinates around an anchor
 point according to a rotation vector.
getRoundedCorners()
- Method in class javax.swing.border.
LineBorder
Returns whether this border will be drawn with rounded corners.
getRoundingMode()
- Method in class java.math.
MathContext
Returns the roundingMode setting.
getRoundingMode()
- Method in class java.text.
CompactNumberFormat
Gets the
RoundingMode
used in this
CompactNumberFormat
.
getRoundingMode()
- Method in class java.text.
DecimalFormat
Gets the
RoundingMode
used in this DecimalFormat.
getRoundingMode()
- Method in class java.text.
NumberFormat
Gets the
RoundingMode
used in this NumberFormat.
getRounds()
- Method in class javax.crypto.spec.
RC5ParameterSpec
Returns the number of rounds.
getRow()
- Method in interface java.sql.
ResultSet
Retrieves the current row number.
getRow()
- Method in class javax.swing.
JTable.DropLocation
Returns the row index where a dropped item should be placed in the
 table.
getRowBounds(int)
- Method in class javax.swing.
JTree
Returns the
Rectangle
that the node at the specified row is
 drawn in.
getRowCount()
- Method in class javax.swing.
DefaultRowSorter.ModelWrapper
Returns the number of rows in the model.
getRowCount()
- Method in class javax.swing.
JTable
Returns the number of rows that can be shown in the
JTable
, given unlimited space.
getRowCount()
- Method in class javax.swing.
JTree
Returns the number of viewable nodes.
getRowCount()
- Method in class javax.swing.table.
DefaultTableModel
Returns the number of rows in this data table.
getRowCount()
- Method in interface javax.swing.table.
TableModel
Returns the number of rows in the model.
getRowCount()
- Method in class javax.swing.text.
TableView.TableCell
Deprecated.
Gets the number of rows this cell spans (that is, the
 grid height).
getRowCount()
- Method in class javax.swing.tree.
AbstractLayoutCache
Number of rows being displayed.
getRowCount()
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Returns the number of visible rows.
getRowCount()
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns the number of visible rows.
getRowCount(JTree)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the number of rows that are being displayed.
getRowCount(JTree)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getRowCount
method on each UI handled by this object.
getRowCount(JTree)
- Method in class javax.swing.plaf.
TreeUI
Returns the number of rows that are being displayed.
getRowEnd(JTextComponent, int)
- Static method in class javax.swing.text.
Utilities
Determines the ending row model position of the row that contains
 the specified model position.
getRowFilter()
- Method in class javax.swing.
DefaultRowSorter
Returns the filter that determines which rows, if any, should
 be hidden from view.
getRowForLocation(int, int)
- Method in class javax.swing.
JTree
Returns the row for the specified location.
getRowForPath(JTree, TreePath)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the row that the last item identified in path is visible
 at.
getRowForPath(JTree, TreePath)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
getRowForPath
method on each UI handled by this object.
getRowForPath(JTree, TreePath)
- Method in class javax.swing.plaf.
TreeUI
Returns the row that the last item identified in path is visible
 at.
getRowForPath(TreePath)
- Method in class javax.swing.
JTree
Returns the row that displays the node identified by the specified
 path.
getRowForPath(TreePath)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the row that the last item identified in path is visible
 at.
getRowForPath(TreePath)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Returns the row that the last item identified in path is visible
 at.
getRowForPath(TreePath)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns the row where the last item identified in path is visible.
getRowHeader()
- Method in class javax.swing.
JScrollPane
Returns the row header.
getRowHeader()
- Method in class javax.swing.
ScrollPaneLayout
Returns the
JViewport
object that is the row header.
getRowHeight()
- Method in class javax.swing.
JTable
Returns the height of a table row, in pixels.
getRowHeight()
- Method in class javax.swing.
JTextArea
Defines the meaning of the height of a row.
getRowHeight()
- Method in class javax.swing.
JTree
Returns the height of each row.
getRowHeight()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the height of each row in the drawn tree component.
getRowHeight()
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the height of each row.
getRowHeight(int)
- Method in class javax.swing.
JTable
Returns the height, in pixels, of the cells in
row
.
getRowHeight(int)
- Method in class javax.swing.plaf.basic.
BasicListUI
Returns the height of the specified row based on the current layout.
getRowId(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
ROWID
parameter as a
java.sql.RowId
object.
getRowId(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row of this
ResultSet
object as a
java.sql.RowId
object in the Java
 programming language.
getRowId(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
ROWID
parameter as a
java.sql.RowId
object.
getRowId(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row of this
ResultSet
object as a
java.sql.RowId
object in the Java
 programming language.
getRowIdLifetime()
- Method in interface java.sql.
DatabaseMetaData
Indicates whether this data source supports the SQL
ROWID
type,
 and the lifetime for which a
RowId
object remains valid.
getRowIndex()
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
The index of this row, relative to the entire table, starting from 0.
getRowMapper()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the RowMapper instance that is able to map a TreePath to a
 row.
getRowMapper()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the RowMapper instance that is able to map a TreePath to a
 row.
getRowMargin()
- Method in class javax.swing.
JTable
Gets the amount of empty space, in pixels, between cells.
getRows()
- Method in class java.awt.
GridLayout
Gets the number of rows in this layout.
getRows()
- Method in class java.awt.
List
Gets the number of visible lines in this list.
getRows()
- Method in class java.awt.
TextArea
Returns the number of rows in the text area.
getRows()
- Method in class javax.swing.
JTextArea
Returns the number of rows in the TextArea.
getRows()
- Method in interface org.w3c.dom.html.
HTMLFrameSetElement
The number of rows of frames in the frameset.
getRows()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Returns a collection of all the rows in the table, including all in
THEAD
,
TFOOT
, all
TBODY
elements.
getRows()
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
The collection of rows in this table section.
getRows()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Number of text rows.
getRowSelectionAllowed()
- Method in class javax.swing.
JTable
Returns true if rows can be selected.
getRowSetNames()
- Method in interface javax.sql.rowset.
JoinRowSet
Returns a
String
array containing the names of the
RowSet
objects added to this
JoinRowSet
object.
getRowSetReader()
- Method in class javax.sql.rowset.spi.
SyncProvider
Returns a
javax.sql.RowSetReader
object, which can be used to
 populate a
RowSet
object with data.
getRowSets()
- Method in interface javax.sql.rowset.
JoinRowSet
Returns a
Collection
object containing the
RowSet
objects that have been added to this
JoinRowSet
object.
getRowSetWarnings()
- Method in interface javax.sql.rowset.
CachedRowSet
Retrieves the first warning reported by calls on this
RowSet
object.
getRowSetWarnings()
- Method in interface javax.sql.rowset.
JdbcRowSet
Retrieves the first warning reported by calls on this
JdbcRowSet
object.
getRowSetWriter()
- Method in class javax.sql.rowset.spi.
SyncProvider
Returns a
javax.sql.RowSetWriter
object, which can be
 used to write a
RowSet
object's data back to the
 underlying data source.
getRowsForPaths(TreePath[])
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the rows that the
TreePath
instances in
path
are being displayed at.
getRowsForPaths(TreePath[])
- Method in interface javax.swing.tree.
RowMapper
Returns the rows that the TreePath instances in
path
are being displayed at.
getRowSorter()
- Method in class javax.swing.
JTable
Returns the object responsible for sorting.
getRowSpan()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Number of rows spanned by cell.
getRowStart(JTextComponent, int)
- Static method in class javax.swing.text.
Utilities
Determines the starting row model position of the row that contains
 the specified model position.
getRowType()
- Method in class javax.management.openmbean.
TabularType
Returns the type of the row elements of tabular data values
 described by this
TabularType
instance.
getRowX(int, int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the location, along the x-axis, to render a particular row
 at.
getRowX(int, int)
- Method in class javax.swing.plaf.basic.
BasicTreeUI.NodeDimensionsHandler
Returns amount to indent the given row.
getRSB()
- Method in class java.awt.font.
GlyphMetrics
Returns the right (bottom) side bearing of the glyph.
getRule()
- Method in class java.awt.
AlphaComposite
Returns the compositing rule of this
AlphaComposite
.
getRule(String)
- Method in class javax.swing.text.html.
StyleSheet
Fetches the rule that best matches the selector given
 in string form.
getRule(HTML.Tag, Element)
- Method in class javax.swing.text.html.
StyleSheet
Fetches the style to use to render the given type
 of HTML tag.
getRules()
- Method in class java.text.
RuleBasedCollator
Gets the table-based rules for the collation object.
getRules()
- Method in class java.time.
ZoneId
Gets the time-zone rules for this ID allowing calculations to be performed.
getRules()
- Method in class java.time.
ZoneOffset
Gets the associated time-zone rules.
getRules()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Specifies which internal table borders to render.
getRules(String, boolean)
- Static method in class java.time.zone.
ZoneRulesProvider
Gets the rules for the zone ID.
getRunCount()
- Method in class java.text.
Bidi
Return the number of level runs.
getRunForTab(int, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the run for a tab.
getRunLevel(int)
- Method in class java.text.
Bidi
Return the level of the nth logical run in this line.
getRunLimit()
- Method in interface java.text.
AttributedCharacterIterator
Returns the index of the first character following the run
 with respect to all attributes containing the current character.
getRunLimit(int)
- Method in class java.text.
Bidi
Return the index of the character past the end of the nth logical run in this line, as
 an offset from the start of the line.
getRunLimit(AttributedCharacterIterator.Attribute)
- Method in interface java.text.
AttributedCharacterIterator
Returns the index of the first character following the run
 with respect to the given
attribute
containing the current character.
getRunLimit(Set<? extends AttributedCharacterIterator.Attribute>)
- Method in interface java.text.
AttributedCharacterIterator
Returns the index of the first character following the run
 with respect to the given
attributes
containing the current character.
getRunningThreadCount()
- Method in class java.util.concurrent.
ForkJoinPool
Returns an estimate of the number of worker threads that are
 not blocked waiting to join tasks or for other managed
 synchronization.
getRunStart()
- Method in interface java.text.
AttributedCharacterIterator
Returns the index of the first character of the run
 with respect to all attributes containing the current character.
getRunStart(int)
- Method in class java.text.
Bidi
Return the index of the character at the start of the nth logical run in this line, as
 an offset from the start of the line.
getRunStart(AttributedCharacterIterator.Attribute)
- Method in interface java.text.
AttributedCharacterIterator
Returns the index of the first character of the run
 with respect to the given
attribute
containing the current character.
getRunStart(Set<? extends AttributedCharacterIterator.Attribute>)
- Method in interface java.text.
AttributedCharacterIterator
Returns the index of the first character of the run
 with respect to the given
attributes
containing the current character.
getRuntime()
- Static method in class java.lang.
Runtime
Returns the runtime object associated with the current Java application.
getRuntimeMXBean()
- Static method in class java.lang.management.
ManagementFactory
Returns the managed bean for the runtime system of
 the Java virtual machine.
getS()
- Method in interface java.security.interfaces.
ECPrivateKey
Returns the private value S.
getS()
- Method in class java.security.spec.
ECPrivateKeySpec
Returns the private value S.
getSalt()
- Method in interface javax.crypto.interfaces.
PBEKey
Returns the salt or null if not specified.
getSalt()
- Method in class javax.crypto.spec.
PBEKeySpec
Returns a copy of the salt or null if not specified.
getSalt()
- Method in class javax.crypto.spec.
PBEParameterSpec
Returns the salt.
getSaltLength()
- Method in class java.security.spec.
PSSParameterSpec
Returns the salt length in bytes.
getSample(int, int, int)
- Method in class java.awt.image.
Raster
Returns the sample in a specified band for the pixel located
 at (x,y) as an int.
getSample(int, int, int, DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Returns as int the sample in a specified band for the pixel
 located at (x,y).
getSample(int, int, int, DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Returns as int the sample in a specified band for the pixel
 located at (x,y).
getSample(int, int, int, DataBuffer)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns as
int
the sample in a specified band for the
 pixel located at (x, y).
getSample(int, int, int, DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the sample in a specified band for the pixel located
 at (x,y) as an int.
getSample(int, int, int, DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns as int the sample in a specified band for the pixel
 located at (x,y).
getSampleDouble(int, int, int)
- Method in class java.awt.image.
Raster
Returns the sample in a specified band
 for a pixel located at (x,y) as a double.
getSampleDouble(int, int, int, DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Returns the sample in a specified band
 for a pixel located at (x,y) as a double.
getSampleDouble(int, int, int, DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Returns the sample in a specified band
 for a pixel located at (x,y) as a double.
getSampleDouble(int, int, int, DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the sample in a specified band
 for a pixel located at (x,y) as a double.
getSampleFloat(int, int, int)
- Method in class java.awt.image.
Raster
Returns the sample in a specified band
 for the pixel located at (x,y) as a float.
getSampleFloat(int, int, int, DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Returns the sample in a specified band
 for the pixel located at (x,y) as a float.
getSampleFloat(int, int, int, DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Returns the sample in a specified band
 for the pixel located at (x,y) as a float.
getSampleFloat(int, int, int, DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the sample in a specified band
 for the pixel located at (x,y) as a float.
getSampleModel()
- Method in class java.awt.image.
BufferedImage
Returns the
SampleModel
associated with this
BufferedImage
.
getSampleModel()
- Method in class java.awt.image.
Raster
Returns the SampleModel that describes the layout of the image data.
getSampleModel()
- Method in interface java.awt.image.
RenderedImage
Returns the SampleModel associated with this image.
getSampleModel()
- Method in class javax.imageio.
ImageTypeSpecifier
Returns a
SampleModel
based on the settings
 encapsulated within this object.
getSampleModel(int, int)
- Method in class javax.imageio.
ImageTypeSpecifier
Returns a
SampleModel
based on the settings
 encapsulated within this object.
getSampleModelTranslateX()
- Method in class java.awt.image.
Raster
Returns the X translation from the coordinate system of the
 SampleModel to that of the Raster.
getSampleModelTranslateY()
- Method in class java.awt.image.
Raster
Returns the Y translation from the coordinate system of the
 SampleModel to that of the Raster.
getSampleRate()
- Method in class javax.sound.sampled.
AudioFormat
Obtains the sample rate.
getSamples(int, int, int, int, int, double[])
- Method in class java.awt.image.
Raster
Returns the samples for a specified band for a specified rectangle
 of pixels in a double array, one sample per array element.
getSamples(int, int, int, int, int, double[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the samples for a specified band for a specified rectangle
 of pixels in a double array, one sample per array element.
getSamples(int, int, int, int, int, float[])
- Method in class java.awt.image.
Raster
Returns the samples for a specified band for the specified rectangle
 of pixels in a float array, one sample per array element.
getSamples(int, int, int, int, int, float[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the samples for a specified band for the specified rectangle
 of pixels in a float array, one sample per array element.
getSamples(int, int, int, int, int, int[])
- Method in class java.awt.image.
Raster
Returns the samples for a specified band for the specified rectangle
 of pixels in an int array, one sample per array element.
getSamples(int, int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
BandedSampleModel
Returns the samples in a specified band for the specified rectangle
 of pixels in an int array, one sample per data array element.
getSamples(int, int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
ComponentSampleModel
Returns the samples in a specified band for the specified rectangle
 of pixels in an int array, one sample per data array element.
getSamples(int, int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
SampleModel
Returns the samples for a specified band for the specified rectangle
 of pixels in an int array, one sample per array element.
getSamples(int, int, int, int, int, int[], DataBuffer)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns the samples for a specified band for the specified rectangle
 of pixels in an int array, one sample per array element.
getSampleSize()
- Method in class java.awt.image.
ComponentSampleModel
Returns the number of bits per sample for all bands.
getSampleSize()
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the number of bits per sample for all bands.
getSampleSize()
- Method in class java.awt.image.
SampleModel
Returns the size in bits of samples for all bands.
getSampleSize()
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns the number of bits per sample for all bands.
getSampleSize(int)
- Method in class java.awt.image.
ComponentSampleModel
Returns the number of bits per sample for the specified band.
getSampleSize(int)
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the number of bits per sample for the specified band.
getSampleSize(int)
- Method in class java.awt.image.
SampleModel
Returns the size in bits of samples for the specified band.
getSampleSize(int)
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns the number of bits per sample for the specified band.
getSampleSizeInBits()
- Method in class javax.sound.sampled.
AudioFormat
Obtains the size of a sample.
getSaslClientFactories()
- Static method in class javax.security.sasl.
Sasl
Gets an enumeration of known factories for producing
SaslClient
.
getSaslServerFactories()
- Static method in class javax.security.sasl.
Sasl
Gets an enumeration of known factories for producing
SaslServer
.
getSavepointId()
- Method in interface java.sql.
Savepoint
Retrieves the generated ID for the savepoint that this
Savepoint
object represents.
getSavepointName()
- Method in interface java.sql.
Savepoint
Retrieves the name of the savepoint that this
Savepoint
object represents.
getScalar()
- Method in interface java.security.interfaces.
XECPrivateKey
Get the scalar value encoded as an unpruned byte array.
getScalar()
- Method in class java.security.spec.
XECPrivateKeySpec
Get the scalar value encoded as an unpruned byte array.
getScale(int)
- Method in interface java.sql.
ParameterMetaData
Retrieves the designated parameter's number of digits to right of the decimal point.
 0 is returned for data types where the scale is not applicable.
getScale(int)
- Method in interface java.sql.
ResultSetMetaData
Gets the designated column's number of digits to right of the decimal point.
 0 is returned for data types where the scale is not applicable.
getScale(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the number of digits to the right of the decimal point
 for values stored in the designated column.
getScaledInstance(float, boolean)
- Method in class javax.imageio.plugins.jpeg.
JPEGQTable
Returns a new quantization table where the values are multiplied
 by
scaleFactor
and then clamped to the range 1..32767
 (or to 1..255 if
forceBaseline
is true).
getScaledInstance(int, int, int)
- Method in class java.awt.
Image
Creates a scaled version of this image.
getScaleFactors(float[])
- Method in class java.awt.image.
RescaleOp
Returns the scale factors in the given array.
getScaleInstance(double, double)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform representing a scaling transformation.
getScaleX()
- Method in class java.awt.geom.
AffineTransform
Returns the
m00
element of the 3x3 affine transformation matrix.
getScaleY()
- Method in class java.awt.geom.
AffineTransform
Returns the
m11
element of the 3x3 affine transformation matrix.
getScanlineStride()
- Method in class java.awt.image.
ComponentSampleModel
Returns the scanline stride of this ComponentSampleModel.
getScanlineStride()
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the scanline stride.
getScanlineStride()
- Method in class java.awt.image.
SinglePixelPackedSampleModel
Returns the scanline stride of this SinglePixelPackedSampleModel.
getSchema()
- Method in interface java.sql.
Connection
Retrieves this
Connection
object's current schema name.
getSchema()
- Method in class javax.xml.parsers.
DocumentBuilder
Get a reference to the
Schema
being used by
 the XML processor.
getSchema()
- Method in class javax.xml.parsers.
DocumentBuilderFactory
Gets the
Schema
object specified through
 the
DocumentBuilderFactory.setSchema(Schema schema)
method.
getSchema()
- Method in class javax.xml.parsers.
SAXParser
Get a reference to the
Schema
being used by
 the XML processor.
getSchema()
- Method in class javax.xml.parsers.
SAXParserFactory
Gets the
Schema
object specified through
 the
SAXParserFactory.setSchema(Schema schema)
method.
getSchema(String)
- Method in interface javax.naming.directory.
DirContext
Retrieves the schema associated with the named object.
getSchema(String)
- Method in class javax.naming.directory.
InitialDirContext
getSchema(Name)
- Method in interface javax.naming.directory.
DirContext
Retrieves the schema associated with the named object.
getSchema(Name)
- Method in class javax.naming.directory.
InitialDirContext
getSchemaClassDefinition(String)
- Method in interface javax.naming.directory.
DirContext
Retrieves a context containing the schema objects of the
 named object's class definitions.
getSchemaClassDefinition(String)
- Method in class javax.naming.directory.
InitialDirContext
getSchemaClassDefinition(Name)
- Method in interface javax.naming.directory.
DirContext
Retrieves a context containing the schema objects of the
 named object's class definitions.
getSchemaClassDefinition(Name)
- Method in class javax.naming.directory.
InitialDirContext
getSchemaName(int)
- Method in interface java.sql.
ResultSetMetaData
Get the designated column's table's schema.
getSchemaName(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the schema name of the table from which the value
 in the designated column was derived.
getSchemas()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the schema names available in this database.
getSchemas(String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves the schema names available in this database.
getSchemaTerm()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the database vendor's preferred term for "schema".
getSchemaType()
- Method in interface javax.xml.stream.events.
XMLEvent
This method is provided for implementations to provide
 optional type information about the associated event.
getSchemaTypeInfo()
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
getSchemaTypeInfo()
- Method in interface org.w3c.dom.
Attr
The type information associated with this attribute.
getSchemaTypeInfo()
- Method in interface org.w3c.dom.
Element
The type information associated with this element.
getScheme()
- Method in class java.net.
URI
Returns the scheme component of this URI.
getScheme()
- Method in class java.nio.file.spi.
FileSystemProvider
Returns the URI scheme that identifies this provider.
getScheme()
- Method in interface org.w3c.dom.html.
HTMLMetaElement
Select form of content.
getSchemeSpecificPart()
- Method in class java.net.
URI
Returns the decoded scheme-specific part of this URI.
getScope()
- Method in class java.security.
Identity
Deprecated.
Returns this identity's scope.
getScope()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Scope covered by header cells.
getScope(TreePath)
- Method in class com.sun.source.util.
Trees
Returns the
Scope
for the
Tree
node identified by a given
TreePath
.
getScopedInterface()
- Method in class java.net.
Inet6Address
Returns the scoped interface, if this instance was created with
 a scoped interface.
getScopeId()
- Method in class java.net.
Inet6Address
Returns the numeric scopeId, if this instance is associated with
 an interface.
getScopes()
- Method in interface javax.script.
ScriptContext
Returns immutable
List
of all the valid values for
 scope in the ScriptContext.
getScopes()
- Method in class javax.script.
SimpleScriptContext
Returns immutable
List
of all the valid values for
 scope in the ScriptContext.
getScreenDevices()
- Method in class java.awt.
GraphicsEnvironment
Returns an array of all of the screen
GraphicsDevice
objects.
getScreenInsets(GraphicsConfiguration)
- Method in class java.awt.
Toolkit
Gets the insets of the screen.
getScreenResolution()
- Method in class java.awt.
Toolkit
Returns the screen resolution in dots-per-inch.
getScreenSize()
- Method in class java.awt.
Toolkit
Gets the size of the screen.
getScreenX()
- Method in interface org.w3c.dom.events.
MouseEvent
The horizontal coordinate at which the event occurred relative to the
 origin of the screen coordinate system.
getScreenY()
- Method in interface org.w3c.dom.events.
MouseEvent
The vertical coordinate at which the event occurred relative to the
 origin of the screen coordinate system.
getScript()
- Method in class java.util.
Locale
Returns the script for this locale, which should
 either be the empty string or an ISO 15924 4-letter script
 code.
getScriptContext(Bindings)
- Method in class javax.script.
AbstractScriptEngine
Returns a
SimpleScriptContext
.
getScriptEngine()
- Method in interface javax.script.
ScriptEngineFactory
Returns an instance of the
ScriptEngine
associated with this
ScriptEngineFactory
.
getScrollableBlockIncrement(Rectangle, int, int)
- Method in class javax.swing.
JLayer
Returns a scroll increment, which is required for components
 that display logical rows or columns in order to completely expose
 one block of rows or columns, depending on the value of orientation.
getScrollableBlockIncrement(Rectangle, int, int)
- Method in class javax.swing.
JList
Returns the distance to scroll to expose the next or previous block.
getScrollableBlockIncrement(Rectangle, int, int)
- Method in class javax.swing.
JTable
Returns
visibleRect.height
or
visibleRect.width
,
 depending on this table's orientation.
getScrollableBlockIncrement(Rectangle, int, int)
- Method in class javax.swing.
JTree
Returns the amount for a block increment, which is the height or
 width of
visibleRect
, based on
orientation
.
getScrollableBlockIncrement(Rectangle, int, int)
- Method in interface javax.swing.
Scrollable
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one block
 of rows or columns, depending on the value of orientation.
getScrollableBlockIncrement(Rectangle, int, int)
- Method in class javax.swing.text.
JTextComponent
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one block
 of rows or columns, depending on the value of orientation.
getScrollableTracksViewportHeight()
- Method in class javax.swing.
JEditorPane
Returns true if a viewport should always force the height of this
Scrollable
to match the height of the viewport.
getScrollableTracksViewportHeight()
- Method in class javax.swing.
JLayer
Returns
false
to indicate that the height of the viewport does not
 determine the height of the layer, unless the preferred height
 of the layer is smaller than the height of the viewport.
getScrollableTracksViewportHeight()
- Method in class javax.swing.
JList
Returns
true
if this
JList
is displayed in a
JViewport
and the viewport is taller than the list's
 preferred height, or if the layout orientation is
VERTICAL_WRAP
and
visibleRowCount <= 0
; otherwise returns
false
.
getScrollableTracksViewportHeight()
- Method in class javax.swing.
JTable
Returns
false
to indicate that the height of the viewport does
 not determine the height of the table, unless
getFillsViewportHeight
is
true
and the preferred height
 of the table is smaller than the viewport's height.
getScrollableTracksViewportHeight()
- Method in class javax.swing.
JTree
Returns false to indicate that the height of the viewport does not
 determine the height of the table, unless the preferred height
 of the tree is smaller than the viewports height.
getScrollableTracksViewportHeight()
- Method in interface javax.swing.
Scrollable
Return true if a viewport should always force the height of this
 Scrollable to match the height of the viewport.
getScrollableTracksViewportHeight()
- Method in class javax.swing.text.
JTextComponent
Returns true if a viewport should always force the height of this
Scrollable
to match the height of the viewport.
getScrollableTracksViewportWidth()
- Method in class javax.swing.
JEditorPane
Returns true if a viewport should always force the width of this
Scrollable
to match the width of the viewport.
getScrollableTracksViewportWidth()
- Method in class javax.swing.
JLayer
Returns
false
to indicate that the width of the viewport does not
 determine the width of the layer, unless the preferred width
 of the layer is smaller than the width of the viewport.
getScrollableTracksViewportWidth()
- Method in class javax.swing.
JList
Returns
true
if this
JList
is displayed in a
JViewport
and the viewport is wider than the list's
 preferred width, or if the layout orientation is
HORIZONTAL_WRAP
and
visibleRowCount <= 0
; otherwise returns
false
.
getScrollableTracksViewportWidth()
- Method in class javax.swing.
JTable
Returns false if
autoResizeMode
is set to
AUTO_RESIZE_OFF
, which indicates that the
 width of the viewport does not determine the width
 of the table.
getScrollableTracksViewportWidth()
- Method in class javax.swing.
JTextArea
Returns true if a viewport should always force the width of this
 Scrollable to match the width of the viewport.
getScrollableTracksViewportWidth()
- Method in class javax.swing.
JTree
Returns false to indicate that the width of the viewport does not
 determine the width of the table, unless the preferred width of
 the tree is smaller than the viewports width.
getScrollableTracksViewportWidth()
- Method in interface javax.swing.
Scrollable
Return true if a viewport should always force the width of this
Scrollable
to match the width of the viewport.
getScrollableTracksViewportWidth()
- Method in class javax.swing.text.
JTextComponent
Returns true if a viewport should always force the width of this
Scrollable
to match the width of the viewport.
getScrollableUnitIncrement(Rectangle, int, int)
- Method in class javax.swing.
JLayer
Returns a scroll increment, which is required for components
 that display logical rows or columns in order to completely expose
 one new row or column, depending on the value of orientation.
getScrollableUnitIncrement(Rectangle, int, int)
- Method in class javax.swing.
JList
Returns the distance to scroll to expose the next or previous
 row (for vertical scrolling) or column (for horizontal scrolling).
getScrollableUnitIncrement(Rectangle, int, int)
- Method in class javax.swing.
JTable
Returns the scroll increment (in pixels) that completely exposes one new
 row or column (depending on the orientation).
getScrollableUnitIncrement(Rectangle, int, int)
- Method in class javax.swing.
JTextArea
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one new row
 or column, depending on the value of orientation.
getScrollableUnitIncrement(Rectangle, int, int)
- Method in class javax.swing.
JTree
Returns the amount to increment when scrolling.
getScrollableUnitIncrement(Rectangle, int, int)
- Method in interface javax.swing.
Scrollable
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one new row
 or column, depending on the value of orientation.
getScrollableUnitIncrement(Rectangle, int, int)
- Method in class javax.swing.text.
JTextComponent
Components that display logical rows or columns should compute
 the scroll increment that will completely expose one new row
 or column, depending on the value of orientation.
getScrollAmount()
- Method in class java.awt.event.
MouseWheelEvent
Returns the number of units that should be scrolled per
 click of mouse wheel rotation.
getScrollbarDisplayPolicy()
- Method in class java.awt.
ScrollPane
Returns the display policy for the scrollbars.
getScrollbarVisibility()
- Method in class java.awt.
TextArea
Returns an enumerated value that indicates which scroll bars
 the text area uses.
getScrolling()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
Specify whether or not the frame should have scrollbars.
getScrolling()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
Specify whether or not the frame should have scrollbars.
getScrollMode()
- Method in class javax.swing.
JViewport
Returns the current scrolling mode.
getScrollOffset()
- Method in class javax.swing.
JTextField
Gets the scroll offset, in pixels.
getScrollPane()
- Method in class javax.swing.plaf.basic.
BasicTreeUI.ComponentHandler
Returns the
JScrollPane
housing the
JTree
,
 or null if one isn't found.
getScrollPosition()
- Method in class java.awt.
ScrollPane
Returns the current x,y position within the child which is displayed
 at the 0,0 location of the scrolled panel's view port.
getScrollsOnExpand()
- Method in class javax.swing.
JTree
Returns the value of the
scrollsOnExpand
property.
getScrollType()
- Method in class java.awt.event.
MouseWheelEvent
Returns the type of scrolling that should take place in response to this
 event.
getSearchScope()
- Method in class javax.naming.directory.
SearchControls
Retrieves the search scope of these SearchControls.
getSearchStringEscape()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the string that can be used to escape wildcard characters.
getSearchTerm()
- Method in interface com.sun.source.doctree.
IndexTree
Returns the specified search term.
getSearchTerm()
- Method in class java.awt.desktop.
OpenFilesEvent
Gets the search term.
getSecond()
- Method in class java.time.
LocalDateTime
Gets the second-of-minute field.
getSecond()
- Method in class java.time.
LocalTime
Gets the second-of-minute field.
getSecond()
- Method in class java.time.
OffsetDateTime
Gets the second-of-minute field.
getSecond()
- Method in class java.time.
OffsetTime
Gets the second-of-minute field.
getSecond()
- Method in class java.time.
ZonedDateTime
Gets the second-of-minute field.
getSecond()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the second of minute or
DatatypeConstants.FIELD_UNDEFINED
if this field is not defined.
getSecondary1()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the secondary 1 color.
getSecondary1()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the secondary 1 color.
getSecondary1()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the secondary 1 color.
getSecondary2()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the secondary 2 color.
getSecondary2()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the secondary 2 color.
getSecondary2()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the secondary 2 color.
getSecondary3()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the secondary 3 color.
getSecondary3()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the secondary 3 color.
getSecondary3()
- Method in class javax.swing.plaf.metal.
OceanTheme
Returns the secondary 3 color.
getSeconds()
- Method in class java.sql.
Date
Deprecated.
getSeconds()
- Method in class java.time.
Duration
Gets the number of seconds in this duration.
getSeconds()
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.get(Calendar.SECOND)
.
getSeconds()
- Method in class javax.xml.datatype.
Duration
Obtains the value of the SECONDS field as an integer value,
 or 0 if not present.
getSecretKey()
- Method in class java.security.
KeyStore.SecretKeyEntry
Gets the
SecretKey
from this entry.
getSectionRowIndex()
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
The index of this row, relative to the current section (
THEAD
,
TFOOT
, or
TBODY
),
 starting from 0.
getSecure()
- Method in class java.net.
HttpCookie
Returns
true
if sending this cookie should be restricted to a
 secure protocol, or
false
if it can be sent using any
 protocol.
getSecurityContext()
- Method in class java.lang.
SecurityManager
Deprecated.
Creates an object that encapsulates the current execution
 environment.
getSecurityContext(ClassLoader)
- Method in interface java.rmi.server.
LoaderHandler
Deprecated.
no replacement
getSecurityContext(ClassLoader)
- Static method in class java.rmi.server.
RMIClassLoader
Deprecated.
no replacement.  As of the Java 2 platform v1.2, RMI no
 longer uses this method to obtain a class loader's security context.
getSecurityManager()
- Static method in class java.lang.
System
Deprecated, for removal: This API element is subject to removal in a future version.
This method is only useful in conjunction with
the Security Manager
, which is
       deprecated and subject to removal in a future release.
       Consequently, this method is also deprecated and subject to
       removal. There is no replacement for the Security Manager or this
       method.
getSeed()
- Method in class java.security.spec.
EllipticCurve
Returns the seeding bytes
seed
used
 during curve generation.
getSeed(int)
- Static method in class java.security.
SecureRandom
Returns the given number of seed bytes, computed using the seed
 generation algorithm that this class uses to seed itself.
getSeedLength()
- Method in class java.security.spec.
DSAGenParameterSpec
Returns the desired length of the domain parameter seed in bits.
getSelectColor()
- Method in class javax.swing.plaf.metal.
MetalButtonUI
Returns the color of the selected button.
getSelectColor()
- Method in class javax.swing.plaf.metal.
MetalRadioButtonUI
Returns the color of the selected
JRadioButton
.
getSelectColor()
- Method in class javax.swing.plaf.metal.
MetalToggleButtonUI
Returns the color of a selected button.
getSelected()
- Method in interface org.w3c.dom.html.
HTMLOptionElement
Represents the current state of the corresponding form control, in an
 interactive user agent.
getSelectedAccessibleColumns()
- Method in interface javax.accessibility.
AccessibleTable
Returns the selected columns in a table.
getSelectedAccessibleColumns()
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the selected columns in a table.
getSelectedAccessibleRows()
- Method in interface javax.accessibility.
AccessibleTable
Returns the selected rows in a table.
getSelectedAccessibleRows()
- Method in class javax.swing.
JTable.AccessibleJTable
Returns the selected rows in a table.
getSelectedCheckbox()
- Method in class java.awt.
CheckboxGroup
Gets the current choice from this check box group.
getSelectedColor()
- Method in interface javax.swing.colorchooser.
ColorSelectionModel
Returns the selected
Color
which should be
 non-
null
.
getSelectedColor()
- Method in class javax.swing.colorchooser.
DefaultColorSelectionModel
Returns the selected
Color
which should be
 non-
null
.
getSelectedColumn()
- Method in class javax.swing.
JTable
Returns the index of the first selected column,
 -1 if no column is selected.
getSelectedColumnCount()
- Method in class javax.swing.
JTable
Returns the number of selected columns.
getSelectedColumnCount()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns the number of columns selected.
getSelectedColumnCount()
- Method in interface javax.swing.table.
TableColumnModel
Returns the number of selected columns.
getSelectedColumns()
- Method in class javax.swing.
JTable
Returns the indices of all selected columns.
getSelectedColumns()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns an array of selected columns.
getSelectedColumns()
- Method in interface javax.swing.table.
TableColumnModel
Returns an array of indices of all selected columns.
getSelectedComponent()
- Method in class javax.swing.
JTabbedPane
Returns the currently selected component for this tabbedpane.
getSelectedFile()
- Method in class javax.swing.
JFileChooser
Returns the selected file.
getSelectedFiles()
- Method in class javax.swing.
JFileChooser
Returns a list of selected files if the file chooser is
 set to allow multiple selection.
getSelectedFrame()
- Method in class javax.swing.
JDesktopPane
Returns the currently active
JInternalFrame
in this
JDesktopPane
, or
null
if no
JInternalFrame
is currently active.
getSelectedIcon()
- Method in class javax.swing.
AbstractButton
Returns the selected icon for the button.
getSelectedIndex()
- Method in class java.awt.
Choice
Returns the index of the currently selected item.
getSelectedIndex()
- Method in class java.awt.
List
Gets the index of the selected item on the list,
getSelectedIndex()
- Method in class javax.security.auth.callback.
ConfirmationCallback
Get the selected confirmation option.
getSelectedIndex()
- Method in class javax.swing.
DefaultSingleSelectionModel
Returns the model's selection.
getSelectedIndex()
- Method in class javax.swing.
JComboBox
Returns the first item in the list that matches the given item.
getSelectedIndex()
- Method in class javax.swing.
JList
Returns the smallest selected cell index;
the selection
when only
 a single item is selected in the list.
getSelectedIndex()
- Method in class javax.swing.
JTabbedPane
Returns the currently selected index for this tabbedpane.
getSelectedIndex()
- Method in interface javax.swing.
SingleSelectionModel
Returns the model's selection.
getSelectedIndex()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
The ordinal index of the selected option, starting from 0.
getSelectedIndexes()
- Method in class java.awt.
List
Gets the selected indexes on the list.
getSelectedIndexes()
- Method in class javax.security.auth.callback.
ChoiceCallback
Get the selected choices.
getSelectedIndices()
- Method in class javax.swing.
JList
Returns an array of all of the selected indices, in increasing
 order.
getSelectedIndices()
- Method in interface javax.swing.
ListSelectionModel
Returns an array of all of the selected indices in the selection model,
 in increasing order.
getSelectedItem()
- Method in class java.awt.
Choice
Gets a representation of the current choice as a string.
getSelectedItem()
- Method in class java.awt.
List
Gets the selected item on this scrolling list.
getSelectedItem()
- Method in interface javax.swing.
ComboBoxModel
Returns the selected item
getSelectedItem()
- Method in class javax.swing.
DefaultComboBoxModel
getSelectedItem()
- Method in class javax.swing.
JComboBox
Returns the current selected item.
getSelectedItem()
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.DirectoryComboBoxModel
getSelectedItem()
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.FilterComboBoxModel
getSelectedItems()
- Method in class java.awt.
List
Gets the selected items on this scrolling list.
getSelectedItemsCount()
- Method in interface javax.swing.
ListSelectionModel
Returns the number of selected items.
getSelectedObjects()
- Method in class java.awt.
Checkbox
Returns an array (length 1) containing the checkbox
 label or null if the checkbox is not selected.
getSelectedObjects()
- Method in class java.awt.
CheckboxMenuItem
Returns the array (length 1) containing the checkbox menu item
 label or null if the checkbox is not selected.
getSelectedObjects()
- Method in class java.awt.
Choice
Returns an array (length 1) containing the currently selected
 item.
getSelectedObjects()
- Method in interface java.awt.
ItemSelectable
Returns the selected items or
null
if no
 items are selected.
getSelectedObjects()
- Method in class java.awt.
List
Gets the selected items on this scrolling list in an array of Objects.
getSelectedObjects()
- Method in class javax.swing.
AbstractButton
Returns an array (length 1) containing the label or
null
if the button is not selected.
getSelectedObjects()
- Method in class javax.swing.
DefaultButtonModel
Overridden to return
null
.
getSelectedObjects()
- Method in class javax.swing.
JCheckBoxMenuItem
Returns an array (length 1) containing the check box menu item
 label or null if the check box is not selected.
getSelectedObjects()
- Method in class javax.swing.
JComboBox
Returns an array containing the selected item.
getSelectedPath()
- Method in class javax.swing.
MenuSelectionManager
Returns the path to the currently selected menu item
getSelectedRow()
- Method in class javax.swing.
JTable
Returns the index of the first selected row, -1 if no row is selected.
getSelectedRowCount()
- Method in class javax.swing.
JTable
Returns the number of selected rows.
getSelectedRows()
- Method in class javax.swing.
JTable
Returns the indices of all selected rows.
getSelectedTabPadInsets(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the selected tab pad insets.
getSelectedText()
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the portion of the text that is selected.
getSelectedText()
- Method in class java.awt.
TextComponent
Returns the selected text from the text that is
 presented by this text component.
getSelectedText()
- Method in interface javax.accessibility.
AccessibleText
Returns the portion of the text that is selected.
getSelectedText()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the portion of the text that is selected.
getSelectedText()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the portion of the text that is selected.
getSelectedText()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the portion of the text that is selected.
getSelectedText()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the portion of the text that is selected.
getSelectedText()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the portion of the text that is selected.
getSelectedText()
- Method in class javax.swing.text.
JTextComponent
Returns the selected text contained in this
TextComponent
.
getSelectedText(AttributedCharacterIterator.Attribute[])
- Method in interface java.awt.im.
InputMethodRequests
Gets the currently selected text from the text editing component.
getSelectedTextColor()
- Method in class javax.swing.text.
JTextComponent
Fetches the current color used to render the
 selected text.
getSelectedValue()
- Method in class javax.swing.
JList
Returns the value for the smallest selected cell index;
the selected value
when only a single item is selected in the
 list.
getSelectedValues()
- Method in class javax.swing.
JList
Deprecated.
As of JDK 1.7, replaced by
JList.getSelectedValuesList()
getSelectedValuesList()
- Method in class javax.swing.
JList
Returns a list of all the selected items, in increasing order based
 on their indices in the list.
getSelection()
- Method in class javax.swing.
ButtonGroup
Returns the model of the selected button.
getSelectionBackground()
- Method in class javax.swing.
JList
Returns the color used to draw the background of selected items.
getSelectionBackground()
- Method in class javax.swing.
JTable
Returns the background color for selected cells.
getSelectionBackground()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
The "selectionBackground" is the color of the text when it is painted
 over an unfilled area of the progress bar.
getSelectionColor()
- Method in class javax.swing.text.
JTextComponent
Fetches the current color used to render the
 selection.
getSelectionCount()
- Method in class javax.swing.
JTree
Returns the number of nodes selected.
getSelectionCount()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the number of paths that are selected.
getSelectionCount()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the number of paths that are selected.
getSelectionEnd()
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the end offset within the selected text.
getSelectionEnd()
- Method in class java.awt.
TextComponent
Gets the end position of the selected text in
 this text component.
getSelectionEnd()
- Method in interface javax.accessibility.
AccessibleText
Returns the end offset within the selected text.
getSelectionEnd()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the end offset within the selected text.
getSelectionEnd()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the end offset within the selected text.
getSelectionEnd()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the end offset within the selected text.
getSelectionEnd()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the end offset within the selected text.
getSelectionEnd()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the end offset within the selected text.
getSelectionEnd()
- Method in class javax.swing.text.
JTextComponent
Returns the selected text's end position.
getSelectionForeground()
- Method in class javax.swing.
JList
Returns the color used to draw the foreground of selected items.
getSelectionForeground()
- Method in class javax.swing.
JTable
Returns the foreground color for selected cells.
getSelectionForeground()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
The "selectionForeground" is the color of the text when it is painted
 over a filled area of the progress bar.
getSelectionMode()
- Method in class javax.swing.
DefaultListSelectionModel
Returns the current selection mode.
getSelectionMode()
- Method in class javax.swing.
JList
Returns the current selection mode for the list.
getSelectionMode()
- Method in interface javax.swing.
ListSelectionModel
Returns the current selection mode.
getSelectionMode()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the selection mode, one of
SINGLE_TREE_SELECTION
,
DISCONTIGUOUS_TREE_SELECTION
or
CONTIGUOUS_TREE_SELECTION
.
getSelectionMode()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the current selection mode, one of
SINGLE_TREE_SELECTION
,
CONTIGUOUS_TREE_SELECTION
or
DISCONTIGUOUS_TREE_SELECTION
.
getSelectionModel()
- Method in class javax.swing.
JColorChooser
Returns the data model that handles color selections.
getSelectionModel()
- Method in class javax.swing.
JList
Returns the current selection model.
getSelectionModel()
- Method in class javax.swing.
JMenuBar
Returns the model object that handles single selections.
getSelectionModel()
- Method in class javax.swing.
JPopupMenu
Returns the model object that handles single selections.
getSelectionModel()
- Method in class javax.swing.
JTable
Returns the
ListSelectionModel
that is used to maintain row
 selection state.
getSelectionModel()
- Method in class javax.swing.
JTree
Returns the model for selections.
getSelectionModel()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns the current instance of the
TreeSelectionModel
which is
 the model for selections.
getSelectionModel()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns the
ListSelectionModel
that is used to
 maintain column selection state.
getSelectionModel()
- Method in interface javax.swing.table.
TableColumnModel
Returns the current selection model.
getSelectionModel()
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the model used to maintain the selection.
getSelectionPainter()
- Method in class javax.swing.text.
DefaultCaret
Gets the painter for the Highlighter.
getSelectionPath()
- Method in class javax.swing.
JTree
Returns the path to the first selected node.
getSelectionPath()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the first path in the selection.
getSelectionPath()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the first path in the selection.
getSelectionPaths()
- Method in class javax.swing.
JTree
Returns the paths of all selected values.
getSelectionPaths()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the selection.
getSelectionPaths()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns the paths in the selection.
getSelectionRows()
- Method in class javax.swing.
JTree
Returns all of the currently selected rows.
getSelectionRows()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns the selection in terms of rows.
getSelectionRows()
- Method in interface javax.swing.tree.
TreeSelectionModel
Returns all of the currently selected rows.
getSelectionStart()
- Method in class java.awt.
TextComponent.AccessibleAWTTextComponent
Returns the start offset within the selected text.
getSelectionStart()
- Method in class java.awt.
TextComponent
Gets the start position of the selected text in
 this text component.
getSelectionStart()
- Method in interface javax.accessibility.
AccessibleText
Returns the start offset within the selected text.
getSelectionStart()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the start offset within the selected text.
getSelectionStart()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the start offset within the selected text.
getSelectionStart()
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the start offset within the selected text.
getSelectionStart()
- Method in class javax.swing.
ProgressMonitor.AccessibleProgressMonitor
Returns the start offset within the selected text.
getSelectionStart()
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the start offset within the selected text.
getSelectionStart()
- Method in class javax.swing.text.
JTextComponent
Returns the selected text's start position.
getSelectionValues()
- Method in class javax.swing.
JOptionPane
Returns the input selection values.
getSelectorText()
- Method in interface org.w3c.dom.css.
CSSPageRule
The parsable textual representation of the page selector for the rule.
getSelectorText()
- Method in interface org.w3c.dom.css.
CSSStyleRule
The textual representation of the selector for the rule set.
getSendBufferSize()
- Method in class java.net.
DatagramSocket
Get value of the SO_SNDBUF option for this
DatagramSocket
, that is the
 buffer size, in bytes, used by the platform for output on this
DatagramSocket
.
getSendBufferSize()
- Method in class java.net.
Socket
Get value of the
SO_SNDBUF
option
 for this
Socket
, that is the buffer size used by the platform
 for output on this
Socket
.
getSender()
- Method in class javax.security.auth.kerberos.
KerberosCredMessage
Returns the sender of this message.
getSendPastNotifications()
- Method in class javax.management.timer.
Timer
Gets the flag indicating whether or not the timer sends past notifications.
getSendPastNotifications()
- Method in interface javax.management.timer.
TimerMBean
Gets the flag indicating whether or not the timer sends past notifications.
getSentenceInstance()
- Static method in class java.text.
BreakIterator
Returns a new
BreakIterator
instance
 for
sentence breaks
for the
default locale
.
getSentenceInstance(Locale)
- Static method in class java.text.
BreakIterator
Returns a new
BreakIterator
instance
 for
sentence breaks
for the given locale.
getSentenceInstance(Locale)
- Method in class java.text.spi.
BreakIteratorProvider
Returns a new
BreakIterator
instance
 for
sentence breaks
for the given locale.
getSeparator()
- Method in class java.nio.file.
FileSystem
Returns the name separator, represented as a string.
getSeparator()
- Method in interface org.w3c.dom.css.
Counter
This attribute is used for the separator of the nested counters.
getSeparatorBackground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the separator background color of the current theme.
getSeparatorBackground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the separator background color.
getSeparatorForeground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the separator foreground color of the current theme.
getSeparatorForeground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the separator foreground color.
getSeparatorSize()
- Method in class javax.swing.
JToolBar.Separator
Returns the size of the separator
getSequence()
- Method in interface javax.sound.midi.
Sequencer
Obtains the sequence on which the Sequencer is currently operating.
getSequence(File)
- Static method in class javax.sound.midi.
MidiSystem
Obtains a MIDI sequence from the specified
File
.
getSequence(File)
- Method in class javax.sound.midi.spi.
MidiFileReader
Obtains a MIDI sequence from the
File
provided.
getSequence(InputStream)
- Static method in class javax.sound.midi.
MidiSystem
Obtains a MIDI sequence from the specified input stream.
getSequence(InputStream)
- Method in class javax.sound.midi.spi.
MidiFileReader
Obtains a MIDI sequence from the input stream provided.
getSequence(URL)
- Static method in class javax.sound.midi.
MidiSystem
Obtains a MIDI sequence from the specified URL.
getSequence(URL)
- Method in class javax.sound.midi.spi.
MidiFileReader
Obtains a MIDI sequence from the
URL
provided.
getSequenceDetState()
- Method in interface org.ietf.jgss.
GSSContext
Determines if sequence checking is enabled for the
 per-message security services from this context.
getSequenceNumber()
- Method in class java.util.logging.
LogRecord
Get the sequence number.
getSequenceNumber()
- Method in class javax.management.
Notification
Get the notification sequence number.
getSequencer()
- Static method in class javax.sound.midi.
MidiSystem
Obtains the default
Sequencer
, connected to a default device.
getSequencer(boolean)
- Static method in class javax.sound.midi.
MidiSystem
Obtains the default
Sequencer
, optionally connected to a default
 device.
getSerialFilter()
- Static method in class java.io.
ObjectInputFilter.Config
Returns the static JVM-wide deserialization filter or
null
if not configured.
getSerialFilterFactory()
- Static method in class java.io.
ObjectInputFilter.Config
Returns the JVM-wide deserialization filter factory.
getSerializedObject()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the value of the
OBJECT
attribute of the
MLET
tag.
getSerialNumber()
- Method in class java.security.cert.
X509Certificate
Gets the
serialNumber
value from the certificate.
getSerialNumber()
- Method in class java.security.cert.
X509CertSelector
Returns the serialNumber criterion.
getSerialNumber()
- Method in class java.security.cert.
X509CRLEntry
Gets the serial number from this X509CRLEntry,
 the
userCertificate
.
getSerialNumber()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the
serialNumber
value from the certificate.
getSerialNumber()
- Method in interface javax.xml.crypto.dsig.keyinfo.
X509IssuerSerial
Returns the serial number of this
X509IssuerSerial
.
getSerialVersionUID()
- Method in class java.io.
ObjectStreamClass
Return the serialVersionUID for this class.
getServer()
- Method in class com.sun.net.httpserver.
HttpContext
Returns the server this context was created with.
getServer()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the service principal associated with this ticket.
getServerAliases(String, Principal[])
- Method in interface javax.net.ssl.
X509KeyManager
Get the matching aliases for authenticating the server side of a secure
 socket given the public key type and the list of
 certificate issuer authorities recognized by the peer (if any).
getServerCertificateChain()
- Method in class java.net.
SecureCacheResponse
Returns the server's certificate chain, which was established as
 part of defining the session in the original connection that
 retrieved the network resource, from cache.
getServerCertificates()
- Method in class javax.net.ssl.
HttpsURLConnection
Returns the server's certificate chain which was established
 as part of defining the session.
getServerName()
- Method in class java.security.cert.
LDAPCertStoreParameters
Returns the DNS name of the LDAP server.
getServerNames()
- Method in class javax.net.ssl.
SSLParameters
Returns a
List
containing all
SNIServerName
s of the
 Server Name Indication (SNI) parameter, or null if none has been set.
getServerSessionContext()
- Method in class javax.net.ssl.
SSLContext
Returns the server session context, which represents the set of
 SSL sessions available for use during the handshake phase of
 server-side SSL sockets.
getServerSocketFactory()
- Method in class javax.net.ssl.
SSLContext
Returns a
ServerSocketFactory
object for
 this context.
getService()
- Method in interface javax.lang.model.element.
ModuleElement.ProvidesDirective
Returns the service being provided.
getService()
- Method in interface javax.lang.model.element.
ModuleElement.UsesDirective
Returns the service that is used.
getService(BeanContextChild, Object, Class<?>, Object, BeanContextServiceRevokedListener)
- Method in interface java.beans.beancontext.
BeanContextServices
A
BeanContextChild
, or any arbitrary object
 associated with a
BeanContextChild
, may obtain
 a reference to a currently registered service from its
 nesting
BeanContextServices
via invocation of this method.
getService(BeanContextChild, Object, Class<?>, Object, BeanContextServiceRevokedListener)
- Method in class java.beans.beancontext.
BeanContextServicesSupport
obtain a service which may be delegated
getService(BeanContextServices, Object, Class<?>, Object)
- Method in interface java.beans.beancontext.
BeanContextServiceProvider
Invoked by
BeanContextServices
, this method
 requests an instance of a
 service from this
BeanContextServiceProvider
.
getService(BeanContextServices, Object, Class<?>, Object)
- Method in class java.beans.beancontext.
BeanContextServicesSupport.BCSSProxyServiceProvider
getService(String, String)
- Method in class java.security.
Provider
Get the service describing this Provider's implementation of the
 specified type of this algorithm or alias.
getServiceClass()
- Method in class java.beans.beancontext.
BeanContextServiceAvailableEvent
Gets the service class that is the subject of this notification.
getServiceClass()
- Method in class java.beans.beancontext.
BeanContextServiceRevokedEvent
Gets the service class that is the subject of this notification
getServiceLoader(JavaFileManager.Location, Class<S>)
- Method in class javax.tools.
ForwardingJavaFileManager
getServiceLoader(JavaFileManager.Location, Class<S>)
- Method in interface javax.tools.
JavaFileManager
Get a service loader for a specific service class from a given location.
getServiceName()
- Method in interface com.sun.source.tree.
ProvidesTree
Returns the name of the service type being provided.
getServiceName()
- Method in interface com.sun.source.tree.
UsesTree
Returns the name of the service type.
getServiceProvider()
- Method in class java.beans.beancontext.
BeanContextServicesSupport.BCSSServiceProvider
Returns the service provider.
getServiceProviderByClass(Class<T>)
- Method in class javax.imageio.spi.
ServiceRegistry
Returns the currently registered service provider object that
 is of the given class type.
getServiceProviders(Class<T>, boolean)
- Method in class javax.imageio.spi.
ServiceRegistry
Returns an
Iterator
containing all registered
 service providers in the given category.
getServiceProviders(Class<T>, ServiceRegistry.Filter, boolean)
- Method in class javax.imageio.spi.
ServiceRegistry
Returns an
Iterator
containing service provider
 objects within a given category that satisfy a criterion
 imposed by the supplied
ServiceRegistry.Filter
object's
filter
method.
getServices()
- Method in class java.security.
Provider
Get an unmodifiable Set of all services supported by
 this
Provider
.
getServicesBeanInfo()
- Method in interface java.beans.beancontext.
BeanContextServiceProviderBeanInfo
Gets a
BeanInfo
array, one for each
 service class or interface statically available
 from this ServiceProvider.
getServiceType()
- Method in interface com.sun.source.doctree.
ProvidesTree
Returns the name of the service type being documented.
getServiceType()
- Method in interface com.sun.source.doctree.
UsesTree
Returns the name of the service type being documented.
getServiceUIFactory()
- Method in interface javax.print.
PrintService
Returns a factory for UI components which allow users to interact with
 the service in various roles.
getSession()
- Method in class javax.net.ssl.
HandshakeCompletedEvent
Returns the session that triggered this event.
getSession()
- Method in class javax.net.ssl.
SSLEngine
Returns the
SSLSession
in use in this
SSLEngine
.
getSession()
- Method in class javax.net.ssl.
SSLSessionBindingEvent
Returns the SSLSession into which the listener is being bound or
 from which the listener is being unbound.
getSession()
- Method in class javax.net.ssl.
SSLSocket
Returns the SSL Session in use by this connection.
getSession(byte[])
- Method in interface javax.net.ssl.
SSLSessionContext
Returns the
SSLSession
bound to the specified session id.
getSessionCacheSize()
- Method in interface javax.net.ssl.
SSLSessionContext
Returns the size of the cache used for storing
SSLSession
objects grouped under this
SSLSessionContext
.
getSessionContext()
- Method in interface javax.net.ssl.
SSLSession
Returns the context in which this session is bound.
getSessionKey()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the session key associated with this ticket.
getSessionKeyType()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the key type of the session key associated with this
 ticket as defined by the Kerberos Protocol Specification.
getSessionTimeout()
- Method in interface javax.net.ssl.
SSLSessionContext
Returns the timeout limit of
SSLSession
objects grouped
 under this
SSLSessionContext
.
getSettingDescriptors()
- Method in class jdk.jfr.
EventType
Returns an immutable list of the setting descriptors that describe the available
 event settings for this event type.
getSettingDescriptors()
- Method in class jdk.management.jfr.
EventTypeInfo
Returns settings for the event type associated with this
EventTypeInfo
.
getSettings()
- Method in class jdk.jfr.
Configuration
Returns the settings that specifies how a recording is configured.
getSettings()
- Method in class jdk.jfr.
Recording
Returns settings used by this recording.
getSettings()
- Method in class jdk.management.jfr.
ConfigurationInfo
Returns the settings for the configuration associated with this
ConfigurationInfo
.
getSettings()
- Method in class jdk.management.jfr.
RecordingInfo
Returns the settings for the recording associated with this
RecordingInfo
.
getSeverity()
- Method in enum class java.lang.
System.Logger.Level
Returns the severity of this level.
getSeverity()
- Method in interface org.w3c.dom.
DOMError
The severity of the error, either
SEVERITY_WARNING
,
SEVERITY_ERROR
, or
SEVERITY_FATAL_ERROR
.
getShadowColor()
- Method in class javax.swing.border.
EtchedBorder
Returns the shadow color of the etched border.
getShadowColor()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the shadow color.
getShadowColor(Component)
- Method in class javax.swing.border.
EtchedBorder
Returns the shadow color of the etched border
 when rendered on the specified component.
getShadowInnerColor()
- Method in class javax.swing.border.
BevelBorder
Returns the inner shadow color of the bevel border.
getShadowInnerColor(Component)
- Method in class javax.swing.border.
BevelBorder
Returns the inner shadow color of the bevel border
 when rendered on the specified component.
getShadowOuterColor()
- Method in class javax.swing.border.
BevelBorder
Returns the outer shadow color of the bevel border.
getShadowOuterColor(Component)
- Method in class javax.swing.border.
BevelBorder
Returns the outer shadow color of the bevel border
 when rendered on the specified component.
getShape()
- Method in class java.awt.
Window
Returns the shape of the window.
getShape()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
The shape of the active area.
getShape()
- Method in interface org.w3c.dom.html.
HTMLAreaElement
The shape of the active area.
getShaper(int)
- Static method in class java.awt.font.
NumericShaper
Returns a shaper for the provided unicode range.
getShaper(NumericShaper.Range)
- Static method in class java.awt.font.
NumericShaper
Returns a shaper for the provided Unicode
 range.
getSharedAncestor(DefaultMutableTreeNode)
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the nearest common ancestor to this node and
aNode
.
getSharedInstance()
- Static method in class javax.swing.
PopupFactory
Returns the shared
PopupFactory
which can be used
 to obtain
Popup
s.
getSharedQueuedThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Returns a collection containing threads that may be waiting to
 acquire in shared mode.
getSharedQueuedThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Returns a collection containing threads that may be waiting to
 acquire in shared mode.
getShearInstance(double, double)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform representing a shearing transformation.
getShearX()
- Method in class java.awt.geom.
AffineTransform
Returns the X coordinate shearing element (m01) of the 3x3
 affine transformation matrix.
getShearY()
- Method in class java.awt.geom.
AffineTransform
Returns the Y coordinate shearing element (m10) of the 3x3
 affine transformation matrix.
getSheet()
- Method in interface org.w3c.dom.stylesheets.
LinkStyle
The style sheet.
getShift()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.FileIcon16
Returns a shift of the icon.
getShift()
- Method in class javax.swing.plaf.metal.
MetalIconFactory.FolderIcon16
Returns a shift of the icon.
getShiftKey()
- Method in interface org.w3c.dom.events.
MouseEvent
Used to indicate whether the 'shift' key was depressed during the
 firing of the event.
getShort()
- Method in class java.nio.
ByteBuffer
Relative
get
method for reading a short value.
getShort(int)
- Method in class java.nio.
ByteBuffer
Absolute
get
method for reading a short value.
getShort(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
SMALLINT
parameter
 as a
short
in the Java programming language.
getShort(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
short
in the Java programming language.
getShort(Object)
- Method in class java.lang.reflect.
Field
Gets the value of a static or instance field of type
short
or of another primitive type convertible to
 type
short
via a widening conversion.
getShort(Object, int)
- Static method in class java.lang.reflect.
Array
Returns the value of the indexed component in the specified
 array object, as a
short
.
getShort(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
SMALLINT
parameter as a
short
in the Java programming language.
getShort(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
short
in the Java programming language.
getShort(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
short
or of another primitive
 type convertible to type
short
by a widening conversion.
getShortcut()
- Method in class java.awt.
MenuItem
Get the
MenuShortcut
object associated with this
 menu item,
getShortcutMenuItem(MenuShortcut)
- Method in class java.awt.
MenuBar
Gets the instance of
MenuItem
associated
 with the specified
MenuShortcut
object,
 or
null
if none of the menu items being managed
 by this menu bar is associated with the specified menu
 shortcut.
getShortDescription()
- Method in class java.beans.
FeatureDescriptor
Gets the short description of this feature.
getShortMonths()
- Method in class java.text.
DateFormatSymbols
Gets short month strings.
getShortParameter(int)
- Method in class java.awt.image.renderable.
ParameterBlock
A convenience method to return a parameter as a short.
getShortWeekdays()
- Method in class java.text.
DateFormatSymbols
Gets short weekday strings.
getShowDeleted()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves a
boolean
indicating whether rows marked
 for deletion appear in the set of current rows.
getShowDeleted()
- Method in interface javax.sql.rowset.
CachedRowSet
Retrieves a
boolean
indicating whether rows marked
 for deletion appear in the set of current rows.
getShowDeleted()
- Method in interface javax.sql.rowset.
JdbcRowSet
Retrieves a
boolean
indicating whether rows marked
 for deletion appear in the set of current rows.
getShowHorizontalLines()
- Method in class javax.swing.
JTable
Returns true if the table draws horizontal lines between cells, false if it
 doesn't.
getShowsRootHandles()
- Method in class javax.swing.
JTree
Returns the value of the
showsRootHandles
property.
getShowsRootHandles()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Returns
true
if the root handles are to be displayed.
getShowVerticalLines()
- Method in class javax.swing.
JTable
Returns true if the table draws vertical lines between cells, false if it
 doesn't.
getSiblingCount()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the number of siblings of this node.
getSides()
- Method in class java.awt.
JobAttributes
Returns how consecutive pages should be imposed upon the sides of the
 print medium for jobs using these attributes.
getSigAlgName()
- Method in class java.security.cert.
X509Certificate
Gets the signature algorithm name for the certificate
 signature algorithm.
getSigAlgName()
- Method in class java.security.cert.
X509CRL
Gets the signature algorithm name for the CRL
 signature algorithm.
getSigAlgName()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the signature algorithm name for the certificate
 signature algorithm.
getSigAlgOID()
- Method in class java.security.cert.
X509Certificate
Gets the signature algorithm OID string from the certificate.
getSigAlgOID()
- Method in class java.security.cert.
X509CRL
Gets the signature algorithm OID string from the CRL.
getSigAlgOID()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the signature algorithm OID string from the certificate.
getSigAlgParams()
- Method in class java.security.cert.
X509Certificate
Gets the DER-encoded signature algorithm parameters from this
 certificate's signature algorithm.
getSigAlgParams()
- Method in class java.security.cert.
X509CRL
Gets the DER-encoded signature algorithm parameters from this
 CRL's signature algorithm.
getSigAlgParams()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the DER-encoded signature algorithm parameters from this
 certificate's signature algorithm.
getSign()
- Method in class javax.xml.datatype.
Duration
Returns the sign of this duration in -1,0, or 1.
getSignature()
- Method in interface com.sun.source.doctree.
ReferenceTree
Returns the signature of the Java language element being referenced,
 as found in
@see
and similar nodes.
getSignature()
- Method in class java.security.cert.
X509Certificate
Gets the
signature
value (the raw signature bits) from
 the certificate.
getSignature()
- Method in class java.security.cert.
X509CRL
Gets the
signature
value (the raw signature bits) from
 the CRL.
getSignature()
- Method in class java.security.
SignedObject
Retrieves the signature on the signed object, in the form of a
 byte array.
getSignature()
- Method in class javax.management.
MBeanConstructorInfo
Returns the list of parameters for this constructor.
getSignature()
- Method in class javax.management.
MBeanOperationInfo
Returns the list of parameters for this operation.
getSignature()
- Method in interface javax.management.openmbean.
OpenMBeanConstructorInfo
Returns an array of
OpenMBeanParameterInfo
instances
 describing each parameter in the signature of the constructor
 described by this
OpenMBeanConstructorInfo
instance.
getSignature()
- Method in interface javax.management.openmbean.
OpenMBeanOperationInfo
Returns an array of
OpenMBeanParameterInfo
instances
 describing each parameter in the signature of the operation
 described by this
OpenMBeanOperationInfo
instance.
getSignatureAlgorithm()
- Method in class jdk.security.jarsigner.
JarSigner
Returns the signature algorithm for this
JarSigner
.
getSignatureMethod()
- Method in interface javax.xml.crypto.dsig.
SignedInfo
Returns the signature method of this
SignedInfo
.
getSignatureSchemes()
- Method in class javax.net.ssl.
SSLParameters
Returns a prioritized array of signature scheme names that can be used
 over the SSL/TLS/DTLS protocols.
getSignatureValue()
- Method in interface javax.xml.crypto.dsig.
XMLSignature
Returns the signature value of this
XMLSignature
.
getSignedInfo()
- Method in interface javax.xml.crypto.dsig.
XMLSignature
Returns the signed info of this
XMLSignature
.
getSignerCertPath()
- Method in class java.security.
CodeSigner
Returns the signer's certificate path.
getSignerCertPath()
- Method in class java.security.
Timestamp
Returns the certificate path for the Timestamping Authority.
getSignerName()
- Method in class jdk.security.jarsigner.
JarSigner
Returns the signer name of this
JarSigner
.
getSigners()
- Method in class java.lang.
Class
Gets the signers of this class.
getSigProvider()
- Method in class java.security.cert.
PKIXParameters
Returns the signature provider's name, or
null
if not set.
getSimpleName()
- Method in interface com.sun.source.tree.
ClassTree
Returns the simple name of this type declaration.
getSimpleName()
- Method in class java.lang.
Class
Returns the simple name of the underlying class as given in the
 source code.
getSimpleName()
- Method in interface javax.lang.model.element.
Element
Returns the simple (unqualified) name of this element.
getSimpleName()
- Method in interface javax.lang.model.element.
ExecutableElement
Returns the simple name of a constructor, method, or
 initializer.
getSimpleName()
- Method in interface javax.lang.model.element.
ModuleElement
Returns the simple name of this module.
getSimpleName()
- Method in interface javax.lang.model.element.
PackageElement
Returns the simple name of this package.
getSimpleName()
- Method in interface javax.lang.model.element.
RecordComponentElement
Returns the simple name of this record component.
getSimpleName()
- Method in interface javax.lang.model.element.
TypeElement
Returns the simple name of this class or interface element.
getSimpleName()
- Method in interface javax.lang.model.element.
VariableElement
Returns the simple name of this variable element.
getSimpleNameLength()
- Method in class jdk.jshell.
SourceCodeAnalysis.QualifiedNames
The length of the simple name in the original code for which the
 qualified names where gathered.
getSingleNodeValue()
- Method in interface org.w3c.dom.xpath.
XPathResult
The value of this single node result, which may be
null
.
getSize()
- Method in class com.sun.java.accessibility.util.
Translator
Returns the current size of this object.
getSize()
- Method in class java.awt.
Component.AccessibleAWTComponent
Returns the size of this object in the form of a
Dimension
object.
getSize()
- Method in class java.awt.
Component
Returns the size of this component in the form of a
Dimension
object.
getSize()
- Method in class java.awt.
Dimension
Gets the size of this
Dimension
object.
getSize()
- Method in class java.awt.
Font
Returns the point size of this
Font
, rounded to
 an integer.
getSize()
- Method in class java.awt.image.
DataBuffer
Returns the size (in array elements) of all banks.
getSize()
- Method in class java.awt.
List.AccessibleAWTList.AccessibleAWTListChild
Returns the size of this object in the form of a Dimension
 object.
getSize()
- Method in class java.awt.
MenuComponent.AccessibleAWTMenuComponent
Returns the size of this object in the form of a
Dimension
object.
getSize()
- Method in class java.awt.
Rectangle
Gets the size of this
Rectangle
, represented by
 the returned
Dimension
.
getSize()
- Method in class java.awt.
SplashScreen
Returns the size of the splash screen window as a
Dimension
.
getSize()
- Method in class java.awt.
TrayIcon
Returns the size, in pixels, of the space that the tray icon
 occupies in the system tray.
getSize()
- Method in class java.util.zip.
ZipEntry
Returns the uncompressed size of the entry data.
getSize()
- Method in interface javax.accessibility.
AccessibleComponent
Returns the size of this object in the form of a
Dimension
object.
getSize()
- Method in class javax.swing.
DefaultComboBoxModel
getSize()
- Method in class javax.swing.
DefaultListModel
Returns the number of components in this list.
getSize()
- Method in class javax.swing.
JList.AccessibleJList.AccessibleJListChild
getSize()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableCell
getSize()
- Method in class javax.swing.
JTree.AccessibleJTree.AccessibleJTreeNode
getSize()
- Method in interface javax.swing.
ListModel
Returns the length of the list.
getSize()
- Method in class javax.swing.plaf.basic.
BasicDirectoryModel
getSize()
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.DirectoryComboBoxModel
getSize()
- Method in class javax.swing.plaf.metal.
MetalFileChooserUI.FilterComboBoxModel
getSize()
- Method in class javax.swing.table.
JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry
getSize()
- Method in class jdk.jfr.
Recording
Returns the current size of this recording in the disk repository,
 measured in bytes.
getSize()
- Method in class jdk.management.jfr.
RecordingInfo
Returns the amount data recorded by recording. associated with this
RecordingInfo
.
getSize()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the size property definition in CSS2.
getSize()
- Method in interface org.w3c.dom.html.
HTMLBaseFontElement
Font size.
getSize()
- Method in interface org.w3c.dom.html.
HTMLFontElement
Font size.
getSize()
- Method in interface org.w3c.dom.html.
HTMLHRElement
The height of the rule.
getSize()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Size information.
getSize()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
Number of visible rows.
getSize(int)
- Method in class javax.print.attribute.
Size2DSyntax
Get this two-dimensional size attribute's dimensions in the given units
 as floating-point values.
getSize(int)
- Method in class javax.swing.
SizeSequence
Returns the size of the specified entry.
getSize(Dimension)
- Method in class java.awt.
Component
Stores the width/height of this component into "return value"
rv
and return
rv
.
getSize(Dimension)
- Method in class javax.swing.
JComponent
Stores the width/height of this component into "return value"
rv
and returns
rv
.
getSize2D()
- Method in class java.awt.
Font
Returns the point size of this
Font
in
float
value.
getSizeButtonsToSameWidth()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Returns
true
, basic L&F wants all the buttons to have the same
 width.
getSizeForComponent(Component)
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Returns the size a component would have if used as a cell renderer.
getSizeOfComponent(Component)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Returns the width of the passed in component.
getSizeOfType(int)
- Static method in class javax.imageio.plugins.tiff.
TIFFTag
Returns the number of bytes used to store a value of the given
 data type.
getSizes()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Returns the sizes of the components.
getSizes()
- Method in class javax.swing.
SizeSequence
Returns the size of all entries.
getSizingIcon(AbstractButton)
- Method in class javax.swing.plaf.synth.
SynthButtonUI
Returns the Icon used in calculating the
 preferred/minimum/maximum size.
getSizingIcon(AbstractButton)
- Method in class javax.swing.plaf.synth.
SynthRadioButtonUI
Returns the Icon used in calculating the
 preferred/minimum/maximum size.
getSlaveSyncMode()
- Method in interface javax.sound.midi.
Sequencer
Obtains the current slave synchronization mode for this sequencer.
getSlaveSyncModes()
- Method in interface javax.sound.midi.
Sequencer
Obtains the set of slave synchronization modes supported by the
 sequencer.
getSlot(int)
- Method in class netscape.javascript.
JSObject
Retrieves an indexed member of a JavaScript object.
getSmallDisplayIcon()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Returns the small display icon for the panel.
getSmallestMaximum()
- Method in class java.time.temporal.
ValueRange
Gets the smallest possible maximum value that the field can take.
getSnapshot()
- Method in class java.awt.image.
VolatileImage
Returns a static snapshot image of this object.
getSnapshotLength()
- Method in interface org.w3c.dom.xpath.
XPathResult
The number of nodes in the result snapshot.
getSnapToTicks()
- Method in class javax.swing.
JSlider
Returns true if the knob (and the data value it represents)
 resolve to the closest tick mark next to where the user
 positioned the knob.
getSNIMatchers()
- Method in class javax.net.ssl.
SSLParameters
Returns a
Collection
containing all
SNIMatcher
s of the
 Server Name Indication (SNI) parameter, or null if none has been set.
getSnippet()
- Method in exception class jdk.jshell.
UnresolvedReferenceException
Return the Snippet which has the unresolved reference(s).
getSocket()
- Method in class javax.net.ssl.
HandshakeCompletedEvent
Returns the socket which is the source of this event.
getSocketAddress()
- Method in class java.net.
DatagramPacket
Returns the
SocketAddress
(usually
IP address
+
port number
) of the remote host that this packet
 is being sent to or is coming from.
getSocketFactory()
- Static method in class java.rmi.server.
RMISocketFactory
Returns the socket factory set by the
setSocketFactory
method.
getSocketFactory()
- Method in class javax.net.ssl.
SSLContext
Returns a
SocketFactory
object for this
 context.
getSoftFailExceptions()
- Method in class java.security.cert.
PKIXRevocationChecker
Returns a list containing the exceptions that are ignored by the
 revocation checker when the
SOFT_FAIL
option
 is set.
getSoLinger()
- Method in class java.net.
Socket
Returns setting for
SO_LINGER
.
getSolo()
- Method in interface javax.sound.midi.
MidiChannel
Obtains the current solo state for this channel.
getSortKeys()
- Method in class javax.swing.
DefaultRowSorter
Returns the current sort keys.
getSortKeys()
- Method in class javax.swing.
RowSorter
Returns the current sort keys.
getSortOrder()
- Method in class javax.swing.
RowSorter.SortKey
Returns the sort order of the column.
getSortsOnUpdates()
- Method in class javax.swing.
DefaultRowSorter
Returns true if  a sort should happen when the underlying
 model is updated; otherwise, returns false.
getSoTimeout()
- Method in class java.net.
DatagramSocket
Retrieve setting for SO_TIMEOUT.  0 returns implies that the
 option is disabled (i.e., timeout of infinity).
getSoTimeout()
- Method in class java.net.
ServerSocket
Retrieve setting for
SO_TIMEOUT
.
 0 returns implies that the option is disabled (i.e., timeout of infinity).
getSoTimeout()
- Method in class java.net.
Socket
Returns setting for
SO_TIMEOUT
.
 0 returns implies that the option is disabled (i.e., timeout of infinity).
getSoundbank()
- Method in class javax.sound.midi.
SoundbankResource
Obtains the sound bank that contains this
SoundbankResource
.
getSoundbank(File)
- Static method in class javax.sound.midi.
MidiSystem
Constructs a
Soundbank
by reading it from the specified
File
.
getSoundbank(File)
- Method in class javax.sound.midi.spi.
SoundbankReader
Obtains a soundbank object from the
File
provided.
getSoundbank(InputStream)
- Static method in class javax.sound.midi.
MidiSystem
Constructs a MIDI sound bank by reading it from the specified stream.
getSoundbank(InputStream)
- Method in class javax.sound.midi.spi.
SoundbankReader
Obtains a soundbank object from the
InputStream
provided.
getSoundbank(URL)
- Static method in class javax.sound.midi.
MidiSystem
Constructs a
Soundbank
by reading it from the specified URL.
getSoundbank(URL)
- Method in class javax.sound.midi.spi.
SoundbankReader
Obtains a soundbank object from the
URL
provided.
getSource()
- Method in class com.sun.java.accessibility.util.
Translator
Get the source
Object
of the
Translator
.
getSource()
- Method in class java.awt.image.
AbstractMultiResolutionImage
This method simply delegates to the same method on the base image and
 it is equivalent to:
getBaseImage().getSource()
.
getSource()
- Method in class java.awt.image.
BufferedImage
Returns the object that produces the pixels for the image.
getSource()
- Method in class java.awt.
Image
Gets the object that produces the pixels for the image.
getSource()
- Method in class java.awt.image.
VolatileImage
This returns an ImageProducer for this VolatileImage.
getSource()
- Method in class java.beans.
PropertyEditorSupport
Returns the bean that is used as the
 source of events.
getSource()
- Method in class java.util.
EventObject
The object on which the Event initially occurred.
getSource()
- Method in class javax.swing.event.
RowSorterEvent
Returns the source of the event as a
RowSorter
.
getSource()
- Method in interface javax.tools.
Diagnostic
Returns the source object associated with this diagnostic.
getSource(int)
- Method in class java.awt.image.renderable.
ParameterBlock
Returns a source as a general Object.
getSource(Class<T>)
- Method in interface java.sql.
SQLXML
Returns a Source for reading the XML value designated by this SQLXML instance.
getSourceActions()
- Method in class java.awt.dnd.
DragGestureRecognizer
This method returns an int representing the
 type of action(s) this Drag and Drop
 operation will support.
getSourceActions()
- Method in class java.awt.dnd.
DragSourceContext
Returns a bitwise mask of
DnDConstants
that
 represent the set of drop actions supported by the drag source for the
 drag operation associated with this
DragSourceContext
.
getSourceActions()
- Method in class java.awt.dnd.
DropTargetDragEvent
This method returns the source drop actions.
getSourceActions()
- Method in class java.awt.dnd.
DropTargetDropEvent
This method returns the source drop actions.
getSourceActions(JComponent)
- Method in class javax.swing.
TransferHandler
Returns the type of transfer actions supported by the source;
 any bitwise-OR combination of
COPY
,
MOVE
and
LINK
.
getSourceAsBeanContextServices()
- Method in class java.beans.beancontext.
BeanContextServiceAvailableEvent
Gets the source as a reference of type
BeanContextServices
.
getSourceAsBeanContextServices()
- Method in class java.beans.beancontext.
BeanContextServiceRevokedEvent
Gets the source as a reference of type
BeanContextServices
getSourceAsDragGestureRecognizer()
- Method in class java.awt.dnd.
DragGestureEvent
Returns the source as a
DragGestureRecognizer
.
getSourceBands()
- Method in class javax.imageio.
IIOParam
Returns the set of source bands to be used.
getSourceClassName()
- Method in class java.util.logging.
LogRecord
Get the  name of the class that (allegedly) issued the logging request.
getSourceDataLine(AudioFormat)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains a source data line that can be used for playing back audio data
 in the format specified by the
AudioFormat
object.
getSourceDataLine(AudioFormat, Mixer.Info)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains a source data line that can be used for playing back audio data
 in the format specified by the
AudioFormat
object, provided by
 the mixer specified by the
Mixer.Info
object.
getSourceDropActions()
- Method in class javax.swing.
TransferHandler.TransferSupport
Returns the drag source's supported drop actions, when this
TransferSupport
represents a drop.
getSourceElement()
- Method in class javax.swing.event.
HyperlinkEvent
Returns the
Element
that corresponds to the source of the
 event.
getSourceEncodings()
- Method in class javax.sound.sampled.spi.
FormatConversionProvider
Obtains the set of source format encodings from which format conversion
 services are provided by this provider.
getSourceFile()
- Method in interface com.sun.source.tree.
CompilationUnitTree
Returns the file object containing the source for this compilation unit.
getSourceFile()
- Method in class com.sun.source.util.
TaskEvent
Returns the source file for this event.
getSourceLineInfo()
- Method in interface javax.sound.sampled.
Mixer
Obtains information about the set of source lines supported by this
 mixer.
getSourceLineInfo(Line.Info)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains information about all source lines of a particular type that are
 supported by the installed mixers.
getSourceLineInfo(Line.Info)
- Method in interface javax.sound.sampled.
Mixer
Obtains information about source lines of a particular type supported by
 the mixer.
getSourceLines()
- Method in interface javax.sound.sampled.
Mixer
Obtains the set of all source lines currently open to this mixer.
getSourceMaxProgressivePass()
- Method in class javax.imageio.
ImageReadParam
If
getSourceNumProgressivePasses
is equal to
Integer.MAX_VALUE
, returns
Integer.MAX_VALUE
.
getSourceMethodName()
- Method in class java.util.logging.
LogRecord
Get the  name of the method that (allegedly) issued the logging request.
getSourceMinProgressivePass()
- Method in class javax.imageio.
ImageReadParam
Returns the index of the first progressive pass that will be
 decoded.
getSourceNumProgressivePasses()
- Method in class javax.imageio.
ImageReadParam
Returns the number of the progressive passes that will be
 decoded.
getSourcePositions()
- Method in class com.sun.source.util.
DocTrees
Returns a utility object for accessing the source positions
 of documentation tree nodes.
getSourcePositions()
- Method in class com.sun.source.util.
Trees
Returns a utility object for obtaining source positions.
getSourceRegion()
- Method in class javax.imageio.
IIOParam
Returns the source region to be used.
getSourceRegion(ImageReadParam, int, int)
- Static method in class javax.imageio.
ImageReader
A utility method that may be used by readers to compute the
 region of the source image that should be read, taking into
 account any source region and subsampling offset settings in
 the supplied
ImageReadParam
.
getSourceRenderSize()
- Method in class javax.imageio.
ImageReadParam
Returns the width and height of the source image as it
 will be rendered during decoding, if they have been set via the
setSourceRenderSize
method.
getSources()
- Method in class java.awt.image.
BufferedImage
Returns a
Vector
of
RenderedImage
objects that are
 the immediate sources, not the sources of these immediate sources,
 of image data for this
BufferedImage
.
getSources()
- Method in class java.awt.image.renderable.
ParameterBlock
Returns the entire Vector of sources.
getSources()
- Method in interface java.awt.image.renderable.
RenderableImage
Returns a vector of RenderableImages that are the sources of
 image data for this RenderableImage.
getSources()
- Method in class java.awt.image.renderable.
RenderableImageOp
Returns a vector of RenderableImages that are the sources of
 image data for this RenderableImage.
getSources()
- Method in interface java.awt.image.
RenderedImage
Returns a vector of RenderedImages that are the immediate sources of
 image data for this RenderedImage.
getSourceString()
- Method in class java.text.
CollationKey
Returns the String that this CollationKey represents.
getSourceVersion()
- Method in interface javax.annotation.processing.
ProcessingEnvironment
Returns the source version that any generated
source
and
class
files should conform to.
getSourceVersion()
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns the source version of the source files that were read.
getSourceVersions()
- Method in interface javax.tools.
Tool
Returns the source versions of the Java programming language
 supported by this tool.
getSourceXSubsampling()
- Method in class javax.imageio.
IIOParam
Returns the number of source columns to advance for each pixel.
getSourceYSubsampling()
- Method in class javax.imageio.
IIOParam
Returns the number of rows to advance for each pixel.
getSouthPane()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Returns the south pane.
getSpaceAbove(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the space above setting.
getSpaceBelow(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the space below setting.
getSpan()
- Method in interface org.w3c.dom.html.
HTMLTableColElement
Indicates the number of columns in a group or affected by a grouping.
getSpan(int, int)
- Method in class javax.swing.text.
BoxView
Fetches the span of a particular child's current layout.
getSpan(GlyphView, int, int, TabExpander, float)
- Method in class javax.swing.text.
GlyphView.GlyphPainter
Determine the span the glyphs given a start location
 (for tab expansion).
getSpeak()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speak property definition in CSS2.
getSpeakHeader()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speak-header property definition in CSS2.
getSpeakNumeral()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speak-numeral property definition in CSS2.
getSpeakPunctuation()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speak-punctuation property definition in CSS2.
getSpecificationName()
- Method in class javax.management.
MBeanServerDelegate
Returns the full name of the JMX specification implemented
 by this product.
getSpecificationName()
- Method in interface javax.management.
MBeanServerDelegateMBean
Returns the full name of the JMX specification implemented
 by this product.
getSpecificationTitle()
- Method in class java.lang.
Package
Return the title of the specification that this package implements.
getSpecificationVendor()
- Method in class java.lang.
Package
Return the name of the organization, vendor,
 or company that owns and maintains the specification
 of the classes that implement this package.
getSpecificationVendor()
- Method in class javax.management.
MBeanServerDelegate
Returns the vendor of the JMX specification implemented
 by this product.
getSpecificationVendor()
- Method in interface javax.management.
MBeanServerDelegateMBean
Returns the vendor of the JMX specification implemented
 by this product.
getSpecificationVersion()
- Method in class java.lang.
Package
Returns the version number of the specification
 that this package implements.
getSpecificationVersion()
- Method in class javax.management.
MBeanServerDelegate
Returns the version of the JMX specification implemented
 by this product.
getSpecificationVersion()
- Method in interface javax.management.
MBeanServerDelegateMBean
Returns the version of the JMX specification implemented
 by this product.
getSpecified()
- Method in interface org.w3c.dom.
Attr
True
if this attribute was explicitly given a value in
 the instance document,
false
otherwise.
getSpecifiedElements()
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns the elements
specified
when the tool is invoked.
getSpecName()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the Java virtual machine specification name.
getSpecVendor()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the Java virtual machine specification vendor.
getSpecVersion()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the Java virtual machine specification version.
getSpeechRate()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the speech-rate property definition in CSS2.
getSpi(String)
- Method in class java.util.prefs.
AbstractPreferences
Return the value associated with the specified key at this preference
 node, or
null
if there is no association for this key, or the
 association cannot be determined at this time.
getSpinner()
- Method in class javax.swing.
JSpinner.DefaultEditor
Returns the
JSpinner
ancestor of this editor or
null
if none of the ancestors are a
JSpinner
.
getSplashScreen()
- Static method in class java.awt.
SplashScreen
Returns the
SplashScreen
object used for
 Java startup splash screen control on systems that support display.
getSplitPane()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Returns the
JSplitPane
this instance is currently contained
 in.
getSplitPaneBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JSplitPane
.
getSplitPaneDividerBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JSplitPane
divider.
getSQLException()
- Method in class javax.sql.
ConnectionEvent
Retrieves the
SQLException
for this
ConnectionEvent
object.
getSQLException()
- Method in class javax.sql.
StatementEvent
Returns the
SQLException
the driver is about to throw
getSQLKeywords()
- Method in interface java.sql.
DatabaseMetaData
Retrieves a comma-separated list of all of this database's SQL keywords
 that are NOT also SQL:2003 keywords.
getSQLState()
- Method in exception class java.sql.
SQLException
Retrieves the SQLState for this
SQLException
object.
getSQLStateType()
- Method in interface java.sql.
DatabaseMetaData
Indicates whether the SQLSTATE returned by
SQLException.getSQLState
is X/Open (now known as Open Group) SQL CLI or SQL:2003.
getSQLTypeName()
- Method in interface java.sql.
SQLData
Returns the fully-qualified
 name of the SQL user-defined type that this object represents.
getSQLTypeName()
- Method in interface java.sql.
Struct
Retrieves the SQL type name of the SQL structured type
 that this
Struct
object represents.
getSQLTypeName()
- Method in class javax.sql.rowset.serial.
SerialStruct
Retrieves the SQL type name for this
SerialStruct
object.
getSQLXML(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated
SQL XML
parameter as a
java.sql.SQLXML
object in the Java programming language.
getSQLXML(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in  the current row of
  this
ResultSet
as a
java.sql.SQLXML
object in the Java programming language.
getSQLXML(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated
SQL XML
parameter as a
java.sql.SQLXML
object in the Java programming language.
getSQLXML(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in  the current row of
  this
ResultSet
as a
java.sql.SQLXML
object in the Java programming language.
getSrc()
- Method in interface org.w3c.dom.html.
HTMLFrameElement
A URI designating the initial frame contents.
getSrc()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
A URI designating the initial frame contents.
getSrc()
- Method in interface org.w3c.dom.html.
HTMLImageElement
URI designating the source of this image.
getSrc()
- Method in interface org.w3c.dom.html.
HTMLInputElement
When the
type
attribute has the value "Image", this
 attribute specifies the location of the image to be used to decorate
 the graphical submit button.
getSrc()
- Method in interface org.w3c.dom.html.
HTMLScriptElement
URI designating an external script.
getSrcName()
- Method in interface org.ietf.jgss.
GSSContext
Returns the name of the context initiator.
getSSLContext()
- Method in class com.sun.net.httpserver.
HttpsConfigurator
Returns the
SSLContext
for this
HttpsConfigurator
.
getSSLParameters()
- Method in class javax.net.ssl.
SSLEngine
Returns the SSLParameters in effect for this SSLEngine.
getSSLParameters()
- Method in class javax.net.ssl.
SSLServerSocket
Returns the SSLParameters in effect for newly accepted connections.
getSSLParameters()
- Method in class javax.net.ssl.
SSLSocket
Returns the SSLParameters in effect for this SSLSocket.
getSSLSession()
- Method in class com.sun.net.httpserver.
HttpsExchange
Get the
SSLSession
for this exchange.
getSSLSession()
- Method in class java.net.
SecureCacheResponse
Returns an
Optional
containing the
SSLSession
in
 use on the original connection that retrieved the network resource.
getSSLSession()
- Method in class javax.net.ssl.
HttpsURLConnection
Returns an
Optional
containing the
SSLSession
in
 use on this connection.
getSSLSocketFactory()
- Method in class javax.net.ssl.
HttpsURLConnection
Gets the SSL socket factory to be used when creating sockets
 for secure https URL connections.
getStackTrace()
- Method in class java.lang.management.
ThreadInfo
Returns the stack trace of the thread
 associated with this
ThreadInfo
.
getStackTrace()
- Method in class java.lang.
Thread
Returns an array of stack trace elements representing the stack dump
 of this thread.
getStackTrace()
- Method in exception class java.lang.
Throwable
Provides programmatic access to the stack trace information printed by
Throwable.printStackTrace()
.
getStackTrace()
- Method in class jdk.jfr.consumer.
RecordedEvent
Returns the stack trace that was created when the event was committed, or
null
if the event lacks a stack trace.
getStamp()
- Method in class java.util.concurrent.atomic.
AtomicStampedReference
Returns the current value of the stamp.
getStandardChromaNode()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataNode
representing the chroma
 information of the standard
javax_imageio_1.0
metadata format, or
null
if no such information is
 available.
getStandardCompressionNode()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataNode
representing the
 compression information of the standard
javax_imageio_1.0
metadata format, or
null
if no such information is available.
getStandardDataNode()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataNode
representing the data
 format information of the standard
javax_imageio_1.0
metadata format, or
null
if no such information is available.
getStandardDimensionNode()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataNode
representing the
 dimension information of the standard
javax_imageio_1.0
metadata format, or
null
if no such information is available.
getStandardDocumentNode()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataNode
representing the document
 information of the standard
javax_imageio_1.0
metadata format, or
null
if no such information is
 available.
getStandardFileManager(DiagnosticListener<? super JavaFileObject>, Locale, Charset)
- Method in interface javax.tools.
DocumentationTool
Returns a new instance of the standard file manager implementation
 for this tool.
getStandardFileManager(DiagnosticListener<? super JavaFileObject>, Locale, Charset)
- Method in interface javax.tools.
JavaCompiler
Returns a new instance of the standard file manager implementation
 for this tool.
getStandardFormatInstance()
- Static method in class javax.imageio.metadata.
IIOMetadataFormatImpl
Returns an
IIOMetadataFormat
object describing the
 standard, plug-in neutral
javax.imageio_1.0
metadata document format described in the comment of the
javax.imageio.metadata
package.
getStandardOffset()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Gets the standard offset in force at the transition.
getStandardOffset(Instant)
- Method in class java.time.zone.
ZoneRules
Gets the standard offset for the specified instant in this zone.
getStandardTextNode()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataNode
representing the textual
 information of the standard
javax_imageio_1.0
metadata format, or
null
if no such information is
 available.
getStandardTileNode()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataNode
representing the tiling
 information of the standard
javax_imageio_1.0
metadata format, or
null
if no such information is
 available.
getStandardTransparencyNode()
- Method in class javax.imageio.metadata.
IIOMetadata
Returns an
IIOMetadataNode
representing the
 transparency information of the standard
javax_imageio_1.0
metadata format, or
null
if no such information is available.
getStandardTree()
- Method in class javax.imageio.metadata.
IIOMetadata
A utility method to return a tree of
IIOMetadataNode
s representing the metadata
 contained within this object according to the conventions of
 the standard
javax_imageio_1.0
metadata format.
getStandardWriter()
- Method in interface jdk.javadoc.doclet.
Reporter
Returns a writer that can be used to write non-diagnostic output,
 or
null
if no such writer is available.
getStandby()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Message to render while loading the object.
getStart()
- Method in class javax.swing.
SpinnerDateModel
Returns the first
Date
in the sequence.
getStart()
- Method in interface org.w3c.dom.html.
HTMLOListElement
Starting sequence number.
getStartContainer()
- Method in interface org.w3c.dom.ranges.
Range
Node within which the Range begins
getStartIndex()
- Method in class javax.accessibility.
AccessibleHyperlink
Gets the index with the hypertext document at which this link begins.
getStartIndex()
- Method in class javax.swing.
JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink
Get the index with the hypertext document at which this
 link begins
getStartOffset()
- Method in class javax.swing.text.
AbstractDocument.AbstractElement
Gets the starting offset in the model for the element.
getStartOffset()
- Method in class javax.swing.text.
AbstractDocument.BranchElement
Gets the starting offset in the model for the element.
getStartOffset()
- Method in class javax.swing.text.
AbstractDocument.LeafElement
Gets the starting offset in the model for the element.
getStartOffset()
- Method in class javax.swing.text.
AbstractWriter
Returns the first offset to be output.
getStartOffset()
- Method in interface javax.swing.text.
Element
Fetches the offset from the beginning of the document
 that this element begins at.
getStartOffset()
- Method in class javax.swing.text.
GlyphView
Fetches the portion of the model that this view is responsible for.
getStartOffset()
- Method in interface javax.swing.text.
Highlighter.Highlight
Gets the starting model offset for the highlight.
getStartOffset()
- Method in class javax.swing.text.html.
HTMLDocument.Iterator
Returns the start of the range for which the current occurrence of
 the tag is defined and has the same attributes.
getStartOffset()
- Method in class javax.swing.text.
View
Fetches the portion of the model for which this view is
 responsible.
getStartOffset()
- Method in interface org.w3c.dom.ranges.
Range
Offset within the starting node of the Range.
getStartPoint()
- Method in class java.awt.geom.
Arc2D
Returns the starting point of the arc.
getStartPoint()
- Method in class java.awt.
LinearGradientPaint
Returns a copy of the start point of the gradient axis.
getStartPosition()
- Method in class javax.swing.text.
AbstractDocument
Returns a position that represents the start of the document.
getStartPosition()
- Method in interface javax.swing.text.
Document
Returns a position that represents the start of the document.
getStartPosition()
- Method in interface javax.tools.
Diagnostic
Returns the character offset from the beginning of the file
 associated with this diagnostic that indicates the start of the
 problem.
getStartPosition()
- Method in class jdk.jshell.
Diag
Returns the character offset from the beginning of the file
 associated with this diagnostic that indicates the start of the
 problem.
getStartPosition(long)
- Method in interface com.sun.source.tree.
LineMap
Finds the start position of a line.
getStartPosition(CompilationUnitTree, DocCommentTree, DocTree)
- Method in interface com.sun.source.util.
DocSourcePositions
Returns the starting position of the tree within the comment within the file.
getStartPosition(CompilationUnitTree, Tree)
- Method in interface com.sun.source.util.
SourcePositions
Returns the starting position of tree within file.
getStartTime()
- Method in class com.sun.management.
GcInfo
Returns the start time of this GC in milliseconds
 since the Java virtual machine was started.
getStartTime()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the start time of the Java virtual machine in milliseconds.
getStartTime()
- Method in class javax.security.auth.kerberos.
KerberosTicket
Returns the start time for this ticket's validity period.
getStartTime()
- Method in class jdk.jfr.consumer.
RecordedEvent
Returns the start time of the event.
getStartTime()
- Method in class jdk.jfr.
Recording
Returns the time when this recording was started.
getStartTime()
- Method in class jdk.management.jfr.
RecordingInfo
Returns start time of the recording associated with this
RecordingInfo
, measured as ms since epoch, or
null
if the
 recording hasn't started.
getState()
- Method in class java.awt.
Checkbox
Determines whether this check box is in the "on" or "off" state.
getState()
- Method in class java.awt.
CheckboxMenuItem
Determines whether the state of this check box menu item
 is "on" or "off."
getState()
- Method in class java.awt.
Frame
Gets the state of this frame (obsolete).
getState()
- Method in class java.awt.im.
InputMethodHighlight
Returns the conversion state of the text range.
getState()
- Method in class java.lang.
Thread
Returns the state of this thread.
getState()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Returns the current value of synchronization state.
getState()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Returns the current value of synchronization state.
getState()
- Method in class javax.swing.
JCheckBoxMenuItem
Returns the selected-state of the item.
getState()
- Method in class javax.swing.
SwingWorker
Returns the
SwingWorker
state bound property.
getState()
- Method in class jdk.jfr.
Recording
Returns the recording state that this recording is currently in.
getState()
- Method in class jdk.management.jfr.
RecordingInfo
Returns a
String
representation of state of the recording
 associated with this
RecordingInfo
.
getStateChange()
- Method in class java.awt.event.
ItemEvent
Returns the type of state change (selected or deselected).
getStateLabel(boolean)
- Method in class javax.sound.sampled.
BooleanControl
Obtains the label for the specified state.
getStatement()
- Method in interface com.sun.source.tree.
DoWhileLoopTree
Returns the body of the loop.
getStatement()
- Method in interface com.sun.source.tree.
EnhancedForLoopTree
Returns the body of the loop.
getStatement()
- Method in interface com.sun.source.tree.
ForLoopTree
Returns the body of the
for
statement.
getStatement()
- Method in interface com.sun.source.tree.
LabeledStatementTree
Returns the statement that is labeled.
getStatement()
- Method in interface com.sun.source.tree.
WhileLoopTree
Returns the body of the loop.
getStatement()
- Method in interface java.sql.
ResultSet
Retrieves the
Statement
object that produced this
ResultSet
object.
getStatement()
- Method in class javax.sql.
StatementEvent
Returns the
PreparedStatement
that is being closed or is invalid
getStatements()
- Method in interface com.sun.source.tree.
BlockTree
Returns the statements comprising this block.
getStatements()
- Method in interface com.sun.source.tree.
CaseTree
For case with kind
CaseTree.CaseKind.STATEMENT
,
 returns the statements labeled by the case.
getStateToBind(Object, Name, Context, Hashtable<?, ?>)
- Static method in class javax.naming.spi.
NamingManager
Retrieves the state of an object for binding.
getStateToBind(Object, Name, Context, Hashtable<?, ?>)
- Method in interface javax.naming.spi.
StateFactory
Retrieves the state of an object for binding.
getStateToBind(Object, Name, Context, Hashtable<?, ?>, Attributes)
- Static method in class javax.naming.spi.
DirectoryManager
Retrieves the state of an object for binding when given the original
 object and its attributes.
getStateToBind(Object, Name, Context, Hashtable<?, ?>, Attributes)
- Method in interface javax.naming.spi.
DirStateFactory
Retrieves the state of an object for binding given the object and attributes
 to be transformed.
getStaticAttribute(Object)
- Static method in class javax.swing.text.
StyleContext
Returns the object previously registered with
registerStaticAttributeKey
.
getStaticAttributeKey(Object)
- Static method in class javax.swing.text.
StyleContext
Returns the String that
key
will be registered with.
getStaticFinal(MethodHandles.Lookup, String, Class<?>)
- Static method in class java.lang.invoke.
ConstantBootstraps
Returns the value of a static final field declared in the class which
 is the same as the field's type (or, for primitive-valued fields,
 declared in the wrapper class.)
getStaticFinal(MethodHandles.Lookup, String, Class<?>, Class<?>)
- Static method in class java.lang.invoke.
ConstantBootstraps
Returns the value of a static final field.
getStaticMethodNames(Class<?>)
- Static method in class jdk.dynalink.beans.
BeansLinker
Returns a set of names of all static methods of a class.
getStatus()
- Method in class java.awt.image.
PixelGrabber
Return the status of the pixels.
getStatus()
- Method in class javax.net.ssl.
SSLEngineResult
Gets the return value of this
SSLEngine
operation.
getStatus()
- Method in class javax.sound.midi.
MidiMessage
Obtains the status byte for the MIDI message.
getStatus()
- Method in interface javax.sql.rowset.spi.
SyncResolver
Retrieves the conflict status of the current row of this
SyncResolver
,
 which indicates the operation
 the
RowSet
object was attempting when the conflict occurred.
getStatusResponses()
- Method in class javax.net.ssl.
ExtendedSSLSession
Returns a
List
containing DER-encoded OCSP responses
 (using the ASN.1 type OCSPResponse defined in RFC 6960) for
 the client to verify status of the server's certificate during
 handshaking.
getStealCount()
- Method in class java.util.concurrent.
ForkJoinPool
Returns an estimate of the total number of completed tasks that
 were executed by a thread other than their submitter.
getStepSize()
- Method in class javax.swing.
SpinnerNumberModel
Returns the size of the value change computed by the
getNextValue
and
getPreviousValue
methods.
getStopTime()
- Method in class jdk.jfr.
Recording
Returns the time when this recording was stopped.
getStopTime()
- Method in class jdk.management.jfr.
RecordingInfo
Returns the actual or expected stop time of the recording associated with
 this
RecordingInfo
, measured as ms since epoch, or
null
if the expected or actual stop time is not known, which can only happen
 if the recording has not yet been stopped.
getStream(DataFlavor)
- Method in interface javax.accessibility.
AccessibleStreamable
Returns an
InputStream
for a
DataFlavor
.
getStream(String)
- Method in interface java.applet.
AppletContext
Deprecated.
Returns the stream to which specified key is associated within this
 applet context.
getStream(URL)
- Method in class javax.swing.
JEditorPane
Fetches a stream for the given URL, which is about to
 be loaded by the
setPage
method.
getStream(Instant, Instant)
- Method in class jdk.jfr.
Recording
Creates a data stream for a specified interval.
getStreamForBytes()
- Method in interface javax.print.
Doc
Obtains an input stream for extracting byte print data from this doc.
getStreamForBytes()
- Method in class javax.print.
SimpleDoc
Obtains an input stream for extracting byte print data from this doc.
getStreamKeys()
- Method in interface java.applet.
AppletContext
Deprecated.
Finds all the keys of the streams in this applet context.
getStreamMetadata()
- Method in class javax.imageio.
ImageReader
Returns an
IIOMetadata
object representing the
 metadata associated with the input source as a whole (i.e., not
 associated with any particular image), or
null
if
 the reader does not support reading metadata, is set to ignore
 metadata, or if no metadata is available.
getStreamMetadata(String, Set<String>)
- Method in class javax.imageio.
ImageReader
Returns an
IIOMetadata
object representing the
 metadata associated with the input source as a whole (i.e.,
 not associated with any particular image).
getStreamMetadataFormat(String)
- Method in class javax.imageio.spi.
ImageReaderWriterSpi
Returns an
IIOMetadataFormat
object describing the
 given stream metadata format, or
null
if no
 description is available.
getStreamPosition()
- Method in interface javax.imageio.stream.
ImageInputStream
Returns the current byte position of the stream.
getStreamPosition()
- Method in class javax.imageio.stream.
ImageInputStreamImpl
getStrength()
- Method in class java.security.
DrbgParameters.Instantiation
Returns the security strength in bits.
getStrength()
- Method in class java.security.
DrbgParameters.NextBytes
Returns the security strength requested in bits.
getStrength()
- Method in class java.text.
Collator
Returns this Collator's strength property.
getStress()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the stress property definition in CSS2.
getStrictErrorChecking()
- Method in interface org.w3c.dom.
Document
An attribute specifying whether error checking is enforced or not.
getStrikethroughOffset()
- Method in class java.awt.font.
LineMetrics
Returns the position of the strike-through line
 relative to the baseline.
getStrikethroughThickness()
- Method in class java.awt.font.
LineMetrics
Returns the thickness of the strike-through line.
getString()
- Method in interface java.sql.
SQLXML
Returns a string representation of the XML value designated by this SQLXML instance.
getString()
- Method in class javax.swing.
JProgressBar
Returns a
String
representation of the current progress.
getString()
- Method in class javax.swing.text.html.parser.
Entity
Returns the data as a
String
.
getString(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
CHAR
,
VARCHAR
, or
LONGVARCHAR
parameter as a
String
in the Java programming language.
getString(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
String
in the Java programming language.
getString(int, int)
- Method in interface javax.swing.text.
AbstractDocument.Content
Fetches a string of characters contained in the sequence.
getString(int, int)
- Method in class javax.swing.text.
GapContent
Retrieves a portion of the content.
getString(int, int)
- Method in class javax.swing.text.
StringContent
Retrieves a portion of the content.
getString(Object)
- Method in class javax.swing.
UIDefaults
If the value of
key
is a
String
return it,
 otherwise return
null
.
getString(Object)
- Static method in class javax.swing.
UIManager
Returns a string from the defaults.
getString(Object, Locale)
- Method in class javax.swing.
UIDefaults
If the value of
key
for the given
Locale
is a
String
return it, otherwise return
null
.
getString(Object, Locale)
- Static method in class javax.swing.
UIManager
Returns a string from the defaults that is appropriate for the
 given locale.
getString(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
CHAR
,
VARCHAR
,
 or
LONGVARCHAR
parameter as a
String
in
 the Java programming language.
getString(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
String
in the Java programming language.
getString(String)
- Method in class java.util.
ResourceBundle
Gets a string for the given key from this resource bundle or one of its parents.
getString(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
String
.
getString(SynthContext, Object, String)
- Method in class javax.swing.plaf.synth.
SynthStyle
Convenience method to get a specific style property whose value is
 a String.
getStringArray(String)
- Method in class java.util.
ResourceBundle
Gets a string array for the given key from this resource bundle or one of its parents.
getStringBounds(char[], int, int, FontRenderContext)
- Method in class java.awt.
Font
Returns the logical bounds of the specified array of characters
 in the specified
FontRenderContext
.
getStringBounds(char[], int, int, Graphics)
- Method in class java.awt.
FontMetrics
Returns the bounds of the specified array of characters
 in the specified
Graphics
context.
getStringBounds(String, int, int, FontRenderContext)
- Method in class java.awt.
Font
Returns the logical bounds of the specified
String
in
 the specified
FontRenderContext
.
getStringBounds(String, int, int, Graphics)
- Method in class java.awt.
FontMetrics
Returns the bounds of the specified
String
in the
 specified
Graphics
context.
getStringBounds(String, FontRenderContext)
- Method in class java.awt.
Font
Returns the logical bounds of the specified
String
in
 the specified
FontRenderContext
.
getStringBounds(String, Graphics)
- Method in class java.awt.
FontMetrics
Returns the bounds of the specified
String
in the
 specified
Graphics
context.
getStringBounds(CharacterIterator, int, int, FontRenderContext)
- Method in class java.awt.
Font
Returns the logical bounds of the characters indexed in the
 specified
CharacterIterator
in the
 specified
FontRenderContext
.
getStringBounds(CharacterIterator, int, int, Graphics)
- Method in class java.awt.
FontMetrics
Returns the bounds of the characters indexed in the specified
CharacterIterator
in the
 specified
Graphics
context.
getStringConverter()
- Method in class javax.swing.table.
TableRowSorter
Returns the object responsible for converting values from the
 model to strings.
getStringData()
- Method in interface org.w3c.dom.ls.
LSInput
String data to parse.
getStringFunctions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves a comma-separated list of string functions available with
 this database.
getStringNameType()
- Method in interface org.ietf.jgss.
GSSName
Returns the name type of the printable
 representation of this name that can be obtained from the
toString
method.
getStringPlacement(Graphics, String, int, int, int, int)
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Designate the place where the progress string will be painted.
getStringTable()
- Method in class javax.print.attribute.
EnumSyntax
Returns the string table for this enumeration value's enumeration class.
getStringTable()
- Method in class javax.print.attribute.standard.
Chromaticity
Returns the string table for class
Chromaticity
.
getStringTable()
- Method in class javax.print.attribute.standard.
ColorSupported
Returns the string table for class
ColorSupported
.
getStringTable()
- Method in class javax.print.attribute.standard.
Compression
Returns the string table for class
Compression
.
getStringTable()
- Method in class javax.print.attribute.standard.
DialogTypeSelection
Returns the string table for class
DialogTypeSelection
.
getStringTable()
- Method in class javax.print.attribute.standard.
Fidelity
Returns the string table for class
Fidelity
.
getStringTable()
- Method in class javax.print.attribute.standard.
Finishings
Returns the string table for class
Finishings
.
getStringTable()
- Method in class javax.print.attribute.standard.
JobSheets
Returns the string table for class
JobSheets
.
getStringTable()
- Method in class javax.print.attribute.standard.
JobState
Returns the string table for class
JobState
.
getStringTable()
- Method in class javax.print.attribute.standard.
JobStateReason
Returns the string table for class
JobStateReason
.
getStringTable()
- Method in class javax.print.attribute.standard.
MediaName
Returns the string table for class
MediaTray
.
getStringTable()
- Method in class javax.print.attribute.standard.
MediaSizeName
Returns the string table for class
MediaSizeName
.
getStringTable()
- Method in class javax.print.attribute.standard.
MediaTray
Returns the string table for class
MediaTray
.
getStringTable()
- Method in class javax.print.attribute.standard.
MultipleDocumentHandling
Returns the string table for class
MultipleDocumentHandling
.
getStringTable()
- Method in class javax.print.attribute.standard.
OrientationRequested
Returns the string table for class
OrientationRequested
.
getStringTable()
- Method in class javax.print.attribute.standard.
PDLOverrideSupported
Returns the string table for class
PDLOverrideSupported
.
getStringTable()
- Method in class javax.print.attribute.standard.
PresentationDirection
Returns the string table for class
PresentationDirection
.
getStringTable()
- Method in class javax.print.attribute.standard.
PrinterIsAcceptingJobs
Returns the string table for class
PrinterIsAcceptingJobs
.
getStringTable()
- Method in class javax.print.attribute.standard.
PrinterState
Returns the string table for class
PrinterState
.
getStringTable()
- Method in class javax.print.attribute.standard.
PrinterStateReason
Returns the string table for class
PrinterStateReason
.
getStringTable()
- Method in class javax.print.attribute.standard.
PrintQuality
Returns the string table for class
PrintQuality
.
getStringTable()
- Method in class javax.print.attribute.standard.
ReferenceUriSchemesSupported
Returns the string table for class
ReferenceUriSchemesSupported
.
getStringTable()
- Method in class javax.print.attribute.standard.
Severity
Returns the string table for class
Severity
.
getStringTable()
- Method in class javax.print.attribute.standard.
SheetCollate
Returns the string table for class
SheetCollate
.
getStringTable()
- Method in class javax.print.attribute.standard.
Sides
Returns the string table for class
Sides
.
getStringToCompare()
- Method in class javax.management.monitor.
StringMonitor
Gets the string to compare with the observed attribute common
 to all observed MBeans.
getStringToCompare()
- Method in interface javax.management.monitor.
StringMonitorMBean
Gets the string to compare with the observed attribute.
getStringValue()
- Method in interface org.w3c.dom.css.
CSSPrimitiveValue
This method is used to get the string value.
getStringValue()
- Method in interface org.w3c.dom.xpath.
XPathResult
The value of this string result.
getStringValue(int)
- Method in class javax.swing.
RowFilter.Entry
Returns the string value at the specified index.
getStringValueAt(int, int)
- Method in class javax.swing.
DefaultRowSorter.ModelWrapper
Returns the value as a
String
at the specified
 index.
getStringWidth(JComponent, FontMetrics, String)
- Static method in class javax.swing.plaf.basic.
BasicGraphicsUtils
Returns the width of the passed in string using text properties
 and anti-aliasing hints from the provided component.
getStroke()
- Method in class java.awt.
Graphics2D
Returns the current
Stroke
in the
Graphics2D
context.
getStroke()
- Method in class javax.swing.border.
StrokeBorder
Returns the
BasicStroke
object used to stroke a shape
 during the border rendering.
getStrongCaret(TextHitInfo, TextHitInfo, TextLayout)
- Method in class java.awt.font.
TextLayout.CaretPolicy
Chooses one of the specified
TextHitInfo
instances as
 a strong caret in the specified
TextLayout
.
getStyle()
- Method in class java.awt.
Font
Returns the style of this
Font
.
getStyle()
- Method in class java.awt.im.
InputMethodHighlight
Returns the rendering style attributes for the text range, or null.
getStyle()
- Method in class javax.swing.plaf.synth.
SynthContext
Returns the style associated with this Region.
getStyle()
- Method in interface org.w3c.dom.css.
CSSFontFaceRule
The declaration-block of this rule.
getStyle()
- Method in interface org.w3c.dom.css.
CSSPageRule
The declaration-block of this rule.
getStyle()
- Method in interface org.w3c.dom.css.
CSSStyleRule
The declaration-block of this rule set.
getStyle()
- Method in interface org.w3c.dom.css.
ElementCSSInlineStyle
The style attribute.
getStyle(String)
- Method in class javax.swing.
JTextPane
Fetches a named non-
null
style previously added.
getStyle(String)
- Method in class javax.swing.text.
DefaultStyledDocument
Fetches a named style previously added.
getStyle(String)
- Method in class javax.swing.text.
StyleContext
Fetches a named style previously added to the document
getStyle(String)
- Method in interface javax.swing.text.
StyledDocument
Fetches a named style previously added.
getStyle(JComponent, Region)
- Static method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Gets the style associated with the given component and region.
getStyle(JComponent, Region)
- Static method in class javax.swing.plaf.synth.
SynthLookAndFeel
Gets a SynthStyle for the specified region of the specified component.
getStyle(JComponent, Region)
- Method in class javax.swing.plaf.synth.
SynthStyleFactory
Returns the style for the specified Component.
getStyledDocument()
- Method in class javax.swing.
JTextPane
Fetches the model associated with the editor.
getStyledDocument(JEditorPane)
- Method in class javax.swing.text.
StyledEditorKit.StyledTextAction
Gets the document associated with an editor pane.
getStyledEditorKit()
- Method in class javax.swing.
JTextPane
Gets the editor kit.
getStyledEditorKit(JEditorPane)
- Method in class javax.swing.text.
StyledEditorKit.StyledTextAction
Gets the editor kit associated with an editor pane.
getStyleFactory()
- Static method in class javax.swing.plaf.synth.
SynthLookAndFeel
Returns the current SynthStyleFactory.
getStyleNames()
- Method in class javax.swing.text.
DefaultStyledDocument
Fetches the list of style names.
getStyleNames()
- Method in class javax.swing.text.
StyleContext
Fetches the names of the styles defined.
getStylesheet()
- Method in class javax.xml.crypto.dsig.spec.
XSLTTransformParameterSpec
Returns the stylesheet.
getStyleSheet()
- Method in class javax.swing.text.html.
BlockView
Convenient method to get the StyleSheet.
getStyleSheet()
- Method in class javax.swing.text.html.
HTMLDocument
Fetches the
StyleSheet
with the document-specific display
 rules (CSS) that were specified in the HTML document itself.
getStyleSheet()
- Method in class javax.swing.text.html.
HTMLEditorKit
Get the set of styles currently being used to render the
 HTML elements.
getStyleSheet()
- Method in class javax.swing.text.html.
ImageView
Convenient method to get the StyleSheet.
getStyleSheet()
- Method in class javax.swing.text.html.
InlineView
Convenient method to get the StyleSheet.
getStyleSheet()
- Method in class javax.swing.text.html.
ParagraphView
Convenient method to get the StyleSheet.
getStyleSheet()
- Method in interface org.w3c.dom.css.
CSSImportRule
The style sheet referred to by this rule, if it has been loaded.
getStyleSheets()
- Method in class javax.swing.text.html.
StyleSheet
Returns an array of the linked StyleSheets.
getStyleSheets()
- Method in interface org.w3c.dom.stylesheets.
DocumentStyle
A list containing all the style sheets explicitly linked into or
 embedded in a document.
getSubElements()
- Method in class javax.swing.
JMenu
Returns an array of
MenuElement
s containing the submenu
 for this menu component.
getSubElements()
- Method in class javax.swing.
JMenuBar
Implemented to be a
MenuElement
-- returns the
 menus in this menu bar.
getSubElements()
- Method in class javax.swing.
JMenuItem
This method returns an array containing the sub-menu
 components for this menu component.
getSubElements()
- Method in class javax.swing.
JPopupMenu
Returns an array of
MenuElement
s containing the submenu
 for this menu component.
getSubElements()
- Method in interface javax.swing.
MenuElement
This method should return an array containing the sub-elements for the
 receiving menu element.
getSubimage(int, int, int, int)
- Method in class java.awt.image.
BufferedImage
Returns a subimage defined by a specified rectangular region.
getSubInterfaces()
- Method in class java.net.
NetworkInterface
Get an Enumeration with all the subinterfaces (also known as virtual
 interfaces) attached to this network interface.
getSubject()
- Method in class java.security.cert.
X509CertSelector
Returns the subject criterion as an
X500Principal
.
getSubject()
- Method in class javax.security.auth.login.
LoginContext
Return the authenticated Subject.
getSubject()
- Method in class javax.security.auth.
SubjectDomainCombiner
Deprecated.
Get the
Subject
associated with this
SubjectDomainCombiner
.
getSubject(AccessControlContext)
- Static method in class javax.security.auth.
Subject
Deprecated, for removal: This API element is subject to removal in a future version.
This method depends on
AccessControlContext
which, in conjunction with
the Security Manager
, is deprecated
       and subject to removal in a future release. However,
       obtaining a Subject is useful independent of the Security Manager.
       Thus, a replacement API named
Subject.current()
has been added
       which can be used to obtain the current subject.
getSubjectAlternativeNames()
- Method in class java.security.cert.
X509Certificate
Gets an immutable collection of subject alternative names from the
SubjectAltName
extension, (OID = 2.5.29.17).
getSubjectAlternativeNames()
- Method in class java.security.cert.
X509CertSelector
Returns a copy of the subjectAlternativeNames criterion.
getSubjectAsBytes()
- Method in class java.security.cert.
X509CertSelector
Returns the subject criterion as a byte array.
getSubjectAsString()
- Method in class java.security.cert.
X509CertSelector
Deprecated.
Use
X509CertSelector.getSubject()
or
X509CertSelector.getSubjectAsBytes()
instead. This method should not be relied on as it can fail to match
 some certificates because of a loss of encoding information in the
 RFC 2253 String form of some distinguished names.
getSubjectDN()
- Method in class java.security.cert.
X509Certificate
Deprecated.
Use
X509Certificate.getSubjectX500Principal()
instead. This method
 returns the
subject
as an implementation specific
Principal
object, which should not be relied upon by portable
 code.
getSubjectDN()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the
subject
(subject distinguished name) value
 from the certificate.
getSubjectKeyIdentifier()
- Method in class java.security.cert.
X509CertSelector
Returns the subjectKeyIdentifier criterion.
getSubjectPublicKey()
- Method in class java.security.cert.
X509CertSelector
Returns the subjectPublicKey criterion.
getSubjectPublicKeyAlgID()
- Method in class java.security.cert.
X509CertSelector
Returns the subjectPublicKeyAlgID criterion.
getSubjectUniqueID()
- Method in class java.security.cert.
X509Certificate
Gets the
subjectUniqueID
value from the certificate.
getSubjectX500Principal()
- Method in class java.security.cert.
X509Certificate
Returns the subject (subject distinguished name) value from the
 certificate as an
X500Principal
.
getSubprimeQLength()
- Method in class java.security.spec.
DSAGenParameterSpec
Returns the desired length of the sub-prime Q of the
 to-be-generated DSA domain parameters in bits.
getSubprotocol()
- Method in interface java.net.http.
WebSocket
Returns the subprotocol used by this WebSocket.
getSubsamplingXOffset()
- Method in class javax.imageio.
IIOParam
Returns the horizontal offset of the subsampling grid.
getSubsamplingYOffset()
- Method in class javax.imageio.
IIOParam
Returns the vertical offset of the subsampling grid.
getSubscribers()
- Method in class java.util.concurrent.
SubmissionPublisher
Returns a list of current subscribers for monitoring and
 tracking purposes, not for invoking
Flow.Subscriber
methods on the subscribers.
getSubString(long, int)
- Method in interface java.sql.
Clob
Retrieves a copy of the specified substring
 in the
CLOB
value
 designated by this
Clob
object.
getSubString(long, int)
- Method in class javax.sql.rowset.serial.
SerialClob
Returns a copy of the substring contained in this
SerialClob
object, starting at the given position
 and continuing for the specified number or characters.
getSubTextFont()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the sub-text font.
getSubTextFont()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the sub-text font of the current theme.
getSubTextFont()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the sub-text font.
getSubType()
- Method in class java.awt.datatransfer.
DataFlavor
Returns the sub MIME type of this
DataFlavor
.
getSuffix(int)
- Method in class javax.naming.
CompositeName
Creates a composite name whose components consist of a suffix of the
 components in this composite name.
getSuffix(int)
- Method in class javax.naming.
CompoundName
Creates a compound name whose components consist of a suffix of the
 components in this compound name.
getSuffix(int)
- Method in class javax.naming.ldap.
LdapName
Creates a name whose components consist of a suffix of the
 components in this LDAP name.
getSuffix(int)
- Method in interface javax.naming.
Name
Creates a name whose components consist of a suffix of the
 components in this name.
getSum()
- Method in class java.util.
DoubleSummaryStatistics
Returns the sum of values recorded, or zero if no values have been
 recorded.
getSum()
- Method in class java.util.
IntSummaryStatistics
Returns the sum of values recorded, or zero if no values have been
 recorded.
getSum()
- Method in class java.util.
LongSummaryStatistics
Returns the sum of values recorded, or zero if no values have been
 recorded.
getSummary()
- Method in interface com.sun.source.doctree.
SummaryTree
Returns the summary or the first line of a comment.
getSummary()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Description about the purpose or structure of a table.
getSuperBound()
- Method in interface javax.lang.model.type.
WildcardType
Returns the lower bound of this wildcard.
getSuperclass()
- Method in class java.lang.
Class
Returns the
Class
representing the direct superclass of the
 entity (class, interface, primitive type or void) represented by
 this
Class
.
getSuperclass()
- Method in interface javax.lang.model.element.
TypeElement
Returns the direct superclass of this class or interface element.
getSuperTables(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the table hierarchies defined in a particular
 schema in this database.
getSuperTypes(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the user-defined type (UDT) hierarchies defined in a
 particular schema in this database.
getSupportedAnnotationTypes()
- Method in class javax.annotation.processing.
AbstractProcessor
If the processor class is annotated with
SupportedAnnotationTypes
, return an unmodifiable set with the
 same set of strings as the annotation.
getSupportedAnnotationTypes()
- Method in interface javax.annotation.processing.
Processor
Returns the names of the annotation interfaces supported by this
 processor.
getSupportedAttributeCategories()
- Method in interface javax.print.
PrintService
Determines the printing attribute categories a client can specify when
 setting up a job for this print service.
getSupportedAttributeValues(Class<? extends Attribute>, DocFlavor, AttributeSet)
- Method in interface javax.print.
PrintService
Determines the printing attribute values a client can specify in the
 given category when setting up a job for this print service.
getSupportedCipherSuites()
- Method in class javax.net.ssl.
SSLEngine
Returns the names of the cipher suites which could be enabled for use
 on this engine.
getSupportedCipherSuites()
- Method in class javax.net.ssl.
SSLServerSocket
Returns the names of the cipher suites which could be enabled for use
 on an SSL connection.
getSupportedCipherSuites()
- Method in class javax.net.ssl.
SSLServerSocketFactory
Returns the names of the cipher suites which could be enabled for use
 on an SSL connection created by this factory.
getSupportedCipherSuites()
- Method in class javax.net.ssl.
SSLSocket
Returns the names of the cipher suites which could be enabled for use
 on this connection.
getSupportedCipherSuites()
- Method in class javax.net.ssl.
SSLSocketFactory
Returns the names of the cipher suites which could be enabled for use
 on an SSL connection.
getSupportedDocFlavors()
- Method in interface javax.print.
PrintService
Determines the print data formats a client can specify when setting up a
 job for this
PrintService
.
getSupportedDocFlavors()
- Method in class javax.print.
StreamPrintServiceFactory
Queries the factory for the document flavors that can be accepted by
 printers obtained from this factory.
getSupportedExtensions()
- Method in class java.security.cert.
PKIXCertPathChecker
Returns an immutable
Set
of X.509 certificate extensions
 that this
PKIXCertPathChecker
supports (i.e. recognizes, is
 able to process), or
null
if no extensions are supported.
getSupportedOptions()
- Method in class javax.annotation.processing.
AbstractProcessor
If the processor class is annotated with
SupportedOptions
, return an unmodifiable set with the same set
 of strings as the annotation.
getSupportedOptions()
- Method in interface javax.annotation.processing.
Processor
Returns the options recognized by this processor.
getSupportedOptions()
- Method in interface jdk.javadoc.doclet.
Doclet
Returns all the supported options.
getSupportedOptions()
- Method in class jdk.javadoc.doclet.
StandardDoclet
getSupportedProtocols()
- Method in class javax.net.ssl.
SSLEngine
Returns the names of the protocols which could be enabled for use
 with this
SSLEngine
.
getSupportedProtocols()
- Method in class javax.net.ssl.
SSLServerSocket
Returns the names of the protocols which could be enabled for use.
getSupportedProtocols()
- Method in class javax.net.ssl.
SSLSocket
Returns the names of the protocols which could be enabled for use
 on an SSL connection.
getSupportedSourceVersion()
- Method in class javax.annotation.processing.
AbstractProcessor
If the processor class is annotated with
SupportedSourceVersion
, return the source version in the
 annotation.
getSupportedSourceVersion()
- Method in interface javax.annotation.processing.
Processor
Returns the latest source version supported by this annotation
 processor.
getSupportedSourceVersion()
- Method in interface jdk.javadoc.doclet.
Doclet
Returns the version of the Java Programming Language supported
 by this doclet.
getSupportedSourceVersion()
- Method in class jdk.javadoc.doclet.
StandardDoclet
getSupportedSSLParameters()
- Method in class javax.net.ssl.
SSLContext
Returns a copy of the SSLParameters indicating the supported
 settings for this SSL context.
getSupportsAbsolutePositioning()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Indicates whether the user can absolutely position the thumb with
 a mouse gesture (usually the middle mouse button).
getSupportsWindowDecorations()
- Method in class javax.swing.
LookAndFeel
Returns
true
if the
LookAndFeel
returned
RootPaneUI
instances support providing
Window
decorations in a
JRootPane
.
getSupportsWindowDecorations()
- Method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns
true
; metal can provide
Window
decorations.
getSuppressed()
- Method in exception class java.lang.
Throwable
Returns an array containing all of the exceptions that were
 suppressed, typically by the
try
-with-resources
 statement, in order to deliver this exception.
getSurplusQueuedTaskCount()
- Static method in class java.util.concurrent.
ForkJoinTask
Returns an estimate of how many more locally queued tasks are
 held by the current worker thread than there are other worker
 threads that might steal them, or zero if this thread is not
 operating in a ForkJoinPool.
getSurrendersFocusOnKeystroke()
- Method in class javax.swing.
JTable
Returns true if the editor should get the focus
 when keystrokes cause the editor to be activated
getSW()
- Method in class javax.smartcardio.
ResponseAPDU
Returns the value of the status bytes SW1 and SW2 as a single
 status word SW.
getSW1()
- Method in class javax.smartcardio.
ResponseAPDU
Returns the value of the status byte SW1 as a value between 0 and 255.
getSW2()
- Method in class javax.smartcardio.
ResponseAPDU
Returns the value of the status byte SW2 as a value between 0 and 255.
getSwitchPoints()
- Method in class jdk.dynalink.linker.
GuardedInvocation
Returns the switch points that can be used to invalidate the linkage of
 this invocation handle.
getSymbol()
- Method in class java.util.
Currency
Gets the symbol of this currency for the default
DISPLAY
locale.
getSymbol(String, Locale)
- Method in class java.util.spi.
CurrencyNameProvider
Gets the symbol of the given currency code for the specified locale.
getSymbol(Locale)
- Method in class java.util.
Currency
Gets the symbol of this currency for the specified locale.
getSyncAllWidths()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonAreaLayout
Returns if the width of children should be synchronized.
getSyncFactory()
- Static method in class javax.sql.rowset.spi.
SyncFactory
Returns the
SyncFactory
singleton.
getSyncProvider()
- Method in interface javax.sql.rowset.
CachedRowSet
Retrieves the
SyncProvider
implementation for this
CachedRowSet
object.
getSyncResolver()
- Method in exception class javax.sql.rowset.spi.
SyncProviderException
Retrieves the
SyncResolver
object that has been set for
 this
SyncProviderException
object, or
 if none has been set, an instance of the default
SyncResolver
implementation included in the reference implementation.
getSynthesizer()
- Static method in class javax.sound.midi.
MidiSystem
Obtains the default synthesizer.
getSystemClassLoader()
- Static method in class java.lang.
ClassLoader
Returns the system class loader.
getSystemClipboard()
- Method in class java.awt.
Toolkit
Gets the singleton instance of the system Clipboard which interfaces
 with clipboard facilities provided by the native platform.
getSystemCpuLoad()
- Method in interface com.sun.management.
OperatingSystemMXBean
Deprecated.
Use
OperatingSystemMXBean.getCpuLoad()
instead of
 this historically named method.
getSystemCustomCursor(String)
- Static method in class java.awt.
Cursor
Returns a system-specific custom cursor object matching the
 specified name.
getSystemDisplayName(File)
- Method in class javax.swing.filechooser.
FileSystemView
Name of a file, directory, or folder as it would be displayed in
 a system file browser.
getSystemDocumentationTool()
- Static method in class javax.tools.
ToolProvider
Returns the Java programming language documentation tool provided
 with this platform.
getSystemEventQueue()
- Method in class java.awt.
Toolkit
Get the application's or applet's EventQueue instance.
getSystemEventQueueImpl()
- Method in class java.awt.
Toolkit
Gets the application's or applet's
EventQueue
instance, without checking access.
getSystemFunctions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves a comma-separated list of system functions available with
 this database.
getSystemIcon(File)
- Method in class javax.swing.filechooser.
FileSystemView
Icon for a file, directory, or folder as it would be displayed in
 a system file browser.
getSystemIcon(File, int, int)
- Method in class javax.swing.filechooser.
FileSystemView
Returns an icon for a file, directory, or folder as it would be displayed
 in a system file browser for the requested size.
getSystemId()
- Method in interface javax.xml.stream.events.
EntityDeclaration
The entity's system identifier.
getSystemId()
- Method in interface javax.xml.stream.events.
NotationDeclaration
The notation's system identifier, or null if none was given.
getSystemId()
- Method in interface javax.xml.stream.events.
StartDocument
Returns the system ID of the XML data
getSystemId()
- Method in interface javax.xml.stream.
Location
Returns the system ID of the XML
getSystemId()
- Method in class javax.xml.transform.dom.
DOMResult
Get the System Identifier.
getSystemId()
- Method in class javax.xml.transform.dom.
DOMSource
Get the base ID (URL or system ID) from where URLs
 will be resolved.
getSystemId()
- Method in interface javax.xml.transform.
Result
Get the system identifier that was set with setSystemId.
getSystemId()
- Method in class javax.xml.transform.sax.
SAXResult
Get the system identifier that was set with setSystemId.
getSystemId()
- Method in class javax.xml.transform.sax.
SAXSource
Get the base ID (URI or system ID) from where URIs
 will be resolved.
getSystemId()
- Method in interface javax.xml.transform.sax.
TemplatesHandler
Get the base ID (URI or system ID) from where relative
 URLs will be resolved.
getSystemId()
- Method in interface javax.xml.transform.sax.
TransformerHandler
Get the base ID (URI or system ID) from where relative
 URLs will be resolved.
getSystemId()
- Method in interface javax.xml.transform.
Source
Get the system identifier that was set with setSystemId.
getSystemId()
- Method in interface javax.xml.transform.
SourceLocator
Return the system identifier for the current document event.
getSystemId()
- Method in class javax.xml.transform.stax.
StAXResult
The returned system identifier is always
null
.
getSystemId()
- Method in class javax.xml.transform.stax.
StAXSource
Get the system identifier used by this
StAXSource
.
getSystemId()
- Method in class javax.xml.transform.stream.
StreamResult
Get the system identifier that was set with setSystemId.
getSystemId()
- Method in class javax.xml.transform.stream.
StreamSource
Get the system identifier that was set with setSystemId.
getSystemId()
- Method in interface org.w3c.dom.
DocumentType
The system identifier of the external subset.
getSystemId()
- Method in interface org.w3c.dom.
Entity
The system identifier associated with the entity if specified, and
null
otherwise.
getSystemId()
- Method in interface org.w3c.dom.ls.
LSInput
The system identifier, a URI reference [
IETF RFC 2396
], for this
 input source.
getSystemId()
- Method in interface org.w3c.dom.ls.
LSOutput
The system identifier, a URI reference [
IETF RFC 2396
], for this
 output destination.
getSystemId()
- Method in interface org.w3c.dom.
Notation
The system identifier of this notation.
getSystemId()
- Method in class org.xml.sax.helpers.
LocatorImpl
Return the saved system identifier.
getSystemId()
- Method in class org.xml.sax.
InputSource
Get the system identifier for this input source.
getSystemId()
- Method in interface org.xml.sax.
Locator
Return the system identifier for the current document event.
getSystemId()
- Method in exception class org.xml.sax.
SAXParseException
Get the system identifier of the entity where the exception occurred.
getSystemJavaCompiler()
- Static method in class javax.tools.
ToolProvider
Returns the Java programming language compiler provided
 with this platform.
getSystemLoadAverage()
- Method in interface java.lang.management.
OperatingSystemMXBean
Returns the system load average for the last minute.
getSystemLookAndFeelClassName()
- Static method in class javax.swing.
UIManager
Returns the name of the
LookAndFeel
class that implements
 the native system look and feel if there is one, otherwise
 the name of the default cross platform
LookAndFeel
class.
getSystemProperties()
- Method in class com.sun.tools.attach.
VirtualMachine
Returns the current system properties in the target virtual machine.
getSystemProperties()
- Method in interface java.lang.management.
RuntimeMXBean
Returns a map of names and values of all system properties.
getSystemResource(String)
- Static method in class java.lang.
ClassLoader
Find a resource of the specified name from the search path used to load
 classes.
getSystemResourceAsStream(String)
- Static method in class java.lang.
ClassLoader
Open for reading, a resource of the specified name from the search path
 used to load classes.
getSystemResources(String)
- Static method in class java.lang.
ClassLoader
Finds all resources of the specified name from the search path used to
 load classes.
getSystemScope()
- Static method in class java.security.
IdentityScope
Deprecated.
Returns the system's identity scope.
getSystemSelection()
- Method in class java.awt.
Toolkit
Gets the singleton instance of the system selection as a
Clipboard
object.
getSystemTextColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the system text color of the current theme.
getSystemTextColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the system text color.
getSystemTextFont()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the system text font.
getSystemTextFont()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the system text font of the current theme.
getSystemTextFont()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the system text font.
getSystemToolClassLoader()
- Static method in class javax.tools.
ToolProvider
Deprecated.
This method is subject to removal in a future version of
 Java SE.
 Use the
system tool provider
or
service loader
mechanisms to
 locate system tools as well as user-installed tools.
getSystemTray()
- Static method in class java.awt.
SystemTray
Gets the
SystemTray
instance that represents the
 desktop's tray area.
getSystemTypeDescription(File)
- Method in class javax.swing.filechooser.
FileSystemView
Type description for a file, directory, or folder as it would be displayed in
 a system file browser.
getTab(int)
- Method in class javax.swing.text.
TabSet
Returns the TabStop at index
index
.
getTabAfter(float)
- Method in class javax.swing.text.
TabSet
Returns the Tab instance after
location
.
getTabAreaInsets(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the tab area insets.
getTabBase()
- Method in class javax.swing.text.
ParagraphView
Returns where the tabs are calculated from.
getTabbedSpan(float, TabExpander)
- Method in class javax.swing.text.
GlyphView
Determines the desired span when using the given
 tab expansion implementation.
getTabbedSpan(float, TabExpander)
- Method in interface javax.swing.text.
TabableView
Determines the desired span when using the given
 tab expansion implementation.
getTabbedTextOffset(Segment, FontMetrics, float, float, TabExpander, int, boolean)
- Static method in class javax.swing.text.
Utilities
Determines the relative offset into the given text that
 best represents the given span in the view coordinate
 system.
getTabbedTextOffset(Segment, FontMetrics, int, int, TabExpander, int)
- Static method in class javax.swing.text.
Utilities
Deprecated.
replaced by
Utilities.getTabbedTextOffset(Segment, FontMetrics, float, float, TabExpander, int, boolean)
getTabbedTextOffset(Segment, FontMetrics, int, int, TabExpander, int, boolean)
- Static method in class javax.swing.text.
Utilities
Deprecated.
replaced by
Utilities.getTabbedTextOffset(Segment, FontMetrics, float, float, TabExpander, int, boolean)
getTabbedTextWidth(Segment, FontMetrics, float, TabExpander, int)
- Static method in class javax.swing.text.
Utilities
Determines the width of the given segment of text taking tabs
 into consideration.
getTabbedTextWidth(Segment, FontMetrics, int, TabExpander, int)
- Static method in class javax.swing.text.
Utilities
Deprecated.
replaced by
Utilities.getTabbedTextWidth(Segment, FontMetrics, float, TabExpander, int)
getTabBounds(int, Rectangle)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the bounds of the specified tab in the coordinate space
 of the JTabbedPane component.
getTabBounds(JTabbedPane, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the bounds of the specified tab index.
getTabBounds(JTabbedPane, int)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
getTabBounds
method on each UI handled by this object.
getTabBounds(JTabbedPane, int)
- Method in class javax.swing.plaf.
TabbedPaneUI
Returns the rectangle for the tab bounds.
getTabComponentAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the tab component at
index
.
getTabCount()
- Method in class javax.swing.
JTabbedPane
Returns the number of tabs in this
tabbedpane
.
getTabCount()
- Method in class javax.swing.text.
TabSet
Returns the number of Tab instances the receiver contains.
getTabExpander()
- Method in class javax.swing.text.
GlyphView
Fetch the TabExpander to use if tabs are present in this view.
getTabIndex()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Index that represents the element's position in the tabbing order.
getTabIndex()
- Method in interface org.w3c.dom.html.
HTMLAreaElement
Index that represents the element's position in the tabbing order.
getTabIndex()
- Method in interface org.w3c.dom.html.
HTMLButtonElement
Index that represents the element's position in the tabbing order.
getTabIndex()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Index that represents the element's position in the tabbing order.
getTabIndex()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Index that represents the element's position in the tabbing order.
getTabIndex()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
Index that represents the element's position in the tabbing order.
getTabIndex()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Index that represents the element's position in the tabbing order.
getTabIndex(TabStop)
- Method in class javax.swing.text.
TabSet
Returns the index of the TabStop
tab
, or -1 if
tab
is not contained in the receiver.
getTabIndexAfter(float)
- Method in class javax.swing.text.
TabSet
Returns the index of the Tab to be used after
location
.
getTabInsets(int, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the tab insets.
getTabLabelShiftX(int, int, boolean)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the tab label shift x.
getTabLabelShiftX(int, int, boolean)
- Method in class javax.swing.plaf.metal.
MetalTabbedPaneUI
Overridden to do nothing for the Java L&F.
getTabLabelShiftY(int, int, boolean)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the tab label shift y.
getTabLabelShiftY(int, int, boolean)
- Method in class javax.swing.plaf.metal.
MetalTabbedPaneUI
Overridden to do nothing for the Java L&F.
getTabLayoutPolicy()
- Method in class javax.swing.
JTabbedPane
Returns the policy used by the tabbedpane to layout the tabs when all the
 tabs will not fit within a single run.
getTable()
- Method in class java.awt.image.
ByteLookupTable
Returns the lookup table data by reference.
getTable()
- Method in class java.awt.image.
LookupOp
Returns the
LookupTable
.
getTable()
- Method in class java.awt.image.
ShortLookupTable
Returns the lookup table data by reference.
getTable()
- Method in class javax.imageio.plugins.jpeg.
JPEGQTable
Returns a copy of the current quantization table as an array
 of
int
s in natural (not zig-zag) order.
getTable()
- Method in class javax.swing.table.
JTableHeader
Returns the table associated with this header.
getTableCellEditorComponent(JTable, Object, boolean, int, int)
- Method in class javax.swing.
DefaultCellEditor
Implements the
TableCellEditor
interface.
getTableCellEditorComponent(JTable, Object, boolean, int, int)
- Method in interface javax.swing.table.
TableCellEditor
Sets an initial
value
for the editor.
getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)
- Method in class javax.swing.table.
DefaultTableCellRenderer
Returns the default table cell renderer.
getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)
- Method in interface javax.swing.table.
TableCellRenderer
Returns the component used for drawing the cell.
getTableHeader()
- Method in class javax.swing.
JTable
Returns the
tableHeader
used by this
JTable
.
getTableLayout()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the table-layout property definition in CSS2.
getTableModelListeners()
- Method in class javax.swing.table.
AbstractTableModel
Returns an array of all the table model listeners
 registered on this model.
getTableName()
- Method in interface javax.sql.rowset.
CachedRowSet
Returns an identifier for the object (table) that was used to
 create this
CachedRowSet
object.
getTableName(int)
- Method in interface java.sql.
ResultSetMetaData
Gets the designated column's table name.
getTableName(int)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Retrieves the name of the table from which the value
 in the designated column was derived.
getTablePrivileges(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the access rights for each table available
 in a catalog.
getTables(String, String, String, String[])
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the tables available in the given catalog.
getTableTypes()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the table types available in this database.
getTabPlacement()
- Method in class javax.swing.
JTabbedPane
Returns the placement of the tabs for this tabbedpane.
getTabRunCount()
- Method in class javax.swing.
JTabbedPane
Returns the number of tab runs currently used to display
 the tabs.
getTabRunCount(JTabbedPane)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
getTabRunCount(JTabbedPane)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
getTabRunCount
method on each UI handled by this object.
getTabRunCount(JTabbedPane)
- Method in class javax.swing.plaf.
TabbedPaneUI
Returns the tab run count.
getTabRunIndent(int, int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the tab run indent.
getTabRunOffset(int, int, int, boolean)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the tab run offset.
getTabRunOverlay(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the tab run overlay.
getTabs()
- Method in class com.sun.tools.jconsole.
JConsolePlugin
Returns the tabs to be added in JConsole window.
getTabSet()
- Method in class javax.swing.text.
ParagraphView
Gets the
Tabset
to be used in calculating tabs.
getTabSet(AttributeSet)
- Static method in class javax.swing.text.
StyleConstants
Gets the TabSet.
getTabSize()
- Method in class javax.swing.
JTextArea
Gets the number of characters used to expand tabs.
getTabSize()
- Method in class javax.swing.text.
PlainView
Returns the tab size set for the document, defaulting to 8.
getTabSize()
- Method in class javax.swing.text.
WrappedPlainView
Returns the tab size set for the document, defaulting to 8.
getTabularType()
- Method in interface javax.management.openmbean.
TabularData
Returns the
tabular type
describing this
TabularData
instance.
getTabularType()
- Method in class javax.management.openmbean.
TabularDataSupport
Returns the
tabular type
describing this
TabularData
instance.
getTag()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Retrieves the tag associated with this field.
getTag()
- Method in class javax.swing.text.html.
HTMLDocument.Iterator
Type of tag this iterator represents.
getTag(int)
- Method in class javax.imageio.plugins.tiff.
TIFFDirectory
Returns the
TIFFTag
which has tag number equal to
tagNumber
or
null
if no such tag
 exists in the
TIFFTagSet
s associated with this
 directory.
getTag(int)
- Method in class javax.imageio.plugins.tiff.
TIFFTagSet
Returns the
TIFFTag
from this set that is
 associated with the given tag number, or
null
if
 no tag exists for that number.
getTag(String)
- Method in class javax.imageio.plugins.tiff.
TIFFTagSet
Returns the
TIFFTag
having the given tag name, or
null
if the named tag does not belong to this tag set.
getTag(String)
- Static method in class javax.swing.text.html.
HTML
Fetches a tag constant for a well-known tag name (i.e. one of
 the tags in the set {A, ADDRESS, APPLET, AREA, B,
 BASE, BASEFONT, BIG,
 BLOCKQUOTE, BODY, BR, CAPTION, CENTER, CITE, CODE,
 DD, DFN, DIR, DIV, DL, DT, EM, FONT, FORM, FRAME,
 FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HR, HTML,
 I, IMG, INPUT, ISINDEX, KBD, LI, LINK, MAP, MENU,
 META, NOBR, NOFRAMES, OBJECT, OL, OPTION, P, PARAM,
 PRE, SAMP, SCRIPT, SELECT, SMALL, SPAN, STRIKE, S,
 STRONG, STYLE, SUB, SUP, TABLE, TD, TEXTAREA,
 TH, TITLE, TR, TT, U, UL, VAR}.
getTagName()
- Method in interface com.sun.source.doctree.
BlockTagTree
Returns the name of the tag.
getTagName()
- Method in interface com.sun.source.doctree.
InlineTagTree
Returns the name of the tag.
getTagName()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Equivalent to
getNodeName
.
getTagName()
- Method in interface org.w3c.dom.
Element
The name of the element.
getTagNames()
- Method in class javax.imageio.plugins.tiff.
TIFFTagSet
Retrieves an unmodifiable lexicographically increasing set of tag names.
getTagNumber()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Retrieves the tag number in the range
[0,65535]
.
getTagNumbers()
- Method in class javax.imageio.plugins.tiff.
TIFFTagSet
Retrieves an unmodifiable numerically increasing set of tag numbers.
getTags()
- Method in interface java.beans.
PropertyEditor
If the property value must be one of a set of known tagged values,
 then this method should return an array of the tags.
getTags()
- Method in class java.beans.
PropertyEditorSupport
If the property value must be one of a set of known tagged values,
 then this method should return an array of the tag values.
getTagSet()
- Method in class javax.imageio.plugins.tiff.
TIFFTag
Returns the
TIFFTagSet
of which this tag is a part.
getTagSets()
- Method in class javax.imageio.plugins.tiff.
TIFFDirectory
Returns the
TIFFTagSet
s of which this directory is aware.
getTail(Handler)
- Method in class java.util.logging.
Formatter
Return the tail string for a set of formatted records.
getTail(Handler)
- Method in class java.util.logging.
XMLFormatter
Return the tail string for a set of XML formatted records.
getTarget()
- Method in class java.beans.
EventHandler
Returns the object to which this event handler will send a message.
getTarget()
- Method in class java.beans.
Statement
Returns the target object of this statement.
getTarget()
- Method in class java.lang.invoke.
CallSite
Returns the target method of the call site, according to the
 behavior defined by this call site's specific class.
getTarget()
- Method in class java.lang.invoke.
ConstantCallSite
Returns the target method of the call site, which behaves
 like a
final
field of the
ConstantCallSite
.
getTarget()
- Method in class java.lang.invoke.
MutableCallSite
Returns the target method of the call site, which behaves
 like a normal field of the
MutableCallSite
.
getTarget()
- Method in class java.lang.invoke.
VolatileCallSite
Returns the target method of the call site, which behaves
 like a
volatile
field of the
VolatileCallSite
.
getTarget()
- Method in class javax.accessibility.
AccessibleRelation
Returns the target objects for this relation.
getTarget()
- Method in class javax.swing.
BoxLayout
Returns the container that uses this layout manager.
getTarget()
- Method in class javax.swing.
OverlayLayout
Returns the container that uses this layout manager.
getTarget()
- Method in class javax.swing.text.html.
HTMLFrameHyperlinkEvent
returns the target for the link.
getTarget()
- Method in interface javax.xml.crypto.dsig.
SignatureProperty
Returns the target URI of this
SignatureProperty
.
getTarget()
- Method in interface javax.xml.stream.events.
ProcessingInstruction
The target section of the processing instruction
getTarget()
- Method in interface org.w3c.dom.events.
Event
Used to indicate the
EventTarget
to which the event was
 originally dispatched.
getTarget()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Frame to render the resource in.
getTarget()
- Method in interface org.w3c.dom.html.
HTMLAreaElement
Frame to render the resource in.
getTarget()
- Method in interface org.w3c.dom.html.
HTMLBaseElement
The default target frame.
getTarget()
- Method in interface org.w3c.dom.html.
HTMLFormElement
Frame to render the resource in.
getTarget()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
Frame to render the resource in.
getTarget()
- Method in interface org.w3c.dom.
ProcessingInstruction
The target of this processing instruction.
getTargetActions()
- Method in class java.awt.dnd.
DragSourceDragEvent
This method returns the target drop action.
getTargetActions()
- Method in class java.awt.dnd.
DropTargetContext
This method returns an
int
representing the
 current actions this
DropTarget
will accept.
getTargetCertConstraints()
- Method in class java.security.cert.
PKIXParameters
Returns the required constraints on the target certificate.
getTargetDataLine(AudioFormat)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains a target data line that can be used for recording audio data in
 the format specified by the
AudioFormat
object.
getTargetDataLine(AudioFormat, Mixer.Info)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains a target data line that can be used for recording audio data in
 the format specified by the
AudioFormat
object, provided by the
 mixer specified by the
Mixer.Info
object.
getTargetedNotifications()
- Method in class javax.management.remote.
NotificationResult
Returns the notifications resulting from the query, and the
 listeners they correspond to.
getTargetEncodings()
- Method in class javax.sound.sampled.spi.
FormatConversionProvider
Obtains the set of target format encodings to which format conversion
 services are provided by this provider.
getTargetEncodings(AudioFormat)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the encodings that the system can obtain from an audio input
 stream with the specified format using the set of installed format
 converters.
getTargetEncodings(AudioFormat)
- Method in class javax.sound.sampled.spi.
FormatConversionProvider
Obtains the set of target format encodings supported by the format
 converter given a particular source format.
getTargetEncodings(AudioFormat.Encoding)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the encodings that the system can obtain from an audio input
 stream with the specified encoding using the set of installed format
 converters.
getTargetError()
- Method in exception class javax.management.
RuntimeErrorException
Returns the actual
Error
thrown.
getTargetException()
- Method in exception class java.lang.reflect.
InvocationTargetException
Get the thrown target exception.
getTargetException()
- Method in exception class javax.management.
MBeanException
Return the actual
Exception
thrown.
getTargetException()
- Method in exception class javax.management.
ReflectionException
Returns the actual
Exception
thrown.
getTargetException()
- Method in exception class javax.management.
RuntimeMBeanException
Returns the actual
RuntimeException
thrown.
getTargetException()
- Method in exception class javax.management.
RuntimeOperationsException
Returns the actual
RuntimeException
thrown.
getTargetFormats(AudioFormat.Encoding, AudioFormat)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains the formats that have a particular encoding and that the system
 can obtain from a stream of the specified format using the set of
 installed format converters.
getTargetFormats(AudioFormat.Encoding, AudioFormat)
- Method in class javax.sound.sampled.spi.
FormatConversionProvider
Obtains the set of target formats with the encoding specified supported
 by the format converter.
getTargetLineInfo()
- Method in interface javax.sound.sampled.
Mixer
Obtains information about the set of target lines supported by this
 mixer.
getTargetLineInfo(Line.Info)
- Static method in class javax.sound.sampled.
AudioSystem
Obtains information about all target lines of a particular type that are
 supported by the installed mixers.
getTargetLineInfo(Line.Info)
- Method in interface javax.sound.sampled.
Mixer
Obtains information about target lines of a particular type supported by
 the mixer.
getTargetLines()
- Method in interface javax.sound.sampled.
Mixer
Obtains the set of all target lines currently open from this mixer.
getTargetModules()
- Method in interface javax.lang.model.element.
ModuleElement.ExportsDirective
Returns the specific modules to which the package is being exported,
 or
null
, if the package is exported to all modules which
 have readability to this module.
getTargetModules()
- Method in interface javax.lang.model.element.
ModuleElement.OpensDirective
Returns the specific modules to which the package is being open
 or
null
, if the package is open all modules which
 have readability to this module.
getTargName()
- Method in interface org.ietf.jgss.
GSSContext
Returns the name of the context acceptor.
getTask(Writer, JavaFileManager, DiagnosticListener<? super JavaFileObject>, Class<?>, Iterable<String>, Iterable<? extends JavaFileObject>)
- Method in interface javax.tools.
DocumentationTool
Creates a future for a documentation task with the given
 components and arguments.
getTask(Writer, JavaFileManager, DiagnosticListener<? super JavaFileObject>, Iterable<String>, Iterable<String>, Iterable<? extends JavaFileObject>)
- Method in interface javax.tools.
JavaCompiler
Creates a future for a compilation task with the given
 components and arguments.
getTaskbar()
- Static method in class java.awt.
Taskbar
Returns the
Taskbar
instance of the current
 taskbar context.
getTaskCount()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the approximate total number of tasks that have ever been
 scheduled for execution.
getTBodies()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Returns a collection of the defined table bodies.
getTBSCertificate()
- Method in class java.security.cert.
X509Certificate
Gets the DER-encoded certificate information, the
tbsCertificate
from this certificate.
getTBSCertList()
- Method in class java.security.cert.
X509CRL
Gets the DER-encoded CRL information, the
tbsCertList
from this CRL.
getTcpNoDelay()
- Method in class java.net.
Socket
Tests if
TCP_NODELAY
is enabled.
getTemplates()
- Method in interface javax.xml.transform.sax.
TemplatesHandler
When a TemplatesHandler object is used as a ContentHandler
 for the parsing of transformation instructions, it creates a Templates object,
 which the caller can get once the SAX events have been completed.
getTempoFactor()
- Method in interface javax.sound.midi.
Sequencer
Returns the current tempo factor for the sequencer.
getTempoInBPM()
- Method in interface javax.sound.midi.
Sequencer
Obtains the current tempo, expressed in beats per minute.
getTempoInMPQ()
- Method in interface javax.sound.midi.
Sequencer
Obtains the current tempo, expressed in microseconds per quarter note.
GETTER
- Enum constant in enum class java.lang.constant.
DirectMethodHandleDesc.Kind
A method handle for a read accessor for an instance field
getTerminal(String)
- Method in class javax.smartcardio.
CardTerminals
Returns the terminal with the specified name or null if no such
 terminal exists.
getText()
- Method in interface com.sun.source.doctree.
DocTypeTree
Returns the text of the doctype declaration.
getText()
- Method in class java.awt.event.
InputMethodEvent
Gets the combined committed and composed text.
getText()
- Method in class java.awt.
Label
Gets the text of this label.
getText()
- Method in class java.awt.
TextComponent
Returns the text that is presented by this text component.
getText()
- Method in class java.text.
BreakIterator
Get the text being scanned
getText()
- Method in class javax.security.auth.callback.
TextInputCallback
Get the retrieved text.
getText()
- Method in class javax.swing.
AbstractButton
Returns the button's text.
getText()
- Method in class javax.swing.
JEditorPane
Returns the text contained in this
TextComponent
in terms of the
 content type of this editor.
getText()
- Method in class javax.swing.
JLabel
Returns the text string that the label displays.
getText()
- Method in class javax.swing.
JPasswordField
Deprecated.
As of Java 2 platform v1.2,
 replaced by
getPassword
.
getText()
- Method in class javax.swing.text.
JTextComponent
Returns the text contained in this
TextComponent
.
getText()
- Method in interface javax.xml.stream.events.
Comment
Return the string data of the comment, returns empty string if it
 does not exist.
getText()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getText()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the current value of the parse event as a string,
 this returns the string value of a CHARACTERS event,
 returns the value of a COMMENT, the replacement value
 for an ENTITY_REFERENCE, the string value of a CDATA section,
 the string value for a SPACE event,
 or the String value of the internal subset of the DTD.
getText()
- Method in interface org.w3c.dom.html.
HTMLBodyElement
Document text color.
getText()
- Method in interface org.w3c.dom.html.
HTMLOptionElement
The text contained within the option element.
getText()
- Method in interface org.w3c.dom.html.
HTMLScriptElement
The script content of the element.
getText()
- Method in interface org.w3c.dom.html.
HTMLTitleElement
The specified title as a string.
getText(int, int)
- Method in class javax.swing.
JPasswordField
Deprecated.
As of Java 2 platform v1.2,
 replaced by
getPassword
.
getText(int, int)
- Method in class javax.swing.text.
AbstractDocument
Gets a sequence of text from the document.
getText(int, int)
- Method in interface javax.swing.text.
Document
Fetches the text contained within the given portion
 of the document.
getText(int, int)
- Method in class javax.swing.text.
GlyphView
Fetch a reference to the text that occupies
 the given range.
getText(int, int)
- Method in class javax.swing.text.
JTextComponent
Fetches a portion of the text represented by the
 component.
getText(int, int, Segment)
- Method in class javax.swing.text.
AbstractDocument
Fetches the text contained within the given portion
 of the document.
getText(int, int, Segment)
- Method in interface javax.swing.text.
Document
Fetches the text contained within the given portion
 of the document.
getText(Element)
- Method in class javax.swing.text.
AbstractWriter
Returns the text associated with the element.
getTextAlign()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-align property definition in CSS2.
getTextBorder()
- Static method in class javax.swing.plaf.metal.
MetalBorders
Returns a border instance for a text component.
getTextBounds(int, int)
- Method in interface javax.accessibility.
AccessibleExtendedText
Returns the bounding rectangle of the text between two indices.
getTextBounds(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the
Rectangle
enclosing the text between
 two indices.
getTextCharacters()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getTextCharacters()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns an array which contains the characters from this event.
getTextCharacters(int, char[], int, int)
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getTextCharacters(int, char[], int, int)
- Method in interface javax.xml.stream.
XMLStreamReader
Gets the text associated with a CHARACTERS, SPACE or CDATA event.
getTextComponent(ActionEvent)
- Method in class javax.swing.text.
TextAction
Determines the component to use for the action.
getTextContent()
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
getTextContent()
- Method in interface org.w3c.dom.
Node
This attribute returns the text content of this node and its
 descendants.
getTextDecoration()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-decoration property definition in CSS2.
getTextField()
- Method in class javax.swing.
JSpinner.DefaultEditor
Returns the
JFormattedTextField
child of this
 editor.
getTextFieldBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JTextField
.
getTextFieldBorder()
- Static method in class javax.swing.plaf.metal.
MetalBorders
Returns a border instance for a
JTextField
.
getTextHighlightColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the text highlight color of the current theme.
getTextHighlightColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the text highlight color.
getTextIndent()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-indent property definition in CSS2.
getTextLength()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getTextLength()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the length of the sequence of characters for this
 Text event within the text character array.
getTextListeners()
- Method in class java.awt.
TextComponent
Returns an array of all the text listeners
 registered on this text component.
getTextLocation(TextHitInfo)
- Method in interface java.awt.im.
InputMethodRequests
Gets the location of a specified offset in the current composed text,
 or of the selection in committed text.
getTextNonSelectionColor()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the color the text is drawn with when the node isn't selected.
getTextPlainUnicodeFlavor()
- Static method in class java.awt.datatransfer.
DataFlavor
Returns a
DataFlavor
representing plain text with Unicode
 encoding, where:
getTextRange(int, int)
- Method in interface javax.accessibility.
AccessibleEditableText
Returns the text string between two indices.
getTextRange(int, int)
- Method in interface javax.accessibility.
AccessibleExtendedText
Returns the text between two indices.
getTextRange(int, int)
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Returns the text between two
indices
.
getTextRange(int, int)
- Method in class javax.swing.
JSpinner.AccessibleJSpinner
Returns the text string between two indices.
getTextRange(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the text string between two indices.
getTextSelectionColor()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Returns the color the text is drawn with when the node is selected.
getTextSequenceAfter(int, int)
- Method in interface javax.accessibility.
AccessibleExtendedText
Returns the
AccessibleTextSequence
after a given index.
getTextSequenceAfter(int, int)
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Returns the
AccessibleTextSequence
after a given
index
.
getTextSequenceAfter(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the
AccessibleTextSequence
after a given
index
.
getTextSequenceAt(int, int)
- Method in interface javax.accessibility.
AccessibleExtendedText
Returns the
AccessibleTextSequence
at a given index.
getTextSequenceAt(int, int)
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Returns the
AccessibleTextSequence
at a given
index
.
getTextSequenceAt(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the
AccessibleTextSequence
at a given
index
.
getTextSequenceBefore(int, int)
- Method in interface javax.accessibility.
AccessibleExtendedText
Returns the
AccessibleTextSequence
before a given index.
getTextSequenceBefore(int, int)
- Method in class javax.swing.
JPasswordField.AccessibleJPasswordField
Returns the
AccessibleTextSequence
before a given
index
.
getTextSequenceBefore(int, int)
- Method in class javax.swing.text.
JTextComponent.AccessibleJTextComponent
Returns the
AccessibleTextSequence
before a given
index
.
getTextShadow()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-shadow property definition in CSS2.
getTextShiftOffset()
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Returns the offset of the text.
getTextShiftOffset()
- Method in class javax.swing.plaf.basic.
BasicToggleButtonUI
Overridden so that the text will not be rendered as shifted for
 Toggle buttons and subclasses.
getTextStart()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getTextStart()
- Method in interface javax.xml.stream.
XMLStreamReader
Returns the offset into the text character array where the first
 character (of this text event) is stored.
getTextTransform()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the text-transform property definition in CSS2.
getTextViewForTab(int)
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the text View object required to render stylized text (HTML) for
 the specified tab or null if no specialized text rendering is needed
 for this tab.
getTFoot()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Returns the table's
TFOOT
, or
null
if none
 exists.
getTHead()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Returns the table's
THEAD
, or
null
if none
 exists.
getThenReset()
- Method in class java.util.concurrent.atomic.
DoubleAccumulator
Equivalent in effect to
DoubleAccumulator.get()
followed by
DoubleAccumulator.reset()
.
getThenReset()
- Method in class java.util.concurrent.atomic.
LongAccumulator
Equivalent in effect to
LongAccumulator.get()
followed by
LongAccumulator.reset()
.
getThenStatement()
- Method in interface com.sun.source.tree.
IfTree
Returns the statement to be executed if the condition is true
getThickness()
- Method in class javax.swing.border.
LineBorder
Returns the thickness of the border.
getThisUpdate()
- Method in class java.security.cert.
X509CRL
Gets the
thisUpdate
date from the CRL.
getThread()
- Method in class jdk.jfr.consumer.
RecordedEvent
Returns the thread from which the event was committed, or
null
if
 the thread was not recorded.
getThread(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of a field of type
Thread
.
getThreadAllocatedBytes(long)
- Method in interface com.sun.management.
ThreadMXBean
Returns an approximation of the total amount of memory, in bytes,
 allocated in heap memory for the thread with the specified ID.
getThreadAllocatedBytes(long[])
- Method in interface com.sun.management.
ThreadMXBean
Returns an approximation of the total amount of memory, in bytes,
 allocated in heap memory for each thread whose ID is in the input
 array
ids
.
getThreadCount()
- Method in interface java.lang.management.
ThreadMXBean
Returns the current number of live platform threads including both
 daemon and non-daemon threads.
getThreadCpuTime(long)
- Method in interface java.lang.management.
ThreadMXBean
Returns the total CPU time for a thread of the specified ID in nanoseconds.
getThreadCpuTime(long[])
- Method in interface com.sun.management.
ThreadMXBean
Returns the total CPU time for each thread whose ID is
 in the input array
ids
in nanoseconds.
getThreadFactory()
- Method in class java.util.concurrent.
ThreadPoolExecutor
Returns the thread factory used to create new threads.
getThreadGroup()
- Method in class java.lang.
SecurityManager
Deprecated.
Returns the thread group into which to instantiate any new
 thread being created at the time this is being called.
getThreadGroup()
- Method in class java.lang.
Thread
Returns the thread's thread group or
null
if the thread has
 terminated.
getThreadGroup()
- Method in class jdk.jfr.consumer.
RecordedThread
Returns the Java thread group, if available.
getThreadId()
- Method in class java.lang.management.
ThreadInfo
Returns the ID of the thread associated with this
ThreadInfo
.
getThreadID()
- Method in class java.util.logging.
LogRecord
Deprecated.
Values returned by this method may be synthesized,
              and may not correspond to the actual
thread id
,
              use
LogRecord.getLongThreadID()
instead.
getThreadInfo(long)
- Method in interface java.lang.management.
ThreadMXBean
Returns the thread info for a thread of the specified
id
with no stack trace.
getThreadInfo(long[])
- Method in interface java.lang.management.
ThreadMXBean
Returns the thread info for each thread
 whose ID is in the input array
ids
with no stack trace.
getThreadInfo(long[], boolean, boolean)
- Method in interface java.lang.management.
ThreadMXBean
Returns the thread info for each thread
 whose ID is in the input array
ids
,
 with stack trace and synchronization information.
getThreadInfo(long[], boolean, boolean, int)
- Method in interface java.lang.management.
ThreadMXBean
Returns the thread info for each thread whose ID
 is in the input array
ids
,
 with stack trace of the specified maximum number of elements
 and synchronization information.
getThreadInfo(long[], int)
- Method in interface java.lang.management.
ThreadMXBean
Returns the thread info for each thread
 whose ID is in the input array
ids
,
 with stack trace of a specified number of stack trace elements.
getThreadInfo(long, int)
- Method in interface java.lang.management.
ThreadMXBean
Returns a thread info for a thread of the specified
id
,
 with stack trace of a specified number of stack trace elements.
getThreadMXBean()
- Static method in class java.lang.management.
ManagementFactory
Returns the managed bean for the thread system of
 the Java virtual machine.
getThreadName()
- Method in class java.lang.management.
ThreadInfo
Returns the name of the thread associated with this
ThreadInfo
.
getThreadState()
- Method in class java.lang.management.
ThreadInfo
Returns the state of the thread associated with this
ThreadInfo
.
getThreadUserTime(long)
- Method in interface java.lang.management.
ThreadMXBean
Returns the CPU time that a thread of the specified ID
 has executed in user mode in nanoseconds.
getThreadUserTime(long[])
- Method in interface com.sun.management.
ThreadMXBean
Returns the CPU time that each thread whose ID is in the input array
ids
has executed in user mode in nanoseconds.
getThreshold()
- Method in class javax.management.monitor.
CounterMonitor
Deprecated.
As of JMX 1.2, replaced by
CounterMonitor.getThreshold(ObjectName)
getThreshold()
- Method in interface javax.management.monitor.
CounterMonitorMBean
Deprecated.
As of JMX 1.2, replaced by
CounterMonitorMBean.getThreshold(ObjectName)
getThreshold(ObjectName)
- Method in class javax.management.monitor.
CounterMonitor
Gets the current threshold value of the specified object, if
 this object is contained in the set of observed MBeans, or
null
otherwise.
getThreshold(ObjectName)
- Method in interface javax.management.monitor.
CounterMonitorMBean
Gets the threshold value for the specified MBean.
getThrowable()
- Method in class java.awt.event.
InvocationEvent
Returns any Throwable caught while executing
 the Runnable's
run()
method.
getThrown()
- Method in class java.util.logging.
LogRecord
Get any throwable associated with the log record.
getThrownTypes()
- Method in interface javax.lang.model.element.
ExecutableElement
Returns the exceptions and other throwables listed in this
 method or constructor's
throws
clause in declaration
 order.
getThrownTypes()
- Method in interface javax.lang.model.type.
ExecutableType
Returns the exceptions and other throwables listed in this
 executable's
throws
clause.
getThrows()
- Method in interface com.sun.source.tree.
MethodTree
Returns the exceptions listed as being thrown by this method.
getThumbBounds()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Return the current size/location of the thumb.
getThumbnail(int)
- Method in class javax.imageio.
IIOImage
Returns a thumbnail associated with the main image.
getThumbnailHeight(int, int)
- Method in class javax.imageio.
ImageReader
Returns the height of the thumbnail preview image indexed by
thumbnailIndex
, associated with the image indexed
 by
ImageIndex
.
getThumbnails()
- Method in class javax.imageio.
IIOImage
Returns the current
List
of thumbnail
BufferedImage
s, or
null
if none is
 set.
getThumbnailWidth(int, int)
- Method in class javax.imageio.
ImageReader
Returns the width of the thumbnail preview image indexed by
thumbnailIndex
, associated with the image indexed
 by
ImageIndex
.
getThumbOverhang()
- Method in class javax.swing.plaf.metal.
MetalSliderUI
Returns the amount that the thumb goes past the slide bar.
getThumbSize()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the thumb size.
getTick()
- Method in class javax.sound.midi.
MidiEvent
Obtains the time-stamp for the event, in MIDI ticks.
getTickLength()
- Method in class javax.sound.midi.
Sequence
Obtains the duration of this sequence, expressed in MIDI ticks.
getTickLength()
- Method in interface javax.sound.midi.
Sequencer
Obtains the length of the current sequence, expressed in MIDI ticks, or 0
 if no sequence is set.
getTickLength()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Gets the height of the tick area for horizontal sliders and the width of
 the tick area for vertical sliders.
getTickLength()
- Method in class javax.swing.plaf.metal.
MetalSliderUI
Gets the height of the tick area for horizontal sliders and the width of the
 tick area for vertical sliders.
getTickPosition()
- Method in interface javax.sound.midi.
Sequencer
Obtains the current position in the sequence, expressed in MIDI ticks.
getTIFFField(int)
- Method in class javax.imageio.plugins.tiff.
TIFFDirectory
Retrieves a TIFF field from the directory.
getTIFFFields()
- Method in class javax.imageio.plugins.tiff.
TIFFDirectory
Retrieves all TIFF fields from the directory.
getTile(int, int)
- Method in class java.awt.image.
BufferedImage
Returns tile (
tileX
,
tileY
).
getTile(int, int)
- Method in interface java.awt.image.
RenderedImage
Returns tile (tileX, tileY).
getTiledSizeRequirements(SizeRequirements[])
- Static method in class javax.swing.
SizeRequirements
Determines the total space necessary to
 place a set of components end-to-end.
getTileGridXOffset()
- Method in class java.awt.image.
BufferedImage
Returns the x offset of the tile grid relative to the origin,
 For example, the x coordinate of the location of tile
 (0, 0).
getTileGridXOffset()
- Method in interface java.awt.image.
RenderedImage
Returns the X offset of the tile grid relative to the origin,
 i.e., the X coordinate of the upper-left pixel of tile (0, 0).
getTileGridXOffset()
- Method in class javax.imageio.
ImageWriteParam
Returns the horizontal tile grid offset of an image as it will
 be written to the output stream.
getTileGridXOffset(int)
- Method in class javax.imageio.
ImageReader
Returns the X coordinate of the upper-left corner of tile (0,
 0) in the given image.
getTileGridYOffset()
- Method in class java.awt.image.
BufferedImage
Returns the y offset of the tile grid relative to the origin,
 For example, the y coordinate of the location of tile
 (0, 0).
getTileGridYOffset()
- Method in interface java.awt.image.
RenderedImage
Returns the Y offset of the tile grid relative to the origin,
 i.e., the Y coordinate of the upper-left pixel of tile (0, 0).
getTileGridYOffset()
- Method in class javax.imageio.
ImageWriteParam
Returns the vertical tile grid offset of an image as it will
 be written to the output stream.
getTileGridYOffset(int)
- Method in class javax.imageio.
ImageReader
Returns the Y coordinate of the upper-left corner of tile (0,
 0) in the given image.
getTileHeight()
- Method in class java.awt.image.
BufferedImage
Returns the tile height in pixels.
getTileHeight()
- Method in interface java.awt.image.
RenderedImage
Returns the tile height in pixels.
getTileHeight()
- Method in class javax.imageio.
ImageWriteParam
Returns the height of each tile in an image as it will be written to
 the output stream.
getTileHeight(int)
- Method in class javax.imageio.
ImageReader
Returns the height of a tile in the given image.
getTileIcon()
- Method in class javax.swing.border.
MatteBorder
Returns the icon used for tiling the border or null
 if a solid color is being used.
getTileWidth()
- Method in class java.awt.image.
BufferedImage
Returns the tile width in pixels.
getTileWidth()
- Method in interface java.awt.image.
RenderedImage
Returns the tile width in pixels.
getTileWidth()
- Method in class javax.imageio.
ImageWriteParam
Returns the width of each tile in an image as it will be
 written to the output stream.
getTileWidth(int)
- Method in class javax.imageio.
ImageReader
Returns the width of a tile in the given image.
getTilingMode()
- Method in class javax.imageio.
ImageWriteParam
Returns the current tiling mode, if tiling is supported.
getTime()
- Method in class java.sql.
Timestamp
Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT
 represented by this
Timestamp
object.
getTime()
- Method in class java.util.
Calendar
Returns a
Date
object representing this
Calendar
's time value (millisecond offset from the
Epoch
").
getTime()
- Method in class java.util.
Date
Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT
 represented by this
Date
object.
getTime()
- Method in class java.util.zip.
ZipEntry
Returns the last modification time of the entry.
getTime(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
TIME
parameter as a
java.sql.Time
object.
getTime(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
java.sql.Time
object in the Java programming language.
getTime(int, Calendar)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
TIME
parameter as a
java.sql.Time
object, using
 the given
Calendar
object
 to construct the time.
getTime(int, Calendar)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.sql.Time
object
 in the Java programming language.
getTime(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
TIME
parameter as a
java.sql.Time
object.
getTime(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
java.sql.Time
object in the Java programming language.
getTime(String, Calendar)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
TIME
parameter as a
java.sql.Time
object, using
 the given
Calendar
object
 to construct the time.
getTime(String, Calendar)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.sql.Time
object
 in the Java programming language.
getTimeDateFunctions()
- Method in interface java.sql.
DatabaseMetaData
Retrieves a comma-separated list of the time and date functions available
 with this database.
getTimeDefinition()
- Method in class java.time.zone.
ZoneOffsetTransitionRule
Gets the time definition, specifying how to convert the time to an instant.
getTimeInMillis()
- Method in class java.util.
Calendar
Returns this Calendar's time value in milliseconds.
getTimeInMillis(Calendar)
- Method in class javax.xml.datatype.
Duration
Returns the length of the duration in milli-seconds.
getTimeInMillis(Date)
- Method in class javax.xml.datatype.
Duration
Returns the length of the duration in milli-seconds.
getTimeInstance()
- Static method in class java.text.
DateFormat
Gets the time formatter with the default formatting style
 for the default
FORMAT
locale.
getTimeInstance(int)
- Static method in class java.text.
DateFormat
Gets the time formatter with the given formatting style
 for the default
FORMAT
locale.
getTimeInstance(int, Locale)
- Static method in class java.text.
DateFormat
Gets the time formatter with the given formatting style
 for the given locale.
getTimeInstance(int, Locale)
- Method in class java.text.spi.
DateFormatProvider
Returns a new
DateFormat
instance which formats time
 with the given formatting style for the specified locale.
getTimeLimit()
- Method in class javax.naming.directory.
SearchControls
Retrieves the time limit of these SearchControls in milliseconds.
getTimeLocal()
- Method in class java.util.zip.
ZipEntry
Returns the last modification time of the entry in local date-time.
getTimestamp()
- Method in class java.security.
CodeSigner
Returns the signature timestamp.
getTimestamp()
- Method in class java.security.
Timestamp
Returns the date and time when the
Timestamp
was generated.
getTimestamp(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
TIMESTAMP
parameter as a
java.sql.Timestamp
object.
getTimestamp(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
java.sql.Timestamp
object in the Java programming language.
getTimestamp(int, Calendar)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
TIMESTAMP
parameter as a
java.sql.Timestamp
object, using
 the given
Calendar
object to construct
 the
Timestamp
object.
getTimestamp(int, Calendar)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.sql.Timestamp
object
 in the Java programming language.
getTimestamp(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
TIMESTAMP
parameter as a
java.sql.Timestamp
object.
getTimestamp(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as
 a
java.sql.Timestamp
object in the Java programming language.
getTimestamp(String, Calendar)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
TIMESTAMP
parameter as a
java.sql.Timestamp
object, using
 the given
Calendar
object to construct
 the
Timestamp
object.
getTimestamp(String, Calendar)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.sql.Timestamp
object
 in the Java programming language.
getTimeStamp()
- Method in class javax.management.
Notification
Get the notification timestamp.
getTimeStamp()
- Method in interface org.w3c.dom.events.
Event
Used to specify the time (in milliseconds relative to the epoch) at
 which the event was created.
getTimeToLive()
- Method in class java.net.
DatagramSocketImpl
Retrieve the TTL (time-to-live) option.
getTimeToLive()
- Method in class java.net.
MulticastSocket
Get the default time-to-live for multicast packets sent out on
 the socket.
getTimeToLive(String, Locale)
- Method in class java.util.
ResourceBundle.Control
Returns the time-to-live (TTL) value for resource bundles that
 are loaded under this
ResourceBundle.Control
.
getTimezone()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the Timezone offset in minutes or
DatatypeConstants.FIELD_UNDEFINED
if this optional field is not defined.
getTimeZone()
- Method in class java.text.
DateFormat
Gets the time zone.
getTimeZone()
- Method in class java.util.
Calendar
Gets the time zone.
getTimeZone(int)
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns a
java.util.TimeZone
for this class.
getTimeZone(String)
- Static method in class java.util.
TimeZone
Gets the
TimeZone
for the given ID.
getTimeZone(ZoneId)
- Static method in class java.util.
TimeZone
Gets the
TimeZone
for the given
zoneId
.
getTimezoneOffset()
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
-(Calendar.get(Calendar.ZONE_OFFSET) +
 Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)
.
Getting and Setting Calendar Field Values
- Search tag in class java.util.Calendar
Section
Getting and Using a SyncResolver Object
- Search tag in interface javax.sql.rowset.spi.SyncResolver
Section
getTipText()
- Method in class javax.swing.
JToolTip
Returns the text that is shown when the tool tip is displayed.
getTitle()
- Method in interface com.sun.source.doctree.
SpecTree
Returns the title.
getTitle()
- Method in class java.awt.
Dialog
Gets the title of the dialog.
getTitle()
- Method in class java.awt.
Frame
Gets the title of the frame.
getTitle()
- Method in class javax.swing.border.
TitledBorder
Returns the title of the titled border.
getTitle()
- Method in class javax.swing.
JInternalFrame
Returns the title of the
JInternalFrame
.
getTitle()
- Method in interface org.w3c.dom.html.
HTMLDocument
The title of a document as specified by the
TITLE
element
 in the head of the document.
getTitle()
- Method in interface org.w3c.dom.html.
HTMLElement
The element's advisory title.
getTitle()
- Method in interface org.w3c.dom.stylesheets.
StyleSheet
The advisory title.
getTitle(String, FontMetrics, int)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
Returns the title.
getTitleAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the tab title at
index
.
getTitleColor()
- Method in class javax.swing.border.
TitledBorder
Returns the title-color of the titled border.
getTitledBorderText()
- Method in interface javax.accessibility.
AccessibleExtendedComponent
Returns the titled border text.
getTitledBorderText()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the titled border text
getTitledBorderText()
- Method in class javax.swing.
JComponent.AccessibleJComponent
Returns the titled border text
getTitledBorderText()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the titled border text
getTitleFont()
- Method in class javax.swing.border.
TitledBorder
Returns the title-font of the titled border.
getTitleJustification()
- Method in class javax.swing.border.
TitledBorder
Returns the title-justification of the titled border.
getTitlePosition()
- Method in class javax.swing.border.
TitledBorder
Returns the title-position of the titled border.
getTLen()
- Method in class javax.crypto.spec.
GCMParameterSpec
Returns the authentication tag length.
getToggleButtonBorder()
- Static method in class javax.swing.plaf.basic.
BasicBorders
Returns a border instance for a
JToggleButton
.
getToggleButtonBorder()
- Static method in class javax.swing.plaf.metal.
MetalBorders
Returns a border instance for a
JToggleButton
.
getToggleClickCount()
- Method in class javax.swing.
JTree
Returns the number of mouse clicks needed to expand or close a node.
getToIndex()
- Method in class javax.swing.event.
TableColumnModelEvent
Returns the toIndex.
getToken()
- Method in class com.sun.security.auth.
NTNumericCredential
Return an integer representation of this
NTNumericCredential
.
getTokenThreshold()
- Method in class javax.swing.text.html.
HTMLDocument
Gets the number of tokens to buffer before trying to update
 the documents element structure.
getToolkit()
- Method in class java.awt.
Component
Gets the toolkit of this component.
getToolkit()
- Method in class java.awt.
Window
Returns the toolkit of this frame.
getToolTip()
- Method in class java.awt.
TrayIcon
Returns the tooltip string associated with this
TrayIcon
.
getToolTipLocation(MouseEvent)
- Method in class javax.swing.
JComponent
Returns the tooltip location in this component's coordinate system.
getToolTipText()
- Method in interface javax.accessibility.
AccessibleExtendedComponent
Returns the tool tip text.
getToolTipText()
- Method in class javax.swing.
AbstractButton.AccessibleAbstractButton
Returns the tool tip text
getToolTipText()
- Method in class javax.swing.
JComponent.AccessibleJComponent
Returns the tool tip text
getToolTipText()
- Method in class javax.swing.
JComponent
Returns the tooltip string that has been set with
setToolTipText
.
getToolTipText()
- Method in class javax.swing.
JLabel.AccessibleJLabel
Returns the tool tip text
getToolTipText(float, float, Shape)
- Method in class javax.swing.text.html.
ImageView
For images the tooltip text comes from text specified with the
ALT
attribute.
getToolTipText(float, float, Shape)
- Method in class javax.swing.text.
View
Returns the tooltip text at the specified location.
getToolTipText(MouseEvent)
- Method in class javax.swing.
JComponent
Returns the string to be used as the tooltip for
event
.
getToolTipText(MouseEvent)
- Method in class javax.swing.
JList
Returns the tooltip text to be used for the given event.
getToolTipText(MouseEvent)
- Method in class javax.swing.
JTabbedPane
Returns the tooltip text for the component determined by the
 mouse event location.
getToolTipText(MouseEvent)
- Method in class javax.swing.
JTable
Overrides
JComponent
's
getToolTipText
method in order to allow the renderer's tips to be used
 if it has text set.
getToolTipText(MouseEvent)
- Method in class javax.swing.
JTree
Overrides
JComponent
's
getToolTipText
method in order to allow
 renderer's tips to be used if it has text set.
getToolTipText(MouseEvent)
- Method in class javax.swing.table.
JTableHeader
Allows the renderer's tips to be used if there is text set.
getToolTipText(MouseEvent)
- Method in class javax.swing.text.
JTextComponent
Returns the string to be used as the tooltip for
event
.
getToolTipText(JTextComponent, Point)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Returns the string to be used as the tooltip at the passed in location.
getToolTipText(JTextComponent, Point)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
getToolTipText
method on each UI handled by this object.
getToolTipText(JTextComponent, Point)
- Method in class javax.swing.plaf.
TextUI
Deprecated.
replaced by
TextUI.getToolTipText2D(JTextComponent, Point2D)
getToolTipText2D(JTextComponent, Point2D)
- Method in class javax.swing.plaf.
TextUI
Returns the string to be used as the tooltip at the passed in location.
getToolTipTextAt(int)
- Method in class javax.swing.
JTabbedPane
Returns the tab tooltip text at
index
.
getTop()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the top property definition in CSS2.
getTop()
- Method in interface org.w3c.dom.css.
Rect
This attribute is used for the top of the rect.
getToPage()
- Method in class java.awt.
JobAttributes
Returns, for jobs using these attributes, the last page (inclusive)
 to be printed, if a range of pages is to be printed.
getTopComponent()
- Method in class javax.swing.
JSplitPane
Returns the component above, or to the left of the divider.
getTopInset()
- Method in class javax.swing.text.
AsyncBoxView
Get the top part of the margin around the view.
getTopInset()
- Method in class javax.swing.text.
CompositeView
Gets the top inset.
getTopLevelAncestor()
- Method in class javax.swing.
JComponent
Returns the top-level ancestor of this component (either the
 containing
Window
or
Applet
),
 or
null
if this component has not
 been added to any container.
getTopLevelWindows()
- Static method in class com.sun.java.accessibility.util.
EventQueueMonitor
Return the list of top level Windows in use in the Java Virtual Machine.
getTopLevelWindowWithFocus()
- Static method in class com.sun.java.accessibility.util.
EventQueueMonitor
Return the top level
Window
that currently has keyboard focus.
getTotalCapacity()
- Method in interface java.lang.management.
BufferPoolMXBean
Returns an estimate of the total capacity of the buffers in this pool.
getTotalColumnWidth()
- Method in class javax.swing.table.
DefaultTableColumnModel
Returns the total combined width of all columns.
getTotalColumnWidth()
- Method in interface javax.swing.table.
TableColumnModel
Returns the total width of all the columns.
getTotalCompilationTime()
- Method in interface java.lang.management.
CompilationMXBean
Returns the approximate accumulated elapsed time (in milliseconds)
 spent in compilation.
getTotalIn()
- Method in class java.util.zip.
Deflater
Returns the total number of uncompressed bytes input so far.
getTotalIn()
- Method in class java.util.zip.
Inflater
Returns the total number of compressed bytes input so far.
getTotalLoadedClassCount()
- Method in interface java.lang.management.
ClassLoadingMXBean
Returns the total number of classes that have been loaded since
 the Java virtual machine has started execution.
getTotalMemorySize()
- Method in interface com.sun.management.
OperatingSystemMXBean
Returns the total amount of memory in bytes.
getTotalOut()
- Method in class java.util.zip.
Deflater
Returns the total number of compressed bytes output so far.
getTotalOut()
- Method in class java.util.zip.
Inflater
Returns the total number of uncompressed bytes output so far.
getTotalPhysicalMemorySize()
- Method in interface com.sun.management.
OperatingSystemMXBean
Deprecated.
Use
OperatingSystemMXBean.getTotalMemorySize()
instead of
 this historically named method.
getTotalSeconds()
- Method in class java.time.
ZoneOffset
Gets the total zone offset in seconds.
getTotalSize()
- Method in interface org.w3c.dom.ls.
LSProgressEvent
The total size of the document including all external resources, this
 number might change as a document is being parsed if references to
 more external resources are seen.
getTotalSpace()
- Method in class java.io.
File
Returns the size of the partition
named
by this
 abstract pathname.
getTotalSpace()
- Method in class java.nio.file.
FileStore
Returns the size, in bytes, of the file store.
getTotalStartedThreadCount()
- Method in interface java.lang.management.
ThreadMXBean
Returns the total number of platform threads created and also started
 since the Java virtual machine started.
getTotalSwapSpaceSize()
- Method in interface com.sun.management.
OperatingSystemMXBean
Returns the total amount of swap space in bytes.
getTotalThreadAllocatedBytes()
- Method in interface com.sun.management.
ThreadMXBean
Returns an approximation of the total amount of memory, in bytes, allocated
 in heap memory by all threads since the Java virtual machine started.
getTrackBounds()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Returns the current bounds of the track, i.e. the space in between
 the increment and decrement buttons, less the insets.
getTrackLength()
- Method in class javax.swing.plaf.metal.
MetalSliderUI
Returns the longer dimension of the slide bar.
getTrackMute(int)
- Method in interface javax.sound.midi.
Sequencer
Obtains the current mute state for a track.
getTracks()
- Method in class javax.sound.midi.
Sequence
Obtains an array containing all the tracks in this sequence.
getTrackSolo(int)
- Method in interface javax.sound.midi.
Sequencer
Obtains the current solo state for a track.
getTrackWidth()
- Method in class javax.swing.plaf.metal.
MetalSliderUI
Returns the shorter dimension of the track.
getTrafficClass()
- Method in class java.net.
DatagramSocket
Gets traffic class or type-of-service in the IP datagram
 header for packets sent from this DatagramSocket.
getTrafficClass()
- Method in class java.net.
Socket
Gets traffic class or type-of-service in the IP header
 for packets sent from this Socket
getTrailerField()
- Method in class java.security.spec.
PSSParameterSpec
Returns the value for the trailer field.
getTransactionIsolation()
- Method in interface java.sql.
Connection
Retrieves this
Connection
object's current
 transaction isolation level.
getTransactionIsolation()
- Method in class javax.sql.rowset.
BaseRowSet
Returns the transaction isolation property for this
RowSet
object's connection.
getTransactionIsolation()
- Method in interface javax.sql.
RowSet
Retrieves the transaction isolation level set for this
RowSet
object.
getTransactionTimeout()
- Method in interface javax.transaction.xa.
XAResource
Obtains the current transaction timeout value set for this
 XAResource instance.
getTransferable()
- Method in class java.awt.dnd.
DragSourceContext
Returns the
Transferable
associated with
 this
DragSourceContext
.
getTransferable()
- Method in class java.awt.dnd.
DropTargetContext
get the Transferable (proxy) operand of this operation
getTransferable()
- Method in class java.awt.dnd.
DropTargetDragEvent
This method returns the Transferable object that represents
 the data associated with the current drag operation.
getTransferable()
- Method in class java.awt.dnd.
DropTargetDropEvent
This method returns the
Transferable
object
 associated with the drop.
getTransferable()
- Method in class javax.swing.
TransferHandler.TransferSupport
Returns the
Transferable
associated with this transfer.
getTransferData(DataFlavor)
- Method in class java.awt.datatransfer.
StringSelection
Returns the
Transferable
's data in the requested
DataFlavor
if possible.
getTransferData(DataFlavor)
- Method in interface java.awt.datatransfer.
Transferable
Returns an object which represents the data to be transferred.
getTransferData(DataFlavor)
- Method in class java.awt.dnd.
DropTargetContext.TransferableProxy
Returns an object which represents the data provided by
 the encapsulated transferable for the requested data flavor.
getTransferDataFlavors()
- Method in class java.awt.datatransfer.
StringSelection
Returns an array of flavors in which this
Transferable
can
 provide the data.
getTransferDataFlavors()
- Method in interface java.awt.datatransfer.
Transferable
Returns an array of DataFlavor objects indicating the flavors the data
 can be provided in.
getTransferDataFlavors()
- Method in class java.awt.dnd.
DropTargetContext.TransferableProxy
Returns an array of DataFlavor objects indicating the flavors
 the data can be provided in by the encapsulated transferable.
getTransferHandler()
- Method in class javax.swing.
JApplet
Deprecated.
Gets the
transferHandler
property.
getTransferHandler()
- Method in class javax.swing.
JComponent
Gets the
transferHandler
property.
getTransferHandler()
- Method in class javax.swing.
JDialog
Gets the
transferHandler
property.
getTransferHandler()
- Method in class javax.swing.
JFrame
Gets the
transferHandler
property.
getTransferHandler()
- Method in class javax.swing.
JWindow
Gets the
transferHandler
property.
getTransferSize()
- Method in exception class java.sql.
DataTruncation
Gets the number of bytes of data actually transferred.
getTransferType()
- Method in class java.awt.image.
ColorModel
Returns the transfer type of this
ColorModel
.
getTransferType()
- Method in class java.awt.image.
MultiPixelPackedSampleModel
Returns the TransferType used to transfer pixels by way of the
getDataElements
and
setDataElements
methods.
getTransferType()
- Method in class java.awt.image.
Raster
Returns the TransferType used to transfer pixels via the
  getDataElements and setDataElements methods.
getTransferType()
- Method in class java.awt.image.
SampleModel
Returns the TransferType used to transfer pixels via the
  getDataElements and setDataElements methods.
getTransform()
- Method in class java.awt.font.
FontRenderContext
Gets the transform that is used to scale typographical points
   to pixels in this
FontRenderContext
.
getTransform()
- Method in class java.awt.
Font
Returns a copy of the transform associated with this
Font
.
getTransform()
- Method in class java.awt.font.
TransformAttribute
Returns a copy of the wrapped transform.
getTransform()
- Method in class java.awt.
Graphics2D
Returns a copy of the current
Transform
in the
Graphics2D
context.
getTransform()
- Method in class java.awt.image.
AffineTransformOp
Returns the affine transform used by this transform operation.
getTransform()
- Method in class java.awt.image.renderable.
RenderContext
Gets the current user-to-device AffineTransform.
getTransform()
- Method in class java.awt.
MultipleGradientPaint
Returns a copy of the transform applied to the gradient.
getTransformer()
- Method in interface javax.xml.transform.sax.
TransformerHandler
Get the
Transformer
associated with this handler, which
 is needed in order to set parameters and output properties.
getTransforms()
- Method in interface javax.xml.crypto.dsig.keyinfo.
RetrievalMethod
Returns an
unmodifiable
 list
of
Transform
s of this
RetrievalMethod
.
getTransforms()
- Method in interface javax.xml.crypto.dsig.
Reference
Returns an
unmodifiable
 list
of
Transform
s that are contained in this
Reference
.
getTransformType()
- Method in class java.awt.font.
FontRenderContext
Returns the integer type of the affine transform for this
FontRenderContext
as specified by
AffineTransform.getType()
getTransition(LocalDateTime)
- Method in class java.time.zone.
ZoneRules
Gets the offset transition applicable at the specified local date-time in these rules.
getTransitionRules()
- Method in class java.time.zone.
ZoneRules
Gets the list of transition rules for years beyond those defined in the transition list.
getTransitions()
- Method in class java.time.zone.
ZoneRules
Gets the complete list of fully defined transitions.
getTranslateInstance(double, double)
- Static method in class java.awt.geom.
AffineTransform
Returns a transform representing a translation transformation.
getTranslateX()
- Method in class java.awt.geom.
AffineTransform
Returns the X coordinate of the translation element (m02) of the
 3x3 affine transformation matrix.
getTranslateY()
- Method in class java.awt.geom.
AffineTransform
Returns the Y coordinate of the translation element (m12) of the
 3x3 affine transformation matrix.
getTranslatorClass(Class<?>)
- Static method in class com.sun.java.accessibility.util.
Translator
Find a translator for this class.
getTransmitter()
- Method in interface javax.sound.midi.
MidiDevice
Obtains a MIDI OUT connection from which the MIDI device will transmit
 MIDI data.
getTransmitter()
- Static method in class javax.sound.midi.
MidiSystem
Obtains a MIDI transmitter from an external MIDI port or other default
 source.
getTransmitters()
- Method in interface javax.sound.midi.
MidiDevice
Returns all currently active, non-closed transmitters connected with this
MidiDevice
.
getTransparency()
- Method in class java.awt.
Color
Returns the transparency mode for this
Color
.
getTransparency()
- Method in class java.awt.
GradientPaint
Returns the transparency mode for this
GradientPaint
.
getTransparency()
- Method in class java.awt.image.
BufferedImage
Returns the transparency.
getTransparency()
- Method in class java.awt.image.
ColorModel
Returns the transparency.
getTransparency()
- Method in class java.awt.image.
IndexColorModel
Returns the transparency.
getTransparency()
- Method in class java.awt.image.
VolatileImage
Returns the transparency.
getTransparency()
- Method in class java.awt.
MultipleGradientPaint
Returns the transparency mode for this
Paint
object.
getTransparency()
- Method in class java.awt.
TexturePaint
Returns the transparency mode for this
TexturePaint
.
getTransparency()
- Method in interface java.awt.
Transparency
Returns the type of this
Transparency
.
getTransparentPixel()
- Method in class java.awt.image.
IndexColorModel
Returns the index of a transparent pixel in this
IndexColorModel
or -1 if there is no pixel
 with an alpha value of 0.
getTrayIcons()
- Method in class java.awt.
SystemTray
Returns an array of all icons added to the tray by this
 application.
getTrayIconSize()
- Method in class java.awt.
SystemTray
Returns the size, in pixels, of the space that a tray icon will
 occupy in the system tray.
getTRC()
- Method in class java.awt.color.
ICC_ProfileGray
Returns the TRC as an array of shorts.
getTRC(int)
- Method in class java.awt.color.
ICC_ProfileRGB
Returns the TRC for a particular component as an array.
getTree(Element)
- Method in class com.sun.source.util.
Trees
Returns the
Tree
node for a given
Element
.
getTree(Element, AnnotationMirror)
- Method in class com.sun.source.util.
Trees
Returns the
Tree
node for an
AnnotationMirror
on a given
Element
.
getTree(Element, AnnotationMirror, AnnotationValue)
- Method in class com.sun.source.util.
Trees
Returns the
Tree
node for an
AnnotationValue
for an
AnnotationMirror
on a given
Element
.
getTree(ExecutableElement)
- Method in class com.sun.source.util.
Trees
Returns the
MethodTree
node for a given
ExecutableElement
.
getTree(TypeElement)
- Method in class com.sun.source.util.
Trees
Returns the
ClassTree
node for a given
TypeElement
.
getTreeCellEditorComponent(JTree, Object, boolean, boolean, boolean, int)
- Method in class javax.swing.
DefaultCellEditor
Implements the
TreeCellEditor
interface.
getTreeCellEditorComponent(JTree, Object, boolean, boolean, boolean, int)
- Method in class javax.swing.tree.
DefaultTreeCellEditor
Configures the editor.
getTreeCellEditorComponent(JTree, Object, boolean, boolean, boolean, int)
- Method in interface javax.swing.tree.
TreeCellEditor
Sets an initial
value
for the editor.
getTreeCellRendererComponent(JTree, Object, boolean, boolean, boolean, int, boolean)
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Configures the renderer based on the passed in components.
getTreeCellRendererComponent(JTree, Object, boolean, boolean, boolean, int, boolean)
- Method in interface javax.swing.tree.
TreeCellRenderer
Sets the value of the current tree cell to
value
.
getTreeComputerIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
TreeComputerIcon
.
getTreeControlIcon(boolean)
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Constructs a new instance of
TreeControlIcon
.
getTreeExpansionListeners()
- Method in class javax.swing.
JTree
Returns an array of all the
TreeExpansionListener
s added
 to this JTree with addTreeExpansionListener().
getTreeFloppyDriveIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
TreeFloppyDriveIcon
.
getTreeFolderIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Constructs a new instance of
TreeFolderIcon
.
getTreeHardDriveIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns the instance of
TreeHardDriveIcon
.
getTreeLeafIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Constructs a new instance of
TreeLeafIcon
.
getTreeLock()
- Method in class java.awt.
Component
Gets this component's locking object (the object that owns the thread
 synchronization monitor) for AWT component-tree and layout
 operations.
getTreeLock()
- Method in class java.awt.
MenuComponent
Gets this component's locking object (the object that owns the thread
 synchronization monitor) for AWT component-tree and layout
 operations.
getTreeModelListeners()
- Method in class javax.swing.tree.
DefaultTreeModel
Returns an array of all the tree model listeners
 registered on this model.
getTreePath()
- Method in class com.sun.source.util.
DocTreePath
Returns the
TreePath
associated with this path.
getTreePath()
- Method in class javax.swing.event.
TreeModelEvent
For all events, except treeStructureChanged,
 returns the parent of the changed nodes.
getTreeSelectionListeners()
- Method in class javax.swing.
JTree
Returns an array of all the
TreeSelectionListener
s added
 to this JTree with addTreeSelectionListener().
getTreeSelectionListeners()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Returns an array of all the tree selection listeners
 registered on this model.
getTreeWillExpandListeners()
- Method in class javax.swing.
JTree
Returns an array of all the
TreeWillExpandListener
s added
 to this JTree with addTreeWillExpandListener().
getTrigger()
- Method in class java.awt.dnd.
DragSourceContext
Returns the
DragGestureEvent
that initially triggered the drag.
getTrigger()
- Method in class javax.management.monitor.
MonitorNotification
Gets the threshold/string (depending on the monitor type) that triggered off this monitor notification.
getTriggerEvent()
- Method in class java.awt.dnd.
DragGestureEvent
Returns the initial event that triggered the gesture.
getTriggerEvent()
- Method in class java.awt.dnd.
DragGestureRecognizer
This method returns the first event in the
 series of events that initiated
 the Drag and Drop operation.
getTrueExpression()
- Method in interface com.sun.source.tree.
ConditionalExpressionTree
Returns the expression to be evaluated if the condition is true.
getTrustAnchor()
- Method in class java.security.cert.
PKIXCertPathValidatorResult
Returns the
TrustAnchor
describing the CA that served
 as a trust anchor for the certification path.
getTrustAnchors()
- Method in class java.security.cert.
PKIXParameters
Returns an immutable
Set
of the most-trusted
 CAs.
getTrustedCert()
- Method in class java.security.cert.
TrustAnchor
Returns the most-trusted CA certificate.
getTrustedCertificate()
- Method in class java.security.
KeyStore.TrustedCertificateEntry
Gets the trusted
Certificate
from this entry.
getTrustManagers()
- Method in class javax.net.ssl.
TrustManagerFactory
Returns one trust manager for each type of trust material.
getTsa()
- Method in class jdk.security.jarsigner.
JarSigner
Returns the URI of the Time Stamping Authority (TSA).
getTTL()
- Method in class java.net.
DatagramSocketImpl
Deprecated.
use getTimeToLive instead.
getTTL()
- Method in class java.net.
MulticastSocket
Deprecated.
use the
MulticastSocket.getTimeToLive()
method instead,
 which returns an
int
instead of a
byte
.
getType()
- Method in class com.sun.security.jgss.
AuthorizationDataEntry
Get the ad-type field.
getType()
- Method in interface com.sun.source.doctree.
SerialFieldTree
Returns the type of the serial field.
getType()
- Method in interface com.sun.source.tree.
ArrayTypeTree
Returns the element type of this array type.
getType()
- Method in interface com.sun.source.tree.
InstanceOfTree
Returns the type for which to check.
getType()
- Method in interface com.sun.source.tree.
NewArrayTree
Returns the base type of the expression.
getType()
- Method in interface com.sun.source.tree.
ParameterizedTypeTree
Returns the base type.
getType()
- Method in interface com.sun.source.tree.
TypeCastTree
Returns the target type of the cast.
getType()
- Method in interface com.sun.source.tree.
VariableTree
Returns the type of the variable being declared.
getType()
- Method in class java.awt.color.
ColorSpace
Returns the color space type of this
ColorSpace
(for example
TYPE_RGB
,
TYPE_XYZ
, ...).
getType()
- Method in class java.awt.
Cursor
Returns the type for this cursor.
getType()
- Method in class java.awt.font.
GlyphMetrics
Returns the raw glyph type code.
getType()
- Method in class java.awt.geom.
AffineTransform
Retrieves the flag bits describing the conversion properties of
 this transform.
getType()
- Method in class java.awt.
GraphicsDevice
Returns the type of this
GraphicsDevice
.
getType()
- Method in class java.awt.image.
BufferedImage
Returns the image type.
getType()
- Method in class java.awt.
Window
Returns the type of the window.
getType()
- Method in class java.io.
ObjectStreamField
Get the type of the field.
getType()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the type of this memory pool.
getType()
- Method in interface java.lang.reflect.
AnnotatedType
Returns the underlying type that this annotated type represents.
getType()
- Method in class java.lang.reflect.
Field
Returns a
Class
object that identifies the
 declared type for the field represented by this
Field
object.
getType()
- Method in class java.lang.reflect.
Parameter
Returns a
Class
object that identifies the
 declared type for the parameter represented by this
Parameter
object.
getType()
- Method in class java.lang.reflect.
RecordComponent
Returns a
Class
that identifies the declared type for this
 record component.
getType()
- Method in class java.security.cert.
Certificate
Returns the type of this certificate.
getType()
- Method in class java.security.cert.
CertificateFactory
Returns the name of the certificate type associated with this
 certificate factory.
getType()
- Method in class java.security.cert.
CertPath
Returns the type of
Certificate
s in this certification
 path.
getType()
- Method in class java.security.cert.
CertStore
Returns the type of this
CertStore
.
getType()
- Method in class java.security.cert.
CRL
Returns the type of this CRL.
getType()
- Method in class java.security.
KeyStore
Returns the type of this keystore.
getType()
- Method in class java.security.
Policy
Deprecated.
Return the type of this
Policy
.
getType()
- Method in class java.security.
Provider.Service
Get the type of this service.
getType()
- Method in interface java.sql.
ResultSet
Retrieves the type of this
ResultSet
object.
getType()
- Method in interface javax.accessibility.
AccessibleTableModelChange
Returns the type of event.
getType()
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns the type of the data stored in the field.
getType()
- Method in class javax.management.
MBeanAttributeInfo
Returns the class name of the attribute.
getType()
- Method in class javax.management.
MBeanParameterInfo
Returns the type or class name of the data.
getType()
- Method in class javax.management.
Notification
Get the notification type.
getType()
- Method in class javax.naming.event.
NamingEvent
Returns the type of this event.
getType()
- Method in class javax.naming.ldap.
Rdn
Retrieves one of this Rdn's type.
getType()
- Method in class javax.naming.
RefAddr
Retrieves the address type of this address.
getType()
- Method in class javax.net.ssl.
SNIMatcher
Returns the server name type of this
SNIMatcher
object.
getType()
- Method in class javax.net.ssl.
SNIServerName
Returns the name type of this server name.
getType()
- Method in class javax.security.auth.login.
Configuration
Return the type of this Configuration.
getType()
- Method in class javax.smartcardio.
TerminalFactory
Returns the type of this TerminalFactory.
getType()
- Method in class javax.sound.midi.
MetaMessage
Obtains the type of the
MetaMessage
.
getType()
- Method in class javax.sound.midi.
MidiFileFormat
Obtains the MIDI file type.
getType()
- Method in class javax.sound.sampled.
AudioFileFormat
Obtains the audio file type, such as
WAVE
or
AU
.
getType()
- Method in class javax.sound.sampled.
Control
Obtains the control's type.
getType()
- Method in class javax.sound.sampled.
LineEvent
Obtains the event's type.
getType()
- Method in class javax.sql.rowset.
BaseRowSet
Returns the type of this
RowSet
object.
getType()
- Method in interface javax.swing.event.
DocumentEvent
Gets the type of event.
getType()
- Method in class javax.swing.event.
ListDataEvent
Returns the event type.
getType()
- Method in class javax.swing.event.
RowSorterEvent
Returns the type of event.
getType()
- Method in class javax.swing.event.
TableModelEvent
Returns the type of event - one of: INSERT, UPDATE and DELETE.
getType()
- Method in class javax.swing.
JTable.AccessibleJTable.AccessibleJTableModelChange
Returns the type.
getType()
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Returns the type of event.
getType()
- Method in class javax.swing.text.
DefaultStyledDocument.ElementSpec
Gets the element type.
getType()
- Method in class javax.swing.text.html.parser.
AttributeList
Returns the attribute type.
getType()
- Method in class javax.swing.text.html.parser.
Element
Get type.
getType()
- Method in class javax.swing.text.html.parser.
Entity
Gets the type of the entity.
getType()
- Method in interface javax.xml.crypto.
URIReference
Returns the type of data referenced by this URI.
getType()
- Method in class jdk.jfr.consumer.
RecordedClassLoader
Returns the class of the class loader.
getType()
- Method in class jdk.jfr.consumer.
RecordedFrame
Returns the frame type for the execution point that is represented by this
 recorded frame (for example,
"Interpreted"
,
"JIT compiled"
or
"Inlined"
).
getType()
- Method in class jdk.jfr.consumer.
RecordedMethod
Returns the class this method belongs to, if it belong to a Java frame.
getType()
- Method in interface org.w3c.dom.css.
CSSRule
The type of the rule, as defined above.
getType()
- Method in interface org.w3c.dom.
DOMError
A
DOMString
indicating which related data is expected in
relatedData
.
getType()
- Method in interface org.w3c.dom.events.
Event
The name of the event (case-insensitive).
getType()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Advisory content type.
getType()
- Method in interface org.w3c.dom.html.
HTMLButtonElement
The type of button.
getType()
- Method in interface org.w3c.dom.html.
HTMLInputElement
The type of control created.
getType()
- Method in interface org.w3c.dom.html.
HTMLLIElement
List item bullet style.
getType()
- Method in interface org.w3c.dom.html.
HTMLLinkElement
Advisory content type.
getType()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Content type for data downloaded via
data
attribute.
getType()
- Method in interface org.w3c.dom.html.
HTMLOListElement
Numbering style.
getType()
- Method in interface org.w3c.dom.html.
HTMLParamElement
Content type for the
value
attribute when
valuetype
has the value "ref".
getType()
- Method in interface org.w3c.dom.html.
HTMLScriptElement
The content type of the script language.
getType()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
The type of this form control.
getType()
- Method in interface org.w3c.dom.html.
HTMLStyleElement
The content type pf the style sheet language.
getType()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
The type of this form control.
getType()
- Method in interface org.w3c.dom.html.
HTMLUListElement
Bullet style.
getType()
- Method in interface org.w3c.dom.stylesheets.
StyleSheet
This specifies the style sheet language for this style sheet.
getType(char)
- Static method in class java.lang.
Character
Returns a value indicating a character's general category.
getType(int)
- Static method in class java.lang.
Character
Returns a value indicating a character's general category.
getType(int)
- Method in interface org.xml.sax.
AttributeList
Deprecated.
Return the type of an attribute in the list (by position).
getType(int)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's type by index.
getType(int)
- Method in class org.xml.sax.helpers.
AttributeListImpl
Deprecated.
Get the type of an attribute (by position).
getType(int)
- Method in class org.xml.sax.helpers.
AttributesImpl
Return an attribute's type by index.
getType(DocTreePath)
- Method in class com.sun.source.util.
DocTrees
Returns the language model type referred to by the leaf node of the given
DocTreePath
, or
null
if unknown.
getType(String)
- Method in class javax.management.openmbean.
CompositeType
Returns the
open type
of the item whose name is
itemName
,
 or
null
if this
CompositeType
instance does not define any item
 whose name is
itemName
.
getType(String)
- Method in interface org.xml.sax.
AttributeList
Deprecated.
Return the type of an attribute in the list (by name).
getType(String)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's type by XML qualified (prefixed) name.
getType(String)
- Method in class org.xml.sax.helpers.
AttributeListImpl
Deprecated.
Get the type of an attribute (by name).
getType(String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Look up an attribute's type by qualified (prefixed) name.
getType(String, String)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's type by Namespace name.
getType(String, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Look up an attribute's type by Namespace-qualified name.
getTypeAlternatives()
- Method in interface com.sun.source.tree.
UnionTypeTree
Returns the alternative type expressions.
getTypeArguments()
- Method in interface com.sun.source.tree.
MemberReferenceTree
Returns the type arguments for the reference.
getTypeArguments()
- Method in interface com.sun.source.tree.
MethodInvocationTree
Returns the type arguments for this method invocation.
getTypeArguments()
- Method in interface com.sun.source.tree.
NewClassTree
Returns the type arguments for the object being created.
getTypeArguments()
- Method in interface com.sun.source.tree.
ParameterizedTypeTree
Returns the type arguments.
getTypeArguments()
- Method in interface javax.lang.model.type.
DeclaredType
Returns the actual type arguments of this type.
getTypeByName(String)
- Static method in class javax.imageio.plugins.tiff.
TIFFField
Returns the data type constant corresponding to the supplied data
 type name.
getTypeCode()
- Method in class java.io.
ObjectStreamField
Returns character encoding of field type.
getTypeConverter(Class<?>, Class<?>)
- Method in interface jdk.dynalink.linker.
LinkerServices
Given a source and target type, returns a method handle that converts
 between them.
getTypeDecls()
- Method in interface com.sun.source.tree.
CompilationUnitTree
Returns the type declarations appearing in this compilation unit,
 or an empty list if there are no type declarations.
getTypeDescription(File)
- Method in class javax.swing.filechooser.
FileView
A human readable description of the type of the file.
getTypeDescription(File)
- Method in class javax.swing.
JFileChooser
Returns the file type.
getTypeElement()
- Method in class com.sun.source.util.
TaskEvent
Returns the type element for this event.
getTypeElement(CharSequence)
- Method in interface javax.lang.model.util.
Elements
Returns a type element given its canonical name if the type element is uniquely
 determinable in the environment.
getTypeElement(ModuleElement, CharSequence)
- Method in interface javax.lang.model.util.
Elements
Returns a type element given its canonical name, as seen from the given module.
getTypeId()
- Method in class jdk.jfr.
AnnotationElement
Returns the type ID for this
AnnotationElement
.
getTypeId()
- Method in class jdk.jfr.
SettingDescriptor
Returns a unique ID for the type in the Java Virtual Machine (JVM).
getTypeId()
- Method in class jdk.jfr.
ValueDescriptor
Returns a unique ID for the type in the Java virtual Machine (JVM).
getTypeInfo()
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of all the data types supported by
 this database.
getTypeInfoProvider()
- Method in class javax.xml.validation.
ValidatorHandler
Obtains the
TypeInfoProvider
implementation of this
ValidatorHandler
.
getTypeMap()
- Method in interface java.sql.
Connection
Retrieves the
Map
object associated with this
Connection
object.
getTypeMap()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves the type map associated with the
Connection
object for this
RowSet
object.
getTypeMap()
- Method in interface javax.sql.
RowSet
Retrieves the
Map
object associated with this
RowSet
object, which specifies the custom mapping
 of SQL user-defined types, if any.
getTypeMirror()
- Method in exception class javax.lang.model.type.
MirroredTypeException
Returns the type mirror corresponding to the type being accessed.
getTypeMirror(TreePath)
- Method in class com.sun.source.util.
Trees
Returns the
TypeMirror
for the
Tree
node identified by a given
TreePath
.
getTypeMirror(Iterable<? extends Tree>)
- Method in class com.sun.source.util.
JavacTask
Returns a type mirror of the tree node determined by the specified path.
getTypeMirrors()
- Method in exception class javax.lang.model.type.
MirroredTypesException
Returns the type mirrors corresponding to the types being accessed.
getTypeName()
- Method in class java.lang.
Class
Return an informative string for the name of this class or interface.
getTypeName()
- Method in interface java.lang.reflect.
Type
Returns a string describing this type, including information
 about any type parameters.
getTypeName()
- Method in class javax.management.openmbean.
OpenType
Returns the name of this
OpenType
instance.
getTypeName()
- Method in class jdk.jfr.
AnnotationElement
Returns the fully qualified name of the annotation type that corresponds to
 this
AnnotationElement
(for example,
"jdk.jfr.Label"
).
getTypeName()
- Method in class jdk.jfr.
SettingDescriptor
Returns the fully qualified class name of the type that is associated with this
 setting descriptor.
getTypeName()
- Method in class jdk.jfr.
ValueDescriptor
Returns the fully qualified class name of the type that is associated with
 this value descriptor.
getTypeName()
- Method in class jdk.management.jfr.
SettingDescriptorInfo
Returns the type name of the setting associated this
SettingDescriptorInfo
(for example,
"jdk.settings.Threshold"
).
getTypeName()
- Method in interface org.w3c.dom.
TypeInfo
The name of a type declared for the associated element or attribute,
 or
null
if unknown.
getTypeName(int)
- Static method in class javax.imageio.plugins.tiff.
TIFFField
Returns the name of the supplied data type constant.
getTypeNamespace()
- Method in interface org.w3c.dom.
TypeInfo
The namespace of the type declared for the associated element or
 attribute or
null
if the element does not have
 declaration or if no namespace information is available.
getTypeParameters()
- Method in interface com.sun.source.tree.
ClassTree
Returns any type parameters of this type declaration.
getTypeParameters()
- Method in interface com.sun.source.tree.
MethodTree
Returns the type parameters of the method being declared.
getTypeParameters()
- Method in class java.lang.
Class
Returns an array of
TypeVariable
objects that represent the
 type variables declared by the generic declaration represented by this
GenericDeclaration
object, in declaration order.
getTypeParameters()
- Method in class java.lang.reflect.
Constructor
Returns an array of
TypeVariable
objects that represent the
 type variables declared by the generic declaration represented by this
GenericDeclaration
object, in declaration order.
getTypeParameters()
- Method in class java.lang.reflect.
Executable
Returns an array of
TypeVariable
objects that represent the
 type variables declared by the generic declaration represented by this
GenericDeclaration
object, in declaration order.
getTypeParameters()
- Method in interface java.lang.reflect.
GenericDeclaration
Returns an array of
TypeVariable
objects that
 represent the type variables declared by the generic
 declaration represented by this
GenericDeclaration
object, in declaration order.
getTypeParameters()
- Method in class java.lang.reflect.
Method
Returns an array of
TypeVariable
objects that represent the
 type variables declared by the generic declaration represented by this
GenericDeclaration
object, in declaration order.
getTypeParameters()
- Method in interface javax.lang.model.element.
ExecutableElement
Returns the formal type parameters of this executable
 in declaration order.
getTypeParameters()
- Method in interface javax.lang.model.element.
Parameterizable
Returns the formal type parameters of an element in
 declaration order.
getTypeParameters()
- Method in interface javax.lang.model.element.
TypeElement
Returns the formal type parameters of this class or interface element
 in declaration order.
getTypes()
- Method in class com.sun.source.util.
JavacTask
Returns a utility object for dealing with type mirrors.
getTypeString()
- Method in class java.io.
ObjectStreamField
Return the JVM type signature.
getTypeUtils()
- Method in interface javax.annotation.processing.
ProcessingEnvironment
Returns an implementation of some utility methods for
 operating on types.
getTypeUtils()
- Method in interface jdk.javadoc.doclet.
DocletEnvironment
Returns an instance of the
Types
utility class.
getTypeVariables()
- Method in interface javax.lang.model.type.
ExecutableType
Returns the type variables declared by the formal type parameters
 of this executable.
getU()
- Method in interface java.security.interfaces.
XECPublicKey
Get the u coordinate of the point.
getU()
- Method in class java.security.spec.
XECPublicKeySpec
Get the u coordinate of the point.
getUDTs(String, String, String, int[])
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of the user-defined types (UDTs) defined
 in a particular schema.
getUI()
- Method in class javax.swing.
AbstractButton
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JColorChooser
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JComboBox
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JComponent
Returns the look and feel delegate that renders this component.
getUI()
- Method in class javax.swing.
JDesktopPane
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JFileChooser
Gets the UI object which implements the L&F for this component.
getUI()
- Method in class javax.swing.
JInternalFrame
Returns the look-and-feel object that renders this component.
getUI()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon
Returns the look-and-feel object that renders this component.
getUI()
- Method in class javax.swing.
JLabel
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JLayer
Returns the
LayerUI
for this
JLayer
.
getUI()
- Method in class javax.swing.
JList
Returns the
ListUI
, the look and feel object that
 renders this component.
getUI()
- Method in class javax.swing.
JMenuBar
Returns the menubar's current UI.
getUI()
- Method in class javax.swing.
JOptionPane
Returns the UI object which implements the L&F for this component.
getUI()
- Method in class javax.swing.
JPanel
Returns the look and feel (L&F) object that renders this component.
getUI()
- Method in class javax.swing.
JPopupMenu
Returns the look and feel (L&F) object that renders this component.
getUI()
- Method in class javax.swing.
JProgressBar
Returns the look-and-feel object that renders this component.
getUI()
- Method in class javax.swing.
JRootPane
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JScrollBar
Returns the delegate that implements the look and feel for
 this component.
getUI()
- Method in class javax.swing.
JScrollPane
Returns the look and feel (L&F) object that renders this component.
getUI()
- Method in class javax.swing.
JSeparator
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JSlider
Gets the UI object which implements the L&F for this component.
getUI()
- Method in class javax.swing.
JSpinner
Returns the look and feel (L&F) object that renders this component.
getUI()
- Method in class javax.swing.
JSplitPane
Returns the
SplitPaneUI
that is providing the
 current look and feel.
getUI()
- Method in class javax.swing.
JTabbedPane
Returns the UI object which implements the L&F for this component.
getUI()
- Method in class javax.swing.
JTable
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JToolBar
Returns the tool bar's current UI.
getUI()
- Method in class javax.swing.
JToolTip
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JTree
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.
JViewport
Returns the L&F object that renders this component.
getUI()
- Method in class javax.swing.table.
JTableHeader
Returns the look and feel (L&F) object that renders this component.
getUI()
- Method in class javax.swing.text.
JTextComponent
Fetches the user-interface factory for this text-oriented editor.
getUI(int, String)
- Method in class javax.print.
ServiceUIFactory
Get a UI object which may be cast to the requested UI type by the
 application and used in its user interface.
getUI(JComponent)
- Method in class javax.swing.
UIDefaults
Creates an
ComponentUI
implementation for the
 specified component.
getUI(JComponent)
- Static method in class javax.swing.
UIManager
Returns the appropriate
ComponentUI
implementation for
target
.
getUIActionMap(JComponent)
- Static method in class javax.swing.
SwingUtilities
Returns the ActionMap provided by the UI
 in component
component
.
getUIClass(String)
- Method in class javax.swing.
UIDefaults
Returns the L&F class that renders this component.
getUIClass(String, ClassLoader)
- Method in class javax.swing.
UIDefaults
The value of
get(uidClassID)
must be the
String
name of a
 class that implements the corresponding
ComponentUI
class.
getUIClassID()
- Method in class javax.swing.
JButton
Returns a string that specifies the name of the L&F class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JCheckBox
Returns a string that specifies the name of the L&F class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JCheckBoxMenuItem
Returns the name of the L&F class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JColorChooser
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JComboBox
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JComponent
Returns the
UIDefaults
key used to
 look up the name of the
swing.plaf.ComponentUI
class that defines the look and feel
 for this component.
getUIClassID()
- Method in class javax.swing.
JDesktopPane
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JEditorPane
Gets the class ID for the UI.
getUIClassID()
- Method in class javax.swing.
JFileChooser
Returns a string that specifies the name of the L&F class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JFormattedTextField
Gets the class ID for a UI.
getUIClassID()
- Method in class javax.swing.
JInternalFrame
Returns the name of the look-and-feel
 class that renders this component.
getUIClassID()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon
Returns the name of the look-and-feel
 class that renders this component.
getUIClassID()
- Method in class javax.swing.
JLabel
Returns a string that specifies the name of the l&f class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JList
Returns
"ListUI"
, the
UIDefaults
key used to look
 up the name of the
javax.swing.plaf.ListUI
class that defines
 the look and feel for this component.
getUIClassID()
- Method in class javax.swing.
JMenu
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JMenuBar
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JMenuItem
Returns the suffix used to construct the name of the L&F class used to
 render this component.
getUIClassID()
- Method in class javax.swing.
JOptionPane
Returns the name of the UI class that implements the
 L&F for this component.
getUIClassID()
- Method in class javax.swing.
JPanel
Returns a string that specifies the name of the L&F class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JPasswordField
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JPopupMenu
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JPopupMenu.Separator
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JProgressBar
Returns the name of the look-and-feel class that renders this component.
getUIClassID()
- Method in class javax.swing.
JRadioButton
Returns the name of the L&F class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JRadioButtonMenuItem
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JRootPane
Returns a string that specifies the name of the L&F class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JScrollBar
Returns the name of the LookAndFeel class for this component.
getUIClassID()
- Method in class javax.swing.
JScrollPane
Returns the suffix used to construct the name of the L&F class used to
 render this component.
getUIClassID()
- Method in class javax.swing.
JSeparator
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JSlider
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JSpinner
Returns the suffix used to construct the name of the look and feel
 (L&F) class used to render this component.
getUIClassID()
- Method in class javax.swing.
JSplitPane
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JTabbedPane
Returns the name of the UI class that implements the
 L&F for this component.
getUIClassID()
- Method in class javax.swing.
JTable
Returns the suffix used to construct the name of the L&F class used to
 render this component.
getUIClassID()
- Method in class javax.swing.
JTextArea
Returns the class ID for the UI.
getUIClassID()
- Method in class javax.swing.
JTextField
Gets the class ID for a UI.
getUIClassID()
- Method in class javax.swing.
JTextPane
Returns the class ID for the UI.
getUIClassID()
- Method in class javax.swing.
JToggleButton
Returns a string that specifies the name of the l&f class
 that renders this component.
getUIClassID()
- Method in class javax.swing.
JToolBar
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JToolBar.Separator
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JToolTip
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JTree
Returns the name of the L&F class that renders this component.
getUIClassID()
- Method in class javax.swing.
JViewport
Returns a string that specifies the name of the L&F class
 that renders this component.
getUIClassID()
- Method in class javax.swing.table.
JTableHeader
Returns the suffix used to construct the name of the look and feel
 (L&F) class used to render this component.
getUIClassNamesForRole(int)
- Method in class javax.print.
ServiceUIFactory
Given a UI role obtained from this factory obtain the UI types available
 from this factory which implement this role.
getUid()
- Method in class com.sun.security.auth.module.
UnixSystem
Get the UID for the current Unix user.
getUIError(String)
- Method in class javax.swing.
UIDefaults
If
getUI()
fails for any reason,
 it calls this method before returning
null
.
getUIInputMap(JComponent, int)
- Static method in class javax.swing.
SwingUtilities
Returns the InputMap provided by the UI for condition
condition
in component
component
.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiButtonUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiColorChooserUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiDesktopIconUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiDesktopPaneUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiInternalFrameUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiLabelUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiListUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiMenuBarUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiMenuItemUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiPanelUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiProgressBarUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiRootPaneUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiScrollBarUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiScrollPaneUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiSeparatorUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiSliderUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiSpinnerUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiTableHeaderUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiTableUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiTextUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiToolBarUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiToolTipUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Returns the list of UIs associated with this multiplexing UI.
getUIs()
- Method in class javax.swing.plaf.multi.
MultiViewportUI
Returns the list of UIs associated with this multiplexing UI.
getUnallocatedSpace()
- Method in class java.nio.file.
FileStore
Returns the number of unallocated bytes in the file store.
getUnarrivedParties()
- Method in class java.util.concurrent.
Phaser
Returns the number of registered parties that have not yet
 arrived at the current phase of this phaser.
getUnboundInstance()
- Static method in class javax.security.auth.kerberos.
KeyTab
Returns the default unbound
KeyTab
instance.
getUnboundInstance(File)
- Static method in class javax.security.auth.kerberos.
KeyTab
Returns an unbound
KeyTab
instance from a
File
object.
getUncaughtExceptionHandler()
- Method in class java.lang.
Thread
Returns the handler invoked when this thread abruptly terminates
 due to an uncaught exception.
getUncaughtExceptionHandler()
- Method in class java.util.concurrent.
ForkJoinPool
Returns the handler for internal worker threads that terminate
 due to unrecoverable errors encountered while executing tasks.
getUndeclaredThrowable()
- Method in exception class java.lang.reflect.
UndeclaredThrowableException
Returns the
Throwable
instance wrapped in this
UndeclaredThrowableException
, which may be
null
.
getUnderlineOffset()
- Method in class java.awt.font.
LineMetrics
Returns the position of the underline relative to
 the baseline.
getUnderlineThickness()
- Method in class java.awt.font.
LineMetrics
Returns the thickness of the underline.
getUnderlyingType()
- Method in interface com.sun.source.tree.
AnnotatedTypeTree
Returns the underlying type with which the annotations are associated.
getUndoableEditListeners()
- Method in class javax.swing.text.
AbstractDocument
Returns an array of all the undoable edit listeners
 registered on this document.
getUndoableEditListeners()
- Method in class javax.swing.undo.
UndoableEditSupport
Returns an array of all the
UndoableEditListener
s added
 to this UndoableEditSupport with addUndoableEditListener().
getUndoOrRedoPresentationName()
- Method in class javax.swing.undo.
UndoManager
Convenience method that returns either
getUndoPresentationName
or
getRedoPresentationName
.
getUndoPresentationName()
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Provides a localized, human readable description of the undoable
 form of this edit, e.g. for use as an Undo menu item.
getUndoPresentationName()
- Method in class javax.swing.undo.
AbstractUndoableEdit
Retrieves the value from the defaults table with key
AbstractUndoableEdit.undoText
and returns
 that value followed by a space, followed by
getPresentationName
.
getUndoPresentationName()
- Method in class javax.swing.undo.
CompoundEdit
Returns
getUndoPresentationName
from the last
UndoableEdit
added to
edits
.
getUndoPresentationName()
- Method in interface javax.swing.undo.
UndoableEdit
Returns a localized, human-readable description of the undoable form of
 this edit, suitable for use as an Undo menu item, for example.
getUndoPresentationName()
- Method in class javax.swing.undo.
UndoManager
Returns a description of the undoable form of this edit.
getUnexecutedModifications()
- Method in exception class javax.naming.directory.
AttributeModificationException
Retrieves the unexecuted modification list.
getUnicodeBidi()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the unicode-bidi property definition in CSS2.
getUnicodeLocaleAttributes()
- Method in class java.util.
Locale
Returns the set of unicode locale attributes associated with
 this locale, or the empty set if it has no attributes.
getUnicodeLocaleKeys()
- Method in class java.util.
Locale
Returns the set of Unicode locale keys defined by this locale, or the empty set if
 this locale has none.
getUnicodeLocaleType(String)
- Method in class java.util.
Locale
Returns the Unicode locale type associated with the specified Unicode locale key
 for this locale.
getUnicodeStream(int)
- Method in interface java.sql.
ResultSet
Deprecated.
use
getCharacterStream
in place of
getUnicodeStream
getUnicodeStream(String)
- Method in interface java.sql.
ResultSet
Deprecated.
use
getCharacterStream
instead
getUnitIncrement()
- Method in interface java.awt.
Adjustable
Gets the unit value increment for the adjustable object.
getUnitIncrement()
- Method in class java.awt.
Scrollbar
Gets the unit increment for this scrollbar.
getUnitIncrement()
- Method in class java.awt.
ScrollPaneAdjustable
getUnitIncrement()
- Method in class javax.swing.
JScrollBar
For backwards compatibility with java.awt.Scrollbar.
getUnitIncrement(int)
- Method in class javax.swing.
JScrollBar
Returns the amount to change the scrollbar's value by,
 given a unit up/down request.
getUnitIncrement(int)
- Method in class javax.swing.
JScrollPane.ScrollBar
Computes the unit increment for scrolling if the viewport's
 view is a
Scrollable
object.
getUnits()
- Method in interface java.time.chrono.
ChronoPeriod
Gets the set of units supported by this period.
getUnits()
- Method in class java.time.
Duration
Gets the set of units supported by this duration.
getUnits()
- Method in class java.time.
Period
Gets the set of units supported by this period.
getUnits()
- Method in interface java.time.temporal.
TemporalAmount
Returns the list of units uniquely defining the value of this TemporalAmount.
getUnits()
- Method in class javax.sound.sampled.
FloatControl
Obtains the label for the units in which the control's values are
 expressed, such as "dB" or "frames per second."
getUnitsToScroll()
- Method in class java.awt.event.
MouseWheelEvent
This is a convenience method to aid in the implementation of
 the common-case MouseWheelListener - to scroll a ScrollPane or
 JScrollPane by an amount which conforms to the platform settings.
getUnknownAnnotationValue()
- Method in exception class javax.lang.model.element.
UnknownAnnotationValueException
Returns the unknown annotation value.
getUnknownDirective()
- Method in exception class javax.lang.model.element.
UnknownDirectiveException
Returns the unknown directive.
getUnknownElement()
- Method in exception class javax.lang.model.element.
UnknownElementException
Returns the unknown element.
getUnknownType()
- Method in exception class javax.lang.model.type.
UnknownTypeException
Returns the unknown type.
getUnloadedClassCount()
- Method in interface java.lang.management.
ClassLoadingMXBean
Returns the total number of classes unloaded since the Java virtual machine
 has started execution.
getUnnamedModule()
- Method in class java.lang.
ClassLoader
Returns the unnamed
Module
for this class loader.
getUnnormalizedComponents(float[], int, int[], int)
- Method in class java.awt.image.
ColorModel
Returns an array of all of the color/alpha components in unnormalized
 form, given a normalized component array.
getUnnormalizedComponents(float[], int, int[], int)
- Method in class java.awt.image.
ComponentColorModel
Returns an array of all of the color/alpha components in unnormalized
 form, given a normalized component array.
getUnresolvedActions()
- Method in class java.security.
UnresolvedPermission
Get the actions for the underlying permission that
 has not been resolved.
getUnresolvedCerts()
- Method in class java.security.
UnresolvedPermission
Get the signer certificates (without any supporting chain)
 for the underlying permission that has not been resolved.
getUnresolvedName()
- Method in class java.security.
UnresolvedPermission
Get the target name of the underlying permission that
 has not been resolved.
getUnresolvedType()
- Method in class java.security.
UnresolvedPermission
Get the type (class name) of the underlying permission that
 has not been resolved.
getUnsupportedAttributes()
- Method in interface javax.print.
AttributeException
Returns the array of printing attribute classes for which the Print
 Service instance does not support the attribute at all, or
null
if there are no such attributes.
getUnsupportedAttributes(DocFlavor, AttributeSet)
- Method in interface javax.print.
PrintService
Identifies the attributes that are unsupported for a print request in the
 context of a particular
DocFlavor
.
getUnsupportedFlavors()
- Method in interface javax.print.
FlavorException
Returns the unsupported flavors.
getUnsupportedURI()
- Method in interface javax.print.
URIException
Returns the
URI
.
getUnsupportedValues()
- Method in interface javax.print.
AttributeException
Returns the array of printing attributes for which the Print Service
 instance supports the attribute but does not support that particular
 value of the attribute, or
null
if there are no such attribute
 values.
getUnwrappedParent(Component)
- Static method in class javax.swing.
SwingUtilities
Returns the first ancestor of the
component
which is not an instance of
JLayer
.
getUnwrappedView(JViewport)
- Static method in class javax.swing.
SwingUtilities
Returns the first
JViewport
's descendant
 which is not an instance of
JLayer
.
getUpdate()
- Method in interface com.sun.source.tree.
ForLoopTree
Returns any update expressions of the
for
statement.
getUpdateAction()
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Returns an update action.
getUpdateCount()
- Method in interface java.sql.
Statement
Retrieves the current result as an update count;
  if the result is a
ResultSet
object or there are no more results, -1
  is returned.
getUpdateCounts()
- Method in exception class java.sql.
BatchUpdateException
Retrieves the update count for each update statement in the batch
 update that executed successfully before this exception occurred.
getUpdateLevel()
- Method in class javax.swing.undo.
UndoableEditSupport
Returns the update level value.
getUpdatePeriod()
- Method in class javax.sound.sampled.
FloatControl
Obtains the smallest time interval, in microseconds, over which the
 control's value can change during a shift.
getUpdatePolicy()
- Method in class javax.swing.text.
DefaultCaret
Gets the caret movement policy on document updates.
getUpdateRect()
- Method in class java.awt.event.
PaintEvent
Returns the rectangle representing the area which needs to be
 repainted in response to this event.
getUpdateSelectionOnSort()
- Method in class javax.swing.
JTable
Returns true if the selection should be updated after sorting.
getUpdateTableInRealTime()
- Method in class javax.swing.table.
JTableHeader
Obsolete as of Java 2 platform v1.3.
getUpperBound()
- Method in interface javax.lang.model.type.
TypeVariable
Returns the upper bound of this type variable.
getUpperBounds()
- Method in interface java.lang.reflect.
WildcardType
Returns an array of
Type
objects representing the  upper
 bound(s) of this type variable.
getUptime()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the uptime of the Java virtual machine in milliseconds.
getUri()
- Method in interface org.w3c.dom.
DOMLocator
The URI this locator is pointing to, or
null
if no URI is
 available.
getURI()
- Method in class java.awt.desktop.
OpenURIEvent
Get the
URI
the app was asked to open.
getURI()
- Method in class java.security.cert.
URICertStoreParameters
Returns the URI used to construct this
URICertStoreParameters
object.
getURI()
- Method in class java.security.
URIParameter
Returns the URI.
getURI()
- Method in class javax.print.attribute.
URISyntax
Returns this
URI
attribute's
URI
value.
getURI()
- Method in interface javax.xml.crypto.dsig.keyinfo.
RetrievalMethod
Returns the URI of the referenced
KeyInfo
information.
getURI()
- Method in class javax.xml.crypto.
OctetStreamData
Returns the URI String identifying the data object represented by this
OctetStreamData
.
getURI()
- Method in interface javax.xml.crypto.
URIReference
Returns the URI of the referenced data object.
getURI(int)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's Namespace URI by index.
getURI(int)
- Method in class org.xml.sax.helpers.
AttributesImpl
Return an attribute's Namespace URI.
getURI(String)
- Method in class org.xml.sax.helpers.
NamespaceSupport
Look up a prefix and get the currently-mapped Namespace URI.
getURIDereferencer()
- Method in class javax.xml.crypto.dom.
DOMCryptoContext
getURIDereferencer()
- Method in class javax.xml.crypto.dsig.keyinfo.
KeyInfoFactory
Returns a reference to the
URIDereferencer
that is used by
 default to dereference URIs in
RetrievalMethod
objects.
getURIDereferencer()
- Method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Returns a reference to the
URIDereferencer
that is used by
 default to dereference URIs in
Reference
objects.
getURIDereferencer()
- Method in interface javax.xml.crypto.
XMLCryptoContext
Returns a
URIDereferencer
that is used to dereference
URIReference
s.
getURIReference()
- Method in exception class javax.xml.crypto.
URIReferenceException
Returns the
URIReference
that was being dereferenced
 when the exception was thrown.
getURIResolver()
- Method in class javax.xml.transform.
Transformer
Get an object that will be used to resolve URIs used in
 document().
getURIResolver()
- Method in class javax.xml.transform.
TransformerFactory
Get the object that is used by default during the transformation
 to resolve URIs used in document(), xsl:import, or xsl:include.
getURIs()
- Method in interface java.net.
CookieStore
Get all URIs which identify the cookies in this cookie store.
getUrl()
- Method in class javax.sql.rowset.
BaseRowSet
Retrieves the JDBC URL that this
RowSet
object's
javax.sql.Reader
object uses to make a connection
 with a relational database using a JDBC technology-enabled driver.
getUrl()
- Method in interface javax.sql.
RowSet
Retrieves the url property this
RowSet
object will use to
 create a connection if it uses the
DriverManager
instead of a
DataSource
object to establish the connection.
getURL()
- Method in interface com.sun.source.doctree.
SpecTree
Returns the URL.
getURL()
- Method in class java.net.
URLConnection
Returns the value of this
URLConnection
's
URL
field.
getURL()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the URL for this DBMS.
getURL()
- Method in class javax.swing.event.
HyperlinkEvent
Gets the URL that the link refers to.
getURL()
- Method in interface org.w3c.dom.html.
HTMLDocument
The complete URI  of the document.
getURL(int)
- Method in interface java.sql.
CallableStatement
Retrieves the value of the designated JDBC
DATALINK
parameter as a
java.net.URL
object.
getURL(int)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.net.URL
object in the Java programming language.
getURL(String)
- Method in interface java.sql.
CallableStatement
Retrieves the value of a JDBC
DATALINK
parameter as a
java.net.URL
object.
getURL(String)
- Method in interface java.sql.
ResultSet
Retrieves the value of the designated column in the current row
 of this
ResultSet
object as a
java.net.URL
object in the Java programming language.
getURLContext(String, Hashtable<?, ?>)
- Static method in class javax.naming.spi.
NamingManager
Creates a context for the given URL scheme id.
getUrlDecoder()
- Static method in class java.util.
Base64
Returns a
Base64.Decoder
that decodes using the
URL and Filename safe
type base64
 encoding scheme.
getUrlEncoder()
- Static method in class java.util.
Base64
Returns a
Base64.Encoder
that encodes using the
URL and Filename safe
type base64
 encoding scheme.
getURLOrDefaultInitCtx(String)
- Method in class javax.naming.
InitialContext
Retrieves a context for resolving the string name
name
.
getURLOrDefaultInitCtx(Name)
- Method in class javax.naming.
InitialContext
Retrieves a context for resolving
name
.
getURLPath()
- Method in class javax.management.remote.
JMXServiceURL
The URL Path part of the Service URL.
getURLs()
- Method in class java.net.
URLClassLoader
Returns the search path of URLs for loading classes and resources.
getURLs()
- Method in class javax.management.loading.
MLet
Deprecated.
Returns the search path of URLs for loading classes and resources.
getURLs()
- Method in interface javax.management.loading.
MLetMBean
Deprecated.
Returns the search path of URLs for loading classes and resources.
getUsableSpace()
- Method in class java.io.
File
Returns the number of bytes available to this virtual machine on the
 partition
named
by this abstract pathname.
getUsableSpace()
- Method in class java.nio.file.
FileStore
Returns the number of bytes available to this Java virtual machine on the
 file store.
getUsage()
- Method in class java.lang.management.
MemoryNotificationInfo
Returns the memory usage of the memory pool
 when this notification was constructed.
getUsage()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns an estimate of the memory usage of this memory pool.
getUsage()
- Method in interface org.ietf.jgss.
GSSCredential
Returns the credential usage mode.
getUsage(Oid)
- Method in interface org.ietf.jgss.
GSSCredential
Returns the credential usage mode for a specific mechanism.
getUsageThreshold()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the usage threshold value of this memory pool in bytes.
getUsageThresholdCount()
- Method in interface java.lang.management.
MemoryPoolMXBean
Returns the number of times that the memory usage has crossed
 the usage threshold.
getUseCache()
- Static method in class javax.imageio.
ImageIO
Returns the current value set by
setUseCache
, or
true
if no explicit setting has been made.
getUseCaches()
- Method in class java.net.
URLConnection
Returns the value of this
URLConnection
's
useCaches
field.
getUseCipherSuitesOrder()
- Method in class javax.net.ssl.
SSLParameters
Returns whether the local cipher suites preference should be honored.
getUseClientMode()
- Method in class javax.net.ssl.
SSLEngine
Returns true if the engine is set to use client mode when
 handshaking.
getUseClientMode()
- Method in class javax.net.ssl.
SSLServerSocket
Returns true if accepted connections will be in SSL client mode.
getUseClientMode()
- Method in class javax.net.ssl.
SSLSocket
Returns true if the socket is set to use client mode when
 handshaking.
getUsed()
- Method in class java.lang.management.
MemoryUsage
Returns the amount of used memory in bytes.
getUseMap()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Use client-side image map.
getUseMap()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Use client-side image map.
getUseMap()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Use client-side image map.
getUseParentHandlers()
- Method in class java.util.logging.
Logger
Discover whether or not this logger is sending its output
 to its parent logger.
getUserAction()
- Method in class java.awt.dnd.
DragSourceDragEvent
This method returns the user drop action.
getUserData()
- Method in class javax.management.
Notification
Get the user data.
getUserData(String)
- Method in class javax.imageio.metadata.
IIOMetadataNode
This DOM Level 3 method is not supported for
IIOMetadataNode
and will throw a
DOMException
.
getUserData(String)
- Method in interface org.w3c.dom.
Node
Retrieves the object associated to a key on a this node.
getUserDropAction()
- Method in class javax.swing.
TransferHandler.TransferSupport
Returns the user drop action for the drop, when this
TransferSupport
represents a drop.
getUserInfo()
- Method in class java.net.
URI
Returns the decoded user-information component of this URI.
getUserInfo()
- Method in class java.net.
URL
Gets the userInfo part of this
URL
.
getUsername()
- Method in class com.sun.net.httpserver.
HttpPrincipal
Returns the
username
this object was created with.
getUsername()
- Method in class com.sun.security.auth.module.
UnixSystem
Get the username for the current Unix user.
getUsername()
- Method in class javax.sql.rowset.
BaseRowSet
Returns the user name used to create a database connection.
getUsername()
- Method in interface javax.sql.
RowSet
Retrieves the username used to create a database connection for this
RowSet
object.
getUserName()
- Method in class java.awt.print.
PrinterJob
Gets the name of the printing user.
getUserName()
- Method in class java.net.
PasswordAuthentication
Returns the user name.
getUserName()
- Method in interface java.sql.
DatabaseMetaData
Retrieves the user name as known to this database.
getUserObject()
- Method in class javax.imageio.metadata.
IIOMetadataNode
Returns the
Object
value associated with this node.
getUserObject()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns this node's user object.
getUserObjectPath()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Returns the user object path, from the root, to get to this node.
getUserPrincipalLookupService()
- Method in class java.nio.file.
FileSystem
Returns the
UserPrincipalLookupService
for this file system
(optional operation)
.
getUserSID()
- Method in class com.sun.security.auth.module.
NTSystem
Get a printable SID for the current NT user.
getUserTextColor()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the user text color of the current theme.
getUserTextColor()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the user text color.
getUserTextFont()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the user text font.
getUserTextFont()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the user text font of the current theme.
getUserTextFont()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the user text font.
getUtf16Offset()
- Method in interface org.w3c.dom.
DOMLocator
The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], offset into the input source this locator is pointing to or
-1
if there is no UTF-16 offset available.
getUtf8String(long)
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Reads a UTF-8 encoded, null-terminated string from this segment at the given offset.
getVAdjustable()
- Method in class java.awt.
ScrollPane
Returns the
ScrollPaneAdjustable
object which
 represents the state of the vertical scrollbar.
getValidCharacters()
- Method in class javax.swing.text.
MaskFormatter
Returns the valid characters that can be input.
getValidOffsets(LocalDateTime)
- Method in class java.time.zone.
ZoneRules
Gets the offset applicable at the specified local date-time in these rules.
getValidPixels()
- Method in class java.awt.image.
IndexColorModel
Returns a
BigInteger
that indicates the valid/invalid
 pixels in the colormap.
getValidPolicy()
- Method in interface java.security.cert.
PolicyNode
Returns the valid policy represented by this node.
getVAlign()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Vertical alignment of data in cell.
getVAlign()
- Method in interface org.w3c.dom.html.
HTMLTableColElement
Vertical alignment of cell data in column.
getVAlign()
- Method in interface org.w3c.dom.html.
HTMLTableRowElement
Vertical alignment of data within cells of this row.
getVAlign()
- Method in interface org.w3c.dom.html.
HTMLTableSectionElement
Vertical alignment of data in cells.
getValue()
- Method in class com.sun.management.
VMOption
Returns the value of this VM option at the time when
 this
VMOption
was created.
getValue()
- Method in interface com.sun.source.doctree.
AttributeTree
Returns the value of the attribute, or
null
if the
kind of this attribute
is
EMPTY
.
getValue()
- Method in interface com.sun.source.tree.
LiteralTree
Returns the value of the literal expression.
getValue()
- Method in interface com.sun.source.tree.
YieldTree
Returns the expression for this
yield
statement.
getValue()
- Method in interface java.awt.
Adjustable
Gets the current value of the adjustable object.
getValue()
- Method in class java.awt.event.
AdjustmentEvent
Returns the current value in the adjustment event.
getValue()
- Method in class java.awt.
Scrollbar
Gets the current value of this scroll bar.
getValue()
- Method in class java.awt.
ScrollPaneAdjustable
getValue()
- Method in class java.beans.
Expression
If the value property of this instance is not already set,
 this method dynamically finds the method with the specified
 methodName on this target with these arguments and calls it.
getValue()
- Method in interface java.beans.
PropertyEditor
Gets the property value.
getValue()
- Method in class java.beans.
PropertyEditorSupport
Gets the value of the property.
getValue()
- Method in class java.net.
HttpCookie
Returns the value of the cookie.
getValue()
- Method in class java.rmi.dgc.
Lease
Returns the lease duration.
getValue()
- Method in interface java.security.cert.
Extension
Gets the extensions's DER-encoded value.
getValue()
- Method in interface java.security.
KeyStore.Entry.Attribute
Returns the attribute's value.
getValue()
- Method in class java.security.
PKCS12Attribute
Returns the attribute's ASN.1 DER-encoded value as a string.
getValue()
- Method in class java.text.
Annotation
Returns the value of the attribute, which may be null.
getValue()
- Method in interface java.time.chrono.
Era
Gets the numeric value associated with the era as defined by the chronology.
getValue()
- Method in enum class java.time.chrono.
HijrahEra
Gets the numeric era
int
value.
getValue()
- Method in enum class java.time.chrono.
IsoEra
Gets the numeric era
int
value.
getValue()
- Method in class java.time.chrono.
JapaneseEra
Gets the numeric era
int
value.
getValue()
- Method in enum class java.time.chrono.
MinguoEra
Gets the numeric era
int
value.
getValue()
- Method in enum class java.time.chrono.
ThaiBuddhistEra
Gets the numeric era
int
value.
getValue()
- Method in enum class java.time.
DayOfWeek
Gets the day-of-week
int
value.
getValue()
- Method in enum class java.time.
Month
Gets the month-of-year
int
value.
getValue()
- Method in class java.time.
Year
Gets the year value.
getValue()
- Method in class java.util.
AbstractMap.SimpleEntry
Returns the value corresponding to this entry.
getValue()
- Method in class java.util.
AbstractMap.SimpleImmutableEntry
Returns the value corresponding to this entry.
getValue()
- Method in interface java.util.
Map.Entry
Returns the value corresponding to this entry.
getValue()
- Method in class java.util.zip.
Adler32
Returns the checksum value.
getValue()
- Method in interface java.util.zip.
Checksum
Returns the current checksum value.
getValue()
- Method in class java.util.zip.
CRC32
Returns CRC-32 value.
getValue()
- Method in class java.util.zip.
CRC32C
Returns CRC-32C value.
getValue()
- Method in interface javax.annotation.processing.
Completion
Returns the text of the suggested completion.
getValue()
- Method in class javax.crypto.spec.
PSource.PSpecified
Returns the value of encoding input P.
getValue()
- Method in interface javax.lang.model.element.
AnnotationValue
Returns the value.
getValue()
- Method in class javax.management.
Attribute
Returns an Object that is the value of this attribute.
getValue()
- Method in class javax.management.
StringValueExp
Returns the string represented by the
StringValueExp
instance.
getValue()
- Method in class javax.naming.ldap.
Rdn
Retrieves one of this Rdn's value.
getValue()
- Method in class javax.print.attribute.
DateTimeSyntax
Returns this date-time attribute's
java.util.Date
value.
getValue()
- Method in class javax.print.attribute.
EnumSyntax
Returns this enumeration value's integer value.
getValue()
- Method in class javax.print.attribute.
IntegerSyntax
Returns this integer attribute's integer value.
getValue()
- Method in class javax.print.attribute.
TextSyntax
Returns this text attribute's text string.
getValue()
- Method in class javax.sound.sampled.
BooleanControl
Obtains this control's current value.
getValue()
- Method in class javax.sound.sampled.
EnumControl
Obtains this control's current value.
getValue()
- Method in class javax.sound.sampled.
FloatControl
Obtains this control's current value.
getValue()
- Method in interface javax.swing.
BoundedRangeModel
Returns the model's current value.
getValue()
- Method in class javax.swing.
DefaultBoundedRangeModel
Returns the model's current value.
getValue()
- Method in class javax.swing.
JFormattedTextField
Returns the last valid value.
getValue()
- Method in class javax.swing.
JOptionPane
Returns the value the user has selected.
getValue()
- Method in class javax.swing.
JProgressBar
Returns the progress bar's current
value
from the
BoundedRangeModel
.
getValue()
- Method in class javax.swing.
JScrollBar
Returns the scrollbar's value.
getValue()
- Method in class javax.swing.
JSlider
Returns the slider's current value
 from the
BoundedRangeModel
.
getValue()
- Method in class javax.swing.
JSpinner
Returns the current value of the model, typically
 this value is displayed by the
editor
.
getValue()
- Method in class javax.swing.
SpinnerDateModel
Returns the current element in this sequence of
Date
s.
getValue()
- Method in class javax.swing.
SpinnerListModel
Returns the current element of the sequence.
getValue()
- Method in interface javax.swing.
SpinnerModel
The
current element
of the sequence.
getValue()
- Method in class javax.swing.
SpinnerNumberModel
Returns the value of the current element of the sequence.
getValue()
- Method in class javax.swing.
Spring
Returns the current
value
of this
Spring
.
getValue()
- Method in class javax.swing.text.html.
Option
Convenient method to return the string associated
 with the
value
attribute.
getValue()
- Method in class javax.swing.text.html.parser.
AttributeList
Returns default attribute value.
getValue()
- Method in interface javax.xml.crypto.dsig.
XMLSignature.SignatureValue
Returns the signature value of this
SignatureValue
.
getValue()
- Method in interface javax.xml.stream.events.
Attribute
Gets the normalized value of this attribute.
getValue()
- Method in class jdk.jfr.
SettingControl
Returns the currently used value for this setting, not
null
.
getValue()
- Method in interface org.w3c.dom.
Attr
On retrieval, the value of the attribute is returned as a string.
getValue()
- Method in interface org.w3c.dom.html.
HTMLButtonElement
The current form control value.
getValue()
- Method in interface org.w3c.dom.html.
HTMLInputElement
When the
type
attribute of the element has the value
 "Text", "File" or "Password", this represents the current contents of
 the corresponding form control, in an interactive user agent.
getValue()
- Method in interface org.w3c.dom.html.
HTMLLIElement
Reset sequence number when used in
OL
.
getValue()
- Method in interface org.w3c.dom.html.
HTMLOptionElement
The current form control value.
getValue()
- Method in interface org.w3c.dom.html.
HTMLParamElement
The value of a run-time parameter.
getValue()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
The current form control value.
getValue()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Represents the current contents of the corresponding form control, in
 an interactive user agent.
getValue(int)
- Method in interface com.sun.jdi.
ArrayReference
Returns an array component value.
getValue(int)
- Method in class javax.swing.
RowFilter.Entry
Returns the value at the specified index.
getValue(int)
- Method in interface org.xml.sax.
AttributeList
Deprecated.
Return the value of an attribute in the list (by position).
getValue(int)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's value by index.
getValue(int)
- Method in class org.xml.sax.helpers.
AttributeListImpl
Deprecated.
Get the value of an attribute (by position).
getValue(int)
- Method in class org.xml.sax.helpers.
AttributesImpl
Return an attribute's value by index.
getValue(Field)
- Method in interface com.sun.jdi.
ObjectReference
Gets the value of a given instance or static field in this object.
getValue(Field)
- Method in interface com.sun.jdi.
ReferenceType
Gets the
Value
of a given static
Field
in this type.
getValue(LocalVariable)
- Method in interface com.sun.jdi.
StackFrame
Gets the
Value
of a
LocalVariable
in this frame.
getValue(String)
- Method in class java.beans.
FeatureDescriptor
Retrieve a named attribute with this feature.
getValue(String)
- Method in class java.util.jar.
Attributes
Returns the value of the specified attribute name, specified as
 a string, or null if the attribute was not found.
getValue(String)
- Method in interface javax.net.ssl.
SSLSession
Returns the object bound to the given name in the session's
 application layer data.
getValue(String)
- Method in class javax.swing.
AbstractAction
Gets the
Object
associated with the specified key.
getValue(String)
- Method in interface javax.swing.
Action
Gets one of this object's properties
 using the associated key.
getValue(String)
- Method in class jdk.jfr.
AnnotationElement
Returns a value for this
AnnotationElement
.
getValue(String)
- Method in class jdk.jfr.consumer.
RecordedObject
Returns the value of the field with the given name.
getValue(String)
- Method in interface org.xml.sax.
AttributeList
Deprecated.
Return the value of an attribute in the list (by name).
getValue(String)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's value by XML qualified (prefixed) name.
getValue(String)
- Method in class org.xml.sax.helpers.
AttributeListImpl
Deprecated.
Get the value of an attribute (by name).
getValue(String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Look up an attribute's value by qualified (prefixed) name.
getValue(String, String)
- Method in interface org.xml.sax.
Attributes
Look up an attribute's value by Namespace name.
getValue(String, String)
- Method in class org.xml.sax.helpers.
AttributesImpl
Look up an attribute's value by Namespace-qualified name.
getValue(Attributes.Name)
- Method in class java.util.jar.
Attributes
Returns the value of the specified Attributes.Name, or null if the
 attribute was not found.
getValueAsString(int)
- Method in class javax.imageio.plugins.tiff.
TIFFField
Returns a
String
containing a human-readable
 version of the data item.
getValueAt(int, int)
- Method in class javax.swing.
DefaultRowSorter.ModelWrapper
Returns the value at the specified index.
getValueAt(int, int)
- Method in class javax.swing.
JTable
Returns the cell value at
row
and
column
.
getValueAt(int, int)
- Method in class javax.swing.table.
DefaultTableModel
Returns an attribute value for the cell at
row
and
column
.
getValueAt(int, int)
- Method in interface javax.swing.table.
TableModel
Returns the value for the cell at
columnIndex
and
rowIndex
.
getValueClass()
- Method in class javax.swing.text.
DefaultFormatter
Returns that class that is used to create new Objects.
getValueContainsLiteralCharacters()
- Method in class javax.swing.text.
MaskFormatter
Returns true if
stringToValue
should return literal
 characters in the mask.
getValueCount()
- Method in class javax.swing.
RowFilter.Entry
Returns the number of values in the entry.
getValueDescriptors()
- Method in class jdk.jfr.
AnnotationElement
Returns an immutable list of descriptors that describes the annotation values
 for this
AnnotationElement
.
getValueIsAdjusting()
- Method in class java.awt.event.
AdjustmentEvent
Returns
true
if this is one of multiple
 adjustment events.
getValueIsAdjusting()
- Method in class java.awt.
Scrollbar
Returns true if the value is in the process of changing as a
 result of actions being taken by the user.
getValueIsAdjusting()
- Method in class java.awt.
ScrollPaneAdjustable
Returns true if the value is in the process of changing as a
 result of actions being taken by the user.
getValueIsAdjusting()
- Method in interface javax.swing.
BoundedRangeModel
Returns true if the current changes to the value property are part
 of a series of changes.
getValueIsAdjusting()
- Method in class javax.swing.
DefaultBoundedRangeModel
Returns true if the value is in the process of changing
 as a result of actions being taken by the user.
getValueIsAdjusting()
- Method in class javax.swing.
DefaultListSelectionModel
Returns
true
if the selection is undergoing a series of changes.
getValueIsAdjusting()
- Method in class javax.swing.event.
ListSelectionEvent
Returns whether or not this is one in a series of multiple events,
 where changes are still being made.
getValueIsAdjusting()
- Method in class javax.swing.
JList
Returns the value of the selection model's
isAdjusting
property.
getValueIsAdjusting()
- Method in class javax.swing.
JScrollBar
True if the scrollbar knob is being dragged.
getValueIsAdjusting()
- Method in class javax.swing.
JSlider
Returns the
valueIsAdjusting
property from the model.
getValueIsAdjusting()
- Method in interface javax.swing.
ListSelectionModel
Returns
true
if the selection is undergoing a series of changes.
getValueKind()
- Method in interface com.sun.source.doctree.
AttributeTree
Returns the kind of the attribute value.
getValueName(int)
- Method in class javax.imageio.plugins.tiff.
TIFFTag
Returns the mnemonic name associated with a particular value
 that this tag's data may take on, or
null
if
 no name is present.
getValueNames()
- Method in interface javax.net.ssl.
SSLSession
Returns an array of the names of all the application layer
 data objects bound into the Session.
getValues()
- Method in interface com.sun.jdi.
ArrayReference
Returns all of the components in this array.
getValues()
- Method in class javax.imageio.plugins.jpeg.
JPEGHuffmanTable
Returns an array of
short
s containing the values arranged
 by increasing length of their corresponding codes.
getValues()
- Method in class javax.sound.sampled.
EnumControl
Returns the set of possible values for this control.
getValues()
- Method in class javax.swing.text.html.parser.
AttributeList
Returns possible attribute values.
getValues()
- Method in class jdk.jfr.
AnnotationElement
Returns an immutable list of annotation values in an order that matches the
 value descriptors for this
AnnotationElement
.
getValues(int, int)
- Method in interface com.sun.jdi.
ArrayReference
Returns a range of array components.
getValues(List<? extends Field>)
- Method in interface com.sun.jdi.
ObjectReference
Gets the value of multiple instance and/or static fields in this object.
getValues(List<? extends Field>)
- Method in interface com.sun.jdi.
ReferenceType
Returns a map containing the
Value
of each
 static
Field
in the given list.
getValues(List<? extends LocalVariable>)
- Method in interface com.sun.jdi.
StackFrame
Returns the values of multiple local variables in this frame.
getValueType()
- Method in interface org.w3c.dom.html.
HTMLParamElement
Information about the meaning of the
value
attribute
 value.
getVariable()
- Method in interface com.sun.source.tree.
AssignmentTree
Returns the variable being assigned to.
getVariable()
- Method in interface com.sun.source.tree.
BindingPatternTree
Returns the binding variable.
getVariable()
- Method in interface com.sun.source.tree.
CompoundAssignmentTree
Returns the variable on the left hand side of the compound assignment.
getVariable()
- Method in interface com.sun.source.tree.
EnhancedForLoopTree
Returns the control variable for the loop.
getVariant()
- Method in class java.util.
Locale
Returns the variant code for this locale.
getVariation()
- Method in class java.awt.im.
InputMethodHighlight
Returns the variation of the text range.
getVendor()
- Method in enum class java.sql.
JDBCType
Returns the name of the vendor that supports this data type.
getVendor()
- Method in interface java.sql.
SQLType
Returns the name of the vendor that supports this data type.
getVendor()
- Method in class javax.sound.midi.
MidiDevice.Info
Obtains the name of the company who supplies the device.
getVendor()
- Method in interface javax.sound.midi.
Soundbank
Obtains a
string
naming the company that provides the sound bank.
getVendor()
- Method in class javax.sound.sampled.
Mixer.Info
Obtains the vendor of the mixer.
getVendor()
- Method in class javax.sql.rowset.spi.
SyncProvider
Returns the vendor name of this
SyncProvider
instance
getVendorName()
- Method in class javax.imageio.spi.
IIOServiceProvider
Returns the name of the vendor responsible for creating this
 service provider and its associated implementation.
getVendorTypeNumber()
- Method in enum class java.sql.
JDBCType
Returns the vendor specific type number for the data type.
getVendorTypeNumber()
- Method in interface java.sql.
SQLType
Returns the vendor specific type number for the data type.
getVerifyInputWhenFocusTarget()
- Method in class javax.swing.
JComponent
Returns the value that indicates whether the input verifier for the
 current focus owner will be called before this component requests
 focus.
getVersion()
- Method in interface java.awt.font.
OpenType
Returns the version of the
OpenType
font.
 1.0 is represented as 0x00010000.
getVersion()
- Method in interface java.lang.management.
OperatingSystemMXBean
Returns the operating system version.
getVersion()
- Method in class java.net.
HttpCookie
Returns the version of the protocol this cookie complies with.
getVersion()
- Method in class java.security.cert.
X509Certificate
Gets the
version
(version number) value from the
 certificate.
getVersion()
- Method in class java.security.cert.
X509CRL
Gets the
version
(version number) value from the CRL.
getVersion()
- Method in class java.security.
Provider
Deprecated.
use
Provider.getVersionStr()
instead.
getVersion()
- Method in class java.util.jar.
JarFile
Returns the maximum version used when searching for versioned entries.
getVersion()
- Method in class javax.crypto.spec.
RC5ParameterSpec
Returns the version.
getVersion()
- Method in class javax.imageio.spi.
IIOServiceProvider
Returns a string describing the version
 number of this service provider and its associated
 implementation.
getVersion()
- Method in class javax.management.loading.
MLetContent
Deprecated.
Gets the value of the
VERSION
attribute of the
MLET
tag.
getVersion()
- Method in interface javax.management.remote.rmi.
RMIServer
The version of the RMI Connector Protocol understood by this
 connector server.
getVersion()
- Method in class javax.management.remote.rmi.
RMIServerImpl_Stub
getVersion()
- Method in class javax.management.remote.rmi.
RMIServerImpl
getVersion()
- Method in class javax.security.cert.
X509Certificate
Deprecated.
Gets the
version
(version number) value from the
 certificate.
getVersion()
- Method in class javax.sound.midi.
MidiDevice.Info
Obtains the version of the device.
getVersion()
- Method in interface javax.sound.midi.
Soundbank
Obtains the version string for the sound bank.
getVersion()
- Method in class javax.sound.sampled.
Mixer.Info
Obtains the version of the mixer.
getVersion()
- Method in class javax.sql.rowset.spi.
SyncProvider
Returns the release version of this
SyncProvider
instance.
getVersion()
- Method in interface javax.xml.stream.events.
StartDocument
Returns the version of XML of this XML stream
getVersion()
- Method in class javax.xml.stream.util.
StreamReaderDelegate
getVersion()
- Method in interface javax.xml.stream.
XMLStreamReader
Get the xml version declared on the xml declaration
 Returns null if none was declared
getVersion()
- Method in interface org.w3c.dom.html.
HTMLHtmlElement
Version information about the document's DTD.
getVersionColumns(String, String, String)
- Method in interface java.sql.
DatabaseMetaData
Retrieves a description of a table's columns that are automatically
 updated when any value in a row is updated.
getVersionNumber()
- Method in class javax.security.auth.kerberos.
KerberosKey
Returns the key version number.
getVersions(String)
- Static method in class java.time.zone.
ZoneRulesProvider
Gets the history of rules for the zone ID.
getVersionStr()
- Method in class java.security.
Provider
Returns the version string for this
Provider
.
getVerticalAlign()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the vertical-align property definition in CSS2.
getVerticalAlignment()
- Method in class javax.swing.
AbstractButton
Returns the vertical alignment of the text and icon.
getVerticalAlignment()
- Method in class javax.swing.
JLabel
Returns the alignment of the label's contents along the Y axis.
getVerticalLegBuffer()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
The vertical element of legs between nodes starts at the bottom of the
 parent node by default.
getVerticalScrollBar()
- Method in class javax.swing.
JScrollPane
Returns the vertical scroll bar that controls the viewports
 vertical view position.
getVerticalScrollBar()
- Method in class javax.swing.
ScrollPaneLayout
Returns the
JScrollBar
object that handles vertical scrolling.
getVerticalScrollBarPolicy()
- Method in class javax.swing.
JScrollPane
Returns the vertical scroll bar policy value.
getVerticalScrollBarPolicy()
- Method in class javax.swing.
ScrollPaneLayout
Returns the vertical scrollbar-display policy.
getVerticalSliderThumbIcon()
- Static method in class javax.swing.plaf.metal.
MetalIconFactory
Returns a thumb icon to be used by vertical slider.
getVerticalTextPosition()
- Method in class javax.swing.
AbstractButton
Returns the vertical position of the text relative to the icon.
getVerticalTextPosition()
- Method in class javax.swing.
JLabel
Returns the vertical position of the label's text,
 relative to its image.
getVetoableChangeListeners()
- Method in class java.awt.
KeyboardFocusManager
Returns an array of all the vetoable change listeners
 registered on this keyboard focus manager.
getVetoableChangeListeners()
- Method in class java.beans.
VetoableChangeSupport
Returns an array of all the listeners that were added to the
 VetoableChangeSupport object with addVetoableChangeListener().
getVetoableChangeListeners()
- Method in class javax.swing.
JComponent
Returns an array of all the vetoable change listeners
 registered on this component.
getVetoableChangeListeners(String)
- Method in class java.awt.
KeyboardFocusManager
Returns an array of all the
VetoableChangeListener
s
 associated with the named property.
getVetoableChangeListeners(String)
- Method in class java.beans.
VetoableChangeSupport
Returns an array of all the listeners which have been associated
 with the named property.
getVgap()
- Method in class java.awt.
BorderLayout
Returns the vertical gap between components.
getVgap()
- Method in class java.awt.
CardLayout
Gets the vertical gap between components.
getVgap()
- Method in class java.awt.
FlowLayout
Gets the vertical gap between components and
 between the components and the borders of the
Container
.
getVgap()
- Method in class java.awt.
GridLayout
Gets the vertical gap between components.
getView()
- Method in class javax.swing.
JLayer
Returns the
JLayer
's view component or
null
.
getView()
- Method in class javax.swing.
JViewport
Returns the
JViewport
's one child or
null
.
getView()
- Method in interface org.w3c.dom.events.
UIEvent
The
view
attribute identifies the
AbstractView
from which the event was generated.
getView(int)
- Method in class javax.swing.text.
AsyncBoxView
Gets the nth child view.
getView(int)
- Method in class javax.swing.text.
CompositeView
Returns the n-th view in this container.
getView(int)
- Method in class javax.swing.text.
View
Gets the
n
th child view.
getViewAtPoint(int, int, Rectangle)
- Method in class javax.swing.text.
BoxView
Fetches the child view at the given coordinates.
getViewAtPoint(int, int, Rectangle)
- Method in class javax.swing.text.
CompositeView
Fetches the child view at the given coordinates.
getViewAtPosition(int, Rectangle)
- Method in class javax.swing.text.
CompositeView
Fetches the child view that represents the given position in
 the model.
getViewAtPosition(int, Rectangle)
- Method in class javax.swing.text.
TableView
Fetches the child view that represents the given position in
 the model.
getViewAtPosition(int, Rectangle)
- Method in class javax.swing.text.
TableView.TableRow
Fetches the child view that represents the given position in
 the model.
getViewAttributes(View)
- Method in class javax.swing.text.html.
StyleSheet
Fetches a set of attributes to use in the view for
 displaying.
getViewCount()
- Method in class javax.swing.text.
AsyncBoxView
Returns the number of views in this view.
getViewCount()
- Method in class javax.swing.text.
CompositeView
Returns the number of child views of this view.
getViewCount()
- Method in class javax.swing.text.
View
Returns the number of views in this view.
getViewFactory()
- Method in class javax.swing.text.
DefaultEditorKit
Fetches a factory that is suitable for producing
 views of any models that are produced by this
 kit.
getViewFactory()
- Method in class javax.swing.text.
EditorKit
Fetches a factory that is suitable for producing
 views of any models that are produced by this
 kit.
getViewFactory()
- Method in class javax.swing.text.html.
HTMLEditorKit
Fetch a factory that is suitable for producing
 views of any models that are produced by this
 kit.
getViewFactory()
- Method in class javax.swing.text.
StyledEditorKit
Fetches a factory that is suitable for producing
 views of any models that are produced by this
 kit.
getViewFactory()
- Method in class javax.swing.text.
View
Fetches the
ViewFactory
implementation that is feeding
 the view hierarchy.
getViewIndex(float, float, Shape)
- Method in class javax.swing.text.
View
Returns the child view index representing the given position in
 the view.
getViewIndex(int, Position.Bias)
- Method in class javax.swing.text.
AsyncBoxView
Returns the child view index representing the given position in
 the model.
getViewIndex(int, Position.Bias)
- Method in class javax.swing.text.
CompositeView
Returns the child view index representing the given
 position in the model.
getViewIndex(int, Position.Bias)
- Method in class javax.swing.text.
View
Returns the child view index representing the given position in
 the model.
getViewIndexAtPoint(float, float, Shape)
- Method in class javax.swing.text.
AsyncBoxView.ChildLocator
Fetches the child view index at the given point.
getViewIndexAtPosition(int)
- Method in class javax.swing.text.
CompositeView
Fetches the child view index representing the given position in
 the model.
getViewIndexAtPosition(int)
- Method in class javax.swing.text.
FlowView
Fetches the child view index representing the given position in
 the model.
getViewIndexAtPosition(int)
- Method in class javax.swing.text.
ZoneView
Returns the child view index representing the given position in
 the model.
getViewIndexAtPosition(int, Position.Bias)
- Method in class javax.swing.text.
AsyncBoxView
Fetches the child view index representing the given position in
 the model.
getViewIndexAtVisualOffset(float)
- Method in class javax.swing.text.
AsyncBoxView.ChildLocator
Locate the view responsible for an offset into the box
 along the major axis.
getViewport()
- Method in class javax.swing.
JScrollPane
Returns the current
JViewport
.
getViewport()
- Method in class javax.swing.
ScrollPaneLayout
Returns the
JViewport
object that displays the
 scrollable contents.
getViewportBorder()
- Method in class javax.swing.
JScrollPane
Returns the
Border
object that surrounds the viewport.
getViewportBorderBounds()
- Method in class javax.swing.
JScrollPane
Returns the bounds of the viewport's border.
getViewportBorderBounds(JScrollPane)
- Method in class javax.swing.
ScrollPaneLayout
Deprecated.
As of JDK version Swing1.1
    replaced by
JScrollPane.getViewportBorderBounds()
.
getViewportSize()
- Method in class java.awt.
ScrollPane
Returns the current size of the scroll pane's view port.
getViewPosition()
- Method in class javax.swing.
JViewport
Returns the view coordinates that appear in the upper left
 hand corner of the viewport, or 0,0 if there's no view.
getViewRect()
- Method in class javax.swing.
JViewport
Returns a rectangle whose origin is
getViewPosition
and size is
getExtentSize
.
getViewRowCount()
- Method in class javax.swing.
DefaultRowSorter
Returns the number of rows in the view.
getViewRowCount()
- Method in class javax.swing.
RowSorter
Returns the number of rows in the view.
getViewSize()
- Method in class javax.swing.
JViewport
If the view's size hasn't been explicitly set, return the
 preferred size, otherwise return the view's current size.
getVisibility()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the visibility property definition in CSS2.
getVisible()
- Method in class java.awt.
Scrollbar
Deprecated.
As of JDK version 1.1,
 replaced by
getVisibleAmount()
.
getVisibleAdvance()
- Method in class java.awt.font.
TextLayout
Returns the advance of this
TextLayout
, minus trailing
 whitespace.
getVisibleAmount()
- Method in interface java.awt.
Adjustable
Gets the length of the proportional indicator.
getVisibleAmount()
- Method in class java.awt.
Scrollbar
Gets the visible amount of this scroll bar.
getVisibleAmount()
- Method in class java.awt.
ScrollPaneAdjustable
getVisibleAmount()
- Method in class javax.swing.
JScrollBar
Returns the scrollbar's extent, aka its "visibleAmount".
getVisibleChildCount(TreePath)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns the number of visible children for row.
getVisibleChildCount(TreePath)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Returns the number of visible children for row.
getVisibleChildCount(TreePath)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns the number of visible children for
path
.
getVisibleComponent()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Returns the visible component.
getVisibleEditorRect()
- Method in class javax.swing.plaf.basic.
BasicTextUI
Gets the allocation to give the root View.
getVisibleIndex()
- Method in class java.awt.
List
Gets the index of the item that was last made visible by
 the method
makeVisible
.
getVisiblePathsFrom(TreePath)
- Method in class javax.swing.tree.
AbstractLayoutCache
Returns an
Enumerator
that increments over the visible
 paths starting at the passed in location.
getVisiblePathsFrom(TreePath)
- Method in class javax.swing.tree.
FixedHeightLayoutCache
Returns an Enumerator that increments over the visible paths
 starting at the passed in location.
getVisiblePathsFrom(TreePath)
- Method in class javax.swing.tree.
VariableHeightLayoutCache
Returns an
Enumerator
that increments over the visible paths
 starting at the passed in location.
getVisiblePosition()
- Method in class java.awt.event.
InputMethodEvent
Gets the position that's most important to be visible.
getVisibleRect()
- Method in class javax.swing.
JComponent
Returns the
Component
's "visible rectangle" -  the
 intersection of this component's visible rectangle,
new Rectangle(0, 0, getWidth(), getHeight())
,
 and all of its ancestors' visible rectangles.
getVisibleRowCount()
- Method in class javax.swing.
JList
Returns the value of the
visibleRowCount
property.
getVisibleRowCount()
- Method in class javax.swing.
JTree
Returns the number of rows that are displayed in the display area.
getVisualBounds()
- Method in class java.awt.font.
GlyphVector
Returns the visual bounds of this
GlyphVector
The visual bounds is the bounding box of the outline of this
GlyphVector
.
getVisualHighlightShape(TextHitInfo, TextHitInfo)
- Method in class java.awt.font.
TextLayout
Returns a
Shape
enclosing the visual selection in the
 specified range, extended to the bounds.
getVisualHighlightShape(TextHitInfo, TextHitInfo, Rectangle2D)
- Method in class java.awt.font.
TextLayout
Returns a path enclosing the visual selection in the specified range,
 extended to
bounds
.
getVisualOtherHit(TextHitInfo)
- Method in class java.awt.font.
TextLayout
Returns the hit on the opposite side of the specified hit's caret.
getVisualRepresentation(Transferable)
- Method in class javax.swing.
TransferHandler
Returns an object that establishes the look of a transfer.
getVLink()
- Method in interface org.w3c.dom.html.
HTMLBodyElement
Color of links that have been visited by the user.
getVMID()
- Method in class java.rmi.dgc.
Lease
Returns the client VMID associated with the lease.
getVmName()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the Java virtual machine implementation name.
getVMOption(String)
- Method in interface com.sun.management.
HotSpotDiagnosticMXBean
Returns a
VMOption
object for a VM option of the given
 name.
getVmVendor()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the Java virtual machine implementation vendor.
getVmVersion()
- Method in interface java.lang.management.
RuntimeMXBean
Returns the Java virtual machine implementation version.
getVoiceFamily()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the voice-family property definition in CSS2.
getVoiceStatus()
- Method in interface javax.sound.midi.
Synthesizer
Obtains the current status of the voices produced by this synthesizer.
getVolatile(Object...)
- Method in class java.lang.invoke.
VarHandle
Returns the value of a variable, with memory semantics of reading as if
 the variable was declared
volatile
.
getVolatileOffscreenBuffer(Component, int, int)
- Method in class javax.swing.
RepaintManager
Return a volatile offscreen buffer that should be used as a
 double buffer with the specified component
c
.
getVolume()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the volume property definition in CSS2.
getVScrollbarWidth()
- Method in class java.awt.
ScrollPane
Returns the width that would be occupied by a vertical
 scrollbar, which is independent of whether it is currently
 displayed by the scroll pane or not.
getVspace()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Vertical space above and below this image, applet, or object.
getVspace()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Vertical space above and below this image.
getVspace()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Vertical space above and below this image, applet, or object.
getW()
- Method in interface java.security.interfaces.
ECPublicKey
Returns the public point W.
getW()
- Method in class java.security.spec.
ECPublicKeySpec
Returns the public point W.
getWaitedCount()
- Method in class java.lang.management.
ThreadInfo
Returns the total number of times that
 the thread associated with this
ThreadInfo
waited for notification.
getWaitedTime()
- Method in class java.lang.management.
ThreadInfo
Returns the approximate accumulated elapsed time (in milliseconds)
 that the thread associated with this
ThreadInfo
has waited for notification
 since thread contention monitoring is enabled.
getWaitingConsumerCount()
- Method in class java.util.concurrent.
LinkedTransferQueue
getWaitingConsumerCount()
- Method in interface java.util.concurrent.
TransferQueue
Returns an estimate of the number of consumers waiting to
 receive elements via
BlockingQueue.take()
or timed
poll
.
getWaitingThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer.ConditionObject
Returns a collection containing those threads that may be
 waiting on this Condition.
getWaitingThreads()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer.ConditionObject
Returns a collection containing those threads that may be
 waiting on this Condition.
getWaitingThreads(AbstractQueuedLongSynchronizer.ConditionObject)
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Returns a collection containing those threads that may be
 waiting on the given condition associated with this
 synchronizer.
getWaitingThreads(AbstractQueuedSynchronizer.ConditionObject)
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Returns a collection containing those threads that may be
 waiting on the given condition associated with this
 synchronizer.
getWaitingThreads(Condition)
- Method in class java.util.concurrent.locks.
ReentrantLock
Returns a collection containing those threads that may be
 waiting on the given condition associated with this lock.
getWaitingThreads(Condition)
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Returns a collection containing those threads that may be
 waiting on the given condition associated with the write lock.
getWaitQueueLength()
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer.ConditionObject
Returns an estimate of the number of threads waiting on
 this condition.
getWaitQueueLength()
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer.ConditionObject
Returns an estimate of the number of threads waiting on
 this condition.
getWaitQueueLength(AbstractQueuedLongSynchronizer.ConditionObject)
- Method in class java.util.concurrent.locks.
AbstractQueuedLongSynchronizer
Returns an estimate of the number of threads waiting on the
 given condition associated with this synchronizer.
getWaitQueueLength(AbstractQueuedSynchronizer.ConditionObject)
- Method in class java.util.concurrent.locks.
AbstractQueuedSynchronizer
Returns an estimate of the number of threads waiting on the
 given condition associated with this synchronizer.
getWaitQueueLength(Condition)
- Method in class java.util.concurrent.locks.
ReentrantLock
Returns an estimate of the number of threads waiting on the
 given condition associated with this lock.
getWaitQueueLength(Condition)
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Returns an estimate of the number of threads waiting on the
 given condition associated with the write lock.
getWantClientAuth()
- Method in class com.sun.net.httpserver.
HttpsParameters
Returns whether client authentication should be requested.
getWantClientAuth()
- Method in class javax.net.ssl.
SSLEngine
Returns true if the engine will
request
client authentication.
getWantClientAuth()
- Method in class javax.net.ssl.
SSLParameters
Returns whether client authentication should be requested.
getWantClientAuth()
- Method in class javax.net.ssl.
SSLServerSocket
Returns true if client authentication will be
requested
on
 newly accepted server-mode connections.
getWantClientAuth()
- Method in class javax.net.ssl.
SSLSocket
Returns true if the socket will
request
client authentication.
getWantsInput()
- Method in class javax.swing.
JOptionPane
Returns the value of the
wantsInput
property.
getWarnings()
- Method in interface java.sql.
Connection
Retrieves the first warning reported by calls on this
Connection
object.
getWarnings()
- Method in interface java.sql.
ResultSet
Retrieves the first warning reported by calls on this
ResultSet
object.
getWarnings()
- Method in interface java.sql.
Statement
Retrieves the first warning reported by calls on this
Statement
object.
getWarningString()
- Method in class java.awt.
Window
Gets the warning string that is displayed with this window.
getWarningString()
- Method in class javax.swing.
JInternalFrame
Gets the warning string that is displayed with this internal frame.
getWeekdays()
- Method in class java.text.
DateFormatSymbols
Gets weekday strings.
getWeeksInWeekYear()
- Method in class java.util.
Calendar
Returns the number of weeks in the week year represented by this
Calendar
.
getWeeksInWeekYear()
- Method in class java.util.
GregorianCalendar
Returns the number of weeks in the
week year
represented by this
GregorianCalendar
.
getWeekYear()
- Method in class java.util.
Calendar
Returns the week year represented by this
Calendar
.
getWeekYear()
- Method in class java.util.
GregorianCalendar
Returns the
week year
represented by this
GregorianCalendar
.
getWeight()
- Method in class java.util.
Locale.LanguageRange
Returns the weight of this
LanguageRange
.
getWestPane()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Returns the west pane.
getWhatToShow()
- Method in interface org.w3c.dom.ls.
LSParserFilter
Tells the
LSParser
what types of nodes to show to the
 method
LSParserFilter.acceptNode
.
getWhatToShow()
- Method in interface org.w3c.dom.ls.
LSSerializerFilter
Tells the
LSSerializer
what types of nodes to show to the
 filter.
getWhatToShow()
- Method in interface org.w3c.dom.traversal.
NodeIterator
This attribute determines which node types are presented via the
NodeIterator
.
getWhatToShow()
- Method in interface org.w3c.dom.traversal.
TreeWalker
This attribute determines which node types are presented via the
TreeWalker
.
getWheelRotation()
- Method in class java.awt.event.
MouseWheelEvent
Returns the number of "clicks" the mouse wheel was rotated, as an integer.
getWhen()
- Method in class java.awt.event.
ActionEvent
Returns the timestamp of when this event occurred.
getWhen()
- Method in class java.awt.event.
InputEvent
Returns the difference in milliseconds between the timestamp of when this event occurred and
 midnight, January 1, 1970 UTC.
getWhen()
- Method in class java.awt.event.
InputMethodEvent
Returns the time stamp of when this event occurred.
getWhen()
- Method in class java.awt.event.
InvocationEvent
Returns the timestamp of when this event occurred.
getWhere(ScopedValue<T>, T, Supplier<? extends R>)
- Static method in class java.lang.
ScopedValue
PREVIEW
Invokes a supplier of results with a
ScopedValue
bound to a value
 in the current thread.
getWhereClause()
- Method in interface javax.sql.rowset.
JoinRowSet
Return a SQL-like description of the WHERE clause being used
 in a JoinRowSet object.
getWhite()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the white color of the current theme.
getWhite()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the white color.
getWhiteSpace()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the white-space property definition in CSS2.
getWholeText()
- Method in interface org.w3c.dom.
Text
Returns all text of
Text
nodes logically-adjacent text
 nodes to this node, concatenated in document order.
getWidows()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the widows property definition in CSS2.
getWidth()
- Method in class java.awt.
Component
Returns the current width of this component.
getWidth()
- Method in class java.awt.
Dimension
Returns the width of this
Dimension
in double
 precision.
getWidth()
- Method in class java.awt.
DisplayMode
Returns the width of the display, in pixels.
getWidth()
- Method in class java.awt.geom.
Arc2D.Double
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.geom.
Arc2D.Float
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.geom.
Dimension2D
Returns the width of this
Dimension
in double
 precision.
getWidth()
- Method in class java.awt.geom.
Ellipse2D.Double
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.geom.
Ellipse2D.Float
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.geom.
Rectangle2D.Double
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.geom.
Rectangle2D.Float
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.geom.
RectangularShape
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.geom.
RoundRectangle2D.Double
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.geom.
RoundRectangle2D.Float
Returns the width of the framing rectangle in
double
precision.
getWidth()
- Method in class java.awt.image.
BufferedImage
Returns the width of the
BufferedImage
.
getWidth()
- Method in class java.awt.image.
Kernel
Returns the width of this
Kernel
.
getWidth()
- Method in class java.awt.image.
PixelGrabber
Get the width of the pixel buffer (after adjusting for image width).
getWidth()
- Method in class java.awt.image.
Raster
Returns the width in pixels of the Raster.
getWidth()
- Method in interface java.awt.image.renderable.
RenderableImage
Gets the width in user coordinate space.
getWidth()
- Method in class java.awt.image.renderable.
RenderableImageOp
Gets the width in user coordinate space.
getWidth()
- Method in interface java.awt.image.
RenderedImage
Returns the width of the RenderedImage.
getWidth()
- Method in class java.awt.image.
SampleModel
Returns the width in pixels.
getWidth()
- Method in class java.awt.image.
VolatileImage
Returns the width of the
VolatileImage
.
getWidth()
- Method in class java.awt.print.
PageFormat
Returns the width, in 1/72nds of an inch, of the page.
getWidth()
- Method in class java.awt.print.
Paper
Returns the width of the page in 1/72nds
 of an inch.
getWidth()
- Method in class java.awt.
Rectangle
Returns the width of the bounding
Rectangle
in
double
precision.
getWidth()
- Method in exception class java.util.
IllegalFormatWidthException
Returns the width.
getWidth()
- Method in class javax.swing.
JComponent
Returns the current width of this component.
getWidth()
- Method in class javax.swing.
SpringLayout.Constraints
Returns the value of the
width
property.
getWidth()
- Method in class javax.swing.table.
TableColumn
Returns the width of the
TableColumn
.
getWidth()
- Method in class javax.swing.text.
BoxView
Returns the current width of the box.
getWidth()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the width property definition in CSS2.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLAppletElement
Override width.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLHRElement
The width of the rule.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLIFrameElement
Frame width.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLImageElement
Override width.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLObjectElement
Override width.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLPreElement
Fixed width for content.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLTableCellElement
Cell width.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLTableColElement
Default column width.
getWidth()
- Method in interface org.w3c.dom.html.
HTMLTableElement
Specifies the desired table width.
getWidth(int)
- Method in class javax.imageio.
ImageReader
Returns the width in pixels of the given image within the input
 source.
getWidth(int)
- Method in class javax.print.attribute.standard.
MediaPrintableArea
Get the
width
of the printable area in the specified units.
getWidth(ImageObserver)
- Method in class java.awt.image.
AbstractMultiResolutionImage
This method simply delegates to the same method on the base image and
 it is equivalent to:
getBaseImage().getWidth(observer)
.
getWidth(ImageObserver)
- Method in class java.awt.image.
BufferedImage
Returns the width of the
BufferedImage
.
getWidth(ImageObserver)
- Method in class java.awt.
Image
Determines the width of the image.
getWidthOfHighValueLabel()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the width of the highest value label.
getWidthOfLowValueLabel()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the width of the lowest value label.
getWidthOfWidestLabel()
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Returns the width of the widest label.
getWidths()
- Method in class java.awt.
FontMetrics
Gets the advance widths of the first 256 characters in the
Font
.
getWildcardType(TypeMirror, TypeMirror)
- Method in interface javax.lang.model.util.
Types
Returns a new wildcard type.
getWindingRule()
- Method in class java.awt.geom.
FlatteningPathIterator
Returns the winding rule for determining the interior of the
 path.
getWindingRule()
- Method in class java.awt.geom.
Path2D
Returns the fill style winding rule.
getWindingRule()
- Method in interface java.awt.geom.
PathIterator
Returns the winding rule for determining the interior of the
 path.
getWindow()
- Method in class java.awt.event.
WindowEvent
Returns the originator of the event.
getWindowAncestor(Component)
- Static method in class javax.swing.
SwingUtilities
Returns the first
Window
ancestor of
c
, or
null
if
c
is not contained inside a
Window
.
getWindowBackground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the window background color of the current theme.
getWindowBackground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the window background color.
getWindowDecorationStyle()
- Method in class javax.swing.
JRootPane
Returns a constant identifying the type of Window decorations the
JRootPane
is providing.
getWindowFocusListeners()
- Method in class java.awt.
Window
Returns an array of all the window focus listeners
 registered on this window.
getWindowListeners()
- Method in class java.awt.
Window
Returns an array of all the window listeners
 registered on this window.
getWindows()
- Static method in class java.awt.
Window
Returns an array of all
Window
s, both owned and ownerless,
 created by this application.
getWindowStateListeners()
- Method in class java.awt.
Window
Returns an array of all the window state listeners
 registered on this window.
getWindowTitleBackground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the window title background color of the current
 theme.
getWindowTitleBackground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the window title background color.
getWindowTitleFont()
- Method in class javax.swing.plaf.metal.
DefaultMetalTheme
Returns the window title font.
getWindowTitleFont()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the window title font of the current theme.
getWindowTitleFont()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the window title font.
getWindowTitleForeground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the window title foreground color of the current
 theme.
getWindowTitleForeground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the window title foreground color.
getWindowTitleInactiveBackground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the window title inactive background color of the current
 theme.
getWindowTitleInactiveBackground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the window title inactive background color.
getWindowTitleInactiveForeground()
- Static method in class javax.swing.plaf.metal.
MetalLookAndFeel
Returns the window title inactive foreground color of the current
 theme.
getWindowTitleInactiveForeground()
- Method in class javax.swing.plaf.metal.
MetalTheme
Returns the window title inactive foreground color.
getWithLookup(Supplier<T>, SecureLookupSupplier)
- Method in interface jdk.dynalink.linker.
LinkerServices
Executes an operation within the context of a particular
MethodHandles.Lookup
lookup object.
getWordEnd(JTextComponent, int)
- Static method in class javax.swing.text.
Utilities
Determines the end of a word for the given location.
getWordInstance()
- Static method in class java.text.
BreakIterator
Returns a new
BreakIterator
instance
 for
word breaks
for the
default locale
.
getWordInstance(Locale)
- Static method in class java.text.
BreakIterator
Returns a new
BreakIterator
instance
 for
word breaks
for the given locale.
getWordInstance(Locale)
- Method in class java.text.spi.
BreakIteratorProvider
Returns a new
BreakIterator
instance
 for
word breaks
for the given locale.
getWordSize()
- Method in class javax.crypto.spec.
RC5ParameterSpec
Returns the word size in bits.
getWordSpacing()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the word-spacing property definition in CSS2.
getWordStart(JTextComponent, int)
- Static method in class javax.swing.text.
Utilities
Determines the start of a word for the given model location.
getWrapperType(Class<?>)
- Static method in class jdk.dynalink.linker.support.
TypeUtilities
When passed a class representing a primitive type, returns the class representing the corresponding
 wrapper type.
getWrapSizeLimit(int, boolean, int)
- Method in interface org.ietf.jgss.
GSSContext
Used to determine limits on the size of the message
 that can be passed to
wrap
.
getWrapStyleWord()
- Method in class javax.swing.
JTextArea
Gets the style of wrapping used if the text area is wrapping
 lines.
getWritableInstancePropertyNames(Class<?>)
- Static method in class jdk.dynalink.beans.
BeansLinker
Returns a set of names of all writable instance properties of a class.
getWritableParent()
- Method in class java.awt.image.
WritableRaster
Returns the parent WritableRaster (if any) of this WritableRaster,
  or else null.
getWritableStaticPropertyNames(Class<?>)
- Static method in class jdk.dynalink.beans.
BeansLinker
Returns a set of names of all writable static properties of a class.
getWritableTile(int, int)
- Method in class java.awt.image.
BufferedImage
Checks out a tile for writing.
getWritableTile(int, int)
- Method in interface java.awt.image.
WritableRenderedImage
Checks out a tile for writing.
getWritableTileIndices()
- Method in class java.awt.image.
BufferedImage
Returns an array of
Point
objects indicating which tiles
 are checked out for writing.
getWritableTileIndices()
- Method in interface java.awt.image.
WritableRenderedImage
Returns an array of Point objects indicating which tiles
 are checked out for writing.
getWriteHoldCount()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock
Queries the number of reentrant write holds on this lock by the
 current thread.
getWriteMethod()
- Method in class java.beans.
PropertyDescriptor
Gets the method that should be used to write the property value.
getWriter()
- Method in interface javax.script.
ScriptContext
Returns the
Writer
for scripts to use when displaying output.
getWriter()
- Method in class javax.script.
SimpleScriptContext
Returns the
Writer
for scripts to use when displaying output.
getWriter()
- Method in class javax.swing.text.
AbstractWriter
Returns the Writer that is used to output the content.
getWriter()
- Method in class javax.xml.transform.stream.
StreamResult
Get the character stream that was set with setWriter.
getWriterFileSuffixes()
- Static method in class javax.imageio.
ImageIO
Returns an array of
String
s listing all of the
 file suffixes associated with the formats understood
 by the current set of registered writers.
getWriterFormatNames()
- Static method in class javax.imageio.
ImageIO
Returns an array of
String
s listing all of the
 informal format names understood by the current set of registered
 writers.
getWriterMIMETypes()
- Static method in class javax.imageio.
ImageIO
Returns an array of
String
s listing all of the
 MIME types understood by the current set of registered
 writers.
getWriterServiceProviderName()
- Method in class javax.imageio.spi.
ImageTranscoderSpi
Returns the fully qualified class name of an
ImageWriterSpi
class that generates
IIOMetadata
objects that may be used as input to
 this transcoder.
getX()
- Method in class java.awt.
Component
Returns the current x coordinate of the components origin.
getX()
- Method in class java.awt.dnd.
DragSourceEvent
This method returns the horizontal coordinate of the cursor location in
 screen coordinates at the moment this event occurred, or zero if the
 cursor location is not specified for this event.
getX()
- Method in class java.awt.event.
MouseEvent
Returns the horizontal x position of the event relative to the
 source component.
getX()
- Method in class java.awt.geom.
Arc2D.Double
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.geom.
Arc2D.Float
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.geom.
Ellipse2D.Double
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.geom.
Ellipse2D.Float
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.geom.
Point2D.Double
Returns the X coordinate of this
Point2D
in
double
precision.
getX()
- Method in class java.awt.geom.
Point2D.Float
Returns the X coordinate of this
Point2D
in
double
precision.
getX()
- Method in class java.awt.geom.
Point2D
Returns the X coordinate of this
Point2D
in
double
precision.
getX()
- Method in class java.awt.geom.
Rectangle2D.Double
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.geom.
Rectangle2D.Float
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.geom.
RectangularShape
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.geom.
RoundRectangle2D.Double
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.geom.
RoundRectangle2D.Float
Returns the X coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getX()
- Method in class java.awt.
Point
Returns the X coordinate of this
Point2D
in
double
precision.
getX()
- Method in class java.awt.
Rectangle
Returns the X coordinate of the bounding
Rectangle
in
double
precision.
getX()
- Method in interface java.security.interfaces.
DSAPrivateKey
Returns the value of the private key,
x
.
getX()
- Method in class java.security.spec.
DSAPrivateKeySpec
Returns the private key
x
.
getX()
- Method in interface javax.crypto.interfaces.
DHPrivateKey
Returns the private value,
x
.
getX()
- Method in class javax.crypto.spec.
DHPrivateKeySpec
Returns the private value
x
.
getX()
- Method in class javax.swing.
JComponent
Returns the current x coordinate of the component's origin.
getX()
- Method in class javax.swing.
SpringLayout.Constraints
Returns the value of the
x
property.
getX(int)
- Method in class javax.print.attribute.
Size2DSyntax
Returns this two-dimensional size attribute's
X
dimension in the
 given units as a floating-point value.
getX(int)
- Method in class javax.print.attribute.standard.
MediaPrintableArea
Get the
x
location of the origin of the printable area in the
 specified units.
getX1()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the X coordinate of the start point in double precision.
getX1()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the X coordinate of the start point in double precision.
getX1()
- Method in class java.awt.geom.
CubicCurve2D
Returns the X coordinate of the start point in double precision.
getX1()
- Method in class java.awt.geom.
Line2D.Double
Returns the X coordinate of the start point in double precision.
getX1()
- Method in class java.awt.geom.
Line2D.Float
Returns the X coordinate of the start point in double precision.
getX1()
- Method in class java.awt.geom.
Line2D
Returns the X coordinate of the start point in double precision.
getX1()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the X coordinate of the start point in
double
in precision.
getX1()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the X coordinate of the start point in
double
in precision.
getX1()
- Method in class java.awt.geom.
QuadCurve2D
Returns the X coordinate of the start point in
double
in precision.
getX2()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the X coordinate of the end point in double precision.
getX2()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the X coordinate of the end point in double precision.
getX2()
- Method in class java.awt.geom.
CubicCurve2D
Returns the X coordinate of the end point in double precision.
getX2()
- Method in class java.awt.geom.
Line2D.Double
Returns the X coordinate of the end point in double precision.
getX2()
- Method in class java.awt.geom.
Line2D.Float
Returns the X coordinate of the end point in double precision.
getX2()
- Method in class java.awt.geom.
Line2D
Returns the X coordinate of the end point in double precision.
getX2()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the X coordinate of the end point in
double
precision.
getX2()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the X coordinate of the end point in
double
precision.
getX2()
- Method in class java.awt.geom.
QuadCurve2D
Returns the X coordinate of the end point in
double
precision.
getXAConnection()
- Method in interface javax.sql.
XADataSource
Attempts to establish a physical database connection that can be
 used in a distributed transaction.
getXAConnection(String, String)
- Method in interface javax.sql.
XADataSource
Attempts to establish a physical database connection, using the given
 user name and password.
getXAResource()
- Method in interface javax.sql.
XAConnection
Retrieves an
XAResource
object that the transaction manager
 will use to manage this
XAConnection
object's participation
 in a distributed transaction.
getXMicrometers()
- Method in class javax.print.attribute.
Size2DSyntax
Returns this two-dimensional size attribute's
X
dimension in
 units of micrometers (µm).
getXmlEncoding()
- Method in interface org.w3c.dom.
Document
An attribute specifying, as part of the
XML declaration
, the encoding of this document.
getXmlEncoding()
- Method in interface org.w3c.dom.
Entity
An attribute specifying, as part of the text declaration, the encoding
 of this entity, when it is an external parsed entity.
getXMLEventReader()
- Method in class javax.xml.transform.stax.
StAXSource
Get the
XMLEventReader
used by this
StAXSource
.
getXMLEventWriter()
- Method in class javax.xml.transform.stax.
StAXResult
Get the
XMLEventWriter
used by this
StAXResult
.
getXMLReader()
- Method in class javax.xml.parsers.
SAXParser
Returns the
XMLReader
that is encapsulated by the
 implementation of this class.
getXMLReader()
- Method in class javax.xml.transform.sax.
SAXSource
Get the XMLReader to be used for the Source.
getXMLReporter()
- Method in class javax.xml.stream.
XMLInputFactory
The reporter that will be set on any XMLStreamReader or XMLEventReader created
 by this factory instance.
getXMLResolver()
- Method in class javax.xml.stream.
XMLInputFactory
The resolver that will be set on any XMLStreamReader or XMLEventReader created
 by this factory instance.
getXMLSchemaType()
- Method in class javax.xml.datatype.
Duration
Return the name of the XML Schema date/time type that this instance
 maps to.
getXMLSchemaType()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Return the name of the XML Schema date/time type that this instance
 maps to.
getXmlStandalone()
- Method in interface org.w3c.dom.
Document
An attribute specifying, as part of the
XML declaration
, whether this document is standalone.
getXMLStreamReader()
- Method in class javax.xml.transform.stax.
StAXSource
Get the
XMLStreamReader
used by this
StAXSource
.
getXMLStreamWriter()
- Method in class javax.xml.transform.stax.
StAXResult
Get the
XMLStreamWriter
used by this
StAXResult
.
getXmlVersion()
- Method in interface org.w3c.dom.
Document
An attribute specifying, as part of the
XML declaration
, the version number of this document.
getXmlVersion()
- Method in interface org.w3c.dom.
Entity
An attribute specifying, as part of the text declaration, the version
 number of this entity, when it is an external parsed entity.
getXMLVersion()
- Method in interface org.xml.sax.ext.
Locator2
Returns the version of XML used for the entity.
getXMLVersion()
- Method in class org.xml.sax.ext.
Locator2Impl
Returns the current value of the version property.
getXOnScreen()
- Method in class java.awt.event.
MouseEvent
Returns the absolute horizontal x position of the event.
getXOrigin()
- Method in class java.awt.image.
Kernel
Returns the X origin of this
Kernel
.
getXPath()
- Method in class javax.xml.crypto.dsig.spec.
XPathFilterParameterSpec
Returns the XPath expression to be evaluated.
getXPathFunctionResolver()
- Method in interface javax.xml.xpath.
XPath
Return the current function resolver.
getXPathList()
- Method in class javax.xml.crypto.dsig.spec.
XPathFilter2ParameterSpec
Returns a list of one or more
XPathType
objects.
getXPathVariableResolver()
- Method in interface javax.xml.xpath.
XPath
Return the current variable resolver.
getY()
- Method in class java.awt.
Component
Returns the current y coordinate of the components origin.
getY()
- Method in class java.awt.dnd.
DragSourceEvent
This method returns the vertical coordinate of the cursor location in
 screen coordinates at the moment this event occurred, or zero if the
 cursor location is not specified for this event.
getY()
- Method in class java.awt.event.
MouseEvent
Returns the vertical y position of the event relative to the
 source component.
getY()
- Method in class java.awt.geom.
Arc2D.Double
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.geom.
Arc2D.Float
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.geom.
Ellipse2D.Double
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.geom.
Ellipse2D.Float
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.geom.
Point2D.Double
Returns the Y coordinate of this
Point2D
in
double
precision.
getY()
- Method in class java.awt.geom.
Point2D.Float
Returns the Y coordinate of this
Point2D
in
double
precision.
getY()
- Method in class java.awt.geom.
Point2D
Returns the Y coordinate of this
Point2D
in
double
precision.
getY()
- Method in class java.awt.geom.
Rectangle2D.Double
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.geom.
Rectangle2D.Float
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.geom.
RectangularShape
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.geom.
RoundRectangle2D.Double
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.geom.
RoundRectangle2D.Float
Returns the Y coordinate of the upper-left corner of
 the framing rectangle in
double
precision.
getY()
- Method in class java.awt.
Point
Returns the Y coordinate of this
Point2D
in
double
precision.
getY()
- Method in class java.awt.
Rectangle
Returns the Y coordinate of the bounding
Rectangle
in
double
precision.
getY()
- Method in interface java.security.interfaces.
DSAPublicKey
Returns the value of the public key,
y
.
getY()
- Method in class java.security.spec.
DSAPublicKeySpec
Returns the public key
y
.
getY()
- Method in class java.security.spec.
EdECPoint
Get the y-coordinate of the point.
getY()
- Method in interface javax.crypto.interfaces.
DHPublicKey
Returns the public value,
y
.
getY()
- Method in class javax.crypto.spec.
DHPublicKeySpec
Returns the public value
y
.
getY()
- Method in class javax.swing.
JComponent
Returns the current y coordinate of the component's origin.
getY()
- Method in class javax.swing.
SpringLayout.Constraints
Returns the value of the
y
property.
getY(int)
- Method in class javax.print.attribute.
Size2DSyntax
Returns this two-dimensional size attribute's
Y
dimension in the
 given units as a floating-point value.
getY(int)
- Method in class javax.print.attribute.standard.
MediaPrintableArea
Get the
y
location of the origin of the printable area in the
 specified units.
getY1()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the Y coordinate of the start point in double precision.
getY1()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the Y coordinate of the start point in double precision.
getY1()
- Method in class java.awt.geom.
CubicCurve2D
Returns the Y coordinate of the start point in double precision.
getY1()
- Method in class java.awt.geom.
Line2D.Double
Returns the Y coordinate of the start point in double precision.
getY1()
- Method in class java.awt.geom.
Line2D.Float
Returns the Y coordinate of the start point in double precision.
getY1()
- Method in class java.awt.geom.
Line2D
Returns the Y coordinate of the start point in double precision.
getY1()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the Y coordinate of the start point in
double
precision.
getY1()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the Y coordinate of the start point in
double
precision.
getY1()
- Method in class java.awt.geom.
QuadCurve2D
Returns the Y coordinate of the start point in
double
precision.
getY2()
- Method in class java.awt.geom.
CubicCurve2D.Double
Returns the Y coordinate of the end point in double precision.
getY2()
- Method in class java.awt.geom.
CubicCurve2D.Float
Returns the Y coordinate of the end point in double precision.
getY2()
- Method in class java.awt.geom.
CubicCurve2D
Returns the Y coordinate of the end point in double precision.
getY2()
- Method in class java.awt.geom.
Line2D.Double
Returns the Y coordinate of the end point in double precision.
getY2()
- Method in class java.awt.geom.
Line2D.Float
Returns the Y coordinate of the end point in double precision.
getY2()
- Method in class java.awt.geom.
Line2D
Returns the Y coordinate of the end point in double precision.
getY2()
- Method in class java.awt.geom.
QuadCurve2D.Double
Returns the Y coordinate of the end point in
double
precision.
getY2()
- Method in class java.awt.geom.
QuadCurve2D.Float
Returns the Y coordinate of the end point in
double
precision.
getY2()
- Method in class java.awt.geom.
QuadCurve2D
Returns the Y coordinate of the end point in
double
precision.
getYear()
- Method in class java.sql.
Time
Deprecated.
getYear()
- Method in class java.time.
LocalDate
Gets the year field.
getYear()
- Method in class java.time.
LocalDateTime
Gets the year field.
getYear()
- Method in class java.time.
OffsetDateTime
Gets the year field.
getYear()
- Method in class java.time.
YearMonth
Gets the year field.
getYear()
- Method in class java.time.
ZonedDateTime
Gets the year field.
getYear()
- Method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.get(Calendar.YEAR) - 1900
.
getYear()
- Method in class javax.xml.datatype.
XMLGregorianCalendar
Returns the low order component for XML Schema 1.0 dateTime datatype field for
year
or
DatatypeConstants.FIELD_UNDEFINED
.
getYears()
- Method in class java.time.
Period
Gets the amount of years of this period.
getYears()
- Method in class javax.xml.datatype.
Duration
Get the years value of this
Duration
as an
int
or
0
if not present.
getYMicrometers()
- Method in class javax.print.attribute.
Size2DSyntax
Returns this two-dimensional size attribute's
Y
dimension in
 units of micrometers (µm).
getYOnScreen()
- Method in class java.awt.event.
MouseEvent
Returns the absolute vertical y position of the event.
getYOrigin()
- Method in class java.awt.image.
Kernel
Returns the Y origin of this
Kernel
.
getZeroDigit()
- Method in class java.text.
DecimalFormatSymbols
Gets the character used for zero.
getZeroDigit()
- Method in class java.time.format.
DecimalStyle
Gets the character that represents zero.
getZIndex()
- Method in interface org.w3c.dom.css.
CSS2Properties
See the z-index property definition in CSS2.
getZone()
- Method in interface java.time.chrono.
ChronoZonedDateTime
Gets the zone ID, such as 'Europe/Paris'.
getZone()
- Method in class java.time.
Clock
Gets the time-zone being used to create dates and times.
getZone()
- Method in class java.time.format.
DateTimeFormatter
Gets the overriding zone to be used during formatting.
getZone()
- Method in class java.time.
ZonedDateTime
Gets the time-zone, such as 'Europe/Paris'.
getZoneStrings()
- Method in class java.text.
DateFormatSymbols
Gets time zone strings.
gid
- Variable in class com.sun.security.auth.module.
UnixSystem
The current group ID.
GIF
- Static variable in class javax.print.
DocFlavor.BYTE_ARRAY
Doc flavor with MIME type =
"image/gif"
, print data
 representation class name =
"[B"
(byte array).
GIF
- Static variable in class javax.print.
DocFlavor.INPUT_STREAM
Doc flavor with MIME type =
"image/gif"
, print data
 representation class name =
"java.io.InputStream"
(byte
 stream).
GIF
- Static variable in class javax.print.
DocFlavor.URL
Doc flavor with MIME type =
"image/gif"
, print data
 representation class name =
"java.net.URL"
.
GIF Image Metadata Format Specification
- Search tag in package javax.imageio.metadata
Section
GIF Metadata Format Specification
- Search tag in package javax.imageio.metadata
Section
GIF Stream Metadata Format Specification
- Search tag in package javax.imageio.metadata
Section
GLAGOLITIC
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Glagolitic".
GLAGOLITIC
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Glagolitic" Unicode character block.
GLAGOLITIC_SUPPLEMENT
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Glagolitic Supplement" Unicode
 character block.
GLASS_PANE
- Static variable in class javax.accessibility.
AccessibleRole
A pane that is guaranteed to be painted on top of all panes beneath it.
GLASS_PANE_PROPERTY
- Static variable in class javax.swing.
JInternalFrame
Bound property name.
glassPane
- Variable in class javax.swing.
JRootPane
The glass pane that overlays the menu bar and content pane,
  so it can intercept mouse movements and such.
glassPaneDispatcher
- Variable in class javax.swing.plaf.basic.
BasicInternalFrameUI
Glass pane dispatcher
GlassPaneDispatcher()
- Constructor for class javax.swing.plaf.basic.
BasicInternalFrameUI.GlassPaneDispatcher
Constructs a
GlassPaneDispatcher
.
global
- Static variable in class java.util.logging.
Logger
Deprecated.
Initialization of this field is prone to deadlocks.
 The field must be initialized by the Logger class initialization
 which may cause deadlocks with the LogManager class initialization.
 In such cases two class initialization wait for each other to complete.
 The preferred way to get the global logger object is via the call
Logger.getGlobal()
.
 For compatibility with old JDK versions where the
Logger.getGlobal()
is not available use the call
Logger.getLogger(Logger.GLOBAL_LOGGER_NAME)
or
Logger.getLogger("global")
.
global()
- Static method in interface java.lang.foreign.
Arena
PREVIEW
Obtains the global arena.
GLOBAL_LOGGER_NAME
- Static variable in class java.util.logging.
Logger
GLOBAL_LOGGER_NAME is a name for the global logger.
GLOBAL_SCOPE
- Static variable in interface javax.script.
ScriptContext
GlobalScope attributes are visible to all engines created by same ScriptEngineFactory.
Global Exceptions
- Search tag in module jdk.jdi
Section
globalHierarchyLock
- Static variable in interface java.beans.beancontext.
BeanContext
This global lock is used by both
BeanContext
and
BeanContextServices
implementors
 to serialize changes in a
BeanContext
hierarchy and any service requests etc.
globalScope
- Variable in class javax.script.
SimpleScriptContext
This is the global scope bindings.
GlyphJustificationInfo
- Class in
java.awt.font
The
GlyphJustificationInfo
class represents information
 about the justification properties of a glyph.
GlyphJustificationInfo(float, boolean, int, float, float, boolean, int, float, float)
- Constructor for class java.awt.font.
GlyphJustificationInfo
Constructs information about the justification properties of a
 glyph.
GlyphMetrics
- Class in
java.awt.font
The
GlyphMetrics
class represents information for a
 single glyph.
GlyphMetrics(boolean, float, float, Rectangle2D, byte)
- Constructor for class java.awt.font.
GlyphMetrics
Constructs a
GlyphMetrics
object.
GlyphMetrics(float, Rectangle2D, byte)
- Constructor for class java.awt.font.
GlyphMetrics
Constructs a
GlyphMetrics
object.
GlyphPainter()
- Constructor for class javax.swing.text.
GlyphView.GlyphPainter
Constructor for subclasses to call.
GlyphVector
- Class in
java.awt.font
A
GlyphVector
object is a collection of glyphs
 containing geometric information for the placement of each glyph
 in a transformed coordinate space which corresponds to the
 device on which the
GlyphVector
is ultimately
 displayed.
GlyphVector()
- Constructor for class java.awt.font.
GlyphVector
Constructor for subclasses to call.
GlyphView
- Class in
javax.swing.text
A GlyphView is a styled chunk of text that represents a view
 mapped over an element in the text model.
GlyphView(Element)
- Constructor for class javax.swing.text.
GlyphView
Constructs a new view wrapped on an element.
GlyphView.GlyphPainter
- Class in
javax.swing.text
A class to perform rendering of the glyphs.
GMONTH
- Static variable in class javax.xml.datatype.
DatatypeConstants
Fully qualified name for W3C XML Schema 1.0 datatype
gMonth
.
GMONTHDAY
- Static variable in class javax.xml.datatype.
DatatypeConstants
Fully qualified name for W3C XML Schema 1.0 datatype
gMonthDay
.
GoHomeAction()
- Constructor for class javax.swing.plaf.basic.
BasicFileChooserUI.GoHomeAction
Constructs a
GoHomeAction
.
GoodBreakWeight
- Static variable in class javax.swing.text.
View
The weight to indicate a view supports breaking,
 but better opportunities probably exist.
GOPHER
- Static variable in class javax.print.attribute.standard.
ReferenceUriSchemesSupported
Gopher Protocol.
GOT_FOCUS
- Static variable in class java.awt.
Event
Deprecated.
A component gained the focus.
gotDefault
- Variable in class javax.naming.
InitialContext
Field indicating whether the initial context has been obtained
 by calling NamingManager.getInitialContext().
gotFocus(Event, Object)
- Method in class java.awt.
Component
Deprecated.
As of JDK version 1.1,
 replaced by processFocusEvent(FocusEvent).
GOTHIC
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Gothic".
GOTHIC
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Gothic" Unicode character block.
GPS_VERSION_2_2
- Static variable in class javax.imageio.plugins.tiff.
ExifGPSTagSet
A value to be used with the "GPSVersionID" tag to indicate GPS version
 2.2.
grabFocus()
- Method in class javax.swing.
JComponent
Requests that this Component get the input focus, and that this
 Component's top-level ancestor become the focused Window.
grabPixels()
- Method in class java.awt.image.
PixelGrabber
Request the Image or ImageProducer to start delivering pixels and
 wait for all of the pixels in the rectangle of interest to be
 delivered.
grabPixels(long)
- Method in class java.awt.image.
PixelGrabber
Request the Image or ImageProducer to start delivering pixels and
 wait for all of the pixels in the rectangle of interest to be
 delivered or until the specified timeout has elapsed.
GRADE_CHECK_ALL_AT_COMMIT
- Static variable in class javax.sql.rowset.spi.
SyncProvider
Indicates a high level optimistic synchronization grade with
 respect to the originating data source.
GRADE_CHECK_MODIFIED_AT_COMMIT
- Static variable in class javax.sql.rowset.spi.
SyncProvider
Indicates a low level optimistic synchronization grade with
 respect to the originating data source.
GRADE_LOCK_WHEN_LOADED
- Static variable in class javax.sql.rowset.spi.
SyncProvider
Indicates the most pessimistic synchronization grade with
 respect to the originating
 data source.
GRADE_LOCK_WHEN_MODIFIED
- Static variable in class javax.sql.rowset.spi.
SyncProvider
Indicates a pessimistic synchronization grade with
 respect to the originating data source.
GRADE_NONE
- Static variable in class javax.sql.rowset.spi.
SyncProvider
Indicates that no synchronization with the originating data source is
 provided.
GradientPaint
- Class in
java.awt
The
GradientPaint
class provides a way to fill
 a
Shape
with a linear color gradient pattern.
GradientPaint(float, float, Color, float, float, Color)
- Constructor for class java.awt.
GradientPaint
Constructs a simple acyclic
GradientPaint
object.
GradientPaint(float, float, Color, float, float, Color, boolean)
- Constructor for class java.awt.
GradientPaint
Constructs either a cyclic or acyclic
GradientPaint
object depending on the
boolean
parameter.
GradientPaint(Point2D, Color, Point2D, Color)
- Constructor for class java.awt.
GradientPaint
Constructs a simple acyclic
GradientPaint
object.
GradientPaint(Point2D, Color, Point2D, Color, boolean)
- Constructor for class java.awt.
GradientPaint
Constructs either a cyclic or acyclic
GradientPaint
object depending on the
boolean
parameter.
GRANTHA
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Grantha".
GRANTHA
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Grantha" Unicode character block.
Granting all access:
- Search tag in class javax.xml.XMLConstants
Section
GraphicAttribute
- Class in
java.awt.font
This class is used with the CHAR_REPLACEMENT attribute.
GraphicAttribute(int)
- Constructor for class java.awt.font.
GraphicAttribute
Constructs a
GraphicAttribute
.
Graphics
- Class in
java.awt
The
Graphics
class is the abstract base class for
 all graphics contexts that allow an application to draw onto
 components that are realized on various devices, as well as
 onto off-screen images.
Graphics()
- Constructor for class java.awt.
Graphics
Constructs a new
Graphics
object.
Graphics2D
- Class in
java.awt
This
Graphics2D
class extends the
Graphics
class to provide more sophisticated
 control over geometry, coordinate transformations, color management,
 and text layout.
Graphics2D()
- Constructor for class java.awt.
Graphics2D
Constructs a new
Graphics2D
object.
GraphicsConfigTemplate
- Class in
java.awt
The
GraphicsConfigTemplate
class is used to obtain a valid
GraphicsConfiguration
.
GraphicsConfigTemplate()
- Constructor for class java.awt.
GraphicsConfigTemplate
This class is an abstract class so only subclasses can be
 instantiated.
GraphicsConfiguration
- Class in
java.awt
The
GraphicsConfiguration
class describes the
 characteristics of a graphics destination such as a printer or monitor.
GraphicsConfiguration()
- Constructor for class java.awt.
GraphicsConfiguration
This is an abstract class that cannot be instantiated directly.
GraphicsDevice
- Class in
java.awt
The
GraphicsDevice
class describes the graphics devices
 that might be available in a particular graphics environment.
GraphicsDevice()
- Constructor for class java.awt.
GraphicsDevice
This is an abstract class that cannot be instantiated directly.
GraphicsDevice.WindowTranslucency
- Enum Class in
java.awt
Kinds of translucency supported by the underlying system.
GraphicsEnvironment
- Class in
java.awt
The
GraphicsEnvironment
class describes the collection
 of
GraphicsDevice
objects and
Font
objects
 available to a Java(tm) application on a particular platform.
GraphicsEnvironment()
- Constructor for class java.awt.
GraphicsEnvironment
This is an abstract class and cannot be instantiated directly.
gray
- Static variable in class java.awt.
Color
The color gray.
GRAY
- Static variable in class java.awt.
Color
The color gray.
GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHS
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "GrayResponseUnit" tag.
GRAY_RESPONSE_UNIT_HUNDREDTHS
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "GrayResponseUnit" tag.
GRAY_RESPONSE_UNIT_TEN_THOUSANDTHS
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "GrayResponseUnit" tag.
GRAY_RESPONSE_UNIT_TENTHS
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "GrayResponseUnit" tag.
GRAY_RESPONSE_UNIT_THOUSANDTHS
- Static variable in class javax.imageio.plugins.tiff.
BaselineTIFFTagSet
A value to be used with the "GrayResponseUnit" tag.
GrayFilter
- Class in
javax.swing
An image filter that "disables" an image by turning
 it into a grayscale image, and brightening the pixels
 in the image.
GrayFilter(boolean, int)
- Constructor for class javax.swing.
GrayFilter
Constructs a GrayFilter object that filters a color image to a
 grayscale image.
GREATER
- Static variable in class javax.xml.datatype.
DatatypeConstants
Comparison result.
GREATER_THAN
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
BinaryTree
representing
 greater-than
>
.
GREATER_THAN_EQUAL
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
BinaryTree
representing
 greater-than-equal
>=
.
GREEK
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Greek".
GREEK
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Greek and Coptic" Unicode character block.
GREEK_EXTENDED
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Greek Extended" Unicode character block.
green
- Static variable in class java.awt.
Color
The color green.
GREEN
- Static variable in class java.awt.
Color
The color green.
GREENCOMPONENT
- Static variable in class java.awt.color.
ICC_ProfileRGB
Used to get a gamma value or TRC for the green component.
GregorianCalendar
- Class in
java.util
GregorianCalendar
is a concrete subclass of
Calendar
and provides the standard calendar system
 used by most of the world.
GregorianCalendar()
- Constructor for class java.util.
GregorianCalendar
Constructs a default
GregorianCalendar
using the current time
 in the default time zone with the default
FORMAT
locale.
GregorianCalendar(int, int, int)
- Constructor for class java.util.
GregorianCalendar
Constructs a
GregorianCalendar
with the given date set
 in the default time zone with the default locale.
GregorianCalendar(int, int, int, int, int)
- Constructor for class java.util.
GregorianCalendar
Constructs a
GregorianCalendar
with the given date
 and time set for the default time zone with the default locale.
GregorianCalendar(int, int, int, int, int, int)
- Constructor for class java.util.
GregorianCalendar
Constructs a GregorianCalendar with the given date
 and time set for the default time zone with the default locale.
GregorianCalendar(Locale)
- Constructor for class java.util.
GregorianCalendar
Constructs a
GregorianCalendar
based on the current time
 in the default time zone with the given locale.
GregorianCalendar(TimeZone)
- Constructor for class java.util.
GregorianCalendar
Constructs a
GregorianCalendar
based on the current time
 in the given time zone with the default
FORMAT
locale.
GregorianCalendar(TimeZone, Locale)
- Constructor for class java.util.
GregorianCalendar
Constructs a
GregorianCalendar
based on the current time
 in the given time zone with the given locale.
GridBagConstraints
- Class in
java.awt
The
GridBagConstraints
class specifies constraints
 for components that are laid out using the
GridBagLayout
class.
GridBagConstraints()
- Constructor for class java.awt.
GridBagConstraints
Creates a
GridBagConstraint
object with
 all of its fields set to their default value.
GridBagConstraints(int, int, int, int, double, double, int, int, Insets, int, int)
- Constructor for class java.awt.
GridBagConstraints
Creates a
GridBagConstraints
object with
 all of its fields set to the passed-in arguments.
GridBagLayout
- Class in
java.awt
The
GridBagLayout
class is a flexible layout
 manager that aligns components vertically, horizontally or along their
 baseline without requiring that the components be of the same size.
GridBagLayout()
- Constructor for class java.awt.
GridBagLayout
Creates a grid bag layout manager.
GridBagLayoutInfo
- Class in
java.awt
The
GridBagLayoutInfo
is an utility class for
GridBagLayout
layout manager.
gridColor
- Variable in class javax.swing.
JTable
The color of the grid.
gridheight
- Variable in class java.awt.
GridBagConstraints
Specifies the number of cells in a column for the component's
 display area.
GridLayout
- Class in
java.awt
The
GridLayout
class is a layout manager that
 lays out a container's components in a rectangular grid.
GridLayout()
- Constructor for class java.awt.
GridLayout
Creates a grid layout with a default of one column per component,
 in a single row.
GridLayout(int, int)
- Constructor for class java.awt.
GridLayout
Creates a grid layout with the specified number of rows and
 columns.
GridLayout(int, int, int, int)
- Constructor for class java.awt.
GridLayout
Creates a grid layout with the specified number of rows and
 columns.
gridwidth
- Variable in class java.awt.
GridBagConstraints
Specifies the number of cells in a row for the component's
 display area.
gridx
- Variable in class java.awt.
GridBagConstraints
Specifies the cell containing the leading edge of the component's
 display area, where the first cell in a row has
gridx=0
.
gridy
- Variable in class java.awt.
GridBagConstraints
Specifies the cell at the top of the component's display area,
 where the topmost cell has
gridy=0
.
group
- Variable in class javax.swing.
DefaultButtonModel
The button group that the button belongs to.
group()
- Method in class java.nio.channels.
MembershipKey
Returns the multicast group for which this membership key was created.
group()
- Method in interface java.nio.file.attribute.
PosixFileAttributes
Returns the group owner of the file.
group()
- Method in class java.util.random.
RandomGeneratorFactory
Return the group name of the
algorithm
used by the random number generator.
group()
- Method in class java.util.regex.
Matcher
Returns the input subsequence matched by the previous match.
group()
- Method in interface java.util.regex.
MatchResult
Returns the input subsequence matched by the previous match.
group()
- Method in record class jdk.net.
UnixDomainPrincipal
Returns the value of the
group
record component.
group(int)
- Method in class java.util.regex.
Matcher
Returns the input subsequence captured by the given group during the
 previous match operation.
group(int)
- Method in interface java.util.regex.
MatchResult
Returns the input subsequence captured by the given group during the
 previous match operation.
group(String)
- Method in class java.util.regex.
Matcher
Returns the input subsequence captured by the given
named-capturing group
during the
 previous match operation.
group(String)
- Method in interface java.util.regex.
MatchResult
Returns the input subsequence captured by the given
named-capturing group
during the
 previous match operation.
group(ThreadGroup)
- Method in interface java.lang.
Thread.Builder.OfPlatform
Sets the thread group.
GROUP_BOX
- Static variable in class javax.accessibility.
AccessibleRole
A
GROUP_BOX
is a simple container that contains a border around
 it and contains components inside it.
GROUP_EXECUTE
- Enum constant in enum class java.nio.file.attribute.
PosixFilePermission
Execute/search permission, group.
GROUP_PROVIDER
- Variable in class com.sun.security.auth.module.
JndiLoginModule
Directory service/path where this module can access the relevant
 group information.
GROUP_READ
- Enum constant in enum class java.nio.file.attribute.
PosixFilePermission
Read permission, group.
GROUP_WRITE
- Enum constant in enum class java.nio.file.attribute.
PosixFilePermission
Write permission, group.
groupCount()
- Method in class java.util.regex.
Matcher
Returns the number of capturing groups in this matcher's pattern.
groupCount()
- Method in interface java.util.regex.
MatchResult
Returns the number of capturing groups in this match result's pattern.
groupElement(long)
- Static method in interface java.lang.foreign.
MemoryLayout.PathElement
PREVIEW
Returns a path element which selects a member layout with the given index in a group layout.
groupElement(String)
- Static method in interface java.lang.foreign.
MemoryLayout.PathElement
PREVIEW
Returns a path element which selects a member layout with the given name in a group layout.
GROUPING_SEPARATOR
- Static variable in class java.text.
NumberFormat.Field
Constant identifying the grouping separator field.
groupingBy(Function<? super T, ? extends K>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
implementing a "group by" operation on
 input elements of type
T
, grouping elements according to a
 classification function, and returning the results in a
Map
.
groupingBy(Function<? super T, ? extends K>, Supplier<M>, Collector<? super T, A, D>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
implementing a cascaded "group by" operation
 on input elements of type
T
, grouping elements according to a
 classification function, and then performing a reduction operation on
 the values associated with a given key using the specified downstream
Collector
.
groupingBy(Function<? super T, ? extends K>, Collector<? super T, A, D>)
- Static method in class java.util.stream.
Collectors
Returns a
Collector
implementing a cascaded "group by" operation
 on input elements of type
T
, grouping elements according to a
 classification function, and then performing a reduction operation on
 the values associated with a given key using the specified downstream
Collector
.
groupingByConcurrent(Function<? super T, ? extends K>)
- Static method in class java.util.stream.
Collectors
Returns a concurrent
Collector
implementing a "group by"
 operation on input elements of type
T
, grouping elements
 according to a classification function.
groupingByConcurrent(Function<? super T, ? extends K>, Supplier<M>, Collector<? super T, A, D>)
- Static method in class java.util.stream.
Collectors
Returns a concurrent
Collector
implementing a cascaded "group by"
 operation on input elements of type
T
, grouping elements
 according to a classification function, and then performing a reduction
 operation on the values associated with a given key using the specified
 downstream
Collector
.
groupingByConcurrent(Function<? super T, ? extends K>, Collector<? super T, A, D>)
- Static method in class java.util.stream.
Collectors
Returns a concurrent
Collector
implementing a cascaded "group by"
 operation on input elements of type
T
, grouping elements
 according to a classification function, and then performing a reduction
 operation on the values associated with a given key using the specified
 downstream
Collector
.
GroupLayout
- Class in
javax.swing
GroupLayout
is a
LayoutManager
that hierarchically
 groups components in order to position them in a
Container
.
GroupLayout
PREVIEW
- Interface in
java.lang.foreign
A compound layout that is an aggregation of multiple, heterogeneous
member layouts
.
GroupLayout(Container)
- Constructor for class javax.swing.
GroupLayout
Creates a
GroupLayout
for the specified
Container
.
GroupLayout.Alignment
- Enum Class in
javax.swing
Enumeration of the possible ways
ParallelGroup
can align
 its children.
GroupLayout.Group
- Class in
javax.swing
Group
provides the basis for the two types of
 operations supported by
GroupLayout
: laying out
 components one after another (
SequentialGroup
)
 or aligned (
ParallelGroup
).
GroupLayout.ParallelGroup
- Class in
javax.swing
A
Group
that aligns and sizes its children.
GroupLayout.SequentialGroup
- Class in
javax.swing
A
Group
that positions and sizes its elements
 sequentially, one after another.
Group name
- Search tag in class java.util.regex.Pattern
Section
Group number
- Search tag in class java.util.regex.Pattern
Section
GroupPrincipal
- Interface in
java.nio.file.attribute
A
UserPrincipal
representing a
group identity
, used to
 determine access rights to objects in a file system.
groups
- Variable in class com.sun.security.auth.module.
UnixSystem
The current list of groups.
Groups and capturing
- Search tag in class java.util.regex.Pattern
Section
grow(int, int)
- Method in class java.awt.
Rectangle
Resizes the
Rectangle
both horizontally and vertically.
growAbsorb
- Variable in class java.awt.font.
GlyphJustificationInfo
If
true
, this glyph absorbs all extra
 space at this and lower priority levels when it grows.
growLeftLimit
- Variable in class java.awt.font.
GlyphJustificationInfo
The maximum amount by which the left side of this glyph can grow.
growPriority
- Variable in class java.awt.font.
GlyphJustificationInfo
The priority level of this glyph as it is growing.
growRightLimit
- Variable in class java.awt.font.
GlyphJustificationInfo
The maximum amount by which the right side of this glyph can grow.
GSSContext
- Interface in
org.ietf.jgss
This interface encapsulates the GSS-API security context and provides
 the security services that are available over the context.
GSSCredential
- Interface in
org.ietf.jgss
This interface encapsulates the GSS-API credentials for an entity.
GSSException
- Exception Class in
org.ietf.jgss
This exception is thrown whenever a GSS-API error occurs, including
 any mechanism specific error.
GSSException(int)
- Constructor for exception class org.ietf.jgss.
GSSException
Creates a GSSException object with a specified major code.
GSSException(int, int, String)
- Constructor for exception class org.ietf.jgss.
GSSException
Creates a GSSException object with the specified major code, minor
 code, and minor code textual explanation.
GSSManager
- Class in
org.ietf.jgss
This class serves as a factory for other important
 GSS-API classes and also provides information about the mechanisms that
 are supported.
GSSManager()
- Constructor for class org.ietf.jgss.
GSSManager
Constructor for subclasses to call.
GSSName
- Interface in
org.ietf.jgss
This interface encapsulates a single GSS-API principal entity.
GSSUtil
- Class in
com.sun.security.jgss
GSS-API Utilities for using in conjunction with Sun Microsystem's
 implementation of Java GSS-API.
gt(ValueExp, ValueExp)
- Static method in class javax.management.
Query
Returns a query expression that represents a "greater than" constraint on
 two values.
GT
- Static variable in class javax.management.
Query
A code representing the
Query.gt(javax.management.ValueExp, javax.management.ValueExp)
query.
GT
- Static variable in class jdk.incubator.vector.
VectorOperators
Compare
a>b
.
Guard
- Interface in
java.security
This interface represents a guard, which is an object that is used
 to protect access to another object.
GuardedInvocation
- Class in
jdk.dynalink.linker
Represents a conditionally valid method handle.
GuardedInvocation(MethodHandle)
- Constructor for class jdk.dynalink.linker.
GuardedInvocation
Creates a new unconditional guarded invocation.
GuardedInvocation(MethodHandle, MethodHandle)
- Constructor for class jdk.dynalink.linker.
GuardedInvocation
Creates a new guarded invocation, with a guard method handle.
GuardedInvocation(MethodHandle, MethodHandle, SwitchPoint)
- Constructor for class jdk.dynalink.linker.
GuardedInvocation
Creates a new guarded invocation, with both a guard method handle and a
 switch point that can be used to invalidate it.
GuardedInvocation(MethodHandle, MethodHandle, SwitchPoint[], Class<? extends Throwable>)
- Constructor for class jdk.dynalink.linker.
GuardedInvocation
Creates a new guarded invocation, with a guard method handle, any number
 of switch points that can be used to invalidate it, and an exception that
 if thrown when invoked also invalidates it.
GuardedInvocation(MethodHandle, MethodHandle, SwitchPoint, Class<? extends Throwable>)
- Constructor for class jdk.dynalink.linker.
GuardedInvocation
Creates a new guarded invocation, with a guard method handle, a
 switch point that can be used to invalidate it, and an exception that if
 thrown when invoked also invalidates it.
GuardedInvocation(MethodHandle, SwitchPoint)
- Constructor for class jdk.dynalink.linker.
GuardedInvocation
Creates a new guarded invocation that can be invalidated by a switch
 point.
GuardedInvocationTransformer
- Interface in
jdk.dynalink.linker
Interface for objects that are used to transform one guarded invocation into
 another one.
GuardedObject
- Class in
java.security
A GuardedObject is an object that is used to protect access to
 another object.
GuardedObject(Object, Guard)
- Constructor for class java.security.
GuardedObject
Constructs a GuardedObject using the specified object and guard.
GuardingDynamicLinker
- Interface in
jdk.dynalink.linker
The base interface for language-specific dynamic linkers.
GuardingDynamicLinkerExporter
- Class in
jdk.dynalink.linker
A class acting as a supplier of guarding dynamic linkers that can be
 automatically loaded by other language runtimes.
GuardingDynamicLinkerExporter()
- Constructor for class jdk.dynalink.linker.
GuardingDynamicLinkerExporter
Creates a new linker exporter.
GuardingTypeConverterFactory
- Interface in
jdk.dynalink.linker
Optional interface that can be implemented by
GuardingDynamicLinker
implementations to provide language-specific type conversion capabilities.
Guards
- Class in
jdk.dynalink.linker.support
Utility methods for creating typical guards for
MethodHandles.guardWithTest(MethodHandle, MethodHandle, MethodHandle)
and for adjusting their method types.
guardWithTest(MethodHandle, MethodHandle)
- Method in class java.lang.invoke.
SwitchPoint
Returns a method handle which always delegates either to the target or the fallback.
guardWithTest(MethodHandle, MethodHandle, MethodHandle)
- Static method in class java.lang.invoke.
MethodHandles
Makes a method handle which adapts a target method handle,
 by guarding it with a test, a boolean-valued method handle.
guessContentTypeFromName(String)
- Static method in class java.net.
URLConnection
Tries to determine the content type of an object, based
 on the specified "file" component of a URL.
guessContentTypeFromStream(InputStream)
- Static method in class java.net.
URLConnection
Tries to determine the type of an input stream based on the
 characters at the beginning of the input stream.
guiInitialized()
- Method in interface com.sun.java.accessibility.util.
GUIInitializedListener
Invoked when the GUI subsystem is initialized and it's OK for
 the assisitive technology to create instances of GUI objects.
GUIInitializedListener
- Interface in
com.sun.java.accessibility.util
The
GUIInitializedListener
interface is used by the
EventQueueMonitor
class to notify an interested party when the GUI subsystem has been
 initialized.
GUJARATI
- Enum constant in enum class java.awt.font.
NumericShaper.Range
The Gujarati range with the Gujarati digits.
GUJARATI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Gujarati".
GUJARATI
- Static variable in class java.awt.font.
NumericShaper
Identifies the GUJARATI range and decimal base.
GUJARATI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Gujarati" Unicode character block.
GUNJALA_GONDI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Gunjala Gondi".
GUNJALA_GONDI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Gunjala Gondi" Unicode
 character block.
GURMUKHI
- Enum constant in enum class java.awt.font.
NumericShaper.Range
The Gurmukhi range with the Gurmukhi digits.
GURMUKHI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Gurmukhi".
GURMUKHI
- Static variable in class java.awt.font.
NumericShaper
Identifies the GURMUKHI range and decimal base.
GURMUKHI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Gurmukhi" Unicode character block.
GYEAR
- Static variable in class javax.xml.datatype.
DatatypeConstants
Fully qualified name for W3C XML Schema 1.0 datatype
gYear
.
GYEARMONTH
- Static variable in class javax.xml.datatype.
DatatypeConstants
Fully qualified name for W3C XML Schema 1.0 datatype
gYearMonth
.
GZIP
- Static variable in class javax.print.attribute.standard.
Compression
GNU zip compression technology described in
RFC 1952
.
GZIP_MAGIC
- Static variable in class java.util.zip.
GZIPInputStream
GZIP header magic number.
GZIPInputStream
- Class in
java.util.zip
This class implements a stream filter for reading compressed data in
 the GZIP file format.
GZIPInputStream(InputStream)
- Constructor for class java.util.zip.
GZIPInputStream
Creates a new input stream with a default buffer size.
GZIPInputStream(InputStream, int)
- Constructor for class java.util.zip.
GZIPInputStream
Creates a new input stream with the specified buffer size.
GZIPOutputStream
- Class in
java.util.zip
This class implements a stream filter for writing compressed data in
 the GZIP file format.
GZIPOutputStream(OutputStream)
- Constructor for class java.util.zip.
GZIPOutputStream
Creates a new output stream with a default buffer size.
GZIPOutputStream(OutputStream, boolean)
- Constructor for class java.util.zip.
GZIPOutputStream
Creates a new output stream with a default buffer size and
 the specified flush mode.
GZIPOutputStream(OutputStream, int)
- Constructor for class java.util.zip.
GZIPOutputStream
Creates a new output stream with the specified buffer size.
GZIPOutputStream(OutputStream, int, boolean)
- Constructor for class java.util.zip.
GZIPOutputStream
Creates a new output stream with the specified buffer size and
 flush mode.
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.