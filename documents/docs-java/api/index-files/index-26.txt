Z-Index (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Index
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
Z
ZANABAZAR_SQUARE
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Zanabazar Square".
ZANABAZAR_SQUARE
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Zanabazar Square" Unicode
 character block.
zero()
- Method in interface jdk.incubator.vector.
VectorSpecies
Returns a vector of this species
 where all lane elements are set to
 the default primitive value,
(ETYPE)0
.
zero(Class<?>)
- Static method in class java.lang.invoke.
MethodHandles
Produces a constant method handle of the requested return type which
 returns the default value for that type every time it is invoked.
zero(VectorSpecies<Byte>)
- Static method in class jdk.incubator.vector.
ByteVector
Returns a vector of the given species
 where all lane elements are set to
 zero, the default primitive value.
zero(VectorSpecies<Double>)
- Static method in class jdk.incubator.vector.
DoubleVector
Returns a vector of the given species
 where all lane elements are set to
 zero, the default primitive value.
zero(VectorSpecies<Float>)
- Static method in class jdk.incubator.vector.
FloatVector
Returns a vector of the given species
 where all lane elements are set to
 zero, the default primitive value.
zero(VectorSpecies<Integer>)
- Static method in class jdk.incubator.vector.
IntVector
Returns a vector of the given species
 where all lane elements are set to
 zero, the default primitive value.
zero(VectorSpecies<Long>)
- Static method in class jdk.incubator.vector.
LongVector
Returns a vector of the given species
 where all lane elements are set to
 zero, the default primitive value.
zero(VectorSpecies<Short>)
- Static method in class jdk.incubator.vector.
ShortVector
Returns a vector of the given species
 where all lane elements are set to
 zero, the default primitive value.
ZERO
- Static variable in class java.math.
BigDecimal
The value 0, with a scale of 0.
ZERO
- Static variable in class java.math.
BigInteger
The BigInteger constant zero.
ZERO
- Static variable in class java.time.
Duration
Constant for a duration of zero.
ZERO
- Static variable in class java.time.
Period
A constant for a period of zero.
ZERO_EXTEND_B2I
- Static variable in class jdk.incubator.vector.
VectorOperators
Zero-extend
byteVal
to
int
.
ZERO_EXTEND_B2L
- Static variable in class jdk.incubator.vector.
VectorOperators
Zero-extend
byteVal
to
long
.
ZERO_EXTEND_B2S
- Static variable in class jdk.incubator.vector.
VectorOperators
Zero-extend
byteVal
to
short
.
ZERO_EXTEND_I2L
- Static variable in class jdk.incubator.vector.
VectorOperators
Zero-extend
intVal
to
long
.
ZERO_EXTEND_S2I
- Static variable in class jdk.incubator.vector.
VectorOperators
Zero-extend
shortVal
to
int
.
ZERO_EXTEND_S2L
- Static variable in class jdk.incubator.vector.
VectorOperators
Zero-extend
shortVal
to
long
.
Zero-length memory segments
- Search tag in interface java.lang.foreign.MemorySegment
Section
ZipEntry
- Class in
java.util.zip
This class is used to represent a ZIP file entry.
ZipEntry(String)
- Constructor for class java.util.zip.
ZipEntry
Creates a new zip entry with the specified name.
ZipEntry(ZipEntry)
- Constructor for class java.util.zip.
ZipEntry
Creates a new zip entry with fields taken from the specified
 zip entry.
ZipError
- Exception Class in
java.util.zip
Signals that an unrecoverable error has occurred.
ZipError(String)
- Constructor for exception class java.util.zip.
ZipError
Constructs a ZipError with the given detail message.
ZipException
- Exception Class in
java.util.zip
Signals that a Zip exception of some sort has occurred.
ZipException()
- Constructor for exception class java.util.zip.
ZipException
Constructs a
ZipException
with
null
as its error detail message.
ZipException(String)
- Constructor for exception class java.util.zip.
ZipException
Constructs a
ZipException
with the specified detail
 message.
ZipFile
- Class in
java.util.zip
This class is used to read entries from a zip file.
ZipFile(File)
- Constructor for class java.util.zip.
ZipFile
Opens a ZIP file for reading given the specified File object.
ZipFile(File, int)
- Constructor for class java.util.zip.
ZipFile
Opens a new
ZipFile
to read from the specified
File
object in the specified mode.
ZipFile(File, int, Charset)
- Constructor for class java.util.zip.
ZipFile
Opens a new
ZipFile
to read from the specified
File
object in the specified mode.
ZipFile(File, Charset)
- Constructor for class java.util.zip.
ZipFile
Opens a ZIP file for reading given the specified File object.
ZipFile(String)
- Constructor for class java.util.zip.
ZipFile
Opens a zip file for reading.
ZipFile(String, Charset)
- Constructor for class java.util.zip.
ZipFile
Opens a zip file for reading.
Zip File System Properties
- Search tag in module jdk.zipfs
Section
ZipInputStream
- Class in
java.util.zip
An input stream for reading compressed and uncompressed
ZIP file entries
from a stream of bytes in the ZIP file
 format.
ZipInputStream(InputStream)
- Constructor for class java.util.zip.
ZipInputStream
Creates a new ZIP input stream.
ZipInputStream(InputStream, Charset)
- Constructor for class java.util.zip.
ZipInputStream
Creates a new ZIP input stream.
ZipOutputStream
- Class in
java.util.zip
This class implements an output stream filter for writing files in the
 ZIP file format.
ZipOutputStream(OutputStream)
- Constructor for class java.util.zip.
ZipOutputStream
Creates a new ZIP output stream.
ZipOutputStream(OutputStream, Charset)
- Constructor for class java.util.zip.
ZipOutputStream
Creates a new ZIP output stream.
ZNAMENNY_MUSICAL_NOTATION
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Znamenny Musical Notation" Unicode
 character block.
ZOMO
- Static variable in class jdk.incubator.vector.
VectorOperators
Produce
a==0?0:-1
(zero or minus one).
zone()
- Static method in class java.time.temporal.
TemporalQueries
A lenient query for the
ZoneId
, falling back to the
ZoneOffset
.
ZONE_OFFSET
- Static variable in class java.util.
Calendar
Field number for
get
and
set
indicating the raw offset from GMT in milliseconds.
zonedDateTime(Instant, ZoneId)
- Method in interface java.time.chrono.
Chronology
Obtains a
ChronoZonedDateTime
in this chronology from an
Instant
.
zonedDateTime(Instant, ZoneId)
- Method in class java.time.chrono.
HijrahChronology
zonedDateTime(Instant, ZoneId)
- Method in class java.time.chrono.
IsoChronology
Obtains an ISO zoned date-time in this chronology from an
Instant
.
zonedDateTime(Instant, ZoneId)
- Method in class java.time.chrono.
JapaneseChronology
zonedDateTime(Instant, ZoneId)
- Method in class java.time.chrono.
MinguoChronology
zonedDateTime(Instant, ZoneId)
- Method in class java.time.chrono.
ThaiBuddhistChronology
zonedDateTime(TemporalAccessor)
- Method in interface java.time.chrono.
Chronology
Obtains a
ChronoZonedDateTime
in this chronology from another temporal object.
zonedDateTime(TemporalAccessor)
- Method in class java.time.chrono.
HijrahChronology
zonedDateTime(TemporalAccessor)
- Method in class java.time.chrono.
IsoChronology
Obtains an ISO zoned date-time from another date-time object.
zonedDateTime(TemporalAccessor)
- Method in class java.time.chrono.
JapaneseChronology
zonedDateTime(TemporalAccessor)
- Method in class java.time.chrono.
MinguoChronology
zonedDateTime(TemporalAccessor)
- Method in class java.time.chrono.
ThaiBuddhistChronology
ZonedDateTime
- Class in
java.time
A date-time with a time-zone in the ISO-8601 calendar system,
 such as
2007-12-03T10:15:30+01:00 Europe/Paris
.
zoneId()
- Static method in class java.time.temporal.
TemporalQueries
A strict query for the
ZoneId
.
ZoneId
- Class in
java.time
A time-zone ID, such as
Europe/Paris
.
ZoneOffset
- Class in
java.time
A time-zone offset from Greenwich/UTC, such as
+02:00
.
ZoneOffsetTransition
- Class in
java.time.zone
A transition between two offsets caused by a discontinuity in the local time-line.
ZoneOffsetTransitionRule
- Class in
java.time.zone
A rule expressing how to create a transition.
ZoneOffsetTransitionRule.TimeDefinition
- Enum Class in
java.time.zone
A definition of the way a local time can be converted to the actual
 transition date-time.
ZoneRules
- Class in
java.time.zone
The rules defining how the zone offset varies for a single time-zone.
ZoneRulesException
- Exception Class in
java.time.zone
Thrown to indicate a problem with time-zone configuration.
ZoneRulesException(String)
- Constructor for exception class java.time.zone.
ZoneRulesException
Constructs a new date-time exception with the specified message.
ZoneRulesException(String, Throwable)
- Constructor for exception class java.time.zone.
ZoneRulesException
Constructs a new date-time exception with the specified message and cause.
ZoneRulesProvider
- Class in
java.time.zone
Provider of time-zone rules to the system.
ZoneRulesProvider()
- Constructor for class java.time.zone.
ZoneRulesProvider
Constructor.
ZoneView
- Class in
javax.swing.text
ZoneView is a View implementation that creates zones for which
 the child views are not created or stored until they are needed
 for display or model/view translations.
ZoneView(Element, int)
- Constructor for class javax.swing.text.
ZoneView
Constructs a ZoneView.
zoneWasLoaded(View)
- Method in class javax.swing.text.
ZoneView
Called by a zone when it gets loaded.
Z-Order
- Search tag in package java.awt
Section
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.