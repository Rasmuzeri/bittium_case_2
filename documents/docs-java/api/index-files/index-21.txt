U-Index (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Index
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
U
2.0 Usage Guidelines
- Search tag in interface javax.sql.rowset.Joinable
Section
2.0 Using a JoinRowSet Object for Creating a JOIN
- Search tag in interface javax.sql.rowset.JoinRowSet
Section
3.0 Updating a CachedRowSet Object
- Search tag in interface javax.sql.rowset.CachedRowSet
Section
3.0 Usage
- Search tag in interface javax.sql.rowset.FilteredRowSet
Section
3. Usage Threshold
- Search tag in interface java.lang.management.MemoryPoolMXBean
Section
4.0 Updatable SQL VIEWs
- Search tag in class javax.sql.rowset.spi.SyncProvider
Section
4.0 Updating a FilteredRowSet Object
- Search tag in interface javax.sql.rowset.FilteredRowSet
Section
4.0 Updating the Underlying Data Source
- Search tag in interface javax.sql.rowset.CachedRowSet
Section
5. Using the XPath API
- Search tag in package javax.xml.xpath
Section
U
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <u>
UGARITIC
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Ugaritic".
UGARITIC
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Ugaritic" Unicode character block.
ui
- Variable in class javax.swing.
JComponent
The look and feel delegate for this component.
ui
- Variable in class javax.swing.plaf.basic.
BasicMenuUI.ChangeHandler
The instance of
BasicMenuUI
.
UIClientPropertyKey
- Interface in
javax.swing
This interface is used only for tagging keys for client properties for
JComponent
set by UI which needs to be cleared on L&F
 change and serialization.
uid
- Variable in class com.sun.security.auth.module.
UnixSystem
The current user ID.
UID
- Class in
java.rmi.server
A
UID
represents an identifier that is unique over time
 with respect to the host it is generated on, or one of 2
16
"well-known" identifiers.
UID()
- Constructor for class java.rmi.server.
UID
Generates a
UID
that is unique over time with
 respect to the host that it was generated on.
UID(short)
- Constructor for class java.rmi.server.
UID
Creates a "well-known"
UID
.
UIDefaults
- Class in
javax.swing
A table of defaults for Swing components.
UIDefaults()
- Constructor for class javax.swing.
UIDefaults
Creates an empty defaults table.
UIDefaults(int, float)
- Constructor for class javax.swing.
UIDefaults
Creates an empty defaults table with the specified initial capacity and
 load factor.
UIDefaults(Object[])
- Constructor for class javax.swing.
UIDefaults
Creates a defaults table initialized with the specified
 key/value pairs.
UIDefaults.ActiveValue
- Interface in
javax.swing
This class enables one to store an entry in the defaults
 table that's constructed each time it's looked up with one of
 the
getXXX(key)
methods.
UIDefaults.LazyInputMap
- Class in
javax.swing
LazyInputMap
will create a
InputMap
in its
createValue
method.
UIDefaults.LazyValue
- Interface in
javax.swing
This class enables one to store an entry in the defaults
 table that isn't constructed until the first time it's
 looked up with one of the
getXXX(key)
methods.
UIDefaults.ProxyLazyValue
- Class in
javax.swing
This class provides an implementation of
LazyValue
which can be
 used to delay loading of the Class for the instance to be created.
UIEvent
- Interface in
org.w3c.dom.events
The
UIEvent
interface provides specific contextual information
 associated with User Interface events.
UIManager
- Class in
javax.swing
UIManager
manages the current look and feel, the set of
 available look and feels,
PropertyChangeListeners
that
 are notified when the look and feel changes, look and feel defaults, and
 convenience methods for obtaining various default values.
UIManager()
- Constructor for class javax.swing.
UIManager
Constructs a
UIManager
.
UIManager.LookAndFeelInfo
- Class in
javax.swing
Provides a little information about an installed
LookAndFeel
for the sake of configuring a menu or
 for initial application set up.
UIResource
- Interface in
javax.swing.plaf
This interface is used to mark objects created by ComponentUI delegates.
UIResource()
- Constructor for class javax.swing.
DefaultListCellRenderer.UIResource
Constructs a
UIResource
.
UIResource()
- Constructor for class javax.swing.plaf.basic.
BasicComboBoxEditor.UIResource
Constructs a
UIResource
.
UIResource()
- Constructor for class javax.swing.plaf.basic.
BasicComboBoxRenderer.UIResource
Constructs a
UIResource
.
UIResource()
- Constructor for class javax.swing.plaf.metal.
MetalComboBoxEditor.UIResource
Constructs a
UIResource
.
UIResource()
- Constructor for class javax.swing.
ScrollPaneLayout.UIResource
Constructs a
UIResource
.
UIResource()
- Constructor for class javax.swing.table.
DefaultTableCellRenderer.UIResource
Constructs a
UIResource
.
uis
- Variable in class javax.swing.plaf.multi.
MultiButtonUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiColorChooserUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiComboBoxUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiDesktopIconUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiDesktopPaneUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiFileChooserUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiInternalFrameUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiLabelUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiListUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiMenuBarUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiMenuItemUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiOptionPaneUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiPanelUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiPopupMenuUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiProgressBarUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiRootPaneUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiScrollBarUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiScrollPaneUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiSeparatorUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiSliderUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiSpinnerUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiSplitPaneUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiTabbedPaneUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiTableHeaderUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiTableUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiTextUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiToolBarUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiToolTipUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiTreeUI
The vector containing the real UIs.
uis
- Variable in class javax.swing.plaf.multi.
MultiViewportUI
The vector containing the real UIs.
uisToArray(Vector<? extends ComponentUI>)
- Static method in class javax.swing.plaf.multi.
MultiLookAndFeel
Creates an array,
 populates it with UI objects from the passed-in vector,
 and returns the array.
UK
- Static variable in class java.util.
Locale
Useful constant for country.
UL
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <ul>
ULAW
- Static variable in class javax.sound.sampled.
AudioFormat.Encoding
Specifies u-law encoded data.
ulp()
- Method in class java.math.
BigDecimal
Returns the size of an ulp, a unit in the last place, of this
BigDecimal
.
ulp(double)
- Static method in class java.lang.
Math
Returns the size of an ulp of the argument.
ulp(double)
- Static method in class java.lang.
StrictMath
Returns the size of an ulp of the argument.
ulp(float)
- Static method in class java.lang.
Math
Returns the size of an ulp of the argument.
ulp(float)
- Static method in class java.lang.
StrictMath
Returns the size of an ulp of the argument.
UNARY_MINUS
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
UnaryTree
representing unary minus
 operator
-
.
UNARY_PLUS
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
UnaryTree
representing unary plus
 operator
+
.
UnaryOperator<T>
- Interface in
java.util.function
Represents an operation on a single operand that produces a result of the
 same type as its operand.
UnaryTree
- Interface in
com.sun.source.tree
A tree node for postfix and unary expressions.
UNASSIGNED
- Static variable in class java.lang.
Character
General category "Cn" in the Unicode specification.
UNAUTHORIZED
- Static variable in exception class org.ietf.jgss.
GSSException
Operation unauthorized.
UNAVAILABLE
- Enum constant in enum class java.util.concurrent.
StructuredTaskScope.Subtask.State
PREVIEW
The subtask result or exception is not available.
UNAVAILABLE
- Static variable in exception class org.ietf.jgss.
GSSException
Operation unavailable.
unbind(String)
- Static method in class java.rmi.
Naming
Destroys the binding for the specified name that is associated
 with a remote object.
unbind(String)
- Method in interface java.rmi.registry.
Registry
Removes the binding for the specified
name
in
 this registry.
unbind(String)
- Method in interface javax.naming.
Context
Unbinds the named object.
unbind(String)
- Method in class javax.naming.
InitialContext
unbind(Name)
- Method in interface javax.naming.
Context
Unbinds the named object.
unbind(Name)
- Method in class javax.naming.
InitialContext
unbindAddress(InetAddress)
- Method in class com.sun.nio.sctp.
SctpChannel
Removes the given address from the bound addresses for the channel's
 socket.
unbindAddress(InetAddress)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Removes the given address from the bound addresses for the channel's
 socket.
unbindAddress(InetAddress)
- Method in class com.sun.nio.sctp.
SctpServerChannel
Removes the given address from the bound addresses for the channel's
 socket.
unblock(InetAddress)
- Method in class java.nio.channels.
MembershipKey
Unblock multicast datagrams from the given source address that was
 previously blocked using the
block
method.
UNBOUNDED_WILDCARD
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
WildcardTree
representing
 an unbounded wildcard type argument.
unboxedType(TypeMirror)
- Method in interface javax.lang.model.util.
Types
Returns the type (a primitive type) of unboxed values of a given type.
uncaughtException(Thread, Throwable)
- Method in interface java.lang.
Thread.UncaughtExceptionHandler
Method invoked when the given thread terminates due to the
 given uncaught exception.
uncaughtException(Thread, Throwable)
- Method in class java.lang.
ThreadGroup
Called by the Java Virtual Machine when a thread in this
 thread group stops because of an uncaught exception, and the thread
 does not have a specific
Thread.UncaughtExceptionHandler
installed.
uncaughtExceptionHandler(Thread.UncaughtExceptionHandler)
- Method in interface java.lang.
Thread.Builder.OfPlatform
uncaughtExceptionHandler(Thread.UncaughtExceptionHandler)
- Method in interface java.lang.
Thread.Builder.OfVirtual
uncaughtExceptionHandler(Thread.UncaughtExceptionHandler)
- Method in interface java.lang.
Thread.Builder
Sets the uncaught exception handler.
UncheckedIOException
- Exception Class in
java.io
Wraps an
IOException
with an unchecked exception.
UncheckedIOException(IOException)
- Constructor for exception class java.io.
UncheckedIOException
Constructs an instance of this class.
UncheckedIOException(String, IOException)
- Constructor for exception class java.io.
UncheckedIOException
Constructs an instance of this class.
UNCOLLATED
- Static variable in class javax.print.attribute.standard.
SheetCollate
Sheets within a document appear in uncollated order when multiple copies
 are printed.
UNCONDITIONAL
- Static variable in class java.lang.invoke.
MethodHandles.Lookup
A single-bit mask representing
unconditional
access
  which may contribute to the result of
lookupModes
.
unconfigurableExecutorService(ExecutorService)
- Static method in class java.util.concurrent.
Executors
Returns an object that delegates all defined
ExecutorService
methods to the given executor, but not any
 other methods that might otherwise be accessible using
 casts.
unconfigurableScheduledExecutorService(ScheduledExecutorService)
- Static method in class java.util.concurrent.
Executors
Returns an object that delegates all defined
ScheduledExecutorService
methods to the given executor, but
 not any other methods that might otherwise be accessible using
 casts.
unconfigureArrowButton()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
This public method is implementation specific and should be private.
unconfigureEditor()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
This protected method is implementation specific and should be private.
unconfigureEditor()
- Method in class javax.swing.plaf.metal.
MetalComboBoxUI
unconfigureEnclosingScrollPane()
- Method in class javax.swing.
JTable
Reverses the effect of
configureEnclosingScrollPane
by replacing the
columnHeaderView
of the enclosing
 scroll pane with
null
.
UNDECIDED
- Enum constant in enum class java.io.
ObjectInputFilter.Status
The status is undecided, not allowed and not rejected.
UNDECIMBER
- Static variable in class java.util.
Calendar
Value of the
Calendar.MONTH
field indicating the
 thirteenth month of the year.
UndeclaredThrowableException
- Exception Class in
java.lang.reflect
Thrown by a method invocation on a proxy instance if its invocation
 handler's
invoke
method throws a
 checked exception (a
Throwable
that is not assignable
 to
RuntimeException
or
Error
) that
 is not assignable to any of the exception types declared in the
throws
clause of the method that was invoked on the
 proxy instance and dispatched to the invocation handler.
UndeclaredThrowableException(Throwable)
- Constructor for exception class java.lang.reflect.
UndeclaredThrowableException
Constructs an
UndeclaredThrowableException
with the
 specified
Throwable
.
UndeclaredThrowableException(Throwable, String)
- Constructor for exception class java.lang.reflect.
UndeclaredThrowableException
Constructs an
UndeclaredThrowableException
with the
 specified
Throwable
and a detail message.
UNDEFINED
- Static variable in class java.awt.
BufferCapabilities.FlipContents
When flip contents are
UNDEFINED
, the
 contents of the back buffer are undefined after flipping.
UNDEFINED_CONDITION
- Static variable in class javax.swing.
JComponent
Constant used by some of the APIs to mean that no condition is defined.
UndefinedProperty
- Static variable in class java.awt.
Image
The
UndefinedProperty
object should be returned whenever a
 property which was not defined for a particular image is fetched.
UNDERFLOW
- Static variable in class java.nio.charset.
CoderResult
Result object indicating underflow, meaning that either the input buffer
 has been completely consumed or, if the input buffer is not yet empty,
 that additional input is required.
Underline
- Static variable in class javax.swing.text.
StyleConstants
Name of the underline attribute.
UNDERLINE
- Static variable in class java.awt.font.
TextAttribute
Attribute key for underline.
UNDERLINE_LOW_DASHED
- Static variable in class java.awt.font.
TextAttribute
Single pixel dashed low underline.
UNDERLINE_LOW_DOTTED
- Static variable in class java.awt.font.
TextAttribute
Single pixel dotted low underline.
UNDERLINE_LOW_GRAY
- Static variable in class java.awt.font.
TextAttribute
Double pixel gray low underline.
UNDERLINE_LOW_ONE_PIXEL
- Static variable in class java.awt.font.
TextAttribute
Single pixel solid low underline.
UNDERLINE_LOW_TWO_PIXEL
- Static variable in class java.awt.font.
TextAttribute
Double pixel solid low underline.
UNDERLINE_ON
- Static variable in class java.awt.font.
TextAttribute
Standard underline.
UnderlineAction()
- Constructor for class javax.swing.text.
StyledEditorKit.UnderlineAction
Constructs a new UnderlineAction.
UNDETERMINED_REVOCATION_STATUS
- Enum constant in enum class java.security.cert.
CertPathValidatorException.BasicReason
The revocation status of the certificate could not be determined.
undo()
- Method in class javax.swing.text.
AbstractDocument.DefaultDocumentEvent
Undoes a change.
undo()
- Method in class javax.swing.text.
AbstractDocument.ElementEdit
Undoes a change.
undo()
- Method in class javax.swing.text.
DefaultStyledDocument.AttributeUndoableEdit
Undoes a change.
undo()
- Method in class javax.swing.undo.
AbstractUndoableEdit
Throws
CannotUndoException
if
canUndo
returns
false
.
undo()
- Method in class javax.swing.undo.
CompoundEdit
Sends
undo
to all contained
UndoableEdits
in the reverse of
 the order in which they were added.
undo()
- Method in class javax.swing.undo.
StateEdit
Tells the edited object to apply the state prior to the edit
undo()
- Method in interface javax.swing.undo.
UndoableEdit
Undo the edit.
undo()
- Method in class javax.swing.undo.
UndoManager
Undoes the appropriate edits.
UndoableEdit
- Interface in
javax.swing.undo
An
UndoableEdit
represents an edit.
UNDOABLEEDIT
- Static variable in class com.sun.java.accessibility.util.
EventID
Maps to Swing UndoableEdit support (i.e., UndoableEditListener and
 UndoableEditEvent)
UndoableEditEvent
- Class in
javax.swing.event
An event indicating that an operation which can be undone has occurred.
UndoableEditEvent(Object, UndoableEdit)
- Constructor for class javax.swing.event.
UndoableEditEvent
Constructs an UndoableEditEvent object.
undoableEditHappened(UndoableEditEvent)
- Method in interface javax.swing.event.
UndoableEditListener
An undoable edit happened
undoableEditHappened(UndoableEditEvent)
- Method in class javax.swing.undo.
UndoManager
An
UndoableEditListener
method.
UndoableEditListener
- Interface in
javax.swing.event
Interface implemented by a class interested in hearing about
 undoable operations.
UndoableEditSupport
- Class in
javax.swing.undo
A support class used for managing
UndoableEdit
listeners.
UndoableEditSupport()
- Constructor for class javax.swing.undo.
UndoableEditSupport
Constructs an
UndoableEditSupport
object.
UndoableEditSupport(Object)
- Constructor for class javax.swing.undo.
UndoableEditSupport
Constructs an
UndoableEditSupport
object.
undoDelete()
- Method in interface javax.sql.rowset.
CachedRowSet
Cancels the deletion of the current row and notifies listeners that
 a row has changed.
undoInsert()
- Method in interface javax.sql.rowset.
CachedRowSet
Immediately removes the current row from this
CachedRowSet
object if the row has been inserted, and also notifies listeners that a
 row has changed.
UndoManager
- Class in
javax.swing.undo
UndoManager
manages a list of
UndoableEdits
,
 providing a way to undo or redo the appropriate edits.
UndoManager()
- Constructor for class javax.swing.undo.
UndoManager
Creates a new
UndoManager
.
UndoName
- Static variable in class javax.swing.undo.
AbstractUndoableEdit
String returned by
getUndoPresentationName
;
 as of Java 2 platform v1.3.1 this field is no longer used.
undoOrRedo()
- Method in class javax.swing.undo.
UndoManager
Convenience method that invokes one of
undo
or
redo
.
undoRedoName
- Variable in class javax.swing.undo.
StateEdit
The undo/redo presentation name
undoTo(UndoableEdit)
- Method in class javax.swing.undo.
UndoManager
Undoes all changes from the index of the next edit to
edit
, updating the index of the next edit appropriately.
undoUpdate()
- Method in interface javax.sql.rowset.
CachedRowSet
Immediately reverses the last update operation if the
 row has been modified.
unescapeValue(String)
- Static method in class javax.naming.ldap.
Rdn
Given an attribute value string formatted according to the rules
 specified in
RFC 2253
,
 returns the unformatted value.
UNEXPECTED
- Enum constant in enum class java.awt.event.
FocusEvent.Cause
A system action causing an unexpected focus change.
UnexpectedException
- Exception Class in
java.rmi
An
UnexpectedException
is thrown if the client of a
 remote method call receives, as a result of the call, a checked
 exception that is not among the checked exception types declared in the
throws
clause of the method in the remote interface.
UnexpectedException(String)
- Constructor for exception class java.rmi.
UnexpectedException
Constructs an
UnexpectedException
with the specified
 detail message.
UnexpectedException(String, Exception)
- Constructor for exception class java.rmi.
UnexpectedException
Constructs a
UnexpectedException
with the specified
 detail message and nested exception.
unexportObject(Remote, boolean)
- Static method in class java.rmi.server.
UnicastRemoteObject
Removes the remote object, obj, from the RMI runtime.
UnicastRemoteObject
- Class in
java.rmi.server
Used for exporting a remote object with JRMP and obtaining a stub
 that communicates to the remote object.
UnicastRemoteObject()
- Constructor for class java.rmi.server.
UnicastRemoteObject
Creates and exports a new UnicastRemoteObject object using an
 anonymous port.
UnicastRemoteObject(int)
- Constructor for class java.rmi.server.
UnicastRemoteObject
Creates and exports a new UnicastRemoteObject object using the
 particular supplied port.
UnicastRemoteObject(int, RMIClientSocketFactory, RMIServerSocketFactory)
- Constructor for class java.rmi.server.
UnicastRemoteObject
Creates and exports a new UnicastRemoteObject object using the
 particular supplied port and socket factories.
UNICODE_CASE
- Static variable in class java.util.regex.
Pattern
Enables Unicode-aware case folding.
UNICODE_CHARACTER_CLASS
- Static variable in class java.util.regex.
Pattern
Enables the Unicode version of
Predefined character classes
and
POSIX character classes
.
UNICODE_LOCALE_EXTENSION
- Static variable in class java.util.
Locale
The key for Unicode locale extension ('u').
UNICODE_STREAM_PARAM
- Static variable in class javax.sql.rowset.
BaseRowSet
A constant indicating to a
RowSetReaderImpl
object
 that a given parameter is a Unicode stream.
Unicode 3.1.0
- Search tag in class java.lang.Character
External Specification
Unicode Character Database
- Search tag in java.lang.Character.isUnicodeIdentifierPart(char)
External Specification
Unicode Character Database
- Search tag in java.lang.Character.isUnicodeIdentifierPart(int)
External Specification
Unicode Character Database
- Search tag in java.lang.Character.isUnicodeIdentifierStart(char)
External Specification
Unicode Character Database
- Search tag in java.lang.Character.isUnicodeIdentifierStart(int)
External Specification
Unicode Character Representations
- Search tag in class java.lang.Character
Section
Unicode Conformance
- Search tag in class java.lang.Character
Section
Unicode Identifier and Pattern Syntax
- Search tag in java.lang.Character.isUnicodeIdentifierPart(char)
External Specification
Unicode Identifier and Pattern Syntax
- Search tag in java.lang.Character.isUnicodeIdentifierPart(int)
External Specification
Unicode Identifier and Pattern Syntax
- Search tag in java.lang.Character.isUnicodeIdentifierStart(char)
External Specification
Unicode Identifier and Pattern Syntax
- Search tag in java.lang.Character.isUnicodeIdentifierStart(int)
External Specification
Unicode locale/language extension
- Search tag in class java.util.Locale
Section
Unicode Locale Data Markup Language (LDML)
- Search tag in class java.text.CompactNumberFormat
External Specification
Unicode Locale Data Markup Language (LDML)
- Search tag in java.text.Collator.getInstance(Locale)
External Specification
Unicode Locale Data Markup Language (LDML)
- Search tag in java.text.CompactNumberFormat.CompactNumberFormat(String, DecimalFormatSymbols, String[], String)
External Specification
Unicode Locale Data Markup Language (LDML)
- Search tag in java.text.DateFormatSymbols.getMonths()
External Specification
Unicode Locale Data Markup Language (LDML)
- Search tag in java.text.DateFormatSymbols.getShortMonths()
External Specification
Unicode Locale Data Markup Language (LDML)
- Search tag in java.text.NumberFormat.getCurrencyInstance(Locale)
External Specification
Unicode Locale Data Markup Language (LDML)
- Search tag in java.time.format.DateTimeFormatter.ofLocalizedPattern(String)
External Specification
Unicode Locale Data Markup Language (LDML)
- Search tag in java.time.format.DateTimeFormatterBuilder.appendDayPeriodText(TextStyle)
External Specification
Unicode Locale Data Markup Language (LDML)
- Search tag in java.time.format.DateTimeFormatterBuilder.appendLocalized(String)
External Specification
Unicode Normalization Forms
- Search tag in class java.text.Normalizer
External Specification
Unicode Normalization Forms
- Search tag in enum class java.text.Normalizer.Form
External Specification
Unicode Normalization Forms
- Search tag in java.text.Collator.CANONICAL_DECOMPOSITION
External Specification
Unicode Normalization Forms
- Search tag in java.text.Collator.FULL_DECOMPOSITION
External Specification
Unicode Regular Expressions
- Search tag in class java.util.regex.Pattern
External Specification
Unicode Regular Expressions
- Search tag in java.util.regex.Pattern.UNICODE_CHARACTER_CLASS
External Specification
Unicode Script Property
- Search tag in enum class java.lang.Character.UnicodeScript
External Specification
Unicode Security Considerations
- Search tag in class java.net.IDN
External Specification
unicodeStream
- Variable in class javax.sql.rowset.
BaseRowSet
The
InputStream
object that will be
 returned by the method
getUnicodeStream
,
 which is specified in the
ResultSet
interface.
Unicode support
- Search tag in class java.util.regex.Pattern
Section
UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Unified Canadian Aboriginal Syllabics" Unicode character block.
UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Unified Canadian Aboriginal Syllabics Extended"
 Unicode character block.
UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Unified Canadian Aboriginal Syllabics Extended-A" Unicode
 character block.
uninitialize()
- Method in class javax.swing.
LookAndFeel
Uninitializes the look and feel.
uninitialize()
- Method in class javax.swing.plaf.nimbus.
NimbusLookAndFeel
Called by UIManager when this look and feel is uninstalled.
uninitialize()
- Method in class javax.swing.plaf.synth.
SynthLookAndFeel
Called by UIManager when this look and feel is uninstalled.
UNINITIALIZED
- Static variable in class java.security.
Signature
Possible
Signature.state
value, signifying that
 this
Signature
object has not yet been initialized.
UNINITIALIZED_VALUE
- Static variable in class javax.swing.
JOptionPane
Indicates that the user has not yet selected a value.
uninstall()
- Method in class javax.swing.
JFormattedTextField.AbstractFormatter
Uninstalls any state the
AbstractFormatter
may have
 installed on the
JFormattedTextField
.
uninstallBorder(JComponent)
- Static method in class javax.swing.
LookAndFeel
Convenience method for uninstalling a border.
uninstallChooserPanel(JColorChooser)
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Invoked when the panel is removed from the chooser.
uninstallComboBoxModelListeners(ComboBoxModel<?>)
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Removes the listeners from the combo box model
uninstallComponents()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
The aggregate components which comprise the combo box are
 unregistered and uninitialized.
uninstallComponents()
- Method in class javax.swing.plaf.basic.
BasicDesktopIconUI
Unregisters components.
uninstallComponents()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Uninstalls the components.
uninstallComponents()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Unregisters components.
uninstallComponents()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Uninstalls the components.
uninstallComponents()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Removes any installed subcomponents from the JTabbedPane.
uninstallComponents()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Unregisters components.
uninstallComponents()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Uninstalls the renderer pane.
uninstallComponents(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Uninstalls the components.
uninstallComponents(JLabel)
- Method in class javax.swing.plaf.basic.
BasicLabelUI
Unregisters components.
uninstallComponents(JMenuItem)
- Method in class javax.swing.plaf.basic.
BasicMenuItemUI
Unregisters components.
uninstallComponents(JRootPane)
- Method in class javax.swing.plaf.basic.
BasicRootPaneUI
Unregisters components.
uninstallDefaultChoosers()
- Method in class javax.swing.plaf.basic.
BasicColorChooserUI
Uninstalls default color choosers.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicColorChooserUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Uninstalls the default colors, default font, default renderer,
 and default editor from the combo box.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicDesktopIconUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicDesktopPaneUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Uninstalls the defaults.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicListUI
Sets the list properties that have not been explicitly overridden to
null
.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicMenuBarUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicMenuItemUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicPopupMenuUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Unintalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Uninstalls the defaults.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicSpinnerUI
Sets the
JSpinner's
layout manager to null.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Uninstalls the UI defaults.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Uninstalls the defaults.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicTableHeaderUI
Uninstalls default properties
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicTableUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicTextUI
Sets the component properties that have not been explicitly overridden
 to
null
.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Uninstalls default properties.
uninstallDefaults()
- Method in class javax.swing.plaf.synth.
SynthSpinnerUI
Sets the
JSpinner's
layout manager to null.
uninstallDefaults()
- Method in class javax.swing.plaf.synth.
SynthSplitPaneUI
Uninstalls the UI defaults.
uninstallDefaults(AbstractButton)
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Uninstalls default properties.
uninstallDefaults(AbstractButton)
- Method in class javax.swing.plaf.metal.
MetalButtonUI
uninstallDefaults(JComponent)
- Method in class javax.swing.plaf.basic.
BasicToolTipUI
Uninstalls default properties.
uninstallDefaults(JComponent)
- Method in class javax.swing.plaf.basic.
BasicViewportUI
Uninstall view port properties.
uninstallDefaults(JComponent)
- Method in class javax.swing.plaf.synth.
SynthViewportUI
Uninstalls defaults from a viewport.
uninstallDefaults(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Uninstalls the defaults.
uninstallDefaults(JLabel)
- Method in class javax.swing.plaf.basic.
BasicLabelUI
Uninstalls default properties.
uninstallDefaults(JPanel)
- Method in class javax.swing.plaf.basic.
BasicPanelUI
Method for uninstalling panel properties.
uninstallDefaults(JRootPane)
- Method in class javax.swing.plaf.basic.
BasicRootPaneUI
Uninstalls default properties.
uninstallDefaults(JScrollPane)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Uninstalls default properties.
uninstallDefaults(JSeparator)
- Method in class javax.swing.plaf.basic.
BasicSeparatorUI
Uninstalls default properties.
uninstallDefaults(JSeparator)
- Method in class javax.swing.plaf.synth.
SynthSeparatorUI
Uninstalls default setting.
uninstallDefaults(JSlider)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Uninstalls the defaults.
uninstallDefaults(JSlider)
- Method in class javax.swing.plaf.synth.
SynthSliderUI
Uninstalls default setting.
uninstallDefaults(SynthContext)
- Method in class javax.swing.plaf.synth.
SynthStyle
Uninstalls any state that this style installed on
 the
JComponent
from
context
.
uninstallDesktopManager()
- Method in class javax.swing.plaf.basic.
BasicDesktopPaneUI
Uninstalls desktop manager.
uninstallIcons(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Uninstalls the icons.
uninstallingUI()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Called when the UI is uninstalling.
uninstallingUI()
- Method in interface javax.swing.plaf.basic.
ComboPopup
Called to inform the ComboPopup that the UI is uninstalling.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Removes the focus InputMap and ActionMap.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicComboPopup
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicDesktopPaneUI
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Uninstalls the keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicListUI
Unregisters keyboard actions installed from
installKeyboardActions
.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicMenuBarUI
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicMenuItemUI
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicPopupMenuUI
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Uninstalls the keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Uninstalls the keyboard actions for the UI.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Uninstalls the keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicTableHeaderUI
Unregisters default key actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicTableUI
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicTextUI
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Unregisters keyboard actions.
uninstallKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Unregisters keyboard actions.
uninstallKeyboardActions(AbstractButton)
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Unregisters keyboard actions.
uninstallKeyboardActions(JComponent)
- Method in class javax.swing.plaf.basic.
BasicButtonListener
Unregister default key actions.
uninstallKeyboardActions(JLabel)
- Method in class javax.swing.plaf.basic.
BasicLabelUI
Unregisters keyboard actions.
uninstallKeyboardActions(JRootPane)
- Method in class javax.swing.plaf.basic.
BasicRootPaneUI
Unregisters keyboard actions.
uninstallKeyboardActions(JScrollPane)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Unregisters keyboard actions.
uninstallKeyboardActions(JSlider)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Uninstalls keyboard actions.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicColorChooserUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicComboBoxUI
Removes the installed listeners from the combo box and its model.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicDesktopIconUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicDesktopPaneUI
Uninstalls the
PropertyChangeListener
returned from
createPropertyChangeListener
from the
JDesktopPane
.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Uninstalls the listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicListUI
Removes the listeners from the JList, its model, and its
 selectionModel.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicMenuBarUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicMenuItemUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicPopupMenuUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicProgressBarUI
Removes all listeners installed by this object.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Uninstall the listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicSpinnerUI
Removes the
PropertyChangeListener
added
 by installListeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Uninstalls the event listeners for the UI.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Uninstalls the listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicTableHeaderUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicTableUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicTextUI
Uninstalls listeners for the UI.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicToolBarUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Unregisters listeners.
uninstallListeners()
- Method in class javax.swing.plaf.synth.
SynthSplitPaneUI
Uninstalls the event listeners from the UI.
uninstallListeners(AbstractButton)
- Method in class javax.swing.plaf.basic.
BasicButtonUI
Unregisters listeners.
uninstallListeners(JComponent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Unregisters listeners.
uninstallListeners(JComponent)
- Method in class javax.swing.plaf.basic.
BasicToolTipUI
Unregisters listeners.
uninstallListeners(JComponent)
- Method in class javax.swing.plaf.synth.
SynthViewportUI
Uninstalls listeners from the viewport.
uninstallListeners(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Uninstalls the listeners.
uninstallListeners(JLabel)
- Method in class javax.swing.plaf.basic.
BasicLabelUI
Unregisters listeners.
uninstallListeners(JPanel)
- Method in class javax.swing.plaf.synth.
SynthPanelUI
Uninstalls listeners from the panel.
uninstallListeners(JRootPane)
- Method in class javax.swing.plaf.basic.
BasicRootPaneUI
Unregisters listeners.
uninstallListeners(JScrollPane)
- Method in class javax.swing.plaf.metal.
MetalScrollPaneUI
Deprecated.
- Replaced by
BasicScrollPaneUI.uninstallListeners(JComponent)
uninstallListeners(JSeparator)
- Method in class javax.swing.plaf.basic.
BasicSeparatorUI
Unregisters listeners.
uninstallListeners(JSeparator)
- Method in class javax.swing.plaf.synth.
SynthSeparatorUI
Uninstalls listeners.
uninstallListeners(JSlider)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Uninstalls listeners.
uninstallPreviewPanel()
- Method in class javax.swing.plaf.basic.
BasicColorChooserUI
Removes installed preview panel from the UI delegate.
uninstallStrings(JFileChooser)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Uninstalls the strings.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicEditorPaneUI
Deinstalls the UI for a component.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicFileChooserUI
Uninstalls the UI.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicInternalFrameUI
Uninstalls the UI.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicListUI
Uninitializes
this.list
by calling
uninstallListeners()
,
uninstallKeyboardActions()
, and
uninstallDefaults()
in order.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Removes the receiver from the L&F controller of the passed in split
 pane.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicScrollBarUI
Uninstalls the UI.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSliderUI
Uninstalls a UI.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSpinnerUI
Calls
uninstallDefaults
,
uninstallListeners
,
 and then removes all of the spinners children.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI
Uninstalls the UI.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Deinstalls the UI for a component.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.
ComponentUI
Reverses configuration which was done on the specified component during
installUI
.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.
LayerUI
Reverses the configuration which was previously set
 in the
LayerUI.installUI(JComponent)
method.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.metal.
MetalMenuBarUI
Reverses configuration which was done on the specified component during
installUI
.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.metal.
MetalRootPaneUI
Invokes supers implementation to uninstall any of its state.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiButtonUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiColorChooserUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopIconUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopPaneUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiInternalFrameUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiLabelUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiListUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuBarUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuItemUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPanelUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiProgressBarUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiRootPaneUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollBarUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollPaneUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSeparatorUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSliderUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSpinnerUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableHeaderUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolBarUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolTipUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
uninstallUI
method on each UI handled by this object.
uninstallUI(JComponent)
- Method in class javax.swing.plaf.multi.
MultiViewportUI
Invokes the
uninstallUI
method on each UI handled by this object.
union(Rectangle2D, Rectangle2D, Rectangle2D)
- Static method in class java.awt.geom.
Rectangle2D
Unions the pair of source
Rectangle2D
objects
 and puts the result into the specified destination
Rectangle2D
object.
union(Rectangle)
- Method in class java.awt.
Rectangle
Computes the union of this
Rectangle
with the
 specified
Rectangle
.
union(Descriptor...)
- Static method in class javax.management.
ImmutableDescriptor
Return an
ImmutableDescriptor
whose contents are the union of
 the given descriptors.
UNION
- Enum constant in enum class javax.lang.model.type.
TypeKind
A union type.
UNION
- Static variable in class javax.xml.crypto.dsig.spec.
XPathType.Filter
The union filter operation.
UNION_TYPE
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
UnionTypeTree
.
unionLayout(MemoryLayout...)
- Static method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Creates a union layout with the given member layouts.
UnionLayout
PREVIEW
- Interface in
java.lang.foreign
A group layout whose member layouts are laid out at the same starting offset.
UnionType
- Interface in
javax.lang.model.type
Represents a union type.
UnionTypeTree
- Interface in
com.sun.source.tree
A tree node for a union type expression in a multicatch
 variable declaration.
uniqueID()
- Method in interface com.sun.jdi.
ObjectReference
Returns a unique identifier for this ObjectReference.
UNIT_DECREMENT
- Static variable in class java.awt.event.
AdjustmentEvent
The unit decrement adjustment type.
UNIT_INCREMENT
- Static variable in class java.awt.event.
AdjustmentEvent
The unit increment adjustment type.
unitIncrement
- Variable in class javax.swing.
JScrollBar
Stores the amount by which the value of the scrollbar is changed
 upon a unit up/down request.
UNIX
- Enum constant in enum class java.net.
StandardProtocolFamily
Unix domain (Local) interprocess communication.
UNIX_LINES
- Static variable in class java.util.regex.
Pattern
Enables Unix lines mode.
UnixDomainPrincipal
- Record Class in
jdk.net
Represents the credentials of a peer connected to a
Unix domain
socket.
UnixDomainPrincipal(UserPrincipal, GroupPrincipal)
- Constructor for record class jdk.net.
UnixDomainPrincipal
Creates a UnixDomainPrincipal.
UnixDomainSocketAddress
- Class in
java.net
A Unix domain socket address.
Unix domain sockets
- Search tag in package java.net
Section
UnixLoginModule
- Class in
com.sun.security.auth.module
This
LoginModule
imports a user's Unix
Principal
information (
UnixPrincipal
,
UnixNumericUserPrincipal
,
 and
UnixNumericGroupPrincipal
)
 and associates them with the current
Subject
.
UnixLoginModule()
- Constructor for class com.sun.security.auth.module.
UnixLoginModule
Creates a
UnixLoginModule
.
UnixNumericGroupPrincipal
- Class in
com.sun.security.auth
This class implements the
Principal
interface
 and represents a user's Unix group identification number (GID).
UnixNumericGroupPrincipal(long, boolean)
- Constructor for class com.sun.security.auth.
UnixNumericGroupPrincipal
Create a
UnixNumericGroupPrincipal
using a
 long representation of the user's group identification number (GID).
UnixNumericGroupPrincipal(String, boolean)
- Constructor for class com.sun.security.auth.
UnixNumericGroupPrincipal
Create a
UnixNumericGroupPrincipal
using a
String
representation of the user's
 group identification number (GID).
UnixNumericUserPrincipal
- Class in
com.sun.security.auth
This class implements the
Principal
interface
 and represents a user's Unix identification number (UID).
UnixNumericUserPrincipal(long)
- Constructor for class com.sun.security.auth.
UnixNumericUserPrincipal
Create a
UnixNumericUserPrincipal
using a
 long representation of the user's identification number (UID).
UnixNumericUserPrincipal(String)
- Constructor for class com.sun.security.auth.
UnixNumericUserPrincipal
Create a
UnixNumericUserPrincipal
using a
String
representation of the
 user's identification number (UID).
UnixOperatingSystemMXBean
- Interface in
com.sun.management
Platform-specific management interface for the Unix
 operating system on which the Java virtual machine is running.
UnixPrincipal
- Class in
com.sun.security.auth
This class implements the
Principal
interface
 and represents a Unix user.
UnixPrincipal(String)
- Constructor for class com.sun.security.auth.
UnixPrincipal
Create a UnixPrincipal with a Unix username.
UnixSystem
- Class in
com.sun.security.auth.module
This class implementation retrieves and makes available Unix
 UID/GID/groups information for the current user.
UnixSystem()
- Constructor for class com.sun.security.auth.module.
UnixSystem
Instantiate a
UnixSystem
and load
 the native library to access the underlying system information.
UNKNOWN
- Enum constant in enum class java.awt.event.
FocusEvent.Cause
The default value.
UNKNOWN
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Unknown".
UNKNOWN
- Enum constant in enum class jdk.jshell.
SourceCodeAnalysis.Completeness
The completeness of the input could not be determined because it
 contains errors.
UNKNOWN
- Static variable in class java.awt.
ComponentOrientation
Indicates that a component's orientation has not been set.
UNKNOWN
- Static variable in class javax.accessibility.
AccessibleRole
The object contains some
Accessible
information, but its role is
 not known.
UNKNOWN
- Static variable in class javax.management.
MBeanOperationInfo
Indicates that the impact of the operation is unknown or cannot be
 expressed using one of the other values.
UNKNOWN
- Static variable in class javax.print.attribute.standard.
JobState
The job state is unknown.
UNKNOWN
- Static variable in class javax.print.attribute.standard.
PrinterState
The printer state is unknown.
UNKNOWN_BLOCK_TAG
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
UnknownBlockTagTree
representing an unknown block tag.
UNKNOWN_INLINE_TAG
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
UnknownInlineTagTree
representing an unknown inline tag.
UNKNOWN_LENGTH
- Static variable in class javax.sound.midi.
MidiFileFormat
Represents unknown length.
UNKNOWN_NUMBER_OF_PAGES
- Static variable in interface java.awt.print.
Pageable
This constant is returned from the
getNumberOfPages
method if a
Pageable
implementation does not know
 the number of pages in its set.
UNKNOWN_RULE
- Static variable in interface org.w3c.dom.css.
CSSRule
The rule is a
CSSUnknownRule
.
UNKNOWN_SUBKIND
- Enum constant in enum class jdk.jshell.
Snippet.SubKind
An unknown snippet.
UNKNOWN_TAG_NAME
- Static variable in class javax.imageio.plugins.tiff.
TIFFTag
The name assigned to a tag with an unknown tag number.
UnknownAnnotationValueException
- Exception Class in
javax.lang.model.element
Indicates that an unknown kind of annotation value was encountered.
UnknownAnnotationValueException(AnnotationValue, Object)
- Constructor for exception class javax.lang.model.element.
UnknownAnnotationValueException
Creates a new
UnknownAnnotationValueException
.
UnknownBlockTagTree
- Interface in
com.sun.source.doctree
A tree node for an unrecognized block tag.
UnknownDirectiveException
- Exception Class in
javax.lang.model.element
Indicates that an unknown kind of module directive was encountered.
UnknownDirectiveException(ModuleElement.Directive, Object)
- Constructor for exception class javax.lang.model.element.
UnknownDirectiveException
Creates a new
UnknownElementException
.
UnknownElementException
- Exception Class in
javax.lang.model.element
Indicates that an unknown kind of element was encountered.
UnknownElementException(Element, Object)
- Constructor for exception class javax.lang.model.element.
UnknownElementException
Creates a new
UnknownElementException
.
UnknownEntityException
- Exception Class in
javax.lang.model
Superclass of exceptions which indicate that an unknown kind of
 entity was encountered.
UnknownEntityException(String)
- Constructor for exception class javax.lang.model.
UnknownEntityException
Creates a new
UnknownEntityException
with the specified
 detail message.
UnknownError
- Exception Class in
java.lang
Thrown when an unknown but serious exception has occurred in the
 Java Virtual Machine.
UnknownError()
- Constructor for exception class java.lang.
UnknownError
Constructs an
UnknownError
with no detail message.
UnknownError(String)
- Constructor for exception class java.lang.
UnknownError
Constructs an
UnknownError
with the specified detail
 message.
UnknownFormatConversionException
- Exception Class in
java.util
Unchecked exception thrown when an unknown conversion is given.
UnknownFormatConversionException(String)
- Constructor for exception class java.util.
UnknownFormatConversionException
Constructs an instance of this class with the unknown conversion.
UnknownFormatFlagsException
- Exception Class in
java.util
Unchecked exception thrown when an unknown flag is given.
UnknownFormatFlagsException(String)
- Constructor for exception class java.util.
UnknownFormatFlagsException
Constructs an instance of this class with the specified flags.
UnknownHostException
- Exception Class in
java.net
Thrown to indicate that the IP address of a host could not be determined.
UnknownHostException
- Exception Class in
java.rmi
An
UnknownHostException
is thrown if a
java.net.UnknownHostException
occurs while creating
 a connection to the remote host for a remote method call.
UnknownHostException()
- Constructor for exception class java.net.
UnknownHostException
Constructs a new
UnknownHostException
with no detail
 message.
UnknownHostException(String)
- Constructor for exception class java.net.
UnknownHostException
Constructs a new
UnknownHostException
with the
 specified detail message.
UnknownHostException(String)
- Constructor for exception class java.rmi.
UnknownHostException
Constructs an
UnknownHostException
with the specified
 detail message.
UnknownHostException(String, Exception)
- Constructor for exception class java.rmi.
UnknownHostException
Constructs an
UnknownHostException
with the specified
 detail message and nested exception.
UnknownInlineTagTree
- Interface in
com.sun.source.doctree
A tree node for an unrecognized inline tag.
UnknownServiceException
- Exception Class in
java.net
Thrown to indicate that an unknown service exception has
 occurred.
UnknownServiceException()
- Constructor for exception class java.net.
UnknownServiceException
Constructs a new
UnknownServiceException
with no
 detail message.
UnknownServiceException(String)
- Constructor for exception class java.net.
UnknownServiceException
Constructs a new
UnknownServiceException
with the
 specified detail message.
UnknownTag(String)
- Constructor for class javax.swing.text.html.
HTML.UnknownTag
Creates a new
UnknownTag
with the specified
id
.
UnknownTypeException
- Exception Class in
javax.lang.model.type
Indicates that an unknown kind of type was encountered.
UnknownTypeException(TypeMirror, Object)
- Constructor for exception class javax.lang.model.type.
UnknownTypeException
Creates a new
UnknownTypeException
.The
p
parameter may be used to pass in an additional argument with
 information about the context in which the unknown type was
 encountered; for example, the visit methods of
TypeVisitor
may pass in their additional parameter.
UNLIMITED
- Static variable in class java.math.
MathContext
A
MathContext
object whose settings have the values
 required for unlimited precision arithmetic.
unload()
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Unloads the contents of this mapped segment from physical memory.
unloadAllInstruments(Soundbank)
- Method in interface javax.sound.midi.
Synthesizer
Unloads all instruments contained in the specified
Soundbank
.
unloadInstrument(Instrument)
- Method in interface javax.sound.midi.
Synthesizer
Unloads a particular instrument.
unloadInstruments(Soundbank, Patch[])
- Method in interface javax.sound.midi.
Synthesizer
Unloads the instruments referenced by the specified patches, from the
 MIDI sound bank specified.
unloadZone(View)
- Method in class javax.swing.text.
ZoneView
Unload a zone (Convert the zone to its memory saving state).
unlock()
- Method in interface java.util.concurrent.locks.
Lock
Releases the lock.
unlock()
- Method in class java.util.concurrent.locks.
ReentrantLock
Attempts to release this lock.
unlock()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock.ReadLock
Attempts to release this lock.
unlock()
- Method in class java.util.concurrent.locks.
ReentrantReadWriteLock.WriteLock
Attempts to release this lock.
unlock(long)
- Method in class java.util.concurrent.locks.
StampedLock
If the lock state matches the given stamp, releases the
 corresponding mode of the lock.
unlockRead(long)
- Method in class java.util.concurrent.locks.
StampedLock
If the lock state matches the given stamp, releases the
 non-exclusive lock.
unlockWrite(long)
- Method in class java.util.concurrent.locks.
StampedLock
If the lock state matches the given stamp, releases the
 exclusive lock.
unmappableCharacterAction()
- Method in class java.nio.charset.
CharsetDecoder
Returns this decoder's current action for unmappable-character errors.
unmappableCharacterAction()
- Method in class java.nio.charset.
CharsetEncoder
Returns this encoder's current action for unmappable-character errors.
UnmappableCharacterException
- Exception Class in
java.nio.charset
Checked exception thrown when an input character (or byte) sequence
 is valid but cannot be mapped to an output byte (or character)
 sequence.
UnmappableCharacterException(int)
- Constructor for exception class java.nio.charset.
UnmappableCharacterException
Constructs an
UnmappableCharacterException
with the
 given length.
unmappableForLength(int)
- Static method in class java.nio.charset.
CoderResult
Static factory method that returns the unique result object describing
 an unmappable-character error of the given length.
UnmarshalException
- Exception Class in
java.rmi
An
UnmarshalException
can be thrown while unmarshalling the
 parameters or results of a remote method call if any of the following
 conditions occur:
 
  if an exception occurs while unmarshalling the call header
  if the protocol for the return value is invalid
  if a
java.io.IOException
occurs unmarshalling
 parameters (on the server side) or the return value (on the client side).
UnmarshalException(String)
- Constructor for exception class java.rmi.
UnmarshalException
Constructs an
UnmarshalException
with the specified
 detail message.
UnmarshalException(String, Exception)
- Constructor for exception class java.rmi.
UnmarshalException
Constructs an
UnmarshalException
with the specified
 detail message and nested exception.
unmarshalKeyInfo(XMLStructure)
- Method in class javax.xml.crypto.dsig.keyinfo.
KeyInfoFactory
Unmarshals a new
KeyInfo
instance from a
 mechanism-specific
XMLStructure
(ex:
DOMStructure
)
 instance.
Unmarshalling XMLSignatures from XML
- Search tag in class javax.xml.crypto.dsig.XMLSignatureFactory
Section
unmarshalXMLSignature(XMLValidateContext)
- Method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Unmarshals a new
XMLSignature
instance from a
 mechanism-specific
XMLValidateContext
instance.
unmarshalXMLSignature(XMLStructure)
- Method in class javax.xml.crypto.dsig.
XMLSignatureFactory
Unmarshals a new
XMLSignature
instance from a
 mechanism-specific
XMLStructure
instance.
UnmodifiableClassException
- Exception Class in
java.lang.instrument
Thrown by an implementation of
Instrumentation.redefineClasses
when one of the specified classes cannot be modified.
UnmodifiableClassException()
- Constructor for exception class java.lang.instrument.
UnmodifiableClassException
Constructs an
UnmodifiableClassException
with no
 detail message.
UnmodifiableClassException(String)
- Constructor for exception class java.lang.instrument.
UnmodifiableClassException
Constructs an
UnmodifiableClassException
with the
 specified detail message.
unmodifiableCollection(Collection<? extends T>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified collection.
Unmodifiable Collections
- Search tag in interface java.util.Collection
Section
unmodifiableList(List<? extends T>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified list.
Unmodifiable Lists
- Search tag in interface java.util.List
Section
unmodifiableMap(Map<? extends K, ? extends V>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified map.
Unmodifiable Maps
- Search tag in interface java.util.Map
Section
UnmodifiableModuleException
- Exception Class in
java.lang.instrument
Thrown to indicate that a module cannot be modified.
UnmodifiableModuleException()
- Constructor for exception class java.lang.instrument.
UnmodifiableModuleException
Constructs an
UnmodifiableModuleException
with no
 detail message.
UnmodifiableModuleException(String)
- Constructor for exception class java.lang.instrument.
UnmodifiableModuleException
Constructs an
UnmodifiableModuleException
with the
 specified detail message.
unmodifiableNavigableMap(NavigableMap<K, ? extends V>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified navigable map.
unmodifiableNavigableSet(NavigableSet<T>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified navigable set.
unmodifiableSequencedCollection(SequencedCollection<? extends T>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified
SequencedCollection
.
unmodifiableSequencedMap(SequencedMap<? extends K, ? extends V>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified
SequencedMap
.
unmodifiableSequencedSet(SequencedSet<? extends T>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified
SequencedSet
.
unmodifiableSet(Set<? extends T>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified set.
UnmodifiableSetException
- Exception Class in
javax.print.attribute
Thrown to indicate that the requested operation cannot be performed because
 the set is unmodifiable.
UnmodifiableSetException()
- Constructor for exception class javax.print.attribute.
UnmodifiableSetException
Constructs an
UnsupportedOperationException
with no detail
 message.
UnmodifiableSetException(String)
- Constructor for exception class javax.print.attribute.
UnmodifiableSetException
Constructs an
UnmodifiableSetException
with the specified detail
 message.
Unmodifiable Sets
- Search tag in interface java.util.Set
Section
unmodifiableSortedMap(SortedMap<K, ? extends V>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified sorted map.
unmodifiableSortedSet(SortedSet<T>)
- Static method in class java.util.
Collections
Returns an
unmodifiable view
of the
 specified sorted set.
unmodifiableView(AttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates an unmodifiable view of the given attribute set.
unmodifiableView(DocAttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates an unmodifiable view of the given doc attribute set.
unmodifiableView(PrintJobAttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates an unmodifiable view of the given print job attribute set.
unmodifiableView(PrintRequestAttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates an unmodifiable view of the given print request attribute set.
unmodifiableView(PrintServiceAttributeSet)
- Static method in class javax.print.attribute.
AttributeSetUtilities
Creates an unmodifiable view of the given print service attribute set.
Unmodifiable View Collections
- Search tag in interface java.util.Collection
Section
Unnamed Classes
- Search tag in class java.lang.Class
Section
UNNECESSARY
- Enum constant in enum class java.math.
RoundingMode
Rounding mode to assert that the requested operation has an exact
 result, hence no rounding is necessary.
UNNECESSARY
- Static variable in class java.awt.
GraphicsConfigTemplate
Value used for "Enum" (Integer) type.
unordered()
- Method in interface java.util.stream.
BaseStream
Returns an equivalent stream that is
unordered
.
unordered(boolean)
- Method in class com.sun.nio.sctp.
MessageInfo
Sets whether or not the message is unordered.
UNORDERED
- Enum constant in enum class java.util.stream.
Collector.Characteristics
Indicates that the collection operation does not commit to preserving
 the encounter order of input elements.
UNORDERED_NODE_ITERATOR_TYPE
- Static variable in interface org.w3c.dom.xpath.
XPathResult
The result is a node set as defined by  that will be accessed
 iteratively, which may not produce nodes in a particular order.
UNORDERED_NODE_SNAPSHOT_TYPE
- Static variable in interface org.w3c.dom.xpath.
XPathResult
The result is a node set as defined by  that will be accessed as a
 snapshot list of nodes that may not be in a particular order.
unpark(Thread)
- Static method in class java.util.concurrent.locks.
LockSupport
Makes available the permit for the given thread, if it
 was not already available.
unparsedEntityDecl(String, String, String, String)
- Method in interface org.xml.sax.
DTDHandler
Receive notification of an unparsed entity declaration event.
unparsedEntityDecl(String, String, String, String)
- Method in class org.xml.sax.
HandlerBase
Deprecated.
Receive notification of an unparsed entity declaration.
unparsedEntityDecl(String, String, String, String)
- Method in class org.xml.sax.helpers.
DefaultHandler
Receive notification of an unparsed entity declaration.
unparsedEntityDecl(String, String, String, String)
- Method in class org.xml.sax.helpers.
XMLFilterImpl
Filter an unparsed entity declaration event.
unquote(String)
- Static method in class javax.management.
ObjectName
Returns an unquoted form of the given String.
UNQUOTED
- Enum constant in enum class com.sun.source.doctree.
AttributeTree.ValueKind
The attribute value is not enclosed in quotes.
unread(byte[])
- Method in class java.io.
PushbackInputStream
Pushes back an array of bytes by copying it to the front of the
 pushback buffer.
unread(byte[], int, int)
- Method in class java.io.
PushbackInputStream
Pushes back a portion of an array of bytes by copying it to the front
 of the pushback buffer.
unread(char[])
- Method in class java.io.
PushbackReader
Pushes back an array of characters by copying it to the front of the
 pushback buffer.
unread(char[], int, int)
- Method in class java.io.
PushbackReader
Pushes back a portion of an array of characters by copying it to the
 front of the pushback buffer.
unread(int)
- Method in class java.io.
PushbackInputStream
Pushes back a byte by copying it to the front of the pushback buffer.
unread(int)
- Method in class java.io.
PushbackReader
Pushes back a single character by copying it to the front of the
 pushback buffer.
UNRECOGNIZED_CRIT_EXT
- Enum constant in enum class java.security.cert.
PKIXReason
The certificate contains one or more unrecognized critical
 extensions.
UnrecoverableEntryException
- Exception Class in
java.security
This exception is thrown if an entry in the keystore cannot be recovered.
UnrecoverableEntryException()
- Constructor for exception class java.security.
UnrecoverableEntryException
Constructs an
UnrecoverableEntryException
with no detail message.
UnrecoverableEntryException(String)
- Constructor for exception class java.security.
UnrecoverableEntryException
Constructs an
UnrecoverableEntryException
with the specified
 detail message, which provides more information about why this exception
 has been thrown.
UnrecoverableKeyException
- Exception Class in
java.security
This exception is thrown if a key in the keystore cannot be recovered.
UnrecoverableKeyException()
- Constructor for exception class java.security.
UnrecoverableKeyException
Constructs an
UnrecoverableKeyException
with no detail message.
UnrecoverableKeyException(String)
- Constructor for exception class java.security.
UnrecoverableKeyException
Constructs an
UnrecoverableKeyException
with the specified detail
 message, which provides more information about why this exception
 has been thrown.
unreferenced()
- Method in interface java.rmi.server.
Unreferenced
Called by the RMI runtime sometime after the runtime determines that
 the reference list, the list of clients referencing the remote object,
 becomes empty.
unreferenced()
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
Unreferenced
- Interface in
java.rmi.server
A remote object implementation should implement the
Unreferenced
interface to receive notification when there are
 no more clients that reference that remote object.
unreflect(MethodHandles.Lookup, Method)
- Static method in class jdk.dynalink.linker.support.
Lookup
Performs a
MethodHandles.Lookup.unreflect(Method)
,
 converting any encountered
IllegalAccessException
into an
IllegalAccessError
.
unreflect(Method)
- Method in class java.lang.invoke.
MethodHandles.Lookup
Makes a
direct method handle
to
m
, if the lookup class has permission.
unreflect(Method)
- Method in class jdk.dynalink.linker.support.
Lookup
Performs a
MethodHandles.Lookup.unreflect(Method)
,
 converting any encountered
IllegalAccessException
into an
IllegalAccessError
.
unreflectConstructor(MethodHandles.Lookup, Constructor<?>)
- Static method in class jdk.dynalink.linker.support.
Lookup
Performs a
MethodHandles.Lookup.unreflectConstructor(Constructor)
,
 converting any encountered
IllegalAccessException
into an
IllegalAccessError
.
unreflectConstructor(Constructor<?>)
- Method in class java.lang.invoke.
MethodHandles.Lookup
Produces a method handle for a reflected constructor.
unreflectConstructor(Constructor<?>)
- Method in class jdk.dynalink.linker.support.
Lookup
Performs a
MethodHandles.Lookup.unreflectConstructor(Constructor)
,
 converting any encountered
IllegalAccessException
into an
IllegalAccessError
.
unreflectGetter(Field)
- Method in class java.lang.invoke.
MethodHandles.Lookup
Produces a method handle giving read access to a reflected field.
unreflectGetter(Field)
- Method in class jdk.dynalink.linker.support.
Lookup
Performs a
MethodHandles.Lookup.unreflectGetter(Field)
,
 converting any encountered
IllegalAccessException
into an
IllegalAccessError
.
unreflectSetter(Field)
- Method in class java.lang.invoke.
MethodHandles.Lookup
Produces a method handle giving write access to a reflected field.
unreflectSetter(Field)
- Method in class jdk.dynalink.linker.support.
Lookup
Performs a
MethodHandles.Lookup.unreflectSetter(Field)
,
 converting any encountered
IllegalAccessException
into an
IllegalAccessError
.
unreflectSpecial(Method, Class<?>)
- Method in class java.lang.invoke.
MethodHandles.Lookup
Produces a method handle for a reflected method.
unreflectVarHandle(Field)
- Method in class java.lang.invoke.
MethodHandles.Lookup
Produces a VarHandle giving access to a reflected field
f
of type
T
declared in a class of type
R
.
unregister()
- Method in class jdk.jfr.
EventFactory
Unregisters the event that is associated with this event factory.
unregister(Class<? extends Event>)
- Static method in class jdk.jfr.
FlightRecorder
Unregisters an event class.
unregisterComponent(JComponent)
- Method in class javax.swing.
ToolTipManager
Removes a component from tooltip control.
unregisterKeyboardAction(KeyStroke)
- Method in class javax.swing.
JComponent
This method is now obsolete.
unregisterKeyboardActions()
- Method in class javax.swing.plaf.basic.
BasicDesktopPaneUI
Unregisters keyboard actions.
unregisterListeners()
- Method in class java.awt.dnd.
DragGestureRecognizer
unregister this DragGestureRecognizer's Listeners with the Component

 subclasses must override this method
unregisterListeners()
- Method in class java.awt.dnd.
MouseDragGestureRecognizer
unregister this DragGestureRecognizer's Listeners with the Component

 subclasses must override this method
unregisterMBean(ObjectName)
- Method in interface javax.management.
MBeanServer
Unregisters an MBean from the MBean server.
unregisterMBean(ObjectName)
- Method in interface javax.management.
MBeanServerConnection
Unregisters an MBean from the MBean server.
unregisterMBean(ObjectName, Subject)
- Method in interface javax.management.remote.rmi.
RMIConnection
Handles the method
MBeanServerConnection.unregisterMBean(ObjectName)
.
unregisterMBean(ObjectName, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl_Stub
unregisterMBean(ObjectName, Subject)
- Method in class javax.management.remote.rmi.
RMIConnectionImpl
unregisterProvider(String)
- Static method in class javax.sql.rowset.spi.
SyncFactory
Removes the designated currently registered synchronization provider from the
 Factory SPI register.
UNREGISTRATION_NOTIFICATION
- Static variable in class javax.management.
MBeanServerNotification
Notification type denoting that an MBean has been unregistered.
UNRELATED
- Enum constant in enum class javax.swing.
LayoutStyle.ComponentPlacement
Enumeration value indicating the two components are
 visually unrelated and will be placed in the same parent.
UnresolvedAddressException
- Exception Class in
java.nio.channels
Unchecked exception thrown when an attempt is made to invoke a network
 operation upon an unresolved socket address.
UnresolvedAddressException()
- Constructor for exception class java.nio.channels.
UnresolvedAddressException
Constructs an instance of this class.
unresolvedDependencies(DeclarationSnippet)
- Method in class jdk.jshell.
JShell
For
RECOVERABLE_DEFINED
or
RECOVERABLE_NOT_DEFINED
declarations, the names of current unresolved dependencies for
 the snippet.
UnresolvedPermission
- Class in
java.security
The
UnresolvedPermission
class is used to hold Permissions that
 were "unresolved" when the Policy was initialized.
UnresolvedPermission(String, String, String, Certificate[])
- Constructor for class java.security.
UnresolvedPermission
Creates a new
UnresolvedPermission
containing the permission
 information needed later to actually create a Permission of the
 specified class, when the permission is resolved.
UnresolvedReferenceException
- Exception Class in
jdk.jshell
Exception reported on attempting to execute a
RECOVERABLE_DEFINED
snippet.
UnsatisfiedLinkError
- Exception Class in
java.lang
Thrown if the Java Virtual Machine cannot find an appropriate
 native-language definition of a method declared
native
.
UnsatisfiedLinkError()
- Constructor for exception class java.lang.
UnsatisfiedLinkError
Constructs an
UnsatisfiedLinkError
with no detail message.
UnsatisfiedLinkError(String)
- Constructor for exception class java.lang.
UnsatisfiedLinkError
Constructs an
UnsatisfiedLinkError
with the
 specified detail message.
unscaledValue()
- Method in class java.math.
BigDecimal
Returns a
BigInteger
whose value is the
unscaled
 value
of this
BigDecimal
.
UNSELECTED_CONVERTED_TEXT_HIGHLIGHT
- Static variable in class java.awt.im.
InputMethodHighlight
Constant for the default highlight for unselected converted text.
UNSELECTED_RAW_TEXT_HIGHLIGHT
- Static variable in class java.awt.im.
InputMethodHighlight
Constant for the default highlight for unselected raw text.
UNSEQ_TOKEN
- Static variable in exception class org.ietf.jgss.
GSSException
A later token has already been processed.
UNSET
- Static variable in class javax.swing.
Spring
An integer value signifying that a property value has not yet been calculated.
unsetCompression()
- Method in class javax.imageio.
ImageWriteParam
Removes any previous compression type and quality settings.
unsetCompression()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageWriteParam
Removes any previous compression quality setting.
unsetDecodeTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageReadParam
Removes any quantization and Huffman tables that are currently
 set.
unsetEncodeTables()
- Method in class javax.imageio.plugins.jpeg.
JPEGImageWriteParam
Removes any quantization and Huffman tables that are currently
 set.
unsetMatchColumn(int)
- Method in interface javax.sql.rowset.
Joinable
Unsets the designated column as the match column for this
RowSet
object.
unsetMatchColumn(int[])
- Method in interface javax.sql.rowset.
Joinable
Unsets the designated columns as the match column for this
RowSet
object.
unsetMatchColumn(String)
- Method in interface javax.sql.rowset.
Joinable
Unsets the designated column as the match column for this
RowSet
object.
unsetMatchColumn(String[])
- Method in interface javax.sql.rowset.
Joinable
Unsets the designated columns as the match columns for this
RowSet
object.
unsetOrdering(Class<T>, T, T)
- Method in class javax.imageio.spi.
ServiceRegistry
Sets a pairwise ordering between two service provider objects
 within a given category.
unsetTiling()
- Method in class javax.imageio.
ImageWriteParam
Removes any previous tile grid parameters specified by calls to
setTiling
.
Unsigned
- Annotation Interface in
jdk.jfr
Event field annotation, specifies that the value is of an unsigned data type.
UNSIGNED_GE
- Static variable in class jdk.incubator.vector.
VectorOperators
Unsigned compare
a>=b
.
UNSIGNED_GT
- Static variable in class jdk.incubator.vector.
VectorOperators
Unsigned compare
a>b
.
UNSIGNED_LE
- Static variable in class jdk.incubator.vector.
VectorOperators
Unsigned compare
a<=b
.
UNSIGNED_LT
- Static variable in class jdk.incubator.vector.
VectorOperators
Unsigned compare
a<b
.
UNSIGNED_RIGHT_SHIFT
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
BinaryTree
representing
 unsigned right shift
>>>
.
UNSIGNED_RIGHT_SHIFT_ASSIGNMENT
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
CompoundAssignmentTree
representing
 unsigned right shift assignment
>>>=
.
unsignedMultiplyHigh(long, long)
- Static method in class java.lang.
Math
Returns as a
long
the most significant 64 bits of the unsigned
 128-bit product of two unsigned 64-bit factors.
unsignedMultiplyHigh(long, long)
- Static method in class java.lang.
StrictMath
Returns as a
long
the most significant 64 bits of the unsigned
 128-bit product of two unsigned 64-bit factors.
unslice(int)
- Method in class jdk.incubator.vector.
ByteVector
Reverses a
slice()
, inserting
 the current vector as a slice within a "background" input
 of zero lane values.
unslice(int)
- Method in class jdk.incubator.vector.
DoubleVector
Reverses a
slice()
, inserting
 the current vector as a slice within a "background" input
 of zero lane values.
unslice(int)
- Method in class jdk.incubator.vector.
FloatVector
Reverses a
slice()
, inserting
 the current vector as a slice within a "background" input
 of zero lane values.
unslice(int)
- Method in class jdk.incubator.vector.
IntVector
Reverses a
slice()
, inserting
 the current vector as a slice within a "background" input
 of zero lane values.
unslice(int)
- Method in class jdk.incubator.vector.
LongVector
Reverses a
slice()
, inserting
 the current vector as a slice within a "background" input
 of zero lane values.
unslice(int)
- Method in class jdk.incubator.vector.
ShortVector
Reverses a
slice()
, inserting
 the current vector as a slice within a "background" input
 of zero lane values.
unslice(int)
- Method in class jdk.incubator.vector.
Vector
Reverses a
slice()
, inserting
 the current vector as a slice within a "background" input
 of zero lane values.
unslice(int, Vector<E>, int)
- Method in class jdk.incubator.vector.
Vector
Reverses a
slice()
, inserting
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<E>, int, VectorMask<E>)
- Method in class jdk.incubator.vector.
Vector
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Byte>, int)
- Method in class jdk.incubator.vector.
ByteVector
Reverses a
slice()
, inserting
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Byte>, int, VectorMask<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Double>, int)
- Method in class jdk.incubator.vector.
DoubleVector
Reverses a
slice()
, inserting
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Double>, int, VectorMask<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Float>, int)
- Method in class jdk.incubator.vector.
FloatVector
Reverses a
slice()
, inserting
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Float>, int, VectorMask<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Integer>, int)
- Method in class jdk.incubator.vector.
IntVector
Reverses a
slice()
, inserting
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Integer>, int, VectorMask<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Long>, int)
- Method in class jdk.incubator.vector.
LongVector
Reverses a
slice()
, inserting
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Long>, int, VectorMask<Long>)
- Method in class jdk.incubator.vector.
LongVector
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Short>, int)
- Method in class jdk.incubator.vector.
ShortVector
Reverses a
slice()
, inserting
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
unslice(int, Vector<Short>, int, VectorMask<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Reverses a
slice()
, inserting
 (under the control of a mask)
 the current vector as a slice within another "background" input
 vector, which is regarded as one or the other input to a
 hypothetical subsequent
slice()
operation.
UnsolicitedNotification
- Interface in
javax.naming.ldap
This interface represents an unsolicited notification as defined in
RFC 2251
.
UnsolicitedNotificationEvent
- Class in
javax.naming.ldap
This class represents an event fired in response to an unsolicited
 notification sent by the LDAP server.
UnsolicitedNotificationEvent(Object, UnsolicitedNotification)
- Constructor for class javax.naming.ldap.
UnsolicitedNotificationEvent
Constructs a new instance of
UnsolicitedNotificationEvent
.
UnsolicitedNotificationListener
- Interface in
javax.naming.ldap
This interface is for handling
UnsolicitedNotificationEvent
.
UNSORTED
- Enum constant in enum class javax.swing.
SortOrder
Enumeration value indicating the items are unordered.
UNSPECIFIED
- Enum constant in enum class java.awt.desktop.
UserSessionEvent.Reason
The system does not provide a reason for a session change.
UNSPECIFIED
- Enum constant in enum class java.security.cert.
CertPathValidatorException.BasicReason
Unspecified reason.
UNSPECIFIED
- Enum constant in enum class java.security.cert.
CRLReason
This reason indicates that it is unspecified as to why the
 certificate has been revoked.
UNSPECIFIED_EVENT_TYPE_ERR
- Static variable in exception class org.w3c.dom.events.
EventException
If the
Event
's type was not specified by initializing the
 event before the method was called.
UNSPECIFIED_OPTION
- Static variable in class javax.security.auth.callback.
ConfirmationCallback
Unspecified option type.
unstarted(Runnable)
- Method in interface java.lang.
Thread.Builder
Creates a new
Thread
from the current state of the builder to
 run the given task.
unsubscribe(JShell.Subscription)
- Method in class jdk.jshell.
JShell
Cancel a callback subscription.
UNSUPPORTED_COMPRESSION
- Static variable in class javax.print.attribute.standard.
JobStateReason
The job was aborted by the system because the printer determined while
 attempting to decompress the document's data that the compression is
 actually not among those supported by the printer.
UNSUPPORTED_DOCUMENT_FORMAT
- Static variable in class javax.print.attribute.standard.
JobStateReason
The job was aborted by the system because the document data's document
 format (doc flavor) is not among those supported by the printer.
UNSUPPORTED_EMPTY_COLLECTION
- Static variable in class java.security.
Policy
Deprecated.
A read-only empty PermissionCollection instance.
UnsupportedAddressTypeException
- Exception Class in
java.nio.channels
Unchecked exception thrown when an attempt is made to bind or connect
 to a socket address of a type that is not supported.
UnsupportedAddressTypeException()
- Constructor for exception class java.nio.channels.
UnsupportedAddressTypeException
Constructs an instance of this class.
UnsupportedAudioFileException
- Exception Class in
javax.sound.sampled
An
UnsupportedAudioFileException
is an exception indicating that an
 operation failed because a file did not contain valid data of a recognized
 file type and format.
UnsupportedAudioFileException()
- Constructor for exception class javax.sound.sampled.
UnsupportedAudioFileException
Constructs an
UnsupportedAudioFileException
that has
null
as its error detail message.
UnsupportedAudioFileException(String)
- Constructor for exception class javax.sound.sampled.
UnsupportedAudioFileException
Constructs an
UnsupportedAudioFileException
that has the
 specified detail message.
UnsupportedCallbackException
- Exception Class in
javax.security.auth.callback
Signals that a
CallbackHandler
does not
 recognize a particular
Callback
.
UnsupportedCallbackException(Callback)
- Constructor for exception class javax.security.auth.callback.
UnsupportedCallbackException
Constructs an
UnsupportedCallbackException
with no detail message.
UnsupportedCallbackException(Callback, String)
- Constructor for exception class javax.security.auth.callback.
UnsupportedCallbackException
Constructs a UnsupportedCallbackException with the specified detail
 message.
UnsupportedCharsetException
- Exception Class in
java.nio.charset
Unchecked exception thrown when no support is available
 for a requested charset.
UnsupportedCharsetException(String)
- Constructor for exception class java.nio.charset.
UnsupportedCharsetException
Constructs an instance of this class.
UnsupportedClassVersionError
- Exception Class in
java.lang
Thrown when the Java Virtual Machine attempts to read a class
 file and determines that the major and minor version numbers
 in the file are not supported.
UnsupportedClassVersionError()
- Constructor for exception class java.lang.
UnsupportedClassVersionError
Constructs a
UnsupportedClassVersionError
with no detail message.
UnsupportedClassVersionError(String)
- Constructor for exception class java.lang.
UnsupportedClassVersionError
Constructs a
UnsupportedClassVersionError
with
 the specified detail message.
UnsupportedEncodingException
- Exception Class in
java.io
The Character Encoding is not supported.
UnsupportedEncodingException()
- Constructor for exception class java.io.
UnsupportedEncodingException
Constructs an UnsupportedEncodingException without a detail message.
UnsupportedEncodingException(String)
- Constructor for exception class java.io.
UnsupportedEncodingException
Constructs an UnsupportedEncodingException with a detail message.
UnsupportedFlavorException
- Exception Class in
java.awt.datatransfer
Signals that the requested data is not supported in this flavor.
UnsupportedFlavorException(DataFlavor)
- Constructor for exception class java.awt.datatransfer.
UnsupportedFlavorException
Constructs an UnsupportedFlavorException.
UnsupportedLookAndFeelException
- Exception Class in
javax.swing
An exception that indicates the requested look & feel
 management classes are not present on the user's system.
UnsupportedLookAndFeelException(String)
- Constructor for exception class javax.swing.
UnsupportedLookAndFeelException
Constructs an UnsupportedLookAndFeelException object.
UnsupportedOperationException
- Exception Class in
java.lang
Thrown to indicate that the requested operation is not supported.
UnsupportedOperationException()
- Constructor for exception class java.lang.
UnsupportedOperationException
Constructs an UnsupportedOperationException with no detail message.
UnsupportedOperationException(String)
- Constructor for exception class java.lang.
UnsupportedOperationException
Constructs an UnsupportedOperationException with the specified
 detail message.
UnsupportedOperationException(String, Throwable)
- Constructor for exception class java.lang.
UnsupportedOperationException
Constructs a new exception with the specified detail message and
 cause.
UnsupportedOperationException(Throwable)
- Constructor for exception class java.lang.
UnsupportedOperationException
Constructs a new exception with the specified cause and a detail
 message of
(cause==null ? null : cause.toString())
(which
 typically contains the class and detail message of
cause
).
UnsupportedTemporalTypeException
- Exception Class in
java.time.temporal
UnsupportedTemporalTypeException indicates that a ChronoField or ChronoUnit is
 not supported for a Temporal class.
UnsupportedTemporalTypeException(String)
- Constructor for exception class java.time.temporal.
UnsupportedTemporalTypeException
Constructs a new UnsupportedTemporalTypeException with the specified message.
UnsupportedTemporalTypeException(String, Throwable)
- Constructor for exception class java.time.temporal.
UnsupportedTemporalTypeException
Constructs a new UnsupportedTemporalTypeException with the specified message and cause.
unsynchronize(Line[])
- Method in interface javax.sound.sampled.
Mixer
Releases synchronization for the specified lines.
until(ChronoLocalDate)
- Method in interface java.time.chrono.
ChronoLocalDate
Calculates the period between this date and another date as a
ChronoPeriod
.
until(ChronoLocalDate)
- Method in class java.time.chrono.
HijrahDate
until(ChronoLocalDate)
- Method in class java.time.chrono.
JapaneseDate
until(ChronoLocalDate)
- Method in class java.time.chrono.
MinguoDate
until(ChronoLocalDate)
- Method in class java.time.chrono.
ThaiBuddhistDate
until(ChronoLocalDate)
- Method in class java.time.
LocalDate
Calculates the period between this date and another date as a
Period
.
until(Temporal, TemporalUnit)
- Method in interface java.time.chrono.
ChronoLocalDate
Calculates the amount of time until another date in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.chrono.
HijrahDate
until(Temporal, TemporalUnit)
- Method in class java.time.chrono.
JapaneseDate
until(Temporal, TemporalUnit)
- Method in class java.time.chrono.
MinguoDate
until(Temporal, TemporalUnit)
- Method in class java.time.chrono.
ThaiBuddhistDate
until(Temporal, TemporalUnit)
- Method in class java.time.
Instant
Calculates the amount of time until another instant in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.
LocalDate
Calculates the amount of time until another date in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.
LocalDateTime
Calculates the amount of time until another date-time in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.
LocalTime
Calculates the amount of time until another time in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.
OffsetDateTime
Calculates the amount of time until another date-time in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.
OffsetTime
Calculates the amount of time until another time in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in interface java.time.temporal.
Temporal
Calculates the amount of time until another temporal in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.
Year
Calculates the amount of time until another year in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.
YearMonth
Calculates the amount of time until another year-month in terms of the specified unit.
until(Temporal, TemporalUnit)
- Method in class java.time.
ZonedDateTime
Calculates the amount of time until another date-time in terms of the specified unit.
UNUSED
- Enum constant in enum class java.security.cert.
CRLReason
Unused reason.
unwrap()
- Method in class java.lang.invoke.
MethodType
Converts all wrapper types to their corresponding primitive types.
unwrap(byte[], int, int)
- Method in interface javax.security.sasl.
SaslClient
Unwraps a byte array received from the server.
unwrap(byte[], int, int)
- Method in interface javax.security.sasl.
SaslServer
Unwraps a byte array received from the client.
unwrap(byte[], int, int, MessageProp)
- Method in interface org.ietf.jgss.
GSSContext
Used to process tokens generated by the
wrap
method on
 the other side of the context.
unwrap(byte[], String, int)
- Method in class javax.crypto.
Cipher
Unwrap a previously wrapped key.
unwrap(InputStream, OutputStream, MessageProp)
- Method in interface org.ietf.jgss.
GSSContext
Deprecated.
The stream-based methods have been removed from RFC 8353.
 Use
GSSContext.unwrap(byte[], int, int, MessageProp)
instead.
unwrap(Class<T>)
- Method in interface java.sql.
Wrapper
Returns an object that implements the given interface to allow access to
 non-standard methods, or standard methods not exposed by the proxy.
unwrap(Class<T>)
- Method in class javax.sql.rowset.
RowSetMetaDataImpl
Returns an object that implements the given interface to allow access to non-standard methods,
 or standard methods not exposed by the proxy.
unwrap(ByteBuffer, ByteBuffer)
- Method in class javax.net.ssl.
SSLEngine
Attempts to decode SSL/TLS/DTLS network data into a plaintext
 application data buffer.
unwrap(ByteBuffer, ByteBuffer[])
- Method in class javax.net.ssl.
SSLEngine
Attempts to decode SSL/TLS/DTLS network data into a sequence of plaintext
 application data buffers.
unwrap(ByteBuffer, ByteBuffer[], int, int)
- Method in class javax.net.ssl.
SSLEngine
Attempts to decode SSL/TLS/DTLS network data into a subsequence of
 plaintext application data buffers.
UNWRAP_MODE
- Static variable in class javax.crypto.
Cipher
Constant used to initialize cipher to key-unwrapping mode.
UP
- Enum constant in enum class java.math.
RoundingMode
Rounding mode to round away from zero.
UP
- Static variable in class java.awt.
Event
Deprecated.
The Up Arrow key, a non-ASCII action key.
UP_CYCLE_TRAVERSAL_KEYS
- Static variable in class java.awt.
KeyboardFocusManager
The identifier for the Up Cycle focus traversal keys.
upAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for moving the caret
 logically upward one position.
upcallStub(MethodHandle, FunctionDescriptor, Arena, Linker.Option...)
- Method in interface java.lang.foreign.
Linker
PREVIEW
Creates an upcall stub which can be passed to other foreign functions as a function pointer, associated with the given
 arena.
UPDATABLE_VIEW_SYNC
- Static variable in class javax.sql.rowset.spi.
SyncProvider
Indicates that a
SyncProvider
implementation
 supports synchronization between a
RowSet
object and
 the SQL
VIEW
used to populate it.
update()
- Method in class java.awt.
SplashScreen
Updates the splash window with current contents of the overlay image.
update()
- Method in class java.lang.
Runtime.Version
Returns the value of the
update
element of the
 version number, or zero if it is absent.
update(byte)
- Method in class java.security.
MessageDigest
Updates the digest using the specified byte.
update(byte)
- Method in class java.security.
Signature
Updates the data to be signed or verified by a byte.
update(byte)
- Method in class javax.crypto.
Mac
Processes the given byte.
update(byte[])
- Method in class java.security.
MessageDigest
Updates the digest using the specified array of bytes.
update(byte[])
- Method in class java.security.
Signature
Updates the data to be signed or verified, using the specified
 array of bytes.
update(byte[])
- Method in interface java.util.zip.
Checksum
Updates the current checksum with the specified array of bytes.
update(byte[])
- Method in class javax.crypto.
Cipher
Continues a multiple-part encryption or decryption operation
 (depending on how this
Cipher
object was initialized),
 processing another data part.
update(byte[])
- Method in class javax.crypto.
Mac
Processes the given array of bytes.
update(byte[], int, int)
- Method in class java.security.
MessageDigest
Updates the digest using the specified array of bytes, starting
 at the specified offset.
update(byte[], int, int)
- Method in class java.security.
Signature
Updates the data to be signed or verified, using the specified
 array of bytes, starting at the specified offset.
update(byte[], int, int)
- Method in class java.util.zip.
Adler32
Updates the checksum with the specified array of bytes.
update(byte[], int, int)
- Method in interface java.util.zip.
Checksum
Updates the current checksum with the specified array of bytes.
update(byte[], int, int)
- Method in class java.util.zip.
CRC32
Updates the CRC-32 checksum with the specified array of bytes.
update(byte[], int, int)
- Method in class java.util.zip.
CRC32C
Updates the CRC-32C checksum with the specified array of bytes.
update(byte[], int, int)
- Method in class javax.crypto.
Cipher
Continues a multiple-part encryption or decryption operation
 (depending on how this
Cipher
object was initialized),
 processing another data part.
update(byte[], int, int)
- Method in class javax.crypto.
Mac
Processes the first
len
bytes in
input
,
 starting at
offset
inclusive.
update(byte[], int, int, byte[])
- Method in class javax.crypto.
Cipher
Continues a multiple-part encryption or decryption operation
 (depending on how this
Cipher
object was initialized),
 processing another data part.
update(byte[], int, int, byte[], int)
- Method in class javax.crypto.
Cipher
Continues a multiple-part encryption or decryption operation
 (depending on how this
Cipher
object was initialized),
 processing another data part.
update(int)
- Method in class java.util.zip.
Adler32
Updates the checksum with the specified byte (the low eight
 bits of the argument b).
update(int)
- Method in interface java.util.zip.
Checksum
Updates the current checksum with the specified byte.
update(int)
- Method in class java.util.zip.
CRC32
Updates the CRC-32 checksum with the specified byte (the low
 eight bits of the argument b).
update(int)
- Method in class java.util.zip.
CRC32C
Updates the CRC-32C checksum with the specified byte (the low eight bits
 of the argument b).
update(Graphics)
- Method in class java.awt.
Canvas
Updates this canvas.
update(Graphics)
- Method in class java.awt.
Component
Updates this component.
update(Graphics)
- Method in class java.awt.
Container
Updates the container.
update(Graphics)
- Method in class javax.swing.
CellRendererPane
Shouldn't be called.
update(Graphics)
- Method in class javax.swing.
JApplet
Deprecated.
Just calls
paint(g)
.
update(Graphics)
- Method in class javax.swing.
JComponent
Calls
paint
.
update(Graphics)
- Method in class javax.swing.
JDialog
Calls
paint(g)
.
update(Graphics)
- Method in class javax.swing.
JFrame
Just calls
paint(g)
.
update(Graphics)
- Method in class javax.swing.
JWindow
Calls
paint(g)
.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.basic.
BasicMenuItemUI
We draw the background in paintMenuItem()
 so override update (which fills the background of opaque
 components by default) to just call paint().
update(Graphics, JComponent)
- Method in class javax.swing.plaf.basic.
BasicTextUI
Superclass paints background in an uncontrollable way
 (i.e. one might want an image tiled into the background).
update(Graphics, JComponent)
- Method in class javax.swing.plaf.
ComponentUI
Notifies this UI delegate that it is time to paint the specified
 component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.metal.
MetalButtonUI
If necessary paints the background of the component, then
 invokes
paint
.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.metal.
MetalMenuBarUI
If necessary paints the background of the component, then
 invokes
paint
.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.metal.
MetalToggleButtonUI
If necessary paints the background of the component, then invokes
paint
.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.metal.
MetalToolBarUI
If necessary paints the background of the component, then invokes
paint
.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiButtonUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiColorChooserUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiComboBoxUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopIconUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiDesktopPaneUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiFileChooserUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiInternalFrameUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiLabelUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiListUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuBarUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiMenuItemUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiOptionPaneUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiPanelUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiPopupMenuUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiProgressBarUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiRootPaneUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollBarUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiScrollPaneUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiSeparatorUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiSliderUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiSpinnerUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiSplitPaneUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiTabbedPaneUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableHeaderUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiTableUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiTextUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolBarUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiToolTipUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiTreeUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.multi.
MultiViewportUI
Invokes the
update
method on each UI handled by this object.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthButtonUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthColorChooserUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthComboBoxUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthDesktopIconUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthDesktopPaneUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthEditorPaneUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthInternalFrameUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthLabelUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthListUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthMenuBarUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthMenuItemUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthMenuUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthOptionPaneUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthPanelUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthPopupMenuUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthProgressBarUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthRootPaneUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthScrollBarUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthScrollPaneUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthSeparatorUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthSliderUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthSpinnerUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthSplitPaneUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthTabbedPaneUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthTableHeaderUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthTableUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthTextAreaUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthTextFieldUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthToolBarUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthToolTipUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthTreeUI
Notifies this UI delegate to repaint the specified component.
update(Graphics, JComponent)
- Method in class javax.swing.plaf.synth.
SynthViewportUI
Notifies this UI delegate to repaint the specified component.
update(ByteBuffer)
- Method in class java.security.
MessageDigest
Update the digest using the specified ByteBuffer.
update(ByteBuffer)
- Method in class java.security.
Signature
Updates the data to be signed or verified using the specified
 ByteBuffer.
update(ByteBuffer)
- Method in class java.util.zip.
Adler32
Updates the checksum with the bytes from the specified buffer.
update(ByteBuffer)
- Method in interface java.util.zip.
Checksum
Updates the current checksum with the bytes from the specified buffer.
update(ByteBuffer)
- Method in class java.util.zip.
CRC32
Updates the CRC-32 checksum with the bytes from the specified buffer.
update(ByteBuffer)
- Method in class java.util.zip.
CRC32C
Updates the CRC-32C checksum with the bytes from the specified buffer.
update(ByteBuffer)
- Method in class javax.crypto.
Mac
Processes
input.remaining()
bytes in the ByteBuffer
input
, starting at
input.position()
.
update(ByteBuffer, ByteBuffer)
- Method in class javax.crypto.
Cipher
Continues a multiple-part encryption or decryption operation
 (depending on how this
Cipher
object was initialized),
 processing another data part.
update(Observable, Object)
- Method in interface java.util.
Observer
Deprecated.
This method is called whenever the observed object is changed.
update(LineEvent)
- Method in interface javax.sound.sampled.
LineListener
Informs the listener that a line's state has changed.
UPDATE
- Static variable in class java.awt.event.
PaintEvent
The update event type.
UPDATE
- Static variable in interface javax.accessibility.
AccessibleTableModelChange
Identifies a change to existing data.
UPDATE
- Static variable in class javax.swing.event.
TableModelEvent
Identifies a change to existing data.
UPDATE_ROW_CONFLICT
- Static variable in interface javax.sql.rowset.spi.
SyncResolver
Indicates that a conflict occurred while the
RowSet
object was
 attempting to update a row in the data source.
UPDATE_WHEN_ON_EDT
- Static variable in class javax.swing.text.
DefaultCaret
Indicates that the caret position is to be updated only when
 document changes are performed on the Event Dispatching Thread.
updateAAD(byte[])
- Method in class javax.crypto.
Cipher
Continues a multi-part update of the Additional Authentication
 Data (AAD).
updateAAD(byte[], int, int)
- Method in class javax.crypto.
Cipher
Continues a multi-part update of the Additional Authentication
 Data (AAD), using a subset of the provided buffer.
updateAAD(ByteBuffer)
- Method in class javax.crypto.
Cipher
Continues a multi-part update of the Additional Authentication
 Data (AAD).
UpdateAction()
- Constructor for class javax.swing.plaf.basic.
BasicFileChooserUI.UpdateAction
Constructs an
UpdateAction
.
updateAndGet(int, IntUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicIntegerArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function, returning the
 updated value.
updateAndGet(int, LongUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLongArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function, returning the
 updated value.
updateAndGet(int, UnaryOperator<E>)
- Method in class java.util.concurrent.atomic.
AtomicReferenceArray
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the element at index
i
with
 the results of applying the given function, returning the
 updated value.
updateAndGet(IntUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicInteger
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function, returning the updated value.
updateAndGet(LongUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLong
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function, returning the updated value.
updateAndGet(UnaryOperator<V>)
- Method in class java.util.concurrent.atomic.
AtomicReference
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the current value with the results of
 applying the given function, returning the updated value.
updateAndGet(T, IntUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicIntegerFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given
 function, returning the updated value.
updateAndGet(T, LongUnaryOperator)
- Method in class java.util.concurrent.atomic.
AtomicLongFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given
 function, returning the updated value.
updateAndGet(T, UnaryOperator<V>)
- Method in class java.util.concurrent.atomic.
AtomicReferenceFieldUpdater
Atomically updates (with memory effects as specified by
VarHandle.compareAndSet(java.lang.Object...)
) the field of the given object managed
 by this updater with the results of applying the given
 function, returning the updated value.
updateArray(int, Array)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Array
value.
updateArray(String, Array)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Array
value.
updateAsciiStream(int, InputStream)
- Method in interface java.sql.
ResultSet
Updates the designated column with an ascii stream value.
updateAsciiStream(int, InputStream, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with an ascii stream value, which will have
 the specified number of bytes.
updateAsciiStream(int, InputStream, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with an ascii stream value, which will have
 the specified number of bytes.
updateAsciiStream(String, InputStream)
- Method in interface java.sql.
ResultSet
Updates the designated column with an ascii stream value.
updateAsciiStream(String, InputStream, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with an ascii stream value, which will have
 the specified number of bytes.
updateAsciiStream(String, InputStream, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with an ascii stream value, which will have
 the specified number of bytes.
updateAutoscroll(Point)
- Method in class java.awt.dnd.
DropTarget
update autoscrolling with current cursor location
updateBigDecimal(int, BigDecimal)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.math.BigDecimal
value.
updateBigDecimal(String, BigDecimal)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.BigDecimal
value.
updateBinaryStream(int, InputStream)
- Method in interface java.sql.
ResultSet
Updates the designated column with a binary stream value.
updateBinaryStream(int, InputStream, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with a binary stream value, which will have
 the specified number of bytes.
updateBinaryStream(int, InputStream, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with a binary stream value, which will have
 the specified number of bytes.
updateBinaryStream(String, InputStream)
- Method in interface java.sql.
ResultSet
Updates the designated column with a binary stream value.
updateBinaryStream(String, InputStream, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with a binary stream value, which will have
 the specified number of bytes.
updateBinaryStream(String, InputStream, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with a binary stream value, which will have
 the specified number of bytes.
updateBlob(int, InputStream)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given input stream.
updateBlob(int, InputStream, long)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given input stream, which
 will have the specified number of bytes.
updateBlob(int, Blob)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Blob
value.
updateBlob(String, InputStream)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given input stream.
updateBlob(String, InputStream, long)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given input stream, which
 will have the specified number of bytes.
updateBlob(String, Blob)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Blob
value.
updateBoolean(int, boolean)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
boolean
value.
updateBoolean(String, boolean)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
boolean
value.
updateButtonMnemonic
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Update button mnemonic
updateButtonText
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Update button text
updateButtonToolTipText
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Update button tool tip text
updateByte(int, byte)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
byte
value.
updateByte(String, byte)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
byte
value.
updateBytes(int, byte[])
- Method in interface java.sql.
ResultSet
Updates the designated column with a
byte
array value.
updateBytes(String, byte[])
- Method in interface java.sql.
ResultSet
Updates the designated column with a byte array value.
updateCachedPreferredSize()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Updates the
preferredSize
instance variable,
 which is returned from
getPreferredSize()
.
updateCellEditor()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Updates the cellEditor based on the editability of the JTree that
 we're contained in.
updateCharacterStream(int, Reader)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value.
updateCharacterStream(int, Reader, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value, which will have
 the specified number of bytes.
updateCharacterStream(int, Reader, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value, which will have
 the specified number of bytes.
updateCharacterStream(String, Reader)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value.
updateCharacterStream(String, Reader, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value, which will have
 the specified number of bytes.
updateCharacterStream(String, Reader, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value, which will have
 the specified number of bytes.
updateChildren(DocumentEvent.ElementChange, DocumentEvent, ViewFactory)
- Method in class javax.swing.text.
View
Updates the child views in response to receiving notification
 that the model changed, and there is change record for the
 element this view is responsible for.
updateChildren(DocumentEvent.ElementChange, DocumentEvent, ViewFactory)
- Method in class javax.swing.text.
ZoneView
The superclass behavior will try to update the child views
 which is not desired in this case, since the children are
 zones and not directly effected by the changes to the
 associated element.
updateChooser()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Invoked automatically when the model's state changes.
updateClob(int, Reader)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given
Reader
object.
updateClob(int, Reader, long)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given
Reader
object, which is the given number of characters long.
updateClob(int, Clob)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Clob
value.
updateClob(String, Reader)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given
Reader
object.
updateClob(String, Reader, long)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given
Reader
object, which is the given number of characters long.
updateClob(String, Clob)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Clob
value.
updateColumnHeader(PropertyChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Updates column header.
updateComponents()
- Method in class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicHorizontalLayoutManager
Determines the components.
updateComponentTreeUI(Component)
- Static method in class javax.swing.
SwingUtilities
A simple minded look and feel change: ask each node in the tree
 to
updateUI()
-- that is, to initialize its UI property
 with the current look and feel.
updateConfiguration(InputStream, Function<String, BiFunction<String, String, String>>)
- Method in class java.util.logging.
LogManager
Updates the logging configuration.
updateConfiguration(Function<String, BiFunction<String, String, String>>)
- Method in class java.util.logging.
LogManager
Updates the logging configuration.
updateCurrentCursor(int, int, int)
- Method in class java.awt.dnd.
DragSourceContext
If the default drag cursor behavior is active, this method
 sets the default drag cursor for the specified actions
 supported by the drag source, the drop target action,
 and status, otherwise this method does nothing.
updateDamage(DocumentEvent, Shape, ViewFactory)
- Method in class javax.swing.text.
PlainView
Repaint the region of change covered by the given document
 event.
updateDate(int, Date)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Date
value.
updateDate(String, Date)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Date
value.
updateDepthOffset()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Updates how much each depth should be offset by.
updateDouble(int, double)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
double
value.
updateDouble(String, double)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
double
value.
updateExpandedDescendants(TreePath)
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Updates the expanded state of all the descendants of
path
by getting the expanded descendants from the tree and forwarding
 to the tree state.
updateFloat(int, float)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
float
value.
updateFloat(String, float)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
float
value.
updateInt(int, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
int
value.
updateInt(String, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
int
value.
updateLabelUIs()
- Method in class javax.swing.
JSlider
Updates the UIs for the labels in the label table by calling
updateUI
on each label.
updateLayout(DocumentEvent.ElementChange, DocumentEvent, Shape)
- Method in class javax.swing.text.
AsyncBoxView
Update the layout in response to receiving notification of
 change from the model.
updateLayout(DocumentEvent.ElementChange, DocumentEvent, Shape)
- Method in class javax.swing.text.
View
Updates the layout in response to receiving notification of
 change from the model.
updateLayoutCacheExpandedNodes()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Makes all the nodes that are expanded in JTree expanded in LayoutCache.
updateLayoutState()
- Method in class javax.swing.plaf.basic.
BasicListUI
Recompute the value of cellHeight or cellHeights based
 and cellWidth, based on the current font and the current
 values of fixedCellWidth, fixedCellHeight, and prototypeCellValue.
updateLayoutStateNeeded
- Variable in class javax.swing.plaf.basic.
BasicListUI
The value represents changes to
JList
model.
updateLeadIndex()
- Method in class javax.swing.tree.
DefaultTreeSelectionModel
Updates the leadIndex instance variable.
updateLeadSelectionRow()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Updates the lead row of the selection.
updateLevel
- Variable in class javax.swing.undo.
UndoableEditSupport
The update level.
updateListBoxSelectionForEvent(MouseEvent, boolean)
- Method in class javax.swing.plaf.basic.
BasicComboPopup
A utility method used by the event listeners.
updateListeners
- Variable in class javax.imageio.
ImageReader
A
List
of currently registered
IIOReadUpdateListener
s, initialized by default to
null
, which is synonymous with an empty
List
.
updateLocation(Point)
- Method in class java.awt.dnd.
DropTarget.DropTargetAutoScroller
cause autoscroll to occur
updateLong(int, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
long
value.
updateLong(String, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
long
value.
updateMetrics()
- Method in class javax.swing.text.
PlainView
Checks to see if the font metrics and longest line
 are up-to-date.
updateNCharacterStream(int, Reader)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value.
updateNCharacterStream(int, Reader, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value, which will have
 the specified number of bytes.
updateNCharacterStream(String, Reader)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value.
updateNCharacterStream(String, Reader, long)
- Method in interface java.sql.
ResultSet
Updates the designated column with a character stream value, which will have
 the specified number of bytes.
updateNClob(int, Reader)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given
Reader
The data will be read from the stream
 as needed until end-of-stream is reached.
updateNClob(int, Reader, long)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given
Reader
object, which is the given number of characters long.
updateNClob(int, NClob)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.NClob
value.
updateNClob(String, Reader)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given
Reader
object.
updateNClob(String, Reader, long)
- Method in interface java.sql.
ResultSet
Updates the designated column using the given
Reader
object, which is the given number of characters long.
updateNClob(String, NClob)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.NClob
value.
updateNString(int, String)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
String
value.
updateNString(String, String)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
String
value.
updateNull(int)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
null
value.
updateNull(String)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
null
value.
updateObject(int, Object)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
Object
value.
updateObject(int, Object, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
Object
value.
updateObject(int, Object, SQLType)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
Object
value.
updateObject(int, Object, SQLType, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
Object
value.
updateObject(String, Object)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
Object
value.
updateObject(String, Object, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
Object
value.
updateObject(String, Object, SQLType)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
Object
value.
updateObject(String, Object, SQLType, int)
- Method in interface java.sql.
ResultSet
Updates the designated column with an
Object
value.
updateRef(int, Ref)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Ref
value.
updateRef(String, Ref)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Ref
value.
updateRenderer()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Messaged from the tree we're in when the renderer has changed.
updateRenderer(JComponent, String)
- Static method in class javax.swing.plaf.basic.
BasicHTML
Stash the HTML render for the given text into the client
 properties of the given JComponent.
updateRoleMap(String, Role, List<ObjectName>)
- Method in class javax.management.relation.
RelationService
Handles update of the Relation Service role map for the update of given
 role in given relation.
updateRoleMap(String, Role, List<ObjectName>)
- Method in interface javax.management.relation.
RelationServiceMBean
Handles update of the Relation Service role map for the update of given
 role in given relation.
updateRow()
- Method in interface java.sql.
ResultSet
Updates the underlying database with the new contents of the
 current row of this
ResultSet
object.
updateRowHeader(PropertyChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Updates row header.
updateRowId(int, RowId)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
RowId
value.
updateRowId(String, RowId)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
RowId
value.
updatesAreDetected(int)
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether or not a visible row update can be detected by
 calling the method
ResultSet.rowUpdated
.
updateScrollBarDisplayPolicy(PropertyChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Updates a scroll bar display policy.
updateShort(int, short)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
short
value.
updateShort(String, short)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
short
value.
updateSize()
- Method in class javax.swing.plaf.basic.
BasicTreeUI
Marks the cached size as being invalid, and messages the
 tree with
treeDidChange
.
updateSQLXML(int, SQLXML)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.SQLXML
value.
updateSQLXML(String, SQLXML)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.SQLXML
value.
updateString(int, String)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
String
value.
updateString(String, String)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
String
value.
updateStyles(Component)
- Static method in class javax.swing.plaf.synth.
SynthLookAndFeel
Updates the style associated with
c
, and all its children.
updateTableInRealTime
- Variable in class javax.swing.table.
JTableHeader
Obsolete as of Java 2 platform v1.3.
updateTime(int, Time)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Time
value.
updateTime(String, Time)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Time
value.
updateTimestamp(int, Timestamp)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Timestamp
value.
updateTimestamp(String, Timestamp)
- Method in interface java.sql.
ResultSet
Updates the designated column with a
java.sql.Timestamp
value.
updateUI()
- Method in class javax.swing.
AbstractButton
Resets the UI property to a value from the current look
 and feel.
updateUI()
- Method in class javax.swing.
JButton
Resets the UI property to a value from the current look and
 feel.
updateUI()
- Method in class javax.swing.
JCheckBox
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JColorChooser
Notification from the
UIManager
that the L&F has changed.
updateUI()
- Method in class javax.swing.
JComboBox
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JComponent
This method is called to update the UI property to a value from the
 current look and feel.
updateUI()
- Method in class javax.swing.
JDesktopPane
Notification from the
UIManager
that the L&F has changed.
updateUI()
- Method in class javax.swing.
JFileChooser
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JInternalFrame.JDesktopIcon
Notification from the
UIManager
that the look and feel
 has changed.
updateUI()
- Method in class javax.swing.
JInternalFrame
Notification from the
UIManager
that the look and feel
 has changed.
updateUI()
- Method in class javax.swing.
JLabel
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JLayer
Delegates its functionality to the
LayerUI.updateUI(JLayer)
method,
 if
LayerUI
is set.
updateUI()
- Method in class javax.swing.
JList
Resets the
ListUI
property by setting it to the value provided
 by the current look and feel.
updateUI()
- Method in class javax.swing.
JMenu
Resets the UI property with a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JMenuBar
Resets the UI property with a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JMenuItem
Resets the UI property with a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JOptionPane
Notification from the
UIManager
that the L&F has changed.
updateUI()
- Method in class javax.swing.
JPanel
Resets the UI property with a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JPasswordField
Reloads the pluggable UI.
updateUI()
- Method in class javax.swing.
JPopupMenu
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JProgressBar
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JRadioButton
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JRootPane
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JScrollBar
Overrides
JComponent.updateUI
.
updateUI()
- Method in class javax.swing.
JScrollPane
Replaces the current
ScrollPaneUI
object with a version
 from the current default look and feel.
updateUI()
- Method in class javax.swing.
JSeparator
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JSlider
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JSpinner
Resets the UI property with the value from the current look and feel.
updateUI()
- Method in class javax.swing.
JSplitPane
Notification from the
UIManager
that the L&F has changed.
updateUI()
- Method in class javax.swing.
JTabbedPane
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JTable
Notification from the
UIManager
that the L&F has changed.
updateUI()
- Method in class javax.swing.
JToggleButton
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JToolBar
Notification from the
UIFactory
that the L&F has changed.
updateUI()
- Method in class javax.swing.
JToolTip
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.
JTree
Notification from the
UIManager
that the L&F has changed.
updateUI()
- Method in class javax.swing.
JViewport
Resets the UI property to a value from the current look and feel.
updateUI()
- Method in class javax.swing.table.
DefaultTableCellRenderer
Notification from the
UIManager
that the look and feel
 [L&F] has changed.
updateUI()
- Method in class javax.swing.table.
JTableHeader
Notification from the
UIManager
that the look and feel
 (L&F) has changed.
updateUI()
- Method in class javax.swing.text.
JTextComponent
Reloads the pluggable UI.
updateUI()
- Method in class javax.swing.tree.
DefaultTreeCellRenderer
Resets the UI property to a value from the current look and feel.
updateUI(JLayer<? extends V>)
- Method in class javax.swing.plaf.
LayerUI
Invoked when
JLayer.updateUI()
is called
 by the
JLayer
this
LayerUI
is set to.
updateUndoPositions(Vector)
- Method in class javax.swing.text.
StringContent
Resets the location for all the UndoPosRef instances
 in
positions
.
updateUndoPositions(Vector, int, int)
- Method in class javax.swing.text.
GapContent
Resets the location for all the UndoPosRef instances
 in
positions
.
updateViewport(PropertyChangeEvent)
- Method in class javax.swing.plaf.basic.
BasicScrollPaneUI
Updates viewport.
upFocusCycle()
- Method in class java.awt.
KeyboardFocusManager
Moves the focus up one focus traversal cycle from the current focus
 owner.
upFocusCycle(Component)
- Method in class java.awt.
DefaultKeyboardFocusManager
Moves the focus up one focus traversal cycle.
upFocusCycle(Component)
- Method in class java.awt.
KeyboardFocusManager
Moves the focus up one focus traversal cycle.
upFolderIcon
- Variable in class javax.swing.plaf.basic.
BasicFileChooserUI
Up folder icon
UPGRADE_MODULE_PATH
- Enum constant in enum class javax.tools.
StandardLocation
Location to search for upgradeable system modules.
upKey
- Variable in class javax.swing.plaf.basic.
BasicSplitPaneUI
Deprecated.
As of Java 2 platform v1.3.
upKey
- Variable in class javax.swing.plaf.basic.
BasicTabbedPaneUI
Deprecated.
As of Java 2 platform v1.3.
upKey
- Variable in class javax.swing.plaf.basic.
BasicToolBarUI
Deprecated.
As of Java 2 platform v1.3.
UPPER_LEADING_CORNER
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies the upper leading edge corner of the viewport.
UPPER_LEFT_CORNER
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies the upper left corner of the viewport.
UPPER_RIGHT_CORNER
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies the upper right corner of the viewport.
UPPER_TRAILING_CORNER
- Static variable in interface javax.swing.
ScrollPaneConstants
Identifies the upper trailing edge corner of the viewport.
UPPERCASE
- Static variable in class java.util.
FormattableFlags
Converts the output to upper case according to the rules of the
locale
given during creation of the
formatter
argument of the
formatTo()
method.
UPPERCASE_LETTER
- Static variable in class java.lang.
Character
General category "Lu" in the Unicode specification.
upperLeft
- Variable in class javax.swing.
JScrollPane
The component to display in the upper left corner.
upperLeft
- Variable in class javax.swing.
ScrollPaneLayout
The component to display in the upper left corner.
upperRight
- Variable in class javax.swing.
JScrollPane
The component to display in the upper right corner.
upperRight
- Variable in class javax.swing.
ScrollPaneLayout
The component to display in the upper right corner.
uri
- Variable in class javax.tools.
SimpleJavaFileObject
A URI for this file object.
uri()
- Method in class java.net.http.
HttpRequest
Returns this request's
URI
.
uri()
- Method in interface java.net.http.
HttpResponse
Returns the
URI
that the response was received from.
uri(URI)
- Method in interface java.net.http.
HttpRequest.Builder
Sets this
HttpRequest
's request
URI
.
URI
- Class in
java.net
Represents a Uniform Resource Identifier (URI) reference.
URI(String)
- Constructor for class java.net.
URI
Constructs a URI by parsing the given string.
URI(String, String, String)
- Constructor for class java.net.
URI
Constructs a URI from the given components.
URI(String, String, String, int, String, String, String)
- Constructor for class java.net.
URI
Constructs a hierarchical URI from the given components.
URI(String, String, String, String)
- Constructor for class java.net.
URI
Constructs a hierarchical URI from the given components.
URI(String, String, String, String, String)
- Constructor for class java.net.
URI
Constructs a hierarchical URI from the given components.
URICertStoreParameters
- Class in
java.security.cert
Parameters used as input for
CertStore
algorithms which use
 information contained in a URI to retrieve certificates and CRLs.
URICertStoreParameters(URI)
- Constructor for class java.security.cert.
URICertStoreParameters
Creates an instance of
URICertStoreParameters
with the
 specified URI.
URIDereferencer
- Interface in
javax.xml.crypto
A dereferencer of
URIReference
s.
URIException
- Interface in
javax.print
Interface
URIException
is a mixin interface which a subclass of
PrintException
can implement to report an error
 condition involving a
URI
address.
URIInaccessible
- Static variable in interface javax.print.
URIException
Indicates that the printer cannot access the
URI
address.
URIOtherProblem
- Static variable in interface javax.print.
URIException
Indicates any kind of problem not specifically identified by the other
 reasons.
URIParameter
- Class in
java.security
A parameter that contains a URI pointing to data intended for a
 PolicySpi or ConfigurationSpi implementation.
URIParameter(URI)
- Constructor for class java.security.
URIParameter
Constructs a
URIParameter
with the URI pointing to
 data intended for an SPI implementation.
URIReference
- Interface in
javax.xml.crypto
Identifies a data object via a URI-Reference, as specified by
RFC 2396
.
URIReferenceException
- Exception Class in
javax.xml.crypto
Indicates an exceptional condition thrown while dereferencing a
URIReference
.
URIReferenceException()
- Constructor for exception class javax.xml.crypto.
URIReferenceException
Constructs a new
URIReferenceException
with
null
as its detail message.
URIReferenceException(String)
- Constructor for exception class javax.xml.crypto.
URIReferenceException
Constructs a new
URIReferenceException
with the specified
 detail message.
URIReferenceException(String, Throwable)
- Constructor for exception class javax.xml.crypto.
URIReferenceException
Constructs a new
URIReferenceException
with the
 specified detail message and cause.
URIReferenceException(String, Throwable, URIReference)
- Constructor for exception class javax.xml.crypto.
URIReferenceException
Constructs a new
URIReferenceException
with the
 specified detail message, cause and
URIReference
.
URIReferenceException(Throwable)
- Constructor for exception class javax.xml.crypto.
URIReferenceException
Constructs a new
URIReferenceException
with the specified
 cause and a detail message of
(cause==null ? null :
 cause.toString())
(which typically contains the class and detail
 message of
cause
).
URIResolver
- Interface in
javax.xml.transform
An object that implements this interface that can be called by the processor
 to turn a URI used in document(), xsl:import, or xsl:include into a Source object.
URIs, URLs, and URNs
- Search tag in class java.net.URI
Section
URISchemeNotSupported
- Static variable in interface javax.print.
URIException
Indicates that the printer does not support the
URI
scheme
 ("http", "ftp", etc.) in the
URI
address.
URI Scheme Used to Identify the Zip File System
- Search tag in module jdk.zipfs
Section
URISyntax
- Class in
javax.print.attribute
Class
URISyntax
is an abstract base class providing the common
 implementation of all attributes whose value is a Uniform Resource Identifier
 (URI).
URISyntax(URI)
- Constructor for class javax.print.attribute.
URISyntax
Constructs a
URI
attribute with the specified
URI
.
URI syntax and components
- Search tag in class java.net.URI
Section
URISyntaxException
- Exception Class in
java.net
Checked exception thrown to indicate that a string could not be parsed as a
 URI reference.
URISyntaxException(String, String)
- Constructor for exception class java.net.
URISyntaxException
Constructs an instance from the given input string and reason.
URISyntaxException(String, String, int)
- Constructor for exception class java.net.
URISyntaxException
Constructs an instance from the given input string, reason, and error
 index.
url
- Variable in class java.net.
URLConnection
The URL represents the remote object on the World Wide Web to
 which this connection is opened.
URL
- Class in
java.net
Class
URL
represents a Uniform Resource
 Locator, a pointer to a "resource" on the World
 Wide Web.
URL(String)
- Constructor for class java.net.
URL
Deprecated.
Use
URI.toURL()
to construct an instance of URL. See the note on
constructor deprecation
for more
 details.
URL(String)
- Constructor for class javax.print.
DocFlavor.URL
Constructs a new doc flavor with the given MIME type and a print data
 representation class name of
"java.net.URL"
.
URL(String, String, int, String)
- Constructor for class java.net.
URL
Deprecated.
Use
URI.toURL()
to construct an instance of URL. See the note on
constructor deprecation
for more
 details.
URL(String, String, int, String, URLStreamHandler)
- Constructor for class java.net.
URL
Deprecated.
Use
URL.of(URI, URLStreamHandler)
to construct an instance of URL
 associated with a custom protocol handler.
 See the note on
constructor deprecation
for more details.
URL(String, String, String)
- Constructor for class java.net.
URL
Deprecated.
Use
URI.toURL()
to construct an instance of URL. See the note on
constructor deprecation
for more
 details.
URL(URL, String)
- Constructor for class java.net.
URL
Deprecated.
Use
URI.toURL()
to construct an instance of URL. See the note on
constructor deprecation
for more
 details.
URL(URL, String, URLStreamHandler)
- Constructor for class java.net.
URL
Deprecated.
Use
URL.of(URI, URLStreamHandler)
to construct an instance of URL
 associated with a custom protocol handler.
 See the note on
constructor deprecation
for more details.
URL_PKG_PREFIXES
- Static variable in interface javax.naming.
Context
Constant that holds the name of the environment property
 for specifying the list of package prefixes to use when
 loading in URL context factories.
URLClassLoader
- Class in
java.net
This class loader is used to load classes and resources from a search
 path of URLs referring to both JAR files and directories.
URLClassLoader(String, URL[], ClassLoader)
- Constructor for class java.net.
URLClassLoader
Constructs a new named
URLClassLoader
for the specified URLs.
URLClassLoader(String, URL[], ClassLoader, URLStreamHandlerFactory)
- Constructor for class java.net.
URLClassLoader
Constructs a new named
URLClassLoader
for the specified URLs,
 parent class loader, and URLStreamHandlerFactory.
URLClassLoader(URL[])
- Constructor for class java.net.
URLClassLoader
Constructs a new URLClassLoader for the specified URLs using the
 default delegation parent
ClassLoader
.
URLClassLoader(URL[], ClassLoader)
- Constructor for class java.net.
URLClassLoader
Constructs a new URLClassLoader for the given URLs.
URLClassLoader(URL[], ClassLoader, URLStreamHandlerFactory)
- Constructor for class java.net.
URLClassLoader
Constructs a new URLClassLoader for the specified URLs, parent
 class loader, and URLStreamHandlerFactory.
URLConnection
- Class in
java.net
The abstract class
URLConnection
is the superclass
 of all classes that represent a communications link between the
 application and a URL.
URLConnection(URL)
- Constructor for class java.net.
URLConnection
Constructs a URL connection to the specified URL.
URLDecoder
- Class in
java.net
Utility class for HTML form decoding.
URLEncoder
- Class in
java.net
Utility class for HTML form encoding.
URLPermission
- Class in
java.net
Represents permission to access a resource or set of resources defined by a
 given url, and for a given set of user-settable request methods
 and request headers.
URLPermission(String)
- Constructor for class java.net.
URLPermission
Creates a URLPermission with the given url string and unrestricted
 methods and request headers by invoking the two argument
 constructor as follows: URLPermission(url, "*:*")
URLPermission(String, String)
- Constructor for class java.net.
URLPermission
Creates a new URLPermission from a url string and which permits the given
 request methods and user-settable request headers.
URLStreamHandler
- Class in
java.net
The abstract class
URLStreamHandler
is the common
 superclass for all stream protocol handlers.
URLStreamHandler()
- Constructor for class java.net.
URLStreamHandler
Constructor for subclasses to call.
URLStreamHandlerFactory
- Interface in
java.net
This interface defines a factory for
URL
stream
 protocol handlers.
URLStreamHandlerProvider
- Class in
java.net.spi
URL stream handler service-provider class.
URLStreamHandlerProvider()
- Constructor for class java.net.spi.
URLStreamHandlerProvider
Initializes a new URL stream handler provider.
US
- Static variable in class java.util.
Locale
Useful constant for country.
US_ASCII
- Static variable in class java.nio.charset.
StandardCharsets
Seven-bit ASCII, also known as ISO646-US, also known as the
 Basic Latin block of the Unicode character set.
Usage
- Search tag in class java.util.concurrent.locks.AbstractQueuedSynchronizer
Section
Usage
- Search tag in package javax.security.sasl
Section
USAGE_UNKNOWN
- Enum constant in enum class java.sql.
PseudoColumnUsage
The usage of the pseudo/hidden column cannot be determined.
Usage Details About Controls
- Search tag in interface javax.naming.ldap.LdapContext
Section
Usage Example
- Search tag in interface java.util.concurrent.ScheduledExecutorService
Section
Usage examples
- Search tag in class java.lang.invoke.MethodHandle
Section
Usage Examples
- Search tag in class java.util.concurrent.locks.AbstractQueuedSynchronizer
Section
Usage Examples
- Search tag in interface java.util.concurrent.ExecutorService
Section
Usage Information
- Search tag in class java.text.MessageFormat
Section
USE_ALL_BEANINFO
- Static variable in class java.beans.
Introspector
Flag to indicate to use of all beaninfo.
USE_CATALOG
- Static variable in class javax.xml.
XMLConstants
Feature: useCatalog
USE_SELECTION
- Enum constant in enum class javax.swing.
DropMode
A component's own internal selection mechanism (or caret for text
 components) should be used to track the drop location.
USE_STD3_ASCII_RULES
- Static variable in class java.net.
IDN
Flag to turn on the check against STD-3 ASCII rules
useAnchoringBounds(boolean)
- Method in class java.util.regex.
Matcher
Sets the anchoring of region bounds for this matcher.
useCaches
- Variable in class java.net.
URLConnection
If
true
, the protocol is allowed to use caching
 whenever it can.
useDaylightTime()
- Method in class java.util.
SimpleTimeZone
Queries if this time zone uses daylight saving time.
useDaylightTime()
- Method in class java.util.
TimeZone
Queries if this
TimeZone
uses Daylight Saving Time.
useDelimiter(String)
- Method in class java.util.
Scanner
Sets this scanner's delimiting pattern to a pattern constructed from
 the specified
String
.
useDelimiter(Pattern)
- Method in class java.util.
Scanner
Sets this scanner's delimiting pattern to the specified pattern.
useLocale(Locale)
- Method in class java.util.
Scanner
Sets this scanner's locale to the specified locale.
USEMAP
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "usemap"
Use of Locale
- Search tag in class java.util.Locale
Section
usePattern(Pattern)
- Method in class java.util.regex.
Matcher
Changes the
Pattern
that this
Matcher
uses to
 find matches with.
useProtocolVersion(int)
- Method in class java.io.
ObjectOutputStream
Specify stream protocol version to use when writing the stream.
user()
- Method in interface java.lang.
ProcessHandle.Info
Return the user of the process.
user()
- Method in record class jdk.net.
UnixDomainPrincipal
Returns the value of the
user
record component.
user(String)
- Method in interface java.sql.
ConnectionBuilder
Specifies the username to be used when creating a connection
user(String)
- Method in interface javax.sql.
PooledConnectionBuilder
Specifies the username to be used when creating a connection
user(String)
- Method in interface javax.sql.
XAConnectionBuilder
Specifies the username to be used when creating a connection
USER_ATTENTION
- Enum constant in enum class java.awt.
Taskbar.Feature
Represents a user attention request feature.
USER_ATTENTION_WINDOW
- Enum constant in enum class java.awt.
Taskbar.Feature
Represents a user attention request feature for a specified window.
USER_PROVIDER
- Variable in class com.sun.security.auth.module.
JndiLoginModule
Directory service/path where this module can access the relevant
 user information.
user.dir
- Search tag in java.lang.System.getProperties()
System Property
user.home
- Search tag in java.lang.System.getProperties()
System Property
user.name
- Search tag in java.lang.System.getProperties()
System Property
user.timezone
- Search tag in java.util.TimeZone.getDefault()
System Property
useRadix(int)
- Method in class java.util.
Scanner
Sets this scanner's default radix to the specified radix.
UserDataHandler
- Interface in
org.w3c.dom
When associating an object to a key on a node using
Node.setUserData()
the application can provide a handler
 that gets called when the node the object is associated to is being
 cloned, imported, or renamed.
User-defined Configuration File
- Search tag in module java.xml
Section
UserDefinedFileAttributeView
- Interface in
java.nio.file.attribute
A file attribute view that provides a view of a file's user-defined
 attributes, sometimes known as
extended attributes
.
User-Defined Taglets
- Search tag in class jdk.javadoc.doclet.StandardDoclet
Section
userErr()
- Method in interface jdk.jshell.spi.
ExecutionEnv
Returns the user's error stream.
UserException(String, String, StackTraceElement[])
- Constructor for exception class jdk.jshell.spi.
ExecutionControl.UserException
userIn()
- Method in interface jdk.jshell.spi.
ExecutionEnv
Returns the user's input stream.
username
- Variable in class com.sun.security.auth.module.
UnixSystem
The current username.
userNodeForPackage(Class<?>)
- Static method in class java.util.prefs.
Preferences
Returns the preference node from the calling user's preference tree
 that is associated (by convention) with the specified class's package.
userObject
- Variable in class javax.swing.tree.
DefaultMutableTreeNode
optional user object
userOut()
- Method in interface jdk.jshell.spi.
ExecutionEnv
Returns the user's output stream.
UserPrincipal
- Class in
com.sun.security.auth
A user principal identified by a username or account name.
UserPrincipal
- Interface in
java.nio.file.attribute
A
Principal
representing an identity used to determine access rights
 to objects in a file system.
UserPrincipal(String)
- Constructor for class com.sun.security.auth.
UserPrincipal
Creates a principal.
UserPrincipalLookupService
- Class in
java.nio.file.attribute
An object to lookup user and group principals by name.
UserPrincipalLookupService()
- Constructor for class java.nio.file.attribute.
UserPrincipalLookupService
Initializes a new instance of this class.
UserPrincipalNotFoundException
- Exception Class in
java.nio.file.attribute
Checked exception thrown when a lookup of
UserPrincipal
fails because
 the principal does not exist.
UserPrincipalNotFoundException(String)
- Constructor for exception class java.nio.file.attribute.
UserPrincipalNotFoundException
Constructs an instance of this class.
userRoot()
- Static method in class java.util.prefs.
Preferences
Returns the root preference node for the calling user.
userRoot()
- Method in interface java.util.prefs.
PreferencesFactory
Returns the user root preference node corresponding to the calling
 user.
userSessionActivated(UserSessionEvent)
- Method in interface java.awt.desktop.
UserSessionListener
Called when the user session has been switched to.
userSessionDeactivated(UserSessionEvent)
- Method in interface java.awt.desktop.
UserSessionListener
Called when the user session has been switched away.
UserSessionEvent
- Class in
java.awt.desktop
Event sent when the user session has been changed.
UserSessionEvent(UserSessionEvent.Reason)
- Constructor for class java.awt.desktop.
UserSessionEvent
Constructs a
UserSessionEvent
.
UserSessionEvent.Reason
- Enum Class in
java.awt.desktop
Kinds of available reasons of user session change.
UserSessionListener
- Interface in
java.awt.desktop
Implementors receive notification when the user session changes.
uses()
- Method in class java.lang.module.
ModuleDescriptor
Returns the set of service dependences.
uses(String)
- Method in class java.lang.module.
ModuleDescriptor.Builder
Adds a service dependence.
USES
- Enum constant in enum class com.sun.source.doctree.
DocTree.Kind
Used for instances of
UsesTree
representing an
@uses
tag.
USES
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
UsesTree
representing
 uses directives in a module declaration.
USES
- Enum constant in enum class javax.lang.model.element.
ModuleElement.DirectiveKind
A "uses service-name" directive.
usesFractionalMetrics()
- Method in class java.awt.font.
FontRenderContext
Returns a boolean which whether text fractional metrics mode
 is used in this
FontRenderContext
.
usesIn(Iterable<? extends ModuleElement.Directive>)
- Static method in class javax.lang.model.util.
ElementFilter
Returns a list of
uses
directives in
directives
.
usesLocalFilePerTable()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database uses a file for each table.
usesLocalFiles()
- Method in interface java.sql.
DatabaseMetaData
Retrieves whether this database stores tables in a local file.
usesShiftModifier()
- Method in class java.awt.
MenuShortcut
Returns whether this MenuShortcut must be invoked using the SHIFT key.
UsesTree
- Interface in
com.sun.source.doctree
A tree node for an
@uses
block tag.
UsesTree
- Interface in
com.sun.source.tree
A tree node for a 'uses' directive in a module declaration.
Use the installUI method to perform all initialization, and the uninstallUI method to perform all cleanup.
- Search tag in package javax.swing.plaf.multi
Section
useToString(int)
- Method in class javax.swing.
DefaultRowSorter
Returns whether or not to convert the value to a string before
 doing comparisons when sorting.
useToString(int)
- Method in class javax.swing.table.
TableRowSorter
Returns whether or not to convert the value to a string before
 doing comparisons when sorting.
useTransparentBounds(boolean)
- Method in class java.util.regex.
Matcher
Sets the transparency of region bounds for this matcher.
Using a DataSource Object to Make a Connection
- Search tag in package javax.sql
Section
Using Attributes
- Search tag in package javax.print.attribute
Section
Using LocalDate instead
- Search tag in interface java.time.chrono.ChronoLocalDate
Section
usingProxy()
- Method in class java.net.
HttpURLConnection
Indicates if the connection is going through a proxy.
Using the API
- Search tag in package javax.print
Section
Using the Filter Factory
- Search tag in interface java.io.ObjectInputFilter
Section
Using the Multiplexing Look and Feel
- Search tag in package javax.swing.plaf.multi
Section
Using the Random Number Generator Interfaces
- Search tag in package java.util.random
Section
UTC
- Enum constant in enum class java.time.zone.
ZoneOffsetTransitionRule.TimeDefinition
The local date-time is expressed in terms of the UTC offset.
UTC
- Static variable in class java.time.
ZoneOffset
The time-zone offset for UTC, with an ID of 'Z'.
UTC(int, int, int, int, int, int)
- Static method in class java.util.
Date
Deprecated.
As of JDK version 1.1,
 replaced by
Calendar.set(year + 1900, month, date, hrs, min, sec)
or
GregorianCalendar(year + 1900, month, date, hrs, min, sec)
, using a UTC
TimeZone
, followed by
Calendar.getTime().getTime()
.
UTC_TIME
- Static variable in class java.util.
SimpleTimeZone
Constant for a mode of start or end time specified as UTC.
UTF_16
- Static variable in class java.nio.charset.
StandardCharsets
Sixteen-bit UCS Transformation Format, byte order identified by an
 optional byte-order mark.
UTF_16BE
- Static variable in class java.nio.charset.
StandardCharsets
Sixteen-bit UCS Transformation Format, big-endian byte order.
UTF_16LE
- Static variable in class java.nio.charset.
StandardCharsets
Sixteen-bit UCS Transformation Format, little-endian byte order.
UTF_8
- Static variable in class java.nio.charset.
StandardCharsets
Eight-bit UCS Transformation Format.
UTFDataFormatException
- Exception Class in
java.io
Signals that a malformed string in
modified UTF-8
format has been read in a data
 input stream or by any class that implements the data input
 interface.
UTFDataFormatException()
- Constructor for exception class java.io.
UTFDataFormatException
Constructs a
UTFDataFormatException
with
null
as its error detail message.
UTFDataFormatException(String)
- Constructor for exception class java.io.
UTFDataFormatException
Constructs a
UTFDataFormatException
with the
 specified detail message.
Util
- Class in
jdk.jshell.execution
Miscellaneous utility methods for setting-up implementations of
ExecutionControl
.
Utilities
- Class in
javax.swing.text
A collection of methods to deal with various text
 related activities.
Utilities()
- Constructor for class javax.swing.text.
Utilities
Constructs a
Utilities
.
UTILITY
- Enum constant in enum class java.awt.
Window.Type
Represents a
utility
window.
UUID
- Class in
java.util
A class that represents an immutable universally unique identifier (UUID).
UUID(long, long)
- Constructor for class java.util.
UUID
Constructs a new
UUID
using the specified data.
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.