B-Index (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Index
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
B
1.0 Background
- Search tag in interface javax.sql.rowset.FilteredRowSet
Section
1.0 Background
- Search tag in interface javax.sql.rowset.Joinable
Section
1.0 Background
- Search tag in interface javax.sql.rowset.Predicate
Section
5.0 Behavior of Rows Outside the Filter
- Search tag in interface javax.sql.rowset.FilteredRowSet
Section
b
- Variable in class java.awt.
AWTEventMulticaster
A variable in the event chain (listener-b)
B
- Static variable in class java.awt.
PageAttributes.MediaType
The MediaType instance for Engineering B, 11 x 17 in.
B
- Static variable in class javax.print.attribute.standard.
MediaSize.Engineering
Specifies the engineering B size, 11 inch by 17 inch.
B
- Static variable in class javax.print.attribute.standard.
MediaSizeName
B size.
B
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <b>
B0
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B0.
B0
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B0 size, 1000 mm by 1414 mm.
B0
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B0 size, 1030 mm by 1456 mm.
B1
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B1.
B1
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B1 size, 707 mm by 1000 mm.
B1
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B1 size, 728 mm by 1030 mm.
B10
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B10.
B10
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B10 size, 31 mm by 44 mm.
B10
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B10 size, 32 mm by 45 mm.
B2
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B2.
B2
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B2 size, 500 mm by 707 mm.
B2
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B2 size, 515 mm by 728 mm.
B2D
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
byteVal
to
(double)byteVal
.
B2F
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
byteVal
to
(float)byteVal
.
B2I
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
byteVal
to
(int)byteVal
.
B2L
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
byteVal
to
(long)byteVal
.
B2S
- Static variable in class jdk.incubator.vector.
VectorOperators
Convert
byteVal
to
(short)byteVal
.
B3
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B3.
B3
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B3 size, 353 mm by 500 mm.
B3
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B3 size, 364 mm by 515 mm.
B4
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B4.
B4
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B4 size, 250 mm by 353 mm.
B4
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B4 size, 257 mm by 364 mm.
B5
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B5.
B5
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B5 size, 176 mm by 250 mm.
B5
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B5 size, 182 mm by 257 mm.
B6
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B6.
B6
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B6 size, 125 mm by 176 mm.
B6
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B6 size, 128 mm by 182 mm.
B7
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B7.
B7
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B7 size, 88 mm by 125 mm.
B7
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B7 size, 91 mm by 128 mm.
B8
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B8.
B8
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B8 size, 62 mm by 88 mm.
B8
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B8 size, 64 mm by 91 mm.
B9
- Static variable in class java.awt.
PageAttributes.MediaType
An alias for ISO_B9.
B9
- Static variable in class javax.print.attribute.standard.
MediaSize.ISO
Specifies the ISO B9 size, 44 mm by 62 mm.
B9
- Static variable in class javax.print.attribute.standard.
MediaSize.JIS
Specifies the JIS B9 size, 45 mm by 64 mm.
BACK_SPACE
- Static variable in class java.awt.
Event
Deprecated.
The BackSpace key.
backBuffers
- Variable in class java.awt.
Component.BltBufferStrategy
The back buffers
Background
- Static variable in class javax.swing.text.
StyleConstants
Name of the background color attribute.
BACKGROUND
- Static variable in class java.awt.
BufferCapabilities.FlipContents
When flip contents are
BACKGROUND
, the
 contents of the back buffer are cleared with the background color after
 flipping.
BACKGROUND
- Static variable in class java.awt.font.
TextAttribute
Attribute key for the paint used to render the background of
 the text.
BACKGROUND
- Static variable in class javax.swing.plaf.synth.
ColorType
ColorType for the background of a region.
BACKGROUND
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "background".
BACKGROUND
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "background"
BACKGROUND_ATTACHMENT
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "background-attachment".
BACKGROUND_COLOR
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "background-color".
BACKGROUND_IMAGE
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "background-image".
BACKGROUND_POSITION
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "background-position".
BACKGROUND_REPEAT
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "background-repeat".
backgroundNonSelectionColor
- Variable in class javax.swing.tree.
DefaultTreeCellRenderer
Color to use for the background when the node isn't selected.
backgroundSelectionColor
- Variable in class javax.swing.tree.
DefaultTreeCellRenderer
Color to use for the background when a node is selected.
backingStore
- Variable in class javax.swing.
JViewport
Deprecated.
As of Java 2 platform v1.3
BACKINGSTORE_SCROLL_MODE
- Static variable in class javax.swing.
JViewport
Draws viewport contents into an offscreen image.
BackingStoreException
- Exception Class in
java.util.prefs
Thrown to indicate that a preferences operation could not complete because
 of a failure in the backing store, or a failure to contact the backing
 store.
BackingStoreException(String)
- Constructor for exception class java.util.prefs.
BackingStoreException
Constructs a BackingStoreException with the specified detail message.
BackingStoreException(Throwable)
- Constructor for exception class java.util.prefs.
BackingStoreException
Constructs a BackingStoreException with the specified cause.
backingStoreImage
- Variable in class javax.swing.
JViewport
The view image used for a backing store.
Backing Style
- Search tag in package javax.swing.plaf.synth
Section
Backslashes, escapes, and quoting
- Search tag in class java.util.regex.Pattern
Section
Backward
- Static variable in class javax.swing.text.
Position.Bias
Indicates a bias toward the previous character
 in the model.
BACKWARD_TRAVERSAL_KEYS
- Static variable in class java.awt.
KeyboardFocusManager
The identifier for the Backward focus traversal keys.
backwardAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the Action for moving the caret
 logically backward one position.
BAD_BINDINGS
- Static variable in exception class org.ietf.jgss.
GSSException
Channel bindings mismatch.
BAD_BOUNDARYPOINTS_ERR
- Static variable in exception class org.w3c.dom.ranges.
RangeException
If the boundary-points of a Range do not meet specific requirements.
BAD_LOCATION
- Static variable in class javax.swing.text.
AbstractDocument
Error message to indicate a bad location.
BAD_MECH
- Static variable in exception class org.ietf.jgss.
GSSException
Unsupported mechanism requested.
BAD_MIC
- Static variable in exception class org.ietf.jgss.
GSSException
Token had invalid integrity check.
BAD_NAME
- Static variable in exception class org.ietf.jgss.
GSSException
Invalid name provided.
BAD_NAMETYPE
- Static variable in exception class org.ietf.jgss.
GSSException
Name of unsupported type provided.
BAD_QOP
- Static variable in exception class org.ietf.jgss.
GSSException
Unsupported QOP value.
BAD_STATUS
- Static variable in exception class org.ietf.jgss.
GSSException
Invalid status code.
BadAttributeValueExpException
- Exception Class in
javax.management
Thrown when an invalid MBean attribute is passed to a query
 constructing method.
BadAttributeValueExpException(Object)
- Constructor for exception class javax.management.
BadAttributeValueExpException
Constructs a BadAttributeValueExpException using the specified Object to
 create the toString() value.
BadBinaryOpValueExpException
- Exception Class in
javax.management
Thrown when an invalid expression is passed to a method for
 constructing a query.
BadBinaryOpValueExpException(ValueExp)
- Constructor for exception class javax.management.
BadBinaryOpValueExpException
Constructs a
BadBinaryOpValueExpException
with the specified
ValueExp
.
BadBreakWeight
- Static variable in class javax.swing.text.
View
The weight to indicate a view is a bad break
 opportunity for the purpose of formatting.
BadLocationException
- Exception Class in
javax.swing.text
This exception is to report bad locations within a document model
 (that is, attempts to reference a location that doesn't exist).
BadLocationException(String, int)
- Constructor for exception class javax.swing.text.
BadLocationException
Creates a new BadLocationException object.
BadPaddingException
- Exception Class in
javax.crypto
This exception is thrown when a particular padding mechanism is
 expected for the input data but the data is not padded properly.
BadPaddingException()
- Constructor for exception class javax.crypto.
BadPaddingException
Constructs a
BadPaddingException
with no detail
 message.
BadPaddingException(String)
- Constructor for exception class javax.crypto.
BadPaddingException
Constructs a
BadPaddingException
with the specified
 detail message.
BadStringOperationException
- Exception Class in
javax.management
Thrown when an invalid string operation is passed
 to a method for constructing a query.
BadStringOperationException(String)
- Constructor for exception class javax.management.
BadStringOperationException
Constructs a
BadStringOperationException
with the specified detail
 message.
BALANCE
- Static variable in class javax.sound.sampled.
FloatControl.Type
Represents a control for the relative balance of a stereo signal
 between two stereo speakers.
BALINESE
- Enum constant in enum class java.awt.font.
NumericShaper.Range
The Balinese range with the Balinese digits.
BALINESE
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Balinese".
BALINESE
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Balinese" Unicode character block.
BAMUM
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Bamum".
BAMUM
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Bamum" Unicode character block.
BAMUM_SUPPLEMENT
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Bamum Supplement" Unicode character block.
BandCombineOp
- Class in
java.awt.image
This class performs an arbitrary linear combination of the bands
 in a
Raster
, using a specified matrix.
BandCombineOp(float[][], RenderingHints)
- Constructor for class java.awt.image.
BandCombineOp
Constructs a
BandCombineOp
with the specified matrix.
BandedSampleModel
- Class in
java.awt.image
This class represents image data which is stored in a band interleaved
  fashion and for
  which each sample of a pixel occupies one data element of the DataBuffer.
BandedSampleModel(int, int, int, int)
- Constructor for class java.awt.image.
BandedSampleModel
Constructs a BandedSampleModel with the specified parameters.
BandedSampleModel(int, int, int, int, int[], int[])
- Constructor for class java.awt.image.
BandedSampleModel
Constructs a BandedSampleModel with the specified parameters.
bandOffsets
- Variable in class java.awt.image.
ComponentSampleModel
Offsets for all bands in data array elements.
bank
- Variable in class javax.sound.midi.
VoiceStatus
The bank number of the instrument that this voice is currently using.
bankIndices
- Variable in class java.awt.image.
ComponentSampleModel
Index for each bank storing a band of image data.
banks
- Variable in class java.awt.image.
DataBuffer
The number of banks in this DataBuffer.
base
- Variable in class javax.swing.text.html.parser.
DTD
The element corresponding to base.
BASE
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <base>
Base64
- Class in
java.util
This class consists exclusively of static methods for obtaining
 encoders and decoders for the Base64 encoding scheme.
BASE64
- Static variable in interface javax.xml.crypto.dsig.
Transform
The
Base64
transform algorithm URI.
Base64.Decoder
- Class in
java.util
This class implements a decoder for decoding byte data using the
 Base64 encoding scheme as specified in RFC 4648 and RFC 2045.
Base64.Encoder
- Class in
java.util
This class implements an encoder for encoding byte data using
 the Base64 encoding scheme as specified in RFC 4648 and RFC 2045.
baseDirectory()
- Method in interface com.sun.jdi.
PathSearchingVirtualMachine
Get the base directory used for path searching.
BASEFONT
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <basefont>
baseIsLeftToRight()
- Method in class java.text.
Bidi
Return true if the base direction is left-to-right.
Baseline
- Search tag in class javax.swing.GroupLayout.ParallelGroup
Section
BASELINE
- Enum constant in enum class javax.swing.
GroupLayout.Alignment
Indicates the elements should be aligned along
 their baseline.
BASELINE
- Static variable in class java.awt.
GridBagConstraints
Possible value for the
anchor
field.
BASELINE
- Static variable in class javax.swing.
SpringLayout
Specifies the baseline of a component.
BASELINE_LEADING
- Static variable in class java.awt.
GridBagConstraints
Possible value for the
anchor
field.
BASELINE_TRAILING
- Static variable in class java.awt.
GridBagConstraints
Possible value for the
anchor
field.
baselineLayout(int, int, int[], int[])
- Method in class javax.swing.text.
BoxView
Computes the location and extent of each child view
 in this
BoxView
given the
targetSpan
,
 which is the width (or height) of the region we have to
 work with.
baselineRequirements(int, SizeRequirements)
- Method in class javax.swing.text.
BoxView
Calculates the size requirements for this
BoxView
by examining the size of each child view.
BaselineTIFFTagSet
- Class in
javax.imageio.plugins.tiff
A class representing the set of tags found in the baseline TIFF
 specification as well as some common additional tags.
BaseMultiResolutionImage
- Class in
java.awt.image
This class is an array-based implementation of
 the
AbstractMultiResolutionImage
class.
BaseMultiResolutionImage(int, Image...)
- Constructor for class java.awt.image.
BaseMultiResolutionImage
Creates a multi-resolution image with the given base image index and
 resolution variants.
BaseMultiResolutionImage(Image...)
- Constructor for class java.awt.image.
BaseMultiResolutionImage
Creates a multi-resolution image with the given resolution variants.
BaseRowSet
- Class in
javax.sql.rowset
An abstract class providing a
RowSet
object with its basic functionality.
BaseRowSet()
- Constructor for class javax.sql.rowset.
BaseRowSet
Constructs a new
BaseRowSet
object initialized with
 a default
Vector
object for its
listeners
field.
BaseStream<T,
S>
- Interface in
java.util.stream
Base interface for streams, which are sequences of elements supporting
 sequential and parallel aggregate operations.
baseVersion()
- Static method in class java.util.jar.
JarFile
Returns the version that represents the unversioned configuration of a
 multi-release jar file.
baseWireHandle
- Static variable in interface java.io.
ObjectStreamConstants
First wire handle to be assigned.
BASIC_ISO_DATE
- Static variable in class java.time.format.
DateTimeFormatter
The ISO date formatter that formats or parses a date without an
 offset, such as '20111203'.
BASIC_LATIN
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Basic Latin" Unicode character block.
BasicArrowButton
- Class in
javax.swing.plaf.basic
JButton object that draws a scaled Arrow in one of the cardinal directions.
BasicArrowButton(int)
- Constructor for class javax.swing.plaf.basic.
BasicArrowButton
Creates a
BasicArrowButton
whose arrow
 is drawn in the specified direction.
BasicArrowButton(int, Color, Color, Color, Color)
- Constructor for class javax.swing.plaf.basic.
BasicArrowButton
Creates a
BasicArrowButton
whose arrow
 is drawn in the specified direction and with the specified
 colors.
BasicAttribute
- Class in
javax.naming.directory
This class provides a basic implementation of the
Attribute
interface.
BasicAttribute(String)
- Constructor for class javax.naming.directory.
BasicAttribute
Constructs a new instance of an unordered attribute with no value.
BasicAttribute(String, boolean)
- Constructor for class javax.naming.directory.
BasicAttribute
Constructs a new instance of a possibly ordered attribute with no value.
BasicAttribute(String, Object)
- Constructor for class javax.naming.directory.
BasicAttribute
Constructs a new instance of an unordered attribute with a single value.
BasicAttribute(String, Object, boolean)
- Constructor for class javax.naming.directory.
BasicAttribute
Constructs a new instance of a possibly ordered attribute with a
 single value.
BasicAttributes
- Class in
javax.naming.directory
This class provides a basic implementation
 of the Attributes interface.
BasicAttributes()
- Constructor for class javax.naming.directory.
BasicAttributes
Constructs a new instance of Attributes.
BasicAttributes(boolean)
- Constructor for class javax.naming.directory.
BasicAttributes
Constructs a new instance of Attributes.
BasicAttributes(String, Object)
- Constructor for class javax.naming.directory.
BasicAttributes
Constructs a new instance of Attributes with one attribute.
BasicAttributes(String, Object, boolean)
- Constructor for class javax.naming.directory.
BasicAttributes
Constructs a new instance of Attributes with one attribute.
BasicAuthenticator
- Class in
com.sun.net.httpserver
BasicAuthenticator provides an implementation of HTTP Basic
 authentication.
BasicAuthenticator(String)
- Constructor for class com.sun.net.httpserver.
BasicAuthenticator
Creates a
BasicAuthenticator
for the given HTTP realm.
BasicAuthenticator(String, Charset)
- Constructor for class com.sun.net.httpserver.
BasicAuthenticator
Creates a
BasicAuthenticator
for the given HTTP realm and using the
 given
Charset
to decode the Basic authentication credentials
 (username and password).
BasicBorders
- Class in
javax.swing.plaf.basic
Factory object that can vend Borders appropriate for the basic L & F.
BasicBorders()
- Constructor for class javax.swing.plaf.basic.
BasicBorders
Constructs a
BasicBorders
.
BasicBorders.ButtonBorder
- Class in
javax.swing.plaf.basic
Draws a border around a button.
BasicBorders.FieldBorder
- Class in
javax.swing.plaf.basic
Draws the border around a field.
BasicBorders.MarginBorder
- Class in
javax.swing.plaf.basic
Draws the border around components which support margins.
BasicBorders.MenuBarBorder
- Class in
javax.swing.plaf.basic
Draws the border around a menu bar.
BasicBorders.RadioButtonBorder
- Class in
javax.swing.plaf.basic
Draws the border around a radio button.
BasicBorders.RolloverButtonBorder
- Class in
javax.swing.plaf.basic
Special thin border for rollover toolbar buttons.
BasicBorders.SplitPaneBorder
- Class in
javax.swing.plaf.basic
Draws the border around the splitpane.
BasicBorders.ToggleButtonBorder
- Class in
javax.swing.plaf.basic
Draws the border around a toggle button.
BasicButtonListener
- Class in
javax.swing.plaf.basic
Button Listener
BasicButtonListener(AbstractButton)
- Constructor for class javax.swing.plaf.basic.
BasicButtonListener
Constructs a new instance of
BasicButtonListener
.
BasicButtonUI
- Class in
javax.swing.plaf.basic
BasicButton implementation
BasicButtonUI()
- Constructor for class javax.swing.plaf.basic.
BasicButtonUI
Constructs a
BasicButtonUI
.
BasicCaret()
- Constructor for class javax.swing.plaf.basic.
BasicTextUI.BasicCaret
Constructs a
BasicCaret
.
BasicCheckBoxMenuItemUI
- Class in
javax.swing.plaf.basic
BasicCheckboxMenuItem implementation
BasicCheckBoxMenuItemUI()
- Constructor for class javax.swing.plaf.basic.
BasicCheckBoxMenuItemUI
Constructs a
BasicCheckBoxMenuItemUI
.
BasicCheckBoxUI
- Class in
javax.swing.plaf.basic
CheckboxUI implementation for BasicCheckboxUI
BasicCheckBoxUI()
- Constructor for class javax.swing.plaf.basic.
BasicCheckBoxUI
Constructs a
BasicCheckBoxUI
.
BasicColorChooserUI
- Class in
javax.swing.plaf.basic
Provides the basic look and feel for a JColorChooser.
BasicColorChooserUI()
- Constructor for class javax.swing.plaf.basic.
BasicColorChooserUI
Constructs a
BasicColorChooserUI
.
BasicColorChooserUI.PropertyHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicComboBoxEditor
- Class in
javax.swing.plaf.basic
The default editor for editable combo boxes.
BasicComboBoxEditor()
- Constructor for class javax.swing.plaf.basic.
BasicComboBoxEditor
Constructs a new instance of
BasicComboBoxEditor
.
BasicComboBoxEditor.UIResource
- Class in
javax.swing.plaf.basic
A subclass of BasicComboBoxEditor that implements UIResource.
BasicComboBoxRenderer
- Class in
javax.swing.plaf.basic
ComboBox renderer
BasicComboBoxRenderer()
- Constructor for class javax.swing.plaf.basic.
BasicComboBoxRenderer
Constructs a new instance of
BasicComboBoxRenderer
.
BasicComboBoxRenderer.UIResource
- Class in
javax.swing.plaf.basic
A subclass of BasicComboBoxRenderer that implements UIResource.
BasicComboBoxUI
- Class in
javax.swing.plaf.basic
Basic UI implementation for JComboBox.
BasicComboBoxUI()
- Constructor for class javax.swing.plaf.basic.
BasicComboBoxUI
Constructs a
BasicComboBoxUI
.
BasicComboBoxUI.ComboBoxLayoutManager
- Class in
javax.swing.plaf.basic
This layout manager handles the 'standard' layout of combo boxes.
BasicComboBoxUI.FocusHandler
- Class in
javax.swing.plaf.basic
This listener hides the popup when the focus is lost.
BasicComboBoxUI.ItemHandler
- Class in
javax.swing.plaf.basic
This listener watches for changes to the selection in the
 combo box.
BasicComboBoxUI.KeyHandler
- Class in
javax.swing.plaf.basic
This listener checks to see if the key event isn't a navigation key.
BasicComboBoxUI.ListDataHandler
- Class in
javax.swing.plaf.basic
This listener watches for changes in the
ComboBoxModel
.
BasicComboBoxUI.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
This listener watches for bound properties that have changed in the
 combo box.
BasicComboPopup
- Class in
javax.swing.plaf.basic
This is a basic implementation of the
ComboPopup
interface.
BasicComboPopup(JComboBox<Object>)
- Constructor for class javax.swing.plaf.basic.
BasicComboPopup
Constructs a new instance of
BasicComboPopup
.
BasicComboPopup.InvocationKeyHandler
- Class in
javax.swing.plaf.basic
As of Java 2 platform v 1.4, this class is now obsolete and is only included for
 backwards API compatibility.
BasicComboPopup.InvocationMouseHandler
- Class in
javax.swing.plaf.basic
A listener to be registered upon the combo box
 (
not
its popup menu)
 to handle mouse events
 that affect the state of the popup menu.
BasicComboPopup.InvocationMouseMotionHandler
- Class in
javax.swing.plaf.basic
This listener watches for dragging and updates the current selection in the
 list if it is dragging over the list.
BasicComboPopup.ItemHandler
- Class in
javax.swing.plaf.basic
This listener watches for changes to the selection in the
 combo box.
BasicComboPopup.ListDataHandler
- Class in
javax.swing.plaf.basic
As of 1.4, this class is now obsolete, doesn't do anything, and
 is only included for backwards API compatibility.
BasicComboPopup.ListMouseHandler
- Class in
javax.swing.plaf.basic
This listener hides the popup when the mouse is released in the list.
BasicComboPopup.ListMouseMotionHandler
- Class in
javax.swing.plaf.basic
This listener changes the selected item as you move the mouse over the list.
BasicComboPopup.ListSelectionHandler
- Class in
javax.swing.plaf.basic
As of Java 2 platform v 1.4, this class is now obsolete, doesn't do anything, and
 is only included for backwards API compatibility.
BasicComboPopup.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
This listener watches for bound properties that have changed in the
 combo box.
BasicControl
- Class in
javax.naming.ldap
This class provides a basic implementation of the
Control
interface.
BasicControl(String)
- Constructor for class javax.naming.ldap.
BasicControl
Constructs a non-critical control.
BasicControl(String, boolean, byte[])
- Constructor for class javax.naming.ldap.
BasicControl
Constructs a control using the supplied arguments.
BasicDesktopIconUI
- Class in
javax.swing.plaf.basic
Basic L&F for a minimized window on a desktop.
BasicDesktopIconUI()
- Constructor for class javax.swing.plaf.basic.
BasicDesktopIconUI
Constructs a new instance of
BasicDesktopIconUI
.
BasicDesktopIconUI.MouseInputHandler
- Class in
javax.swing.plaf.basic
Listens for mouse movements and acts on them.
BasicDesktopPaneUI
- Class in
javax.swing.plaf.basic
Basic L&F for a desktop.
BasicDesktopPaneUI()
- Constructor for class javax.swing.plaf.basic.
BasicDesktopPaneUI
Constructs a new instance of
BasicDesktopPaneUI
.
BasicDesktopPaneUI.CloseAction
- Class in
javax.swing.plaf.basic
Handles closing an internal frame.
BasicDesktopPaneUI.MaximizeAction
- Class in
javax.swing.plaf.basic
Handles maximizing an internal frame.
BasicDesktopPaneUI.MinimizeAction
- Class in
javax.swing.plaf.basic
Handles minimizing an internal frame.
BasicDesktopPaneUI.NavigateAction
- Class in
javax.swing.plaf.basic
Handles navigating to the next internal frame.
BasicDesktopPaneUI.OpenAction
- Class in
javax.swing.plaf.basic
Handles restoring a minimized or maximized internal frame.
BasicDirectoryModel
- Class in
javax.swing.plaf.basic
Basic implementation of a file list.
BasicDirectoryModel(JFileChooser)
- Constructor for class javax.swing.plaf.basic.
BasicDirectoryModel
Constructs a new instance of
BasicDirectoryModel
.
BasicEditorPaneUI
- Class in
javax.swing.plaf.basic
Provides the look and feel for a JEditorPane.
BasicEditorPaneUI()
- Constructor for class javax.swing.plaf.basic.
BasicEditorPaneUI
Creates a new BasicEditorPaneUI.
BasicFileAttributes
- Interface in
java.nio.file.attribute
Basic attributes associated with a file in a file system.
BasicFileAttributeView
- Interface in
java.nio.file.attribute
A file attribute view that provides a view of a
basic set
of file
 attributes common to many file systems.
BasicFileChooserUI
- Class in
javax.swing.plaf.basic
Basic L&F implementation of a FileChooser.
BasicFileChooserUI(JFileChooser)
- Constructor for class javax.swing.plaf.basic.
BasicFileChooserUI
Constructs a
BasicFileChooserUI
.
BasicFileChooserUI.AcceptAllFileFilter
- Class in
javax.swing.plaf.basic
Accept all file filter.
BasicFileChooserUI.ApproveSelectionAction
- Class in
javax.swing.plaf.basic
Responds to an Open or Save request
BasicFileChooserUI.BasicFileView
- Class in
javax.swing.plaf.basic
A basic file view.
BasicFileChooserUI.CancelSelectionAction
- Class in
javax.swing.plaf.basic
Responds to a cancel request.
BasicFileChooserUI.ChangeToParentDirectoryAction
- Class in
javax.swing.plaf.basic
Change to parent directory action.
BasicFileChooserUI.DoubleClickListener
- Class in
javax.swing.plaf.basic
A double click listener.
BasicFileChooserUI.GoHomeAction
- Class in
javax.swing.plaf.basic
Acts on the "home" key event or equivalent event.
BasicFileChooserUI.NewFolderAction
- Class in
javax.swing.plaf.basic
Creates a new folder.
BasicFileChooserUI.SelectionListener
- Class in
javax.swing.plaf.basic
A selection listener.
BasicFileChooserUI.UpdateAction
- Class in
javax.swing.plaf.basic
Rescans the files in the current directory
BasicFileView()
- Constructor for class javax.swing.plaf.basic.
BasicFileChooserUI.BasicFileView
Constructs a
BasicFileView
.
BasicFormattedTextFieldUI
- Class in
javax.swing.plaf.basic
Provides the look and feel implementation for
JFormattedTextField
.
BasicFormattedTextFieldUI()
- Constructor for class javax.swing.plaf.basic.
BasicFormattedTextFieldUI
Constructs a
BasicFormattedTextFieldUI
.
BasicGraphicsUtils
- Class in
javax.swing.plaf.basic
Convenient util class.
BasicGraphicsUtils()
- Constructor for class javax.swing.plaf.basic.
BasicGraphicsUtils
Constructs a
BasicGraphicsUtils
.
BasicHighlighter()
- Constructor for class javax.swing.plaf.basic.
BasicTextUI.BasicHighlighter
Constructs a
BasicHighlighter
.
BasicHTML
- Class in
javax.swing.plaf.basic
Support for providing html views for the swing components.
BasicHTML()
- Constructor for class javax.swing.plaf.basic.
BasicHTML
Constructs a
BasicHTML
.
BasicIconFactory
- Class in
javax.swing.plaf.basic
Factory object that can vend Icons appropriate for the basic L & F.
BasicIconFactory()
- Constructor for class javax.swing.plaf.basic.
BasicIconFactory
Constructs a
BasicIconFactory
.
BasicInternalFrameListener()
- Constructor for class javax.swing.plaf.basic.
BasicInternalFrameUI.BasicInternalFrameListener
Constructs a
BasicInternalFrameListener
.
BasicInternalFrameTitlePane
- Class in
javax.swing.plaf.basic
The class that manages a basic title bar
BasicInternalFrameTitlePane(JInternalFrame)
- Constructor for class javax.swing.plaf.basic.
BasicInternalFrameTitlePane
Constructs a new instance of
BasicInternalFrameTitlePane
.
BasicInternalFrameTitlePane.CloseAction
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameTitlePane.IconifyAction
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameTitlePane.MaximizeAction
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameTitlePane.MoveAction
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameTitlePane.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameTitlePane.RestoreAction
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameTitlePane.SizeAction
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameTitlePane.SystemMenuBar
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameTitlePane.TitlePaneLayout
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicInternalFrameUI
- Class in
javax.swing.plaf.basic
A basic L&F implementation of JInternalFrame.
BasicInternalFrameUI(JInternalFrame)
- Constructor for class javax.swing.plaf.basic.
BasicInternalFrameUI
Constructs a
BasicInternalFrameUI
.
BasicInternalFrameUI.BasicInternalFrameListener
- Class in
javax.swing.plaf.basic
Basic internal frame listener.
BasicInternalFrameUI.BorderListener
- Class in
javax.swing.plaf.basic
Listens for border adjustments.
BasicInternalFrameUI.ComponentHandler
- Class in
javax.swing.plaf.basic
Component handler.
BasicInternalFrameUI.GlassPaneDispatcher
- Class in
javax.swing.plaf.basic
Glass pane dispatcher.
BasicInternalFrameUI.InternalFrameLayout
- Class in
javax.swing.plaf.basic
Internal frame layout.
BasicInternalFrameUI.InternalFramePropertyChangeListener
- Class in
javax.swing.plaf.basic
Internal frame property change listener.
BasicLabelUI
- Class in
javax.swing.plaf.basic
A Windows L&F implementation of LabelUI.
BasicLabelUI()
- Constructor for class javax.swing.plaf.basic.
BasicLabelUI
Constructs a
BasicLabelUI
.
BasicListUI
- Class in
javax.swing.plaf.basic
An extensible implementation of
ListUI
.
BasicListUI()
- Constructor for class javax.swing.plaf.basic.
BasicListUI
Constructs a
BasicListUI
.
BasicListUI.FocusHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicListUI.ListDataHandler
- Class in
javax.swing.plaf.basic
The
ListDataListener
that's added to the
JLists
model at
installUI time
, and whenever the JList.model property changes.
BasicListUI.ListSelectionHandler
- Class in
javax.swing.plaf.basic
The ListSelectionListener that's added to the JLists selection
 model at installUI time, and whenever the JList.selectionModel property
 changes.
BasicListUI.MouseInputHandler
- Class in
javax.swing.plaf.basic
Mouse input, and focus handling for JList.
BasicListUI.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
The PropertyChangeListener that's added to the JList at
 installUI time.
BasicLookAndFeel
- Class in
javax.swing.plaf.basic
A base class to use in creating a look and feel for Swing.
BasicLookAndFeel()
- Constructor for class javax.swing.plaf.basic.
BasicLookAndFeel
Constructor for subclasses to call.
BasicMenuBarUI
- Class in
javax.swing.plaf.basic
A default L&F implementation of MenuBarUI.
BasicMenuBarUI()
- Constructor for class javax.swing.plaf.basic.
BasicMenuBarUI
Constructs a
BasicMenuBarUI
.
BasicMenuItemUI
- Class in
javax.swing.plaf.basic
BasicMenuItem implementation
BasicMenuItemUI()
- Constructor for class javax.swing.plaf.basic.
BasicMenuItemUI
Constructs a
BasicMenuItemUI
.
BasicMenuItemUI.MouseInputHandler
- Class in
javax.swing.plaf.basic
Deprecated, for removal: This API element is subject to removal in a future version.
BasicMenuUI
- Class in
javax.swing.plaf.basic
A default L&F implementation of MenuUI.
BasicMenuUI()
- Constructor for class javax.swing.plaf.basic.
BasicMenuUI
Constructs a
BasicMenuUI
.
BasicMenuUI.ChangeHandler
- Class in
javax.swing.plaf.basic
As of Java 2 platform 1.4, this previously undocumented class
 is now obsolete.
BasicMenuUI.MouseInputHandler
- Class in
javax.swing.plaf.basic
Instantiated and used by a menu item to handle the current menu selection
 from mouse events.
Basic operation
- Search tag in class java.util.concurrent.StructuredTaskScope
Section
BasicOptionPaneUI
- Class in
javax.swing.plaf.basic
Provides the basic look and feel for a
JOptionPane
.
BasicOptionPaneUI()
- Constructor for class javax.swing.plaf.basic.
BasicOptionPaneUI
Constructs a
BasicOptionPaneUI
.
BasicOptionPaneUI.ButtonActionListener
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicOptionPaneUI.ButtonAreaLayout
- Class in
javax.swing.plaf.basic
ButtonAreaLayout
behaves in a similar manner to
FlowLayout
.
BasicOptionPaneUI.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicPanelUI
- Class in
javax.swing.plaf.basic
BasicPanel implementation
BasicPanelUI()
- Constructor for class javax.swing.plaf.basic.
BasicPanelUI
Constructs a
BasicPanelUI
.
BasicPasswordFieldUI
- Class in
javax.swing.plaf.basic
Provides the Windows look and feel for a password field.
BasicPasswordFieldUI()
- Constructor for class javax.swing.plaf.basic.
BasicPasswordFieldUI
Constructs a
BasicPasswordFieldUI
.
BasicPermission
- Class in
java.security
The
BasicPermission
class extends the
Permission
class, and
 can be used as the base class for permissions that want to
 follow the same naming convention as
BasicPermission
.
BasicPermission(String)
- Constructor for class java.security.
BasicPermission
Creates a new
BasicPermission
with the specified name.
BasicPermission(String, String)
- Constructor for class java.security.
BasicPermission
Creates a new
BasicPermission
object with the specified name.
BasicPopupMenuSeparatorUI
- Class in
javax.swing.plaf.basic
A Basic L&F implementation of PopupMenuSeparatorUI.
BasicPopupMenuSeparatorUI()
- Constructor for class javax.swing.plaf.basic.
BasicPopupMenuSeparatorUI
Constructs a
BasicPopupMenuSeparatorUI
.
BasicPopupMenuUI
- Class in
javax.swing.plaf.basic
A Windows L&F implementation of PopupMenuUI.
BasicPopupMenuUI()
- Constructor for class javax.swing.plaf.basic.
BasicPopupMenuUI
Constructs a new instance of
BasicPopupMenuUI
.
BasicProgressBarUI
- Class in
javax.swing.plaf.basic
A Basic L&F implementation of ProgressBarUI.
BasicProgressBarUI()
- Constructor for class javax.swing.plaf.basic.
BasicProgressBarUI
Constructs a
BasicProgressBarUI
.
BasicProgressBarUI.ChangeHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicRadioButtonMenuItemUI
- Class in
javax.swing.plaf.basic
BasicRadioButtonMenuItem implementation
BasicRadioButtonMenuItemUI()
- Constructor for class javax.swing.plaf.basic.
BasicRadioButtonMenuItemUI
Constructs a
BasicRadioButtonMenuItemUI
.
BasicRadioButtonUI
- Class in
javax.swing.plaf.basic
RadioButtonUI implementation for BasicRadioButtonUI
BasicRadioButtonUI()
- Constructor for class javax.swing.plaf.basic.
BasicRadioButtonUI
Constructs a
BasicRadioButtonUI
.
BasicRootPaneUI
- Class in
javax.swing.plaf.basic
Basic implementation of RootPaneUI, there is one shared between all
 JRootPane instances.
BasicRootPaneUI()
- Constructor for class javax.swing.plaf.basic.
BasicRootPaneUI
Constructs a
BasicRootPaneUI
.
BasicScrollBarUI
- Class in
javax.swing.plaf.basic
Implementation of ScrollBarUI for the Basic Look and Feel
BasicScrollBarUI()
- Constructor for class javax.swing.plaf.basic.
BasicScrollBarUI
Constructs a
BasicScrollBarUI
.
BasicScrollBarUI.ArrowButtonListener
- Class in
javax.swing.plaf.basic
Listener for cursor keys.
BasicScrollBarUI.ModelListener
- Class in
javax.swing.plaf.basic
A listener to listen for model changes.
BasicScrollBarUI.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
Property change handler
BasicScrollBarUI.ScrollListener
- Class in
javax.swing.plaf.basic
Listener for scrolling events initiated in the
ScrollPane
.
BasicScrollBarUI.TrackListener
- Class in
javax.swing.plaf.basic
Track mouse drags.
BasicScrollPaneUI
- Class in
javax.swing.plaf.basic
A default L&F implementation of ScrollPaneUI.
BasicScrollPaneUI()
- Constructor for class javax.swing.plaf.basic.
BasicScrollPaneUI
Constructs a
BasicScrollPaneUI
.
BasicScrollPaneUI.HSBChangeListener
- Class in
javax.swing.plaf.basic
Deprecated, for removal: This API element is subject to removal in a future version.
BasicScrollPaneUI.MouseWheelHandler
- Class in
javax.swing.plaf.basic
MouseWheelHandler is an inner class which implements the
 MouseWheelListener interface.
BasicScrollPaneUI.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
Deprecated, for removal: This API element is subject to removal in a future version.
BasicScrollPaneUI.ViewportChangeHandler
- Class in
javax.swing.plaf.basic
Deprecated, for removal: This API element is subject to removal in a future version.
BasicScrollPaneUI.VSBChangeListener
- Class in
javax.swing.plaf.basic
Deprecated, for removal: This API element is subject to removal in a future version.
BasicSeparatorUI
- Class in
javax.swing.plaf.basic
A Basic L&F implementation of SeparatorUI.
BasicSeparatorUI()
- Constructor for class javax.swing.plaf.basic.
BasicSeparatorUI
Constructs a
BasicSeparatorUI
.
BasicSliderUI
- Class in
javax.swing.plaf.basic
A Basic L&F implementation of SliderUI.
BasicSliderUI()
- Constructor for class javax.swing.plaf.basic.
BasicSliderUI
Constructs a
BasicSliderUI
.
BasicSliderUI(JSlider)
- Constructor for class javax.swing.plaf.basic.
BasicSliderUI
Constructs a
BasicSliderUI
.
BasicSliderUI.ActionScroller
- Class in
javax.swing.plaf.basic
As of Java 2 platform v1.3 this undocumented class is no longer used.
BasicSliderUI.ChangeHandler
- Class in
javax.swing.plaf.basic
Data model listener.
BasicSliderUI.ComponentHandler
- Class in
javax.swing.plaf.basic
Listener for resizing events.
BasicSliderUI.FocusHandler
- Class in
javax.swing.plaf.basic
Focus-change listener.
BasicSliderUI.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
A property change handler.
BasicSliderUI.ScrollListener
- Class in
javax.swing.plaf.basic
Scroll-event listener.
BasicSliderUI.TrackListener
- Class in
javax.swing.plaf.basic
Track mouse movements.
BasicSpinnerUI
- Class in
javax.swing.plaf.basic
The default Spinner UI delegate.
BasicSpinnerUI()
- Constructor for class javax.swing.plaf.basic.
BasicSpinnerUI
Constructs a
BasicSpinnerUI
.
BasicSplitPaneDivider
- Class in
javax.swing.plaf.basic
Divider used by BasicSplitPaneUI.
BasicSplitPaneDivider(BasicSplitPaneUI)
- Constructor for class javax.swing.plaf.basic.
BasicSplitPaneDivider
Creates an instance of
BasicSplitPaneDivider
.
BasicSplitPaneDivider.DividerLayout
- Class in
javax.swing.plaf.basic
Used to layout a
BasicSplitPaneDivider
.
BasicSplitPaneDivider.DragController
- Class in
javax.swing.plaf.basic
Handles the events during a dragging session for a
 HORIZONTAL_SPLIT oriented split pane.
BasicSplitPaneDivider.MouseHandler
- Class in
javax.swing.plaf.basic
MouseHandler is responsible for converting mouse events
 (released, dragged...) into the appropriate DragController
 methods.
BasicSplitPaneDivider.VerticalDragController
- Class in
javax.swing.plaf.basic
Handles the events during a dragging session for a
 VERTICAL_SPLIT oriented split pane.
BasicSplitPaneUI
- Class in
javax.swing.plaf.basic
A Basic L&F implementation of the SplitPaneUI.
BasicSplitPaneUI()
- Constructor for class javax.swing.plaf.basic.
BasicSplitPaneUI
Constructs a
BasicSplitPaneUI
.
BasicSplitPaneUI.BasicHorizontalLayoutManager
- Class in
javax.swing.plaf.basic
LayoutManager for JSplitPanes that have an orientation of
 HORIZONTAL_SPLIT.
BasicSplitPaneUI.BasicVerticalLayoutManager
- Class in
javax.swing.plaf.basic
LayoutManager used for JSplitPanes with an orientation of
 VERTICAL_SPLIT.
BasicSplitPaneUI.FocusHandler
- Class in
javax.swing.plaf.basic
Implementation of the FocusListener that the JSplitPane UI uses.
BasicSplitPaneUI.KeyboardDownRightHandler
- Class in
javax.swing.plaf.basic
Implementation of an ActionListener that the JSplitPane UI uses for
 handling specific key presses.
BasicSplitPaneUI.KeyboardEndHandler
- Class in
javax.swing.plaf.basic
Implementation of an ActionListener that the JSplitPane UI uses for
 handling specific key presses.
BasicSplitPaneUI.KeyboardHomeHandler
- Class in
javax.swing.plaf.basic
Implementation of an ActionListener that the JSplitPane UI uses for
 handling specific key presses.
BasicSplitPaneUI.KeyboardResizeToggleHandler
- Class in
javax.swing.plaf.basic
Implementation of an ActionListener that the JSplitPane UI uses for
 handling specific key presses.
BasicSplitPaneUI.KeyboardUpLeftHandler
- Class in
javax.swing.plaf.basic
Implementation of an ActionListener that the JSplitPane UI uses for
 handling specific key presses.
BasicSplitPaneUI.PropertyHandler
- Class in
javax.swing.plaf.basic
Implementation of the PropertyChangeListener
 that the JSplitPane UI uses.
BasicStroke
- Class in
java.awt
The
BasicStroke
class defines a basic set of rendering
 attributes for the outlines of graphics primitives, which are rendered
 with a
Graphics2D
object that has its Stroke attribute set to
 this
BasicStroke
.
BasicStroke()
- Constructor for class java.awt.
BasicStroke
Constructs a new
BasicStroke
with defaults for all
 attributes.
BasicStroke(float)
- Constructor for class java.awt.
BasicStroke
Constructs a solid
BasicStroke
with the specified
 line width and with default values for the cap and join
 styles.
BasicStroke(float, int, int)
- Constructor for class java.awt.
BasicStroke
Constructs a solid
BasicStroke
with the specified
 attributes.
BasicStroke(float, int, int, float)
- Constructor for class java.awt.
BasicStroke
Constructs a solid
BasicStroke
with the specified
 attributes.
BasicStroke(float, int, int, float, float[], float)
- Constructor for class java.awt.
BasicStroke
Constructs a new
BasicStroke
with the specified
 attributes.
BasicTabbedPaneUI
- Class in
javax.swing.plaf.basic
A Basic L&F implementation of TabbedPaneUI.
BasicTabbedPaneUI()
- Constructor for class javax.swing.plaf.basic.
BasicTabbedPaneUI
Constructs a
BasicTabbedPaneUI
.
BasicTabbedPaneUI.FocusHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTabbedPaneUI.MouseHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTabbedPaneUI.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTabbedPaneUI.TabbedPaneLayout
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTabbedPaneUI.TabSelectionHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTableHeaderUI
- Class in
javax.swing.plaf.basic
BasicTableHeaderUI implementation
BasicTableHeaderUI()
- Constructor for class javax.swing.plaf.basic.
BasicTableHeaderUI
Constructs a
BasicTableHeaderUI
.
BasicTableHeaderUI.MouseInputHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTableUI
- Class in
javax.swing.plaf.basic
BasicTableUI implementation
BasicTableUI()
- Constructor for class javax.swing.plaf.basic.
BasicTableUI
Constructs a
BasicTableUI
.
BasicTableUI.FocusHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTableUI.KeyHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTableUI.MouseInputHandler
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicTextAreaUI
- Class in
javax.swing.plaf.basic
Provides the look and feel for a plain text editor.
BasicTextAreaUI()
- Constructor for class javax.swing.plaf.basic.
BasicTextAreaUI
Constructs a new BasicTextAreaUI object.
BasicTextFieldUI
- Class in
javax.swing.plaf.basic
Basis of a look and feel for a JTextField.
BasicTextFieldUI()
- Constructor for class javax.swing.plaf.basic.
BasicTextFieldUI
Creates a new BasicTextFieldUI.
BasicTextPaneUI
- Class in
javax.swing.plaf.basic
Provides the look and feel for a styled text editor.
BasicTextPaneUI()
- Constructor for class javax.swing.plaf.basic.
BasicTextPaneUI
Creates a new BasicTextPaneUI.
BasicTextUI
- Class in
javax.swing.plaf.basic
Basis of a text components look-and-feel.
BasicTextUI()
- Constructor for class javax.swing.plaf.basic.
BasicTextUI
Creates a new UI.
BasicTextUI.BasicCaret
- Class in
javax.swing.plaf.basic
Default implementation of the interface
Caret
.
BasicTextUI.BasicHighlighter
- Class in
javax.swing.plaf.basic
Default implementation of the interface
Highlighter
.
BasicToggleButtonUI
- Class in
javax.swing.plaf.basic
BasicToggleButton implementation
BasicToggleButtonUI()
- Constructor for class javax.swing.plaf.basic.
BasicToggleButtonUI
Constructs a
BasicToggleButtonUI
.
BasicToolBarSeparatorUI
- Class in
javax.swing.plaf.basic
A Basic L&F implementation of ToolBarSeparatorUI.
BasicToolBarSeparatorUI()
- Constructor for class javax.swing.plaf.basic.
BasicToolBarSeparatorUI
Constructs a
BasicToolBarSeparatorUI
.
BasicToolBarUI
- Class in
javax.swing.plaf.basic
A Basic L&F implementation of ToolBarUI.
BasicToolBarUI()
- Constructor for class javax.swing.plaf.basic.
BasicToolBarUI
Constructs a
BasicToolBarUI
.
BasicToolBarUI.DockingListener
- Class in
javax.swing.plaf.basic
This class should be treated as a "protected" inner class.
BasicToolBarUI.DragWindow
- Class in
javax.swing.plaf.basic
The window which appears during dragging the
JToolBar
.
BasicToolBarUI.FrameListener
- Class in
javax.swing.plaf.basic
The class listens for window events.
BasicToolBarUI.PropertyListener
- Class in
javax.swing.plaf.basic
The class listens for property changed events.
BasicToolBarUI.ToolBarContListener
- Class in
javax.swing.plaf.basic
The class listens for component events.
BasicToolBarUI.ToolBarFocusListener
- Class in
javax.swing.plaf.basic
The class listens for focus events.
BasicToolTipUI
- Class in
javax.swing.plaf.basic
Standard tool tip L&F.
BasicToolTipUI()
- Constructor for class javax.swing.plaf.basic.
BasicToolTipUI
Constructs a new instance of
BasicToolTipUI
.
BasicTreeUI
- Class in
javax.swing.plaf.basic
The basic L&F for a hierarchical data structure.
BasicTreeUI()
- Constructor for class javax.swing.plaf.basic.
BasicTreeUI
Constructs a new instance of
BasicTreeUI
.
BasicTreeUI.CellEditorHandler
- Class in
javax.swing.plaf.basic
Listener responsible for getting cell editing events and updating
 the tree accordingly.
BasicTreeUI.ComponentHandler
- Class in
javax.swing.plaf.basic
Updates the preferred size when scrolling (if necessary).
BasicTreeUI.FocusHandler
- Class in
javax.swing.plaf.basic
Repaints the lead selection row when focus is lost/gained.
BasicTreeUI.KeyHandler
- Class in
javax.swing.plaf.basic
This is used to get multiple key down events to appropriately generate
 events.
BasicTreeUI.MouseHandler
- Class in
javax.swing.plaf.basic
TreeMouseListener is responsible for updating the selection
 based on mouse events.
BasicTreeUI.MouseInputHandler
- Class in
javax.swing.plaf.basic
MouseInputHandler handles passing all mouse events,
 including mouse motion events, until the mouse is released to
 the destination it is constructed with.
BasicTreeUI.NodeDimensionsHandler
- Class in
javax.swing.plaf.basic
Class responsible for getting size of node, method is forwarded
 to BasicTreeUI method.
BasicTreeUI.PropertyChangeHandler
- Class in
javax.swing.plaf.basic
PropertyChangeListener for the tree.
BasicTreeUI.SelectionModelPropertyChangeHandler
- Class in
javax.swing.plaf.basic
Listener on the TreeSelectionModel, resets the row selection if
 any of the properties of the model change.
BasicTreeUI.TreeCancelEditingAction
- Class in
javax.swing.plaf.basic
ActionListener that invokes cancelEditing when action performed.
BasicTreeUI.TreeExpansionHandler
- Class in
javax.swing.plaf.basic
Updates the TreeState in response to nodes expanding/collapsing.
BasicTreeUI.TreeHomeAction
- Class in
javax.swing.plaf.basic
TreeHomeAction is used to handle end/home actions.
BasicTreeUI.TreeIncrementAction
- Class in
javax.swing.plaf.basic
TreeIncrementAction is used to handle up/down actions.
BasicTreeUI.TreeModelHandler
- Class in
javax.swing.plaf.basic
Forwards all TreeModel events to the TreeState.
BasicTreeUI.TreePageAction
- Class in
javax.swing.plaf.basic
TreePageAction handles page up and page down events.
BasicTreeUI.TreeSelectionHandler
- Class in
javax.swing.plaf.basic
Listens for changes in the selection model and updates the display
 accordingly.
BasicTreeUI.TreeToggleAction
- Class in
javax.swing.plaf.basic
For the first selected row expandedness will be toggled.
BasicTreeUI.TreeTraverseAction
- Class in
javax.swing.plaf.basic
TreeTraverseAction
is the action used for left/right keys.
Basic Usage
- Search tag in package java.awt
Section
BasicVerticalLayoutManager()
- Constructor for class javax.swing.plaf.basic.
BasicSplitPaneUI.BasicVerticalLayoutManager
Constructs a new instance of
BasicVerticalLayoutManager
.
BasicViewportUI
- Class in
javax.swing.plaf.basic
BasicViewport implementation
BasicViewportUI()
- Constructor for class javax.swing.plaf.basic.
BasicViewportUI
Constructs a
BasicViewportUI
.
BASSA_VAH
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Bassa Vah".
BASSA_VAH
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Bassa Vah" Unicode character block.
BATAK
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Batak".
BATAK
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Batak" Unicode character block.
BATCHSIZE
- Static variable in interface javax.naming.
Context
Constant that holds the name of the environment property for
 specifying the batch size to use when returning data via the
 service's protocol.
BatchUpdateException
- Exception Class in
java.sql
The subclass of
SQLException
thrown when an error
 occurs during a batch update operation.
BatchUpdateException()
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object.
BatchUpdateException(int[])
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with a given
updateCounts
.
BatchUpdateException(int[], Throwable)
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with a
 given
cause
and
updateCounts
.
BatchUpdateException(String, int[])
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with a given
reason
and
updateCounts
.
BatchUpdateException(String, int[], Throwable)
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with
 a given
reason
,
cause
and
updateCounts
.
BatchUpdateException(String, String, int[])
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with a given
reason
,
SQLState
and
updateCounts
.
BatchUpdateException(String, String, int[], Throwable)
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with
 a given
reason
,
SQLState
,
cause
, and
updateCounts
.
BatchUpdateException(String, String, int, int[])
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with a given
reason
,
SQLState
,
vendorCode
and
updateCounts
.
BatchUpdateException(String, String, int, int[], Throwable)
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with
 a given
reason
,
SQLState
,
vendorCode
cause
and
updateCounts
.
BatchUpdateException(String, String, int, long[], Throwable)
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with
 a given
reason
,
SQLState
,
vendorCode
cause
and
updateCounts
.
BatchUpdateException(Throwable)
- Constructor for exception class java.sql.
BatchUpdateException
Constructs a
BatchUpdateException
object initialized with
  a given
cause
.
BC
- Static variable in class java.util.
GregorianCalendar
Value of the
ERA
field indicating
 the period before the common era (before Christ), also known as BCE.
BCE
- Enum constant in enum class java.time.chrono.
IsoEra
The singleton instance for the era before the current one, 'Before Current Era',
 which has the numeric value 0.
bcmListeners
- Variable in class java.beans.beancontext.
BeanContextSupport
all accesses to the
protected ArrayList bcmListeners
field
 shall be synchronized on that object.
bcsChildren()
- Method in class java.beans.beancontext.
BeanContextSupport
Returns an iterator of all children
 of this
BeanContext
.
bcsListeners
- Variable in class java.beans.beancontext.
BeanContextServicesSupport
List of
BeanContextServicesListener
objects.
bcsPreDeserializationHook(ObjectInputStream)
- Method in class java.beans.beancontext.
BeanContextServicesSupport
called from BeanContextSupport readObject before it deserializes the
 children ...
bcsPreDeserializationHook(ObjectInputStream)
- Method in class java.beans.beancontext.
BeanContextSupport
called by readObject after defaultReadObject() but prior to
 deserialization of any children.
bcsPreSerializationHook(ObjectOutputStream)
- Method in class java.beans.beancontext.
BeanContextServicesSupport
called from BeanContextSupport writeObject before it serializes the
 children ...
bcsPreSerializationHook(ObjectOutputStream)
- Method in class java.beans.beancontext.
BeanContextSupport
called by writeObject after defaultWriteObject() but prior to
 serialization of currently serializable children.
BE
- Enum constant in enum class java.time.chrono.
ThaiBuddhistEra
The singleton instance for the current era, 'Buddhist Era',
 which has the numeric value 1.
beanContext
- Variable in class java.beans.beancontext.
BeanContextChildSupport
The bean context.
BeanContext
- Interface in
java.beans.beancontext
The BeanContext acts a logical hierarchical container for JavaBeans.
BeanContextChild
- Interface in
java.beans.beancontext
JavaBeans wishing to be nested within, and obtain a reference to their
 execution environment, or context, as defined by the BeanContext
 sub-interface shall implement this interface.
BeanContextChildComponentProxy
- Interface in
java.beans.beancontext
This interface is implemented by
BeanContextChildren
that have an AWT
Component
associated with them.
beanContextChildPeer
- Variable in class java.beans.beancontext.
BeanContextChildSupport
The
BeanContext
in which
 this
BeanContextChild
is nested.
BeanContextChildSupport
- Class in
java.beans.beancontext
This is a general support class to provide support for implementing the
 BeanContextChild protocol.
BeanContextChildSupport()
- Constructor for class java.beans.beancontext.
BeanContextChildSupport
construct a BeanContextChildSupport where this class has been
 subclassed in order to implement the JavaBean component itself.
BeanContextChildSupport(BeanContextChild)
- Constructor for class java.beans.beancontext.
BeanContextChildSupport
construct a BeanContextChildSupport where the JavaBean component
 itself implements BeanContextChild, and encapsulates this, delegating
 that interface to this implementation
BeanContextContainerProxy
- Interface in
java.beans.beancontext
This interface is implemented by BeanContexts' that have an AWT Container
 associated with them.
BeanContextEvent
- Class in
java.beans.beancontext
BeanContextEvent
is the abstract root event class
 for all events emitted
 from, and pertaining to the semantics of, a
BeanContext
.
BeanContextEvent(BeanContext)
- Constructor for class java.beans.beancontext.
BeanContextEvent
Construct a BeanContextEvent
BeanContextMembershipEvent
- Class in
java.beans.beancontext
A
BeanContextMembershipEvent
encapsulates
 the list of children added to, or removed from,
 the membership of a particular
BeanContext
.
BeanContextMembershipEvent(BeanContext, Object[])
- Constructor for class java.beans.beancontext.
BeanContextMembershipEvent
Construct a BeanContextMembershipEvent
BeanContextMembershipEvent(BeanContext, Collection)
- Constructor for class java.beans.beancontext.
BeanContextMembershipEvent
Construct a BeanContextMembershipEvent
BeanContextMembershipListener
- Interface in
java.beans.beancontext
Compliant BeanContexts fire events on this interface when the state of
 the membership of the BeanContext changes.
BeanContextProxy
- Interface in
java.beans.beancontext
This interface is implemented by a JavaBean that does
 not directly have a BeanContext(Child) associated with
 it (via implementing that interface or a subinterface thereof),
 but has a public BeanContext(Child) delegated from it.
BeanContextServiceAvailableEvent
- Class in
java.beans.beancontext
This event type is used by the BeanContextServicesListener in order to
 identify the service being registered.
BeanContextServiceAvailableEvent(BeanContextServices, Class<?>)
- Constructor for class java.beans.beancontext.
BeanContextServiceAvailableEvent
Construct a
BeanContextAvailableServiceEvent
.
BeanContextServiceProvider
- Interface in
java.beans.beancontext
One of the primary functions of a BeanContext is to act a as rendezvous
 between JavaBeans, and BeanContextServiceProviders.
BeanContextServiceProviderBeanInfo
- Interface in
java.beans.beancontext
A BeanContextServiceProvider implementor who wishes to provide explicit
 information about the services their bean may provide shall implement a
 BeanInfo class that implements this BeanInfo subinterface and provides
 explicit information about the methods, properties, events, etc, of their
 services.
BeanContextServiceRevokedEvent
- Class in
java.beans.beancontext
This event type is used by the
BeanContextServiceRevokedListener
in order to
 identify the service being revoked.
BeanContextServiceRevokedEvent(BeanContextServices, Class<?>, boolean)
- Constructor for class java.beans.beancontext.
BeanContextServiceRevokedEvent
Construct a
BeanContextServiceEvent
.
BeanContextServiceRevokedListener
- Interface in
java.beans.beancontext
The listener interface for receiving
BeanContextServiceRevokedEvent
objects.
BeanContextServices
- Interface in
java.beans.beancontext
The BeanContextServices interface provides a mechanism for a BeanContext
 to expose generic "services" to the BeanContextChild objects within.
BeanContextServicesListener
- Interface in
java.beans.beancontext
The listener interface for receiving
BeanContextServiceAvailableEvent
objects.
BeanContextServicesSupport
- Class in
java.beans.beancontext
This helper class provides a utility implementation of the
 java.beans.beancontext.BeanContextServices interface.
BeanContextServicesSupport()
- Constructor for class java.beans.beancontext.
BeanContextServicesSupport
Create an instance that is not a delegate of another object
BeanContextServicesSupport(BeanContextServices)
- Constructor for class java.beans.beancontext.
BeanContextServicesSupport
Create an instance with a peer
BeanContextServicesSupport(BeanContextServices, Locale)
- Constructor for class java.beans.beancontext.
BeanContextServicesSupport
Create an instance using the specified locale
BeanContextServicesSupport(BeanContextServices, Locale, boolean)
- Constructor for class java.beans.beancontext.
BeanContextServicesSupport
Create an instance using the specified Locale and design mode.
BeanContextServicesSupport(BeanContextServices, Locale, boolean, boolean)
- Constructor for class java.beans.beancontext.
BeanContextServicesSupport
Construct a BeanContextServicesSupport instance
BeanContextServicesSupport.BCSSChild
- Class in
java.beans.beancontext
A protected nested class containing per-child information
 in the
children
hashtable.
BeanContextServicesSupport.BCSSProxyServiceProvider
- Class in
java.beans.beancontext
Subclasses may subclass this nested class to represent a proxy for
 each BeanContextServiceProvider.
BeanContextServicesSupport.BCSSServiceProvider
- Class in
java.beans.beancontext
subclasses may subclass this nested class to add behaviors for
 each BeanContextServicesProvider.
BeanContextSupport
- Class in
java.beans.beancontext
This helper class provides a utility implementation of the
 java.beans.beancontext.BeanContext interface.
BeanContextSupport()
- Constructor for class java.beans.beancontext.
BeanContextSupport
Create an instance that is not a delegate of another object
BeanContextSupport(BeanContext)
- Constructor for class java.beans.beancontext.
BeanContextSupport
Create an instance using with a default locale
BeanContextSupport(BeanContext, Locale)
- Constructor for class java.beans.beancontext.
BeanContextSupport
Create an instance using the specified locale
BeanContextSupport(BeanContext, Locale, boolean)
- Constructor for class java.beans.beancontext.
BeanContextSupport
Create an instance using the specified Locale and design mode.
BeanContextSupport(BeanContext, Locale, boolean, boolean)
- Constructor for class java.beans.beancontext.
BeanContextSupport
Construct a BeanContextSupport instance
BeanContextSupport.BCSChild
- Class in
java.beans.beancontext
A protected nested class containing per-child information
 in the
children
hashtable.
BeanContextSupport.BCSIterator
- Class in
java.beans.beancontext
protected final subclass that encapsulates an iterator but implements
 a noop remove() method.
BeanDescriptor
- Class in
java.beans
A BeanDescriptor provides global information about a "bean",
 including its Java class, its displayName, etc.
BeanDescriptor(Class<?>)
- Constructor for class java.beans.
BeanDescriptor
Create a BeanDescriptor for a bean that doesn't have a customizer.
BeanDescriptor(Class<?>, Class<?>)
- Constructor for class java.beans.
BeanDescriptor
Create a BeanDescriptor for a bean that has a customizer.
BeanInfo
- Interface in
java.beans
Use the
BeanInfo
interface
 to create a
BeanInfo
class
 and provide explicit information about the methods,
 properties, events, and other features of your beans.
BeanProperty
- Annotation Interface in
java.beans
An annotation used to specify some property-related information for the
 automatically generated
BeanInfo
classes.
Beans
- Class in
java.beans
This class provides some general purpose beans control methods.
Beans()
- Constructor for class java.beans.
Beans
Constructs a
Beans
.
BeansLinker
- Class in
jdk.dynalink.beans
A linker for ordinary Java objects.
BeansLinker()
- Constructor for class jdk.dynalink.beans.
BeansLinker
Creates a new beans linker.
BeansLinker(MissingMemberHandlerFactory)
- Constructor for class jdk.dynalink.beans.
BeansLinker
Creates a new beans linker with the specified factory for creating
 missing member handlers.
beep()
- Method in class java.awt.
Toolkit
Emits an audio beep depending on native system settings and hardware
 capabilities.
beepAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the action to create a beep.
BeepAction()
- Constructor for class javax.swing.text.
DefaultEditorKit.BeepAction
Create this object with the appropriate identifier.
before(Object)
- Method in class java.util.
Calendar
Returns whether this
Calendar
represents a time
 before the time represented by the specified
Object
.
before(Timestamp)
- Method in class java.sql.
Timestamp
Indicates whether this
Timestamp
object is
 earlier than the given
Timestamp
object.
before(Date)
- Method in class java.util.
Date
Tests if this date is before the specified date.
BEFORE
- Enum constant in enum class javax.swing.
RowFilter.ComparisonType
Indicates that entries with a value before the supplied
 value should be included.
BEFORE_BE
- Enum constant in enum class java.time.chrono.
ThaiBuddhistEra
The singleton instance for the era before the current one, 'Before Buddhist Era',
 which has the numeric value 0.
BEFORE_FIRST_LINE
- Static variable in class java.awt.
BorderLayout
Synonym for PAGE_START.
BEFORE_LINE_BEGINS
- Static variable in class java.awt.
BorderLayout
Synonym for LINE_START.
BEFORE_ROC
- Enum constant in enum class java.time.chrono.
MinguoEra
The singleton instance for the era before the current one, 'Before Republic of China Era',
 which has the numeric value 0.
beforeExecute(Thread, Runnable)
- Method in class java.util.concurrent.
ThreadPoolExecutor
Method invoked prior to executing the given Runnable in the
 given thread.
beforeFirst()
- Method in interface java.sql.
ResultSet
Moves the cursor to the front of
 this
ResultSet
object, just before the
 first row.
beforeHandler(String, Consumer<HttpExchange>)
- Static method in class com.sun.net.httpserver.
Filter
Returns a pre-processing
Filter
with the given description and
 operation.
beforeOffset(int)
- Static method in class java.awt.font.
TextHitInfo
Creates a
TextHitInfo
at the specified offset,
 associated with the character before the offset.
begin()
- Method in class java.nio.channels.spi.
AbstractInterruptibleChannel
Marks the beginning of an I/O operation that might block indefinitely.
begin()
- Method in class java.nio.channels.spi.
AbstractSelector
Marks the beginning of an I/O operation that might block indefinitely.
begin()
- Method in class jdk.jfr.
Event
Starts the timing of this event.
beginAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of the document.
beginDragDividerLocation
- Variable in class javax.swing.plaf.basic.
BasicSplitPaneUI
Location of the divider when the dragging session began.
beginDraggingFrame(JComponent)
- Method in class javax.swing.
DefaultDesktopManager
beginDraggingFrame(JComponent)
- Method in interface javax.swing.
DesktopManager
This method is normally called when the user has indicated that
 they will begin dragging a component around.
beginExclusive()
- Method in class javax.smartcardio.
Card
Requests exclusive access to this card.
beginHandshake()
- Method in class javax.net.ssl.
SSLEngine
Initiates handshaking (initial or renegotiation) on this SSLEngine.
beginLineAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of a line.
beginLineUpAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of the current line or up to the
 beginning of the previous line if the caret is
 already at the beginning of the line.
beginParagraphAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of a paragraph.
beginRequest()
- Method in interface java.sql.
Connection
Hints to the driver that a request, an independent unit of work, is beginning
 on this connection.
beginResizingFrame(JComponent, int)
- Method in class javax.swing.
DefaultDesktopManager
beginResizingFrame(JComponent, int)
- Method in interface javax.swing.
DesktopManager
This method is normally called when the user has indicated that
 they will begin resizing the frame.
beginUpdate()
- Method in class javax.swing.undo.
UndoableEditSupport
Starts a compound edit update.
beginWordAction
- Static variable in class javax.swing.text.
DefaultEditorKit
Name of the
Action
for moving the caret
 to the beginning of a word.
BELOW_BASELINE
- Static variable in class java.awt.
GridBagConstraints
Possible value for the
anchor
field.
BELOW_BASELINE_LEADING
- Static variable in class java.awt.
GridBagConstraints
Possible value for the
anchor
field.
BELOW_BASELINE_TRAILING
- Static variable in class java.awt.
GridBagConstraints
Possible value for the
anchor
field.
BELOW_BOTTOM
- Static variable in class javax.swing.border.
TitledBorder
Position the title below the border's bottom line.
BELOW_TOP
- Static variable in class javax.swing.border.
TitledBorder
Position the title below the border's top line.
BENGALI
- Enum constant in enum class java.awt.font.
NumericShaper.Range
The Bengali range with the Bengali digits.
BENGALI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Bengali".
BENGALI
- Static variable in class java.awt.font.
NumericShaper
Identifies the BENGALI range and decimal base.
BENGALI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Bengali" Unicode character block.
BEST_COMPRESSION
- Static variable in class java.util.zip.
Deflater
Compression level for best compression.
BEST_SPEED
- Static variable in class java.util.zip.
Deflater
Compression level for fastest compression.
bestRowNotPseudo
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that the best row identifier is NOT a pseudo column.
bestRowPseudo
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that the best row identifier is a pseudo column.
bestRowSession
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that the scope of the best row identifier is
 the remainder of the current session.
bestRowTemporary
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that the scope of the best row identifier is
 very temporary, lasting only while the
 row is being used.
bestRowTransaction
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that the scope of the best row identifier is
 the remainder of the current transaction.
bestRowUnknown
- Static variable in interface java.sql.
DatabaseMetaData
Indicates that the best row identifier may or may not be a pseudo column.
between(ChronoLocalDate, ChronoLocalDate)
- Static method in interface java.time.chrono.
ChronoPeriod
Obtains a
ChronoPeriod
consisting of amount of time between two dates.
between(LocalDate, LocalDate)
- Static method in class java.time.
Period
Obtains a
Period
consisting of the number of years, months,
 and days between two dates.
between(Temporal, Temporal)
- Static method in class java.time.
Duration
Obtains a
Duration
representing the duration between two temporal objects.
between(Temporal, Temporal)
- Method in enum class java.time.temporal.
ChronoUnit
between(Temporal, Temporal)
- Method in interface java.time.temporal.
TemporalUnit
Calculates the amount of time between two temporal objects.
between(ValueExp, ValueExp, ValueExp)
- Static method in class javax.management.
Query
Returns a query expression that represents the constraint that one
 value is between two other values.
BevelBorder
- Class in
javax.swing.border
A class which implements a simple two-line bevel border.
BevelBorder(int)
- Constructor for class javax.swing.border.
BevelBorder
Creates a bevel border with the specified type and whose
 colors will be derived from the background color of the
 component passed into the paintBorder method.
BevelBorder(int, Color, Color)
- Constructor for class javax.swing.border.
BevelBorder
Creates a bevel border with the specified type, highlight and
 shadow colors.
BevelBorder(int, Color, Color, Color, Color)
- Constructor for class javax.swing.border.
BevelBorder
Creates a bevel border with the specified type, highlight and
 shadow colors.
BevelBorderUIResource(int)
- Constructor for class javax.swing.plaf.
BorderUIResource.BevelBorderUIResource
Constructs a
BevelBorderUIResource
.
BevelBorderUIResource(int, Color, Color)
- Constructor for class javax.swing.plaf.
BorderUIResource.BevelBorderUIResource
Constructs a
BevelBorderUIResource
.
BevelBorderUIResource(int, Color, Color, Color, Color)
- Constructor for class javax.swing.plaf.
BorderUIResource.BevelBorderUIResource
Constructs a
BevelBorderUIResource
.
bevelType
- Variable in class javax.swing.border.
BevelBorder
The bevel type.
BGCOLOR
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "bgcolor"
BHAIKSUKI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Bhaiksuki".
BHAIKSUKI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Bhaiksuki" Unicode
 character block.
BiConsumer<T,
U>
- Interface in
java.util.function
Represents an operation that accepts two input arguments and returns no
 result.
Bidi
- Class in
java.text
This class implements the Unicode Bidirectional Algorithm.
Bidi(char[], int, byte[], int, int, int)
- Constructor for class java.text.
Bidi
Create Bidi from the given text, embedding, and direction information.
Bidi(String, int)
- Constructor for class java.text.
Bidi
Create Bidi from the given paragraph of text and base direction.
Bidi(AttributedCharacterIterator)
- Constructor for class java.text.
Bidi
Create Bidi from the given paragraph of text.
BIDI_EMBEDDING
- Static variable in class java.awt.font.
TextAttribute
Attribute key for the embedding level of the text.
BidiElementName
- Static variable in class javax.swing.text.
AbstractDocument
Name of elements used to hold a unidirectional run
BidiLevel
- Static variable in class javax.swing.text.
StyleConstants
Bidirectional level of a character as assigned by the Unicode bidi
 algorithm.
BiFunction<T,
U,
R>
- Interface in
java.util.function
Represents a function that accepts two arguments and produces a result.
BIG
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <big>
BIG_ENDIAN
- Static variable in class java.nio.
ByteOrder
Constant denoting big-endian byte order.
BigDecimal
- Class in
java.math
Immutable, arbitrary-precision signed decimal numbers.
BigDecimal(char[])
- Constructor for class java.math.
BigDecimal
Translates a character array representation of a
BigDecimal
into a
BigDecimal
, accepting the
 same sequence of characters as the
BigDecimal(String)
constructor.
BigDecimal(char[], int, int)
- Constructor for class java.math.
BigDecimal
Translates a character array representation of a
BigDecimal
into a
BigDecimal
, accepting the
 same sequence of characters as the
BigDecimal(String)
constructor, while allowing a sub-array to be specified.
BigDecimal(char[], int, int, MathContext)
- Constructor for class java.math.
BigDecimal
Translates a character array representation of a
BigDecimal
into a
BigDecimal
, accepting the
 same sequence of characters as the
BigDecimal(String)
constructor, while allowing a sub-array to be specified and
 with rounding according to the context settings.
BigDecimal(char[], MathContext)
- Constructor for class java.math.
BigDecimal
Translates a character array representation of a
BigDecimal
into a
BigDecimal
, accepting the
 same sequence of characters as the
BigDecimal(String)
constructor and with rounding according to the context
 settings.
BigDecimal(double)
- Constructor for class java.math.
BigDecimal
Translates a
double
into a
BigDecimal
which
 is the exact decimal representation of the
double
's
 binary floating-point value.
BigDecimal(double, MathContext)
- Constructor for class java.math.
BigDecimal
Translates a
double
into a
BigDecimal
, with
 rounding according to the context settings.
BigDecimal(int)
- Constructor for class java.math.
BigDecimal
Translates an
int
into a
BigDecimal
.
BigDecimal(int, MathContext)
- Constructor for class java.math.
BigDecimal
Translates an
int
into a
BigDecimal
, with
 rounding according to the context settings.
BigDecimal(long)
- Constructor for class java.math.
BigDecimal
Translates a
long
into a
BigDecimal
.
BigDecimal(long, MathContext)
- Constructor for class java.math.
BigDecimal
Translates a
long
into a
BigDecimal
, with
 rounding according to the context settings.
BigDecimal(String)
- Constructor for class java.math.
BigDecimal
Translates the string representation of a
BigDecimal
into a
BigDecimal
.
BigDecimal(String, MathContext)
- Constructor for class java.math.
BigDecimal
Translates the string representation of a
BigDecimal
into a
BigDecimal
, accepting the same strings as the
BigDecimal(String)
constructor, with rounding
 according to the context settings.
BigDecimal(BigInteger)
- Constructor for class java.math.
BigDecimal
Translates a
BigInteger
into a
BigDecimal
.
BigDecimal(BigInteger, int)
- Constructor for class java.math.
BigDecimal
Translates a
BigInteger
unscaled value and an
int
scale into a
BigDecimal
.
BigDecimal(BigInteger, int, MathContext)
- Constructor for class java.math.
BigDecimal
Translates a
BigInteger
unscaled value and an
int
scale into a
BigDecimal
, with rounding
 according to the context settings.
BigDecimal(BigInteger, MathContext)
- Constructor for class java.math.
BigDecimal
Translates a
BigInteger
into a
BigDecimal
rounding according to the context settings.
BIGDECIMAL
- Static variable in class javax.management.openmbean.
SimpleType
The
SimpleType
instance describing values whose
 Java class name is
java.math.BigDecimal
.
bigEndian
- Variable in class javax.sound.sampled.
AudioFormat
Indicates whether the audio data is stored in big-endian or little-endian
 order.
BIGINT
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
BIGINT
.
BIGINT
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred
 to as a type code, that identifies the generic SQL type
BIGINT
.
BigInteger
- Class in
java.math
Immutable arbitrary-precision integers.
BigInteger(byte[])
- Constructor for class java.math.
BigInteger
Translates a byte array containing the two's-complement binary
 representation of a BigInteger into a BigInteger.
BigInteger(byte[], int, int)
- Constructor for class java.math.
BigInteger
Translates a byte sub-array containing the two's-complement binary
 representation of a BigInteger into a BigInteger.
BigInteger(int, byte[])
- Constructor for class java.math.
BigInteger
Translates the sign-magnitude representation of a BigInteger into a
 BigInteger.
BigInteger(int, byte[], int, int)
- Constructor for class java.math.
BigInteger
Translates the sign-magnitude representation of a BigInteger into a
 BigInteger.
BigInteger(int, int, Random)
- Constructor for class java.math.
BigInteger
Constructs a randomly generated positive BigInteger that is probably
 prime, with the specified bitLength.
BigInteger(int, Random)
- Constructor for class java.math.
BigInteger
Constructs a randomly generated BigInteger, uniformly distributed over
 the range 0 to (2
numBits
- 1), inclusive.
BigInteger(String)
- Constructor for class java.math.
BigInteger
Translates the decimal String representation of a BigInteger
 into a BigInteger.
BigInteger(String, int)
- Constructor for class java.math.
BigInteger
Translates the String representation of a BigInteger in the
 specified radix into a BigInteger.
BIGINTEGER
- Static variable in class javax.management.openmbean.
SimpleType
The
SimpleType
instance describing values whose
 Java class name is
java.math.BigInteger
.
BINARY
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
BINARY
.
BINARY
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred
 to as a type code, that identifies the generic SQL type
BINARY
.
BINARY_STREAM_PARAM
- Static variable in class javax.sql.rowset.
BaseRowSet
A constant indicating to a
RowSetReaderImpl
object
 that a given parameter is a binary stream.
Binary names
- Search tag in class java.lang.ClassLoader
Section
BinaryOperator<T>
- Interface in
java.util.function
Represents an operation upon two operands of the same type, producing a result
 of the same type as the operands.
BinaryRefAddr
- Class in
javax.naming
This class represents the binary form of the address of
 a communications end-point.
BinaryRefAddr(String, byte[])
- Constructor for class javax.naming.
BinaryRefAddr
Constructs a new instance of BinaryRefAddr using its address type and a byte
 array for contents.
BinaryRefAddr(String, byte[], int, int)
- Constructor for class javax.naming.
BinaryRefAddr
Constructs a new instance of BinaryRefAddr using its address type and
 a region of a byte array for contents.
binarySearch(byte[], byte)
- Static method in class java.util.
Arrays
Searches the specified array of bytes for the specified value using the
 binary search algorithm.
binarySearch(byte[], int, int, byte)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array of bytes for the specified value using the
 binary search algorithm.
binarySearch(char[], char)
- Static method in class java.util.
Arrays
Searches the specified array of chars for the specified value using the
 binary search algorithm.
binarySearch(char[], int, int, char)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array of chars for the specified value using the
 binary search algorithm.
binarySearch(double[], double)
- Static method in class java.util.
Arrays
Searches the specified array of doubles for the specified value using
 the binary search algorithm.
binarySearch(double[], int, int, double)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array of doubles for the specified value using
 the binary search algorithm.
binarySearch(float[], float)
- Static method in class java.util.
Arrays
Searches the specified array of floats for the specified value using
 the binary search algorithm.
binarySearch(float[], int, int, float)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array of floats for the specified value using
 the binary search algorithm.
binarySearch(int[], int)
- Static method in class java.util.
Arrays
Searches the specified array of ints for the specified value using the
 binary search algorithm.
binarySearch(int[], int, int, int)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array of ints for the specified value using the
 binary search algorithm.
binarySearch(long[], int, int, long)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array of longs for the specified value using the
 binary search algorithm.
binarySearch(long[], long)
- Static method in class java.util.
Arrays
Searches the specified array of longs for the specified value using the
 binary search algorithm.
binarySearch(short[], int, int, short)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array of shorts for the specified value using
 the binary search algorithm.
binarySearch(short[], short)
- Static method in class java.util.
Arrays
Searches the specified array of shorts for the specified value using
 the binary search algorithm.
binarySearch(Object[], int, int, Object)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array for the specified object using the binary
 search algorithm.
binarySearch(Object[], Object)
- Static method in class java.util.
Arrays
Searches the specified array for the specified object using the binary
 search algorithm.
binarySearch(List<? extends Comparable<? super T>>, T)
- Static method in class java.util.
Collections
Searches the specified list for the specified object using the binary
 search algorithm.
binarySearch(List<? extends T>, T, Comparator<? super T>)
- Static method in class java.util.
Collections
Searches the specified list for the specified object using the binary
 search algorithm.
binarySearch(T[], int, int, T, Comparator<? super T>)
- Static method in class java.util.
Arrays
Searches a range of
 the specified array for the specified object using the binary
 search algorithm.
binarySearch(T[], T, Comparator<? super T>)
- Static method in class java.util.
Arrays
Searches the specified array for the specified object using the binary
 search algorithm.
binaryStream
- Variable in class javax.sql.rowset.
BaseRowSet
The
InputStream
object that will be
 returned by the method
getBinaryStream
, which is
 specified in the
ResultSet
interface.
BinaryTree
- Interface in
com.sun.source.tree
A tree node for a binary expression.
bind(int, InetAddress)
- Method in class java.net.
DatagramSocketImpl
Binds a datagram socket to a local port and address.
bind(Object, String, MethodType)
- Method in class java.lang.invoke.
MethodHandles.Lookup
Produces an early-bound method handle for a non-static method.
bind(String, Object)
- Method in interface javax.naming.
Context
Binds a name to an object.
bind(String, Object)
- Method in class javax.naming.
InitialContext
bind(String, Object, Attributes)
- Method in interface javax.naming.directory.
DirContext
Binds a name to an object, along with associated attributes.
bind(String, Object, Attributes)
- Method in class javax.naming.directory.
InitialDirContext
bind(String, Remote)
- Static method in class java.rmi.
Naming
Binds the specified
name
to a remote object.
bind(String, Remote)
- Method in interface java.rmi.registry.
Registry
Binds a remote reference to the specified
name
in
 this registry.
bind(InetAddress, int)
- Method in class java.net.
SocketImpl
Binds this socket to the specified local IP address and port number.
bind(InetSocketAddress, int)
- Method in class com.sun.net.httpserver.
HttpServer
Binds a currently unbound
HttpServer
to the given address and
 port number.
bind(SocketAddress)
- Method in class com.sun.nio.sctp.
SctpChannel
Binds the channel's socket to a local address.
bind(SocketAddress)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Binds the channel's socket to a local address and configures the socket
 to listen for connections.
bind(SocketAddress)
- Method in class com.sun.nio.sctp.
SctpServerChannel
Binds the channel's socket to a local address and configures the socket
 to listen for associations.
bind(SocketAddress)
- Method in class java.net.
DatagramSocket
Binds this DatagramSocket to a specific address and port.
bind(SocketAddress)
- Method in class java.net.
ServerSocket
Binds the
ServerSocket
to a specific address
 (IP address and port number).
bind(SocketAddress)
- Method in class java.net.
Socket
Binds the socket to a local address.
bind(SocketAddress)
- Method in class java.nio.channels.
AsynchronousServerSocketChannel
Binds the channel's socket to a local address and configures the socket to
 listen for connections.
bind(SocketAddress)
- Method in class java.nio.channels.
AsynchronousSocketChannel
bind(SocketAddress)
- Method in class java.nio.channels.
DatagramChannel
bind(SocketAddress)
- Method in interface java.nio.channels.
NetworkChannel
Binds the channel's socket to a local address.
bind(SocketAddress)
- Method in class java.nio.channels.
ServerSocketChannel
Binds the channel's socket to a local address and configures the socket
 to listen for connections.
bind(SocketAddress)
- Method in class java.nio.channels.
SocketChannel
Binds the channel's socket to a local address.
bind(SocketAddress, int)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Binds the channel's socket to a local address and configures the socket
 to listen for connections.
bind(SocketAddress, int)
- Method in class com.sun.nio.sctp.
SctpServerChannel
Binds the channel's socket to a local address and configures the socket
 to listen for associations.
bind(SocketAddress, int)
- Method in class java.net.
ServerSocket
Binds the
ServerSocket
to a specific address
 (IP address and port number).
bind(SocketAddress, int)
- Method in class java.nio.channels.
AsynchronousServerSocketChannel
Binds the channel's socket to a local address and configures the socket to
 listen for connections.
bind(SocketAddress, int)
- Method in class java.nio.channels.
ServerSocketChannel
Binds the channel's socket to a local address and configures the socket to
 listen for connections.
bind(Name, Object)
- Method in interface javax.naming.
Context
Binds a name to an object.
bind(Name, Object)
- Method in class javax.naming.
InitialContext
bind(Name, Object, Attributes)
- Method in interface javax.naming.directory.
DirContext
Binds a name to an object, along with associated attributes.
bind(Name, Object, Attributes)
- Method in class javax.naming.directory.
InitialDirContext
BIND
- Static variable in class javax.print.attribute.standard.
Finishings
This value indicates that a binding is to be applied to the document; the
 type and placement of the binding is site-defined.
bindAddress(InetAddress)
- Method in class com.sun.nio.sctp.
SctpChannel
Adds the given address to the bound addresses for the channel's
 socket.
bindAddress(InetAddress)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Adds the given address to the bound addresses for the channel's
 socket.
bindAddress(InetAddress)
- Method in class com.sun.nio.sctp.
SctpServerChannel
Adds the given address to the bound addresses for the channel's
 socket.
BindException
- Exception Class in
java.net
Signals that an error occurred while attempting to bind a
 socket to a local address and port.
BindException()
- Constructor for exception class java.net.
BindException
Construct a new BindException with no detailed message.
BindException(String)
- Constructor for exception class java.net.
BindException
Constructs a new BindException with the specified detail
 message as to why the bind error occurred.
Binding
- Class in
javax.naming
This class represents a name-to-object binding found in a context.
Binding(String, Object)
- Constructor for class javax.naming.
Binding
Constructs an instance of a Binding given its name and object.
Binding(String, Object, boolean)
- Constructor for class javax.naming.
Binding
Constructs an instance of a Binding given its name, object, and whether
 the name is relative.
Binding(String, String, Object)
- Constructor for class javax.naming.
Binding
Constructs an instance of a Binding given its name, class name, and object.
Binding(String, String, Object, boolean)
- Constructor for class javax.naming.
Binding
Constructs an instance of a Binding given its
 name, class name, object, and whether the name is relative.
BINDING_PATTERN
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
BindingPatternTree
.
BINDING_VARIABLE
- Enum constant in enum class javax.lang.model.element.
ElementKind
A binding variable in a pattern.
BindingPatternTree
- Interface in
com.sun.source.tree
A binding pattern tree
Bindings
- Search tag in package javax.naming
Section
Bindings
- Interface in
javax.script
A mapping of key/value pairs, all of whose keys are
Strings
.
Bindings are per-thread
- Search tag in class java.lang.ScopedValue
Section
bindTo(Object)
- Method in class java.lang.invoke.
MethodHandle
Binds a value
x
to the first argument of a method handle, without invoking it.
BiPredicate<T,
U>
- Interface in
java.util.function
Represents a predicate (boolean-valued function) of two arguments.
BIT
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
BIT
.
BIT
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred
 to as a type code, that identifies the generic SQL type
BIT
.
BIT_COUNT
- Static variable in class jdk.incubator.vector.
VectorOperators
Produce
bitCount(a)
BIT_DEPTH_MULTI
- Static variable in class java.awt.
DisplayMode
Value of the bit depth if multiple bit depths are supported in this
 display mode.
bitCount()
- Method in class java.math.
BigInteger
Returns the number of bits in the two's complement representation
 of this BigInteger that differ from its sign bit.
bitCount(int)
- Static method in class java.lang.
Integer
Returns the number of one-bits in the two's complement binary
 representation of the specified
int
value.
bitCount(long)
- Static method in class java.lang.
Long
Returns the number of one-bits in the two's complement binary
 representation of the specified
long
value.
bitLength()
- Method in class java.math.
BigInteger
Returns the number of bits in the minimal two's-complement
 representation of this BigInteger,
excluding
a sign bit.
BITMASK
- Static variable in interface java.awt.
Transparency
Represents image data that is guaranteed to be either completely
 opaque, with an alpha value of 1.0, or completely transparent,
 with an alpha value of 0.0.
bitOffset
- Variable in class javax.imageio.stream.
ImageInputStreamImpl
The current bit offset within the stream.
BITS
- Static variable in annotation interface jdk.jfr.
DataAmount
Unit for bits
BitSet
- Class in
java.util
This class implements a vector of bits that grows as needed.
BitSet()
- Constructor for class java.util.
BitSet
Creates a new bit set.
BitSet(int)
- Constructor for class java.util.
BitSet
Creates a bit set whose initial size is large enough to explicitly
 represent bits with indices in the range
0
through
nbits-1
.
bitSize()
- Method in class jdk.incubator.vector.
Vector
Returns the total size, in bits, of this vector.
BITWISE_BLEND
- Static variable in class jdk.incubator.vector.
VectorOperators
Produce
a^((a^b)&c)
.
BITWISE_COMPLEMENT
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
UnaryTree
representing bitwise
 complement operator
~
.
bitwiseBlend(byte, byte)
- Method in class jdk.incubator.vector.
ByteVector
Blends together the bits of a vector and a scalar under
 the control of another scalar, which supplies mask bits.
bitwiseBlend(byte, Vector<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Blends together the bits of a vector and a scalar under
 the control of another vector, which supplies mask bits.
bitwiseBlend(int, int)
- Method in class jdk.incubator.vector.
IntVector
Blends together the bits of a vector and a scalar under
 the control of another scalar, which supplies mask bits.
bitwiseBlend(int, Vector<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Blends together the bits of a vector and a scalar under
 the control of another vector, which supplies mask bits.
bitwiseBlend(long, long)
- Method in class jdk.incubator.vector.
LongVector
Blends together the bits of a vector and a scalar under
 the control of another scalar, which supplies mask bits.
bitwiseBlend(long, Vector<Long>)
- Method in class jdk.incubator.vector.
LongVector
Blends together the bits of a vector and a scalar under
 the control of another vector, which supplies mask bits.
bitwiseBlend(short, short)
- Method in class jdk.incubator.vector.
ShortVector
Blends together the bits of a vector and a scalar under
 the control of another scalar, which supplies mask bits.
bitwiseBlend(short, Vector<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Blends together the bits of a vector and a scalar under
 the control of another vector, which supplies mask bits.
bitwiseBlend(Vector<Byte>, byte)
- Method in class jdk.incubator.vector.
ByteVector
Blends together the bits of two vectors under
 the control of a scalar, which supplies mask bits.
bitwiseBlend(Vector<Byte>, Vector<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Blends together the bits of two vectors under
 the control of a third, which supplies mask bits.
bitwiseBlend(Vector<Integer>, int)
- Method in class jdk.incubator.vector.
IntVector
Blends together the bits of two vectors under
 the control of a scalar, which supplies mask bits.
bitwiseBlend(Vector<Integer>, Vector<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Blends together the bits of two vectors under
 the control of a third, which supplies mask bits.
bitwiseBlend(Vector<Long>, long)
- Method in class jdk.incubator.vector.
LongVector
Blends together the bits of two vectors under
 the control of a scalar, which supplies mask bits.
bitwiseBlend(Vector<Long>, Vector<Long>)
- Method in class jdk.incubator.vector.
LongVector
Blends together the bits of two vectors under
 the control of a third, which supplies mask bits.
bitwiseBlend(Vector<Short>, short)
- Method in class jdk.incubator.vector.
ShortVector
Blends together the bits of two vectors under
 the control of a scalar, which supplies mask bits.
bitwiseBlend(Vector<Short>, Vector<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Blends together the bits of two vectors under
 the control of a third, which supplies mask bits.
black
- Static variable in class java.awt.
Color
The color black.
BLACK
- Static variable in class java.awt.
Color
The color black.
blend(byte, VectorMask<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(double, VectorMask<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(float, VectorMask<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(int, VectorMask<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(long, VectorMask<E>)
- Method in class jdk.incubator.vector.
Vector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(long, VectorMask<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(long, VectorMask<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(long, VectorMask<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(long, VectorMask<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(long, VectorMask<Long>)
- Method in class jdk.incubator.vector.
LongVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(long, VectorMask<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(short, VectorMask<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Replaces selected lanes of this vector with
 a scalar value
 under the control of a mask.
blend(Vector<E>, VectorMask<E>)
- Method in class jdk.incubator.vector.
Vector
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
blend(Vector<Byte>, VectorMask<Byte>)
- Method in class jdk.incubator.vector.
ByteVector
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
blend(Vector<Double>, VectorMask<Double>)
- Method in class jdk.incubator.vector.
DoubleVector
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
blend(Vector<Float>, VectorMask<Float>)
- Method in class jdk.incubator.vector.
FloatVector
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
blend(Vector<Integer>, VectorMask<Integer>)
- Method in class jdk.incubator.vector.
IntVector
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
blend(Vector<Long>, VectorMask<Long>)
- Method in class jdk.incubator.vector.
LongVector
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
blend(Vector<Short>, VectorMask<Short>)
- Method in class jdk.incubator.vector.
ShortVector
Replaces selected lanes of this vector with
 corresponding lanes from a second input vector
 under the control of a mask.
BLIT_SCROLL_MODE
- Static variable in class javax.swing.
JViewport
Use
graphics.copyArea
to implement scrolling.
Blob
- Interface in
java.sql
The representation (mapping) in
 the Java programming language of an SQL
BLOB
value.
BLOB
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
BLOB
.
BLOB
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred to
 as a type code, that identifies the generic SQL type
BLOB
.
block()
- Method in interface java.util.concurrent.
ForkJoinPool.ManagedBlocker
Possibly blocks the current thread, for example waiting for
 a lock or condition.
block(InetAddress)
- Method in class java.nio.channels.
MembershipKey
Block multicast datagrams from the given source address.
BLOCK
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
BlockTree
.
BLOCK_CIPHER
- Enum constant in enum class java.security.
CryptoPrimitive
Symmetric primitive: block cipher
BLOCK_DECREMENT
- Static variable in class java.awt.event.
AdjustmentEvent
The block decrement adjustment type.
BLOCK_ELEMENTS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Block Elements" Unicode character block.
BLOCK_INCREMENT
- Static variable in class java.awt.event.
AdjustmentEvent
The block increment adjustment type.
BlockAction()
- Constructor for class javax.swing.text.html.
HTMLDocument.HTMLReader.BlockAction
Constructs a
BlockAction
.
blockClose(HTML.Tag)
- Method in class javax.swing.text.html.
HTMLDocument.HTMLReader
Adds an instruction to the parse buffer to close out
 a block element of the given type.
BLOCKED
- Enum constant in enum class java.lang.
Thread.State
Thread state for a thread blocked waiting for a monitor lock.
BlockElement(Element, AttributeSet)
- Constructor for class javax.swing.text.html.
HTMLDocument.BlockElement
Constructs a composite element that initially contains
 no children.
blockIncrement
- Variable in class javax.swing.
JScrollBar
Stores the amount by which the value of the scrollbar is changed
 upon a block (usually "page") up/down request.
BlockingDeque<E>
- Interface in
java.util.concurrent
A
Deque
that additionally supports blocking operations that wait
 for the deque to become non-empty when retrieving an element, and wait for
 space to become available in the deque when storing an element.
blockingLock()
- Method in class java.nio.channels.
SelectableChannel
Retrieves the object upon which the
configureBlocking
and
register
methods synchronize.
blockingLock()
- Method in class java.nio.channels.spi.
AbstractSelectableChannel
Blocking mode
- Search tag in class java.nio.channels.SelectableChannel
Section
BlockingQueue<E>
- Interface in
java.util.concurrent
A
Queue
that additionally supports operations that wait for
 the queue to become non-empty when retrieving an element, and wait
 for space to become available in the queue when storing an element.
blockOpen(HTML.Tag, MutableAttributeSet)
- Method in class javax.swing.text.html.
HTMLDocument.HTMLReader
Adds an instruction to the parse buffer to create a
 block element with the given attributes.
BLOCKQUOTE
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <blockquote>
BlockTagTree
- Interface in
com.sun.source.doctree
A tree node used as the base class for the different types of
 block tags.
BlockTree
- Interface in
com.sun.source.tree
A tree node for a statement block.
BlockView
- Class in
javax.swing.text.html
A view implementation to display a block (as a box)
 with CSS specifications.
BlockView(Element, int)
- Constructor for class javax.swing.text.html.
BlockView
Creates a new view that represents an
 html box.
BltBufferStrategy(int, BufferCapabilities)
- Constructor for class java.awt.
Component.BltBufferStrategy
Creates a new blt buffer strategy around a component
blue
- Static variable in class java.awt.
Color
The color blue.
BLUE
- Static variable in class java.awt.
Color
The color blue.
BLUECOMPONENT
- Static variable in class java.awt.color.
ICC_ProfileRGB
Used to get a gamma value or TRC for the blue component.
blur()
- Method in interface org.w3c.dom.html.
HTMLAnchorElement
Removes keyboard focus from this element.
blur()
- Method in interface org.w3c.dom.html.
HTMLInputElement
Removes keyboard focus from this element.
blur()
- Method in interface org.w3c.dom.html.
HTMLSelectElement
Removes keyboard focus from this element.
blur()
- Method in interface org.w3c.dom.html.
HTMLTextAreaElement
Removes keyboard focus from this element.
BMPImageWriteParam
- Class in
javax.imageio.plugins.bmp
A subclass of
ImageWriteParam
for encoding images in
 the BMP format.
BMPImageWriteParam()
- Constructor for class javax.imageio.plugins.bmp.
BMPImageWriteParam
Constructs an
BMPImageWriteParam
object with default
 values for all parameters and a
null Locale
.
BMPImageWriteParam(Locale)
- Constructor for class javax.imageio.plugins.bmp.
BMPImageWriteParam
Constructs a
BMPImageWriteParam
set to use a given
Locale
and with default values for all parameters.
BMP Metadata Format Specification
- Search tag in package javax.imageio.metadata
Section
body
- Variable in class javax.swing.text.html.parser.
DTD
The element corresponding to body.
body()
- Method in interface java.net.http.
HttpResponse
Returns the body.
BODY
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <body>
bodyPublisher()
- Method in class java.net.http.
HttpRequest
Returns an
Optional
containing the
HttpRequest.BodyPublisher
set on
 this request.
Bold
- Static variable in class javax.swing.text.
StyleConstants
Name of the bold attribute.
BOLD
- Static variable in class java.awt.
Font
The bold style constant.
BOLD_ACTION
- Static variable in class javax.swing.text.html.
HTMLEditorKit
The bold action identifier
BoldAction()
- Constructor for class javax.swing.text.
StyledEditorKit.BoldAction
Constructs a new BoldAction.
Book
- Class in
java.awt.print
The
Book
class provides a representation of a document in
 which pages may have different page formats and page painters.
Book()
- Constructor for class java.awt.print.
Book
Creates a new, empty
Book
.
Boolean
- Class in
java.lang
The Boolean class wraps a value of the primitive type
boolean
in an object.
Boolean(boolean)
- Constructor for class java.lang.
Boolean
Deprecated, for removal: This API element is subject to removal in a future version.
It is rarely appropriate to use this constructor. The static factory
Boolean.valueOf(boolean)
is generally a better choice, as it is
 likely to yield significantly better space and time performance.
 Also consider using the final fields
Boolean.TRUE
and
Boolean.FALSE
if possible.
Boolean(String)
- Constructor for class java.lang.
Boolean
Deprecated, for removal: This API element is subject to removal in a future version.
It is rarely appropriate to use this constructor.
 Use
Boolean.parseBoolean(String)
to convert a string to a
boolean
primitive, or use
Boolean.valueOf(String)
to convert a string to a
Boolean
object.
BOOLEAN
- Enum constant in enum class java.sql.
JDBCType
Identifies the generic SQL type
BOOLEAN
.
BOOLEAN
- Enum constant in enum class javax.lang.model.type.
TypeKind
The primitive type
boolean
.
BOOLEAN
- Enum constant in enum class javax.xml.xpath.
XPathEvaluationResult.XPathResultType
The XPath 1.0 boolean data type.
BOOLEAN
- Static variable in class java.sql.
Types
The constant in the Java programming language, sometimes referred to
 as a type code, that identifies the generic SQL type
BOOLEAN
.
BOOLEAN
- Static variable in class javax.management.openmbean.
SimpleType
The
SimpleType
instance describing values whose
 Java class name is
java.lang.Boolean
.
BOOLEAN
- Static variable in class javax.xml.xpath.
XPathConstants
The XPath 1.0 boolean data type.
BOOLEAN_LITERAL
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
LiteralTree
representing
 a boolean literal expression of type
boolean
.
BOOLEAN_TYPE
- Static variable in interface org.w3c.dom.xpath.
XPathResult
The result is a boolean as defined by .
BooleanControl
- Class in
javax.sound.sampled
A
BooleanControl
provides the ability to switch between two possible
 settings that affect a line's audio.
BooleanControl(BooleanControl.Type, boolean)
- Constructor for class javax.sound.sampled.
BooleanControl
Constructs a new boolean control object with the given parameters.
BooleanControl(BooleanControl.Type, boolean, String, String)
- Constructor for class javax.sound.sampled.
BooleanControl
Constructs a new boolean control object with the given parameters.
BooleanControl.Type
- Class in
javax.sound.sampled
An instance of the
BooleanControl.Type
class identifies one kind
 of boolean control.
BooleanFlag
- Annotation Interface in
jdk.jfr
Event field annotation, specifies that the value is a boolean flag, a
true
or
false
value.
BooleanSupplier
- Interface in
java.util.function
Represents a supplier of
boolean
-valued results.
BooleanType
- Interface in
com.sun.jdi
The type of all primitive
boolean
values
 accessed in the target VM.
booleanValue()
- Method in interface com.sun.jdi.connect.
Connector.BooleanArgument
Return the value of the argument as a boolean.
booleanValue()
- Method in interface com.sun.jdi.
PrimitiveValue
Converts this value to a BooleanValue and returns the result
 as a boolean.
booleanValue()
- Method in class java.lang.
Boolean
Returns the value of this
Boolean
object as a boolean
 primitive.
BooleanValue
- Interface in
com.sun.jdi
Provides access to a primitive
boolean
value in
 the target VM.
boot()
- Static method in class java.lang.
ModuleLayer
Returns the boot layer.
bootClassPath()
- Method in interface com.sun.jdi.
PathSearchingVirtualMachine
Get the boot class path for this virtual machine.
bootstrap(MethodHandles.Lookup, String, TypeDescriptor, Class<?>, String, MethodHandle...)
- Static method in class java.lang.runtime.
ObjectMethods
Bootstrap method to generate the
Object.equals(Object)
,
Object.hashCode()
, and
Object.toString()
methods, based
 on a description of the component names and accessor methods, for either
invokedynamic
call sites or dynamic constant pool entries.
Bootstrap
- Class in
com.sun.jdi
Initial class that provides access to the default implementation
 of JDI interfaces.
Bootstrap()
- Constructor for class com.sun.jdi.
Bootstrap
Deprecated, for removal: This API element is subject to removal in a future version.
bootstrapArgs()
- Method in class java.lang.constant.
DynamicCallSiteDesc
Returns
ConstantDesc
s describing the bootstrap arguments for the
invokedynamic
.
bootstrapArgs()
- Method in class java.lang.constant.
DynamicConstantDesc
Returns the bootstrap arguments for this constant.
bootstrapArgsList()
- Method in class java.lang.constant.
DynamicConstantDesc
Returns the bootstrap arguments for this constant as an immutable
List
.
bootstrapMethod()
- Method in class java.lang.constant.
DynamicCallSiteDesc
Returns a
MethodHandleDesc
describing the bootstrap method for
 the
invokedynamic
.
bootstrapMethod()
- Method in class java.lang.constant.
DynamicConstantDesc
Returns a
MethodHandleDesc
describing the bootstrap method for
 this constant.
BootstrapMethodError
- Exception Class in
java.lang
Thrown to indicate that an
invokedynamic
instruction or a dynamic
 constant failed to resolve its bootstrap method and arguments,
 or for
invokedynamic
instruction the bootstrap method has failed to
 provide a
call site
with a
target
of the correct
method type
,
 or for a dynamic constant the bootstrap method has failed to provide a
 constant value of the required type.
BootstrapMethodError()
- Constructor for exception class java.lang.
BootstrapMethodError
Constructs a
BootstrapMethodError
with no detail message.
BootstrapMethodError(String)
- Constructor for exception class java.lang.
BootstrapMethodError
Constructs a
BootstrapMethodError
with the specified
 detail message.
BootstrapMethodError(String, Throwable)
- Constructor for exception class java.lang.
BootstrapMethodError
Constructs a
BootstrapMethodError
with the specified
 detail message and cause.
BootstrapMethodError(Throwable)
- Constructor for exception class java.lang.
BootstrapMethodError
Constructs a
BootstrapMethodError
with the specified
 cause.
BOPOMOFO
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Bopomofo".
BOPOMOFO
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Bopomofo" Unicode character block.
BOPOMOFO_EXTENDED
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Bopomofo Extended" Unicode character block.
border
- Variable in class javax.swing.border.
TitledBorder
The border.
border
- Variable in class javax.swing.tree.
DefaultTreeCellEditor.DefaultTextField
Border to use.
Border
- Interface in
javax.swing.border
Interface describing an object capable of rendering a border
 around the edges of a swing component.
BORDER
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border".
BORDER
- Static variable in class javax.swing.text.html.
HTML.Attribute
Attribute "border"
BORDER_BOTTOM
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-bottom".
BORDER_BOTTOM_COLOR
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-bottom-color".
BORDER_BOTTOM_STYLE
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-bottom-style".
BORDER_BOTTOM_WIDTH
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-bottom-width".
BORDER_COLOR
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-color".
BORDER_LEFT
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-left".
BORDER_LEFT_COLOR
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "margin-right".
BORDER_LEFT_STYLE
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-left-style".
BORDER_LEFT_WIDTH
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-left-width".
BORDER_PAINTED_CHANGED_PROPERTY
- Static variable in class javax.swing.
AbstractButton
Identifies a change to having the border drawn,
 or having it not drawn.
BORDER_PAINTED_FLAT_CHANGED_PROPERTY
- Static variable in class javax.swing.
JCheckBox
Identifies a change to the flat property.
BORDER_RIGHT
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-right".
BORDER_RIGHT_COLOR
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-right-color".
BORDER_RIGHT_STYLE
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-right-style".
BORDER_RIGHT_WIDTH
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-right-width".
BORDER_STYLE
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-style".
BORDER_TOP
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-top".
BORDER_TOP_COLOR
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-top-color".
BORDER_TOP_STYLE
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-top-style".
BORDER_TOP_WIDTH
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-top-width".
BORDER_WIDTH
- Static variable in class javax.swing.text.html.
CSS.Attribute
CSS attribute "border-width".
BorderFactory
- Class in
javax.swing
Factory class for vending standard
Border
objects.
borderInsets
- Static variable in class javax.swing.plaf.metal.
MetalBorders.ButtonBorder
The border insets.
borderInsets
- Static variable in class javax.swing.plaf.metal.
MetalBorders.MenuBarBorder
The border insets.
borderInsets
- Static variable in class javax.swing.plaf.metal.
MetalBorders.MenuItemBorder
The border insets.
borderInsets
- Static variable in class javax.swing.plaf.metal.
MetalBorders.PopupMenuBorder
The border insets.
BorderLayout
- Class in
java.awt
A border layout lays out a container, arranging and resizing
 its components to fit in five regions:
 north, south, east, west, and center.
BorderLayout()
- Constructor for class java.awt.
BorderLayout
Constructs a new border layout with
 no gaps between components.
BorderLayout(int, int)
- Constructor for class java.awt.
BorderLayout
Constructs a border layout with the specified gaps
 between components.
borderListener
- Variable in class javax.swing.plaf.basic.
BasicInternalFrameUI
Border listener
BorderListener()
- Constructor for class javax.swing.plaf.basic.
BasicInternalFrameUI.BorderListener
Constructs a
BorderListener
.
borderSelectionColor
- Variable in class javax.swing.tree.
DefaultTreeCellEditor
True if the border selection color should be drawn.
borderSelectionColor
- Variable in class javax.swing.tree.
DefaultTreeCellRenderer
Color to use for the focus indicator when the node has focus.
BorderUIResource
- Class in
javax.swing.plaf
A Border wrapper class which implements UIResource.
BorderUIResource(Border)
- Constructor for class javax.swing.plaf.
BorderUIResource
Creates a UIResource border object which wraps
 an existing Border instance.
BorderUIResource.BevelBorderUIResource
- Class in
javax.swing.plaf
A bevel border UI resource.
BorderUIResource.CompoundBorderUIResource
- Class in
javax.swing.plaf
A compound border UI resource.
BorderUIResource.EmptyBorderUIResource
- Class in
javax.swing.plaf
An empty border UI resource.
BorderUIResource.EtchedBorderUIResource
- Class in
javax.swing.plaf
An etched border UI resource.
BorderUIResource.LineBorderUIResource
- Class in
javax.swing.plaf
A line border UI resource.
BorderUIResource.MatteBorderUIResource
- Class in
javax.swing.plaf
A matte border UI resource.
BorderUIResource.TitledBorderUIResource
- Class in
javax.swing.plaf
A titled border UI resource.
BOTH
- Static variable in class java.awt.
GridBagConstraints
Resize the component both horizontally and vertically.
bottom
- Variable in class java.awt.
Insets
The inset from the bottom.
bottom
- Variable in class javax.swing.border.
EmptyBorder
The bottom inset of the border.
BOTTOM
- Static variable in class javax.print.attribute.standard.
MediaTray
The bottom input tray in the printer.
BOTTOM
- Static variable in class javax.swing.border.
TitledBorder
Position the title in the middle of the border's bottom line.
BOTTOM
- Static variable in class javax.swing.
JSplitPane
Used to add a
Component
below the other
Component
.
BOTTOM
- Static variable in interface javax.swing.
SwingConstants
Box-orientation constant used to specify the bottom of a box.
BOTTOM_ALIGNMENT
- Static variable in class java.awt.
Component
Ease-of-use constant for
getAlignmentY
.
BOTTOM_ALIGNMENT
- Static variable in class java.awt.font.
GraphicAttribute
Aligns bottom of graphic to bottom of line.
bound()
- Element in annotation interface java.beans.
BeanProperty
The value that indicates whether the annotated property can be
 a
bound
property or not.
BOUND_SERVER_NAME
- Static variable in class javax.security.sasl.
Sasl
The name of a property that specifies the bound server name for
 an unbound server.
BoundedRangeModel
- Interface in
javax.swing
Defines the data model used by components like
Slider
s
 and
ProgressBar
s.
bounds
- Variable in class java.awt.
Polygon
The bounds of this
Polygon
.
bounds()
- Method in class java.awt.
Component
Deprecated.
As of JDK version 1.1,
 replaced by
getBounds()
.
Box
- Class in
javax.swing
A lightweight container
 that uses a BoxLayout object as its layout manager.
Box(int)
- Constructor for class javax.swing.
Box
Creates a
Box
that displays its components
 along the specified axis.
BOX_DRAWING
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Box Drawing" Unicode character block.
Box.AccessibleBox
- Class in
javax.swing
This class implements accessibility support for the
Box
class.
Box.Filler
- Class in
javax.swing
An implementation of a lightweight component that participates in
 layout but has no view.
Box.Filler.AccessibleBoxFiller
- Class in
javax.swing
This class implements accessibility support for the
Box.Filler
class.
boxed()
- Method in interface java.util.stream.
DoubleStream
Returns a
Stream
consisting of the elements of this stream,
 boxed to
Double
.
boxed()
- Method in interface java.util.stream.
IntStream
Returns a
Stream
consisting of the elements of this stream,
 each boxed to an
Integer
.
boxed()
- Method in interface java.util.stream.
LongStream
Returns a
Stream
consisting of the elements of this stream,
 each boxed to a
Long
.
boxedClass(PrimitiveType)
- Method in interface javax.lang.model.util.
Types
Returns the class of a boxed value of the primitive type argument.
BoxLayout
- Class in
javax.swing
A layout manager that allows multiple components to be laid out either
 vertically or horizontally.
BoxLayout(Container, int)
- Constructor for class javax.swing.
BoxLayout
Creates a layout manager that will lay out components along the
 given axis.
boxRect
- Variable in class javax.swing.plaf.basic.
BasicProgressBarUI
Used to hold the location and size of the bouncing box (returned
 by getBox) to be painted.
BoxView
- Class in
javax.swing.text
A view that arranges its children into a box shape by tiling
 its children along an axis.
BoxView(Element, int)
- Constructor for class javax.swing.text.
BoxView
Constructs a
BoxView
.
BR
- Static variable in class javax.swing.text.html.
HTML.Tag
Tag <br>
BRAHMI
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Brahmi".
BRAHMI
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Brahmi" Unicode character block.
BRAILLE
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Braille".
BRAILLE_PATTERNS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Braille Patterns" Unicode character block.
branch(Association)
- Method in class com.sun.nio.sctp.
SctpMultiChannel
Branches off an association.
BranchElement(Element, AttributeSet)
- Constructor for class javax.swing.text.
AbstractDocument.BranchElement
Constructs a composite element that initially contains
 no children.
breadthFirstEnumeration()
- Method in class javax.swing.tree.
DefaultMutableTreeNode
Creates and returns an enumeration that traverses the subtree rooted at
 this node in breadth-first order.
BREAK
- Enum constant in enum class com.sun.source.tree.
Tree.Kind
Used for instances of
BreakTree
.
BreakIterator
- Class in
java.text
The
BreakIterator
class implements methods for finding
 the location of boundaries in text.
BreakIterator()
- Constructor for class java.text.
BreakIterator
Constructor.
BreakIteratorProvider
- Class in
java.text.spi
An abstract class for service providers that
 provide concrete implementations of the
BreakIterator
class.
BreakIteratorProvider()
- Constructor for class java.text.spi.
BreakIteratorProvider
Sole constructor.
BreakpointEvent
- Interface in
com.sun.jdi.event
Notification of a breakpoint in the target VM.
BreakpointRequest
- Interface in
com.sun.jdi.request
Identifies a
Location
in the target VM at which
 execution should be stopped.
breakpointRequests()
- Method in interface com.sun.jdi.request.
EventRequestManager
Return an unmodifiable list of the enabled and disabled breakpoint requests.
breaksFlow()
- Method in class javax.swing.text.html.
HTML.Tag
Returns
true
if this tag causes a
 line break to the flow of data, otherwise returns
false
.
breaksFlow()
- Method in class javax.swing.text.html.parser.
TagElement
Returns
true
if this tag causes a
 line break to the flow of data, otherwise returns
false
.
BreakTree
- Interface in
com.sun.source.tree
A tree node for a
break
statement.
breakView(int, float, Shape)
- Method in class javax.swing.text.
ParagraphView
Breaks this view on the given axis at the given length.
breakView(int, int, float, float)
- Method in class javax.swing.text.
GlyphView
Breaks this view on the given axis at the given length.
breakView(int, int, float, float)
- Method in class javax.swing.text.html.
InlineView
Tries to break this view on the given axis.
breakView(int, int, float, float)
- Method in class javax.swing.text.
View
Tries to break this view on the given axis.
BRIDGE
- Enum constant in enum class java.lang.reflect.
AccessFlag
The access flag
ACC_BRIDGE
with a mask value of
0x0040
BRIEF
- Static variable in class java.rmi.server.
LogStream
Deprecated.
log level constant (brief logging).
brighter()
- Method in class java.awt.
Color
Creates a new
Color
that is a brighter version of this
Color
.
broadcast(byte)
- Method in class jdk.incubator.vector.
ByteVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(double)
- Method in class jdk.incubator.vector.
DoubleVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(float)
- Method in class jdk.incubator.vector.
FloatVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(int)
- Method in class jdk.incubator.vector.
IntVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(long)
- Method in class jdk.incubator.vector.
ByteVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(long)
- Method in class jdk.incubator.vector.
DoubleVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(long)
- Method in class jdk.incubator.vector.
FloatVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(long)
- Method in class jdk.incubator.vector.
IntVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(long)
- Method in class jdk.incubator.vector.
LongVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(long)
- Method in class jdk.incubator.vector.
ShortVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(long)
- Method in class jdk.incubator.vector.
Vector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(long)
- Method in interface jdk.incubator.vector.
VectorSpecies
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(short)
- Method in class jdk.incubator.vector.
ShortVector
Returns a vector of the same species as this one
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Byte>, byte)
- Static method in class jdk.incubator.vector.
ByteVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Byte>, long)
- Static method in class jdk.incubator.vector.
ByteVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Double>, double)
- Static method in class jdk.incubator.vector.
DoubleVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Double>, long)
- Static method in class jdk.incubator.vector.
DoubleVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Float>, float)
- Static method in class jdk.incubator.vector.
FloatVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Float>, long)
- Static method in class jdk.incubator.vector.
FloatVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Integer>, int)
- Static method in class jdk.incubator.vector.
IntVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Integer>, long)
- Static method in class jdk.incubator.vector.
IntVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Long>, long)
- Static method in class jdk.incubator.vector.
LongVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Short>, long)
- Static method in class jdk.incubator.vector.
ShortVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
broadcast(VectorSpecies<Short>, short)
- Static method in class jdk.incubator.vector.
ShortVector
Returns a vector of the given species
 where all lane elements are set to
 the primitive value
e
.
BrokenBarrierException
- Exception Class in
java.util.concurrent
Exception thrown when a thread tries to wait upon a barrier that is
 in a broken state, or which enters the broken state while the thread
 is waiting.
BrokenBarrierException()
- Constructor for exception class java.util.concurrent.
BrokenBarrierException
Constructs a
BrokenBarrierException
with no specified detail
 message.
BrokenBarrierException(String)
- Constructor for exception class java.util.concurrent.
BrokenBarrierException
Constructs a
BrokenBarrierException
with the specified
 detail message.
browse(URI)
- Method in class java.awt.
Desktop
Launches the default browser to display a
URI
.
BROWSE
- Enum constant in enum class java.awt.
Desktop.Action
Represents a "browse" action.
BROWSE_FILE_DIR
- Enum constant in enum class java.awt.
Desktop.Action
Represents a browse file directory
browseFileDirectory(File)
- Method in class java.awt.
Desktop
Opens a folder containing the
file
and selects it
 in a default system file manager.
BSM_CLASS_DATA
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
MethodHandles.classData
BSM_CLASS_DATA_AT
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
MethodHandles.classDataAt
BSM_ENUM_CONSTANT
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.enumConstant
BSM_EXPLICIT_CAST
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.explicitCast
BSM_GET_STATIC_FINAL
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.getStaticFinal
BSM_INVOKE
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.invoke
BSM_NULL_CONSTANT
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.nullConstant
BSM_PRIMITIVE_CLASS
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.primitiveClass
BSM_VARHANDLE_ARRAY
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.arrayVarHandle
BSM_VARHANDLE_FIELD
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.fieldVarHandle
BSM_VARHANDLE_STATIC_FIELD
- Static variable in class java.lang.constant.
ConstantDescs
MethodHandleDesc
representing
ConstantBootstraps.staticFieldVarHandle
BUBBLING_PHASE
- Static variable in interface org.w3c.dom.events.
Event
The current event phase is the bubbling phase.
buf
- Variable in class java.io.
BufferedInputStream
The internal buffer array where the data is stored.
buf
- Variable in class java.io.
BufferedOutputStream
The internal buffer where data is stored.
buf
- Variable in class java.io.
ByteArrayInputStream
An array of bytes that was provided
 by the creator of the stream.
buf
- Variable in class java.io.
ByteArrayOutputStream
The buffer where data is stored.
buf
- Variable in class java.io.
CharArrayReader
The character buffer.
buf
- Variable in class java.io.
CharArrayWriter
The buffer where data is stored.
buf
- Variable in class java.io.
PushbackInputStream
The pushback buffer.
buf
- Variable in class java.util.zip.
DeflaterInputStream
Input buffer for reading compressed data.
buf
- Variable in class java.util.zip.
DeflaterOutputStream
Output buffer for writing compressed data.
buf
- Variable in class java.util.zip.
InflaterInputStream
Input buffer for decompression.
buf
- Variable in class java.util.zip.
InflaterOutputStream
Output buffer for writing uncompressed data.
buffer
- Variable in class java.io.
PipedInputStream
The circular buffer into which incoming data is placed.
buffer
- Variable in class java.io.
StringBufferInputStream
Deprecated.
The string from which bytes are read.
buffer
- Variable in class javax.swing.text.
DefaultStyledDocument
The element buffer.
buffer()
- Method in class com.sun.nio.sctp.
SendFailedNotification
Returns the data that was to be sent.
Buffer
- Class in
java.nio
A container for data of a specific primitive type.
BUFFER_OVERFLOW
- Enum constant in enum class javax.net.ssl.
SSLEngineResult.Status
The
SSLEngine
was not able to process the
 operation because there are not enough bytes available in the
 destination buffer to hold the result.
BUFFER_SIZE_DEFAULT
- Static variable in class javax.swing.text.
DefaultStyledDocument
The default size of the initial content buffer.
BUFFER_UNDERFLOW
- Enum constant in enum class javax.net.ssl.
SSLEngineResult.Status
The
SSLEngine
was not able to unwrap the
 incoming data because there were not enough source bytes
 available to make a complete packet.
BufferCapabilities
- Class in
java.awt
Capabilities and properties of buffers.
BufferCapabilities(ImageCapabilities, ImageCapabilities, BufferCapabilities.FlipContents)
- Constructor for class java.awt.
BufferCapabilities
Creates a new object for specifying buffering capabilities
BufferCapabilities.FlipContents
- Class in
java.awt
A type-safe enumeration of the possible back buffer contents after
 page-flipping
BUFFERED_OPTION
- Static variable in class javax.swing.
DebugGraphics
Show buffered operations in a separate
Frame
.
BufferedImage
- Class in
java.awt.image
The
BufferedImage
subclass describes an
Image
with an accessible buffer of image data.
BufferedImage(int, int, int)
- Constructor for class java.awt.image.
BufferedImage
Constructs a
BufferedImage
of one of the predefined
 image types.
BufferedImage(int, int, int, IndexColorModel)
- Constructor for class java.awt.image.
BufferedImage
Constructs a
BufferedImage
of one of the predefined
 image types:
 TYPE_BYTE_BINARY or TYPE_BYTE_INDEXED.
BufferedImage(ColorModel, WritableRaster, boolean, Hashtable<?, ?>)
- Constructor for class java.awt.image.
BufferedImage
Constructs a new
BufferedImage
with a specified
ColorModel
and
Raster
.
BufferedImageFilter
- Class in
java.awt.image
The
BufferedImageFilter
class subclasses an
ImageFilter
to provide a simple means of
 using a single-source/single-destination image operator
 (
BufferedImageOp
) to filter a
BufferedImage
in the Image Producer/Consumer/Observer
 paradigm.
BufferedImageFilter(BufferedImageOp)
- Constructor for class java.awt.image.
BufferedImageFilter
Constructs a
BufferedImageFilter
with the
 specified single-source/single-destination operator.
BufferedImageOp
- Interface in
java.awt.image
This interface describes single-input/single-output
 operations performed on
BufferedImage
objects.
BufferedInputStream
- Class in
java.io
A
BufferedInputStream
adds
 functionality to another input stream-namely,
 the ability to buffer the input and to
 support the
mark
and
reset
methods.
BufferedInputStream(InputStream)
- Constructor for class java.io.
BufferedInputStream
Creates a
BufferedInputStream
and saves its  argument, the input stream
in
, for later use.
BufferedInputStream(InputStream, int)
- Constructor for class java.io.
BufferedInputStream
Creates a
BufferedInputStream
with the specified buffer size,
 and saves its  argument, the input stream
in
, for later use.
BufferedOutputStream
- Class in
java.io
The class implements a buffered output stream.
BufferedOutputStream(OutputStream)
- Constructor for class java.io.
BufferedOutputStream
Creates a new buffered output stream to write data to the
 specified underlying output stream.
BufferedOutputStream(OutputStream, int)
- Constructor for class java.io.
BufferedOutputStream
Creates a new buffered output stream to write data to the
 specified underlying output stream with the specified buffer
 size.
BufferedReader
- Class in
java.io
Reads text from a character-input stream, buffering characters so as to
 provide for the efficient reading of characters, arrays, and lines.
BufferedReader(Reader)
- Constructor for class java.io.
BufferedReader
Creates a buffering character-input stream that uses a default-sized
 input buffer.
BufferedReader(Reader, int)
- Constructor for class java.io.
BufferedReader
Creates a buffering character-input stream that uses an input buffer of
 the specified size.
BufferedWriter
- Class in
java.io
Writes text to a character-output stream, buffering characters so as to
 provide for the efficient writing of single characters, arrays, and strings.
BufferedWriter(Writer)
- Constructor for class java.io.
BufferedWriter
Creates a buffered character-output stream that uses a default-sized
 output buffer.
BufferedWriter(Writer, int)
- Constructor for class java.io.
BufferedWriter
Creates a new buffered character-output stream that uses an output
 buffer of the given size.
buffering(HttpResponse.BodyHandler<T>, int)
- Static method in class java.net.http.
HttpResponse.BodyHandlers
Returns a
BodyHandler
which, when invoked, returns a
buffering BodySubscriber
that buffers data before delivering it to the downstream subscriber.
buffering(HttpResponse.BodySubscriber<T>, int)
- Static method in class java.net.http.
HttpResponse.BodySubscribers
Returns a
BodySubscriber
which buffers data before delivering
 it to the given downstream subscriber.
BufferOverflowException
- Exception Class in
java.nio
Unchecked exception thrown when a relative
put
operation reaches
 the target buffer's limit.
BufferOverflowException()
- Constructor for exception class java.nio.
BufferOverflowException
Constructs an instance of this class.
BufferPoolMXBean
- Interface in
java.lang.management
The management interface for a buffer pool, for example a pool of
direct
or
mapped
buffers.
BufferStrategy
- Class in
java.awt.image
The
BufferStrategy
class represents the mechanism with which
 to organize complex memory on a particular
Canvas
or
Window
.
BufferStrategy()
- Constructor for class java.awt.image.
BufferStrategy
Constructor for subclasses to call.
BufferUnderflowException
- Exception Class in
java.nio
Unchecked exception thrown when a relative
get
operation reaches
 the source buffer's limit.
BufferUnderflowException()
- Constructor for exception class java.nio.
BufferUnderflowException
Constructs an instance of this class.
BUGINESE
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Buginese".
BUGINESE
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Buginese" Unicode character block.
BUHID
- Enum constant in enum class java.lang.
Character.UnicodeScript
Unicode script "Buhid".
BUHID
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Buhid" Unicode character block.
build()
- Method in class java.lang.module.
ModuleDescriptor.Builder
Builds and returns a
ModuleDescriptor
from its components.
build()
- Method in class java.lang.
Runtime.Version
Returns the
build number
.
build()
- Method in interface java.net.http.
HttpClient.Builder
Returns a new
HttpClient
built from the current state of this
 builder.
build()
- Method in interface java.net.http.
HttpRequest.Builder
Builds and returns an
HttpRequest
.
build()
- Method in class java.nio.file.attribute.
AclEntry.Builder
Constructs an
AclEntry
from the components of this builder.
build()
- Method in interface java.sql.
ConnectionBuilder
Returns an instance of the object defined by this builder.
build()
- Method in interface java.sql.
ShardingKeyBuilder
Returns an instance of the object defined by this builder.
build()
- Method in class java.util.
Calendar.Builder
Returns a
Calendar
built from the parameters set by the
 setter methods.
build()
- Method in class java.util.
Locale.Builder
Returns an instance of
Locale
obtained from the fields set
 on this builder.
build()
- Method in interface java.util.stream.
DoubleStream.Builder
Builds the stream, transitioning this builder to the built state.
build()
- Method in interface java.util.stream.
IntStream.Builder
Builds the stream, transitioning this builder to the built state.
build()
- Method in interface java.util.stream.
LongStream.Builder
Builds the stream, transitioning this builder to the built state.
build()
- Method in interface java.util.stream.
Stream.Builder
Builds the stream, transitioning this builder to the built state.
build()
- Method in interface javax.sql.
PooledConnectionBuilder
Returns an instance of the object defined by this builder.
build()
- Method in interface javax.sql.
XAConnectionBuilder
Returns an instance of the object defined by this builder.
build()
- Method in class javax.xml.catalog.
CatalogFeatures.Builder
Returns a CatalogFeatures object built by this builder.
build()
- Method in class jdk.jshell.
JShell.Builder
Builds a JShell state engine.
build()
- Method in class jdk.security.jarsigner.
JarSigner.Builder
Builds a
JarSigner
object from the parameters set by the
 setter methods.
build(CertPathParameters)
- Method in class java.security.cert.
CertPathBuilder
Attempts to build a certification path using the specified algorithm
 parameter set.
buildAsync(URI, WebSocket.Listener)
- Method in interface java.net.http.
WebSocket.Builder
Builds a
WebSocket
connected to the given
URI
and
 associated with the given
Listener
.
buildChooser()
- Method in class javax.swing.colorchooser.
AbstractColorChooserPanel
Builds a new chooser panel.
builder()
- Static method in interface java.util.stream.
DoubleStream
Returns a builder for a
DoubleStream
.
builder()
- Static method in interface java.util.stream.
IntStream
Returns a builder for an
IntStream
.
builder()
- Static method in interface java.util.stream.
LongStream
Returns a builder for a
LongStream
.
builder()
- Static method in interface java.util.stream.
Stream
Returns a builder for a
Stream
.
builder()
- Static method in class javax.xml.catalog.
CatalogFeatures
Returns an instance of the builder for creating the CatalogFeatures object.
builder()
- Static method in class jdk.jshell.
JShell
Factory method for
JShell.Builder
which, in-turn, is used
 for creating instances of
JShell
.
builder()
- Static method in interface jdk.jshell.tool.
JavaShellToolBuilder
Create a builder for launching the JDK jshell tool.
Builder
- Search tag in class java.util.Locale
Section
Builder()
- Constructor for class java.security.
KeyStore.Builder
Construct a new
Builder
.
Builder()
- Constructor for class java.util.
Calendar.Builder
Constructs a
Calendar.Builder
.
Builder()
- Constructor for class java.util.
Locale.Builder
Constructs an empty Builder.
Builder(KeyStore.PrivateKeyEntry)
- Constructor for class jdk.security.jarsigner.
JarSigner.Builder
Creates a
JarSigner.Builder
object with
 a
KeyStore.PrivateKeyEntry
object.
Builder(PrivateKey, CertPath)
- Constructor for class jdk.security.jarsigner.
JarSigner.Builder
Creates a
JarSigner.Builder
object with a private key and
 a certification path.
builtinResolver()
- Method in interface java.net.spi.
InetAddressResolverProvider.Configuration
Returns the built-in
resolver
.
bulkRegister(int)
- Method in class java.util.concurrent.
Phaser
Adds the given number of new unarrived parties to this phaser.
burstStringInto(Container, String, int)
- Method in class javax.swing.plaf.basic.
BasicOptionPaneUI
Recursively creates new
JLabel
instances to represent
d
.
BUSY
- Static variable in class javax.accessibility.
AccessibleState
Indicates the current object is busy.
Button
- Class in
java.awt
This class creates a labeled button.
Button()
- Constructor for class java.awt.
Button
Constructs a button with an empty string for its label.
Button(String)
- Constructor for class java.awt.
Button
Constructs a button with the specified label.
BUTTON
- Static variable in class javax.swing.plaf.synth.
Region
Button region.
Button.AccessibleAWTButton
- Class in
java.awt
This class implements accessibility support for the
Button
class.
BUTTON1
- Static variable in class java.awt.event.
MouseEvent
Indicates mouse button #1; used by
MouseEvent.getButton()
.
BUTTON1_DOWN_MASK
- Static variable in class java.awt.event.
InputEvent
The Mouse Button1 extended modifier constant.
BUTTON1_MASK
- Static variable in class java.awt.event.
InputEvent
Deprecated.
It is recommended that BUTTON1_DOWN_MASK and
InputEvent.getModifiersEx()
be used instead
BUTTON2
- Static variable in class java.awt.event.
MouseEvent
Indicates mouse button #2; used by
MouseEvent.getButton()
.
BUTTON2_DOWN_MASK
- Static variable in class java.awt.event.
InputEvent
The Mouse Button2 extended modifier constant.
BUTTON2_MASK
- Static variable in class java.awt.event.
InputEvent
Deprecated.
It is recommended that BUTTON2_DOWN_MASK and
InputEvent.getModifiersEx()
be used instead. Note that
             BUTTON2_MASK has the same value as ALT_MASK.
BUTTON3
- Static variable in class java.awt.event.
MouseEvent
Indicates mouse button #3; used by
MouseEvent.getButton()
.
BUTTON3_DOWN_MASK
- Static variable in class java.awt.event.
InputEvent
The Mouse Button3 extended modifier constant.
BUTTON3_MASK
- Static variable in class java.awt.event.
InputEvent
Deprecated.
It is recommended that BUTTON3_DOWN_MASK and
InputEvent.getModifiersEx()
be used instead. Note that
             BUTTON3_MASK has the same value as META_MASK.
ButtonActionListener(int)
- Constructor for class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonActionListener
Constructs a new instance of
ButtonActionListener
.
ButtonAreaLayout(boolean, int)
- Constructor for class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonAreaLayout
Constructs a new instance of
ButtonAreaLayout
.
ButtonBorder()
- Constructor for class javax.swing.plaf.metal.
MetalBorders.ButtonBorder
Constructs a
ButtonBorder
.
ButtonBorder(Color, Color, Color, Color)
- Constructor for class javax.swing.plaf.basic.
BasicBorders.ButtonBorder
Constructs a new instance of a
ButtonBorder
.
ButtonGroup
- Class in
javax.swing
This class is used to create a multiple-exclusion scope for
 a set of buttons.
ButtonGroup()
- Constructor for class javax.swing.
ButtonGroup
Creates a new
ButtonGroup
.
buttonIndex
- Variable in class javax.swing.plaf.basic.
BasicOptionPaneUI.ButtonActionListener
The index of the button.
buttonListener
- Variable in class javax.swing.plaf.basic.
BasicScrollBarUI
Button listener
ButtonModel
- Interface in
javax.swing
State model for buttons.
Button Properties
- Search tag in package javax.swing.plaf.synth
Section
buttons
- Variable in class javax.swing.
ButtonGroup
The list of buttons participating in this group.
ButtonUI
- Class in
javax.swing.plaf
Pluggable look and feel interface for JButton.
ButtonUI()
- Constructor for class javax.swing.plaf.
ButtonUI
Constructor for subclasses to call.
Byte
- Class in
java.lang
The
Byte
class wraps a value of primitive type
byte
in an object.
Byte(byte)
- Constructor for class java.lang.
Byte
Deprecated, for removal: This API element is subject to removal in a future version.
It is rarely appropriate to use this constructor. The static factory
Byte.valueOf(byte)
is generally a better choice, as it is
 likely to yield significantly better space and time performance.
Byte(String)
- Constructor for class java.lang.
Byte
Deprecated, for removal: This API element is subject to removal in a future version.
It is rarely appropriate to use this constructor.
 Use
Byte.parseByte(String)
to convert a string to a
byte
primitive, or use
Byte.valueOf(String)
to convert a string to a
Byte
object.
BYTE
- Enum constant in enum class javax.lang.model.type.
TypeKind
The primitive type
byte
.
BYTE
- Static variable in class javax.management.openmbean.
SimpleType
The
SimpleType
instance describing values whose
 Java class name is
java.lang.Byte
.
BYTE_ARRAY(String)
- Constructor for class javax.print.
DocFlavor.BYTE_ARRAY
Constructs a new doc flavor with the given MIME type and a print data
 representation class name of
"[B"
(byte array).
byteAlignment()
- Method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Returns the alignment constraint associated with this layout, expressed in bytes.
ByteArrayInputStream
- Class in
java.io
A
ByteArrayInputStream
contains
 an internal buffer that contains bytes that
 may be read from the stream.
ByteArrayInputStream(byte[])
- Constructor for class java.io.
ByteArrayInputStream
Creates a
ByteArrayInputStream
so that it  uses
buf
as its
 buffer array.
ByteArrayInputStream(byte[], int, int)
- Constructor for class java.io.
ByteArrayInputStream
Creates
ByteArrayInputStream
that uses
buf
as its
 buffer array.
ByteArrayOutputStream
- Class in
java.io
This class implements an output stream in which the data is
 written into a byte array.
ByteArrayOutputStream()
- Constructor for class java.io.
ByteArrayOutputStream
Creates a new
ByteArrayOutputStream
.
ByteArrayOutputStream(int)
- Constructor for class java.io.
ByteArrayOutputStream
Creates a new
ByteArrayOutputStream
, with a buffer capacity of
 the specified size, in bytes.
byteArrayViewVarHandle(Class<?>, ByteOrder)
- Static method in class java.lang.invoke.
MethodHandles
Produces a VarHandle giving access to elements of a
byte[]
array
 viewed as if it were a different primitive array type, such as
int[]
or
long[]
.
ByteBuffer
- Class in
java.nio
A byte buffer.
byteBufferViewVarHandle(Class<?>, ByteOrder)
- Static method in class java.lang.invoke.
MethodHandles
Produces a VarHandle giving access to elements of a
ByteBuffer
viewed as if it were an array of elements of a different primitive
 component type to that of
byte
, such as
int[]
or
long[]
.
ByteChannel
- Interface in
java.nio.channels
A channel that can read and write bytes.
bytecodes()
- Method in interface com.sun.jdi.
Method
Returns an array containing the bytecodes for this method.
bytecodes()
- Method in class jdk.jshell.spi.
ExecutionControl.ClassBytecodes
The bytecodes for the class.
byteLength
- Variable in class javax.sound.midi.
MidiFileFormat
The length of the MIDI file in bytes.
ByteLookupTable
- Class in
java.awt.image
This class defines a lookup table object.
ByteLookupTable(int, byte[])
- Constructor for class java.awt.image.
ByteLookupTable
Constructs a ByteLookupTable object from an array
 of bytes representing a lookup table to be applied to all
 bands.
ByteLookupTable(int, byte[][])
- Constructor for class java.awt.image.
ByteLookupTable
Constructs a ByteLookupTable object from an array of byte
 arrays representing a lookup table for each
 band.
byteOffset(MemoryLayout.PathElement...)
- Method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Computes the offset, in bytes, of the layout selected by the given layout path, where the initial layout in the
 path is this layout.
byteOffsetHandle(MemoryLayout.PathElement...)
- Method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Creates a method handle that computes the offset, in bytes, of the layout selected
 by the given layout path, where the initial layout in the path is this layout.
byteOrder
- Variable in class javax.imageio.stream.
ImageInputStreamImpl
The byte order of the stream as an instance of the enumeration
 class
java.nio.ByteOrder
, where
ByteOrder.BIG_ENDIAN
indicates network byte order
 and
ByteOrder.LITTLE_ENDIAN
indicates the reverse
 order.
ByteOrder
- Class in
java.nio
A typesafe enumeration for byte orders.
bytes()
- Method in class com.sun.nio.sctp.
MessageInfo
Returns the number of bytes read for the received message.
BYTES
- Static variable in class java.lang.
Byte
The number of bytes used to represent a
byte
value in two's
 complement binary form.
BYTES
- Static variable in class java.lang.
Character
The number of bytes used to represent a
char
value in unsigned
 binary form.
BYTES
- Static variable in class java.lang.
Double
The number of bytes used to represent a
double
value.
BYTES
- Static variable in class java.lang.
Float
The number of bytes used to represent a
float
value.
BYTES
- Static variable in class java.lang.
Integer
The number of bytes used to represent an
int
value in two's
 complement binary form.
BYTES
- Static variable in class java.lang.
Long
The number of bytes used to represent a
long
value in two's
 complement binary form.
BYTES
- Static variable in class java.lang.
Short
The number of bytes used to represent a
short
value in two's
 complement binary form.
BYTES
- Static variable in annotation interface jdk.jfr.
DataAmount
Unit for bytes
bytesConsumed()
- Method in class javax.net.ssl.
SSLEngineResult
Returns the number of bytes consumed from the input buffer.
byteSize()
- Method in interface java.lang.foreign.
MemoryLayout
PREVIEW
Returns the layout size, in bytes.
byteSize()
- Method in interface java.lang.foreign.
MemorySegment
PREVIEW
Returns the size (in bytes) of this memory segment.
byteSize()
- Method in class jdk.incubator.vector.
Vector
Returns the total size, in bytes, of this vector.
bytesProduced()
- Method in class javax.net.ssl.
SSLEngineResult
Returns the number of bytes written to the output buffer.
bytesTransferred
- Variable in exception class java.io.
InterruptedIOException
Reports how many bytes had been transferred as part of the I/O
 operation before it was interrupted.
bytesWidth(byte[], int, int)
- Method in class java.awt.
FontMetrics
Returns the total advance width for showing the specified array
 of bytes in this
Font
.
ByteType
- Interface in
com.sun.jdi
The type of all primitive byte values accessed in
 the target VM.
byteValue()
- Method in interface com.sun.jdi.
PrimitiveValue
Converts this value to a ByteValue and returns the result
 as a byte.
byteValue()
- Method in class java.lang.
Byte
Returns the value of this
Byte
as a
byte
.
byteValue()
- Method in class java.lang.
Double
Returns the value of this
Double
as a
byte
after a narrowing primitive conversion.
byteValue()
- Method in class java.lang.
Float
Returns the value of this
Float
as a
byte
after
 a narrowing primitive conversion.
byteValue()
- Method in class java.lang.
Integer
Returns the value of this
Integer
as a
byte
after a narrowing primitive conversion.
byteValue()
- Method in class java.lang.
Long
Returns the value of this
Long
as a
byte
after
 a narrowing primitive conversion.
byteValue()
- Method in class java.lang.
Number
Returns the value of the specified number as a
byte
.
byteValue()
- Method in class java.lang.
Short
Returns the value of this
Short
as a
byte
after
 a narrowing primitive conversion.
ByteValue
- Interface in
com.sun.jdi
Provides access to a primitive
byte
value in the target VM.
byteValueExact()
- Method in class java.math.
BigDecimal
Converts this
BigDecimal
to a
byte
, checking
 for lost information.
byteValueExact()
- Method in class java.math.
BigInteger
Converts this
BigInteger
to a
byte
, checking
 for lost information.
ByteVector
- Class in
jdk.incubator.vector
A specialized
Vector
representing an ordered immutable sequence of
byte
values.
BYZANTINE_MUSICAL_SYMBOLS
- Static variable in class java.lang.
Character.UnicodeBlock
Constant for the "Byzantine Musical Symbols" Unicode character block.
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
|
System Properties
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.