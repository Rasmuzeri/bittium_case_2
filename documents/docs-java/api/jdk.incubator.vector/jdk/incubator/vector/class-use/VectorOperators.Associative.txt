Uses of Interface jdk.incubator.vector.VectorOperators.Associative (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
jdk.incubator.vector.VectorOperators.Associative
Packages that use
VectorOperators.Associative
Package
Description
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
Uses of
VectorOperators.Associative
in
jdk.incubator.vector
Fields in
jdk.incubator.vector
declared as
VectorOperators.Associative
Modifier and Type
Field
Description
static final
VectorOperators.Associative
VectorOperators.
ADD
Produce
a+b
.
static final
VectorOperators.Associative
VectorOperators.
AND
Produce
a&b
.
static final
VectorOperators.Associative
VectorOperators.
FIRST_NONZERO
Produce
bits(a)!=0?a:b
.
static final
VectorOperators.Associative
VectorOperators.
MAX
Produce
max(a,b)
.
static final
VectorOperators.Associative
VectorOperators.
MIN
Produce
min(a,b)
.
static final
VectorOperators.Associative
VectorOperators.
MUL
Produce
a*b
.
static final
VectorOperators.Associative
VectorOperators.
OR
Produce
a|b
.
static final
VectorOperators.Associative
VectorOperators.
XOR
Produce
a^b
.
Methods in
jdk.incubator.vector
with parameters of type
VectorOperators.Associative
Modifier and Type
Method
Description
abstract byte
ByteVector.
reduceLanes
(
VectorOperators.Associative
op)
Returns a value accumulated from all the lanes of this vector.
abstract byte
ByteVector.
reduceLanes
(
VectorOperators.Associative
op,
VectorMask
<
Byte
> m)
Returns a value accumulated from selected lanes of this vector,
 controlled by a mask.
abstract double
DoubleVector.
reduceLanes
(
VectorOperators.Associative
op)
Returns a value accumulated from all the lanes of this vector.
abstract double
DoubleVector.
reduceLanes
(
VectorOperators.Associative
op,
VectorMask
<
Double
> m)
Returns a value accumulated from selected lanes of this vector,
 controlled by a mask.
abstract float
FloatVector.
reduceLanes
(
VectorOperators.Associative
op)
Returns a value accumulated from all the lanes of this vector.
abstract float
FloatVector.
reduceLanes
(
VectorOperators.Associative
op,
VectorMask
<
Float
> m)
Returns a value accumulated from selected lanes of this vector,
 controlled by a mask.
abstract int
IntVector.
reduceLanes
(
VectorOperators.Associative
op)
Returns a value accumulated from all the lanes of this vector.
abstract int
IntVector.
reduceLanes
(
VectorOperators.Associative
op,
VectorMask
<
Integer
> m)
Returns a value accumulated from selected lanes of this vector,
 controlled by a mask.
abstract long
LongVector.
reduceLanes
(
VectorOperators.Associative
op)
Returns a value accumulated from all the lanes of this vector.
abstract long
LongVector.
reduceLanes
(
VectorOperators.Associative
op,
VectorMask
<
Long
> m)
Returns a value accumulated from selected lanes of this vector,
 controlled by a mask.
abstract short
ShortVector.
reduceLanes
(
VectorOperators.Associative
op)
Returns a value accumulated from all the lanes of this vector.
abstract short
ShortVector.
reduceLanes
(
VectorOperators.Associative
op,
VectorMask
<
Short
> m)
Returns a value accumulated from selected lanes of this vector,
 controlled by a mask.
abstract long
Vector.
reduceLanesToLong
(
VectorOperators.Associative
op)
Returns a value accumulated from all the lanes of this vector.
abstract long
Vector.
reduceLanesToLong
(
VectorOperators.Associative
op,
VectorMask
<
E
> m)
Returns a value accumulated from selected lanes of this vector,
 controlled by a mask.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.