Uses of Interface jdk.incubator.vector.VectorOperators.Ternary (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
jdk.incubator.vector.VectorOperators.Ternary
Packages that use
VectorOperators.Ternary
Package
Description
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
Uses of
VectorOperators.Ternary
in
jdk.incubator.vector
Fields in
jdk.incubator.vector
declared as
VectorOperators.Ternary
Modifier and Type
Field
Description
static final
VectorOperators.Ternary
VectorOperators.
BITWISE_BLEND
Produce
a^((a^b)&c)
.
static final
VectorOperators.Ternary
VectorOperators.
FMA
Produce
fma(a,b,c)
.
Methods in
jdk.incubator.vector
with parameters of type
VectorOperators.Ternary
Modifier and Type
Method
Description
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Ternary
op,
 byte e1,
 byte e2)
Combines the lane values of this vector
 with the values of two broadcast scalars.
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Ternary
op,
 byte e1,
 byte e2,
VectorMask
<
Byte
> m)
Combines the lane values of this vector
 with the values of two broadcast scalars,
 with selection of lane elements controlled by a mask.
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Ternary
op,
 byte e1,
Vector
<
Byte
> v2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Ternary
op,
 byte e1,
Vector
<
Byte
> v2,
VectorMask
<
Byte
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Byte
> v1,
 byte e2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Byte
> v1,
 byte e2,
VectorMask
<
Byte
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
ByteVector
ByteVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Byte
> v1,
Vector
<
Byte
> v2)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector.
abstract
ByteVector
ByteVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Byte
> v1,
Vector
<
Byte
> v2,
VectorMask
<
Byte
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Ternary
op,
 double e1,
 double e2)
Combines the lane values of this vector
 with the values of two broadcast scalars.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Ternary
op,
 double e1,
 double e2,
VectorMask
<
Double
> m)
Combines the lane values of this vector
 with the values of two broadcast scalars,
 with selection of lane elements controlled by a mask.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Ternary
op,
 double e1,
Vector
<
Double
> v2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Ternary
op,
 double e1,
Vector
<
Double
> v2,
VectorMask
<
Double
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Double
> v1,
 double e2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Double
> v1,
 double e2,
VectorMask
<
Double
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Double
> v1,
Vector
<
Double
> v2)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector.
abstract
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Double
> v1,
Vector
<
Double
> v2,
VectorMask
<
Double
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Ternary
op,
 float e1,
 float e2)
Combines the lane values of this vector
 with the values of two broadcast scalars.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Ternary
op,
 float e1,
 float e2,
VectorMask
<
Float
> m)
Combines the lane values of this vector
 with the values of two broadcast scalars,
 with selection of lane elements controlled by a mask.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Ternary
op,
 float e1,
Vector
<
Float
> v2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Ternary
op,
 float e1,
Vector
<
Float
> v2,
VectorMask
<
Float
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Float
> v1,
 float e2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Float
> v1,
 float e2,
VectorMask
<
Float
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
FloatVector
FloatVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Float
> v1,
Vector
<
Float
> v2)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector.
abstract
FloatVector
FloatVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Float
> v1,
Vector
<
Float
> v2,
VectorMask
<
Float
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
 int e1,
 int e2)
Combines the lane values of this vector
 with the values of two broadcast scalars.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
 int e1,
 int e2,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the values of two broadcast scalars,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
 int e1,
Vector
<
Integer
> v2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
 int e1,
Vector
<
Integer
> v2,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
 int e2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
 int e2,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
Vector
<
Integer
> v2)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Integer
> v1,
Vector
<
Integer
> v2,
VectorMask
<
Integer
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
final
LongVector
LongVector.
lanewise
(
VectorOperators.Ternary
op,
 long e1,
 long e2)
Combines the lane values of this vector
 with the values of two broadcast scalars.
final
LongVector
LongVector.
lanewise
(
VectorOperators.Ternary
op,
 long e1,
 long e2,
VectorMask
<
Long
> m)
Combines the lane values of this vector
 with the values of two broadcast scalars,
 with selection of lane elements controlled by a mask.
final
LongVector
LongVector.
lanewise
(
VectorOperators.Ternary
op,
 long e1,
Vector
<
Long
> v2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
LongVector
LongVector.
lanewise
(
VectorOperators.Ternary
op,
 long e1,
Vector
<
Long
> v2,
VectorMask
<
Long
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
LongVector
LongVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Long
> v1,
 long e2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
LongVector
LongVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Long
> v1,
 long e2,
VectorMask
<
Long
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
LongVector
LongVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Long
> v1,
Vector
<
Long
> v2)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector.
abstract
LongVector
LongVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Long
> v1,
Vector
<
Long
> v2,
VectorMask
<
Long
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Ternary
op,
 short e1,
 short e2)
Combines the lane values of this vector
 with the values of two broadcast scalars.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Ternary
op,
 short e1,
 short e2,
VectorMask
<
Short
> m)
Combines the lane values of this vector
 with the values of two broadcast scalars,
 with selection of lane elements controlled by a mask.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Ternary
op,
 short e1,
Vector
<
Short
> v2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Ternary
op,
 short e1,
Vector
<
Short
> v2,
VectorMask
<
Short
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Short
> v1,
 short e2)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Short
> v1,
 short e2,
VectorMask
<
Short
> m)
Combines the lane values of this vector
 with the values of another vector and a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
ShortVector
ShortVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Short
> v1,
Vector
<
Short
> v2)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector.
abstract
ShortVector
ShortVector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
Short
> v1,
Vector
<
Short
> v2,
VectorMask
<
Short
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
abstract
Vector
<
E
>
Vector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
E
> v1,
Vector
<
E
> v2)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector.
abstract
Vector
<
E
>
Vector.
lanewise
(
VectorOperators.Ternary
op,
Vector
<
E
> v1,
Vector
<
E
> v2,
VectorMask
<
E
> m)
Combines the corresponding lane values of this vector
 with the lanes of a second and a third input vector,
 with selection of lane elements controlled by a mask.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.