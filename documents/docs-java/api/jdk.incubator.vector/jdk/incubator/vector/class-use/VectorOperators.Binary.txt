Uses of Interface jdk.incubator.vector.VectorOperators.Binary (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
SEARCH
Uses of Interface
jdk.incubator.vector.VectorOperators.Binary
Packages that use
VectorOperators.Binary
Package
Description
jdk.incubator.vector
Incubating Feature.
Will be removed in a future release.
Uses of
VectorOperators.Binary
in
jdk.incubator.vector
Subinterfaces of
VectorOperators.Binary
in
jdk.incubator.vector
Modifier and Type
Interface
Description
static interface
VectorOperators.Associative
Type for all reassociating
lane-wise
binary operators,
 usable in expressions like
e = v0.
reduceLanes
(ADD)
.
Fields in
jdk.incubator.vector
declared as
VectorOperators.Binary
Modifier and Type
Field
Description
static final
VectorOperators.Binary
VectorOperators.
AND_NOT
Produce
a&~b
.
static final
VectorOperators.Binary
VectorOperators.
ASHR
Produce
a>>(n&(ESIZE*8-1))
.
static final
VectorOperators.Binary
VectorOperators.
ATAN2
Produce
atan2(a,b)
.
static final
VectorOperators.Binary
VectorOperators.
COMPRESS_BITS
Produce
compress(a,n)
.
static final
VectorOperators.Binary
VectorOperators.
DIV
Produce
a/b
.
static final
VectorOperators.Binary
VectorOperators.
EXPAND_BITS
Produce
expand(a,n)
.
static final
VectorOperators.Binary
VectorOperators.
HYPOT
Produce
hypot(a,b)
.
static final
VectorOperators.Binary
VectorOperators.
LSHL
Produce
a<<(n&(ESIZE*8-1))
.
static final
VectorOperators.Binary
VectorOperators.
LSHR
Produce
(a&EMASK)>>>(n&(ESIZE*8-1))
.
static final
VectorOperators.Binary
VectorOperators.
POW
Produce
pow(a,b)
.
static final
VectorOperators.Binary
VectorOperators.
ROL
Produce
rotateLeft(a,n)
.
static final
VectorOperators.Binary
VectorOperators.
ROR
Produce
rotateRight(a,n)
.
static final
VectorOperators.Binary
VectorOperators.
SUB
Produce
a-b
.
Methods in
jdk.incubator.vector
with parameters of type
VectorOperators.Binary
Modifier and Type
Method
Description
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Binary
op,
 byte e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Binary
op,
 byte e,
VectorMask
<
Byte
> m)
Combines the lane values of this vector
 with the value of a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Binary
op,
 long e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
ByteVector
ByteVector.
lanewise
(
VectorOperators.Binary
op,
 long e,
VectorMask
<
Byte
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
abstract
ByteVector
ByteVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Byte
> v)
Combines the corresponding lane values of this vector
 with those of a second input vector.
abstract
ByteVector
ByteVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Byte
> v,
VectorMask
<
Byte
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Binary
op,
 double e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Binary
op,
 double e,
VectorMask
<
Double
> m)
Combines the lane values of this vector
 with the value of a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Binary
op,
 long e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Binary
op,
 long e,
VectorMask
<
Double
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
abstract
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Double
> v)
Combines the corresponding lane values of this vector
 with those of a second input vector.
abstract
DoubleVector
DoubleVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Double
> v,
VectorMask
<
Double
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Binary
op,
 float e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Binary
op,
 float e,
VectorMask
<
Float
> m)
Combines the lane values of this vector
 with the value of a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Binary
op,
 long e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
FloatVector
FloatVector.
lanewise
(
VectorOperators.Binary
op,
 long e,
VectorMask
<
Float
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
abstract
FloatVector
FloatVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Float
> v)
Combines the corresponding lane values of this vector
 with those of a second input vector.
abstract
FloatVector
FloatVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Float
> v,
VectorMask
<
Float
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
 int e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
 int e,
VectorMask
<
Integer
> m)
Combines the lane values of this vector
 with the value of a broadcast scalar,
 with selection of lane elements controlled by a mask.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
 long e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
 long e,
VectorMask
<
Integer
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Integer
> v)
Combines the corresponding lane values of this vector
 with those of a second input vector.
abstract
IntVector
IntVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Integer
> v,
VectorMask
<
Integer
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
final
LongVector
LongVector.
lanewise
(
VectorOperators.Binary
op,
 long e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
LongVector
LongVector.
lanewise
(
VectorOperators.Binary
op,
 long e,
VectorMask
<
Long
> m)
Combines the lane values of this vector
 with the value of a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
LongVector
LongVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Long
> v)
Combines the corresponding lane values of this vector
 with those of a second input vector.
abstract
LongVector
LongVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Long
> v,
VectorMask
<
Long
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Binary
op,
 long e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Binary
op,
 long e,
VectorMask
<
Short
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Binary
op,
 short e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
final
ShortVector
ShortVector.
lanewise
(
VectorOperators.Binary
op,
 short e,
VectorMask
<
Short
> m)
Combines the lane values of this vector
 with the value of a broadcast scalar,
 with selection of lane elements controlled by a mask.
abstract
ShortVector
ShortVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Short
> v)
Combines the corresponding lane values of this vector
 with those of a second input vector.
abstract
ShortVector
ShortVector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
Short
> v,
VectorMask
<
Short
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
abstract
Vector
<
E
>
Vector.
lanewise
(
VectorOperators.Binary
op,
 long e)
Combines the lane values of this vector
 with the value of a broadcast scalar.
abstract
Vector
<
E
>
Vector.
lanewise
(
VectorOperators.Binary
op,
 long e,
VectorMask
<
E
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
abstract
Vector
<
E
>
Vector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
E
> v)
Combines the corresponding lane values of this vector
 with those of a second input vector.
abstract
Vector
<
E
>
Vector.
lanewise
(
VectorOperators.Binary
op,
Vector
<
E
> v,
VectorMask
<
E
> m)
Combines the corresponding lane values of this vector
 with those of a second input vector,
 with selection of lane elements controlled by a mask.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.