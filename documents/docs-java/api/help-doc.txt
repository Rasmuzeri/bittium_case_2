API Help (Java SE 21 & JDK 21)
JavaScript is disabled on your browser.
Skip navigation links
Java SE 21 & JDK 21
Overview
Module
Package
Class
Use
Tree
Preview
New
Deprecated
Index
Help
Help:
Navigation
Pages
Help:
Navigation
|
Pages
SEARCH
JavaDoc Help
Navigation
:
Search
Kinds of Pages
:
Overview
Module
Package
Class or Interface
Other Files
Use
Tree (Class Hierarchy)
Preview API
New API
Deprecated API
Constant Field Values
Serialized Form
System Properties
All Packages
All Classes and Interfaces
Index
Navigation
Starting from the
Overview
page, you can browse the documentation using the links in each page, and in the navigation bar at the top of each page. The
Index
and Search box allow you to navigate to specific declarations and summary pages, including:
All Packages
,
All Classes and Interfaces
Search
You can search for definitions of modules, packages, types, fields, methods, system properties and other terms defined in the API. These items can be searched using part or all of the name, optionally using "camelCase" abbreviations, or multiple search terms separated by whitespace. Some examples:
"j.l.obj"
matches "java.lang.Object"
"InpStr"
matches "java.io.InputStream"
"math exact long"
matches "java.lang.Math.absExact(long)"
Refer to the
Javadoc Search Specification
for a full description of search features.
Kinds of Pages
The following sections describe the different kinds of pages in this collection.
Overview
The
Overview
page is the front page of this API document and provides a list of all modules with a summary for each.  This page can also contain an overall description of the set of modules.
Module
Each module has a page that contains a list of its packages, dependencies on other modules, and services, with a summary for each. These pages may contain the following categories:
Packages
Modules
Services
Package
Each package has a page that contains a list of its classes and interfaces, with a summary for each. These pages may contain the following categories:
Interfaces
Classes
Enum Classes
Exception Classes
Annotation Interfaces
Class or Interface
Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable.
Class Inheritance Diagram
Direct Subclasses
All Known Subinterfaces
All Known Implementing Classes
Class or Interface Declaration
Class or Interface Description
Nested Class Summary
Enum Constant Summary
Field Summary
Property Summary
Constructor Summary
Method Summary
Required Element Summary
Optional Element Summary
Enum Constant Details
Field Details
Property Details
Constructor Details
Method Details
Element Details
Note:
Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.
The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer.
Other Files
Packages and modules may contain pages with additional information related to the declarations nearby.
Use
Each documented package, class and interface has its own Use page.  This page describes what packages, classes, methods, constructors and fields use any part of the given class or package. Given a class or interface A, its Use page includes subclasses of A, fields declared as A, methods that return A, and methods and constructors with parameters of type A.  You can access this page by first going to the package, class or interface, then clicking on the USE link in the navigation bar.
Tree (Class Hierarchy)
There is a
Class Hierarchy
page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with
java.lang.Object
. Interfaces do not inherit from
java.lang.Object
.
When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.
When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package.
Preview API
The
Preview API
page lists all of the Preview APIs. Preview APIs may be removed in future implementations.
New API
The
New API
page lists APIs that have been added in recent releases.
Deprecated API
The
Deprecated API
page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations.
Constant Field Values
The
Constant Field Values
page lists the static final fields and their values.
Serialized Form
Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking "Serialized Form" in the "See Also" section of the class description.
System Properties
The
System Properties
page lists references to system properties.
All Packages
The
All Packages
page contains an alphabetic index of all packages contained in the documentation.
All Classes and Interfaces
The
All Classes and Interfaces
page contains an alphabetic index of all classes and interfaces contained in the documentation, including annotation interfaces, enum classes, and record classes.
Index
The
Index
contains an alphabetic index of all classes, interfaces, constructors, methods, and fields in the documentation, as well as summary pages such as
All Packages
,
All Classes and Interfaces
.
This help file applies to API documentation generated by the standard doclet.
Report a bug or suggest an enhancement
For further API reference and developer documentation see the
Java SE Documentation
, which contains more detailed, developer-targeted descriptions with conceptual overviews, definitions of terms, workarounds, and working code examples.
Other versions.
Java is a trademark or registered trademark of Oracle and/or its affiliates in the US and other countries.
Copyright
Â© 1993, 2024, Oracle and/or its affiliates, 500 Oracle Parkway, Redwood Shores, CA 94065 USA.
All rights reserved. Use is subject to
license terms
and the
documentation redistribution policy
.